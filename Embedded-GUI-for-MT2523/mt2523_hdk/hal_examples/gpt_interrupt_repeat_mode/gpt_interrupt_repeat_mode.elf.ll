; ModuleID = './build/gpt_interrupt_repeat_mode.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.uart_callback_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %union.anon, %union.anon, %union.anon, i32, %union.anon, %union.anon, i32, %union.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { i32 }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon*, %struct.anon*, i8, %struct.vdma_config_t*, i8*, %struct.vdma_config_t*, i8*, i32, i8*, [8 x [2 x %struct.vdma_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.vdma_config_t = type { i32, i32 }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vdma_config_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.vdma_config_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon*, %struct.anon*, i8, %struct.vdma_config_t*, i8*, %struct.vdma_config_t*, i8*, i32, i8*, [8 x [2 x %struct.vdma_config_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %union.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !0
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !196
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !260
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !257
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !212
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !234
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !261
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !544
@.str = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.uart_callback_t] zeroinitializer, align 4, !dbg !655
@g_uart_dma_config = internal unnamed_addr global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !673
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !687
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !698
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !668
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !699
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !771
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !776
@.str.79 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.1.80 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.2 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !784
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !875
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !862
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.85 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !880
@.str.95 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.96 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !959
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !961
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !963
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !965
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !967
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !969
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !971
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !973
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !975
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !977
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !979
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1292
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1294
@.str.99 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.100 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !1303
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !1296
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !1304
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1356
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1359
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !1392
@nor_egid = dso_local local_unnamed_addr global %struct.anon* null, align 4, !dbg !1403
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1719
@RegionInfo = internal global [8 x %struct.vdma_config_t] zeroinitializer, align 4, !dbg !1590
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1618
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !1721
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !1428
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1614
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !1616
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !1440
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !1701
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !1704
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }] } }, align 4, !dbg !1734
@BlockLayout = internal unnamed_addr global %struct.vdma_config_t* null, align 4, !dbg !1593
@BankInfo = internal global [8 x %struct.vdma_config_t] zeroinitializer, align 4, !dbg !1606
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1577
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1581
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1579
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !1430
@.str.115 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.116 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.vdma_config_t] zeroinitializer, align 4, !dbg !1706
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !1585
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1602
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1604
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !1761
@.str.121 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.122 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !1821
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !1708
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1822
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1836
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1838
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1840
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1842
@.str.137 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.138 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !1844
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !1898
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !1900
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !1902
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1914
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1916
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1918
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !1920
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2023
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2025
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2027
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2029
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2031
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2033
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2035
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2037
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2039
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2041
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2043
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2045
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2047
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !2049
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2021
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !2070
@.str.149 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.150 = private unnamed_addr constant [20 x i8] c"welcome to main()\0D\0A\00", align 1
@gpt_port = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2082
@.str.2 = private unnamed_addr constant [28 x i8] c"\0D\0A---gpt_example begin---\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"\0D\0A---gpt init error, return = %d---\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [50 x i8] c"\0D\0A---gpt registercallback error, return = %d---\0D\0A\00", align 1
@.str.5 = private unnamed_addr constant [48 x i8] c"\0D\0A---gpt start timer ms error, return = %d---\0D\0A\00", align 1
@gpt_callback.last_time = internal unnamed_addr global i32 0, align 4, !dbg !2101
@gpt_callback.timeout_times = internal unnamed_addr global i32 0, align 4, !dbg !2103
@.str.6 = private unnamed_addr constant [47 x i8] c"\0D\0A---gpt %dth test fail, Expired at %d ms---\0D\0A\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"\0D\0A---gpt_example finished!!!---\0D\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"\0D\0Aexample project test fail.\0D\0A\00", align 1
@.str.9 = private unnamed_addr constant [43 x i8] c"\0D\0A---gpt stop timer fail, return = %d---\0D\0A\00", align 1
@.str.10 = private unnamed_addr constant [43 x i8] c"\0D\0A---hal_gpt_deinit fail, return = %d---\0D\0A\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"\0D\0Aexample project test success.\0D\0A\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"\0D\0A---gpt get free run count error, return = %d---\0D\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !2106
@end = external dso_local global i8, align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !2310
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2425
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 08:00:49 GMT +00:00\00", align 1, !dbg !2427
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2432
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !2438

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !2527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2531, metadata !DIExpression()), !dbg !2532
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !2533
  br i1 %2, label %3, label %26, !dbg !2535

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !2536
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !2538
  %6 = load i32, i32* %5, align 4, !dbg !2538
  %7 = icmp eq i32 %6, 1, !dbg !2539
  br i1 %7, label %26, label %8, !dbg !2540

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !2541
  %10 = load i8, i8* %9, align 4, !dbg !2541, !range !2542
  %11 = icmp eq i8 %10, 0, !dbg !2541
  br i1 %11, label %12, label %26, !dbg !2543

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !2544
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #21, !dbg !2545
  tail call void @gpt_open_clock_source() #21, !dbg !2546
  store i8 1, i8* %9, align 4, !dbg !2547
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !2548
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !2548
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !2549
  %18 = load volatile i32, i32* %17, align 4, !dbg !2550
  %19 = and i32 %18, -2, !dbg !2550
  store volatile i32 %19, i32* %17, align 4, !dbg !2550
  %20 = shl nuw i32 1, %0, !dbg !2551
  %21 = xor i32 %20, -1, !dbg !2552
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !2553
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !2554
  %24 = load volatile i32, i32* %23, align 4, !dbg !2555
  %25 = and i32 %24, %21, !dbg !2555
  store volatile i32 %25, i32* %23, align 4, !dbg !2555
  br label %26, !dbg !2556

26:                                               ; preds = %3, %8, %1, %12
  %27 = phi i32 [ 0, %12 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], !dbg !2532
  ret i32 %27, !dbg !2557
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #2 !dbg !2558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2562, metadata !DIExpression()), !dbg !2563
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !2564, !range !2542
  %3 = icmp ne i8 %2, 0, !dbg !2566
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !2567
  %7 = and i1 %5, %6, !dbg !2567
  ret i1 %7, !dbg !2568
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !2569 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2571, metadata !DIExpression()), !dbg !2572
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !2573
  br i1 %2, label %3, label %14, !dbg !2575

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !2576
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !2578
  %6 = load i32, i32* %5, align 4, !dbg !2578
  %7 = icmp eq i32 %6, 1, !dbg !2579
  br i1 %7, label %14, label %8, !dbg !2580

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !2581
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #21, !dbg !2582
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !2583
  store i8 0, i8* %11, align 4, !dbg !2584
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !2585
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !2585
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #21, !dbg !2586
  br label %14, !dbg !2587

14:                                               ; preds = %3, %1, %8
  %15 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !2572
  ret i32 %15, !dbg !2588
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !2589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2594, metadata !DIExpression()), !dbg !2596
  call void @llvm.dbg.value(metadata i32* %1, metadata !2595, metadata !DIExpression()), !dbg !2596
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !2597

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !2598
  %5 = icmp eq i32 %4, 1, !dbg !2602
  br i1 %5, label %8, label %6, !dbg !2603

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !2604
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #21, !dbg !2606
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !2607
  br label %8, !dbg !2608

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !2609
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #21, !dbg !2610
  br label %20, !dbg !2611

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !2612
  %13 = icmp eq i32 %12, 1, !dbg !2616
  br i1 %13, label %16, label %14, !dbg !2617

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !2618
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #21, !dbg !2620
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !2621
  br label %16, !dbg !2622

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !2623
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #21, !dbg !2624
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #21, !dbg !2625
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !2626
  store i32 %21, i32* %1, align 4, !dbg !2626
  br label %22, !dbg !2627

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !2596
  ret i32 %23, !dbg !2628
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #4 section ".tcm_code" !dbg !2629 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2633, metadata !DIExpression()), !dbg !2636
  call void @llvm.dbg.value(metadata i32 %1, metadata !2634, metadata !DIExpression()), !dbg !2636
  call void @llvm.dbg.value(metadata i32* %2, metadata !2635, metadata !DIExpression()), !dbg !2636
  %4 = icmp eq i32* %2, null, !dbg !2637
  br i1 %4, label %7, label %5, !dbg !2639

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !2640
  store i32 %6, i32* %2, align 4, !dbg !2640
  br label %7, !dbg !2642

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !2636
  ret i32 %8, !dbg !2643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #5 !dbg !2644 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2649, metadata !DIExpression()), !dbg !2651
  call void @llvm.dbg.value(metadata i32* %1, metadata !2650, metadata !DIExpression()), !dbg !2651
  %3 = icmp ugt i32 %0, 5, !dbg !2652
  br i1 %3, label %7, label %4, !dbg !2654

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !2655
  %6 = load i32, i32* %5, align 4, !dbg !2655
  store i32 %6, i32* %1, align 4, !dbg !2656
  br label %7, !dbg !2657

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !2651
  ret i32 %8, !dbg !2658
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !2659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2663, metadata !DIExpression()), !dbg !2666
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !2664, metadata !DIExpression()), !dbg !2666
  call void @llvm.dbg.value(metadata i8* %2, metadata !2665, metadata !DIExpression()), !dbg !2666
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !2667
  br i1 %4, label %5, label %18, !dbg !2669

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !2670
  %7 = load i32, i32* %6, align 4, !dbg !2670
  %8 = icmp eq i32 %7, 1, !dbg !2672
  br i1 %8, label %18, label %9, !dbg !2673

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !2674
  %11 = load i8, i8* %10, align 4, !dbg !2674, !range !2542
  %12 = icmp eq i8 %11, 1, !dbg !2675
  br i1 %12, label %13, label %18, !dbg !2676

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !2677
  br i1 %14, label %18, label %15, !dbg !2679

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !2680
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !2681
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !2682
  store i8* %2, i8** %17, align 4, !dbg !2683
  tail call void @gpt_nvic_register() #21, !dbg !2684
  br label %18, !dbg !2685

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !2666
  ret i32 %19, !dbg !2686
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !2687 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !2692, metadata !DIExpression()), !dbg !2696
  call void @llvm.dbg.value(metadata i32 %1, metadata !2693, metadata !DIExpression()), !dbg !2696
  call void @llvm.dbg.value(metadata i32 %2, metadata !2694, metadata !DIExpression()), !dbg !2696
  %5 = bitcast i32* %4 to i8*, !dbg !2697
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !2697
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2695, metadata !DIExpression()), !dbg !2698
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !2699
  br i1 %6, label %7, label %51, !dbg !2701

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !2702
  %9 = load i32, i32* %8, align 4, !dbg !2702
  %10 = icmp eq i32 %9, 1, !dbg !2704
  br i1 %10, label %51, label %11, !dbg !2705

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !2706
  %13 = load i8, i8* %12, align 4, !dbg !2706, !range !2542
  %14 = icmp eq i8 %13, 1, !dbg !2707
  br i1 %14, label %15, label %51, !dbg !2708

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !2709
  br i1 %16, label %51, label %17, !dbg !2711

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !2712
  store volatile i32 %18, i32* %4, align 4, !dbg !2713
  tail call void @gpt_open_clock_source() #21, !dbg !2714
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !2715
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2715
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !2716
  %22 = load volatile i32, i32* %21, align 4, !dbg !2717
  %23 = and i32 %22, -2, !dbg !2717
  store volatile i32 %23, i32* %21, align 4, !dbg !2717
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2718
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !2719
  %26 = load volatile i32, i32* %25, align 4, !dbg !2720
  %27 = and i32 %26, -2, !dbg !2720
  store volatile i32 %27, i32* %25, align 4, !dbg !2720
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2721
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !2722
  store volatile i32 16, i32* %29, align 4, !dbg !2723
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #21, !dbg !2724
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2725
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !2726
  store volatile i32 %30, i32* %32, align 4, !dbg !2727
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2728
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !2729
  store volatile i32 1, i32* %34, align 4, !dbg !2730
  %35 = shl i32 %2, 4, !dbg !2731
  %36 = or i32 %35, 2, !dbg !2732
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2733
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !2734
  store volatile i32 %36, i32* %38, align 4, !dbg !2735
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !2736

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !2737
  %43 = icmp eq i32 %42, 0, !dbg !2736
  br i1 %43, label %44, label %41, !dbg !2736, !llvm.loop !2738

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !2740
  %46 = load volatile i32, i32* %45, align 4, !dbg !2741
  %47 = or i32 %46, 1, !dbg !2741
  store volatile i32 %47, i32* %45, align 4, !dbg !2741
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2742
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !2743
  store volatile i32 1, i32* %49, align 4, !dbg !2744
  store i32 1, i32* %8, align 4, !dbg !2745
  %50 = load volatile i32, i32* %4, align 4, !dbg !2746
  tail call void @restore_interrupt_mask(i32 noundef %50) #21, !dbg !2747
  br label %51, !dbg !2748

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !2696
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !2749
  ret i32 %52, !dbg !2749
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2754, metadata !DIExpression()), !dbg !2755
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !2756
  %3 = icmp eq i32 %2, 1, !dbg !2758
  br i1 %3, label %6, label %4, !dbg !2759

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !2760
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #21, !dbg !2762
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !2763
  br label %6, !dbg !2764

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !2765
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #21, !dbg !2766
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #21, !dbg !2767
  ret i32 0, !dbg !2768
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !2769 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !2771, metadata !DIExpression()), !dbg !2775
  call void @llvm.dbg.value(metadata i32 %1, metadata !2772, metadata !DIExpression()), !dbg !2775
  call void @llvm.dbg.value(metadata i32 %2, metadata !2773, metadata !DIExpression()), !dbg !2775
  %5 = bitcast i32* %4 to i8*, !dbg !2776
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !2776
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2774, metadata !DIExpression()), !dbg !2777
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !2778
  br i1 %6, label %7, label %50, !dbg !2780

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !2781
  %9 = load i32, i32* %8, align 4, !dbg !2781
  %10 = icmp eq i32 %9, 1, !dbg !2783
  br i1 %10, label %50, label %11, !dbg !2784

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !2785
  %13 = load i8, i8* %12, align 4, !dbg !2785, !range !2542
  %14 = icmp eq i8 %13, 1, !dbg !2786
  br i1 %14, label %15, label %50, !dbg !2787

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !2788
  store i8 1, i8* %16, align 1, !dbg !2789
  %17 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !2790
  store volatile i32 %17, i32* %4, align 4, !dbg !2791
  tail call void @gpt_open_clock_source() #21, !dbg !2792
  %18 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !2793
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2793
  %20 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %19, i32 0, i32 2, !dbg !2794
  %21 = load volatile i32, i32* %20, align 4, !dbg !2795
  %22 = and i32 %21, -2, !dbg !2795
  store volatile i32 %22, i32* %20, align 4, !dbg !2795
  %23 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2796
  %24 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %23, i32 0, i32 0, !dbg !2797
  %25 = load volatile i32, i32* %24, align 4, !dbg !2798
  %26 = and i32 %25, -2, !dbg !2798
  store volatile i32 %26, i32* %24, align 4, !dbg !2798
  %27 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2799
  %28 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %27, i32 0, i32 1, !dbg !2800
  store volatile i32 12, i32* %28, align 4, !dbg !2801
  %29 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #21, !dbg !2802
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2803
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 6, !dbg !2804
  store volatile i32 %29, i32* %31, align 4, !dbg !2805
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2806
  %33 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %32, i32 0, i32 4, !dbg !2807
  store volatile i32 1, i32* %33, align 4, !dbg !2808
  %34 = shl i32 %2, 4, !dbg !2809
  %35 = or i32 %34, 2, !dbg !2810
  %36 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2811
  %37 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %36, i32 0, i32 0, !dbg !2812
  store volatile i32 %35, i32* %37, align 4, !dbg !2813
  %38 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4
  %39 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 5
  br label %40, !dbg !2814

40:                                               ; preds = %40, %15
  %41 = load volatile i32, i32* %39, align 4, !dbg !2815
  %42 = icmp eq i32 %41, 0, !dbg !2814
  br i1 %42, label %43, label %40, !dbg !2814, !llvm.loop !2816

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 0, !dbg !2818
  %45 = load volatile i32, i32* %44, align 4, !dbg !2819
  %46 = or i32 %45, 1, !dbg !2819
  store volatile i32 %46, i32* %44, align 4, !dbg !2819
  %47 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2820
  %48 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %47, i32 0, i32 2, !dbg !2821
  store volatile i32 1, i32* %48, align 4, !dbg !2822
  %49 = load volatile i32, i32* %4, align 4, !dbg !2823
  tail call void @restore_interrupt_mask(i32 noundef %49) #21, !dbg !2824
  store i32 1, i32* %8, align 4, !dbg !2825
  br label %50, !dbg !2826

50:                                               ; preds = %7, %11, %3, %43
  %51 = phi i32 [ 0, %43 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !2775
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !2827
  ret i32 %51, !dbg !2827
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2828 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2830, metadata !DIExpression()), !dbg !2831
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !2832
  %3 = icmp eq i32 %2, 1, !dbg !2834
  br i1 %3, label %6, label %4, !dbg !2835

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !2836
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #21, !dbg !2838
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !2839
  br label %6, !dbg !2840

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !2841
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #21, !dbg !2842
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #21, !dbg !2843
  ret i32 0, !dbg !2844
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !2845 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !2847, metadata !DIExpression()), !dbg !2849
  %3 = bitcast i32* %2 to i8*, !dbg !2850
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !2850
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2848, metadata !DIExpression()), !dbg !2851
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !2852
  br i1 %4, label %5, label %24, !dbg !2854

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !2855
  store volatile i32 %6, i32* %2, align 4, !dbg !2856
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !2857
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !2857
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !2858
  %10 = load volatile i32, i32* %9, align 4, !dbg !2859
  %11 = and i32 %10, -2, !dbg !2859
  store volatile i32 %11, i32* %9, align 4, !dbg !2859
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !2860
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !2861
  %14 = load volatile i32, i32* %13, align 4, !dbg !2862
  %15 = and i32 %14, -2, !dbg !2862
  store volatile i32 %15, i32* %13, align 4, !dbg !2862
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !2863
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !2864
  store volatile i32 1, i32* %17, align 4, !dbg !2865
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !2866
  store i32 0, i32* %18, align 4, !dbg !2867
  %19 = load volatile i32, i32* %2, align 4, !dbg !2868
  tail call void @restore_interrupt_mask(i32 noundef %19) #21, !dbg !2869
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !2870
  %21 = load i8, i8* %20, align 1, !dbg !2870, !range !2542
  %22 = icmp eq i8 %21, 0, !dbg !2870
  br i1 %22, label %24, label %23, !dbg !2872

23:                                               ; preds = %5
  store i8 0, i8* %20, align 1, !dbg !2873
  br label %24, !dbg !2875

24:                                               ; preds = %5, %23, %1
  %25 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !2849
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !2876
  ret i32 %25, !dbg !2876
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !2877 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !2881, metadata !DIExpression()), !dbg !2884
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !2885
  %3 = icmp ugt i32 %2, 31, !dbg !2887
  br i1 %3, label %13, label %4, !dbg !2888

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !2889
  br i1 %5, label %13, label %6, !dbg !2891

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !2892
  call void @llvm.dbg.value(metadata i32 %7, metadata !2883, metadata !DIExpression()), !dbg !2884
  %8 = tail call i32 @gpt_sw_get_free_timer() #21, !dbg !2893
  call void @llvm.dbg.value(metadata i32 %8, metadata !2882, metadata !DIExpression()), !dbg !2884
  %9 = or i32 %8, -559087616, !dbg !2894
  store i32 %9, i32* %0, align 4, !dbg !2895
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !2896
  store i8 1, i8* %10, align 4, !dbg !2897
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !2898
  %12 = add i32 %11, 1, !dbg !2898
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !2898
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !2899
  br label %13, !dbg !2900

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !2884
  ret i32 %14, !dbg !2901
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #7 !dbg !2902 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !2904, metadata !DIExpression()), !dbg !2906
  %3 = bitcast i32* %2 to i8*, !dbg !2907
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !2907
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2905, metadata !DIExpression()), !dbg !2908
  %4 = and i32 %0, -559087616, !dbg !2909
  %5 = icmp eq i32 %4, -559087616, !dbg !2911
  br i1 %5, label %6, label %24, !dbg !2912

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !2913
  store volatile i32 %7, i32* %2, align 4, !dbg !2914
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !2915
  %9 = icmp eq i32 %8, 0, !dbg !2917
  br i1 %9, label %24, label %10, !dbg !2918

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !2919
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !2921
  %13 = load i8, i8* %12, align 1, !dbg !2921, !range !2542
  %14 = icmp eq i8 %13, 0, !dbg !2921
  br i1 %14, label %15, label %24, !dbg !2922

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !2923
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !2925
  %18 = load i8, i8* %17, align 4, !dbg !2925, !range !2542
  %19 = icmp eq i8 %18, 1, !dbg !2926
  br i1 %19, label %20, label %24, !dbg !2927

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !2928
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !2929
  store i8 0, i8* %22, align 4, !dbg !2930
  %23 = add i32 %8, -1, !dbg !2931
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !2931
  br label %24, !dbg !2932

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !2906
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !2933
  ret i32 %25, !dbg !2933
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !2934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2938, metadata !DIExpression()), !dbg !2945
  call void @llvm.dbg.value(metadata i32 %1, metadata !2939, metadata !DIExpression()), !dbg !2945
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !2940, metadata !DIExpression()), !dbg !2945
  call void @llvm.dbg.value(metadata i8* %3, metadata !2941, metadata !DIExpression()), !dbg !2945
  %5 = and i32 %0, -559087616, !dbg !2946
  %6 = icmp ne i32 %5, -559087616, !dbg !2948
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !2949
  call void @llvm.dbg.value(metadata i32 %0, metadata !2944, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !2945
  br i1 %8, label %44, label %9, !dbg !2949

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !2950
  call void @llvm.dbg.value(metadata i32 %10, metadata !2944, metadata !DIExpression()), !dbg !2945
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !2951
  %12 = load i8, i8* %11, align 1, !dbg !2951, !range !2542
  %13 = icmp eq i8 %12, 0, !dbg !2951
  br i1 %13, label %14, label %44, !dbg !2953

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !2954
  %16 = load i8, i8* %15, align 4, !dbg !2954, !range !2542
  %17 = icmp eq i8 %16, 1, !dbg !2956
  br i1 %17, label %18, label %44, !dbg !2957

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !2958
  br i1 %19, label %44, label %20, !dbg !2960

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !2961
  call void @llvm.dbg.value(metadata i32 %21, metadata !2943, metadata !DIExpression()), !dbg !2945
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !2962
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !2963, !range !2542
  %23 = icmp eq i8 %22, 0, !dbg !2965
  br i1 %23, label %24, label %27, !dbg !2966

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #20, !dbg !2967
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #20, !dbg !2969
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !2970
  br label %27, !dbg !2971

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #20, !dbg !2972
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !2973, !range !2542
  %30 = icmp eq i8 %29, 0, !dbg !2975
  br i1 %30, label %31, label %34, !dbg !2976

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !2977
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #21, !dbg !2979
  call void @llvm.dbg.value(metadata i32 %33, metadata !2942, metadata !DIExpression()), !dbg !2945
  br label %34, !dbg !2980

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !2981
  call void @llvm.dbg.value(metadata i32 %35, metadata !2942, metadata !DIExpression()), !dbg !2945
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !2982
  %37 = add i32 %36, %35, !dbg !2982
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !2982
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !2983
  %39 = add i32 %38, 1, !dbg !2983
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !2983
  store i8 1, i8* %11, align 1, !dbg !2984
  %40 = add i32 %37, %1, !dbg !2985
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !2986
  store i32 %40, i32* %41, align 4, !dbg !2987
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !2988
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !2989
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !2990
  store i8* %3, i8** %43, align 4, !dbg !2991
  tail call void @gpt_sw_start_timer() #21, !dbg !2992
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !2993
  tail call void @restore_interrupt_mask(i32 noundef %21) #21, !dbg !2994
  br label %44, !dbg !2995

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !2945
  ret i32 %45, !dbg !2996
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !2997 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2999, metadata !DIExpression()), !dbg !3003
  %2 = and i32 %0, -559087616, !dbg !3004
  %3 = icmp eq i32 %2, -559087616, !dbg !3006
  br i1 %3, label %4, label %31, !dbg !3007

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !3008
  call void @llvm.dbg.value(metadata i32 %5, metadata !3002, metadata !DIExpression()), !dbg !3003
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !3009
  %7 = load i8, i8* %6, align 1, !dbg !3009, !range !2542
  %8 = icmp eq i8 %7, 1, !dbg !3011
  br i1 %8, label %9, label %31, !dbg !3012

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !3013
  %11 = load i8, i8* %10, align 4, !dbg !3013, !range !2542
  %12 = icmp eq i8 %11, 1, !dbg !3015
  br i1 %12, label %13, label %31, !dbg !3016

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3017
  call void @llvm.dbg.value(metadata i32 %14, metadata !3001, metadata !DIExpression()), !dbg !3003
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3018
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #20, !dbg !3019
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3020
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3021, !range !2542
  %17 = icmp eq i8 %16, 0, !dbg !3023
  br i1 %17, label %18, label %21, !dbg !3024

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3025
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #21, !dbg !3027
  call void @llvm.dbg.value(metadata i32 %20, metadata !3000, metadata !DIExpression()), !dbg !3003
  br label %21, !dbg !3028

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !3029
  call void @llvm.dbg.value(metadata i32 %22, metadata !3000, metadata !DIExpression()), !dbg !3003
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3030
  %24 = add i32 %23, %22, !dbg !3030
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3030
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3031
  %26 = add i32 %25, -1, !dbg !3031
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3031
  store i8 0, i8* %6, align 1, !dbg !3032
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3033
  %28 = icmp eq i32 %27, 0, !dbg !3035
  br i1 %28, label %30, label %29, !dbg !3036

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #21, !dbg !3037
  br label %30, !dbg !3039

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3040
  tail call void @restore_interrupt_mask(i32 noundef %14) #21, !dbg !3041
  br label %31, !dbg !3042

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !3003
  ret i32 %32, !dbg !3043
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !3044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3048, metadata !DIExpression()), !dbg !3053
  call void @llvm.dbg.value(metadata i32* %1, metadata !3049, metadata !DIExpression()), !dbg !3053
  %3 = and i32 %0, -559087616, !dbg !3054
  %4 = icmp eq i32 %3, -559087616, !dbg !3056
  br i1 %4, label %5, label %20, !dbg !3057

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !3058
  call void @llvm.dbg.value(metadata i32 %6, metadata !3052, metadata !DIExpression()), !dbg !3053
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !3059
  %8 = load i8, i8* %7, align 4, !dbg !3059, !range !2542
  %9 = icmp eq i8 %8, 1, !dbg !3061
  br i1 %9, label %10, label %20, !dbg !3062

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3063
  call void @llvm.dbg.value(metadata i32 %11, metadata !3051, metadata !DIExpression()), !dbg !3053
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3064
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3065
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !3066
  %15 = load volatile i32, i32* %14, align 4, !dbg !3066
  %16 = add i32 %15, %12, !dbg !3067
  call void @llvm.dbg.value(metadata i32 %16, metadata !3050, metadata !DIExpression()), !dbg !3053
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !3068
  %18 = load i32, i32* %17, align 4, !dbg !3068
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !3070
  store i32 %19, i32* %1, align 4, !dbg !3071
  tail call void @restore_interrupt_mask(i32 noundef %11) #21, !dbg !3072
  br label %20, !dbg !3073

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !3053
  ret i32 %21, !dbg !3074
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 section ".tcm_code" !dbg !3075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3079, metadata !DIExpression()), !dbg !3086
  call void @llvm.dbg.value(metadata i32 %1, metadata !3080, metadata !DIExpression()), !dbg !3086
  call void @llvm.dbg.value(metadata i32 %2, metadata !3081, metadata !DIExpression()), !dbg !3086
  %4 = and i32 %0, 65535, !dbg !3087
  %5 = mul i32 %4, %1, !dbg !3088
  call void @llvm.dbg.value(metadata i32 %5, metadata !3082, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3086
  %6 = lshr i32 %0, 16, !dbg !3089
  %7 = mul i32 %6, %1, !dbg !3090
  call void @llvm.dbg.value(metadata i32 %7, metadata !3082, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3086
  %8 = and i32 %5, 65535, !dbg !3091
  call void @llvm.dbg.value(metadata i32 %8, metadata !3084, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3086
  %9 = lshr i32 %5, 16, !dbg !3092
  %10 = add i32 %9, %7, !dbg !3093
  call void @llvm.dbg.value(metadata i32 %10, metadata !3084, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3086
  %11 = udiv i32 %10, %2, !dbg !3094
  call void @llvm.dbg.value(metadata i32 %11, metadata !3085, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3086
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !3095
  %15 = or i32 %14, %8, !dbg !3096
  %16 = udiv i32 %15, %2, !dbg !3097
  call void @llvm.dbg.value(metadata i32 %16, metadata !3085, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3086
  %17 = shl i32 %11, 16, !dbg !3098
  %18 = add i32 %16, %17, !dbg !3099
  ret i32 %18, !dbg !3100
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !3101 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3105, metadata !DIExpression()), !dbg !3106
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !3107
  %3 = load volatile i32, i32* %2, align 4, !dbg !3107
  ret i32 %3, !dbg !3108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #8 section ".tcm_code" !dbg !3109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3113, metadata !DIExpression()), !dbg !3114
  %2 = shl i32 %0, 5, !dbg !3115
  %3 = mul i32 %0, 7, !dbg !3116
  %4 = udiv i32 %3, 10, !dbg !3117
  %5 = add i32 %4, %2, !dbg !3118
  %6 = mul i32 %0, 6, !dbg !3119
  %7 = udiv i32 %6, 100, !dbg !3120
  %8 = add i32 %5, %7, !dbg !3121
  %9 = shl i32 %0, 3, !dbg !3122
  %10 = udiv i32 %9, 1000, !dbg !3123
  %11 = add i32 %8, %10, !dbg !3124
  ret i32 %11, !dbg !3125
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !207 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3126
  br i1 %1, label %10, label %2, !dbg !3128

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !3129
  br i1 %3, label %4, label %6, !dbg !3132

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #21, !dbg !3133
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !3135
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !3136

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !3138
  br label %8, !dbg !3138

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3138
  br label %10, !dbg !3139

10:                                               ; preds = %8, %0
  ret void, !dbg !3139
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !3140 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #21, !dbg !3141
  br i1 %1, label %4, label %2, !dbg !3143

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #21, !dbg !3144
  br label %4, !dbg !3146

4:                                                ; preds = %2, %0
  ret void, !dbg !3147
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3150, metadata !DIExpression()), !dbg !3151
  tail call void @gpt_get_lfosc_clock() #20, !dbg !3152
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !3153
  br i1 %2, label %3, label %6, !dbg !3155

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3156
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #20, !dbg !3158
  br label %6, !dbg !3159

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3160
  ret i32 %7, !dbg !3161
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3164, metadata !DIExpression()), !dbg !3165
  tail call void @gpt_get_lfosc_clock() #20, !dbg !3166
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !3167
  br i1 %2, label %3, label %6, !dbg !3169

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3170
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #20, !dbg !3172
  br label %6, !dbg !3173

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3174
  ret i32 %7, !dbg !3175
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !3176 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3180, metadata !DIExpression()), !dbg !3183
  call void @llvm.dbg.value(metadata i32 %1, metadata !3181, metadata !DIExpression()), !dbg !3183
  call void @llvm.dbg.value(metadata i32 %2, metadata !3182, metadata !DIExpression()), !dbg !3183
  tail call void @gpt_open_clock_source() #20, !dbg !3184
  %4 = or i32 %2, %1, !dbg !3185
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3186
  store volatile i32 %4, i32* %5, align 4, !dbg !3187
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3188
  store volatile i32 49, i32* %6, align 4, !dbg !3189
  ret void, !dbg !3190
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #10 section ".tcm_code" !dbg !3191 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3195, metadata !DIExpression()), !dbg !3199
  call void @llvm.dbg.value(metadata i32 %1, metadata !3196, metadata !DIExpression()), !dbg !3199
  call void @llvm.dbg.value(metadata i32 0, metadata !3197, metadata !DIExpression()), !dbg !3199
  call void @llvm.dbg.value(metadata i32 0, metadata !3198, metadata !DIExpression()), !dbg !3199
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #20, !dbg !3200
  call void @llvm.dbg.value(metadata i32 %3, metadata !3198, metadata !DIExpression()), !dbg !3199
  %4 = add i32 %1, 1, !dbg !3201
  %5 = add i32 %4, %3, !dbg !3202
  call void @llvm.dbg.value(metadata i32 %5, metadata !3197, metadata !DIExpression()), !dbg !3199
  %6 = icmp ugt i32 %5, %3, !dbg !3203
  br i1 %6, label %7, label %10, !dbg !3205

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #20, !dbg !3206
  %9 = icmp ult i32 %8, %5, !dbg !3208
  br i1 %9, label %7, label %16, !dbg !3209, !llvm.loop !3210

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #20, !dbg !3212
  %12 = icmp ult i32 %11, %3, !dbg !3214
  br i1 %12, label %13, label %10, !dbg !3215, !llvm.loop !3216

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #20, !dbg !3218
  %15 = icmp ult i32 %14, %5, !dbg !3219
  br i1 %15, label %13, label %16, !dbg !3220, !llvm.loop !3221

16:                                               ; preds = %13, %7
  ret void, !dbg !3223
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !3224 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3228, metadata !DIExpression()), !dbg !3229
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3230
  store volatile i32 0, i32* %2, align 4, !dbg !3231
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3232
  store volatile i32 0, i32* %3, align 4, !dbg !3233
  %4 = load volatile i32, i32* %3, align 4, !dbg !3234
  %5 = or i32 %4, 2, !dbg !3234
  store volatile i32 %5, i32* %3, align 4, !dbg !3234
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !3235

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !3236
  %9 = icmp eq i32 %8, 0, !dbg !3235
  br i1 %9, label %10, label %7, !dbg !3235, !llvm.loop !3237

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3239
  store volatile i32 16, i32* %11, align 4, !dbg !3240
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !3241
  store volatile i32 1, i32* %12, align 4, !dbg !3242
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !3243
  store volatile i32 -1, i32* %13, align 4, !dbg !3244
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !3245
  br i1 %14, label %15, label %16, !dbg !3247

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !3248
  br label %16, !dbg !3250

16:                                               ; preds = %15, %10
  ret void, !dbg !3251
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #7 !dbg !3252 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3254, metadata !DIExpression()), !dbg !3256
  %3 = bitcast i32* %2 to i8*, !dbg !3257
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3257
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3255, metadata !DIExpression()), !dbg !3258
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3259
  %5 = load volatile i32, i32* %4, align 4, !dbg !3259
  store volatile i32 %5, i32* %2, align 4, !dbg !3260
  %6 = load volatile i32, i32* %4, align 4, !dbg !3261
  %7 = and i32 %6, -2, !dbg !3261
  store volatile i32 %7, i32* %4, align 4, !dbg !3261
  %8 = load volatile i32, i32* %2, align 4, !dbg !3262
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3263
  ret i32 %8, !dbg !3264
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !3265 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3269, metadata !DIExpression()), !dbg !3271
  call void @llvm.dbg.value(metadata i32 %1, metadata !3270, metadata !DIExpression()), !dbg !3271
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3272
  store volatile i32 %1, i32* %3, align 4, !dbg !3273
  ret void, !dbg !3274
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !3275 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3277, metadata !DIExpression()), !dbg !3282
  %5 = bitcast i32* %2 to i8*, !dbg !3283
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3283
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3279, metadata !DIExpression()), !dbg !3284
  %6 = bitcast i32* %3 to i8*, !dbg !3285
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !3285
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3280, metadata !DIExpression()), !dbg !3286
  %7 = bitcast i32* %4 to i8*, !dbg !3287
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !3287
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3281, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.value(metadata i32 undef, metadata !3277, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.value(metadata i32 0, metadata !3278, metadata !DIExpression()), !dbg !3282
  br label %8, !dbg !3289

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3278, metadata !DIExpression()), !dbg !3282
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !3291
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3291
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !3294
  %13 = load volatile i32, i32* %12, align 4, !dbg !3294
  store volatile i32 %13, i32* %3, align 4, !dbg !3295
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !3296
  %15 = load volatile i32, i32* %14, align 4, !dbg !3296
  store volatile i32 %15, i32* %4, align 4, !dbg !3297
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #20, !dbg !3298
  store volatile i32 %16, i32* %2, align 4, !dbg !3299
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3300
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !3301
  store volatile i32 1, i32* %18, align 4, !dbg !3302
  %19 = load volatile i32, i32* %3, align 4, !dbg !3303
  %20 = and i32 %19, 1, !dbg !3305
  %21 = icmp eq i32 %20, 0, !dbg !3305
  br i1 %21, label %33, label %22, !dbg !3306

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !3307
  %24 = and i32 %23, 1, !dbg !3308
  %25 = icmp eq i32 %24, 0, !dbg !3308
  br i1 %25, label %33, label %26, !dbg !3309

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !3310
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3310
  %29 = icmp eq void (i8*)* %28, null, !dbg !3313
  br i1 %29, label %33, label %30, !dbg !3314

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !3315
  %32 = load i8*, i8** %31, align 4, !dbg !3315
  tail call void %28(i8* noundef %32) #21, !dbg !3317
  br label %33, !dbg !3318

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3319
  %35 = load volatile i32, i32* %2, align 4, !dbg !3320
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #20, !dbg !3321
  %36 = add nuw nsw i32 %9, 1, !dbg !3322
  call void @llvm.dbg.value(metadata i32 %36, metadata !3278, metadata !DIExpression()), !dbg !3282
  %37 = icmp eq i32 %36, 6, !dbg !3323
  br i1 %37, label %38, label %8, !dbg !3289, !llvm.loop !3324

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !3326
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !3326
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3326
  ret void, !dbg !3326
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !3327 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #21, !dbg !3328
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #21, !dbg !3329
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #21, !dbg !3330
  ret void, !dbg !3331
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #7 !dbg !3332 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3334, metadata !DIExpression()), !dbg !3339
  %3 = bitcast i32* %2 to i8*, !dbg !3340
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3340
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3335, metadata !DIExpression()), !dbg !3341
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #20, !dbg !3342
  call void @llvm.dbg.value(metadata i32 %4, metadata !3336, metadata !DIExpression()), !dbg !3339
  %5 = lshr i32 %4, 15, !dbg !3343
  call void @llvm.dbg.value(metadata i32 %5, metadata !3337, metadata !DIExpression()), !dbg !3339
  %6 = and i32 %4, 32767, !dbg !3344
  %7 = mul nuw nsw i32 %6, 1000, !dbg !3345
  %8 = add nuw nsw i32 %7, 16384, !dbg !3346
  %9 = lshr i32 %8, 15, !dbg !3347
  call void @llvm.dbg.value(metadata i32 %9, metadata !3338, metadata !DIExpression()), !dbg !3339
  %10 = mul nuw nsw i32 %5, 1000, !dbg !3348
  %11 = add nuw nsw i32 %9, %10, !dbg !3349
  store volatile i32 %11, i32* %2, align 4, !dbg !3350
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3351
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3352
  %14 = load volatile i32, i32* %13, align 4, !dbg !3353
  %15 = or i32 %14, 2, !dbg !3353
  store volatile i32 %15, i32* %13, align 4, !dbg !3353
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !3354

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !3355
  %20 = icmp eq i32 %19, 0, !dbg !3354
  br i1 %20, label %21, label %18, !dbg !3354, !llvm.loop !3356

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !3358
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3359
  ret i32 %22, !dbg !3360
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #11 !dbg !3361 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3365, metadata !DIExpression()), !dbg !3366
  br label %1, !dbg !3367

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3365, metadata !DIExpression()), !dbg !3366
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !3369
  %4 = load i8, i8* %3, align 4, !dbg !3369, !range !2542
  %5 = icmp eq i8 %4, 1, !dbg !3373
  br i1 %5, label %6, label %9, !dbg !3374

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !3375
  call void @llvm.dbg.value(metadata i32 %7, metadata !3365, metadata !DIExpression()), !dbg !3366
  %8 = icmp eq i32 %7, 32, !dbg !3376
  br i1 %8, label %9, label %1, !dbg !3367, !llvm.loop !3377

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !3366
  ret i32 %10, !dbg !3379
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !3380 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !3384
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3384
  %4 = bitcast i32* %2 to i8*, !dbg !3384
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !3384
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3385, !range !2542
  %6 = icmp eq i8 %5, 0, !dbg !3385
  br i1 %6, label %7, label %11, !dbg !3387

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !3382, metadata !DIExpression(DW_OP_deref)), !dbg !3388
  call void @llvm.dbg.value(metadata i32* %2, metadata !3383, metadata !DIExpression(DW_OP_deref)), !dbg !3388
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #20, !dbg !3389
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3390
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3391
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3392
  %9 = load i32, i32* %1, align 4, !dbg !3393
  call void @llvm.dbg.value(metadata i32 %9, metadata !3382, metadata !DIExpression()), !dbg !3388
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #21, !dbg !3394
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3395
  br label %11, !dbg !3396

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !3396
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3396
  ret void, !dbg !3396
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #12 !dbg !3397 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3401, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i32* %1, metadata !3402, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i32 -1, metadata !3404, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i32 0, metadata !3403, metadata !DIExpression()), !dbg !3406
  br label %3, !dbg !3407

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !3403, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i32 %5, metadata !3404, metadata !DIExpression()), !dbg !3406
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !3409
  %7 = load i8, i8* %6, align 1, !dbg !3409, !range !2542
  %8 = icmp eq i8 %7, 0, !dbg !3409
  br i1 %8, label %13, label %9, !dbg !3413

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #20, !dbg !3414
  call void @llvm.dbg.value(metadata i32 %10, metadata !3405, metadata !DIExpression()), !dbg !3406
  %11 = icmp ult i32 %10, %5, !dbg !3416
  br i1 %11, label %12, label %13, !dbg !3418

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !3404, metadata !DIExpression()), !dbg !3406
  store i32 %4, i32* %1, align 4, !dbg !3419
  br label %13, !dbg !3421

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !3406
  call void @llvm.dbg.value(metadata i32 %14, metadata !3404, metadata !DIExpression()), !dbg !3406
  %15 = add nuw nsw i32 %4, 1, !dbg !3422
  call void @llvm.dbg.value(metadata i32 %15, metadata !3403, metadata !DIExpression()), !dbg !3406
  %16 = icmp eq i32 %15, 32, !dbg !3423
  br i1 %16, label %17, label %3, !dbg !3407, !llvm.loop !3424

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !3426
  ret void, !dbg !3427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #2 !dbg !3428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3430, metadata !DIExpression()), !dbg !3434
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !3435
  %3 = load i32, i32* %2, align 4, !dbg !3435
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3435
  %5 = sub i32 %3, %4, !dbg !3435
  call void @llvm.dbg.value(metadata i32 %5, metadata !3431, metadata !DIExpression()), !dbg !3434
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3436
  %7 = sub i32 %6, %4, !dbg !3436
  call void @llvm.dbg.value(metadata i32 %7, metadata !3432, metadata !DIExpression()), !dbg !3434
  %8 = icmp ugt i32 %5, %7, !dbg !3437
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !3439
  call void @llvm.dbg.value(metadata i32 %10, metadata !3433, metadata !DIExpression()), !dbg !3434
  ret i32 %10, !dbg !3440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !3441 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3443, metadata !DIExpression()), !dbg !3447
  %4 = bitcast i32* %2 to i8*, !dbg !3448
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !3448
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3445, metadata !DIExpression()), !dbg !3449
  %5 = bitcast i32* %3 to i8*, !dbg !3450
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3450
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3446, metadata !DIExpression()), !dbg !3451
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3452
  %7 = icmp eq i32 %6, 0, !dbg !3454
  br i1 %7, label %38, label %8, !dbg !3455

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3456
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3458
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3459
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3460
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #20, !dbg !3461
  store volatile i32 %11, i32* %2, align 4, !dbg !3462
  %12 = load volatile i32, i32* %2, align 4, !dbg !3463
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3464
  %14 = add i32 %13, %12, !dbg !3464
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3464
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3465
  call void @llvm.dbg.value(metadata i32 0, metadata !3444, metadata !DIExpression()), !dbg !3447
  br label %15, !dbg !3466

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3444, metadata !DIExpression()), !dbg !3447
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !3468
  %18 = load i8, i8* %17, align 1, !dbg !3468, !range !2542
  %19 = icmp eq i8 %18, 0, !dbg !3468
  br i1 %19, label %31, label %20, !dbg !3472

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #20, !dbg !3473
  store volatile i32 %21, i32* %3, align 4, !dbg !3475
  %22 = load volatile i32, i32* %3, align 4, !dbg !3476
  %23 = icmp eq i32 %22, 0, !dbg !3478
  br i1 %23, label %24, label %31, !dbg !3479

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !3480
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3482
  %26 = add i32 %25, -1, !dbg !3482
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3482
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !3483
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3483
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !3484
  %30 = load i8*, i8** %29, align 4, !dbg !3484
  tail call void %28(i8* noundef %30) #21, !dbg !3485
  br label %31, !dbg !3486

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !3487
  call void @llvm.dbg.value(metadata i32 %32, metadata !3444, metadata !DIExpression()), !dbg !3447
  %33 = icmp eq i32 %32, 32, !dbg !3488
  br i1 %33, label %34, label %15, !dbg !3466, !llvm.loop !3489

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3491
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3492
  %36 = icmp eq i32 %35, 0, !dbg !3494
  br i1 %36, label %38, label %37, !dbg !3495

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #20, !dbg !3496
  br label %38, !dbg !3498

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3499
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !3499
  ret void, !dbg !3499
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #13 !dbg !3500 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3505, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !3507, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata i32 0, metadata !3506, metadata !DIExpression()), !dbg !3508
  br label %5, !dbg !3510

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !3512
  call void @llvm.dbg.value(metadata i32 %3, metadata !3506, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.value(metadata i32 %6, metadata !3506, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3508
  %4 = icmp eq i32 %3, 5, !dbg !3514
  br i1 %4, label %10, label %5, !dbg !3510, !llvm.loop !3515

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3506, metadata !DIExpression()), !dbg !3508
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !3517
  %8 = load i32, i32* %7, align 4, !dbg !3517
  %9 = icmp eq i32 %8, %0, !dbg !3520
  call void @llvm.dbg.value(metadata i32 %6, metadata !3506, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3508
  br i1 %9, label %10, label %2, !dbg !3521

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !3508
  ret i32 %11, !dbg !3522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #8 !dbg !3523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3528, metadata !DIExpression()), !dbg !3529
  ret i32 0, !dbg !3530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #8 !dbg !3531 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3533, metadata !DIExpression()), !dbg !3534
  ret i32 0, !dbg !3535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !3536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3540, metadata !DIExpression()), !dbg !3544
  call void @llvm.dbg.value(metadata i32 %1, metadata !3541, metadata !DIExpression()), !dbg !3544
  %3 = icmp ugt i32 %0, 48, !dbg !3545
  br i1 %3, label %13, label %4, !dbg !3547

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !3548
  call void @llvm.dbg.value(metadata i32 %5, metadata !3542, metadata !DIExpression()), !dbg !3544
  %6 = and i32 %0, 31, !dbg !3549
  call void @llvm.dbg.value(metadata i32 %6, metadata !3543, metadata !DIExpression()), !dbg !3544
  %7 = icmp eq i32 %1, 0, !dbg !3550
  %8 = shl nuw i32 1, %6, !dbg !3552
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3552
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !3553
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !3553
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !3553
  store volatile i32 %8, i32* %12, align 4, !dbg !3552
  br label %13, !dbg !3554

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !3544
  ret i32 %14, !dbg !3554
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #9 !dbg !3555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3560, metadata !DIExpression()), !dbg !3565
  call void @llvm.dbg.value(metadata i32* %1, metadata !3561, metadata !DIExpression()), !dbg !3565
  %3 = icmp ugt i32 %0, 48, !dbg !3566
  br i1 %3, label %15, label %4, !dbg !3568

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !3569
  br i1 %5, label %15, label %6, !dbg !3571

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !3572
  call void @llvm.dbg.value(metadata i32 %7, metadata !3562, metadata !DIExpression()), !dbg !3565
  %8 = and i32 %0, 31, !dbg !3573
  call void @llvm.dbg.value(metadata i32 %8, metadata !3563, metadata !DIExpression()), !dbg !3565
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3574
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !3575
  %11 = load volatile i32, i32* %10, align 4, !dbg !3575
  call void @llvm.dbg.value(metadata i32 %11, metadata !3564, metadata !DIExpression()), !dbg !3565
  %12 = shl nuw i32 1, %8, !dbg !3576
  %13 = and i32 %11, %12, !dbg !3577
  call void @llvm.dbg.value(metadata i32 %13, metadata !3564, metadata !DIExpression()), !dbg !3565
  %14 = lshr i32 %13, %8, !dbg !3578
  store i32 %14, i32* %1, align 4, !dbg !3579
  br label %15, !dbg !3580

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !3565
  ret i32 %16, !dbg !3581
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !3582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3587, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.value(metadata i8 %1, metadata !3588, metadata !DIExpression()), !dbg !3592
  %3 = icmp ugt i32 %0, 48, !dbg !3593
  br i1 %3, label %18, label %4, !dbg !3595

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !3596
  br i1 %5, label %18, label %6, !dbg !3598

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !3599
  %8 = lshr i32 %0, 3, !dbg !3600
  call void @llvm.dbg.value(metadata i32 %8, metadata !3589, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.value(metadata i32 %0, metadata !3590, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !3592
  %9 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3601
  call void @llvm.dbg.value(metadata i32 %9, metadata !3591, metadata !DIExpression()), !dbg !3592
  %10 = shl nuw nsw i32 %0, 2, !dbg !3602
  %11 = and i32 %10, 28, !dbg !3602
  %12 = shl nuw i32 15, %11, !dbg !3603
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3604
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !3605
  store volatile i32 %12, i32* %14, align 4, !dbg !3606
  %15 = shl nuw i32 %7, %11, !dbg !3607
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3608
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !3609
  store volatile i32 %15, i32* %17, align 4, !dbg !3610
  tail call void @restore_interrupt_mask(i32 noundef %9) #21, !dbg !3611
  br label %18, !dbg !3612

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !3592
  ret i32 %19, !dbg !3613
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #9 !dbg !3614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3619, metadata !DIExpression()), !dbg !3624
  call void @llvm.dbg.value(metadata i32* %1, metadata !3620, metadata !DIExpression()), !dbg !3624
  %3 = icmp ugt i32 %0, 48, !dbg !3625
  br i1 %3, label %15, label %4, !dbg !3627

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !3628
  br i1 %5, label %15, label %6, !dbg !3630

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !3631
  call void @llvm.dbg.value(metadata i32 %7, metadata !3621, metadata !DIExpression()), !dbg !3624
  %8 = and i32 %0, 31, !dbg !3632
  call void @llvm.dbg.value(metadata i32 %8, metadata !3622, metadata !DIExpression()), !dbg !3624
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3633
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !3634
  %11 = load volatile i32, i32* %10, align 4, !dbg !3634
  call void @llvm.dbg.value(metadata i32 %11, metadata !3623, metadata !DIExpression()), !dbg !3624
  %12 = shl nuw i32 1, %8, !dbg !3635
  %13 = and i32 %11, %12, !dbg !3636
  call void @llvm.dbg.value(metadata i32 %13, metadata !3623, metadata !DIExpression()), !dbg !3624
  %14 = lshr i32 %13, %8, !dbg !3637
  store i32 %14, i32* %1, align 4, !dbg !3638
  br label %15, !dbg !3639

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !3624
  ret i32 %16, !dbg !3640
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !3641 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3645, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.value(metadata i32 %1, metadata !3646, metadata !DIExpression()), !dbg !3649
  %3 = icmp ugt i32 %0, 48, !dbg !3650
  br i1 %3, label %13, label %4, !dbg !3652

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !3653
  call void @llvm.dbg.value(metadata i32 %5, metadata !3647, metadata !DIExpression()), !dbg !3649
  %6 = and i32 %0, 31, !dbg !3654
  call void @llvm.dbg.value(metadata i32 %6, metadata !3648, metadata !DIExpression()), !dbg !3649
  %7 = icmp eq i32 %1, 0, !dbg !3655
  %8 = shl nuw i32 1, %6, !dbg !3657
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3657
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !3658
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !3658
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !3658
  store volatile i32 %8, i32* %12, align 4, !dbg !3657
  br label %13, !dbg !3659

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !3649
  ret i32 %14, !dbg !3659
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #9 !dbg !3660 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3662, metadata !DIExpression()), !dbg !3667
  call void @llvm.dbg.value(metadata i32* %1, metadata !3663, metadata !DIExpression()), !dbg !3667
  %3 = icmp ugt i32 %0, 48, !dbg !3668
  br i1 %3, label %15, label %4, !dbg !3670

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !3671
  br i1 %5, label %15, label %6, !dbg !3673

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !3674
  call void @llvm.dbg.value(metadata i32 %7, metadata !3664, metadata !DIExpression()), !dbg !3667
  %8 = and i32 %0, 31, !dbg !3675
  call void @llvm.dbg.value(metadata i32 %8, metadata !3665, metadata !DIExpression()), !dbg !3667
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3676
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !3677
  %11 = load volatile i32, i32* %10, align 4, !dbg !3677
  call void @llvm.dbg.value(metadata i32 %11, metadata !3666, metadata !DIExpression()), !dbg !3667
  %12 = shl nuw i32 1, %8, !dbg !3678
  %13 = and i32 %11, %12, !dbg !3679
  call void @llvm.dbg.value(metadata i32 %13, metadata !3666, metadata !DIExpression()), !dbg !3667
  %14 = lshr i32 %13, %8, !dbg !3680
  store i32 %14, i32* %1, align 4, !dbg !3681
  br label %15, !dbg !3682

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !3667
  ret i32 %16, !dbg !3683
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #10 !dbg !3684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3686, metadata !DIExpression()), !dbg !3690
  %2 = icmp ugt i32 %0, 48, !dbg !3691
  br i1 %2, label %16, label %3, !dbg !3693

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3694
  call void @llvm.dbg.value(metadata i32 %4, metadata !3687, metadata !DIExpression()), !dbg !3690
  %5 = and i32 %0, 31, !dbg !3695
  call void @llvm.dbg.value(metadata i32 %5, metadata !3688, metadata !DIExpression()), !dbg !3690
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3696
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !3697
  %8 = load volatile i32, i32* %7, align 4, !dbg !3697
  call void @llvm.dbg.value(metadata i32 %8, metadata !3689, metadata !DIExpression()), !dbg !3690
  %9 = shl nuw i32 1, %5, !dbg !3698
  %10 = and i32 %8, %9, !dbg !3699
  call void @llvm.dbg.value(metadata i32 %10, metadata !3689, metadata !DIExpression()), !dbg !3690
  %11 = lshr i32 %10, %5, !dbg !3700
  %12 = icmp eq i32 %11, 0, !dbg !3700
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !3702
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !3702
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !3702
  store volatile i32 %9, i32* %15, align 4, !dbg !3703
  br label %16, !dbg !3704

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !3690
  ret i32 %17, !dbg !3704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #10 !dbg !3705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3707, metadata !DIExpression()), !dbg !3710
  %2 = icmp ugt i32 %0, 48, !dbg !3711
  br i1 %2, label %9, label %3, !dbg !3713

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3714
  call void @llvm.dbg.value(metadata i32 %4, metadata !3708, metadata !DIExpression()), !dbg !3710
  %5 = and i32 %0, 31, !dbg !3715
  call void @llvm.dbg.value(metadata i32 %5, metadata !3709, metadata !DIExpression()), !dbg !3710
  %6 = shl nuw i32 1, %5, !dbg !3716
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3717
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !3718
  store volatile i32 %6, i32* %8, align 4, !dbg !3719
  br label %9, !dbg !3720

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !3710
  ret i32 %10, !dbg !3721
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #10 !dbg !3722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3724, metadata !DIExpression()), !dbg !3727
  %2 = icmp ugt i32 %0, 48, !dbg !3728
  br i1 %2, label %9, label %3, !dbg !3730

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3731
  call void @llvm.dbg.value(metadata i32 %4, metadata !3725, metadata !DIExpression()), !dbg !3727
  %5 = and i32 %0, 31, !dbg !3732
  call void @llvm.dbg.value(metadata i32 %5, metadata !3726, metadata !DIExpression()), !dbg !3727
  %6 = shl nuw i32 1, %5, !dbg !3733
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3734
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !3735
  store volatile i32 %6, i32* %8, align 4, !dbg !3736
  br label %9, !dbg !3737

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !3727
  ret i32 %10, !dbg !3738
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #10 !dbg !3739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3741, metadata !DIExpression()), !dbg !3744
  %2 = icmp ugt i32 %0, 48, !dbg !3745
  br i1 %2, label %14, label %3, !dbg !3747

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #20, !dbg !3748
  %5 = icmp eq i32 %4, 0, !dbg !3748
  br i1 %5, label %14, label %6, !dbg !3749

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !3750
  call void @llvm.dbg.value(metadata i32 %7, metadata !3742, metadata !DIExpression()), !dbg !3744
  %8 = and i32 %0, 31, !dbg !3751
  call void @llvm.dbg.value(metadata i32 %8, metadata !3743, metadata !DIExpression()), !dbg !3744
  %9 = shl nuw i32 1, %8, !dbg !3752
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3753
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !3754
  store volatile i32 %9, i32* %11, align 4, !dbg !3755
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3756
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !3757
  store volatile i32 %9, i32* %13, align 4, !dbg !3758
  br label %14, !dbg !3759

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !3744
  ret i32 %15, !dbg !3760
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #10 !dbg !3761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3763, metadata !DIExpression()), !dbg !3766
  %2 = icmp ugt i32 %0, 48, !dbg !3767
  br i1 %2, label %14, label %3, !dbg !3769

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #20, !dbg !3770
  %5 = icmp eq i32 %4, 0, !dbg !3770
  br i1 %5, label %14, label %6, !dbg !3771

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !3772
  call void @llvm.dbg.value(metadata i32 %7, metadata !3764, metadata !DIExpression()), !dbg !3766
  %8 = and i32 %0, 31, !dbg !3773
  call void @llvm.dbg.value(metadata i32 %8, metadata !3765, metadata !DIExpression()), !dbg !3766
  %9 = shl nuw i32 1, %8, !dbg !3774
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3775
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !3776
  store volatile i32 %9, i32* %11, align 4, !dbg !3777
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3778
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !3779
  store volatile i32 %9, i32* %13, align 4, !dbg !3780
  br label %14, !dbg !3781

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !3766
  ret i32 %15, !dbg !3782
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #10 !dbg !3783 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3785, metadata !DIExpression()), !dbg !3788
  %2 = icmp ugt i32 %0, 48, !dbg !3789
  br i1 %2, label %12, label %3, !dbg !3791

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #20, !dbg !3792
  %5 = icmp eq i32 %4, 0, !dbg !3792
  br i1 %5, label %12, label %6, !dbg !3793

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !3794
  call void @llvm.dbg.value(metadata i32 %7, metadata !3786, metadata !DIExpression()), !dbg !3788
  %8 = and i32 %0, 31, !dbg !3795
  call void @llvm.dbg.value(metadata i32 %8, metadata !3787, metadata !DIExpression()), !dbg !3788
  %9 = shl nuw i32 1, %8, !dbg !3796
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3797
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !3798
  store volatile i32 %9, i32* %11, align 4, !dbg !3799
  br label %12, !dbg !3800

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !3788
  ret i32 %13, !dbg !3801
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !3802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3808, metadata !DIExpression()), !dbg !3810
  call void @llvm.dbg.value(metadata i32 %1, metadata !3809, metadata !DIExpression()), !dbg !3810
  %3 = icmp ugt i32 %0, 5, !dbg !3811
  br i1 %3, label %7, label %4, !dbg !3813

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3814
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !3815
  store volatile i32 %1, i32* %6, align 4, !dbg !3816
  br label %7, !dbg !3817

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !3810
  ret i32 %8, !dbg !3818
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #10 !dbg !3819 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3823, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i8 %1, metadata !3824, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i8 %2, metadata !3825, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.value(metadata i8 %3, metadata !3826, metadata !DIExpression()), !dbg !3829
  %5 = icmp ugt i32 %0, 48, !dbg !3830
  br i1 %5, label %30, label %6, !dbg !3832

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #20, !dbg !3833
  %8 = icmp eq i32 %7, 0, !dbg !3833
  br i1 %8, label %9, label %30, !dbg !3834

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !3835
  call void @llvm.dbg.value(metadata i32 %10, metadata !3827, metadata !DIExpression()), !dbg !3829
  %11 = and i32 %0, 31, !dbg !3836
  call void @llvm.dbg.value(metadata i32 %11, metadata !3828, metadata !DIExpression()), !dbg !3829
  %12 = icmp eq i8 %1, 0, !dbg !3837
  %13 = shl nuw i32 1, %11, !dbg !3839
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3839
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !3840
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !3840
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !3840
  store volatile i32 %13, i32* %17, align 4, !dbg !3839
  %18 = icmp eq i8 %2, 0, !dbg !3841
  %19 = shl nuw i32 1, %11, !dbg !3843
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3843
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !3844
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !3844
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !3844
  store volatile i32 %19, i32* %23, align 4, !dbg !3843
  %24 = icmp eq i8 %3, 0, !dbg !3845
  %25 = shl nuw i32 1, %11, !dbg !3847
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3847
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !3848
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !3848
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !3848
  store volatile i32 %25, i32* %29, align 4, !dbg !3847
  br label %30, !dbg !3849

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !3829
  ret i32 %31, !dbg !3849
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #10 !dbg !3850 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3852, metadata !DIExpression()), !dbg !3859
  %2 = icmp ugt i32 %0, 48, !dbg !3860
  br i1 %2, label %40, label %3, !dbg !3862

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3863
  call void @llvm.dbg.value(metadata i32 %4, metadata !3853, metadata !DIExpression()), !dbg !3859
  %5 = and i32 %0, 31, !dbg !3864
  call void @llvm.dbg.value(metadata i32 %5, metadata !3856, metadata !DIExpression()), !dbg !3859
  %6 = lshr i32 %0, 4, !dbg !3865
  call void @llvm.dbg.value(metadata i32 %6, metadata !3854, metadata !DIExpression()), !dbg !3859
  call void @llvm.dbg.value(metadata i32 %0, metadata !3857, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !3859
  %7 = lshr i32 %0, 3, !dbg !3866
  call void @llvm.dbg.value(metadata i32 %7, metadata !3855, metadata !DIExpression()), !dbg !3859
  call void @llvm.dbg.value(metadata i32 %0, metadata !3858, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !3859
  %8 = shl nuw nsw i32 %0, 2, !dbg !3867
  %9 = and i32 %8, 28, !dbg !3867
  %10 = shl nuw i32 15, %9, !dbg !3868
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3869
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !3870
  store volatile i32 %10, i32* %12, align 4, !dbg !3871
  %13 = shl nuw i32 1, %5, !dbg !3872
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3873
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !3874
  store volatile i32 %13, i32* %15, align 4, !dbg !3875
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3876
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !3877
  store volatile i32 %13, i32* %17, align 4, !dbg !3878
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #20, !dbg !3879
  %19 = icmp eq i32 %18, 0, !dbg !3879
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3881
  br i1 %19, label %23, label %21, !dbg !3882

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !3883
  br label %29, !dbg !3885

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !3886
  store volatile i32 %13, i32* %24, align 4, !dbg !3888
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3889
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !3890
  store volatile i32 %13, i32* %26, align 4, !dbg !3891
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3892
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !3893
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !3881
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3894
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !3895
  store volatile i32 %13, i32* %32, align 4, !dbg !3896
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3897
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !3898
  store volatile i32 %13, i32* %34, align 4, !dbg !3899
  %35 = shl nuw nsw i32 %0, 1, !dbg !3900
  %36 = and i32 %35, 30, !dbg !3900
  %37 = shl nuw i32 3, %36, !dbg !3901
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3902
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !3903
  store volatile i32 %37, i32* %39, align 4, !dbg !3904
  br label %40, !dbg !3905

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !3859
  ret i32 %41, !dbg !3906
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #10 !dbg !3907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3909, metadata !DIExpression()), !dbg !3914
  %2 = icmp ugt i32 %0, 48, !dbg !3915
  br i1 %2, label %34, label %3, !dbg !3917

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3918
  call void @llvm.dbg.value(metadata i32 %4, metadata !3910, metadata !DIExpression()), !dbg !3914
  %5 = and i32 %0, 31, !dbg !3919
  call void @llvm.dbg.value(metadata i32 %5, metadata !3912, metadata !DIExpression()), !dbg !3914
  %6 = lshr i32 %0, 3, !dbg !3920
  call void @llvm.dbg.value(metadata i32 %6, metadata !3911, metadata !DIExpression()), !dbg !3914
  call void @llvm.dbg.value(metadata i32 %0, metadata !3913, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !3914
  %7 = shl nuw nsw i32 %0, 2, !dbg !3921
  %8 = and i32 %7, 28, !dbg !3921
  %9 = shl nuw i32 15, %8, !dbg !3922
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3923
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !3924
  store volatile i32 %9, i32* %11, align 4, !dbg !3925
  %12 = shl nuw i32 1, %5, !dbg !3926
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3927
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !3928
  store volatile i32 %12, i32* %14, align 4, !dbg !3929
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #20, !dbg !3930
  %16 = icmp eq i32 %15, 0, !dbg !3930
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3932
  br i1 %16, label %22, label %18, !dbg !3933

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !3934
  store volatile i32 %12, i32* %19, align 4, !dbg !3936
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3937
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !3938
  br label %28, !dbg !3939

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !3940
  store volatile i32 %12, i32* %23, align 4, !dbg !3942
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3943
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !3944
  store volatile i32 %12, i32* %25, align 4, !dbg !3945
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3946
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !3947
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !3932
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3948
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !3949
  store volatile i32 %12, i32* %31, align 4, !dbg !3950
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3951
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !3952
  store volatile i32 %12, i32* %33, align 4, !dbg !3953
  br label %34, !dbg !3954

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !3914
  ret i32 %35, !dbg !3955
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !3956 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3960, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 %1, metadata !3961, metadata !DIExpression()), !dbg !3964
  %3 = icmp ugt i32 %0, 48, !dbg !3965
  br i1 %3, label %14, label %4, !dbg !3967

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !3968
  call void @llvm.dbg.value(metadata i32 %5, metadata !3962, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 %0, metadata !3963, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !3964
  %6 = shl nuw nsw i32 %0, 1, !dbg !3969
  %7 = and i32 %6, 30, !dbg !3969
  %8 = shl nuw i32 3, %7, !dbg !3970
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3971
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !3972
  store volatile i32 %8, i32* %10, align 4, !dbg !3973
  %11 = shl i32 %1, %7, !dbg !3974
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3975
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !3976
  store volatile i32 %11, i32* %13, align 4, !dbg !3977
  br label %14, !dbg !3978

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !3964
  ret i32 %15, !dbg !3979
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #9 !dbg !3980 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3985, metadata !DIExpression()), !dbg !3990
  call void @llvm.dbg.value(metadata i32* %1, metadata !3986, metadata !DIExpression()), !dbg !3990
  %3 = icmp ugt i32 %0, 48, !dbg !3991
  br i1 %3, label %18, label %4, !dbg !3993

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !3994
  br i1 %5, label %18, label %6, !dbg !3996

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !3997
  call void @llvm.dbg.value(metadata i32 %7, metadata !3987, metadata !DIExpression()), !dbg !3990
  call void @llvm.dbg.value(metadata i32 %0, metadata !3988, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !3990
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3998
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !3999
  %10 = load volatile i32, i32* %9, align 4, !dbg !3999
  call void @llvm.dbg.value(metadata i32 %10, metadata !3989, metadata !DIExpression()), !dbg !3990
  %11 = shl nuw nsw i32 %0, 1, !dbg !4000
  %12 = and i32 %11, 30, !dbg !4000
  %13 = shl nuw i32 3, %12, !dbg !4001
  %14 = and i32 %10, %13, !dbg !4002
  call void @llvm.dbg.value(metadata i32 %14, metadata !3989, metadata !DIExpression()), !dbg !3990
  %15 = lshr i32 %14, %12, !dbg !4003
  call void @llvm.dbg.value(metadata i32 %15, metadata !3989, metadata !DIExpression()), !dbg !3990
  %16 = shl i32 %15, 2, !dbg !4004
  %17 = add i32 %16, 4, !dbg !4004
  store i32 %17, i32* %1, align 4, !dbg !4005
  br label %18, !dbg !4006

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !3990
  ret i32 %19, !dbg !4007
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4008 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4012, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i1 %1, metadata !4013, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4077
  %4 = bitcast i32* %3 to i8*, !dbg !4078
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4078
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4079
  %6 = load volatile i32, i32* %5, align 4, !dbg !4079
  %7 = icmp eq i32 %6, 2, !dbg !4081
  br i1 %7, label %9, label %8, !dbg !4082

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4083
  unreachable, !dbg !4083

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4085
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !4085
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !4019, metadata !DIExpression()), !dbg !4077
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !4086
  call void @llvm.dbg.value(metadata i32 %12, metadata !4014, metadata !DIExpression()), !dbg !4077
  br i1 %1, label %13, label %14, !dbg !4087

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #21, !dbg !4088
  br label %14, !dbg !4091

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !4016, metadata !DIExpression(DW_OP_deref)), !dbg !4077
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #21, !dbg !4092
  call void @llvm.dbg.value(metadata i32 %15, metadata !4075, metadata !DIExpression()), !dbg !4077
  %16 = icmp eq i32 %15, 0, !dbg !4093
  br i1 %16, label %18, label %17, !dbg !4095

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4096
  unreachable, !dbg !4096

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !4098
  call void @llvm.dbg.value(metadata i32 %19, metadata !4016, metadata !DIExpression()), !dbg !4077
  %20 = icmp eq i32 %19, 0, !dbg !4100
  br i1 %20, label %43, label %21, !dbg !4101

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4102
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !4102
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !4017, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i8* undef, metadata !4018, metadata !DIExpression()), !dbg !4077
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !4103
  br i1 %24, label %25, label %26, !dbg !4105

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4106
  unreachable, !dbg !4106

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4108
  %28 = load i8*, i8** %27, align 4, !dbg !4108
  call void @llvm.dbg.value(metadata i8* %28, metadata !4018, metadata !DIExpression()), !dbg !4077
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #21, !dbg !4109
  call void %23(i32 noundef 1, i8* noundef %28) #21, !dbg !4110
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #21, !dbg !4111
  call void @llvm.dbg.value(metadata i32* %3, metadata !4016, metadata !DIExpression(DW_OP_deref)), !dbg !4077
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #21, !dbg !4112
  call void @llvm.dbg.value(metadata i32 %31, metadata !4075, metadata !DIExpression()), !dbg !4077
  %32 = icmp eq i32 %31, 0, !dbg !4113
  br i1 %32, label %34, label %33, !dbg !4115

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4116
  unreachable, !dbg !4116

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !4118
  call void @llvm.dbg.value(metadata i32 %35, metadata !4016, metadata !DIExpression()), !dbg !4077
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !4120
  %37 = load i32, i32* %36, align 4, !dbg !4120
  %38 = icmp ult i32 %35, %37, !dbg !4121
  br i1 %38, label %43, label %39, !dbg !4122

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #21, !dbg !4123
  call void @llvm.dbg.value(metadata i32 %40, metadata !4075, metadata !DIExpression()), !dbg !4077
  %41 = icmp eq i32 %40, 0, !dbg !4125
  br i1 %41, label %43, label %42, !dbg !4127

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4128
  unreachable, !dbg !4128

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4130
  ret void, !dbg !4130
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #14

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_receive_bytes(i32 noundef, i32* noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_disable_interrupt(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_enable_interrupt(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4131 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4133, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i1 %1, metadata !4134, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4141
  %4 = bitcast i32* %3 to i8*, !dbg !4142
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4142
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4143
  %6 = load volatile i32, i32* %5, align 4, !dbg !4143
  %7 = icmp eq i32 %6, 2, !dbg !4145
  br i1 %7, label %9, label %8, !dbg !4146

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4147
  unreachable, !dbg !4147

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4149
  call void @llvm.dbg.value(metadata i32 %10, metadata !4135, metadata !DIExpression()), !dbg !4141
  br i1 %1, label %36, label %11, !dbg !4150

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4151
  %13 = load void (i32, i8*)*, void (i32, i8*)** %12, align 4, !dbg !4151
  call void @llvm.dbg.value(metadata void (i32, i8*)* %13, metadata !4139, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i8* undef, metadata !4140, metadata !DIExpression()), !dbg !4141
  %14 = icmp eq void (i32, i8*)* %13, null, !dbg !4154
  br i1 %14, label %15, label %16, !dbg !4156

15:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4157
  unreachable, !dbg !4157

16:                                               ; preds = %11
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4159
  %18 = load i8*, i8** %17, align 4, !dbg !4159
  call void @llvm.dbg.value(metadata i8* %18, metadata !4140, metadata !DIExpression()), !dbg !4141
  %19 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #21, !dbg !4160
  tail call void %13(i32 noundef 2, i8* noundef %18) #21, !dbg !4161
  %20 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #21, !dbg !4162
  call void @llvm.dbg.value(metadata i32* %3, metadata !4138, metadata !DIExpression(DW_OP_deref)), !dbg !4141
  %21 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #21, !dbg !4163
  call void @llvm.dbg.value(metadata i32 %21, metadata !4136, metadata !DIExpression()), !dbg !4141
  %22 = icmp eq i32 %21, 0, !dbg !4164
  br i1 %22, label %24, label %23, !dbg !4166

23:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4167
  unreachable, !dbg !4167

24:                                               ; preds = %16
  %25 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !4169
  %26 = load i32, i32* %25, align 4, !dbg !4169
  %27 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !4170
  %28 = load i32, i32* %27, align 4, !dbg !4170
  %29 = sub i32 %26, %28, !dbg !4171
  call void @llvm.dbg.value(metadata i32 %29, metadata !4137, metadata !DIExpression()), !dbg !4141
  %30 = load i32, i32* %3, align 4, !dbg !4172
  call void @llvm.dbg.value(metadata i32 %30, metadata !4138, metadata !DIExpression()), !dbg !4141
  %31 = icmp ult i32 %30, %29, !dbg !4174
  br i1 %31, label %36, label %32, !dbg !4175

32:                                               ; preds = %24
  %33 = call i32 @vdma_disable_interrupt(i32 noundef %10) #21, !dbg !4176
  call void @llvm.dbg.value(metadata i32 %33, metadata !4136, metadata !DIExpression()), !dbg !4141
  %34 = icmp eq i32 %33, 0, !dbg !4178
  br i1 %34, label %36, label %35, !dbg !4180

35:                                               ; preds = %32
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4181
  unreachable, !dbg !4181

36:                                               ; preds = %24, %32, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4183
  ret void, !dbg !4183
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_send_space(i32 noundef, i32* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !4184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4188, metadata !DIExpression()), !dbg !4192
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4193
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !4193
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !4189, metadata !DIExpression()), !dbg !4192
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #21, !dbg !4194
  %5 = icmp eq i32 %4, 0, !dbg !4194
  br i1 %5, label %6, label %14, !dbg !4196

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #21, !dbg !4197
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #21, !dbg !4199
  %7 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4200
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !4200
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !4190, metadata !DIExpression()), !dbg !4192
  call void @llvm.dbg.value(metadata i8* undef, metadata !4191, metadata !DIExpression()), !dbg !4192
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !4201
  br i1 %9, label %10, label %11, !dbg !4203

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4204
  unreachable, !dbg !4204

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4206
  %13 = load i8*, i8** %12, align 4, !dbg !4206
  call void @llvm.dbg.value(metadata i8* %13, metadata !4191, metadata !DIExpression()), !dbg !4192
  tail call void %8(i32 noundef -1, i8* noundef %13) #21, !dbg !4207
  br label %14, !dbg !4208

14:                                               ; preds = %11, %1
  ret void, !dbg !4209
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4216, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.value(metadata i32 %1, metadata !4217, metadata !DIExpression()), !dbg !4221
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4222
  br i1 %3, label %4, label %16, !dbg !4224

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #20, !dbg !4225
  br i1 %5, label %6, label %16, !dbg !4226

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4227
  %8 = load volatile i32, i32* %7, align 4, !dbg !4227
  %9 = icmp eq i32 %8, 0, !dbg !4229
  br i1 %9, label %16, label %10, !dbg !4230

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4231
  call void @llvm.dbg.value(metadata i32 %11, metadata !4219, metadata !DIExpression()), !dbg !4221
  tail call void @restore_interrupt_mask(i32 noundef %11) #21, !dbg !4232
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4233
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4233
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4220, metadata !DIExpression()), !dbg !4221
  %14 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !4234
  %15 = load i32, i32* %14, align 4, !dbg !4234
  call void @llvm.dbg.value(metadata i32 %15, metadata !4218, metadata !DIExpression()), !dbg !4221
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %13, i32 noundef %15) #21, !dbg !4235
  br label %16, !dbg !4236

16:                                               ; preds = %6, %2, %4, %10
  %17 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4221
  ret i32 %17, !dbg !4237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #8 !dbg !4238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4242, metadata !DIExpression()), !dbg !4243
  %2 = icmp ult i32 %0, 4, !dbg !4244
  ret i1 %2, !dbg !4245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #8 !dbg !4246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4250, metadata !DIExpression()), !dbg !4251
  %2 = icmp ult i32 %0, 13, !dbg !4252
  ret i1 %2, !dbg !4253
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4254 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4270, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4271, metadata !DIExpression()), !dbg !4274
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4275
  br i1 %3, label %4, label %23, !dbg !4277

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #20, !dbg !4278
  br i1 %5, label %6, label %23, !dbg !4279

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4280
  %8 = load volatile i32, i32* %7, align 4, !dbg !4280
  %9 = icmp eq i32 %8, 0, !dbg !4282
  br i1 %9, label %23, label %10, !dbg !4283

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4284
  call void @llvm.dbg.value(metadata i32 %11, metadata !4272, metadata !DIExpression()), !dbg !4274
  tail call void @restore_interrupt_mask(i32 noundef %11) #21, !dbg !4285
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4286
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4286
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4273, metadata !DIExpression()), !dbg !4274
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4287
  %15 = load i32, i32* %14, align 4, !dbg !4287
  %16 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %15) #20, !dbg !4288
  %17 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4289
  %18 = load i32, i32* %17, align 4, !dbg !4289
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4290
  %20 = load i32, i32* %19, align 4, !dbg !4290
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4291
  %22 = load i32, i32* %21, align 4, !dbg !4291
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %13, i32 noundef %18, i32 noundef %20, i32 noundef %22) #21, !dbg !4292
  br label %23, !dbg !4293

23:                                               ; preds = %6, %2, %4, %10
  %24 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4274
  ret i32 %24, !dbg !4294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #2 !dbg !4295 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !4299, metadata !DIExpression()), !dbg !4300
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !4301
  %3 = load i32, i32* %2, align 4, !dbg !4301
  %4 = icmp ult i32 %3, 13, !dbg !4302
  br i1 %4, label %5, label %17, !dbg !4303

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !4304
  %7 = load i32, i32* %6, align 4, !dbg !4304
  %8 = icmp ult i32 %7, 4, !dbg !4305
  br i1 %8, label %9, label %17, !dbg !4306

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !4307
  %11 = load i32, i32* %10, align 4, !dbg !4307
  %12 = icmp ult i32 %11, 2, !dbg !4308
  br i1 %12, label %13, label %17, !dbg !4309

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !4310
  %15 = load i32, i32* %14, align 4, !dbg !4310
  %16 = icmp ult i32 %15, 3, !dbg !4311
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !4300
  ret i1 %18, !dbg !4312
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4318, metadata !DIExpression()), !dbg !4326
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4319, metadata !DIExpression()), !dbg !4326
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4327
  br i1 %3, label %4, label %41, !dbg !4329

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #20, !dbg !4330
  br i1 %5, label %6, label %41, !dbg !4331

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4332
  call void @llvm.dbg.value(metadata i32 %7, metadata !4323, metadata !DIExpression()), !dbg !4326
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4333
  %9 = load volatile i32, i32* %8, align 4, !dbg !4333
  %10 = icmp eq i32 %9, 0, !dbg !4335
  br i1 %10, label %12, label %11, !dbg !4336

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !4337
  br label %41, !dbg !4339

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !4340
  br i1 %13, label %22, label %14, !dbg !4342

14:                                               ; preds = %12, %14
  %15 = phi i32 [ %19, %14 ], [ 0, %12 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !4321, metadata !DIExpression()), !dbg !4326
  %16 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %15, !dbg !4343
  store volatile i32 0, i32* %16, align 4, !dbg !4348
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 1, !dbg !4349
  store i8* null, i8** %17, align 4, !dbg !4350
  %18 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 0, !dbg !4351
  store void (i32, i8*)* null, void (i32, i8*)** %18, align 4, !dbg !4352
  %19 = add nuw nsw i32 %15, 1, !dbg !4353
  call void @llvm.dbg.value(metadata i32 %19, metadata !4321, metadata !DIExpression()), !dbg !4326
  %20 = icmp eq i32 %19, 4, !dbg !4354
  br i1 %20, label %21, label %14, !dbg !4355, !llvm.loop !4356

21:                                               ; preds = %14
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !4358
  br label %22, !dbg !4359

22:                                               ; preds = %21, %12
  store volatile i32 1, i32* %8, align 4, !dbg !4360
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !4361
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !4362
  %24 = load i32, i32* %23, align 4, !dbg !4362
  %25 = tail call i32 @hal_clock_enable(i32 noundef %24) #21, !dbg !4363
  call void @llvm.dbg.value(metadata i32 %25, metadata !4324, metadata !DIExpression()), !dbg !4326
  %26 = icmp eq i32 %25, 0, !dbg !4364
  br i1 %26, label %28, label %27, !dbg !4366

27:                                               ; preds = %22
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4367
  unreachable, !dbg !4367

28:                                               ; preds = %22
  %29 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4369
  %30 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %29, align 4, !dbg !4369
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %30, metadata !4320, metadata !DIExpression()), !dbg !4326
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %30) #21, !dbg !4370
  %31 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4371
  %32 = load i32, i32* %31, align 4, !dbg !4371
  %33 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %32, !dbg !4372
  %34 = load i32, i32* %33, align 4, !dbg !4372
  call void @llvm.dbg.value(metadata i32 %34, metadata !4322, metadata !DIExpression()), !dbg !4326
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %30, i32 noundef %34) #21, !dbg !4373
  %35 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4374
  %36 = load i32, i32* %35, align 4, !dbg !4374
  %37 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4375
  %38 = load i32, i32* %37, align 4, !dbg !4375
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4376
  %40 = load i32, i32* %39, align 4, !dbg !4376
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %30, i32 noundef %36, i32 noundef %38, i32 noundef %40) #21, !dbg !4377
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %30) #21, !dbg !4378
  br label %41, !dbg !4379

41:                                               ; preds = %2, %4, %28, %11
  %42 = phi i32 [ -3, %11 ], [ 0, %28 ], [ -4, %4 ], [ -4, %2 ], !dbg !4326
  ret i32 %42, !dbg !4380
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !4381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4385, metadata !DIExpression()), !dbg !4392
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4393
  br i1 %2, label %3, label %54, !dbg !4395

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4396
  call void @llvm.dbg.value(metadata i32 %4, metadata !4389, metadata !DIExpression()), !dbg !4392
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4397
  %6 = load volatile i32, i32* %5, align 4, !dbg !4397
  %7 = icmp eq i32 %6, 0, !dbg !4399
  br i1 %7, label %52, label %8, !dbg !4400

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4401
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !4401
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !4386, metadata !DIExpression()), !dbg !4392
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #21, !dbg !4402
  %11 = load volatile i32, i32* %5, align 4, !dbg !4403
  %12 = icmp eq i32 %11, 2, !dbg !4405
  br i1 %12, label %13, label %43, !dbg !4406

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4407
  call void @llvm.dbg.value(metadata i32 %14, metadata !4387, metadata !DIExpression()), !dbg !4392
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !4409
  call void @llvm.dbg.value(metadata i32 %15, metadata !4388, metadata !DIExpression()), !dbg !4392
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #21, !dbg !4410
  call void @llvm.dbg.value(metadata i32 %16, metadata !4390, metadata !DIExpression()), !dbg !4392
  %17 = icmp eq i32 %16, 0, !dbg !4411
  br i1 %17, label %19, label %18, !dbg !4413

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4414
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4416
  unreachable, !dbg !4416

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #21, !dbg !4417
  call void @llvm.dbg.value(metadata i32 %20, metadata !4390, metadata !DIExpression()), !dbg !4392
  %21 = icmp eq i32 %20, 0, !dbg !4418
  br i1 %21, label %23, label %22, !dbg !4420

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4421
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4423
  unreachable, !dbg !4423

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #21, !dbg !4424
  call void @llvm.dbg.value(metadata i32 %24, metadata !4390, metadata !DIExpression()), !dbg !4392
  %25 = icmp eq i32 %24, 0, !dbg !4425
  br i1 %25, label %27, label %26, !dbg !4427

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4428
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4430
  unreachable, !dbg !4430

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #21, !dbg !4431
  call void @llvm.dbg.value(metadata i32 %28, metadata !4390, metadata !DIExpression()), !dbg !4392
  %29 = icmp eq i32 %28, 0, !dbg !4432
  br i1 %29, label %31, label %30, !dbg !4434

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4435
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4437
  unreachable, !dbg !4437

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #21, !dbg !4438
  call void @llvm.dbg.value(metadata i32 %32, metadata !4390, metadata !DIExpression()), !dbg !4392
  %33 = icmp eq i32 %32, 0, !dbg !4439
  br i1 %33, label %35, label %34, !dbg !4441

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4442
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4444
  unreachable, !dbg !4444

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #21, !dbg !4445
  call void @llvm.dbg.value(metadata i32 %36, metadata !4390, metadata !DIExpression()), !dbg !4392
  %37 = icmp eq i32 %36, 0, !dbg !4446
  br i1 %37, label %39, label %38, !dbg !4448

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4449
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4451
  unreachable, !dbg !4451

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !4452
  %41 = load i32, i32* %40, align 4, !dbg !4452
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #21, !dbg !4453
  br label %43, !dbg !4454

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #21, !dbg !4455
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !4456
  %45 = load i32, i32* %44, align 4, !dbg !4456
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #21, !dbg !4457
  call void @llvm.dbg.value(metadata i32 %46, metadata !4391, metadata !DIExpression()), !dbg !4392
  %47 = icmp eq i32 %46, 0, !dbg !4458
  br i1 %47, label %49, label %48, !dbg !4460

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4461
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4463
  unreachable, !dbg !4463

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4464
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !4465
  %51 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4466
  store i8* null, i8** %51, align 4, !dbg !4467
  store volatile i32 0, i32* %5, align 4, !dbg !4468
  br label %52, !dbg !4469

52:                                               ; preds = %3, %49
  %53 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #21, !dbg !4392
  br label %54, !dbg !4470

54:                                               ; preds = %52, %1
  %55 = phi i32 [ -4, %1 ], [ %53, %52 ], !dbg !4392
  ret i32 %55, !dbg !4470
}

; Function Attrs: optsize
declare dso_local i32 @vdma_stop(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_deinit(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !4471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4475, metadata !DIExpression()), !dbg !4478
  call void @llvm.dbg.value(metadata i8 %1, metadata !4476, metadata !DIExpression()), !dbg !4478
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4479
  br i1 %3, label %4, label %11, !dbg !4481

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4482
  %6 = load volatile i32, i32* %5, align 4, !dbg !4482
  %7 = icmp eq i32 %6, 1, !dbg !4484
  br i1 %7, label %8, label %11, !dbg !4485

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4486
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !4486
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !4477, metadata !DIExpression()), !dbg !4478
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #21, !dbg !4487
  br label %11, !dbg !4488

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !4488
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !4489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4495, metadata !DIExpression()), !dbg !4499
  call void @llvm.dbg.value(metadata i8* %1, metadata !4496, metadata !DIExpression()), !dbg !4499
  call void @llvm.dbg.value(metadata i32 %2, metadata !4497, metadata !DIExpression()), !dbg !4499
  call void @llvm.dbg.value(metadata i32 0, metadata !4498, metadata !DIExpression()), !dbg !4499
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4500
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !4502
  br i1 %6, label %7, label %20, !dbg !4502

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4503
  %9 = load volatile i32, i32* %8, align 4, !dbg !4503
  %10 = icmp ne i32 %9, 1, !dbg !4505
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !4506
  call void @llvm.dbg.value(metadata i32 0, metadata !4498, metadata !DIExpression()), !dbg !4499
  call void @llvm.dbg.value(metadata i8* %1, metadata !4496, metadata !DIExpression()), !dbg !4499
  br i1 %12, label %20, label %13, !dbg !4506

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4498, metadata !DIExpression()), !dbg !4499
  call void @llvm.dbg.value(metadata i8* %15, metadata !4496, metadata !DIExpression()), !dbg !4499
  %16 = load i8, i8* %15, align 1, !dbg !4507
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #20, !dbg !4511
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !4512
  call void @llvm.dbg.value(metadata i8* %17, metadata !4496, metadata !DIExpression()), !dbg !4499
  %18 = add nuw i32 %14, 1, !dbg !4513
  call void @llvm.dbg.value(metadata i32 %18, metadata !4498, metadata !DIExpression()), !dbg !4499
  %19 = icmp eq i32 %18, %2, !dbg !4514
  br i1 %19, label %20, label %13, !dbg !4515, !llvm.loop !4516

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !4499
  ret i32 %21, !dbg !4518
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !4519 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4521, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.value(metadata i8* %1, metadata !4522, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.value(metadata i32 %2, metadata !4523, metadata !DIExpression()), !dbg !4529
  %5 = bitcast i32* %4 to i8*, !dbg !4530
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !4530
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4531
  %7 = xor i1 %6, true, !dbg !4533
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !4533
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !4533
  br i1 %11, label %45, label %12, !dbg !4533

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4534
  %14 = load volatile i32, i32* %13, align 4, !dbg !4534
  %15 = icmp eq i32 %14, 2, !dbg !4536
  br i1 %15, label %16, label %45, !dbg !4537

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4538
  call void @llvm.dbg.value(metadata i32 %17, metadata !4524, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.value(metadata i32* %4, metadata !4527, metadata !DIExpression(DW_OP_deref)), !dbg !4529
  %18 = call i32 @vdma_get_available_send_space(i32 noundef %17, i32* noundef nonnull %4) #21, !dbg !4539
  call void @llvm.dbg.value(metadata i32 %18, metadata !4528, metadata !DIExpression()), !dbg !4529
  %19 = icmp eq i32 %18, 0, !dbg !4540
  br i1 %19, label %21, label %20, !dbg !4542

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4543
  unreachable, !dbg !4543

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !4545
  call void @llvm.dbg.value(metadata i32 %22, metadata !4527, metadata !DIExpression()), !dbg !4529
  %23 = icmp ult i32 %22, %2, !dbg !4547
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !4526, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.value(metadata i32 0, metadata !4525, metadata !DIExpression()), !dbg !4529
  %25 = icmp eq i32 %24, 0, !dbg !4548
  br i1 %25, label %38, label %28, !dbg !4551

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !4525, metadata !DIExpression()), !dbg !4529
  %27 = icmp eq i32 %34, %24, !dbg !4548
  br i1 %27, label %36, label %28, !dbg !4551, !llvm.loop !4552

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %34, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !4525, metadata !DIExpression()), !dbg !4529
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !4554
  %31 = load i8, i8* %30, align 1, !dbg !4554
  %32 = call i32 @vdma_push_data(i32 noundef %17, i8 noundef zeroext %31) #21, !dbg !4556
  call void @llvm.dbg.value(metadata i32 %32, metadata !4528, metadata !DIExpression()), !dbg !4529
  %33 = icmp eq i32 %32, 0, !dbg !4557
  %34 = add nuw i32 %29, 1, !dbg !4559
  call void @llvm.dbg.value(metadata i32 %34, metadata !4525, metadata !DIExpression()), !dbg !4529
  br i1 %33, label %26, label %35, !dbg !4560

35:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4561
  unreachable, !dbg !4561

36:                                               ; preds = %26
  %37 = load i32, i32* %4, align 4, !dbg !4563
  br label %38, !dbg !4563

38:                                               ; preds = %36, %21
  %39 = phi i32 [ %37, %36 ], [ %22, %21 ], !dbg !4563
  call void @llvm.dbg.value(metadata i32 %39, metadata !4527, metadata !DIExpression()), !dbg !4529
  %40 = icmp eq i32 %24, %39, !dbg !4565
  br i1 %40, label %41, label %45, !dbg !4566

41:                                               ; preds = %38
  %42 = call i32 @vdma_enable_interrupt(i32 noundef %17) #21, !dbg !4567
  call void @llvm.dbg.value(metadata i32 %42, metadata !4528, metadata !DIExpression()), !dbg !4529
  %43 = icmp eq i32 %42, 0, !dbg !4569
  br i1 %43, label %45, label %44, !dbg !4571

44:                                               ; preds = %41
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4572
  unreachable, !dbg !4572

45:                                               ; preds = %38, %41, %12, %3
  %46 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %41 ], [ %24, %38 ], !dbg !4529
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !4574
  ret i32 %46, !dbg !4574
}

; Function Attrs: optsize
declare dso_local i32 @vdma_push_data(i32 noundef, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !4575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4579, metadata !DIExpression()), !dbg !4582
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4583
  br i1 %2, label %3, label %11, !dbg !4585

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4586
  %5 = load volatile i32, i32* %4, align 4, !dbg !4586
  %6 = icmp eq i32 %5, 1, !dbg !4588
  br i1 %6, label %7, label %11, !dbg !4589

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4590
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !4590
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !4581, metadata !DIExpression()), !dbg !4582
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !4591
  call void @llvm.dbg.value(metadata i8 %10, metadata !4580, metadata !DIExpression()), !dbg !4582
  br label %11, !dbg !4592

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !4582
  ret i8 %12, !dbg !4593
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !4594 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4598, metadata !DIExpression()), !dbg !4601
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4602
  br i1 %2, label %3, label %11, !dbg !4604

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4605
  %5 = load volatile i32, i32* %4, align 4, !dbg !4605
  %6 = icmp eq i32 %5, 1, !dbg !4607
  br i1 %6, label %7, label %11, !dbg !4608

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4609
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !4609
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !4600, metadata !DIExpression()), !dbg !4601
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !4610
  call void @llvm.dbg.value(metadata i32 %10, metadata !4599, metadata !DIExpression()), !dbg !4601
  br label %11, !dbg !4611

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !4601
  ret i32 %12, !dbg !4612
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !4613 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4617, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8* %1, metadata !4618, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %2, metadata !4619, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8* %1, metadata !4621, metadata !DIExpression()), !dbg !4622
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4623
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !4625
  br i1 %6, label %7, label %19, !dbg !4625

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4626
  %9 = load volatile i32, i32* %8, align 4, !dbg !4626
  %10 = icmp ne i32 %9, 1, !dbg !4628
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !4629
  call void @llvm.dbg.value(metadata i32 0, metadata !4620, metadata !DIExpression()), !dbg !4622
  br i1 %12, label %19, label %13, !dbg !4629

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4620, metadata !DIExpression()), !dbg !4622
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #20, !dbg !4630
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !4634
  store i8 %15, i8* %16, align 1, !dbg !4635
  %17 = add nuw i32 %14, 1, !dbg !4636
  call void @llvm.dbg.value(metadata i32 %17, metadata !4620, metadata !DIExpression()), !dbg !4622
  %18 = icmp eq i32 %17, %2, !dbg !4637
  br i1 %18, label %19, label %13, !dbg !4638, !llvm.loop !4639

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !4622
  ret i32 %20, !dbg !4641
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !4642 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4644, metadata !DIExpression()), !dbg !4652
  call void @llvm.dbg.value(metadata i8* %1, metadata !4645, metadata !DIExpression()), !dbg !4652
  call void @llvm.dbg.value(metadata i32 %2, metadata !4646, metadata !DIExpression()), !dbg !4652
  %5 = bitcast i32* %4 to i8*, !dbg !4653
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !4653
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4654
  %7 = xor i1 %6, true, !dbg !4656
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !4656
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !4656
  br i1 %11, label %44, label %12, !dbg !4656

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4657
  %14 = load volatile i32, i32* %13, align 4, !dbg !4657
  %15 = icmp eq i32 %14, 2, !dbg !4659
  br i1 %15, label %16, label %44, !dbg !4660

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !4661
  call void @llvm.dbg.value(metadata i32 %17, metadata !4647, metadata !DIExpression()), !dbg !4652
  call void @llvm.dbg.value(metadata i32* %4, metadata !4649, metadata !DIExpression(DW_OP_deref)), !dbg !4652
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #21, !dbg !4662
  call void @llvm.dbg.value(metadata i32 %18, metadata !4651, metadata !DIExpression()), !dbg !4652
  %19 = icmp eq i32 %18, 0, !dbg !4663
  br i1 %19, label %21, label %20, !dbg !4665

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4666
  unreachable, !dbg !4666

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !4668
  call void @llvm.dbg.value(metadata i32 %22, metadata !4649, metadata !DIExpression()), !dbg !4652
  %23 = icmp ult i32 %22, %2, !dbg !4670
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !4648, metadata !DIExpression()), !dbg !4652
  call void @llvm.dbg.value(metadata i32 0, metadata !4650, metadata !DIExpression()), !dbg !4652
  %25 = icmp eq i32 %24, 0, !dbg !4671
  br i1 %25, label %37, label %28, !dbg !4674

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !4650, metadata !DIExpression()), !dbg !4652
  %27 = icmp eq i32 %33, %24, !dbg !4671
  br i1 %27, label %35, label %28, !dbg !4674, !llvm.loop !4675

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !4650, metadata !DIExpression()), !dbg !4652
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !4677
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #21, !dbg !4679
  call void @llvm.dbg.value(metadata i32 %31, metadata !4651, metadata !DIExpression()), !dbg !4652
  %32 = icmp eq i32 %31, 0, !dbg !4680
  %33 = add nuw i32 %29, 1, !dbg !4682
  call void @llvm.dbg.value(metadata i32 %33, metadata !4650, metadata !DIExpression()), !dbg !4652
  br i1 %32, label %26, label %34, !dbg !4683

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4684
  unreachable, !dbg !4684

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !4686
  br label %37, !dbg !4686

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !4686
  call void @llvm.dbg.value(metadata i32 %38, metadata !4649, metadata !DIExpression()), !dbg !4652
  %39 = icmp eq i32 %24, %38, !dbg !4688
  br i1 %39, label %40, label %44, !dbg !4689

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #21, !dbg !4690
  call void @llvm.dbg.value(metadata i32 %41, metadata !4651, metadata !DIExpression()), !dbg !4652
  %42 = icmp eq i32 %41, 0, !dbg !4692
  br i1 %42, label %44, label %43, !dbg !4694

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4695
  unreachable, !dbg !4695

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !4652
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !4697
  ret i32 %45, !dbg !4697
}

; Function Attrs: optsize
declare dso_local i32 @vdma_pop_data(i32 noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !4698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4702, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !4703, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i8* %2, metadata !4704, metadata !DIExpression()), !dbg !4710
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4711
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !4713
  br i1 %6, label %7, label %39, !dbg !4713

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4714
  call void @llvm.dbg.value(metadata i32 %8, metadata !4707, metadata !DIExpression()), !dbg !4710
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4715
  %10 = load volatile i32, i32* %9, align 4, !dbg !4715
  %11 = icmp eq i32 %10, 1, !dbg !4717
  br i1 %11, label %12, label %37, !dbg !4718

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4719
  call void @llvm.dbg.value(metadata i32 %13, metadata !4705, metadata !DIExpression()), !dbg !4710
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !4720
  call void @llvm.dbg.value(metadata i32 %14, metadata !4706, metadata !DIExpression()), !dbg !4710
  %15 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4721
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !4722
  %16 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4723
  store i8* %2, i8** %16, align 4, !dbg !4724
  %17 = shl i32 %0, 1, !dbg !4725
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !4726
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #21, !dbg !4727
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !4728
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #21, !dbg !4729
  call void @llvm.dbg.value(metadata i32 %20, metadata !4708, metadata !DIExpression()), !dbg !4710
  %21 = icmp eq i32 %20, 0, !dbg !4730
  br i1 %21, label %23, label %22, !dbg !4732

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !4733
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4735
  unreachable, !dbg !4735

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !4736
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !4737
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #21, !dbg !4738
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !4739
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #21, !dbg !4740
  call void @llvm.dbg.value(metadata i32 %27, metadata !4708, metadata !DIExpression()), !dbg !4710
  %28 = icmp eq i32 %27, 0, !dbg !4741
  br i1 %28, label %30, label %29, !dbg !4743

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !4744
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4746
  unreachable, !dbg !4746

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !4747
  %32 = load i32, i32* %31, align 4, !dbg !4747
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #21, !dbg !4748
  call void @llvm.dbg.value(metadata i32 %33, metadata !4709, metadata !DIExpression()), !dbg !4710
  %34 = icmp eq i32 %33, 0, !dbg !4749
  br i1 %34, label %36, label %35, !dbg !4751

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !4752
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4754
  unreachable, !dbg !4754

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #20, !dbg !4755
  store volatile i32 2, i32* %9, align 4, !dbg !4756
  br label %37, !dbg !4757

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !4710
  br label %39, !dbg !4758

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !4710
  ret i32 %40, !dbg !4758
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !4759 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4764, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i8* %1, metadata !4765, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.value(metadata i8* %1, metadata !4766, metadata !DIExpression()), !dbg !4767
  %3 = load i8, i8* %1, align 4, !dbg !4768, !range !2542
  %4 = icmp eq i8 %3, 0, !dbg !4768
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !4770
  %6 = bitcast i8* %5 to i32*, !dbg !4770
  %7 = load i32, i32* %6, align 4, !dbg !4770
  br i1 %4, label %9, label %8, !dbg !4771

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4766, metadata !DIExpression()), !dbg !4767
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #20, !dbg !4772
  br label %10, !dbg !4774

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #20, !dbg !4775
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !4777
}

; Function Attrs: optsize
declare dso_local i32 @vdma_register_callback(i32 noundef, void (i32, i8*)* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !4778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4780, metadata !DIExpression()), !dbg !4785
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4786
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !4786
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !4781, metadata !DIExpression()), !dbg !4785
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4787
  call void @llvm.dbg.value(metadata i32 %4, metadata !4782, metadata !DIExpression()), !dbg !4785
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !4788
  call void @llvm.dbg.value(metadata i32 %5, metadata !4783, metadata !DIExpression()), !dbg !4785
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #21, !dbg !4789
  %6 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !4790
  %7 = load i32, i32* %6, align 4, !dbg !4790
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef %7) #21, !dbg !4791
  %9 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #21, !dbg !4792
  call void @llvm.dbg.value(metadata i32 %9, metadata !4784, metadata !DIExpression()), !dbg !4785
  %10 = icmp eq i32 %9, 0, !dbg !4793
  br i1 %10, label %12, label %11, !dbg !4795

11:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4796
  unreachable, !dbg !4796

12:                                               ; preds = %1
  %13 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #21, !dbg !4798
  call void @llvm.dbg.value(metadata i32 %13, metadata !4784, metadata !DIExpression()), !dbg !4785
  %14 = icmp eq i32 %13, 0, !dbg !4799
  br i1 %14, label %16, label %15, !dbg !4801

15:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4802
  unreachable, !dbg !4802

16:                                               ; preds = %12
  %17 = tail call i32 @vdma_start(i32 noundef %4) #21, !dbg !4804
  call void @llvm.dbg.value(metadata i32 %17, metadata !4784, metadata !DIExpression()), !dbg !4785
  %18 = icmp eq i32 %17, 0, !dbg !4805
  br i1 %18, label %20, label %19, !dbg !4807

19:                                               ; preds = %16
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4808
  unreachable, !dbg !4808

20:                                               ; preds = %16
  %21 = tail call i32 @vdma_start(i32 noundef %5) #21, !dbg !4810
  call void @llvm.dbg.value(metadata i32 %21, metadata !4784, metadata !DIExpression()), !dbg !4785
  %22 = icmp eq i32 %21, 0, !dbg !4811
  br i1 %22, label %24, label %23, !dbg !4813

23:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4814
  unreachable, !dbg !4814

24:                                               ; preds = %20
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #21, !dbg !4816
  ret void, !dbg !4817
}

; Function Attrs: optsize
declare dso_local i32 @vdma_start(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !4818 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4820, metadata !DIExpression()), !dbg !4824
  %3 = bitcast i32* %2 to i8*, !dbg !4825
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4825
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4826
  br i1 %4, label %5, label %16, !dbg !4828

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4829
  %7 = load volatile i32, i32* %6, align 4, !dbg !4829
  %8 = icmp eq i32 %7, 2, !dbg !4831
  br i1 %8, label %9, label %16, !dbg !4832

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4833
  call void @llvm.dbg.value(metadata i32 %10, metadata !4821, metadata !DIExpression()), !dbg !4824
  call void @llvm.dbg.value(metadata i32* %2, metadata !4822, metadata !DIExpression(DW_OP_deref)), !dbg !4824
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #21, !dbg !4834
  call void @llvm.dbg.value(metadata i32 %11, metadata !4823, metadata !DIExpression()), !dbg !4824
  %12 = icmp eq i32 %11, 0, !dbg !4835
  br i1 %12, label %14, label %13, !dbg !4837

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4838
  unreachable, !dbg !4838

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !4840
  call void @llvm.dbg.value(metadata i32 %15, metadata !4822, metadata !DIExpression()), !dbg !4824
  br label %16, !dbg !4841

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !4824
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4842
  ret i32 %17, !dbg !4842
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !4843 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4845, metadata !DIExpression()), !dbg !4849
  %3 = bitcast i32* %2 to i8*, !dbg !4850
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4850
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4851
  br i1 %4, label %5, label %16, !dbg !4853

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4854
  %7 = load volatile i32, i32* %6, align 4, !dbg !4854
  %8 = icmp eq i32 %7, 2, !dbg !4856
  br i1 %8, label %9, label %16, !dbg !4857

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !4858
  call void @llvm.dbg.value(metadata i32 %10, metadata !4846, metadata !DIExpression()), !dbg !4849
  call void @llvm.dbg.value(metadata i32* %2, metadata !4847, metadata !DIExpression(DW_OP_deref)), !dbg !4849
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #21, !dbg !4859
  call void @llvm.dbg.value(metadata i32 %11, metadata !4848, metadata !DIExpression()), !dbg !4849
  %12 = icmp eq i32 %11, 0, !dbg !4860
  br i1 %12, label %14, label %13, !dbg !4862

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4863
  unreachable, !dbg !4863

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !4865
  call void @llvm.dbg.value(metadata i32 %15, metadata !4847, metadata !DIExpression()), !dbg !4849
  br label %16, !dbg !4866

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !4849
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4867
  ret i32 %17, !dbg !4867
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !4868 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4870, metadata !DIExpression()), !dbg !4872
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4873
  br i1 %2, label %3, label %10, !dbg !4875

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4876
  %5 = load volatile i32, i32* %4, align 4, !dbg !4876
  %6 = icmp eq i32 %5, 0, !dbg !4878
  br i1 %6, label %10, label %7, !dbg !4879

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4880
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !4880
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !4871, metadata !DIExpression()), !dbg !4872
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !4881
  br label %10, !dbg !4882

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !4872
  ret i32 %11, !dbg !4883
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !4884 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4888, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.value(metadata i8 %1, metadata !4889, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.value(metadata i8 %2, metadata !4890, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.value(metadata i8 %3, metadata !4891, metadata !DIExpression()), !dbg !4893
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4894
  br i1 %5, label %6, label %13, !dbg !4896

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4897
  %8 = load volatile i32, i32* %7, align 4, !dbg !4897
  %9 = icmp eq i32 %8, 0, !dbg !4899
  br i1 %9, label %13, label %10, !dbg !4900

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4901
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !4901
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !4892, metadata !DIExpression()), !dbg !4893
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #21, !dbg !4902
  br label %13, !dbg !4903

13:                                               ; preds = %6, %4, %10
  %14 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !4893
  ret i32 %14, !dbg !4904
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !4905 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4907, metadata !DIExpression()), !dbg !4909
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4910
  br i1 %2, label %3, label %10, !dbg !4912

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4913
  %5 = load volatile i32, i32* %4, align 4, !dbg !4913
  %6 = icmp eq i32 %5, 0, !dbg !4915
  br i1 %6, label %10, label %7, !dbg !4916

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4917
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !4917
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !4908, metadata !DIExpression()), !dbg !4909
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #21, !dbg !4918
  br label %10, !dbg !4919

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !4909
  ret i32 %11, !dbg !4920
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4921 {
  %3 = alloca %struct.vdma_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4927, metadata !DIExpression()), !dbg !4939
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !4928, metadata !DIExpression()), !dbg !4939
  %4 = bitcast %struct.vdma_config_t* %3 to i8*, !dbg !4940
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #22, !dbg !4940
  call void @llvm.dbg.declare(metadata %struct.vdma_config_t* %3, metadata !4930, metadata !DIExpression()), !dbg !4941
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #20, !dbg !4942
  br i1 %5, label %6, label %101, !dbg !4944

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !4945
  %8 = load i8*, i8** %7, align 4, !dbg !4945
  %9 = icmp eq i8* %8, null, !dbg !4947
  br i1 %9, label %101, label %10, !dbg !4948

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !4949
  %12 = load i8*, i8** %11, align 4, !dbg !4949
  %13 = icmp eq i8* %12, null, !dbg !4950
  br i1 %13, label %101, label %14, !dbg !4951

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !4952
  %16 = load i32, i32* %15, align 4, !dbg !4952
  %17 = icmp ugt i32 %16, 131071, !dbg !4954
  br i1 %17, label %101, label %18, !dbg !4955

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !4956
  %20 = load i32, i32* %19, align 4, !dbg !4956
  %21 = icmp ugt i32 %20, 131071, !dbg !4957
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !4958
  br i1 %23, label %101, label %24, !dbg !4958

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !4959
  %26 = load i32, i32* %25, align 4, !dbg !4959
  %27 = icmp ugt i32 %26, 131071, !dbg !4961
  br i1 %27, label %101, label %28, !dbg !4962

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !4963
  %30 = load i32, i32* %29, align 4, !dbg !4963
  %31 = icmp ugt i32 %30, 131071, !dbg !4964
  br i1 %31, label %101, label %32, !dbg !4965

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !4966
  %34 = load i32, i32* %33, align 4, !dbg !4966
  %35 = icmp ugt i32 %34, 131071, !dbg !4967
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !4968
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !4968
  br i1 %39, label %101, label %40, !dbg !4968

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4969
  %42 = load volatile i32, i32* %41, align 4, !dbg !4969
  %43 = icmp eq i32 %42, 1, !dbg !4971
  br i1 %43, label %44, label %101, !dbg !4972

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #21, !dbg !4973
  call void @llvm.dbg.value(metadata i32 %45, metadata !4936, metadata !DIExpression()), !dbg !4939
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #21, !dbg !4974
  call void @llvm.dbg.value(metadata i32 %46, metadata !4937, metadata !DIExpression()), !dbg !4939
  %47 = tail call i32 @vdma_init(i32 noundef %45) #21, !dbg !4975
  call void @llvm.dbg.value(metadata i32 %47, metadata !4938, metadata !DIExpression()), !dbg !4939
  %48 = icmp eq i32 %47, 0, !dbg !4976
  br i1 %48, label %50, label %49, !dbg !4978

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4979
  unreachable, !dbg !4979

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !4981
  %52 = ptrtoint i8* %51 to i32, !dbg !4982
  %53 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %3, i32 0, i32 0, !dbg !4983
  store i32 %52, i32* %53, align 4, !dbg !4984
  %54 = load i32, i32* %15, align 4, !dbg !4985
  %55 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %3, i32 0, i32 1, !dbg !4986
  store i32 %54, i32* %55, align 4, !dbg !4987
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.vdma_config_t* noundef nonnull %3) #21, !dbg !4988
  call void @llvm.dbg.value(metadata i32 %56, metadata !4938, metadata !DIExpression()), !dbg !4939
  %57 = icmp eq i32 %56, 0, !dbg !4989
  br i1 %57, label %59, label %58, !dbg !4991

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4992
  unreachable, !dbg !4992

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !4994
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #21, !dbg !4995
  call void @llvm.dbg.value(metadata i32 %61, metadata !4938, metadata !DIExpression()), !dbg !4939
  %62 = icmp eq i32 %61, 0, !dbg !4996
  br i1 %62, label %64, label %63, !dbg !4998

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !4999
  unreachable, !dbg !4999

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #21, !dbg !5001
  call void @llvm.dbg.value(metadata i32 %65, metadata !4938, metadata !DIExpression()), !dbg !4939
  %66 = icmp eq i32 %65, 0, !dbg !5002
  br i1 %66, label %68, label %67, !dbg !5004

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !5005
  unreachable, !dbg !5005

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !5007
  %70 = ptrtoint i8* %69 to i32, !dbg !5008
  store i32 %70, i32* %53, align 4, !dbg !5009
  %71 = load i32, i32* %25, align 4, !dbg !5010
  store i32 %71, i32* %55, align 4, !dbg !5011
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.vdma_config_t* noundef nonnull %3) #21, !dbg !5012
  call void @llvm.dbg.value(metadata i32 %72, metadata !4938, metadata !DIExpression()), !dbg !4939
  %73 = icmp eq i32 %72, 0, !dbg !5013
  br i1 %73, label %75, label %74, !dbg !5015

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !5016
  unreachable, !dbg !5016

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !5018
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #21, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %77, metadata !4938, metadata !DIExpression()), !dbg !4939
  %78 = icmp eq i32 %77, 0, !dbg !5020
  br i1 %78, label %80, label %79, !dbg !5022

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !5023
  unreachable, !dbg !5023

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !5025
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #21, !dbg !5026
  call void @llvm.dbg.value(metadata i32 %82, metadata !4938, metadata !DIExpression()), !dbg !4939
  %83 = icmp eq i32 %82, 0, !dbg !5027
  br i1 %83, label %85, label %84, !dbg !5029

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !5030
  unreachable, !dbg !5030

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #21, !dbg !5032
  call void @llvm.dbg.value(metadata i32 %86, metadata !4929, metadata !DIExpression()), !dbg !4939
  %87 = load i8*, i8** %7, align 4, !dbg !5033
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !5034
  store i8* %87, i8** %88, align 4, !dbg !5035
  %89 = load i32, i32* %15, align 4, !dbg !5036
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5037
  store i32 %89, i32* %90, align 4, !dbg !5038
  %91 = load i32, i32* %19, align 4, !dbg !5039
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !5040
  store i32 %91, i32* %92, align 4, !dbg !5041
  %93 = load i32, i32* %33, align 4, !dbg !5042
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !5043
  store i32 %93, i32* %94, align 4, !dbg !5044
  %95 = load i8*, i8** %11, align 4, !dbg !5045
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !5046
  store i8* %95, i8** %96, align 4, !dbg !5047
  %97 = load i32, i32* %25, align 4, !dbg !5048
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !5049
  store i32 %97, i32* %98, align 4, !dbg !5050
  %99 = load i32, i32* %29, align 4, !dbg !5051
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !5052
  store i32 %99, i32* %100, align 4, !dbg !5053
  call void @restore_interrupt_mask(i32 noundef %86) #21, !dbg !5054
  br label %101, !dbg !5055

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !4939
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5056
  ret i32 %102, !dbg !5056
}

; Function Attrs: optsize
declare dso_local i32 @vdma_init(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_configure(i32 noundef, %struct.vdma_config_t* noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_set_threshold(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_set_alert_length(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5057 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5116, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.value(metadata i32 %1, metadata !5117, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !5126, metadata !DIExpression()), !dbg !5132
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !5133
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5133
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !5130, metadata !DIExpression()), !dbg !5134
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !5134
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !5134
  store i32 1, i32* %5, align 4, !dbg !5134
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !5134
  store i32 1, i32* %6, align 4, !dbg !5134
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !5134
  store i32 1, i32* %7, align 4, !dbg !5134
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !5134
  store i32 1, i32* %8, align 4, !dbg !5134
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !5134
  store i32 1, i32* %9, align 4, !dbg !5134
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !5135
  store volatile i32 0, i32* %10, align 4, !dbg !5136
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !5137
  store volatile i32 0, i32* %11, align 4, !dbg !5138
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !5139
  store volatile i32 0, i32* %12, align 4, !dbg !5140
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #21, !dbg !5141
  br i1 %13, label %14, label %17, !dbg !5143

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #21, !dbg !5144
  %16 = mul i32 %15, 1000, !dbg !5146
  call void @llvm.dbg.value(metadata i32 %16, metadata !5118, metadata !DIExpression()), !dbg !5131
  br label %17, !dbg !5147

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !5148
  call void @llvm.dbg.value(metadata i32 %18, metadata !5118, metadata !DIExpression()), !dbg !5131
  %19 = shl i32 %1, 8, !dbg !5149
  %20 = udiv i32 %18, %19, !dbg !5150
  call void @llvm.dbg.value(metadata i32 %20, metadata !5119, metadata !DIExpression()), !dbg !5131
  %21 = mul i32 %18, 10, !dbg !5151
  %22 = udiv i32 %21, %19, !dbg !5152
  %23 = urem i32 %22, 10, !dbg !5153
  call void @llvm.dbg.value(metadata i32 %23, metadata !5120, metadata !DIExpression()), !dbg !5131
  %24 = icmp ne i32 %23, 0, !dbg !5154
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !5156
  %27 = zext i1 %26 to i32, !dbg !5156
  %28 = add i32 %20, %27, !dbg !5156
  call void @llvm.dbg.value(metadata i32 %28, metadata !5119, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.value(metadata i32 %28, metadata !5122, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.value(metadata i32 undef, metadata !5123, metadata !DIExpression()), !dbg !5131
  br label %29, !dbg !5157

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !5131
  %31 = mul i32 %30, %1, !dbg !5131
  %32 = udiv i32 %18, %31, !dbg !5131
  call void @llvm.dbg.value(metadata i32 %32, metadata !5123, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.value(metadata i32 %30, metadata !5122, metadata !DIExpression()), !dbg !5131
  %33 = icmp ugt i32 %32, 256, !dbg !5158
  %34 = add i32 %30, 1, !dbg !5159
  call void @llvm.dbg.value(metadata i32 %34, metadata !5122, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.value(metadata i32 undef, metadata !5123, metadata !DIExpression()), !dbg !5131
  br i1 %33, label %29, label %35, !dbg !5157, !llvm.loop !5161

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !5163
  %37 = urem i32 %36, 10, !dbg !5164
  call void @llvm.dbg.value(metadata i32 %37, metadata !5121, metadata !DIExpression()), !dbg !5131
  %38 = add nsw i32 %32, -1, !dbg !5165
  call void @llvm.dbg.value(metadata i32 %38, metadata !5123, metadata !DIExpression()), !dbg !5131
  %39 = add nsw i32 %32, -2, !dbg !5166
  %40 = lshr i32 %39, 1, !dbg !5167
  call void @llvm.dbg.value(metadata i32 %40, metadata !5124, metadata !DIExpression()), !dbg !5131
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !5168
  store volatile i32 3, i32* %41, align 4, !dbg !5169
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5170
  %43 = load volatile i32, i32* %42, align 4, !dbg !5170
  call void @llvm.dbg.value(metadata i32 %43, metadata !5125, metadata !DIExpression()), !dbg !5131
  %44 = or i32 %43, 128, !dbg !5171
  store volatile i32 %44, i32* %42, align 4, !dbg !5172
  %45 = and i32 %30, 255, !dbg !5173
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5174
  store volatile i32 %45, i32* %46, align 4, !dbg !5175
  %47 = lshr i32 %30, 8, !dbg !5176
  %48 = and i32 %47, 255, !dbg !5177
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5178
  store volatile i32 %48, i32* %49, align 4, !dbg !5179
  store volatile i32 %43, i32* %42, align 4, !dbg !5180
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !5181
  store volatile i32 %38, i32* %50, align 4, !dbg !5182
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !5183
  store volatile i32 %40, i32* %51, align 4, !dbg !5184
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !5185
  %53 = load i32, i32* %52, align 4, !dbg !5185
  store volatile i32 %53, i32* %11, align 4, !dbg !5186
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !5187
  %55 = load i32, i32* %54, align 4, !dbg !5187
  store volatile i32 %55, i32* %12, align 4, !dbg !5188
  %56 = icmp ugt i32 %1, 2999999, !dbg !5189
  br i1 %56, label %57, label %59, !dbg !5191

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !5192
  store volatile i32 18, i32* %58, align 4, !dbg !5194
  br label %59, !dbg !5195

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5196
  ret void, !dbg !5196
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #10 !dbg !5197 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5201, metadata !DIExpression()), !dbg !5206
  call void @llvm.dbg.value(metadata i32 %1, metadata !5202, metadata !DIExpression()), !dbg !5206
  call void @llvm.dbg.value(metadata i32 %2, metadata !5203, metadata !DIExpression()), !dbg !5206
  call void @llvm.dbg.value(metadata i32 %3, metadata !5204, metadata !DIExpression()), !dbg !5206
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5207
  %6 = load volatile i32, i32* %5, align 4, !dbg !5207
  call void @llvm.dbg.value(metadata i32 %6, metadata !5205, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5206
  store volatile i32 128, i32* %5, align 4, !dbg !5208
  %7 = trunc i32 %6 to i16, !dbg !5209
  %8 = and i16 %7, -4, !dbg !5209
  call void @llvm.dbg.value(metadata i16 %7, metadata !5205, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !5206
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !5210

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !5211
  call void @llvm.dbg.value(metadata i16 %10, metadata !5205, metadata !DIExpression()), !dbg !5206
  br label %15, !dbg !5213

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !5214
  call void @llvm.dbg.value(metadata i16 %12, metadata !5205, metadata !DIExpression()), !dbg !5206
  br label %15, !dbg !5215

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !5216
  call void @llvm.dbg.value(metadata i16 %14, metadata !5205, metadata !DIExpression()), !dbg !5206
  br label %15, !dbg !5217

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !5206
  call void @llvm.dbg.value(metadata i16 %16, metadata !5205, metadata !DIExpression()), !dbg !5206
  %17 = and i16 %16, -61, !dbg !5218
  call void @llvm.dbg.value(metadata i16 %16, metadata !5205, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !5206
  %18 = icmp eq i32 %2, 1, !dbg !5219
  %19 = select i1 %18, i16 4, i16 0, !dbg !5219
  %20 = or i16 %17, %19, !dbg !5219
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !5205, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !5206
  call void @llvm.dbg.value(metadata i16 %20, metadata !5205, metadata !DIExpression()), !dbg !5206
  %21 = icmp eq i32 %3, 2, !dbg !5220
  %22 = or i16 %20, 16, !dbg !5220
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !5220
  call void @llvm.dbg.value(metadata i16 %23, metadata !5205, metadata !DIExpression()), !dbg !5206
  %24 = zext i16 %23 to i32, !dbg !5221
  store volatile i32 %24, i32* %5, align 4, !dbg !5222
  ret void, !dbg !5223
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #10 !dbg !5224 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5228, metadata !DIExpression()), !dbg !5231
  call void @llvm.dbg.value(metadata i8 %1, metadata !5229, metadata !DIExpression()), !dbg !5231
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !5232

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !5233
  call void @llvm.dbg.value(metadata i32 %5, metadata !5230, metadata !DIExpression()), !dbg !5231
  %6 = and i32 %5, 32, !dbg !5235
  %7 = icmp eq i32 %6, 0, !dbg !5235
  br i1 %7, label %4, label %8, !dbg !5237, !llvm.loop !5238

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !5240
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5242
  store volatile i32 %9, i32* %10, align 4, !dbg !5243
  ret void, !dbg !5244
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5245 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5249, metadata !DIExpression()), !dbg !5252
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !5253

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !5254
  call void @llvm.dbg.value(metadata i32 %4, metadata !5250, metadata !DIExpression()), !dbg !5252
  %5 = and i32 %4, 1, !dbg !5256
  %6 = icmp eq i32 %5, 0, !dbg !5256
  br i1 %6, label %3, label %7, !dbg !5258, !llvm.loop !5259

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5261
  %9 = load volatile i32, i32* %8, align 4, !dbg !5261
  %10 = trunc i32 %9 to i8, !dbg !5263
  call void @llvm.dbg.value(metadata i8 %10, metadata !5251, metadata !DIExpression()), !dbg !5252
  ret i8 %10, !dbg !5264
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !5265 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5269, metadata !DIExpression()), !dbg !5272
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5273
  %3 = load volatile i32, i32* %2, align 4, !dbg !5273
  call void @llvm.dbg.value(metadata i32 %3, metadata !5270, metadata !DIExpression()), !dbg !5272
  %4 = and i32 %3, 1, !dbg !5274
  %5 = icmp eq i32 %4, 0, !dbg !5274
  br i1 %5, label %9, label %6, !dbg !5276

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5277
  %8 = load volatile i32, i32* %7, align 4, !dbg !5277
  call void @llvm.dbg.value(metadata i32 %8, metadata !5271, metadata !DIExpression()), !dbg !5272
  br label %9, !dbg !5279

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !5280
  call void @llvm.dbg.value(metadata i32 %10, metadata !5271, metadata !DIExpression()), !dbg !5272
  ret i32 %10, !dbg !5281
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5282 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5286, metadata !DIExpression()), !dbg !5289
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5290
  %3 = load volatile i32, i32* %2, align 4, !dbg !5290
  call void @llvm.dbg.value(metadata i32 %3, metadata !5288, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5289
  store volatile i32 191, i32* %2, align 4, !dbg !5291
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5292
  %5 = load volatile i32, i32* %4, align 4, !dbg !5292
  call void @llvm.dbg.value(metadata i32 %5, metadata !5287, metadata !DIExpression()), !dbg !5289
  %6 = and i32 %5, 65343, !dbg !5293
  %7 = or i32 %6, 192, !dbg !5293
  call void @llvm.dbg.value(metadata i32 %5, metadata !5287, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !5289
  store volatile i32 %7, i32* %4, align 4, !dbg !5294
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5295
  store volatile i32 0, i32* %8, align 4, !dbg !5296
  store volatile i32 0, i32* %2, align 4, !dbg !5297
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5298
  store volatile i32 2, i32* %9, align 4, !dbg !5299
  %10 = and i32 %3, 65535, !dbg !5300
  store volatile i32 %10, i32* %2, align 4, !dbg !5301
  ret void, !dbg !5302
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #10 !dbg !5303 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5307, metadata !DIExpression()), !dbg !5313
  call void @llvm.dbg.value(metadata i8 %1, metadata !5308, metadata !DIExpression()), !dbg !5313
  call void @llvm.dbg.value(metadata i8 %2, metadata !5309, metadata !DIExpression()), !dbg !5313
  call void @llvm.dbg.value(metadata i8 %3, metadata !5310, metadata !DIExpression()), !dbg !5313
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5314
  %6 = load volatile i32, i32* %5, align 4, !dbg !5314
  call void @llvm.dbg.value(metadata i32 %6, metadata !5312, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5313
  store volatile i32 191, i32* %5, align 4, !dbg !5315
  %7 = zext i8 %1 to i32, !dbg !5316
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5317
  store volatile i32 %7, i32* %8, align 4, !dbg !5318
  %9 = zext i8 %2 to i32, !dbg !5319
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !5320
  store volatile i32 %9, i32* %10, align 4, !dbg !5321
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5322
  %12 = load volatile i32, i32* %11, align 4, !dbg !5322
  call void @llvm.dbg.value(metadata i32 %12, metadata !5311, metadata !DIExpression()), !dbg !5313
  %13 = and i32 %12, 65509, !dbg !5323
  %14 = or i32 %13, 26, !dbg !5323
  call void @llvm.dbg.value(metadata i32 %12, metadata !5311, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !5313
  store volatile i32 %14, i32* %11, align 4, !dbg !5324
  %15 = zext i8 %3 to i32, !dbg !5325
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !5326
  store volatile i32 %15, i32* %16, align 4, !dbg !5327
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5328
  store volatile i32 1, i32* %17, align 4, !dbg !5329
  %18 = and i32 %6, 65535, !dbg !5330
  store volatile i32 %18, i32* %5, align 4, !dbg !5331
  ret void, !dbg !5332
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5333 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5335, metadata !DIExpression()), !dbg !5337
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5338
  %3 = load volatile i32, i32* %2, align 4, !dbg !5338
  call void @llvm.dbg.value(metadata i32 %3, metadata !5336, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5337
  store volatile i32 191, i32* %2, align 4, !dbg !5339
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5340
  store volatile i32 0, i32* %4, align 4, !dbg !5341
  store volatile i32 0, i32* %2, align 4, !dbg !5342
  %5 = and i32 %3, 65535, !dbg !5343
  store volatile i32 %5, i32* %2, align 4, !dbg !5344
  ret void, !dbg !5345
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5346 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5348, metadata !DIExpression()), !dbg !5351
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5352
  %3 = load volatile i32, i32* %2, align 4, !dbg !5352
  call void @llvm.dbg.value(metadata i32 %3, metadata !5350, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5351
  store volatile i32 191, i32* %2, align 4, !dbg !5353
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5354
  %5 = load volatile i32, i32* %4, align 4, !dbg !5354
  call void @llvm.dbg.value(metadata i32 %5, metadata !5349, metadata !DIExpression()), !dbg !5351
  %6 = and i32 %5, 65519, !dbg !5355
  %7 = or i32 %6, 16, !dbg !5355
  call void @llvm.dbg.value(metadata i32 %5, metadata !5349, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !5351
  store volatile i32 %7, i32* %4, align 4, !dbg !5356
  store volatile i32 0, i32* %2, align 4, !dbg !5357
  store volatile i32 135, i32* %4, align 4, !dbg !5358
  %8 = and i32 %3, 65535, !dbg !5359
  store volatile i32 %8, i32* %2, align 4, !dbg !5360
  ret void, !dbg !5361
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5362 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5364, metadata !DIExpression()), !dbg !5367
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5368
  %3 = load volatile i32, i32* %2, align 4, !dbg !5368
  call void @llvm.dbg.value(metadata i32 %3, metadata !5366, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5367
  %4 = load volatile i32, i32* %2, align 4, !dbg !5369
  %5 = and i32 %4, -129, !dbg !5369
  store volatile i32 %5, i32* %2, align 4, !dbg !5369
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5370
  %7 = load volatile i32, i32* %6, align 4, !dbg !5370
  call void @llvm.dbg.value(metadata i32 %7, metadata !5365, metadata !DIExpression()), !dbg !5367
  %8 = and i32 %7, 65530, !dbg !5371
  %9 = or i32 %8, 5, !dbg !5371
  call void @llvm.dbg.value(metadata i32 %7, metadata !5365, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !5367
  store volatile i32 %9, i32* %6, align 4, !dbg !5372
  %10 = and i32 %3, 65535, !dbg !5373
  %11 = load volatile i32, i32* %2, align 4, !dbg !5374
  %12 = and i32 %10, %11, !dbg !5374
  store volatile i32 %12, i32* %2, align 4, !dbg !5374
  ret void, !dbg !5375
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !5376 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5380, metadata !DIExpression()), !dbg !5383
  call void @llvm.dbg.value(metadata i32 %1, metadata !5381, metadata !DIExpression()), !dbg !5383
  call void @llvm.dbg.value(metadata i16 145, metadata !5382, metadata !DIExpression()), !dbg !5383
  %3 = icmp eq i32 %1, 0, !dbg !5384
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !5382, metadata !DIExpression()), !dbg !5383
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5386
  store volatile i32 %4, i32* %5, align 4, !dbg !5387
  ret void, !dbg !5388
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !5389 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5394, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.value(metadata i32 0, metadata !5397, metadata !DIExpression()), !dbg !5398
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5399
  %3 = load volatile i32, i32* %2, align 4, !dbg !5399
  call void @llvm.dbg.value(metadata i32 %3, metadata !5395, metadata !DIExpression()), !dbg !5398
  %4 = and i32 %3, 1, !dbg !5400
  %5 = icmp eq i32 %4, 0, !dbg !5400
  br i1 %5, label %6, label %16, !dbg !5402

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !5403
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !5404

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !5397, metadata !DIExpression()), !dbg !5398
  br label %16, !dbg !5405

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5407
  %11 = load volatile i32, i32* %10, align 4, !dbg !5407
  call void @llvm.dbg.value(metadata i32 %11, metadata !5396, metadata !DIExpression()), !dbg !5398
  %12 = and i32 %11, 16, !dbg !5408
  %13 = icmp eq i32 %12, 0, !dbg !5408
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !5397, metadata !DIExpression()), !dbg !5398
  br label %16, !dbg !5410

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !5398
  ret i32 %17, !dbg !5411
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !5412 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5416, metadata !DIExpression()), !dbg !5419
  call void @llvm.dbg.value(metadata i32 0, metadata !5418, metadata !DIExpression()), !dbg !5419
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5420
  %3 = load volatile i32, i32* %2, align 4, !dbg !5420
  call void @llvm.dbg.value(metadata i32 %3, metadata !5417, metadata !DIExpression()), !dbg !5419
  %4 = and i32 %3, 14, !dbg !5421
  %5 = icmp eq i32 %4, 0, !dbg !5421
  %6 = sext i1 %5 to i32, !dbg !5423
  call void @llvm.dbg.value(metadata i32 %6, metadata !5418, metadata !DIExpression()), !dbg !5419
  ret i32 %6, !dbg !5424
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !5425 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5427, metadata !DIExpression()), !dbg !5429
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !5430
  %3 = load volatile i32, i32* %2, align 4, !dbg !5430
  call void @llvm.dbg.value(metadata i32 %3, metadata !5428, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5429
  call void @llvm.dbg.value(metadata i32 %3, metadata !5428, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5429
  ret void, !dbg !5431
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5432 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5434, metadata !DIExpression()), !dbg !5435
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5436
  store volatile i32 191, i32* %2, align 4, !dbg !5437
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5438
  store volatile i32 16, i32* %3, align 4, !dbg !5439
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5440
  store volatile i32 0, i32* %4, align 4, !dbg !5441
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !5442
  store volatile i32 0, i32* %5, align 4, !dbg !5443
  store volatile i32 128, i32* %2, align 4, !dbg !5444
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5445
  store volatile i32 0, i32* %6, align 4, !dbg !5446
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5447
  store volatile i32 0, i32* %7, align 4, !dbg !5448
  store volatile i32 0, i32* %2, align 4, !dbg !5449
  store volatile i32 0, i32* %7, align 4, !dbg !5450
  store volatile i32 0, i32* %3, align 4, !dbg !5451
  store volatile i32 191, i32* %2, align 4, !dbg !5452
  store volatile i32 0, i32* %3, align 4, !dbg !5453
  store volatile i32 0, i32* %2, align 4, !dbg !5454
  store volatile i32 0, i32* %4, align 4, !dbg !5455
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !5456
  store volatile i32 0, i32* %8, align 4, !dbg !5457
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !5458
  store volatile i32 0, i32* %9, align 4, !dbg !5459
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !5460
  store volatile i32 0, i32* %10, align 4, !dbg !5461
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !5462
  store volatile i32 0, i32* %11, align 4, !dbg !5463
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !5464
  store volatile i32 0, i32* %12, align 4, !dbg !5465
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !5466
  store volatile i32 0, i32* %13, align 4, !dbg !5467
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !5468
  store volatile i32 0, i32* %14, align 4, !dbg !5469
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !5470
  store volatile i32 0, i32* %15, align 4, !dbg !5471
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !5472
  store volatile i32 0, i32* %16, align 4, !dbg !5473
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5474
  store volatile i32 0, i32* %17, align 4, !dbg !5475
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !5476
  store volatile i32 0, i32* %18, align 4, !dbg !5477
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !5478
  store volatile i32 0, i32* %19, align 4, !dbg !5479
  store volatile i32 0, i32* %13, align 4, !dbg !5480
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !5481
  store volatile i32 0, i32* %20, align 4, !dbg !5482
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !5483
  store volatile i32 0, i32* %21, align 4, !dbg !5484
  ret void, !dbg !5485
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5486 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5488, metadata !DIExpression()), !dbg !5489
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !5490

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !5491
  %5 = and i32 %4, 64, !dbg !5492
  %6 = icmp eq i32 %5, 0, !dbg !5493
  br i1 %6, label %3, label %7, !dbg !5490, !llvm.loop !5494

7:                                                ; preds = %3
  ret void, !dbg !5496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !5497 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5501, metadata !DIExpression()), !dbg !5504
  call void @llvm.dbg.value(metadata i32 %1, metadata !5502, metadata !DIExpression()), !dbg !5504
  call void @llvm.dbg.value(metadata i32 15, metadata !5503, metadata !DIExpression()), !dbg !5504
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !5505

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !5506
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !5509
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !5511
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !5513
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !5504
  call void @llvm.dbg.value(metadata i32 %16, metadata !5503, metadata !DIExpression()), !dbg !5504
  ret i32 %16, !dbg !5515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #4 !dbg !5516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5526, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !5527, metadata !DIExpression()), !dbg !5528
  %3 = add i32 %0, -8, !dbg !5529
  %4 = icmp ult i32 %3, 8, !dbg !5529
  br i1 %4, label %5, label %12, !dbg !5529

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !5529
  %7 = load i8, i8* %6, align 1, !dbg !5529
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.2, i32 0, i32 %3, !dbg !5529
  %9 = load i32, i32* %8, align 4, !dbg !5529
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !5530
  store i8 %7, i8* %10, align 4, !dbg !5530
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !5530
  store i32 %9, i32* %11, align 4, !dbg !5530
  br label %12, !dbg !5532

12:                                               ; preds = %2, %5
  ret void, !dbg !5532
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5533 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5537, metadata !DIExpression()), !dbg !5538
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !5539
  store volatile i32 3, i32* %2, align 4, !dbg !5540
  ret void, !dbg !5541
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !5542 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5544, metadata !DIExpression()), !dbg !5548
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !5547, metadata !DIExpression()), !dbg !5548
  %2 = add i32 %0, -30, !dbg !5549
  %3 = icmp ult i32 %2, 3, !dbg !5549
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !5549
  call void @llvm.dbg.value(metadata i32 %5, metadata !5545, metadata !DIExpression()), !dbg !5548
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !5550
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !5550
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !5547, metadata !DIExpression()), !dbg !5548
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #21, !dbg !5551
  call void @llvm.dbg.value(metadata i32 %8, metadata !5546, metadata !DIExpression()), !dbg !5548
  switch i32 %8, label %12 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %13
    i32 0, label %13
    i32 3, label %11
  ], !dbg !5552

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #21, !dbg !5553
  br label %13, !dbg !5555

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #21, !dbg !5556
  br label %13, !dbg !5557

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #21, !dbg !5558
  br label %13, !dbg !5559

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.79, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.80, i32 0, i32 0)) #23, !dbg !5560
  unreachable, !dbg !5560

13:                                               ; preds = %11, %1, %1, %10, %9
  ret void, !dbg !5561
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #10 !dbg !786 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !5562
  br i1 %1, label %9, label %2, !dbg !5564

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !879, metadata !DIExpression()), !dbg !5565
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !5566
  %5 = load i32, i32* %4, align 4, !dbg !5566
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #20, !dbg !5571
  %6 = add nuw nsw i32 %3, 1, !dbg !5572
  call void @llvm.dbg.value(metadata i32 %6, metadata !879, metadata !DIExpression()), !dbg !5565
  %7 = icmp eq i32 %6, 64, !dbg !5573
  br i1 %7, label %8, label %2, !dbg !5574, !llvm.loop !5575

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !5577
  br label %9, !dbg !5578

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !5579
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !5580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5584, metadata !DIExpression()), !dbg !5586
  call void @llvm.dbg.value(metadata i32 %1, metadata !5585, metadata !DIExpression()), !dbg !5586
  %3 = trunc i32 %1 to i8, !dbg !5587
  %4 = shl i8 %3, 2, !dbg !5587
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5590
  store volatile i8 %4, i8* %5, align 1, !dbg !5591
  ret void, !dbg !5592
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #10 !dbg !5593 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5597, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.value(metadata i32 -1, metadata !5598, metadata !DIExpression()), !dbg !5599
  %2 = icmp ugt i32 %0, 63, !dbg !5600
  br i1 %2, label %4, label %3, !dbg !5600

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #20, !dbg !5602
  call void @llvm.dbg.value(metadata i32 0, metadata !5598, metadata !DIExpression()), !dbg !5599
  br label %4, !dbg !5604

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5599
  ret i32 %5, !dbg !5605
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #10 !dbg !5606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5610, metadata !DIExpression()), !dbg !5611
  %2 = and i32 %0, 31, !dbg !5612
  %3 = shl nuw i32 1, %2, !dbg !5613
  %4 = lshr i32 %0, 5, !dbg !5614
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !5615
  store volatile i32 %3, i32* %5, align 4, !dbg !5616
  ret void, !dbg !5617
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #10 !dbg !5618 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5620, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.value(metadata i32 -1, metadata !5621, metadata !DIExpression()), !dbg !5622
  %2 = icmp ugt i32 %0, 63, !dbg !5623
  br i1 %2, label %4, label %3, !dbg !5623

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #20, !dbg !5625
  call void @llvm.dbg.value(metadata i32 0, metadata !5621, metadata !DIExpression()), !dbg !5622
  br label %4, !dbg !5627

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5622
  ret i32 %5, !dbg !5628
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #10 !dbg !5629 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5631, metadata !DIExpression()), !dbg !5632
  %2 = and i32 %0, 31, !dbg !5633
  %3 = shl nuw i32 1, %2, !dbg !5634
  %4 = lshr i32 %0, 5, !dbg !5635
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !5636
  store volatile i32 %3, i32* %5, align 4, !dbg !5637
  ret void, !dbg !5638
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #9 !dbg !5639 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5643, metadata !DIExpression()), !dbg !5645
  call void @llvm.dbg.value(metadata i32 255, metadata !5644, metadata !DIExpression()), !dbg !5645
  %2 = icmp ugt i32 %0, 63, !dbg !5646
  br i1 %2, label %5, label %3, !dbg !5646

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #20, !dbg !5648
  call void @llvm.dbg.value(metadata i32 %4, metadata !5644, metadata !DIExpression()), !dbg !5645
  br label %5, !dbg !5650

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !5645
  ret i32 %6, !dbg !5651
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #9 !dbg !5652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5656, metadata !DIExpression()), !dbg !5657
  %2 = lshr i32 %0, 5, !dbg !5658
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !5659
  %4 = load volatile i32, i32* %3, align 4, !dbg !5659
  %5 = and i32 %0, 31, !dbg !5660
  %6 = lshr i32 %4, %5, !dbg !5661
  %7 = and i32 %6, 1, !dbg !5661
  ret i32 %7, !dbg !5662
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #10 !dbg !5663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5665, metadata !DIExpression()), !dbg !5667
  call void @llvm.dbg.value(metadata i32 -1, metadata !5666, metadata !DIExpression()), !dbg !5667
  %2 = icmp ugt i32 %0, 63, !dbg !5668
  br i1 %2, label %4, label %3, !dbg !5668

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #20, !dbg !5670
  call void @llvm.dbg.value(metadata i32 0, metadata !5666, metadata !DIExpression()), !dbg !5667
  br label %4, !dbg !5672

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5667
  ret i32 %5, !dbg !5673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #10 !dbg !5674 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5676, metadata !DIExpression()), !dbg !5677
  %2 = and i32 %0, 31, !dbg !5678
  %3 = shl nuw i32 1, %2, !dbg !5679
  %4 = lshr i32 %0, 5, !dbg !5680
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !5681
  store volatile i32 %3, i32* %5, align 4, !dbg !5682
  ret void, !dbg !5683
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #10 !dbg !5684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5686, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.value(metadata i32 -1, metadata !5687, metadata !DIExpression()), !dbg !5688
  %2 = icmp ugt i32 %0, 63, !dbg !5689
  br i1 %2, label %4, label %3, !dbg !5689

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #20, !dbg !5691
  call void @llvm.dbg.value(metadata i32 0, metadata !5687, metadata !DIExpression()), !dbg !5688
  br label %4, !dbg !5693

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5688
  ret i32 %5, !dbg !5694
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #10 !dbg !5695 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5697, metadata !DIExpression()), !dbg !5698
  %2 = and i32 %0, 31, !dbg !5699
  %3 = shl nuw i32 1, %2, !dbg !5700
  %4 = lshr i32 %0, 5, !dbg !5701
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !5702
  store volatile i32 %3, i32* %5, align 4, !dbg !5703
  ret void, !dbg !5704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !5705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5709, metadata !DIExpression()), !dbg !5712
  call void @llvm.dbg.value(metadata i32 %1, metadata !5710, metadata !DIExpression()), !dbg !5712
  call void @llvm.dbg.value(metadata i32 -1, metadata !5711, metadata !DIExpression()), !dbg !5712
  %3 = icmp ugt i32 %0, 63, !dbg !5713
  br i1 %3, label %5, label %4, !dbg !5713

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #20, !dbg !5715
  call void @llvm.dbg.value(metadata i32 0, metadata !5711, metadata !DIExpression()), !dbg !5712
  br label %5, !dbg !5717

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !5712
  ret i32 %6, !dbg !5718
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #9 !dbg !5719 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5721, metadata !DIExpression()), !dbg !5723
  call void @llvm.dbg.value(metadata i32 68, metadata !5722, metadata !DIExpression()), !dbg !5723
  %2 = icmp ugt i32 %0, 63, !dbg !5724
  br i1 %2, label %5, label %3, !dbg !5724

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #20, !dbg !5726
  call void @llvm.dbg.value(metadata i32 %4, metadata !5722, metadata !DIExpression()), !dbg !5723
  br label %5, !dbg !5728

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !5723
  ret i32 %6, !dbg !5729
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #9 !dbg !5730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5732, metadata !DIExpression()), !dbg !5733
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5734
  %3 = load volatile i8, i8* %2, align 1, !dbg !5734
  %4 = lshr i8 %3, 2, !dbg !5737
  %5 = zext i8 %4 to i32, !dbg !5737
  ret i32 %5, !dbg !5738
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !5739 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !5741, metadata !DIExpression()), !dbg !5743
  tail call void @Flash_ReturnReady() #21, !dbg !5744
  %1 = tail call fastcc i32 @get_current_irq() #20, !dbg !5745
  call void @llvm.dbg.value(metadata i32 %1, metadata !5742, metadata !DIExpression()), !dbg !5743
  %2 = icmp ugt i32 %1, 63, !dbg !5746
  br i1 %2, label %12, label %3, !dbg !5746

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !5748
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !5748
  %6 = icmp eq void (i32)* %5, null, !dbg !5750
  br i1 %6, label %7, label %8, !dbg !5751

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !5741, metadata !DIExpression()), !dbg !5743
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.85, i32 0, i32 0)) #21, !dbg !5752
  br label %12, !dbg !5754

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #20, !dbg !5755
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !5757
  store i32 %9, i32* %10, align 4, !dbg !5758
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !5759
  tail call void %11(i32 noundef %1) #21, !dbg !5760
  call void @llvm.dbg.value(metadata i32 0, metadata !5741, metadata !DIExpression()), !dbg !5743
  br label %12, !dbg !5761

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !5743
  ret i32 %13, !dbg !5762
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #9 !dbg !5763 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5766
  %2 = and i32 %1, 511, !dbg !5767
  call void @llvm.dbg.value(metadata i32 %2, metadata !5765, metadata !DIExpression()), !dbg !5768
  %3 = add nsw i32 %2, -16, !dbg !5769
  ret i32 %3, !dbg !5770
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #9 !dbg !5771 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5772
  %2 = lshr i32 %1, 22, !dbg !5773
  %3 = and i32 %2, 1, !dbg !5773
  ret i32 %3, !dbg !5774
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !5775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5780, metadata !DIExpression()), !dbg !5783
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !5781, metadata !DIExpression()), !dbg !5783
  %3 = icmp ugt i32 %0, 63, !dbg !5784
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !5784
  br i1 %5, label %10, label %6, !dbg !5784

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !5786
  call void @llvm.dbg.value(metadata i32 %7, metadata !5782, metadata !DIExpression()), !dbg !5783
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #20, !dbg !5787
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !5788
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !5789
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !5790
  store i32 0, i32* %9, align 4, !dbg !5791
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !5792
  br label %10, !dbg !5793

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !5783
  ret i32 %11, !dbg !5794
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !5795 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !5799, metadata !DIExpression()), !dbg !5800
  %2 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !5801
  store i32 %2, i32* %0, align 4, !dbg !5802
  ret i32 0, !dbg !5803
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !5804 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5808, metadata !DIExpression()), !dbg !5809
  tail call void @restore_interrupt_mask(i32 noundef %0) #21, !dbg !5810
  ret i32 0, !dbg !5811
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !5812 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #22, !dbg !5816, !srcloc !5822
  call void @llvm.dbg.value(metadata i32 %1, metadata !5820, metadata !DIExpression()) #22, !dbg !5823
  call void @llvm.dbg.value(metadata i32 %1, metadata !5814, metadata !DIExpression()), !dbg !5824
  call void @llvm.dbg.value(metadata i32 1, metadata !5815, metadata !DIExpression()), !dbg !5824
  call void @llvm.dbg.value(metadata i32 4, metadata !5825, metadata !DIExpression()) #22, !dbg !5830
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #22, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect "dmb", ""() #22, !dbg !5834, !srcloc !5838
  tail call void asm sideeffect "isb", ""() #22, !dbg !5839, !srcloc !5842
  ret i32 %1, !dbg !5843
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !5844 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5846, metadata !DIExpression()), !dbg !5847
  call void @llvm.dbg.value(metadata i32 %0, metadata !5825, metadata !DIExpression()) #22, !dbg !5848
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #22, !dbg !5850, !srcloc !5833
  tail call void asm sideeffect "dmb", ""() #22, !dbg !5851, !srcloc !5838
  tail call void asm sideeffect "isb", ""() #22, !dbg !5853, !srcloc !5842
  ret void, !dbg !5855
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !5856 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5860
  call void @llvm.dbg.value(metadata i32 %1, metadata !5859, metadata !DIExpression()), !dbg !5861
  call void @llvm.dbg.value(metadata i32 0, metadata !5858, metadata !DIExpression()), !dbg !5861
  br label %2, !dbg !5862

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !5858, metadata !DIExpression()), !dbg !5861
  tail call fastcc void @NVIC_DisableIRQ.92(i32 noundef %3) #20, !dbg !5864
  %4 = add nuw nsw i32 %3, 1, !dbg !5867
  call void @llvm.dbg.value(metadata i32 %4, metadata !5858, metadata !DIExpression()), !dbg !5861
  %5 = icmp eq i32 %4, 64, !dbg !5868
  br i1 %5, label %6, label %2, !dbg !5862, !llvm.loop !5869

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !5871
  ret void, !dbg !5872
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.92(i32 noundef %0) unnamed_addr #10 !dbg !5873 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5875, metadata !DIExpression()), !dbg !5876
  %2 = and i32 %0, 31, !dbg !5877
  %3 = shl nuw i32 1, %2, !dbg !5878
  %4 = lshr i32 %0, 5, !dbg !5879
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !5880
  store volatile i32 %3, i32* %5, align 4, !dbg !5881
  ret void, !dbg !5882
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !5883 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5887
  call void @llvm.dbg.value(metadata i32 %1, metadata !5886, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.value(metadata i32 0, metadata !5885, metadata !DIExpression()), !dbg !5888
  br label %2, !dbg !5889

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !5885, metadata !DIExpression()), !dbg !5888
  tail call fastcc void @NVIC_EnableIRQ.93(i32 noundef %3) #20, !dbg !5891
  %4 = add nuw nsw i32 %3, 1, !dbg !5894
  call void @llvm.dbg.value(metadata i32 %4, metadata !5885, metadata !DIExpression()), !dbg !5888
  %5 = icmp eq i32 %4, 64, !dbg !5895
  br i1 %5, label %6, label %2, !dbg !5889, !llvm.loop !5896

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !5898
  ret void, !dbg !5899
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.93(i32 noundef %0) unnamed_addr #10 !dbg !5900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5902, metadata !DIExpression()), !dbg !5903
  %2 = and i32 %0, 31, !dbg !5904
  %3 = shl nuw i32 1, %2, !dbg !5905
  %4 = lshr i32 %0, 5, !dbg !5906
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !5907
  store volatile i32 %3, i32* %5, align 4, !dbg !5908
  ret void, !dbg !5909
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #10 !dbg !5910 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5912, metadata !DIExpression()), !dbg !5913
  br label %1, !dbg !5914

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5912, metadata !DIExpression()), !dbg !5913
  tail call fastcc void @NVIC_ClearPendingIRQ.94(i32 noundef %2) #20, !dbg !5916
  %3 = add nuw nsw i32 %2, 1, !dbg !5919
  call void @llvm.dbg.value(metadata i32 %3, metadata !5912, metadata !DIExpression()), !dbg !5913
  %4 = icmp eq i32 %3, 64, !dbg !5920
  br i1 %4, label %5, label %1, !dbg !5914, !llvm.loop !5921

5:                                                ; preds = %1
  ret void, !dbg !5923
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.94(i32 noundef %0) unnamed_addr #10 !dbg !5924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5926, metadata !DIExpression()), !dbg !5927
  %2 = and i32 %0, 31, !dbg !5928
  %3 = shl nuw i32 1, %2, !dbg !5929
  %4 = lshr i32 %0, 5, !dbg !5930
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !5931
  store volatile i32 %3, i32* %5, align 4, !dbg !5932
  ret void, !dbg !5933
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !5934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5936, metadata !DIExpression()), !dbg !5937
  %2 = icmp ugt i32 %0, 63, !dbg !5938
  br i1 %2, label %4, label %3, !dbg !5938

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #20, !dbg !5940
  br label %4, !dbg !5941

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !5937
  ret i32 %5, !dbg !5942
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !5943 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5945, metadata !DIExpression()), !dbg !5946
  %2 = and i32 %0, 511, !dbg !5947
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !5948
  tail call void asm sideeffect "dsb", ""() #22, !dbg !5949, !srcloc !5952
  ret void, !dbg !5953
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #9 !dbg !5954 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5955
  %2 = and i32 %1, 511, !dbg !5956
  ret i32 %2, !dbg !5957
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !5958 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5962, metadata !DIExpression()), !dbg !6061
  call void @llvm.dbg.value(metadata i32 %1, metadata !5963, metadata !DIExpression()), !dbg !6061
  call void @llvm.dbg.value(metadata i8* %0, metadata !5964, metadata !DIExpression()), !dbg !6061
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #21, !dbg !6062
  call void @llvm.dbg.value(metadata i32 %3, metadata !6059, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !6061
  call void @llvm.dbg.value(metadata i32 0, metadata !6058, metadata !DIExpression()), !dbg !6061
  call void @llvm.dbg.value(metadata i32* undef, metadata !6060, metadata !DIExpression()), !dbg !6061
  call void @llvm.dbg.value(metadata i32 0, metadata !6058, metadata !DIExpression()), !dbg !6061
  %4 = icmp ult i32 %3, 4, !dbg !6063
  br i1 %4, label %20, label %5, !dbg !6066

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !6067
  %7 = bitcast i8* %6 to i32**, !dbg !6067
  %8 = load i32*, i32** %7, align 4, !dbg !6067
  call void @llvm.dbg.value(metadata i32* %8, metadata !6060, metadata !DIExpression()), !dbg !6061
  %9 = lshr i32 %3, 2, !dbg !6068
  call void @llvm.dbg.value(metadata i32 %9, metadata !6059, metadata !DIExpression()), !dbg !6061
  br label %10, !dbg !6066

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !6060, metadata !DIExpression()), !dbg !6061
  call void @llvm.dbg.value(metadata i32 %12, metadata !6058, metadata !DIExpression()), !dbg !6061
  %13 = load i32, i32* %11, align 4, !dbg !6069
  %14 = icmp eq i32 %13, -1, !dbg !6072
  br i1 %14, label %16, label %15, !dbg !6073

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #21, !dbg !6074
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.95, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.96, i32 0, i32 0)) #23, !dbg !6074
  unreachable, !dbg !6074

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !6079
  call void @llvm.dbg.value(metadata i32 %17, metadata !6058, metadata !DIExpression()), !dbg !6061
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !6080
  call void @llvm.dbg.value(metadata i32* %18, metadata !6060, metadata !DIExpression()), !dbg !6061
  %19 = icmp eq i32 %17, %9, !dbg !6063
  br i1 %19, label %20, label %10, !dbg !6066, !llvm.loop !6081

20:                                               ; preds = %16, %2
  ret void, !dbg !6083
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #16 section ".ram_code" !dbg !6084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6086, metadata !DIExpression()), !dbg !6088
  call void @llvm.dbg.value(metadata i32 0, metadata !6087, metadata !DIExpression()), !dbg !6088
  call void @llvm.dbg.value(metadata i32 %0, metadata !6087, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !6088
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !6087, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6088
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !6087, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6088
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !6089
  call void @llvm.dbg.value(metadata i32 %2, metadata !6087, metadata !DIExpression()), !dbg !6088
  ret i32 %2, !dbg !6090
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !6091 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6096, metadata !DIExpression()), !dbg !6098
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6099
  %3 = or i32 %2, 512, !dbg !6099
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6099
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6102
  call void @llvm.dbg.value(metadata i32 %4, metadata !6097, metadata !DIExpression()), !dbg !6098
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !6103

5:                                                ; preds = %1
  br label %7, !dbg !6104

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #21, !dbg !6108
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.95, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.96, i32 0, i32 0)) #23, !dbg !6108
  unreachable, !dbg !6108

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !6113
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !6097, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6098
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !6097, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6098
  br label %10, !dbg !6114

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6115
  %12 = and i32 %11, 8192, !dbg !6116
  %13 = icmp eq i32 %12, 0, !dbg !6117
  br i1 %13, label %10, label %14, !dbg !6114, !llvm.loop !6118

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6120
  %16 = and i32 %15, 256, !dbg !6121
  %17 = icmp eq i32 %16, 0, !dbg !6122
  br i1 %17, label %14, label %18, !dbg !6123, !llvm.loop !6124

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !6113
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !6097, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6098
  %20 = and i32 %19, 16, !dbg !6113
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !6097, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6098
  call void @llvm.dbg.value(metadata i32 undef, metadata !6097, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6098
  %21 = or i32 %4, %20, !dbg !6126
  %22 = or i32 %21, 8, !dbg !6126
  call void @llvm.dbg.value(metadata i32 %22, metadata !6097, metadata !DIExpression()), !dbg !6098
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6127
  ret void, !dbg !6128
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #10 section ".tcm_code" !dbg !6129 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !6131, metadata !DIExpression()), !dbg !6133
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6134
  call void @llvm.dbg.value(metadata i32 %2, metadata !6132, metadata !DIExpression()), !dbg !6133
  %3 = and i32 %2, -268435477, !dbg !6135
  call void @llvm.dbg.value(metadata i32 %3, metadata !6132, metadata !DIExpression()), !dbg !6133
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6136
  br label %4, !dbg !6137

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6138
  %6 = and i32 %5, 2, !dbg !6139
  %7 = icmp eq i32 %6, 0, !dbg !6137
  br i1 %7, label %8, label %4, !dbg !6137, !llvm.loop !6140

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6142
  call void @llvm.dbg.value(metadata i32 %9, metadata !6132, metadata !DIExpression()), !dbg !6133
  %10 = and i32 %9, -9, !dbg !6143
  call void @llvm.dbg.value(metadata i32 %10, metadata !6132, metadata !DIExpression()), !dbg !6133
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6144
  br label %11, !dbg !6145

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6146
  %13 = and i32 %12, 8, !dbg !6147
  %14 = icmp eq i32 %13, 0, !dbg !6145
  br i1 %14, label %15, label %11, !dbg !6145, !llvm.loop !6148

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !6150, !range !2542
  %17 = icmp eq i8 %16, 0, !dbg !6152
  br i1 %17, label %18, label %21, !dbg !6153

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6154
  %20 = and i32 %19, -513, !dbg !6154
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6154
  br label %21, !dbg !6158

21:                                               ; preds = %18, %15
  ret void, !dbg !6159
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #10 section ".tcm_code" !dbg !6160 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6164, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i32 0, metadata !6165, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i32 0, metadata !6166, metadata !DIExpression()), !dbg !6167
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6168
  call void @llvm.dbg.value(metadata i32 %2, metadata !6165, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i32 %2, metadata !6165, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !6167
  %3 = icmp eq i16 %0, 1, !dbg !6169
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !6171
  %5 = or i32 %2, %4, !dbg !6171
  call void @llvm.dbg.value(metadata i32 %5, metadata !6165, metadata !DIExpression()), !dbg !6167
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6172
  br label %6, !dbg !6173

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6174
  %8 = and i32 %7, 2, !dbg !6175
  %9 = icmp eq i32 %8, 0, !dbg !6176
  br i1 %9, label %6, label %10, !dbg !6173, !llvm.loop !6177

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6179
  %12 = and i32 %11, 1, !dbg !6180
  %13 = icmp eq i32 %12, 0, !dbg !6181
  br i1 %13, label %14, label %10, !dbg !6181, !llvm.loop !6182

14:                                               ; preds = %10
  ret i32 0, !dbg !6184
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #10 section ".tcm_code" !dbg !6185 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6187, metadata !DIExpression()), !dbg !6188
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #20, !dbg !6189
  tail call void @SFI_MacLeave(i16 zeroext undef) #20, !dbg !6190
  ret void, !dbg !6191
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !6192 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6196, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i32 %1, metadata !6197, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i32 %1, metadata !6198, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i8 0, metadata !6200, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i32 0, metadata !6199, metadata !DIExpression()), !dbg !6201
  %3 = icmp eq i32 %1, 0, !dbg !6202
  br i1 %3, label %16, label %4, !dbg !6205

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !6200, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i32 %6, metadata !6199, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i32 %7, metadata !6198, metadata !DIExpression()), !dbg !6201
  %8 = shl i32 %6, 8, !dbg !6206
  %9 = and i32 %7, 255, !dbg !6208
  %10 = or i32 %8, %9, !dbg !6209
  call void @llvm.dbg.value(metadata i32 %10, metadata !6199, metadata !DIExpression()), !dbg !6201
  %11 = lshr i32 %7, 8, !dbg !6210
  call void @llvm.dbg.value(metadata i32 %11, metadata !6198, metadata !DIExpression()), !dbg !6201
  %12 = add nuw nsw i8 %5, 1, !dbg !6211
  call void @llvm.dbg.value(metadata i8 %12, metadata !6200, metadata !DIExpression()), !dbg !6201
  %13 = icmp ult i32 %7, 256, !dbg !6202
  br i1 %13, label %14, label %4, !dbg !6205, !llvm.loop !6212

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !6214
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #20, !dbg !6216
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6217
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6218
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6219
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #20, !dbg !6220
  br label %16, !dbg !6221

16:                                               ; preds = %2, %14
  ret void, !dbg !6222
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !6223 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6227, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8 %1, metadata !6228, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i32 %2, metadata !6229, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i32 %3, metadata !6230, metadata !DIExpression()), !dbg !6233
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #20, !dbg !6234
  call void @llvm.dbg.value(metadata i32 %5, metadata !6232, metadata !DIExpression()), !dbg !6233
  %6 = icmp eq i32 %3, 3, !dbg !6235
  br i1 %6, label %7, label %11, !dbg !6237

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !6238
  %9 = zext i8 %1 to i32, !dbg !6240
  %10 = or i32 %8, %9, !dbg !6241
  call void @llvm.dbg.value(metadata i32 %10, metadata !6231, metadata !DIExpression()), !dbg !6233
  br label %16, !dbg !6242

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !6243
  %13 = zext i8 %1 to i32, !dbg !6245
  %14 = or i32 %12, %13, !dbg !6246
  call void @llvm.dbg.value(metadata i32 %14, metadata !6231, metadata !DIExpression()), !dbg !6233
  %15 = lshr i32 %5, 24, !dbg !6247
  call void @llvm.dbg.value(metadata i32 %15, metadata !6232, metadata !DIExpression()), !dbg !6233
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !6248
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !6233
  call void @llvm.dbg.value(metadata i32 %18, metadata !6232, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i32 %17, metadata !6231, metadata !DIExpression()), !dbg !6233
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6249
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !6250
  %19 = add i32 %3, 1, !dbg !6251
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6252
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6253
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #20, !dbg !6254
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #20, !dbg !6255
  ret void, !dbg !6256
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 section ".ram_code" !dbg !6257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6261, metadata !DIExpression()), !dbg !6263
  call void @llvm.dbg.value(metadata i32 %1, metadata !6262, metadata !DIExpression()), !dbg !6263
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #20, !dbg !6264
  %4 = and i32 %3, -256, !dbg !6265
  %5 = and i32 %0, 255, !dbg !6266
  %6 = or i32 %4, %5, !dbg !6267
  ret i32 %6, !dbg !6268
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #7 section ".ram_code" !dbg !6269 {
  %5 = alloca %union.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6274, metadata !DIExpression()), !dbg !6289
  call void @llvm.dbg.value(metadata i32 %1, metadata !6275, metadata !DIExpression()), !dbg !6289
  call void @llvm.dbg.value(metadata i8** %2, metadata !6276, metadata !DIExpression()), !dbg !6289
  call void @llvm.dbg.value(metadata i32* %3, metadata !6277, metadata !DIExpression()), !dbg !6289
  %6 = bitcast %union.anon* %5 to i8*, !dbg !6290
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !6290
  call void @llvm.dbg.declare(metadata %union.anon* %5, metadata !6278, metadata !DIExpression()), !dbg !6291
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #20, !dbg !6292
  call void @llvm.dbg.value(metadata i32 %7, metadata !6287, metadata !DIExpression()), !dbg !6289
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !6286, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6289
  %8 = lshr i32 %7, 24, !dbg !6293
  call void @llvm.dbg.value(metadata i32 %8, metadata !6287, metadata !DIExpression()), !dbg !6289
  %9 = trunc i32 %8 to i8, !dbg !6294
  %10 = bitcast %union.anon* %5 to [4 x i8]*, !dbg !6295
  store i8 %9, i8* %6, align 4, !dbg !6296
  call void @llvm.dbg.value(metadata i32 1, metadata !6288, metadata !DIExpression()), !dbg !6289
  %11 = load i8*, i8** %2, align 4, !dbg !6297
  br label %12, !dbg !6301

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !6297
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6288, metadata !DIExpression()), !dbg !6289
  %15 = load i8, i8* %13, align 1, !dbg !6302
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !6303
  store i8 %15, i8* %16, align 1, !dbg !6304
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6305
  store i8* %17, i8** %2, align 4, !dbg !6305
  %18 = add nuw nsw i32 %14, 1, !dbg !6306
  call void @llvm.dbg.value(metadata i32 %18, metadata !6288, metadata !DIExpression()), !dbg !6289
  %19 = icmp eq i32 %18, 4, !dbg !6307
  br i1 %19, label %20, label %12, !dbg !6301, !llvm.loop !6308

20:                                               ; preds = %12
  %21 = getelementptr inbounds %union.anon, %union.anon* %5, i32 0, i32 0, !dbg !6310
  %22 = load i32, i32* %21, align 4, !dbg !6310
  call void @llvm.dbg.value(metadata i32 %22, metadata !6287, metadata !DIExpression()), !dbg !6289
  %23 = load i32, i32* %3, align 4, !dbg !6311
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !6312
  %25 = shl i32 %7, 8, !dbg !6313
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !6286, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6289
  %26 = and i32 %0, 255, !dbg !6314
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !6286, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6289
  %27 = or i32 %25, %26, !dbg !6315
  call void @llvm.dbg.value(metadata i32 %27, metadata !6286, metadata !DIExpression()), !dbg !6289
  store i32 %24, i32* %3, align 4, !dbg !6316
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !6317
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !6318
  ret i32 %27, !dbg !6319
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #7 section ".ram_code" !dbg !6320 {
  %4 = alloca %union.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6324, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i8* %1, metadata !6325, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %2, metadata !6326, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i8* %1, metadata !6328, metadata !DIExpression()), !dbg !6330
  %5 = bitcast %union.anon* %4 to i8*, !dbg !6331
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6331
  call void @llvm.dbg.declare(metadata %union.anon* %4, metadata !6329, metadata !DIExpression()), !dbg !6332
  %6 = add i32 %0, -1610348544, !dbg !6333
  call void @llvm.dbg.value(metadata i32 %6, metadata !6324, metadata !DIExpression()), !dbg !6330
  %7 = ptrtoint i8* %1 to i32, !dbg !6334
  %8 = and i32 %7, 3, !dbg !6336
  %9 = icmp eq i32 %8, 0, !dbg !6337
  br i1 %9, label %10, label %23, !dbg !6338

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6328, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %2, metadata !6326, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %6, metadata !6324, metadata !DIExpression()), !dbg !6330
  %11 = icmp sgt i32 %2, 0, !dbg !6339
  br i1 %11, label %12, label %72, !dbg !6343

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6328, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %14, metadata !6326, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %15, metadata !6324, metadata !DIExpression()), !dbg !6330
  %16 = bitcast i8* %13 to i32*, !dbg !6344
  %17 = load i32, i32* %16, align 4, !dbg !6344
  %18 = inttoptr i32 %15 to i32*, !dbg !6344
  store volatile i32 %17, i32* %18, align 4, !dbg !6344
  %19 = add i32 %15, 4, !dbg !6346
  call void @llvm.dbg.value(metadata i32 %19, metadata !6324, metadata !DIExpression()), !dbg !6330
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !6347
  call void @llvm.dbg.value(metadata i8* %20, metadata !6328, metadata !DIExpression()), !dbg !6330
  %21 = add nsw i32 %14, -4, !dbg !6348
  call void @llvm.dbg.value(metadata i32 %21, metadata !6326, metadata !DIExpression()), !dbg !6330
  %22 = icmp ugt i32 %14, 4, !dbg !6339
  br i1 %22, label %12, label %72, !dbg !6343, !llvm.loop !6349

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !6351
  %25 = icmp eq i32 %24, 0, !dbg !6353
  call void @llvm.dbg.value(metadata i8* %1, metadata !6328, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i8* %1, metadata !6328, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %2, metadata !6326, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %2, metadata !6326, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %6, metadata !6324, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %6, metadata !6324, metadata !DIExpression()), !dbg !6330
  %26 = icmp sgt i32 %2, 0, !dbg !6354
  br i1 %25, label %31, label %27, !dbg !6355

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !6356

28:                                               ; preds = %27
  %29 = bitcast %union.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %union.anon, %union.anon* %4, i32 0, i32 0
  br label %52, !dbg !6356

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !6359

32:                                               ; preds = %31
  %33 = bitcast %union.anon* %4 to [2 x i16]*
  %34 = bitcast %union.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %union.anon, %union.anon* %4, i32 0, i32 0
  br label %37, !dbg !6359

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !6328, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %39, metadata !6326, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %40, metadata !6324, metadata !DIExpression()), !dbg !6330
  %41 = bitcast i8* %38 to i16*, !dbg !6362
  %42 = load i16, i16* %41, align 2, !dbg !6362
  store i16 %42, i16* %34, align 4, !dbg !6365
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !6366
  %44 = bitcast i8* %43 to i16*, !dbg !6366
  %45 = load i16, i16* %44, align 2, !dbg !6367
  store i16 %45, i16* %35, align 2, !dbg !6368
  %46 = load i32, i32* %36, align 4, !dbg !6369
  %47 = inttoptr i32 %40 to i32*, !dbg !6369
  store volatile i32 %46, i32* %47, align 4, !dbg !6369
  %48 = add i32 %40, 4, !dbg !6370
  call void @llvm.dbg.value(metadata i32 %48, metadata !6324, metadata !DIExpression()), !dbg !6330
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !6371
  call void @llvm.dbg.value(metadata i8* %49, metadata !6328, metadata !DIExpression()), !dbg !6330
  %50 = add nsw i32 %39, -4, !dbg !6372
  call void @llvm.dbg.value(metadata i32 %50, metadata !6326, metadata !DIExpression()), !dbg !6330
  %51 = icmp ugt i32 %39, 4, !dbg !6373
  br i1 %51, label %37, label %72, !dbg !6359, !llvm.loop !6374

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !6328, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %54, metadata !6326, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %55, metadata !6324, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i8* %53, metadata !6328, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 0, metadata !6327, metadata !DIExpression()), !dbg !6330
  br label %56, !dbg !6376

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6328, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %58, metadata !6327, metadata !DIExpression()), !dbg !6330
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !6380
  call void @llvm.dbg.value(metadata i8* %59, metadata !6328, metadata !DIExpression()), !dbg !6330
  %60 = load i8, i8* %57, align 1, !dbg !6383
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !6384
  store i8 %60, i8* %61, align 1, !dbg !6385
  %62 = add nuw nsw i32 %58, 1, !dbg !6386
  call void @llvm.dbg.value(metadata i32 %62, metadata !6327, metadata !DIExpression()), !dbg !6330
  %63 = icmp ult i32 %58, 3, !dbg !6387
  %64 = icmp ult i32 %62, %54, !dbg !6388
  %65 = select i1 %63, i1 %64, i1 false, !dbg !6388
  br i1 %65, label %56, label %66, !dbg !6376, !llvm.loop !6389

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !6391
  %68 = inttoptr i32 %55 to i32*, !dbg !6391
  store volatile i32 %67, i32* %68, align 4, !dbg !6391
  %69 = add i32 %55, 4, !dbg !6392
  call void @llvm.dbg.value(metadata i32 %69, metadata !6324, metadata !DIExpression()), !dbg !6330
  %70 = add nsw i32 %54, -4, !dbg !6393
  call void @llvm.dbg.value(metadata i8* %59, metadata !6328, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %70, metadata !6326, metadata !DIExpression()), !dbg !6330
  %71 = icmp sgt i32 %54, 4, !dbg !6394
  br i1 %71, label %52, label %72, !dbg !6356, !llvm.loop !6395

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6397
  ret void, !dbg !6397
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !6398 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !6402, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata i8* %1, metadata !6403, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata i8* %2, metadata !6404, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata i16 %3, metadata !6405, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata i16 %4, metadata !6406, metadata !DIExpression()), !dbg !6412
  %7 = bitcast i32* %6 to i8*, !dbg !6413
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !6413
  call void @llvm.dbg.value(metadata i8* %7, metadata !6411, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata i32 0, metadata !6408, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !6410, metadata !DIExpression()), !dbg !6412
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !6410, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata i32 0, metadata !6408, metadata !DIExpression()), !dbg !6412
  %9 = icmp eq i16 %3, 0, !dbg !6414
  br i1 %9, label %33, label %10, !dbg !6417

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !6410, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata i32 %12, metadata !6408, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata i32 0, metadata !6409, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata i32 0, metadata !6407, metadata !DIExpression()), !dbg !6412
  store i32 0, i32* %6, align 4, !dbg !6418
  call void @llvm.dbg.value(metadata i32 0, metadata !6409, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata i32 %12, metadata !6408, metadata !DIExpression()), !dbg !6412
  %13 = icmp ult i32 %12, %8, !dbg !6421
  br i1 %13, label %14, label %27, !dbg !6423

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !6409, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata i32 %16, metadata !6408, metadata !DIExpression()), !dbg !6412
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !6424
  %18 = load i8, i8* %17, align 1, !dbg !6424
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !6426
  store i8 %18, i8* %19, align 1, !dbg !6427
  %20 = add nuw nsw i32 %16, 1, !dbg !6428
  call void @llvm.dbg.value(metadata i32 %20, metadata !6408, metadata !DIExpression()), !dbg !6412
  %21 = add nuw nsw i32 %15, 1, !dbg !6429
  call void @llvm.dbg.value(metadata i32 %21, metadata !6409, metadata !DIExpression()), !dbg !6412
  %22 = icmp ult i32 %20, %8, !dbg !6421
  %23 = icmp ult i32 %15, 3, !dbg !6430
  %24 = select i1 %22, i1 %23, i1 false, !dbg !6430
  br i1 %24, label %14, label %25, !dbg !6423, !llvm.loop !6431

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !6433
  br label %27, !dbg !6433

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !6433
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !6434
  call void @llvm.dbg.value(metadata i32 %28, metadata !6407, metadata !DIExpression()), !dbg !6412
  %30 = bitcast i8* %11 to i32*, !dbg !6433
  store volatile i32 %28, i32* %30, align 4, !dbg !6433
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !6435
  call void @llvm.dbg.value(metadata i8* %31, metadata !6410, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata i32 %29, metadata !6408, metadata !DIExpression()), !dbg !6412
  %32 = icmp ult i32 %29, %8, !dbg !6414
  br i1 %32, label %10, label %33, !dbg !6417, !llvm.loop !6436

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6438
  %34 = zext i16 %4 to i32, !dbg !6439
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6440
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #20, !dbg !6441
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #20, !dbg !6442
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !6410, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !6412
  call void @llvm.dbg.value(metadata i8* %2, metadata !6404, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata i32 0, metadata !6408, metadata !DIExpression()), !dbg !6412
  %35 = icmp eq i16 %4, 0, !dbg !6443
  br i1 %35, label %47, label %36, !dbg !6446

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !6447
  call void @llvm.dbg.value(metadata i8* %37, metadata !6410, metadata !DIExpression()), !dbg !6412
  br label %38, !dbg !6446

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !6404, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata i8* %40, metadata !6410, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata i32 %41, metadata !6408, metadata !DIExpression()), !dbg !6412
  %42 = load volatile i8, i8* %40, align 1, !dbg !6448
  store i8 %42, i8* %39, align 1, !dbg !6450
  %43 = add nuw nsw i32 %41, 1, !dbg !6451
  call void @llvm.dbg.value(metadata i32 %43, metadata !6408, metadata !DIExpression()), !dbg !6412
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !6452
  call void @llvm.dbg.value(metadata i8* %44, metadata !6404, metadata !DIExpression()), !dbg !6412
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !6453
  call void @llvm.dbg.value(metadata i8* %45, metadata !6410, metadata !DIExpression()), !dbg !6412
  %46 = icmp eq i32 %43, %34, !dbg !6443
  br i1 %46, label %47, label %38, !dbg !6446, !llvm.loop !6454

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !6456
  ret void, !dbg !6456
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !6457 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !6461, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.value(metadata i8* %1, metadata !6462, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.value(metadata i32 0, metadata !6463, metadata !DIExpression()), !dbg !6469
  %4 = icmp eq i8* %1, null, !dbg !6470
  br i1 %4, label %67, label %5, !dbg !6472

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6473
  call void @llvm.dbg.value(metadata i32 %27, metadata !6464, metadata !DIExpression()), !dbg !6469
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !6474

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !6469
  call void @llvm.dbg.value(metadata i32 %9, metadata !6463, metadata !DIExpression()), !dbg !6469
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !6475
  %11 = load i8, i8* %10, align 1, !dbg !6475
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !6476

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !6477

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6480
  %15 = and i32 %14, -2, !dbg !6480
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6480
  br label %41, !dbg !6484

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6485
  %18 = and i32 %17, -2, !dbg !6485
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6485
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !6488

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6490
  %22 = or i32 %21, 1, !dbg !6490
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6490
  br label %41, !dbg !6494

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6495
  %25 = or i32 %24, 1, !dbg !6495
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6495
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !6473
  %28 = icmp eq i32 %27, 0, !dbg !6498
  br i1 %7, label %29, label %35, !dbg !6501

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6502
  br i1 %28, label %33, label %31, !dbg !6505

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !6502
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6502
  br label %67, !dbg !6502

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !6502
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6502
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6506
  br i1 %28, label %39, label %37, !dbg !6509

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !6506
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6506
  br label %67, !dbg !6506

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !6506
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6506
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !6510
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !6511
  %44 = load i8, i8* %43, align 1, !dbg !6511
  %45 = icmp eq i8 %44, 5, !dbg !6512
  br i1 %45, label %46, label %56, !dbg !6513

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !6514
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !6515

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !6465, metadata !DIExpression(DW_OP_deref)), !dbg !6516
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !6517
  %50 = load i8, i8* %3, align 1, !dbg !6519
  call void @llvm.dbg.value(metadata i8 %50, metadata !6465, metadata !DIExpression()), !dbg !6516
  %51 = load i8, i8* %48, align 1, !dbg !6520
  %52 = and i8 %51, %50, !dbg !6521
  %53 = icmp eq i8 %52, 0, !dbg !6522
  br i1 %53, label %54, label %49, !dbg !6522, !llvm.loop !6523

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !6525
  %55 = add i32 %9, 1, !dbg !6526
  br label %61, !dbg !6527

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !6528
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !6530
  %59 = load i8, i8* %58, align 1, !dbg !6530
  %60 = zext i8 %59 to i16, !dbg !6530
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #20, !dbg !6531
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !6526
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !6532
  %64 = load i8, i8* %63, align 1, !dbg !6532
  %65 = zext i8 %64 to i32, !dbg !6532
  %66 = add i32 %42, %65, !dbg !6533
  call void @llvm.dbg.value(metadata i32 %66, metadata !6463, metadata !DIExpression()), !dbg !6469
  br label %8, !dbg !6474, !llvm.loop !6534

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !6536
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !6537 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !6541, metadata !DIExpression()), !dbg !6544
  call void @llvm.dbg.value(metadata i8* %1, metadata !6542, metadata !DIExpression()), !dbg !6544
  call void @llvm.dbg.value(metadata i8 %2, metadata !6543, metadata !DIExpression()), !dbg !6544
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !6543, metadata !DIExpression(DW_OP_deref)), !dbg !6544
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !6545
  ret void, !dbg !6546
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !6547 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6551, metadata !DIExpression()), !dbg !6553
  call void @llvm.dbg.value(metadata i8* %1, metadata !6552, metadata !DIExpression()), !dbg !6553
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #20, !dbg !6554
  ret void, !dbg !6555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #8 section ".ram_code" !dbg !6556 {
  ret i32 78, !dbg !6560
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #9 section ".ram_code" !dbg !6561 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6565
  %2 = and i32 %1, 7340032, !dbg !6567
  %3 = icmp ult i32 %2, 2097153, !dbg !6568
  %4 = select i1 %3, i32 30, i32 18, !dbg !6569
  ret i32 %4, !dbg !6570
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #17 section ".ram_code" !dbg !6571 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6575, metadata !DIExpression()), !dbg !6577
  call void @llvm.dbg.value(metadata i32 0, metadata !6576, metadata !DIExpression()), !dbg !6577
  call void @llvm.dbg.value(metadata i32 0, metadata !6576, metadata !DIExpression()), !dbg !6577
  br label %2, !dbg !6578

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6576, metadata !DIExpression()), !dbg !6577
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6580
  store i8 -1, i8* %4, align 1, !dbg !6583
  %5 = add nuw nsw i32 %3, 1, !dbg !6584
  call void @llvm.dbg.value(metadata i32 %5, metadata !6576, metadata !DIExpression()), !dbg !6577
  %6 = icmp eq i32 %5, 8, !dbg !6585
  br i1 %6, label %7, label %2, !dbg !6578, !llvm.loop !6586

7:                                                ; preds = %2
  ret i1 true, !dbg !6588
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !6589 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !6591, metadata !DIExpression()), !dbg !6592
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !6593
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !6594
  %3 = load i8, i8* %2, align 1, !dbg !6594
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !6595
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !6596
  %5 = ptrtoint i8* %4 to i32, !dbg !6597
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !6598
  %6 = bitcast i8* %4 to i32*, !dbg !6599
  %7 = load volatile i32, i32* %6, align 4, !dbg !6600
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !6601
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6602
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !6603
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6604
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !6605
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6606
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !6607
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !6608
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !6609
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !6610
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !6611
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !6612
  %14 = or i32 %13, 986880, !dbg !6613
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !6614
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !6615
  %16 = or i32 %15, 252645135, !dbg !6616
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !6617
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !6618
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !6619
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !6620
  %20 = load i8, i8* %19, align 1, !dbg !6620
  %21 = zext i8 %20 to i32, !dbg !6621
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #20, !dbg !6622
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #21, !dbg !6623
  ret void, !dbg !6624
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !6625 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !6626
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6627
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !6628
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6629
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !6630
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6631
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !6632
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !6633
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !6634
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !6635
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !6636
  %7 = and i32 %6, -252645136, !dbg !6637
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !6638
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !6639
  %9 = zext i8 %8 to i32, !dbg !6639
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #20, !dbg !6640
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #21, !dbg !6641
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !6642
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !6644
  %13 = inttoptr i32 %12 to i32*, !dbg !6645
  %14 = load volatile i32, i32* %13, align 4, !dbg !6646
  %15 = icmp eq i32 %11, %14, !dbg !6647
  br i1 %15, label %17, label %16, !dbg !6648

16:                                               ; preds = %0, %16
  br label %16, !dbg !6649, !llvm.loop !6650

17:                                               ; preds = %0
  ret void, !dbg !6652
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !6653 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !6654
  %2 = icmp eq i32 %1, 0, !dbg !6656
  br i1 %2, label %3, label %5, !dbg !6657

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6658
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !6660
  br label %5, !dbg !6661

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !6662
  %7 = icmp eq i32 %6, 0, !dbg !6664
  br i1 %7, label %8, label %10, !dbg !6665

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !6666
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !6668
  br label %10, !dbg !6669

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6670
  %12 = and i32 %11, -256, !dbg !6671
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6672
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !6673
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #21, !dbg !6674
  ret void, !dbg !6675
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !6676 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !6677
  %2 = icmp eq i32 %1, 0, !dbg !6679
  br i1 %2, label %4, label %3, !dbg !6680

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6681
  br label %4, !dbg !6683

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !6684
  %6 = icmp eq i32 %5, 0, !dbg !6686
  br i1 %6, label %8, label %7, !dbg !6687

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !6688
  br label %8, !dbg !6690

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #21, !dbg !6691
  ret void, !dbg !6692
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #8 section ".tcm_code" !dbg !6693 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6695, metadata !DIExpression()), !dbg !6696
  ret i32 0, !dbg !6697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #8 section ".ram_code" !dbg !6698 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6700, metadata !DIExpression()), !dbg !6701
  ret i32 0, !dbg !6702
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !6703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6705, metadata !DIExpression()), !dbg !6706
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #21, !dbg !6707
  ret void, !dbg !6708
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !6709 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6712
  call void @llvm.dbg.value(metadata i32 %1, metadata !6711, metadata !DIExpression()), !dbg !6713
  ret i32 %1, !dbg !6714
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !6715 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6717, metadata !DIExpression()), !dbg !6718
  tail call void @restore_interrupt_mask(i32 noundef %0) #21, !dbg !6719
  ret void, !dbg !6720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #8 section ".ram_code" !dbg !6721 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !6723, metadata !DIExpression()), !dbg !6724
  ret i32 0, !dbg !6725
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #8 section ".ram_code" !dbg !6726 {
  ret i32 0, !dbg !6729
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 section ".ram_code" !dbg !6730 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6734, metadata !DIExpression()), !dbg !6749
  call void @llvm.dbg.value(metadata i8* %1, metadata !6735, metadata !DIExpression()), !dbg !6749
  call void @llvm.dbg.value(metadata i32 %2, metadata !6736, metadata !DIExpression()), !dbg !6749
  %4 = ptrtoint i8* %0 to i32, !dbg !6750
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !6751
  %7 = and i32 %6, 3, !dbg !6751
  %8 = icmp eq i32 %7, 0, !dbg !6751
  br i1 %8, label %9, label %26, !dbg !6751

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !6752
  call void @llvm.dbg.value(metadata i32* %10, metadata !6738, metadata !DIExpression()), !dbg !6753
  %11 = bitcast i8* %1 to i32*, !dbg !6754
  call void @llvm.dbg.value(metadata i32* %11, metadata !6741, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata i32 0, metadata !6737, metadata !DIExpression()), !dbg !6749
  call void @llvm.dbg.value(metadata i32 0, metadata !6737, metadata !DIExpression()), !dbg !6749
  %12 = icmp ult i32 %2, 4, !dbg !6755
  br i1 %12, label %65, label %13, !dbg !6758

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !6758

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !6737, metadata !DIExpression()), !dbg !6749
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !6759
  %18 = load i32, i32* %17, align 4, !dbg !6759
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !6762
  %20 = load i32, i32* %19, align 4, !dbg !6762
  %21 = icmp eq i32 %18, %20, !dbg !6763
  %22 = add nuw nsw i32 %16, 1, !dbg !6764
  call void @llvm.dbg.value(metadata i32 %22, metadata !6737, metadata !DIExpression()), !dbg !6749
  %23 = xor i1 %21, true, !dbg !6765
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !6765
  call void @llvm.dbg.value(metadata i32 %22, metadata !6737, metadata !DIExpression()), !dbg !6749
  br i1 %25, label %59, label %15, !dbg !6765, !llvm.loop !6766

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !6768
  %28 = icmp eq i32 %27, 0, !dbg !6768
  br i1 %28, label %31, label %29, !dbg !6768

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !6737, metadata !DIExpression()), !dbg !6749
  %30 = icmp eq i32 %2, 0, !dbg !6769
  br i1 %30, label %65, label %48, !dbg !6772

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !6773
  call void @llvm.dbg.value(metadata i16* %32, metadata !6742, metadata !DIExpression()), !dbg !6774
  %33 = bitcast i8* %1 to i16*, !dbg !6775
  call void @llvm.dbg.value(metadata i16* %33, metadata !6745, metadata !DIExpression()), !dbg !6774
  call void @llvm.dbg.value(metadata i32 0, metadata !6737, metadata !DIExpression()), !dbg !6749
  call void @llvm.dbg.value(metadata i32 0, metadata !6737, metadata !DIExpression()), !dbg !6749
  %34 = icmp ult i32 %2, 2, !dbg !6776
  br i1 %34, label %65, label %35, !dbg !6779

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !6779

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !6737, metadata !DIExpression()), !dbg !6749
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !6780
  %40 = load i16, i16* %39, align 2, !dbg !6780
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !6783
  %42 = load i16, i16* %41, align 2, !dbg !6783
  %43 = icmp eq i16 %40, %42, !dbg !6784
  %44 = add nuw nsw i32 %38, 1, !dbg !6785
  call void @llvm.dbg.value(metadata i32 %44, metadata !6737, metadata !DIExpression()), !dbg !6749
  %45 = xor i1 %43, true, !dbg !6786
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !6786
  call void @llvm.dbg.value(metadata i32 %44, metadata !6737, metadata !DIExpression()), !dbg !6749
  br i1 %47, label %61, label %37, !dbg !6786, !llvm.loop !6787

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !6737, metadata !DIExpression()), !dbg !6749
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !6789
  %51 = load i8, i8* %50, align 1, !dbg !6789
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !6792
  %53 = load i8, i8* %52, align 1, !dbg !6792
  %54 = icmp eq i8 %51, %53, !dbg !6793
  %55 = add nuw i32 %49, 1, !dbg !6794
  call void @llvm.dbg.value(metadata i32 %55, metadata !6737, metadata !DIExpression()), !dbg !6749
  %56 = xor i1 %54, true, !dbg !6795
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !6795
  call void @llvm.dbg.value(metadata i32 %55, metadata !6737, metadata !DIExpression()), !dbg !6749
  br i1 %58, label %63, label %48, !dbg !6795, !llvm.loop !6796

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !6798
  br label %65, !dbg !6798

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !6798
  br label %65, !dbg !6798

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !6798
  br label %65, !dbg !6798

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !6749
  ret i1 %66, !dbg !6798
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !6799 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6803, metadata !DIExpression()), !dbg !6814
  call void @llvm.dbg.value(metadata i8* %1, metadata !6804, metadata !DIExpression()), !dbg !6814
  call void @llvm.dbg.value(metadata i32 %2, metadata !6805, metadata !DIExpression()), !dbg !6814
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !6815
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !6806, metadata !DIExpression()), !dbg !6814
  call void @llvm.dbg.value(metadata i8* %0, metadata !6807, metadata !DIExpression()), !dbg !6814
  %7 = bitcast i8** %4 to i8*, !dbg !6816
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !6816
  call void @llvm.dbg.value(metadata i8* %1, metadata !6808, metadata !DIExpression()), !dbg !6814
  store i8* %1, i8** %4, align 4, !dbg !6817
  call void @llvm.dbg.value(metadata i32 0, metadata !6809, metadata !DIExpression()), !dbg !6814
  %8 = bitcast i32* %5 to i8*, !dbg !6818
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22, !dbg !6818
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !6819
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !6820
  store i8 1, i8* %9, align 4, !dbg !6821
  call void @llvm.dbg.value(metadata i32 %2, metadata !6805, metadata !DIExpression()), !dbg !6814
  call void @llvm.dbg.value(metadata i8* %0, metadata !6807, metadata !DIExpression()), !dbg !6814
  %10 = icmp eq i32 %2, 0, !dbg !6822
  br i1 %10, label %73, label %11, !dbg !6823

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !6824
  call void @llvm.dbg.value(metadata i32 %12, metadata !6807, metadata !DIExpression()), !dbg !6814
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !6823

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !6805, metadata !DIExpression()), !dbg !6814
  call void @llvm.dbg.value(metadata i32 %20, metadata !6807, metadata !DIExpression()), !dbg !6814
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !6825
  %22 = shl i32 %21, 1, !dbg !6827
  %23 = add i32 %22, -1, !dbg !6828
  %24 = and i32 %23, %20, !dbg !6829
  %25 = sub i32 %22, %24, !dbg !6830
  %26 = icmp ugt i32 %19, %25, !dbg !6831
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !6832
  call void @llvm.dbg.value(metadata i32 %27, metadata !6811, metadata !DIExpression()), !dbg !6814
  call void @llvm.dbg.value(metadata i32 %27, metadata !6810, metadata !DIExpression()), !dbg !6814
  store i32 %27, i32* %5, align 4, !dbg !6833
  %28 = load i32, i32* %13, align 4, !dbg !6834
  %29 = and i32 %28, 16, !dbg !6836
  %30 = icmp eq i32 %29, 0, !dbg !6836
  br i1 %30, label %31, label %32, !dbg !6837

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #20, !dbg !6838
  br label %32, !dbg !6840

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !6841
  %34 = icmp eq i8 %33, 4, !dbg !6843
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !6844
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !6844
  %37 = load i8, i8* %36, align 1, !dbg !6844
  %38 = zext i8 %37 to i32, !dbg !6844
  br i1 %34, label %39, label %43, !dbg !6845

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !6808, metadata !DIExpression(DW_OP_deref)), !dbg !6814
  call void @llvm.dbg.value(metadata i32* %5, metadata !6810, metadata !DIExpression(DW_OP_deref)), !dbg !6814
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #21, !dbg !6846
  call void @llvm.dbg.value(metadata i32 %40, metadata !6809, metadata !DIExpression()), !dbg !6814
  %41 = load i8*, i8** %4, align 4, !dbg !6848
  call void @llvm.dbg.value(metadata i8* %41, metadata !6808, metadata !DIExpression()), !dbg !6814
  %42 = load i32, i32* %5, align 4, !dbg !6849
  call void @llvm.dbg.value(metadata i32 %42, metadata !6810, metadata !DIExpression()), !dbg !6814
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #21, !dbg !6850
  br label %47, !dbg !6851

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #21, !dbg !6852
  call void @llvm.dbg.value(metadata i32 %44, metadata !6809, metadata !DIExpression()), !dbg !6814
  %45 = load i8*, i8** %4, align 4, !dbg !6854
  call void @llvm.dbg.value(metadata i8* %45, metadata !6808, metadata !DIExpression()), !dbg !6814
  %46 = load i32, i32* %5, align 4, !dbg !6855
  call void @llvm.dbg.value(metadata i32 %46, metadata !6810, metadata !DIExpression()), !dbg !6814
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #21, !dbg !6856
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !6844
  call void @llvm.dbg.value(metadata i32 %48, metadata !6809, metadata !DIExpression()), !dbg !6814
  %49 = call i32 @SaveAndSetIRQMask() #20, !dbg !6857
  call void @llvm.dbg.value(metadata i32 %49, metadata !6813, metadata !DIExpression()), !dbg !6814
  %50 = load i8, i8* %14, align 1, !dbg !6858
  %51 = zext i8 %50 to i32, !dbg !6859
  %52 = add i32 %27, 1, !dbg !6860
  %53 = add i32 %52, %51, !dbg !6861
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6862
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6863
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6864
  call void @SF_DAL_FLAG_BUSY_SET() #20, !dbg !6865
  %54 = load i16, i16* %16, align 2, !dbg !6866
  call void @SFI_MacEnable(i16 noundef zeroext %54) #21, !dbg !6867
  %55 = load i16, i16* %16, align 2, !dbg !6868
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #21, !dbg !6869
  call void @RestoreIRQMask(i32 noundef %49) #20, !dbg !6870
  br label %56, !dbg !6871

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !6872
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !6874
  %59 = load i8, i8* %58, align 1, !dbg !6874
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #20, !dbg !6875
  call void @llvm.dbg.value(metadata i32 %60, metadata !6812, metadata !DIExpression()), !dbg !6814
  %61 = load i8*, i8** %17, align 4, !dbg !6876
  %62 = load i8, i8* %61, align 1, !dbg !6878
  %63 = zext i8 %62 to i32, !dbg !6878
  %64 = and i32 %60, %63, !dbg !6879
  %65 = icmp eq i32 %64, 0, !dbg !6880
  br i1 %65, label %66, label %56, !dbg !6881, !llvm.loop !6882

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !6884
  %67 = load i32, i32* %5, align 4, !dbg !6885
  call void @llvm.dbg.value(metadata i32 %67, metadata !6810, metadata !DIExpression()), !dbg !6814
  %68 = load i8*, i8** %4, align 4, !dbg !6886
  call void @llvm.dbg.value(metadata i8* %68, metadata !6808, metadata !DIExpression()), !dbg !6814
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !6886
  call void @llvm.dbg.value(metadata i8* %69, metadata !6808, metadata !DIExpression()), !dbg !6814
  store i8* %69, i8** %4, align 4, !dbg !6886
  %70 = sub i32 %19, %27, !dbg !6887
  call void @llvm.dbg.value(metadata i32 %70, metadata !6805, metadata !DIExpression()), !dbg !6814
  %71 = add i32 %27, %20, !dbg !6888
  call void @llvm.dbg.value(metadata i32 %71, metadata !6807, metadata !DIExpression()), !dbg !6814
  %72 = icmp eq i32 %70, 0, !dbg !6822
  br i1 %72, label %73, label %18, !dbg !6823, !llvm.loop !6889

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !6891
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !6892
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22, !dbg !6893
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !6893
  ret void, !dbg !6893
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !6894 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !6898, metadata !DIExpression()), !dbg !6900
  br label %2, !dbg !6901

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #20, !dbg !6902
  call void @llvm.dbg.value(metadata i32 %3, metadata !6899, metadata !DIExpression()), !dbg !6900
  %4 = icmp eq i32 %3, 0, !dbg !6904
  br i1 %4, label %5, label %2, !dbg !6905, !llvm.loop !6906

5:                                                ; preds = %2
  ret void, !dbg !6908
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !6909 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !6911, metadata !DIExpression()), !dbg !6912
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !6913
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !6913
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !6914
  %5 = load i8, i8* %4, align 1, !dbg !6914
  %6 = zext i8 %5 to i32, !dbg !6915
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #20, !dbg !6916
  ret void, !dbg !6917
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !6918 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !6921
  call void @llvm.dbg.value(metadata i32 %1, metadata !6920, metadata !DIExpression()), !dbg !6922
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !6923
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !6924
  ret void, !dbg !6925
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !6926 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !6930, metadata !DIExpression()), !dbg !6934
  call void @llvm.dbg.value(metadata i8 %1, metadata !6931, metadata !DIExpression()), !dbg !6934
  %3 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !6935
  call void @llvm.dbg.value(metadata i32 %3, metadata !6932, metadata !DIExpression()), !dbg !6934
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !6936
  %5 = load i16, i16* %4, align 2, !dbg !6936
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #21, !dbg !6937
  %6 = zext i8 %1 to i32, !dbg !6938
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6939
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6940
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6941
  %7 = load i16, i16* %4, align 2, !dbg !6942
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #21, !dbg !6943
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6944
  %9 = lshr i32 %8, 8, !dbg !6945
  %10 = and i32 %9, 255, !dbg !6946
  call void @llvm.dbg.value(metadata i32 %10, metadata !6933, metadata !DIExpression()), !dbg !6934
  tail call void @RestoreIRQMask(i32 noundef %3) #20, !dbg !6947
  ret i32 %10, !dbg !6948
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !6949 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !6952
  call void @llvm.dbg.value(metadata i32 %1, metadata !6951, metadata !DIExpression()), !dbg !6953
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !6954
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6955
  %3 = and i32 %2, -513, !dbg !6955
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6955
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !6958
  ret void, !dbg !6959
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !6960 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !6962, metadata !DIExpression()), !dbg !6964
  %2 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !6965
  call void @llvm.dbg.value(metadata i32 %2, metadata !6963, metadata !DIExpression()), !dbg !6964
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !6966
  br i1 %3, label %4, label %5, !dbg !6968

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !6969
  tail call void @RestoreIRQMask(i32 noundef %2) #20, !dbg !6971
  ret void, !dbg !6972

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #20, !dbg !6973
  tail call void @Flash_ReturnReady() #20, !dbg !6975
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !6975
  unreachable, !dbg !6975
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !6979 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !6981, metadata !DIExpression()), !dbg !6986
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !6987
  call void @llvm.dbg.value(metadata i32 %1, metadata !6983, metadata !DIExpression()), !dbg !6986
  %2 = tail call i32 @get_NOR_init_status() #21, !dbg !6988
  %3 = icmp eq i32 %2, 0, !dbg !6990
  br i1 %3, label %4, label %125, !dbg !6991

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !6992
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !6993
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !6981, metadata !DIExpression()), !dbg !6986
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !6995
  %7 = load i32, i32* %6, align 4, !dbg !6995
  %8 = xor i32 %7, -1, !dbg !6995
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !6995
  %10 = load %struct.vdma_config_t*, %struct.vdma_config_t** %9, align 4, !dbg !6995
  %11 = ptrtoint %struct.vdma_config_t* %10 to i32, !dbg !6995
  %12 = icmp eq i32 %8, %11, !dbg !6995
  br i1 %12, label %14, label %13, !dbg !6998

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #20, !dbg !6999
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !6999
  unreachable, !dbg !6999

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !7001
  %16 = icmp ult i32 %15, 16, !dbg !7003
  br i1 %16, label %17, label %34, !dbg !7004

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !7005
  %19 = load i8, i8* %18, align 4, !dbg !7005
  %20 = icmp eq i8 %19, 1, !dbg !7006
  br i1 %20, label %21, label %34, !dbg !7007

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !7008

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7010
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !7012
  %27 = load i8, i8* %26, align 1, !dbg !7012
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #20, !dbg !7013
  call void @llvm.dbg.value(metadata i32 %28, metadata !6982, metadata !DIExpression()), !dbg !6986
  %29 = load i8*, i8** %23, align 4, !dbg !7014
  %30 = load i8, i8* %29, align 1, !dbg !7016
  %31 = zext i8 %30 to i32, !dbg !7016
  %32 = and i32 %28, %31, !dbg !7017
  %33 = icmp eq i32 %32, 0, !dbg !7018
  br i1 %33, label %34, label %24, !dbg !7019, !llvm.loop !7020

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7022, !range !2542
  %36 = icmp ne i8 %35, 0, !dbg !7022
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !7024
  br i1 %39, label %116, label %40, !dbg !7024

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !7025
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7025
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !7027
  %44 = load i8, i8* %43, align 1, !dbg !7027
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #20, !dbg !7028
  call void @llvm.dbg.value(metadata i32 %45, metadata !6982, metadata !DIExpression()), !dbg !6986
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !7029
  %47 = load i8*, i8** %46, align 4, !dbg !7029
  %48 = load i8, i8* %47, align 1, !dbg !7031
  %49 = zext i8 %48 to i32, !dbg !7031
  %50 = and i32 %45, %49, !dbg !7032
  %51 = icmp eq i32 %50, 0, !dbg !7033
  br i1 %51, label %85, label %52, !dbg !7034

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #20, !dbg !7035
  br label %53, !dbg !7037

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7038
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !7040
  %56 = load i8, i8* %55, align 1, !dbg !7040
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #20, !dbg !7041
  call void @llvm.dbg.value(metadata i32 %57, metadata !6982, metadata !DIExpression()), !dbg !6986
  %58 = load i8*, i8** %46, align 4, !dbg !7042
  %59 = load i8, i8* %58, align 1, !dbg !7044
  %60 = zext i8 %59 to i32, !dbg !7044
  %61 = and i32 %57, %60, !dbg !7045
  %62 = icmp eq i32 %61, 0, !dbg !7046
  br i1 %62, label %63, label %53, !dbg !7047, !llvm.loop !7048

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !7050
  %65 = load i32, i32* %64, align 4, !dbg !7050
  %66 = and i32 %65, 4, !dbg !7052
  %67 = icmp eq i32 %66, 0, !dbg !7052
  br i1 %67, label %84, label %68, !dbg !7053

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !7054
  %70 = load i8, i8* %69, align 4, !dbg !7054
  %71 = icmp eq i8 %70, 2, !dbg !7055
  br i1 %71, label %72, label %84, !dbg !7056

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7057
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7059
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7060
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !7061
  %74 = load i16, i16* %73, align 2, !dbg !7061
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #21, !dbg !7062
  %75 = load i16, i16* %73, align 2, !dbg !7063
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #21, !dbg !7064
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !7065
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7066
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7067
  %76 = load i16, i16* %73, align 2, !dbg !7068
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #21, !dbg !7069
  %77 = load i16, i16* %73, align 2, !dbg !7070
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #21, !dbg !7071
  br label %78, !dbg !7072

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7073
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7075
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7076
  %79 = load i16, i16* %73, align 2, !dbg !7077
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #21, !dbg !7078
  %80 = load i16, i16* %73, align 2, !dbg !7079
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #21, !dbg !7080
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7081
  call void @llvm.dbg.value(metadata i32 %81, metadata !6982, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !6986
  %82 = and i32 %81, 256, !dbg !7082
  %83 = icmp eq i32 %82, 0, !dbg !7082
  br i1 %83, label %84, label %78, !dbg !7082, !llvm.loop !7083

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #20, !dbg !7085
  br label %116, !dbg !7086

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !7087
  %87 = load i32, i32* %86, align 4, !dbg !7087
  %88 = and i32 %87, 2, !dbg !7090
  %89 = icmp eq i32 %88, 0, !dbg !7090
  br i1 %89, label %115, label %90, !dbg !7091

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !7092
  %92 = load %struct.anon*, %struct.anon** %91, align 4, !dbg !7092
  %93 = icmp eq %struct.anon* %92, null, !dbg !7093
  br i1 %93, label %94, label %115, !dbg !7094

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7095
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !7097
  %97 = load i8, i8* %96, align 1, !dbg !7097
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #20, !dbg !7098
  call void @llvm.dbg.value(metadata i32 %98, metadata !6982, metadata !DIExpression()), !dbg !6986
  %99 = load i8*, i8** %46, align 4, !dbg !7099
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !7101
  %101 = load i8, i8* %100, align 1, !dbg !7101
  %102 = zext i8 %101 to i32, !dbg !7101
  %103 = and i32 %98, %102, !dbg !7102
  %104 = icmp eq i32 %103, 0, !dbg !7103
  br i1 %104, label %105, label %115, !dbg !7104

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !7105
  %107 = load i8, i8* %106, align 1, !dbg !7105
  %108 = zext i8 %107 to i32, !dbg !7105
  %109 = and i32 %98, %108, !dbg !7106
  %110 = icmp eq i32 %109, 0, !dbg !7107
  br i1 %110, label %111, label %115, !dbg !7108

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !7109
  %113 = load i16, i16* %112, align 2, !dbg !7109
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #21, !dbg !7111
  %114 = load i16, i16* %112, align 2, !dbg !7112
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #21, !dbg !7113
  br label %115, !dbg !7114

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !7115
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !7116
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !7117
  %118 = sub i32 0, %117, !dbg !7117
  call void @llvm.dbg.value(metadata i32 %118, metadata !6984, metadata !DIExpression()), !dbg !7118
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !7119
  %120 = icmp ult i32 %119, %118, !dbg !7121
  br i1 %120, label %121, label %122, !dbg !7122

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !7123
  br label %122, !dbg !7125

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7126
  %124 = and i32 %123, -513, !dbg !7126
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7126
  br label %125, !dbg !7129

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !6986
  ret void, !dbg !7130
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7131 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7133, metadata !DIExpression()), !dbg !7137
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !7138
  %3 = icmp eq i32 %2, -1, !dbg !7140
  br i1 %3, label %12, label %4, !dbg !7141

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !7135, metadata !DIExpression()), !dbg !7137
  %5 = sub i32 0, %2, !dbg !7142
  call void @llvm.dbg.value(metadata i32 %5, metadata !7136, metadata !DIExpression()), !dbg !7137
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !7144
  %7 = load i8, i8* %6, align 4, !dbg !7144
  %8 = zext i8 %7 to i32, !dbg !7146
  %9 = icmp ugt i32 %8, %5, !dbg !7147
  br i1 %9, label %10, label %12, !dbg !7148

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !7149
  tail call void @DelayAWhile_UST(i32 noundef %11) #21, !dbg !7151
  br label %12, !dbg !7152

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !7153
  call void @llvm.dbg.value(metadata i32 %13, metadata !7134, metadata !DIExpression()), !dbg !7137
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7154
  %15 = load i16, i16* %14, align 2, !dbg !7154
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7155
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !7155
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !7156
  %19 = load i8, i8* %18, align 1, !dbg !7156
  %20 = zext i8 %19 to i32, !dbg !7157
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #21, !dbg !7158
  tail call void @RestoreIRQMask(i32 noundef %13) #20, !dbg !7159
  ret void, !dbg !7160
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !7161 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !7164
  call void @llvm.dbg.value(metadata i32 %1, metadata !7163, metadata !DIExpression()), !dbg !7165
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7166
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7167
  %3 = and i32 %2, -513, !dbg !7167
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7167
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !7170
  ret void, !dbg !7171
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !7172 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7176, metadata !DIExpression()), !dbg !7180
  call void @llvm.dbg.value(metadata i32 %1, metadata !7177, metadata !DIExpression()), !dbg !7180
  call void @llvm.dbg.value(metadata i8 %2, metadata !7178, metadata !DIExpression()), !dbg !7180
  %4 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !7181
  call void @llvm.dbg.value(metadata i32 %4, metadata !7179, metadata !DIExpression()), !dbg !7180
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7182
  %6 = load i16, i16* %5, align 2, !dbg !7182
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #21, !dbg !7183
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7184
  %7 = zext i8 %2 to i32, !dbg !7185
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7186
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7187
  %8 = load i16, i16* %5, align 2, !dbg !7188
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #21, !dbg !7189
  tail call void @RestoreIRQMask(i32 noundef %4) #20, !dbg !7190
  ret void, !dbg !7191
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !7192 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !7197
  call void @llvm.dbg.value(metadata i32 %1, metadata !7196, metadata !DIExpression()), !dbg !7198
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !7199
  br i1 %2, label %4, label %3, !dbg !7201

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !7202
  br label %4, !dbg !7204

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !7205
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !7205
  ret i32 %5, !dbg !7206
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !7207 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7214
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7211, metadata !DIExpression()), !dbg !7215
  call void @llvm.dbg.value(metadata i8 0, metadata !7213, metadata !DIExpression()), !dbg !7215
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !7216
  %3 = load i32, i32* %2, align 4, !dbg !7216
  %4 = xor i32 %3, -1, !dbg !7216
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !7216
  %6 = load %struct.vdma_config_t*, %struct.vdma_config_t** %5, align 4, !dbg !7216
  %7 = ptrtoint %struct.vdma_config_t* %6 to i32, !dbg !7216
  %8 = icmp eq i32 %4, %7, !dbg !7216
  br i1 %8, label %10, label %9, !dbg !7219

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !7220
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !7220
  unreachable, !dbg !7220

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !7222
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7223
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7223
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !7224
  %14 = load i8, i8* %13, align 1, !dbg !7224
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #20, !dbg !7225
  call void @llvm.dbg.value(metadata i32 %15, metadata !7212, metadata !DIExpression()), !dbg !7215
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !7226
  %17 = load i8*, i8** %16, align 4, !dbg !7226
  %18 = load i8, i8* %17, align 1, !dbg !7228
  %19 = zext i8 %18 to i32, !dbg !7228
  %20 = and i32 %15, %19, !dbg !7229
  %21 = icmp eq i32 %20, 0, !dbg !7230
  br i1 %21, label %22, label %23, !dbg !7231

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !7232
  call void @llvm.dbg.value(metadata i8 1, metadata !7213, metadata !DIExpression()), !dbg !7215
  br label %23, !dbg !7234

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !7213, metadata !DIExpression()), !dbg !7215
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !7235
  ret i1 %21, !dbg !7236
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !7237 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7239, metadata !DIExpression()), !dbg !7240
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !7241, !range !2542
  %2 = icmp eq i8 %1, 0, !dbg !7241
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7241
  %4 = icmp eq i8 %3, 0, !dbg !7241
  %5 = select i1 %2, i1 true, i1 %4, !dbg !7241
  br i1 %5, label %6, label %7, !dbg !7241

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !7244
  tail call void @Flash_ReturnReady() #20, !dbg !7246
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !7246
  unreachable, !dbg !7246

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7250
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !7239, metadata !DIExpression()), !dbg !7240
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #20, !dbg !7251
  ret void, !dbg !7252
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7253 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7255, metadata !DIExpression()), !dbg !7257
  %2 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !7258
  call void @llvm.dbg.value(metadata i32 %2, metadata !7256, metadata !DIExpression()), !dbg !7257
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7259
  %4 = load i16, i16* %3, align 2, !dbg !7259
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7260
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !7260
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !7261
  %8 = load i8, i8* %7, align 1, !dbg !7261
  %9 = zext i8 %8 to i32, !dbg !7262
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #21, !dbg !7263
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !7264
  %11 = load i8, i8* %10, align 4, !dbg !7264
  %12 = icmp eq i8 %11, 0, !dbg !7266
  br i1 %12, label %14, label %13, !dbg !7267

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !7268
  br label %14, !dbg !7270

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #20, !dbg !7271
  tail call void @RestoreIRQMask(i32 noundef %2) #20, !dbg !7272
  ret void, !dbg !7273
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !7274 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !7277
  call void @llvm.dbg.value(metadata i32 %1, metadata !7276, metadata !DIExpression()), !dbg !7278
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7279
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !7280
  ret void, !dbg !7281
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !7282 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7286
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7284, metadata !DIExpression()), !dbg !7287
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !7288, !range !2542
  %3 = icmp ne i8 %2, 0, !dbg !7288
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7288
  %5 = icmp eq i8 %4, 0, !dbg !7288
  %6 = select i1 %3, i1 %5, i1 false, !dbg !7288
  br i1 %6, label %8, label %7, !dbg !7288

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !7291
  tail call void @Flash_ReturnReady() #20, !dbg !7293
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !7293
  unreachable, !dbg !7293

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !7297
  %10 = load i32, i32* %9, align 4, !dbg !7297
  %11 = xor i32 %10, -1, !dbg !7297
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !7297
  %13 = load %struct.vdma_config_t*, %struct.vdma_config_t** %12, align 4, !dbg !7297
  %14 = ptrtoint %struct.vdma_config_t* %13 to i32, !dbg !7297
  %15 = icmp eq i32 %11, %14, !dbg !7297
  br i1 %15, label %17, label %16, !dbg !7300

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #20, !dbg !7301
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !7301
  unreachable, !dbg !7301

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #20, !dbg !7303
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !7304

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !7305
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !7307
  %23 = load i8, i8* %22, align 1, !dbg !7307
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #20, !dbg !7308
  call void @llvm.dbg.value(metadata i32 %24, metadata !7285, metadata !DIExpression()), !dbg !7287
  %25 = load i8*, i8** %19, align 4, !dbg !7309
  %26 = load i8, i8* %25, align 1, !dbg !7311
  %27 = zext i8 %26 to i32, !dbg !7311
  %28 = and i32 %24, %27, !dbg !7312
  %29 = icmp eq i32 %28, 0, !dbg !7313
  br i1 %29, label %30, label %20, !dbg !7314, !llvm.loop !7315

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #20, !dbg !7317
  ret void, !dbg !7318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #8 section ".ram_code" !dbg !7319 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7321, metadata !DIExpression()), !dbg !7322
  ret void, !dbg !7323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #5 !dbg !7324 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !7347, metadata !DIExpression()), !dbg !7350
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7348, metadata !DIExpression()), !dbg !7350
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !7351
  %4 = load i8*, i8** %3, align 4, !dbg !7351
  call void @llvm.dbg.value(metadata i8* %4, metadata !7349, metadata !DIExpression()), !dbg !7350
  store i8 1, i8* %4, align 1, !dbg !7352
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !7353
  store i8 2, i8* %5, align 1, !dbg !7354
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !7355
  store i8 8, i8* %6, align 1, !dbg !7356
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !7357
  store i8 4, i8* %7, align 1, !dbg !7358
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !7359
  store i8 60, i8* %8, align 1, !dbg !7360
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !7361
  store i8 -128, i8* %9, align 1, !dbg !7362
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !7363
  store i8 96, i8* %10, align 1, !dbg !7364
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7365
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7365
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !7366
  store i8 43, i8* %13, align 1, !dbg !7367
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7368
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !7369
  store i8 43, i8* %15, align 1, !dbg !7370
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7371
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !7372
  store i8 47, i8* %17, align 1, !dbg !7373
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7374
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !7375
  store i8 5, i8* %19, align 1, !dbg !7376
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7377
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !7378
  store i8 1, i8* %21, align 1, !dbg !7379
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7380
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !7381
  store i8 43, i8* %23, align 1, !dbg !7382
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !7383
  store i8 22, i8* %24, align 4, !dbg !7384
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !7385
  %26 = load i8, i8* %25, align 1, !dbg !7385
  %27 = icmp eq i8 %26, 32, !dbg !7387
  br i1 %27, label %28, label %49, !dbg !7388

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !7389
  %30 = load i8, i8* %29, align 1, !dbg !7389
  %31 = icmp eq i8 %30, 24, !dbg !7390
  br i1 %31, label %32, label %41, !dbg !7391

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7392
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !7394
  store i8 117, i8* %34, align 1, !dbg !7395
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7396
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !7397
  store i8 122, i8* %36, align 1, !dbg !7398
  %37 = load i8, i8* %25, align 1, !dbg !7399
  %38 = icmp eq i8 %37, 32, !dbg !7401
  br i1 %38, label %39, label %49, !dbg !7402

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !7404
  br label %41, !dbg !7404

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !7404
  %43 = icmp eq i8 %42, 22, !dbg !7405
  br i1 %43, label %44, label %49, !dbg !7406

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7407
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !7409
  store i8 117, i8* %46, align 1, !dbg !7410
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7411
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !7412
  store i8 122, i8* %48, align 1, !dbg !7413
  br label %49, !dbg !7414

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !7415
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !7416
  ret i32 0, !dbg !7417
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !7418 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7420, metadata !DIExpression()), !dbg !7424
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !7425
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !7421, metadata !DIExpression()), !dbg !7424
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !7426
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !7427
  %5 = load i8, i8* %4, align 1, !dbg !7429
  %6 = icmp eq i8 %5, -62, !dbg !7430
  br i1 %6, label %7, label %15, !dbg !7431

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !7432
  %9 = load i8, i8* %8, align 1, !dbg !7432
  %10 = icmp eq i8 %9, 32, !dbg !7433
  br i1 %10, label %11, label %15, !dbg !7434

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !7435
  %13 = load i8, i8* %12, align 1, !dbg !7435
  %14 = icmp eq i8 %13, 22, !dbg !7436
  br i1 %14, label %48, label %15, !dbg !7437

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !7438
  %17 = bitcast i8* %16 to i16*, !dbg !7438
  %18 = load i16, i16* %17, align 2, !dbg !7438
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !7439
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !7439
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !7439
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !7440
  %23 = load i8, i8* %22, align 1, !dbg !7440
  %24 = zext i8 %23 to i32, !dbg !7441
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #21, !dbg !7442
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #20, !dbg !7443
  %25 = load i16, i16* %17, align 2, !dbg !7444
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !7445
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !7446
  call void @llvm.dbg.value(metadata i8* %2, metadata !7423, metadata !DIExpression(DW_OP_deref)), !dbg !7424
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !7447
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !7448
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !7449
  %30 = load i8, i8* %29, align 1, !dbg !7449
  %31 = zext i8 %30 to i32, !dbg !7450
  call void @llvm.dbg.value(metadata i32 %31, metadata !7422, metadata !DIExpression()), !dbg !7424
  %32 = shl nuw nsw i32 %31, 8, !dbg !7451
  %33 = load i8, i8* %2, align 1, !dbg !7452
  call void @llvm.dbg.value(metadata i8 %33, metadata !7423, metadata !DIExpression()), !dbg !7424
  %34 = zext i8 %33 to i32, !dbg !7452
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !7453
  %36 = bitcast i8* %35 to i8**, !dbg !7453
  %37 = load i8*, i8** %36, align 4, !dbg !7453
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !7454
  %39 = load i8, i8* %38, align 1, !dbg !7454
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !7455
  %41 = load i8, i8* %40, align 1, !dbg !7455
  %42 = or i8 %41, %39, !dbg !7456
  %43 = zext i8 %42 to i32, !dbg !7456
  %44 = xor i32 %43, -1, !dbg !7457
  %45 = and i32 %44, %34, !dbg !7458
  %46 = or i32 %45, %32, !dbg !7459
  call void @llvm.dbg.value(metadata i32 %46, metadata !7422, metadata !DIExpression()), !dbg !7424
  %47 = load i16, i16* %17, align 2, !dbg !7460
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #21, !dbg !7461
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #20, !dbg !7462
  br label %48, !dbg !7463

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !7464
  ret i32 0, !dbg !7464
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7465 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7467, metadata !DIExpression()), !dbg !7469
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !7470
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !7471

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !7472
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !7474
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !7475
  call void @llvm.dbg.value(metadata i8* %2, metadata !7468, metadata !DIExpression(DW_OP_deref)), !dbg !7469
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !7476
  %10 = load i8, i8* %2, align 1, !dbg !7477
  call void @llvm.dbg.value(metadata i8 %10, metadata !7468, metadata !DIExpression()), !dbg !7469
  %11 = load i8*, i8** %5, align 4, !dbg !7478
  %12 = load i8, i8* %11, align 1, !dbg !7479
  %13 = and i8 %12, %10, !dbg !7480
  %14 = icmp eq i8 %13, 0, !dbg !7481
  br i1 %14, label %15, label %6, !dbg !7482, !llvm.loop !7483

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !7485
  ret void, !dbg !7485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #5 !dbg !7486 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !7488, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7489, metadata !DIExpression()), !dbg !7491
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !7492
  %4 = load i8*, i8** %3, align 4, !dbg !7492
  call void @llvm.dbg.value(metadata i8* %4, metadata !7490, metadata !DIExpression()), !dbg !7491
  store i8 1, i8* %4, align 1, !dbg !7493
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !7494
  store i8 2, i8* %5, align 1, !dbg !7495
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !7496
  store i8 -128, i8* %6, align 1, !dbg !7497
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !7498
  store i8 -128, i8* %7, align 1, !dbg !7499
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !7500
  store i8 60, i8* %8, align 1, !dbg !7501
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !7502
  store i8 -128, i8* %9, align 1, !dbg !7503
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7504
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7504
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !7505
  store i8 -97, i8* %12, align 1, !dbg !7506
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7507
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !7508
  store i8 53, i8* %14, align 1, !dbg !7509
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7510
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !7511
  store i8 53, i8* %16, align 1, !dbg !7512
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7513
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !7514
  store i8 5, i8* %18, align 1, !dbg !7515
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7516
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !7517
  store i8 1, i8* %20, align 1, !dbg !7518
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7519
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !7520
  store i8 117, i8* %22, align 1, !dbg !7521
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7522
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !7523
  store i8 122, i8* %24, align 1, !dbg !7524
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !7525
  store i8 22, i8* %25, align 4, !dbg !7526
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !7527
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !7528
  ret i32 0, !dbg !7529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #8 !dbg !7530 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !7532, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7533, metadata !DIExpression()), !dbg !7534
  ret i32 0, !dbg !7535
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !7536 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !7538, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7539, metadata !DIExpression()), !dbg !7540
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !7541
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !7542
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !7543
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !7544
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !7545
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !7546
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !7547
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !7548
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !7549
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !7550
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !7551
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !7552
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !7553
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !7554
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !7555
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !7556
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !7557
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !7558
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !7559
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !7560
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !7561
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !7562
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !7563
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !7564
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !7565
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !7566
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !7567
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !7568
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !7569
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !7570
  %18 = tail call i32 @custom_get_NORFLASH_Size() #21, !dbg !7571
  %19 = icmp ugt i32 %18, 16777216, !dbg !7573
  %20 = select i1 %19, i8 4, i8 3, !dbg !7574
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !7575
  store i8 %20, i8* %21, align 1, !dbg !7577
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7578
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7578
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !7579
  store i8 0, i8* %24, align 1, !dbg !7580
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7581
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !7582
  store i8 -81, i8* %26, align 1, !dbg !7583
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7584
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !7585
  store i8 -97, i8* %28, align 1, !dbg !7586
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7587
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !7588
  store i8 2, i8* %30, align 1, !dbg !7589
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7590
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !7591
  store i8 32, i8* %32, align 1, !dbg !7592
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7593
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !7594
  store i8 82, i8* %34, align 1, !dbg !7595
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7596
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !7597
  store i8 -40, i8* %36, align 1, !dbg !7598
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7599
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !7600
  store i8 -80, i8* %38, align 1, !dbg !7601
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7602
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !7603
  store i8 48, i8* %40, align 1, !dbg !7604
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7605
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !7606
  store i8 6, i8* %42, align 1, !dbg !7607
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7608
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !7609
  store i8 -71, i8* %44, align 1, !dbg !7610
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7611
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !7612
  store i8 -85, i8* %46, align 1, !dbg !7613
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7614
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !7615
  store i8 5, i8* %48, align 1, !dbg !7616
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !7617
  store i16 0, i16* %49, align 4, !dbg !7618
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !7619
  store %struct.anon* null, %struct.anon** %50, align 4, !dbg !7620
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !7621
  store %struct.anon* null, %struct.anon** %51, align 4, !dbg !7622
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !7623
  store i8 0, i8* %52, align 4, !dbg !7624
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !7625
  store i8 5, i8* %53, align 4, !dbg !7626
  ret i32 0, !dbg !7627
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !7628 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7630, metadata !DIExpression()), !dbg !7648
  call void @llvm.dbg.value(metadata i8* %1, metadata !7631, metadata !DIExpression()), !dbg !7648
  call void @llvm.dbg.value(metadata i8* %1, metadata !7632, metadata !DIExpression()), !dbg !7648
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !7649
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !7645, metadata !DIExpression()), !dbg !7648
  call void @llvm.dbg.value(metadata i32 0, metadata !7646, metadata !DIExpression()), !dbg !7648
  %4 = bitcast i8* %1 to i32*, !dbg !7650
  store i32 0, i32* %4, align 4, !dbg !7651
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.vdma_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !7646, metadata !DIExpression()), !dbg !7648
  %7 = load %struct.vdma_config_t*, %struct.vdma_config_t** %6, align 4, !dbg !7652
  %8 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %7, i32 0, i32 0, !dbg !7653
  %9 = load i32, i32* %8, align 4, !dbg !7653
  %10 = icmp eq i32 %9, 0, !dbg !7654
  br i1 %10, label %34, label %11, !dbg !7655

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !7655

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !7646, metadata !DIExpression()), !dbg !7648
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !7656
  store i32 %17, i32* %19, align 4, !dbg !7658
  %20 = load %struct.vdma_config_t*, %struct.vdma_config_t** %6, align 4, !dbg !7659
  %21 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %20, i32 %18, i32 1, !dbg !7660
  %22 = load i32, i32* %21, align 4, !dbg !7660
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !7661
  store i32 %22, i32* %23, align 4, !dbg !7662
  %24 = load %struct.vdma_config_t*, %struct.vdma_config_t** %6, align 4, !dbg !7663
  %25 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %24, i32 %18, i32 1, !dbg !7664
  %26 = load i32, i32* %25, align 4, !dbg !7664
  %27 = load i32, i32* %4, align 4, !dbg !7665
  %28 = add i32 %27, %26, !dbg !7665
  store i32 %28, i32* %4, align 4, !dbg !7665
  %29 = add i32 %18, 1, !dbg !7666
  call void @llvm.dbg.value(metadata i32 %29, metadata !7646, metadata !DIExpression()), !dbg !7648
  %30 = load %struct.vdma_config_t*, %struct.vdma_config_t** %6, align 4, !dbg !7652
  %31 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %30, i32 %29, i32 0, !dbg !7653
  %32 = load i32, i32* %31, align 4, !dbg !7653
  %33 = icmp eq i32 %32, 0, !dbg !7654
  br i1 %33, label %34, label %16, !dbg !7655, !llvm.loop !7667

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !7648
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !7669
  %37 = bitcast i8* %36 to i32*, !dbg !7669
  store i32 %35, i32* %37, align 4, !dbg !7670
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !7671
  %39 = bitcast i8* %38 to i16*, !dbg !7671
  store i16 512, i16* %39, align 4, !dbg !7672
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #20, !dbg !7673
  br label %40, !dbg !7674

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #20, !dbg !7675
  call void @llvm.dbg.value(metadata i32 %41, metadata !7647, metadata !DIExpression()), !dbg !7648
  %42 = icmp eq i32 %41, -121, !dbg !7677
  br i1 %42, label %40, label %43, !dbg !7678, !llvm.loop !7679

43:                                               ; preds = %40
  ret i32 0, !dbg !7681
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !7682 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7684, metadata !DIExpression()), !dbg !7688
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !7689
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !7685, metadata !DIExpression()), !dbg !7688
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !7690
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !7691

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !7692
  call void @llvm.dbg.value(metadata i32 %8, metadata !7687, metadata !DIExpression()), !dbg !7688
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7694, !range !2542
  %10 = icmp eq i8 %9, 0, !dbg !7694
  br i1 %10, label %12, label %11, !dbg !7696

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #20, !dbg !7697
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !7699
  br label %12, !dbg !7700

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !7701
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !7702
  %15 = load i8, i8* %14, align 1, !dbg !7702
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #20, !dbg !7703
  call void @llvm.dbg.value(metadata i32 %16, metadata !7686, metadata !DIExpression()), !dbg !7688
  %17 = load i8*, i8** %6, align 4, !dbg !7704
  %18 = load i8, i8* %17, align 1, !dbg !7706
  %19 = zext i8 %18 to i32, !dbg !7706
  %20 = and i32 %16, %19, !dbg !7707
  %21 = icmp eq i32 %20, 0, !dbg !7708
  br i1 %21, label %22, label %25, !dbg !7709

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !7710
  tail call void @RestoreIRQMask(i32 noundef %8) #20, !dbg !7712
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !7713
  %24 = bitcast i8* %23 to i8**, !dbg !7713
  store i8* null, i8** %24, align 4, !dbg !7714
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !7715
  ret i32 0, !dbg !7716

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #20, !dbg !7717
  br label %7, !dbg !7691, !llvm.loop !7719
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !7721 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7723, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 %1, metadata !7724, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 0, metadata !7725, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 1, metadata !7729, metadata !DIExpression()), !dbg !7737
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !7738
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !7730, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 0, metadata !7731, metadata !DIExpression()), !dbg !7737
  %4 = bitcast i8* %0 to i32*, !dbg !7739
  %5 = load i32, i32* %4, align 4, !dbg !7739
  %6 = xor i32 %5, -1, !dbg !7739
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !7739
  %8 = bitcast i8* %7 to %struct.vdma_config_t**, !dbg !7739
  %9 = load %struct.vdma_config_t*, %struct.vdma_config_t** %8, align 4, !dbg !7739
  %10 = ptrtoint %struct.vdma_config_t* %9 to i32, !dbg !7739
  %11 = icmp eq i32 %6, %10, !dbg !7739
  br i1 %11, label %13, label %12, !dbg !7742

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #20, !dbg !7743
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !7743
  unreachable, !dbg !7743

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !7745
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !7746
  store i8 2, i8* %14, align 4, !dbg !7747
  call void @llvm.dbg.value(metadata i32 %19, metadata !7731, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 %1, metadata !7724, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !7737
  br label %15, !dbg !7748

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #20, !dbg !7749
  call void @llvm.dbg.value(metadata i32 %16, metadata !7725, metadata !DIExpression()), !dbg !7737
  %17 = icmp eq i32 %16, -121, !dbg !7751
  br i1 %17, label %15, label %18, !dbg !7752, !llvm.loop !7753

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !7755
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !7756
  %21 = bitcast i8* %20 to i8**, !dbg !7756
  %22 = load i8*, i8** %21, align 4, !dbg !7756
  %23 = ptrtoint i8* %22 to i32, !dbg !7757
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #21, !dbg !7758
  call void @llvm.dbg.value(metadata i32 %24, metadata !7726, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 %24, metadata !7727, metadata !DIExpression()), !dbg !7737
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !7759
  %26 = bitcast i8* %25 to i16*, !dbg !7759
  %27 = load i16, i16* %26, align 2, !dbg !7759
  %28 = zext i16 %27 to i32, !dbg !7760
  call void @llvm.dbg.value(metadata i32 %28, metadata !7732, metadata !DIExpression()), !dbg !7761
  %29 = lshr i32 %24, 10, !dbg !7762
  call void @llvm.dbg.value(metadata i32 %29, metadata !7735, metadata !DIExpression()), !dbg !7761
  %30 = and i32 %29, %28, !dbg !7763
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !7765
  %33 = icmp eq i32 %32, 0, !dbg !7765
  call void @llvm.dbg.value(metadata i32 0, metadata !7736, metadata !DIExpression()), !dbg !7761
  call void @llvm.dbg.value(metadata i32 %29, metadata !7735, metadata !DIExpression()), !dbg !7761
  call void @llvm.dbg.value(metadata i32 %28, metadata !7732, metadata !DIExpression()), !dbg !7761
  call void @llvm.dbg.value(metadata i32 1, metadata !7729, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 %24, metadata !7727, metadata !DIExpression()), !dbg !7737
  br i1 %33, label %34, label %51, !dbg !7765

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !7736, metadata !DIExpression()), !dbg !7761
  call void @llvm.dbg.value(metadata i32 %36, metadata !7735, metadata !DIExpression()), !dbg !7761
  call void @llvm.dbg.value(metadata i32 %37, metadata !7732, metadata !DIExpression()), !dbg !7761
  call void @llvm.dbg.value(metadata i32 %38, metadata !7729, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 %39, metadata !7727, metadata !DIExpression()), !dbg !7737
  %40 = and i32 %37, 1, !dbg !7766
  %41 = icmp eq i32 %40, 0, !dbg !7766
  %42 = add i32 %35, 10, !dbg !7772
  %43 = shl nuw i32 1, %42, !dbg !7772
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !7772
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !7772
  call void @llvm.dbg.value(metadata i32 %45, metadata !7729, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 %44, metadata !7727, metadata !DIExpression()), !dbg !7737
  %46 = lshr i32 %37, 1, !dbg !7773
  call void @llvm.dbg.value(metadata i32 %46, metadata !7732, metadata !DIExpression()), !dbg !7761
  %47 = lshr i32 %36, 1, !dbg !7774
  call void @llvm.dbg.value(metadata i32 %47, metadata !7735, metadata !DIExpression()), !dbg !7761
  %48 = add i32 %35, 1, !dbg !7775
  call void @llvm.dbg.value(metadata i32 %48, metadata !7736, metadata !DIExpression()), !dbg !7761
  %49 = and i32 %36, 2, !dbg !7776
  %50 = icmp eq i32 %49, 0, !dbg !7776
  br i1 %50, label %34, label %51, !dbg !7777, !llvm.loop !7778

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !7780
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !7781
  call void @llvm.dbg.value(metadata i32 %53, metadata !7729, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 %52, metadata !7727, metadata !DIExpression()), !dbg !7737
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !7782

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !7783
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !7783
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !7783
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !7785
  br label %70, !dbg !7786

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !7787
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !7787
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !7787
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !7788
  br label %70, !dbg !7789

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !7790
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !7790
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !7790
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !7791
  br label %70, !dbg !7792

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #20, !dbg !7793
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !7793
  unreachable, !dbg !7793

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !7797
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !7797
  store i8 %73, i8* %74, align 1, !dbg !7797
  call void @llvm.dbg.value(metadata i32 %53, metadata !7729, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 %52, metadata !7727, metadata !DIExpression()), !dbg !7737
  %75 = trunc i32 %19 to i8, !dbg !7798
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !7798

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !7799
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !7799
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !7799
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !7801
  br label %91, !dbg !7802

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !7803
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !7803
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !7803
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !7804
  br label %91, !dbg !7805

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !7806
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !7806
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !7806
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !7807
  br label %91, !dbg !7808

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !7809
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !7809
  store i8 %94, i8* %95, align 1, !dbg !7809
  br label %96, !dbg !7810

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !7728, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 %53, metadata !7729, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 %16, metadata !7725, metadata !DIExpression()), !dbg !7737
  %97 = icmp eq i32 %53, 0, !dbg !7810
  br i1 %97, label %111, label %98, !dbg !7813

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !7814
  call void @llvm.dbg.value(metadata i8* %99, metadata !7728, metadata !DIExpression()), !dbg !7737
  %100 = ptrtoint i8* %99 to i32, !dbg !7815
  call void @llvm.dbg.value(metadata i32 %100, metadata !7728, metadata !DIExpression()), !dbg !7737
  br label %101, !dbg !7813

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !7729, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 %103, metadata !7728, metadata !DIExpression()), !dbg !7737
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #20, !dbg !7816
  br label %104, !dbg !7818

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #20, !dbg !7819
  call void @llvm.dbg.value(metadata i32 %105, metadata !7725, metadata !DIExpression()), !dbg !7737
  %106 = icmp eq i32 %105, -121, !dbg !7821
  br i1 %106, label %104, label %107, !dbg !7823, !llvm.loop !7824

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !7826
  call void @llvm.dbg.value(metadata i32 %108, metadata !7729, metadata !DIExpression()), !dbg !7737
  %109 = add i32 %103, %52, !dbg !7827
  call void @llvm.dbg.value(metadata i32 %109, metadata !7728, metadata !DIExpression()), !dbg !7737
  call void @llvm.dbg.value(metadata i32 %105, metadata !7725, metadata !DIExpression()), !dbg !7737
  %110 = icmp eq i32 %108, 0, !dbg !7810
  br i1 %110, label %111, label %101, !dbg !7813, !llvm.loop !7828

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !7737
  store i8 0, i8* %14, align 4, !dbg !7830
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !7831
  ret i32 %112, !dbg !7832
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !7833 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7835, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i8* %1, metadata !7836, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i8* %2, metadata !7837, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i32 %3, metadata !7838, metadata !DIExpression()), !dbg !7852
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !7853
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !7839, metadata !DIExpression()), !dbg !7852
  %8 = ptrtoint i8* %1 to i32, !dbg !7854
  call void @llvm.dbg.value(metadata i32 %8, metadata !7841, metadata !DIExpression()), !dbg !7852
  %9 = bitcast i8** %5 to i8*, !dbg !7855
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #22, !dbg !7855
  call void @llvm.dbg.value(metadata i8* %2, metadata !7842, metadata !DIExpression()), !dbg !7852
  store i8* %2, i8** %5, align 4, !dbg !7856
  call void @llvm.dbg.value(metadata i32 0, metadata !7844, metadata !DIExpression()), !dbg !7852
  %10 = bitcast i32* %6 to i8*, !dbg !7857
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #22, !dbg !7857
  %11 = bitcast i8* %0 to i32*, !dbg !7858
  %12 = load i32, i32* %11, align 4, !dbg !7858
  %13 = xor i32 %12, -1, !dbg !7858
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !7858
  %15 = bitcast i8* %14 to %struct.vdma_config_t**, !dbg !7858
  %16 = load %struct.vdma_config_t*, %struct.vdma_config_t** %15, align 4, !dbg !7858
  %17 = ptrtoint %struct.vdma_config_t* %16 to i32, !dbg !7858
  %18 = icmp eq i32 %13, %17, !dbg !7858
  br i1 %18, label %20, label %19, !dbg !7861

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #20, !dbg !7862
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !7862
  unreachable, !dbg !7862

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !7864
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !7865
  store i8 1, i8* %21, align 4, !dbg !7866
  br label %22, !dbg !7867

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #20, !dbg !7868
  call void @llvm.dbg.value(metadata i32 %23, metadata !7844, metadata !DIExpression()), !dbg !7852
  %24 = icmp eq i32 %23, -121, !dbg !7870
  br i1 %24, label %22, label %25, !dbg !7871, !llvm.loop !7872

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !7874
  br i1 %26, label %104, label %27, !dbg !7875

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !7875

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !7876
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !7852
  call void @llvm.dbg.value(metadata i32 %38, metadata !7841, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i32 %37, metadata !7838, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i8* %36, metadata !7842, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i8* %36, metadata !7843, metadata !DIExpression()), !dbg !7852
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !7877
  %40 = shl i32 %39, 1, !dbg !7878
  %41 = add i32 %40, -1, !dbg !7879
  %42 = and i32 %41, %38, !dbg !7880
  %43 = sub i32 %40, %42, !dbg !7881
  %44 = icmp ugt i32 %37, %43, !dbg !7882
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !7883
  call void @llvm.dbg.value(metadata i32 %45, metadata !7845, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i32 %45, metadata !7846, metadata !DIExpression()), !dbg !7852
  store i32 %45, i32* %6, align 4, !dbg !7884
  call void @llvm.dbg.value(metadata i8* %36, metadata !7842, metadata !DIExpression()), !dbg !7852
  %46 = ptrtoint i8* %36 to i32, !dbg !7885
  %47 = and i32 %46, 134217728, !dbg !7886
  %48 = icmp eq i32 %47, 0, !dbg !7886
  br i1 %48, label %58, label %49, !dbg !7887

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !7848, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i32 %45, metadata !7846, metadata !DIExpression()), !dbg !7852
  %50 = icmp eq i32 %45, 0, !dbg !7889
  br i1 %50, label %58, label %51, !dbg !7892

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !7848, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i8* %36, metadata !7842, metadata !DIExpression()), !dbg !7852
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !7893
  %54 = load i8, i8* %53, align 1, !dbg !7893
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !7895
  store i8 %54, i8* %55, align 1, !dbg !7896
  %56 = add nuw i32 %52, 1, !dbg !7897
  call void @llvm.dbg.value(metadata i32 %56, metadata !7848, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i32 %45, metadata !7846, metadata !DIExpression()), !dbg !7852
  %57 = icmp eq i32 %56, %45, !dbg !7889
  br i1 %57, label %58, label %51, !dbg !7892, !llvm.loop !7898

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !7900
  call void @llvm.dbg.value(metadata i8* %59, metadata !7843, metadata !DIExpression()), !dbg !7852
  %60 = load i32, i32* %29, align 4, !dbg !7901
  %61 = and i32 %60, 16, !dbg !7903
  %62 = icmp eq i32 %61, 0, !dbg !7903
  br i1 %62, label %63, label %64, !dbg !7904

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #20, !dbg !7905
  br label %64, !dbg !7907

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !7908
  %66 = icmp eq i8 %65, 4, !dbg !7910
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !7911
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !7911
  %69 = load i8, i8* %68, align 1, !dbg !7911
  %70 = zext i8 %69 to i32, !dbg !7911
  br i1 %66, label %71, label %75, !dbg !7912

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !7842, metadata !DIExpression(DW_OP_deref)), !dbg !7852
  call void @llvm.dbg.value(metadata i32* %6, metadata !7846, metadata !DIExpression(DW_OP_deref)), !dbg !7852
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #21, !dbg !7913
  call void @llvm.dbg.value(metadata i32 %72, metadata !7847, metadata !DIExpression()), !dbg !7852
  %73 = load i8*, i8** %5, align 4, !dbg !7915
  call void @llvm.dbg.value(metadata i8* %73, metadata !7842, metadata !DIExpression()), !dbg !7852
  %74 = load i32, i32* %6, align 4, !dbg !7916
  call void @llvm.dbg.value(metadata i32 %74, metadata !7846, metadata !DIExpression()), !dbg !7852
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #21, !dbg !7917
  br label %79, !dbg !7918

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #21, !dbg !7919
  call void @llvm.dbg.value(metadata i32 %76, metadata !7847, metadata !DIExpression()), !dbg !7852
  %77 = load i8*, i8** %5, align 4, !dbg !7921
  call void @llvm.dbg.value(metadata i8* %77, metadata !7842, metadata !DIExpression()), !dbg !7852
  %78 = load i32, i32* %6, align 4, !dbg !7922
  call void @llvm.dbg.value(metadata i32 %78, metadata !7846, metadata !DIExpression()), !dbg !7852
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #21, !dbg !7923
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !7911
  call void @llvm.dbg.value(metadata i32 %80, metadata !7847, metadata !DIExpression()), !dbg !7852
  %81 = call i32 @SaveAndSetIRQMask() #20, !dbg !7924
  call void @llvm.dbg.value(metadata i32 %81, metadata !7840, metadata !DIExpression()), !dbg !7852
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7925
  %82 = load i8, i8* %30, align 1, !dbg !7926
  %83 = zext i8 %82 to i32, !dbg !7927
  %84 = add i32 %45, 1, !dbg !7928
  %85 = add i32 %84, %83, !dbg !7929
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7930
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7931
  call void @SF_DAL_FLAG_BUSY_SET() #20, !dbg !7932
  %86 = load i16, i16* %34, align 2, !dbg !7933
  call void @SFI_MacEnable(i16 noundef zeroext %86) #21, !dbg !7934
  %87 = load i16, i16* %34, align 2, !dbg !7935
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #21, !dbg !7936
  call void @RestoreIRQMask(i32 noundef %81) #20, !dbg !7937
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !7938

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !7939
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #20, !dbg !7941
  call void @llvm.dbg.value(metadata i32 %94, metadata !7844, metadata !DIExpression()), !dbg !7852
  %95 = icmp eq i32 %94, 0, !dbg !7942
  br i1 %95, label %92, label %96, !dbg !7943, !llvm.loop !7944

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !7946
  call void @llvm.dbg.value(metadata i32 %97, metadata !7846, metadata !DIExpression()), !dbg !7852
  %98 = load i8*, i8** %5, align 4, !dbg !7947
  call void @llvm.dbg.value(metadata i8* %98, metadata !7842, metadata !DIExpression()), !dbg !7852
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !7947
  call void @llvm.dbg.value(metadata i8* %99, metadata !7842, metadata !DIExpression()), !dbg !7852
  store i8* %99, i8** %5, align 4, !dbg !7947
  %100 = sub i32 %37, %45, !dbg !7948
  call void @llvm.dbg.value(metadata i32 %100, metadata !7838, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i32 undef, metadata !7841, metadata !DIExpression()), !dbg !7852
  %101 = icmp eq i32 %94, 1, !dbg !7949
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !7951
  br i1 %103, label %35, label %104, !dbg !7951, !llvm.loop !7952

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !7852
  call void @llvm.dbg.value(metadata i32 %105, metadata !7844, metadata !DIExpression()), !dbg !7852
  store i8 0, i8* %21, align 4, !dbg !7954
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !7955
  %106 = icmp eq i32 %105, 1, !dbg !7956
  %107 = select i1 %106, i32 0, i32 %105, !dbg !7852
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #22, !dbg !7958
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #22, !dbg !7958
  ret i32 %107, !dbg !7958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #8 section ".ram_code" !dbg !7959 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !7961, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.value(metadata i32 undef, metadata !7962, metadata !DIExpression()), !dbg !7963
  ret i32 -12, !dbg !7964
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !7965 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7967, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i32 undef, metadata !7968, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.value(metadata i32 0, metadata !7970, metadata !DIExpression()), !dbg !7977
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !7978
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !7971, metadata !DIExpression()), !dbg !7977
  %4 = bitcast i8* %0 to i32*, !dbg !7979
  %5 = load i32, i32* %4, align 4, !dbg !7979
  %6 = xor i32 %5, -1, !dbg !7979
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !7979
  %8 = bitcast i8* %7 to %struct.vdma_config_t**, !dbg !7979
  %9 = load %struct.vdma_config_t*, %struct.vdma_config_t** %8, align 4, !dbg !7979
  %10 = ptrtoint %struct.vdma_config_t* %9 to i32, !dbg !7979
  %11 = icmp eq i32 %6, %10, !dbg !7979
  br i1 %11, label %13, label %12, !dbg !7982

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #20, !dbg !7983
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !7983
  unreachable, !dbg !7983

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !7985
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !7985
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !7985
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !7986
  %18 = load i8, i8* %17, align 1, !dbg !7986
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #20, !dbg !7987
  call void @llvm.dbg.value(metadata i32 %19, metadata !7972, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7977
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !7988
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !7989
  %22 = load i8, i8* %21, align 1, !dbg !7989
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #20, !dbg !7990
  call void @llvm.dbg.value(metadata i32 %23, metadata !7973, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7977
  %24 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !7991
  call void @llvm.dbg.value(metadata i32 %24, metadata !7970, metadata !DIExpression()), !dbg !7977
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !7992
  %26 = bitcast i8* %25 to i8**, !dbg !7992
  %27 = load i8*, i8** %26, align 4, !dbg !7992
  %28 = load i8, i8* %27, align 1, !dbg !7993
  %29 = zext i8 %28 to i32, !dbg !7993
  %30 = and i32 %19, %29, !dbg !7994
  %31 = icmp eq i32 %30, 0, !dbg !7995
  br i1 %31, label %32, label %62, !dbg !7996

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !7973, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7977
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !7997
  %34 = load i8, i8* %33, align 1, !dbg !7997
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !7998
  %36 = load i8, i8* %35, align 1, !dbg !7998
  %37 = or i8 %36, %34, !dbg !7999
  call void @llvm.dbg.value(metadata i8 %37, metadata !7974, metadata !DIExpression()), !dbg !8000
  %38 = zext i8 %37 to i32, !dbg !8001
  %39 = and i32 %23, %38, !dbg !8003
  %40 = icmp eq i32 %39, 0, !dbg !8004
  br i1 %40, label %41, label %46, !dbg !8005

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !8006
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !8007
  br i1 %45, label %51, label %46, !dbg !8007

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8008, !range !2542
  %48 = icmp eq i8 %47, 0, !dbg !8008
  br i1 %48, label %49, label %50, !dbg !8012

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #20, !dbg !8013
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !8013
  unreachable, !dbg !8013

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #20, !dbg !8015
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8016
  call void @llvm.dbg.value(metadata i32 -121, metadata !7969, metadata !DIExpression()), !dbg !7977
  br label %62, !dbg !8017

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !8018
  %53 = bitcast i8* %52 to i32*, !dbg !8018
  %54 = load i32, i32* %53, align 4, !dbg !8018
  %55 = and i32 %54, 2, !dbg !8021
  %56 = icmp eq i32 %55, 0, !dbg !8021
  br i1 %56, label %63, label %57, !dbg !8022

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !8023
  %59 = bitcast i8* %58 to i16*, !dbg !8023
  %60 = load i16, i16* %59, align 2, !dbg !8023
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #21, !dbg !8025
  %61 = load i16, i16* %59, align 2, !dbg !8026
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #21, !dbg !8027
  br label %63, !dbg !8028

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !7969, metadata !DIExpression()), !dbg !7977
  tail call void @RestoreIRQMask(i32 noundef %24) #20, !dbg !8029
  br label %65, !dbg !8030

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !8031
  tail call void @SF_DAL_FLAG_SUS_CLR() #20, !dbg !8032
  call void @llvm.dbg.value(metadata i32 0, metadata !7969, metadata !DIExpression()), !dbg !7977
  tail call void @RestoreIRQMask(i32 noundef %24) #20, !dbg !8029
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #20, !dbg !8033
  call void @llvm.dbg.value(metadata i32 %64, metadata !7969, metadata !DIExpression()), !dbg !7977
  br label %65, !dbg !8036

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !7977
  call void @llvm.dbg.value(metadata i32 %66, metadata !7969, metadata !DIExpression()), !dbg !7977
  ret i32 %66, !dbg !8037
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8038 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8040, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.value(metadata i32 undef, metadata !8041, metadata !DIExpression()), !dbg !8045
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8046
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8042, metadata !DIExpression()), !dbg !8045
  %4 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !8047
  call void @llvm.dbg.value(metadata i32 %4, metadata !8044, metadata !DIExpression()), !dbg !8045
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #20, !dbg !8048
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !8049

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !8050
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !8052
  %12 = load i8, i8* %11, align 1, !dbg !8052
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #20, !dbg !8053
  call void @llvm.dbg.value(metadata i32 %13, metadata !8043, metadata !DIExpression()), !dbg !8045
  %14 = load i8*, i8** %8, align 4, !dbg !8054
  %15 = load i8, i8* %14, align 1, !dbg !8056
  %16 = zext i8 %15 to i32, !dbg !8056
  %17 = and i32 %13, %16, !dbg !8057
  %18 = icmp eq i32 %17, 0, !dbg !8058
  br i1 %18, label %19, label %9, !dbg !8059, !llvm.loop !8060

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #20, !dbg !8062
  tail call void @RestoreIRQMask(i32 noundef %4) #20, !dbg !8063
  ret i32 0, !dbg !8064
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8065 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8067, metadata !DIExpression()), !dbg !8070
  call void @llvm.dbg.value(metadata i32 undef, metadata !8068, metadata !DIExpression()), !dbg !8070
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8071
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8069, metadata !DIExpression()), !dbg !8070
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !8072
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #20, !dbg !8073
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #20, !dbg !8074
  ret i32 0, !dbg !8075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #8 section ".ram_code" !dbg !8076 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8078, metadata !DIExpression()), !dbg !8081
  call void @llvm.dbg.value(metadata i8* undef, metadata !8079, metadata !DIExpression()), !dbg !8081
  call void @llvm.dbg.value(metadata i32 undef, metadata !8080, metadata !DIExpression()), !dbg !8081
  ret i32 0, !dbg !8082
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !8083 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8085, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 %1, metadata !8086, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i8* undef, metadata !8087, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i8* %0, metadata !8088, metadata !DIExpression()), !dbg !8089
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !8090

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !8088, metadata !DIExpression()), !dbg !8089
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !8091
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !8091
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !8091
  %8 = tail call i32 %7(i8* noundef %0) #21, !dbg !8094
  br label %21, !dbg !8095

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !8096
  %11 = load i8, i8* %10, align 1, !dbg !8100
  %12 = icmp eq i8 %11, -62, !dbg !8101
  br i1 %12, label %13, label %21, !dbg !8102

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8103
  %15 = bitcast i8* %14 to %struct.vdma_config_t**, !dbg !8103
  %16 = load %struct.vdma_config_t*, %struct.vdma_config_t** %15, align 4, !dbg !8103
  %17 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %16, i32 0, i32 0, !dbg !8104
  %18 = load i32, i32* %17, align 4, !dbg !8104
  %19 = icmp eq i32 %18, 262144, !dbg !8105
  br i1 %19, label %22, label %21, !dbg !8106

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !8107
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !8107
  unreachable, !dbg !8107

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !8112

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !8089
  ret i32 %23, !dbg !8113
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8114 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8116, metadata !DIExpression()), !dbg !8119
  call void @llvm.dbg.value(metadata i8* %0, metadata !8117, metadata !DIExpression()), !dbg !8119
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8120
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !8120
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !8120
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !8122
  %6 = load i8, i8* %5, align 1, !dbg !8122
  %7 = icmp eq i8 %6, 0, !dbg !8123
  br i1 %7, label %19, label %8, !dbg !8124

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8125
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !8117, metadata !DIExpression()), !dbg !8119
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #20, !dbg !8126
  call void @llvm.dbg.value(metadata i32 %10, metadata !8118, metadata !DIExpression()), !dbg !8119
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8128
  %12 = bitcast i8* %11 to i8**, !dbg !8128
  %13 = load i8*, i8** %12, align 4, !dbg !8128
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !8130
  %15 = load i8, i8* %14, align 1, !dbg !8130
  %16 = zext i8 %15 to i32, !dbg !8130
  %17 = and i32 %10, %16, !dbg !8131
  %18 = icmp eq i32 %17, 0, !dbg !8131
  br i1 %18, label %19, label %20, !dbg !8132

19:                                               ; preds = %8, %1
  br label %20, !dbg !8133

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !8119
  ret i32 %21, !dbg !8134
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !8135 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8139, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.value(metadata i32 %1, metadata !8140, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.value(metadata i8 %2, metadata !8141, metadata !DIExpression()), !dbg !8147
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8148
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !8143, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.value(metadata i32 0, metadata !8144, metadata !DIExpression()), !dbg !8147
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8149
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !8149
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !8149
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !8150
  %9 = load i8, i8* %8, align 1, !dbg !8150
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #20, !dbg !8151
  call void @llvm.dbg.value(metadata i32 %10, metadata !8146, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8147
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8152, !range !2542
  %12 = icmp eq i8 %11, 0, !dbg !8152
  br i1 %12, label %18, label %13, !dbg !8154

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8155, !range !2542
  %15 = icmp eq i8 %14, 0, !dbg !8155
  br i1 %15, label %16, label %17, !dbg !8159

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #20, !dbg !8160
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !8160
  unreachable, !dbg !8160

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #20, !dbg !8162
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8163
  br label %34, !dbg !8164

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !8146, metadata !DIExpression()), !dbg !8147
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8165
  %20 = bitcast i8* %19 to i8**, !dbg !8165
  %21 = load i8*, i8** %20, align 4, !dbg !8165
  %22 = load i8, i8* %21, align 1, !dbg !8167
  %23 = zext i8 %22 to i32, !dbg !8167
  %24 = and i32 %10, %23, !dbg !8168
  %25 = icmp eq i32 %24, 0, !dbg !8169
  br i1 %25, label %26, label %34, !dbg !8170

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !8171
  call void @llvm.dbg.value(metadata i32 %27, metadata !8142, metadata !DIExpression()), !dbg !8147
  tail call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !8173
  %28 = inttoptr i32 %1 to i8*, !dbg !8174
  %29 = load volatile i8, i8* %28, align 1, !dbg !8175
  call void @llvm.dbg.value(metadata i8 %29, metadata !8145, metadata !DIExpression()), !dbg !8147
  %30 = icmp eq i8 %29, %2, !dbg !8176
  call void @llvm.dbg.value(metadata i32 undef, metadata !8144, metadata !DIExpression()), !dbg !8147
  tail call void @RestoreIRQMask(i32 noundef %27) #20, !dbg !8178
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 1, metadata !8144, metadata !DIExpression()), !dbg !8147
  %32 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #20, !dbg !8179
  %33 = icmp eq i32 %32, 0, !dbg !8182
  br i1 %33, label %34, label %36, !dbg !8183

34:                                               ; preds = %18, %26, %17, %31
  %35 = phi i32 [ 1, %31 ], [ 0, %18 ], [ -1, %26 ], [ 0, %17 ]
  br label %36, !dbg !8184

36:                                               ; preds = %31, %34
  %37 = phi i32 [ %35, %34 ], [ -1, %31 ], !dbg !8147
  ret i32 %37, !dbg !8185
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !8186 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8190, metadata !DIExpression()), !dbg !8193
  call void @llvm.dbg.value(metadata i32 %1, metadata !8191, metadata !DIExpression()), !dbg !8193
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !8194
  %4 = load i32, i32* %3, align 4, !dbg !8194
  %5 = and i32 %4, 16, !dbg !8196
  %6 = icmp eq i32 %5, 0, !dbg !8196
  br i1 %6, label %7, label %8, !dbg !8197

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #20, !dbg !8198
  br label %8, !dbg !8200

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !8201
  call void @llvm.dbg.value(metadata i32 %9, metadata !8192, metadata !DIExpression()), !dbg !8193
  tail call void @SF_DAL_FLAG_BUSY_SET() #20, !dbg !8202
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8203
  %11 = load i16, i16* %10, align 2, !dbg !8203
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8204
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !8204
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !8205
  %15 = load i8, i8* %14, align 1, !dbg !8205
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !8206
  %17 = load i8, i8* %16, align 1, !dbg !8206
  %18 = zext i8 %17 to i32, !dbg !8207
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #21, !dbg !8208
  tail call void @RestoreIRQMask(i32 noundef %9) #20, !dbg !8209
  ret void, !dbg !8210
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !8211 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8213, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8214, metadata !DIExpression()), !dbg !8216
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !8217
  %4 = load i8, i8* %3, align 1, !dbg !8217
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !8218

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !8219
  %7 = load i32, i32* %6, align 4, !dbg !8221
  %8 = or i32 %7, 4, !dbg !8221
  store i32 %8, i32* %6, align 4, !dbg !8221
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #20, !dbg !8222
  call void @llvm.dbg.value(metadata i32 0, metadata !8215, metadata !DIExpression()), !dbg !8216
  br label %18, !dbg !8223

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !8224
  %12 = load i32, i32* %11, align 4, !dbg !8225
  %13 = or i32 %12, 2, !dbg !8225
  store i32 %13, i32* %11, align 4, !dbg !8225
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #20, !dbg !8226
  call void @llvm.dbg.value(metadata i32 0, metadata !8215, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.value(metadata i32 0, metadata !8215, metadata !DIExpression()), !dbg !8216
  br label %18, !dbg !8227

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #20, !dbg !8228
  call void @llvm.dbg.value(metadata i32 0, metadata !8215, metadata !DIExpression()), !dbg !8216
  br label %18, !dbg !8229

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !8215, metadata !DIExpression()), !dbg !8216
  tail call void @Flash_ReturnReady() #20, !dbg !8230
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.100, i32 0, i32 0)) #23, !dbg !8230
  unreachable, !dbg !8230

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !8215, metadata !DIExpression()), !dbg !8216
  ret i32 0, !dbg !8234
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !8235 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !8239, metadata !DIExpression()), !dbg !8244
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8240, metadata !DIExpression()), !dbg !8244
  call void @llvm.dbg.value(metadata i32 %2, metadata !8241, metadata !DIExpression()), !dbg !8244
  call void @llvm.dbg.value(metadata i32 %3, metadata !8242, metadata !DIExpression()), !dbg !8244
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !8245
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !8247
  br i1 %7, label %33, label %8, !dbg !8247

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8248
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8248
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !8250
  br i1 %11, label %33, label %12, !dbg !8251

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8252
  %14 = load i8*, i8** %13, align 4, !dbg !8252
  %15 = icmp eq i8* %14, null, !dbg !8253
  br i1 %15, label %33, label %16, !dbg !8254

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !8255
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !8256
  store i8* %17, i8** %18, align 4, !dbg !8257
  %19 = trunc i32 %3 to i16, !dbg !8258
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !8259
  store i16 %19, i16* %20, align 2, !dbg !8260
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #20, !dbg !8261
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8262
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !8263
  store i8 -81, i8* %23, align 1, !dbg !8264
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !8265
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #20, !dbg !8266
  %25 = load i8, i8* %24, align 1, !dbg !8267
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !8269

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #21, !dbg !8270
  br i1 %27, label %31, label %28, !dbg !8271

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8272
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !8274
  store i8 -97, i8* %30, align 1, !dbg !8275
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #20, !dbg !8276
  br label %31, !dbg !8277

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #20, !dbg !8278
  call void @llvm.dbg.value(metadata i32 0, metadata !8243, metadata !DIExpression()), !dbg !8244
  br label %33, !dbg !8279

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !8244
  ret i32 %34, !dbg !8280
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !8281 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8285, metadata !DIExpression()), !dbg !8288
  call void @llvm.dbg.value(metadata i8* %1, metadata !8286, metadata !DIExpression()), !dbg !8288
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !8289
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8290
  %5 = and i32 %4, 1, !dbg !8290
  %6 = icmp eq i32 %5, 0, !dbg !8292
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8293
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !8293
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !8294
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !8294
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !8294
  %12 = load i8, i8* %11, align 1, !dbg !8293
  store i8 %12, i8* %3, align 1, !dbg !8293
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8295
  %14 = load i16, i16* %13, align 2, !dbg !8295
  call void @llvm.dbg.value(metadata i8* %3, metadata !8287, metadata !DIExpression(DW_OP_deref)), !dbg !8288
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !8296
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !8297
  ret void, !dbg !8297
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !8298 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8302, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i8* %1, metadata !8303, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i8* %2, metadata !8304, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i16 %3, metadata !8305, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i16 %4, metadata !8306, metadata !DIExpression()), !dbg !8308
  %6 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !8309
  call void @llvm.dbg.value(metadata i32 %6, metadata !8307, metadata !DIExpression()), !dbg !8308
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #21, !dbg !8310
  tail call void @RestoreIRQMask(i32 noundef %6) #20, !dbg !8311
  ret void, !dbg !8312
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !8313 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8315, metadata !DIExpression()), !dbg !8321
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8318, metadata !DIExpression()), !dbg !8321
  call void @llvm.dbg.value(metadata i32 0, metadata !8316, metadata !DIExpression()), !dbg !8321
  br label %6, !dbg !8322

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !8324
  call void @llvm.dbg.value(metadata i32 %3, metadata !8316, metadata !DIExpression()), !dbg !8321
  call void @llvm.dbg.value(metadata i32 %8, metadata !8316, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8321
  %4 = icmp ult i32 %8, 4, !dbg !8326
  %5 = icmp eq i32 %3, 5, !dbg !8326
  br i1 %5, label %26, label %6, !dbg !8322, !llvm.loop !8327

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8316, metadata !DIExpression()), !dbg !8321
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8317, metadata !DIExpression()), !dbg !8321
  %12 = icmp eq i8 %10, 0, !dbg !8329
  br i1 %12, label %23, label %13, !dbg !8333

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8317, metadata !DIExpression()), !dbg !8321
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8334
  %16 = load i8, i8* %15, align 1, !dbg !8334
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !8337
  %18 = load i8, i8* %17, align 1, !dbg !8337
  %19 = icmp eq i8 %16, %18, !dbg !8338
  br i1 %19, label %20, label %23, !dbg !8339

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !8340
  call void @llvm.dbg.value(metadata i32 %21, metadata !8317, metadata !DIExpression()), !dbg !8321
  %22 = icmp eq i32 %21, %11, !dbg !8329
  br i1 %22, label %26, label %13, !dbg !8333, !llvm.loop !8341

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !8343
  %25 = icmp eq i32 %24, %11, !dbg !8344
  call void @llvm.dbg.value(metadata i32 %8, metadata !8316, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8321
  br i1 %25, label %26, label %2, !dbg !8346

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !8326
  ret i1 %27, !dbg !8347
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !8348 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !8360
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !8360
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !8352, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8359, metadata !DIExpression()), !dbg !8362
  %3 = load i16, i16* @cmem_index, align 2, !dbg !8363
  %4 = icmp sgt i16 %3, -1, !dbg !8365
  br i1 %4, label %34, label %5, !dbg !8366

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !8367
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #21, !dbg !8368
  call void @llvm.dbg.value(metadata i32 0, metadata !8350, metadata !DIExpression()), !dbg !8362
  br label %7, !dbg !8369

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8350, metadata !DIExpression()), !dbg !8362
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8351, metadata !DIExpression()), !dbg !8362
  %12 = icmp eq i8 %10, 0, !dbg !8371
  br i1 %12, label %24, label %13, !dbg !8376

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8351, metadata !DIExpression()), !dbg !8362
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8377
  %16 = load i8, i8* %15, align 1, !dbg !8377
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !8380
  %18 = load i16, i16* %17, align 2, !dbg !8380
  %19 = zext i8 %16 to i16, !dbg !8381
  %20 = icmp eq i16 %18, %19, !dbg !8381
  br i1 %20, label %21, label %24, !dbg !8382

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !8383
  call void @llvm.dbg.value(metadata i32 %22, metadata !8351, metadata !DIExpression()), !dbg !8362
  %23 = icmp eq i32 %22, %11, !dbg !8371
  br i1 %23, label %27, label %13, !dbg !8376, !llvm.loop !8384

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !8386
  %26 = icmp eq i32 %25, %11, !dbg !8387
  br i1 %26, label %27, label %29, !dbg !8389

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !8390
  store i16 %28, i16* @cmem_index, align 2, !dbg !8392
  br label %34, !dbg !8393

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !8394
  call void @llvm.dbg.value(metadata i32 %30, metadata !8350, metadata !DIExpression()), !dbg !8362
  %31 = icmp eq i32 %30, 5, !dbg !8395
  br i1 %31, label %32, label %7, !dbg !8369, !llvm.loop !8396

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !8398
  br label %34, !dbg !8398

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !8362
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !8399
  ret i32 %36, !dbg !8399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #8 !dbg !8400 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8404, metadata !DIExpression()), !dbg !8405
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !8406
  ret %struct.CMEMEntryID* %2, !dbg !8407
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !8408 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8412, metadata !DIExpression()), !dbg !8419
  call void @llvm.dbg.value(metadata i8* undef, metadata !8413, metadata !DIExpression()), !dbg !8419
  call void @llvm.dbg.value(metadata i16* %2, metadata !8414, metadata !DIExpression()), !dbg !8419
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !8420
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !8420
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !8420
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !8417, metadata !DIExpression()), !dbg !8421
  call void @llvm.dbg.value(metadata i8 -81, metadata !8415, metadata !DIExpression()), !dbg !8422
  store i8 -81, i8* %4, align 1, !dbg !8423
  call void @llvm.dbg.value(metadata i8* %4, metadata !8415, metadata !DIExpression(DW_OP_deref)), !dbg !8422
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8424
  %7 = load i8, i8* %6, align 1, !dbg !8425
  %8 = add i8 %7, 1, !dbg !8427
  %9 = icmp ult i8 %8, 2, !dbg !8427
  br i1 %9, label %12, label %10, !dbg !8427

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #20, !dbg !8428
  br i1 %11, label %13, label %12, !dbg !8429

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !8415, metadata !DIExpression()), !dbg !8422
  store i8 -97, i8* %4, align 1, !dbg !8430
  call void @llvm.dbg.value(metadata i8* %4, metadata !8415, metadata !DIExpression(DW_OP_deref)), !dbg !8422
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8432
  br label %13, !dbg !8433

13:                                               ; preds = %12, %10
  br label %14, !dbg !8434

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !8418, metadata !DIExpression()), !dbg !8422
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !8436
  %17 = load i8, i8* %16, align 1, !dbg !8436
  %18 = zext i8 %17 to i16, !dbg !8436
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !8439
  store i16 %18, i16* %19, align 2, !dbg !8440
  %20 = add nuw nsw i32 %15, 1, !dbg !8441
  call void @llvm.dbg.value(metadata i32 %20, metadata !8418, metadata !DIExpression()), !dbg !8422
  %21 = icmp eq i32 %20, 3, !dbg !8442
  br i1 %21, label %22, label %14, !dbg !8434, !llvm.loop !8443

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !8445
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !8445
  ret void, !dbg !8446
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #11 section ".ram_code" !dbg !8447 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8449, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8452, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.value(metadata i32 0, metadata !8450, metadata !DIExpression()), !dbg !8453
  br label %6, !dbg !8454

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !8456
  call void @llvm.dbg.value(metadata i32 %3, metadata !8450, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.value(metadata i32 %8, metadata !8450, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8453
  %4 = icmp ult i32 %8, 4, !dbg !8458
  %5 = icmp eq i32 %3, 5, !dbg !8458
  br i1 %5, label %26, label %6, !dbg !8454, !llvm.loop !8459

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8450, metadata !DIExpression()), !dbg !8453
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8451, metadata !DIExpression()), !dbg !8453
  %12 = icmp eq i8 %10, 0, !dbg !8461
  br i1 %12, label %23, label %13, !dbg !8465

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8451, metadata !DIExpression()), !dbg !8453
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8466
  %16 = load i8, i8* %15, align 1, !dbg !8466
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !8469
  %18 = load i8, i8* %17, align 1, !dbg !8469
  %19 = icmp eq i8 %16, %18, !dbg !8470
  br i1 %19, label %20, label %23, !dbg !8471

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !8472
  call void @llvm.dbg.value(metadata i32 %21, metadata !8451, metadata !DIExpression()), !dbg !8453
  %22 = icmp eq i32 %21, %11, !dbg !8461
  br i1 %22, label %26, label %13, !dbg !8465, !llvm.loop !8473

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !8475
  %25 = icmp eq i32 %24, %11, !dbg !8476
  call void @llvm.dbg.value(metadata i32 %8, metadata !8450, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8453
  br i1 %25, label %26, label %2, !dbg !8478

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !8458
  ret i1 %27, !dbg !8479
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !8480 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !8486
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !8486
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !8484, metadata !DIExpression()), !dbg !8487
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8485, metadata !DIExpression()), !dbg !8488
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !8489
  %4 = icmp sgt i16 %3, -1, !dbg !8491
  br i1 %4, label %34, label %5, !dbg !8492

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !8493
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #20, !dbg !8494
  call void @llvm.dbg.value(metadata i32 0, metadata !8482, metadata !DIExpression()), !dbg !8488
  br label %7, !dbg !8495

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8482, metadata !DIExpression()), !dbg !8488
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8483, metadata !DIExpression()), !dbg !8488
  %12 = icmp eq i8 %10, 0, !dbg !8497
  br i1 %12, label %24, label %13, !dbg !8502

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8483, metadata !DIExpression()), !dbg !8488
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8503
  %16 = load i8, i8* %15, align 1, !dbg !8503
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !8506
  %18 = load i16, i16* %17, align 2, !dbg !8506
  %19 = zext i8 %16 to i16, !dbg !8507
  %20 = icmp eq i16 %18, %19, !dbg !8507
  br i1 %20, label %21, label %24, !dbg !8508

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !8509
  call void @llvm.dbg.value(metadata i32 %22, metadata !8483, metadata !DIExpression()), !dbg !8488
  %23 = icmp eq i32 %22, %11, !dbg !8497
  br i1 %23, label %27, label %13, !dbg !8502, !llvm.loop !8510

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !8512
  %26 = icmp eq i32 %25, %11, !dbg !8513
  br i1 %26, label %27, label %29, !dbg !8515

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !8516
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !8518
  br label %34, !dbg !8519

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !8520
  call void @llvm.dbg.value(metadata i32 %30, metadata !8482, metadata !DIExpression()), !dbg !8488
  %31 = icmp eq i32 %30, 5, !dbg !8521
  br i1 %31, label %32, label %7, !dbg !8495, !llvm.loop !8522

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !8524
  br label %34, !dbg !8524

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !8488
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !8525
  ret i32 %36, !dbg !8525
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !8526 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8534, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata i16* %1, metadata !8535, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata i16* %2, metadata !8536, metadata !DIExpression()), !dbg !8542
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !8543
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !8543
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !8543
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !8540, metadata !DIExpression()), !dbg !8544
  call void @llvm.dbg.value(metadata i8 -81, metadata !8538, metadata !DIExpression()), !dbg !8545
  store i8 -81, i8* %4, align 1, !dbg !8546
  %7 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8547
  call void @llvm.dbg.value(metadata i32 %7, metadata !8537, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata i8* %4, metadata !8538, metadata !DIExpression(DW_OP_deref)), !dbg !8545
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8548
  call void @RestoreIRQMask(i32 noundef %7) #21, !dbg !8549
  %8 = load i8, i8* %6, align 1, !dbg !8550
  %9 = add i8 %8, 1, !dbg !8552
  %10 = icmp ult i8 %9, 2, !dbg !8552
  br i1 %10, label %13, label %11, !dbg !8552

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #21, !dbg !8553
  br i1 %12, label %15, label %13, !dbg !8554

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !8538, metadata !DIExpression()), !dbg !8545
  store i8 -97, i8* %4, align 1, !dbg !8555
  %14 = call i32 @SaveAndSetIRQMask() #21, !dbg !8557
  call void @llvm.dbg.value(metadata i32 %14, metadata !8537, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.value(metadata i8* %4, metadata !8538, metadata !DIExpression(DW_OP_deref)), !dbg !8545
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8558
  call void @RestoreIRQMask(i32 noundef %14) #21, !dbg !8559
  br label %15, !dbg !8560

15:                                               ; preds = %13, %11
  br label %16, !dbg !8561

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !8541, metadata !DIExpression()), !dbg !8545
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !8563
  %19 = load i8, i8* %18, align 1, !dbg !8563
  %20 = zext i8 %19 to i16, !dbg !8563
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !8566
  store i16 %20, i16* %21, align 2, !dbg !8567
  %22 = add nuw nsw i32 %17, 1, !dbg !8568
  call void @llvm.dbg.value(metadata i32 %22, metadata !8541, metadata !DIExpression()), !dbg !8545
  %23 = icmp eq i32 %22, 3, !dbg !8569
  br i1 %23, label %24, label %16, !dbg !8561, !llvm.loop !8570

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !8572
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !8572
  ret void, !dbg !8573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #8 !dbg !8574 {
  ret i32 3932160, !dbg !8575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #8 !dbg !8576 {
  ret i32 4194304, !dbg !8577
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !8578 {
  %1 = tail call i32 @ComboMem_Initialize() #21, !dbg !8579
  ret void, !dbg !8580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #8 !dbg !8581 {
  ret void, !dbg !8582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #8 !dbg !8583 {
  ret void, !dbg !8584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #8 !dbg !8585 {
  ret i32 3932160, !dbg !8586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #8 !dbg !8587 {
  ret i32 262144, !dbg !8588
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !8589 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #21, !dbg !8590
  ret void, !dbg !8591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #8 !dbg !8592 {
  ret i32 134217728, !dbg !8593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #8 !dbg !8594 {
  ret i32 4194304, !dbg !8595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #4 !dbg !8596 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !8597
  ret i32 134217728, !dbg !8598
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !8599 {
  store i32 xor (i32 ptrtoint ([8 x %struct.vdma_config_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !8600
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !8601
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !8602
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !8603
  %4 = load i16, i16* %3, align 2, !dbg !8603
  %5 = zext i16 %4 to i32, !dbg !8601
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8604
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.vdma_config_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #21, !dbg !8605
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #20, !dbg !8606
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !8607
  store %struct.vdma_config_t* getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 0), %struct.vdma_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !8608
  ret i32 0, !dbg !8609
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !8610 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !8613
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !8614
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !8615
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !8616
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #20, !dbg !8617
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !8618
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !8619
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !8620
  %5 = load i32, i32* %4, align 4, !dbg !8620
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #21, !dbg !8621
  call void @llvm.dbg.value(metadata i32 %6, metadata !8612, metadata !DIExpression()), !dbg !8622
  %7 = icmp eq i32 %6, -120, !dbg !8623
  %8 = select i1 %7, i32 5, i32 0, !dbg !8622
  ret i32 %8, !dbg !8625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #8 !dbg !8626 {
  ret i8 1, !dbg !8628
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !8629 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8633, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !8635, metadata !DIExpression()), !dbg !8636
  %2 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !8637
  call void @llvm.dbg.value(metadata i32 %2, metadata !8634, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !8635, metadata !DIExpression()), !dbg !8636
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !8638
  %4 = load i32, i32* %3, align 4, !dbg !8638
  ret i32 %4, !dbg !8639
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.vdma_config_t* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !8640 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8644, metadata !DIExpression()), !dbg !8647
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %1, metadata !8645, metadata !DIExpression()), !dbg !8647
  %3 = and i32 %0, 134217727, !dbg !8648
  call void @llvm.dbg.value(metadata i32 %3, metadata !8644, metadata !DIExpression()), !dbg !8647
  call void @llvm.dbg.value(metadata i16 0, metadata !8646, metadata !DIExpression()), !dbg !8647
  %4 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 1, i32 1, !dbg !8649
  %5 = load i32, i32* %4, align 4, !dbg !8649
  %6 = icmp eq i32 %5, 0, !dbg !8652
  br i1 %6, label %25, label %7, !dbg !8653

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !8646, metadata !DIExpression()), !dbg !8647
  %11 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 %9, i32 0, !dbg !8654
  %12 = load i32, i32* %11, align 4, !dbg !8654
  %13 = icmp ult i32 %3, %12, !dbg !8657
  br i1 %13, label %18, label %14, !dbg !8658

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 %8, i32 0, !dbg !8659
  %16 = load i32, i32* %15, align 4, !dbg !8659
  %17 = icmp ult i32 %3, %16, !dbg !8660
  br i1 %17, label %25, label %18, !dbg !8661

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !8662
  call void @llvm.dbg.value(metadata i16 %19, metadata !8646, metadata !DIExpression()), !dbg !8647
  %20 = zext i16 %19 to i32, !dbg !8663
  %21 = add nuw nsw i32 %20, 1, !dbg !8664
  %22 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 %21, i32 1, !dbg !8649
  %23 = load i32, i32* %22, align 4, !dbg !8649
  %24 = icmp eq i32 %23, 0, !dbg !8652
  br i1 %24, label %25, label %7, !dbg !8653, !llvm.loop !8665

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !8663
  %27 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 %26, i32 1, !dbg !8667
  %28 = load i32, i32* %27, align 4, !dbg !8667
  ret i32 %28, !dbg !8668
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #11 !dbg !8669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8671, metadata !DIExpression()), !dbg !8672
  %2 = load %struct.vdma_config_t*, %struct.vdma_config_t** @BlockLayout, align 4, !dbg !8673
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.vdma_config_t* noundef %2) #20, !dbg !8674
  ret i32 %3, !dbg !8675
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !8676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8678, metadata !DIExpression()), !dbg !8681
  %2 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !8682
  call void @llvm.dbg.value(metadata i32 %2, metadata !8679, metadata !DIExpression()), !dbg !8681
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !8680, metadata !DIExpression()), !dbg !8681
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !8680, metadata !DIExpression()), !dbg !8681
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !8683
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.vdma_config_t* noundef nonnull %3) #20, !dbg !8684
  ret i32 %4, !dbg !8685
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.vdma_config_t* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !8686 {
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %0, metadata !8692, metadata !DIExpression()), !dbg !8695
  call void @llvm.dbg.value(metadata i32 0, metadata !8693, metadata !DIExpression()), !dbg !8695
  call void @llvm.dbg.value(metadata i32 0, metadata !8694, metadata !DIExpression()), !dbg !8695
  %2 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 0, i32 0, !dbg !8696
  %3 = load i32, i32* %2, align 4, !dbg !8696
  %4 = icmp eq i32 %3, 0, !dbg !8699
  br i1 %4, label %17, label %5, !dbg !8700

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8694, metadata !DIExpression()), !dbg !8695
  call void @llvm.dbg.value(metadata i32 %8, metadata !8693, metadata !DIExpression()), !dbg !8695
  %9 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %7, i32 1, !dbg !8701
  %10 = load i32, i32* %9, align 4, !dbg !8701
  %11 = mul i32 %10, %6, !dbg !8703
  %12 = add i32 %11, %8, !dbg !8704
  call void @llvm.dbg.value(metadata i32 %12, metadata !8693, metadata !DIExpression()), !dbg !8695
  %13 = add i32 %7, 1, !dbg !8705
  call void @llvm.dbg.value(metadata i32 %13, metadata !8694, metadata !DIExpression()), !dbg !8695
  %14 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %13, i32 0, !dbg !8696
  %15 = load i32, i32* %14, align 4, !dbg !8696
  %16 = icmp eq i32 %15, 0, !dbg !8699
  br i1 %16, label %17, label %5, !dbg !8700, !llvm.loop !8706

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !8695
  ret i32 %18, !dbg !8708
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* nocapture noundef %2, %struct.vdma_config_t* nocapture noundef readonly %3) local_unnamed_addr #12 !dbg !8709 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8713, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.value(metadata i32 %1, metadata !8714, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !8715, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %3, metadata !8716, metadata !DIExpression()), !dbg !8722
  %5 = add i32 %1, %0, !dbg !8723
  call void @llvm.dbg.value(metadata i32 %5, metadata !8721, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.value(metadata i32 %0, metadata !8717, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.value(metadata i32 0, metadata !8718, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.value(metadata i32 0, metadata !8720, metadata !DIExpression()), !dbg !8722
  %6 = icmp ugt i32 %5, %0, !dbg !8724
  br i1 %6, label %7, label %34, !dbg !8727

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8720, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.value(metadata i32 %9, metadata !8717, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.value(metadata i32 %10, metadata !8718, metadata !DIExpression()), !dbg !8722
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.vdma_config_t* noundef %3) #20, !dbg !8728
  call void @llvm.dbg.value(metadata i32 %11, metadata !8719, metadata !DIExpression()), !dbg !8722
  %12 = icmp eq i32 %8, 0, !dbg !8730
  %13 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %10, i32 0, !dbg !8732
  br i1 %12, label %14, label %16, !dbg !8733

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !8734
  %15 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %10, i32 1, !dbg !8736
  store i32 1, i32* %15, align 4, !dbg !8737
  br label %29, !dbg !8738

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !8739
  %18 = icmp eq i32 %11, %17, !dbg !8741
  br i1 %18, label %19, label %23, !dbg !8742

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %10, i32 1, !dbg !8743
  %21 = load i32, i32* %20, align 4, !dbg !8745
  %22 = add i32 %21, 1, !dbg !8745
  store i32 %22, i32* %20, align 4, !dbg !8745
  br label %29, !dbg !8746

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !8747
  call void @llvm.dbg.value(metadata i32 %24, metadata !8718, metadata !DIExpression()), !dbg !8722
  %25 = icmp eq i32 %24, 9, !dbg !8749
  br i1 %25, label %34, label %26, !dbg !8751

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %24, i32 0, !dbg !8752
  store i32 %11, i32* %27, align 4, !dbg !8753
  %28 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %24, i32 1, !dbg !8754
  store i32 1, i32* %28, align 4, !dbg !8755
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !8756
  call void @llvm.dbg.value(metadata i32 %30, metadata !8718, metadata !DIExpression()), !dbg !8722
  %31 = add i32 %11, %9, !dbg !8757
  call void @llvm.dbg.value(metadata i32 %31, metadata !8717, metadata !DIExpression()), !dbg !8722
  %32 = add i32 %8, 1, !dbg !8758
  call void @llvm.dbg.value(metadata i32 %32, metadata !8720, metadata !DIExpression()), !dbg !8722
  %33 = icmp ult i32 %31, %5, !dbg !8724
  br i1 %33, label %7, label %34, !dbg !8727, !llvm.loop !8759

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !8722
  ret i32 %35, !dbg !8761
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* noundef %2) local_unnamed_addr #0 !dbg !8762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8766, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.value(metadata i32 %1, metadata !8767, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !8768, metadata !DIExpression()), !dbg !8769
  %4 = bitcast %struct.vdma_config_t* %2 to i8*, !dbg !8770
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #21, !dbg !8771
  %6 = load %struct.vdma_config_t*, %struct.vdma_config_t** @BlockLayout, align 4, !dbg !8772
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* noundef %2, %struct.vdma_config_t* noundef %6) #20, !dbg !8773
  ret i32 %7, !dbg !8774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* nocapture noundef readnone %2) local_unnamed_addr #8 !dbg !8775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8777, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata i32 %1, metadata !8778, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !8779, metadata !DIExpression()), !dbg !8780
  ret i32 0, !dbg !8781
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !8782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8784, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i32 %1, metadata !8785, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !8786, metadata !DIExpression()), !dbg !8789
  %4 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !8790
  call void @llvm.dbg.value(metadata i32 %4, metadata !8787, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !8788, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !8788, metadata !DIExpression()), !dbg !8789
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !8791
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* noundef %2, %struct.vdma_config_t* noundef nonnull %5) #20, !dbg !8792
  ret i32 %6, !dbg !8793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* nocapture noundef readnone %2) local_unnamed_addr #8 !dbg !8794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8796, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata i32 %1, metadata !8797, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !8798, metadata !DIExpression()), !dbg !8799
  ret i32 0, !dbg !8800
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !8801 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8803, metadata !DIExpression()), !dbg !8806
  %2 = tail call i32 @CMEM_EMIINIT_Index() #21, !dbg !8807
  call void @llvm.dbg.value(metadata i32 %2, metadata !8804, metadata !DIExpression()), !dbg !8806
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !8805, metadata !DIExpression()), !dbg !8806
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !8805, metadata !DIExpression()), !dbg !8806
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !8808
  %4 = load i32, i32* %3, align 4, !dbg !8808
  ret i32 %4, !dbg !8809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.vdma_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #5 !dbg !8810 {
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %0, metadata !8814, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32* %1, metadata !8815, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 %2, metadata !8816, metadata !DIExpression()), !dbg !8817
  %4 = load i32, i32* %1, align 4, !dbg !8818
  %5 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %4, i32 0, !dbg !8820
  %6 = load i32, i32* %5, align 4, !dbg !8820
  %7 = icmp eq i32 %6, %2, !dbg !8821
  br i1 %7, label %8, label %12, !dbg !8822

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %4, i32 1, !dbg !8823
  %10 = load i32, i32* %9, align 4, !dbg !8825
  %11 = add i32 %10, 1, !dbg !8825
  store i32 %11, i32* %9, align 4, !dbg !8825
  br label %17, !dbg !8826

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !8827
  store i32 %13, i32* %1, align 4, !dbg !8827
  %14 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %13, i32 1, !dbg !8829
  store i32 1, i32* %14, align 4, !dbg !8830
  %15 = load i32, i32* %1, align 4, !dbg !8831
  %16 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %15, i32 0, !dbg !8832
  store i32 %2, i32* %16, align 4, !dbg !8833
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !8834
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* noundef %2, %struct.vdma_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !8835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8839, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32 %1, metadata !8840, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !8841, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %3, metadata !8842, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32 0, metadata !8843, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32 0, metadata !8844, metadata !DIExpression()), !dbg !8848
  %5 = bitcast %struct.vdma_config_t* %2 to i8*, !dbg !8849
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #21, !dbg !8850
  call void @llvm.dbg.value(metadata i32 0, metadata !8847, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32 0, metadata !8846, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32 0, metadata !8844, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32 0, metadata !8843, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32 %0, metadata !8839, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32 %1, metadata !8840, metadata !DIExpression()), !dbg !8848
  %7 = icmp eq i32 %1, 0, !dbg !8851
  br i1 %7, label %53, label %8, !dbg !8854

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8847, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32 %10, metadata !8846, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32 %11, metadata !8844, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32 %12, metadata !8843, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32 %13, metadata !8839, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32 %14, metadata !8840, metadata !DIExpression()), !dbg !8848
  %15 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %3, i32 %12, i32 1, !dbg !8855
  %16 = load i32, i32* %15, align 4, !dbg !8855
  %17 = icmp ult i32 %9, %16, !dbg !8858
  %18 = xor i1 %17, true, !dbg !8859
  %19 = zext i1 %18 to i32, !dbg !8859
  %20 = add i32 %12, %19, !dbg !8859
  call void @llvm.dbg.value(metadata i32 undef, metadata !8847, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32 %20, metadata !8843, metadata !DIExpression()), !dbg !8848
  %21 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %3, i32 %20, i32 0, !dbg !8860
  %22 = load i32, i32* %21, align 4, !dbg !8860
  %23 = add i32 %22, %10, !dbg !8861
  call void @llvm.dbg.value(metadata i32 %23, metadata !8846, metadata !DIExpression()), !dbg !8848
  %24 = icmp ult i32 %23, %13, !dbg !8862
  br i1 %24, label %46, label %25, !dbg !8864

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !8865
  call void @llvm.dbg.value(metadata i32 %26, metadata !8845, metadata !DIExpression()), !dbg !8848
  %27 = icmp ult i32 %14, %26, !dbg !8867
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !8869
  call void @llvm.dbg.value(metadata i32 %28, metadata !8845, metadata !DIExpression()), !dbg !8848
  %29 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %11, i32 0, !dbg !8870
  %30 = load i32, i32* %29, align 4, !dbg !8870
  %31 = icmp eq i32 %30, %28, !dbg !8872
  br i1 %31, label %32, label %36, !dbg !8873

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %11, i32 1, !dbg !8874
  %34 = load i32, i32* %33, align 4, !dbg !8876
  %35 = add i32 %34, 1, !dbg !8876
  store i32 %35, i32* %33, align 4, !dbg !8876
  br label %42, !dbg !8877

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !8878
  %38 = zext i1 %37 to i32, !dbg !8881
  %39 = add nsw i32 %11, %38, !dbg !8881
  call void @llvm.dbg.value(metadata i32 %39, metadata !8844, metadata !DIExpression()), !dbg !8848
  %40 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %39, i32 1, !dbg !8882
  store i32 1, i32* %40, align 4, !dbg !8883
  %41 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %39, i32 0, !dbg !8884
  store i32 %28, i32* %41, align 4, !dbg !8885
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !8848
  call void @llvm.dbg.value(metadata i32 %43, metadata !8844, metadata !DIExpression()), !dbg !8848
  %44 = add i32 %28, %13, !dbg !8886
  call void @llvm.dbg.value(metadata i32 %44, metadata !8839, metadata !DIExpression()), !dbg !8848
  %45 = sub i32 %14, %28, !dbg !8887
  call void @llvm.dbg.value(metadata i32 %45, metadata !8840, metadata !DIExpression()), !dbg !8848
  br label %46, !dbg !8888

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !8889
  call void @llvm.dbg.value(metadata i32 %49, metadata !8844, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32 %48, metadata !8839, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32 %47, metadata !8840, metadata !DIExpression()), !dbg !8848
  %50 = add nuw i32 %9, 1, !dbg !8890
  %51 = select i1 %17, i32 %50, i32 1, !dbg !8890
  call void @llvm.dbg.value(metadata i32 %51, metadata !8847, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32 %23, metadata !8846, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.value(metadata i32 %20, metadata !8843, metadata !DIExpression()), !dbg !8848
  %52 = icmp eq i32 %47, 0, !dbg !8851
  br i1 %52, label %53, label %8, !dbg !8854, !llvm.loop !8891

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !8893
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !8894 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !8898
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !8899
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !8898
  store %struct.vdma_config_t* %3, %struct.vdma_config_t** @BlockLayout, align 4, !dbg !8900
  %4 = tail call i32 @custom_get_fat_addr() #21, !dbg !8901
  %5 = tail call i32 @custom_get_fat_len() #21, !dbg !8902
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !8903
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !8904
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !8903
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.vdma_config_t* noundef getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @BankInfo, i32 0, i32 0), %struct.vdma_config_t* noundef nonnull %8) #20, !dbg !8905
  %10 = tail call i32 @custom_get_fat_addr() #21, !dbg !8906
  %11 = tail call i32 @custom_get_fat_len() #21, !dbg !8907
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.vdma_config_t* noundef getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 0)) #20, !dbg !8908
  call void @llvm.dbg.value(metadata i32 %12, metadata !8896, metadata !DIExpression()), !dbg !8909
  %13 = icmp eq i32 %12, 0, !dbg !8910
  br i1 %13, label %14, label %46, !dbg !8912

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !8897, metadata !DIExpression()), !dbg !8909
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !8913
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !8915
  call void @llvm.dbg.value(metadata i32 0, metadata !8897, metadata !DIExpression()), !dbg !8909
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !8916
  %16 = icmp eq i32 %15, 0, !dbg !8918
  br i1 %16, label %34, label %17, !dbg !8919

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !8897, metadata !DIExpression()), !dbg !8909
  %22 = getelementptr inbounds [8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !8920
  %23 = load i32, i32* %22, align 4, !dbg !8920
  %24 = add i32 %20, %23, !dbg !8922
  %25 = icmp ugt i32 %18, %21, !dbg !8923
  br i1 %25, label %26, label %27, !dbg !8925

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !8926
  br label %27, !dbg !8928

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !8929
  call void @llvm.dbg.value(metadata i32 %29, metadata !8897, metadata !DIExpression()), !dbg !8909
  %30 = getelementptr inbounds [8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !8916
  %31 = load i32, i32* %30, align 4, !dbg !8916
  %32 = icmp eq i32 %31, 0, !dbg !8918
  br i1 %32, label %33, label %17, !dbg !8919, !llvm.loop !8930

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !8922
  br label %34, !dbg !8919

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !8932
  %36 = mul i32 %35, -5, !dbg !8933
  %37 = add i32 %36, 262144, !dbg !8934
  %38 = lshr i32 %37, 9, !dbg !8935
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !8936
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #20, !dbg !8937
  call void @llvm.dbg.value(metadata i32 0, metadata !8896, metadata !DIExpression()), !dbg !8909
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !8938
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !8939
  %42 = load i8, i8* %41, align 1, !dbg !8939
  %43 = icmp eq i8 %42, 3, !dbg !8940
  br i1 %43, label %44, label %46, !dbg !8940

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #20, !dbg !8941
  call void @llvm.dbg.value(metadata i32 %45, metadata !8896, metadata !DIExpression()), !dbg !8909
  br label %46, !dbg !8943

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !8909
  ret i32 %47, !dbg !8944
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !8945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8949, metadata !DIExpression()), !dbg !8950
  %2 = icmp eq i32 %0, 0, !dbg !8951
  br i1 %2, label %3, label %9, !dbg !8953

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #21, !dbg !8954
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !8956
  %5 = icmp slt i32 %4, 0, !dbg !8957
  br i1 %5, label %6, label %7, !dbg !8959

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !8960
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.115, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0)) #23, !dbg !8960
  unreachable, !dbg !8960

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #21, !dbg !8965
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !8966
  br label %9, !dbg !8967

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !8968
  ret void, !dbg !8969
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !8970 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #20, !dbg !8971
  %1 = tail call i32 @CMEM_Init_NOR() #20, !dbg !8972
  ret i32 %1, !dbg !8973
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !8974 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #20, !dbg !8977
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !8978
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !8979
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !8980
  %4 = load i16, i16* %3, align 2, !dbg !8980
  %5 = zext i16 %4 to i32, !dbg !8978
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8981
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !8982
  store %struct.vdma_config_t* %6, %struct.vdma_config_t** @BlockLayout, align 4, !dbg !8983
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !8984
  %8 = bitcast %struct.vdma_config_t* %7 to i8*, !dbg !8984
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.vdma_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #21, !dbg !8985
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !8986
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !8987
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !8988
  store i32 xor (i32 ptrtoint ([8 x %struct.vdma_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !8989
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !8990
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !8991
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !8992
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !8993
  %13 = load i32, i32* %12, align 4, !dbg !8993
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #21, !dbg !8994
  call void @llvm.dbg.value(metadata i32 %14, metadata !8976, metadata !DIExpression()), !dbg !8995
  %15 = icmp eq i32 %14, -120, !dbg !8996
  br i1 %15, label %16, label %17, !dbg !8999

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !9000
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.115, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0)) #23, !dbg !9000
  unreachable, !dbg !9000

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.vdma_config_t* noundef getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @BankInfo, i32 0, i32 0)) #20, !dbg !9002
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !9003
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.vdma_config_t* noundef getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #20, !dbg !9004
  store %struct.vdma_config_t* getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.vdma_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !9005
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !9006
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9007
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !9008
  ret i32 0, !dbg !9009
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #8 !dbg !9010 {
  ret void, !dbg !9011
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !9012 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9015
  call void @llvm.dbg.value(metadata i32 %1, metadata !9014, metadata !DIExpression()), !dbg !9016
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !9017
  br i1 %2, label %4, label %3, !dbg !9019

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !9020
  br label %4, !dbg !9022

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !9023
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9023
  ret i32 %5, !dbg !9024
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !9025 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9028
  call void @llvm.dbg.value(metadata i32 %1, metadata !9027, metadata !DIExpression()), !dbg !9029
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !9030
  br i1 %2, label %3, label %4, !dbg !9032

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !9033
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9035
  ret void, !dbg !9036

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9037
  tail call void @Flash_ReturnReady() #21, !dbg !9039
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.121, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9039
  unreachable, !dbg !9039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #8 !dbg !9043 {
  ret void, !dbg !9044
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !9045 {
  br label %1, !dbg !9048

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #20, !dbg !9049
  call void @llvm.dbg.value(metadata i32 %2, metadata !9047, metadata !DIExpression()), !dbg !9051
  %3 = icmp eq i32 %2, 0, !dbg !9052
  br i1 %3, label %4, label %1, !dbg !9053, !llvm.loop !9054

4:                                                ; preds = %1
  ret void, !dbg !9056
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !9057 {
  tail call void @FreeFDMLock() #20, !dbg !9058
  ret void, !dbg !9059
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9060 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9103, metadata !DIExpression()), !dbg !9109
  call void @llvm.dbg.value(metadata i32 %1, metadata !9104, metadata !DIExpression()), !dbg !9109
  call void @llvm.dbg.value(metadata i8* %2, metadata !9105, metadata !DIExpression()), !dbg !9109
  call void @llvm.dbg.value(metadata i32 %3, metadata !9106, metadata !DIExpression()), !dbg !9109
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !9110
  %6 = load i32, i32* %5, align 4, !dbg !9110
  call void @llvm.dbg.value(metadata i32 %6, metadata !9108, metadata !DIExpression()), !dbg !9109
  %7 = icmp ule i32 %6, %1, !dbg !9111
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !9113
  br i1 %10, label %26, label %11, !dbg !9113

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9114
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !9114
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !9114
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !9115
  %16 = load i8*, i8** %15, align 4, !dbg !9115
  %17 = ptrtoint i8* %16 to i32, !dbg !9116
  %18 = add i32 %17, %1, !dbg !9117
  call void @llvm.dbg.value(metadata i32 %18, metadata !9107, metadata !DIExpression()), !dbg !9109
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9118
  %20 = load i8, i8* %19, align 4, !dbg !9118, !range !2542
  %21 = icmp eq i8 %20, 0, !dbg !9118
  br i1 %21, label %22, label %23, !dbg !9120

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #20, !dbg !9121
  br label %23, !dbg !9123

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #20, !dbg !9124
  %24 = inttoptr i32 %18 to i8*, !dbg !9125
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #21, !dbg !9126
  tail call void @release_FDM_lock() #20, !dbg !9127
  br label %26, !dbg !9128

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !9109
  ret i32 %27, !dbg !9129
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !9130 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9134, metadata !DIExpression()), !dbg !9136
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9137
  %3 = load i8, i8* %2, align 4, !dbg !9137, !range !2542
  %4 = icmp eq i8 %3, 0, !dbg !9137
  br i1 %4, label %5, label %18, !dbg !9139

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #20, !dbg !9140
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !9141
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !9141
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !9142
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !9142
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9143
  %11 = load i8*, i8** %10, align 4, !dbg !9143
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !9144
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !9145
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #21, !dbg !9146
  call void @llvm.dbg.value(metadata i32 %14, metadata !9135, metadata !DIExpression()), !dbg !9136
  tail call void @release_FDM_lock() #20, !dbg !9147
  %15 = icmp slt i32 %14, 0, !dbg !9148
  br i1 %15, label %16, label %17, !dbg !9150

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #21, !dbg !9151
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.121, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9151
  unreachable, !dbg !9151

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !9156
  br label %18, !dbg !9157

18:                                               ; preds = %1, %17
  ret void, !dbg !9157
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9158 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9160, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.value(metadata i32 %1, metadata !9161, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.value(metadata i8* %2, metadata !9162, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.value(metadata i32 %3, metadata !9163, metadata !DIExpression()), !dbg !9181
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !9182
  %7 = load i32, i32* %6, align 4, !dbg !9182
  call void @llvm.dbg.value(metadata i32 %7, metadata !9166, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.value(metadata i32 0, metadata !9167, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.value(metadata i32 0, metadata !9168, metadata !DIExpression()), !dbg !9181
  %8 = icmp ugt i32 %7, %1, !dbg !9183
  br i1 %8, label %9, label %101, !dbg !9185

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !9186
  %11 = icmp ugt i32 %10, %7, !dbg !9188
  br i1 %11, label %101, label %12, !dbg !9189

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9190
  %14 = load i8, i8* %13, align 4, !dbg !9190, !range !2542
  %15 = icmp eq i8 %14, 0, !dbg !9190
  br i1 %15, label %16, label %17, !dbg !9192

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #20, !dbg !9193
  br label %17, !dbg !9195

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #20, !dbg !9196
  %18 = bitcast i16* %5 to i8*, !dbg !9197
  call void @llvm.dbg.value(metadata i32 0, metadata !9167, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.value(metadata i32 0, metadata !9168, metadata !DIExpression()), !dbg !9181
  %19 = icmp eq i32 %3, 0, !dbg !9198
  br i1 %19, label %99, label %20, !dbg !9199

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !9199

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !9168, metadata !DIExpression()), !dbg !9181
  %27 = load i8*, i8** %21, align 4, !dbg !9200
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !9201
  %29 = bitcast i8* %28 to i8**, !dbg !9201
  %30 = load i8*, i8** %29, align 4, !dbg !9201
  %31 = ptrtoint i8* %30 to i32, !dbg !9202
  %32 = add i32 %31, %1, !dbg !9203
  %33 = add i32 %32, %26, !dbg !9204
  call void @llvm.dbg.value(metadata i32 %33, metadata !9164, metadata !DIExpression()), !dbg !9181
  %34 = add i32 %26, %22, !dbg !9205
  call void @llvm.dbg.value(metadata i32 %34, metadata !9165, metadata !DIExpression()), !dbg !9181
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9206
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !9207
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !9207
  %38 = add i32 %26, %1, !dbg !9208
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #21, !dbg !9209
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #21, !dbg !9210
  %41 = and i32 %33, 1, !dbg !9211
  %42 = icmp eq i32 %41, 0, !dbg !9211
  br i1 %42, label %43, label %46, !dbg !9212

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !9213
  %45 = icmp eq i32 %44, 1, !dbg !9214
  br i1 %45, label %46, label %57, !dbg !9215

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9216
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !9218
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !9218
  %50 = load i8*, i8** %21, align 4, !dbg !9219
  %51 = inttoptr i32 %33 to i8*, !dbg !9220
  %52 = inttoptr i32 %34 to i8*, !dbg !9221
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #21, !dbg !9222
  call void @llvm.dbg.value(metadata i32 %53, metadata !9167, metadata !DIExpression()), !dbg !9181
  %54 = icmp eq i32 %53, 0, !dbg !9223
  br i1 %54, label %55, label %99, !dbg !9225

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !9226
  call void @llvm.dbg.value(metadata i32 %56, metadata !9168, metadata !DIExpression()), !dbg !9181
  br label %96, !dbg !9227

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !9228
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #21, !dbg !9229
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #21, !dbg !9230
  call void @llvm.dbg.value(metadata i32 %60, metadata !9169, metadata !DIExpression()), !dbg !9231
  call void @llvm.dbg.value(metadata i32 %44, metadata !9173, metadata !DIExpression()), !dbg !9231
  %61 = add i32 %60, %33, !dbg !9232
  %62 = sub i32 0, %60, !dbg !9233
  %63 = and i32 %61, %62, !dbg !9234
  call void @llvm.dbg.value(metadata i32 %63, metadata !9174, metadata !DIExpression()), !dbg !9231
  %64 = add i32 %32, %3, !dbg !9235
  %65 = icmp ugt i32 %64, %63, !dbg !9237
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !9238
  call void @llvm.dbg.value(metadata i32 %67, metadata !9173, metadata !DIExpression()), !dbg !9231
  %68 = and i32 %67, -2, !dbg !9239
  call void @llvm.dbg.value(metadata i32 %68, metadata !9173, metadata !DIExpression()), !dbg !9231
  %69 = icmp ne i32 %68, 2, !dbg !9240
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !9241
  br i1 %72, label %85, label %73, !dbg !9241

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #22, !dbg !9197
  call void @llvm.dbg.value(metadata i8* %18, metadata !9180, metadata !DIExpression()), !dbg !9242
  %74 = inttoptr i32 %34 to i8*, !dbg !9243
  %75 = load i8, i8* %74, align 1, !dbg !9244
  call void @llvm.dbg.value(metadata i8 undef, metadata !9175, metadata !DIExpression()), !dbg !9242
  store i8 %75, i8* %18, align 2, !dbg !9245
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !9246
  %77 = load i8, i8* %76, align 1, !dbg !9247
  store i8 %77, i8* %24, align 1, !dbg !9248
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9249
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !9250
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !9250
  %81 = load i8*, i8** %21, align 4, !dbg !9251
  %82 = inttoptr i32 %33 to i8*, !dbg !9252
  call void @llvm.dbg.value(metadata i16* %5, metadata !9175, metadata !DIExpression(DW_OP_deref)), !dbg !9242
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #21, !dbg !9253
  call void @llvm.dbg.value(metadata i32 %83, metadata !9167, metadata !DIExpression()), !dbg !9181
  %84 = icmp eq i32 %83, 0, !dbg !9254
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #22, !dbg !9256
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9257
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !9261
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !9261
  %89 = load i8*, i8** %21, align 4, !dbg !9262
  %90 = inttoptr i32 %33 to i8*, !dbg !9263
  %91 = inttoptr i32 %34 to i8*, !dbg !9264
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #21, !dbg !9265
  call void @llvm.dbg.value(metadata i32 %92, metadata !9167, metadata !DIExpression()), !dbg !9181
  %93 = icmp eq i32 %92, 0, !dbg !9266
  br i1 %93, label %94, label %99, !dbg !9268

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !9167, metadata !DIExpression()), !dbg !9181
  %95 = add i32 %68, %26, !dbg !9269
  call void @llvm.dbg.value(metadata i32 %83, metadata !9167, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.value(metadata i32 %26, metadata !9168, metadata !DIExpression()), !dbg !9181
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !9270
  call void @llvm.dbg.value(metadata i32 0, metadata !9167, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.value(metadata i32 %97, metadata !9168, metadata !DIExpression()), !dbg !9181
  %98 = icmp ult i32 %97, %3, !dbg !9198
  br i1 %98, label %25, label %99, !dbg !9199, !llvm.loop !9271

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #20, !dbg !9273
  br label %101, !dbg !9274

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !9181
  ret i32 %102, !dbg !9274
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9275 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9279, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata i32 %1, metadata !9280, metadata !DIExpression()), !dbg !9283
  %3 = and i32 %1, 16777215, !dbg !9284
  call void @llvm.dbg.value(metadata i32 %3, metadata !9282, metadata !DIExpression()), !dbg !9283
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9285
  %5 = load i8, i8* %4, align 4, !dbg !9285, !range !2542
  %6 = icmp eq i8 %5, 0, !dbg !9285
  br i1 %6, label %7, label %8, !dbg !9287

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #20, !dbg !9288
  br label %8, !dbg !9290

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !9291
  %10 = load i32, i32* %9, align 4, !dbg !9291
  %11 = icmp ult i32 %3, %10, !dbg !9293
  br i1 %11, label %12, label %27, !dbg !9294

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #20, !dbg !9295
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !9296
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !9296
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !9297
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !9297
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9298
  %18 = load i8*, i8** %17, align 4, !dbg !9298
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #21, !dbg !9299
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !9300
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !9301
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !9301
  %23 = load i8*, i8** %17, align 4, !dbg !9302
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #21, !dbg !9303
  call void @llvm.dbg.value(metadata i32 %24, metadata !9281, metadata !DIExpression()), !dbg !9283
  tail call void @release_FDM_lock() #20, !dbg !9304
  %25 = icmp eq i32 %24, 0, !dbg !9305
  %26 = select i1 %25, i32 0, i32 6, !dbg !9283
  br label %27, !dbg !9283

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !9283
  ret i32 %28, !dbg !9307
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !9308 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !9309
  br i1 %1, label %3, label %2, !dbg !9311

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #21, !dbg !9312
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #20, !dbg !9314
  store i1 true, i1* @flash_init_status, align 4, !dbg !9315
  br label %3, !dbg !9316

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !9317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #2 section ".ram_code" !dbg !9318 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !9319
  %2 = select i1 %1, i32 0, i32 -5, !dbg !9319
  ret i32 %2, !dbg !9320
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !9321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9325, metadata !DIExpression()), !dbg !9332
  call void @llvm.dbg.value(metadata i32 %1, metadata !9326, metadata !DIExpression()), !dbg !9332
  call void @llvm.dbg.value(metadata i8* %2, metadata !9327, metadata !DIExpression()), !dbg !9332
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9328, metadata !DIExpression()), !dbg !9332
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9333
  call void @llvm.dbg.value(metadata i8* %4, metadata !9329, metadata !DIExpression()), !dbg !9332
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #21, !dbg !9334
  %6 = ptrtoint i8* %5 to i32, !dbg !9335
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9336
  %8 = bitcast i8* %7 to i8**, !dbg !9336
  %9 = load i8*, i8** %8, align 4, !dbg !9336
  %10 = ptrtoint i8* %9 to i32, !dbg !9337
  %11 = shl i32 %1, 9, !dbg !9338
  %12 = add i32 %11, %6, !dbg !9339
  %13 = sub i32 %12, %10, !dbg !9340
  call void @llvm.dbg.value(metadata i32 %13, metadata !9331, metadata !DIExpression()), !dbg !9332
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #20, !dbg !9341
  call void @llvm.dbg.value(metadata i32 %14, metadata !9330, metadata !DIExpression()), !dbg !9332
  %15 = icmp eq i32 %14, 0, !dbg !9342
  %16 = select i1 %15, i32 0, i32 -13, !dbg !9332
  ret i32 %16, !dbg !9344
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !9345 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9347, metadata !DIExpression()), !dbg !9354
  call void @llvm.dbg.value(metadata i32 %1, metadata !9348, metadata !DIExpression()), !dbg !9354
  call void @llvm.dbg.value(metadata i8* %2, metadata !9349, metadata !DIExpression()), !dbg !9354
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9350, metadata !DIExpression()), !dbg !9354
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9355
  call void @llvm.dbg.value(metadata i8* %4, metadata !9351, metadata !DIExpression()), !dbg !9354
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #21, !dbg !9356
  %6 = ptrtoint i8* %5 to i32, !dbg !9357
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9358
  %8 = bitcast i8* %7 to i8**, !dbg !9358
  %9 = load i8*, i8** %8, align 4, !dbg !9358
  %10 = ptrtoint i8* %9 to i32, !dbg !9359
  %11 = shl i32 %1, 9, !dbg !9360
  %12 = add i32 %11, %6, !dbg !9361
  %13 = sub i32 %12, %10, !dbg !9362
  call void @llvm.dbg.value(metadata i32 %13, metadata !9353, metadata !DIExpression()), !dbg !9354
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #20, !dbg !9363
  call void @llvm.dbg.value(metadata i32 %14, metadata !9352, metadata !DIExpression()), !dbg !9354
  %15 = icmp eq i32 %14, 0, !dbg !9364
  %16 = select i1 %15, i32 0, i32 -14, !dbg !9354
  ret i32 %16, !dbg !9366
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !9367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9371, metadata !DIExpression()), !dbg !9373
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #20, !dbg !9374
  call void @llvm.dbg.value(metadata i32 %2, metadata !9372, metadata !DIExpression()), !dbg !9373
  %3 = icmp eq i32 %2, 0, !dbg !9375
  %4 = select i1 %3, i32 0, i32 -15, !dbg !9373
  ret i32 %4, !dbg !9377
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !9378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9380, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9381, metadata !DIExpression()), !dbg !9383
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9384
  call void @llvm.dbg.value(metadata i8* %2, metadata !9382, metadata !DIExpression()), !dbg !9383
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #21, !dbg !9385
  ret i32 %3, !dbg !9386
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !9387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9389, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9390, metadata !DIExpression()), !dbg !9392
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9393
  call void @llvm.dbg.value(metadata i8* %2, metadata !9391, metadata !DIExpression()), !dbg !9392
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #21, !dbg !9394
  ret i32 %3, !dbg !9395
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !9396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9400, metadata !DIExpression()), !dbg !9405
  call void @llvm.dbg.value(metadata i32* %1, metadata !9401, metadata !DIExpression()), !dbg !9405
  call void @llvm.dbg.value(metadata i32* %2, metadata !9402, metadata !DIExpression()), !dbg !9405
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9403, metadata !DIExpression()), !dbg !9405
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9406
  call void @llvm.dbg.value(metadata i8* %4, metadata !9404, metadata !DIExpression()), !dbg !9405
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #21, !dbg !9407
  store i32 %5, i32* %1, align 4, !dbg !9408
  %6 = icmp eq i32 %5, -1, !dbg !9409
  br i1 %6, label %10, label %7, !dbg !9411

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #21, !dbg !9412
  %9 = urem i32 %0, %8, !dbg !9413
  store i32 %9, i32* %2, align 4, !dbg !9414
  br label %10, !dbg !9415

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !9405
  ret i32 %11, !dbg !9416
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !9417 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9421, metadata !DIExpression()), !dbg !9426
  call void @llvm.dbg.value(metadata i32 %1, metadata !9422, metadata !DIExpression()), !dbg !9426
  call void @llvm.dbg.value(metadata i32* %2, metadata !9423, metadata !DIExpression()), !dbg !9426
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9424, metadata !DIExpression()), !dbg !9426
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9427
  call void @llvm.dbg.value(metadata i8* %4, metadata !9425, metadata !DIExpression()), !dbg !9426
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #21, !dbg !9428
  %6 = ptrtoint i8* %5 to i32, !dbg !9429
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9430
  %8 = bitcast i8* %7 to i8**, !dbg !9430
  %9 = load i8*, i8** %8, align 4, !dbg !9430
  %10 = ptrtoint i8* %9 to i32, !dbg !9431
  %11 = add i32 %6, %1, !dbg !9432
  %12 = sub i32 %11, %10, !dbg !9433
  store i32 %12, i32* %2, align 4, !dbg !9434
  ret i32 0, !dbg !9435
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !9436 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9440, metadata !DIExpression()), !dbg !9441
  %2 = add i32 %0, 2, !dbg !9442
  %3 = icmp ult i32 %2, 9, !dbg !9442
  br i1 %3, label %5, label %4, !dbg !9442

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #21, !dbg !9443
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.121, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9443
  unreachable, !dbg !9443

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !9442
  %7 = lshr i16 433, %6, !dbg !9442
  %8 = and i16 %7, 1, !dbg !9442
  %9 = icmp eq i16 %8, 0, !dbg !9442
  br i1 %9, label %4, label %10, !dbg !9442

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !9442
  %12 = load i32, i32* %11, align 4, !dbg !9442
  ret i32 %12, !dbg !9453
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !9454 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9459, metadata !DIExpression()), !dbg !9462
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #20, !dbg !9463
  call void @llvm.dbg.value(metadata i32 %2, metadata !9461, metadata !DIExpression()), !dbg !9462
  %3 = icmp eq i32 %2, -1, !dbg !9464
  br i1 %3, label %4, label %5, !dbg !9466

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #21, !dbg !9467
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.121, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9467
  unreachable, !dbg !9467

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #20, !dbg !9472
  call void @llvm.dbg.value(metadata i32 %6, metadata !9460, metadata !DIExpression()), !dbg !9462
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !9473

7:                                                ; preds = %5
  br label %10, !dbg !9474

8:                                                ; preds = %5
  br label %10, !dbg !9478

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #21, !dbg !9481
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.121, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.122, i32 0, i32 0)) #23, !dbg !9481
  unreachable, !dbg !9481

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !9486
  ret i32 %11, !dbg !9487
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !9488 {
  %1 = tail call i32 @NOR_init() #20, !dbg !9489
  ret i32 0, !dbg !9490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #8 !dbg !9491 {
  ret i32 0, !dbg !9492
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9497, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.value(metadata i32 %1, metadata !9498, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.value(metadata i32 0, metadata !9501, metadata !DIExpression()), !dbg !9502
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !9503

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !9504
  %5 = icmp eq i32 %4, 0, !dbg !9508
  br i1 %5, label %12, label %22, !dbg !9509

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !9510
  %8 = icmp eq i32 %7, 0, !dbg !9514
  br i1 %8, label %12, label %22, !dbg !9515

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !9516
  %11 = icmp eq i32 %10, 0, !dbg !9520
  br i1 %11, label %12, label %22, !dbg !9521

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !9522
  call void @llvm.dbg.value(metadata i32 %13, metadata !9501, metadata !DIExpression()), !dbg !9502
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #20, !dbg !9523
  call void @llvm.dbg.value(metadata i32 %14, metadata !9500, metadata !DIExpression()), !dbg !9502
  %15 = icmp eq i32 %14, -1, !dbg !9524
  br i1 %15, label %22, label %16, !dbg !9526

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !9527
  call void @llvm.dbg.value(metadata i32 %17, metadata !9500, metadata !DIExpression()), !dbg !9502
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #20, !dbg !9528
  call void @llvm.dbg.value(metadata i32 %18, metadata !9499, metadata !DIExpression()), !dbg !9502
  %19 = icmp eq i32 %18, 0, !dbg !9529
  br i1 %19, label %22, label %20, !dbg !9531

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #20, !dbg !9532
  br label %22, !dbg !9534

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !9502
  ret i32 %23, !dbg !9535
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !9536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9540, metadata !DIExpression()), !dbg !9545
  call void @llvm.dbg.value(metadata i8* %1, metadata !9541, metadata !DIExpression()), !dbg !9545
  call void @llvm.dbg.value(metadata i32 %2, metadata !9542, metadata !DIExpression()), !dbg !9545
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9543, metadata !DIExpression()), !dbg !9545
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #20, !dbg !9546
  call void @llvm.dbg.value(metadata i32 %4, metadata !9544, metadata !DIExpression()), !dbg !9545
  %5 = icmp eq i32 %4, 0, !dbg !9547
  br i1 %5, label %8, label %6, !dbg !9549

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #20, !dbg !9550
  br label %8, !dbg !9552

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !9545
  ret i32 %9, !dbg !9553
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !9554 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9558, metadata !DIExpression()), !dbg !9563
  call void @llvm.dbg.value(metadata i8* %1, metadata !9559, metadata !DIExpression()), !dbg !9563
  call void @llvm.dbg.value(metadata i32 %2, metadata !9560, metadata !DIExpression()), !dbg !9563
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9561, metadata !DIExpression()), !dbg !9563
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #20, !dbg !9564
  call void @llvm.dbg.value(metadata i32 %4, metadata !9562, metadata !DIExpression()), !dbg !9563
  %5 = icmp eq i32 %4, 0, !dbg !9565
  br i1 %5, label %8, label %6, !dbg !9567

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #20, !dbg !9568
  br label %8, !dbg !9570

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !9563
  ret i32 %9, !dbg !9571
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 section ".ram_code" !dbg !9572 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9576, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata i32 %1, metadata !9577, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata i8* %0, metadata !9578, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata i32 0, metadata !9579, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata i32 0, metadata !9580, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata i32 0, metadata !9581, metadata !DIExpression()), !dbg !9582
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9583
  %4 = bitcast i8* %3 to %struct.vdma_config_t**, !dbg !9583
  %5 = load %struct.vdma_config_t*, %struct.vdma_config_t** %4, align 4, !dbg !9583
  %6 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 0, i32 1, !dbg !9584
  %7 = load i32, i32* %6, align 4, !dbg !9584
  call void @llvm.dbg.value(metadata i32 %7, metadata !9581, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata i32 0, metadata !9580, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata i32 0, metadata !9579, metadata !DIExpression()), !dbg !9582
  %8 = icmp ugt i32 %7, %1, !dbg !9585
  br i1 %8, label %23, label %9, !dbg !9586

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !9587
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9581, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata i32 %12, metadata !9580, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata i32 %13, metadata !9579, metadata !DIExpression()), !dbg !9582
  %14 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %12, i32 0, !dbg !9589
  %15 = load i32, i32* %14, align 4, !dbg !9589
  %16 = mul i32 %15, %10, !dbg !9590
  %17 = add i32 %16, %13, !dbg !9591
  call void @llvm.dbg.value(metadata i32 %17, metadata !9579, metadata !DIExpression()), !dbg !9582
  %18 = add i32 %12, 1, !dbg !9592
  call void @llvm.dbg.value(metadata i32 %18, metadata !9580, metadata !DIExpression()), !dbg !9582
  %19 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %18, i32 1, !dbg !9593
  %20 = load i32, i32* %19, align 4, !dbg !9593
  %21 = add i32 %20, %11, !dbg !9594
  call void @llvm.dbg.value(metadata i32 %21, metadata !9581, metadata !DIExpression()), !dbg !9582
  %22 = icmp ugt i32 %21, %1, !dbg !9585
  br i1 %22, label %23, label %9, !dbg !9586, !llvm.loop !9595

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !9597
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !9582
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !9582
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !9582
  call void @llvm.dbg.value(metadata i8* %0, metadata !9578, metadata !DIExpression()), !dbg !9582
  %28 = sub i32 %1, %27, !dbg !9598
  %29 = add i32 %28, %24, !dbg !9599
  %30 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %26, i32 0, !dbg !9600
  %31 = load i32, i32* %30, align 4, !dbg !9600
  %32 = mul i32 %29, %31, !dbg !9601
  %33 = add i32 %32, %25, !dbg !9602
  call void @llvm.dbg.value(metadata i32 %33, metadata !9579, metadata !DIExpression()), !dbg !9582
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9603
  %35 = bitcast i8* %34 to i8**, !dbg !9603
  %36 = load i8*, i8** %35, align 4, !dbg !9603
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !9604
  ret i8* %37, !dbg !9605
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !9606 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9608, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.value(metadata i32 %1, metadata !9609, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.value(metadata i32 %2, metadata !9610, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.value(metadata i8* %0, metadata !9611, metadata !DIExpression()), !dbg !9612
  %4 = icmp eq i32 %2, 0, !dbg !9613
  br i1 %4, label %6, label %5, !dbg !9616

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !9617
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.137, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.138, i32 0, i32 0)) #23, !dbg !9617
  unreachable, !dbg !9617

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !9611, metadata !DIExpression()), !dbg !9612
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #20, !dbg !9619
  %8 = inttoptr i32 %7 to i8*, !dbg !9620
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9621
  %10 = bitcast i8* %9 to i8**, !dbg !9621
  store i8* %8, i8** %10, align 4, !dbg !9622
  ret i8* %8, !dbg !9623
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #12 section ".ram_code" !dbg !1846 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1850, metadata !DIExpression()), !dbg !9624
  call void @llvm.dbg.value(metadata i32 %1, metadata !1851, metadata !DIExpression()), !dbg !9624
  call void @llvm.dbg.value(metadata i8* %0, metadata !1852, metadata !DIExpression()), !dbg !9624
  call void @llvm.dbg.value(metadata i32 0, metadata !1897, metadata !DIExpression()), !dbg !9624
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9625
  %4 = bitcast i8* %3 to [8 x [2 x %struct.vdma_config_t]]*, !dbg !9625
  %5 = and i32 %1, 7, !dbg !9627
  %6 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !9628
  %7 = load i32, i32* %6, align 4, !dbg !9628
  %8 = icmp eq i32 %7, -1, !dbg !9629
  br i1 %8, label %62, label %9, !dbg !9630

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !9631
  br i1 %10, label %54, label %11, !dbg !9634

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !9635
  %13 = load i32, i32* %12, align 4, !dbg !9635
  %14 = icmp eq i32 %13, -1, !dbg !9638
  br i1 %14, label %44, label %15, !dbg !9639

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !9640
  br i1 %16, label %35, label %17, !dbg !9643

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !9644
  %19 = add i32 %18, 1, !dbg !9644
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !9644
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !9646
  %21 = shl nuw nsw i32 1, %5, !dbg !9648
  %22 = and i32 %20, %21, !dbg !9649
  %23 = icmp eq i32 %22, 0, !dbg !9649
  br i1 %23, label %30, label %24, !dbg !9650

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !9651
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #20, !dbg !9653
  %26 = ptrtoint i8* %25 to i32, !dbg !9654
  %27 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !9655
  store i32 %26, i32* %27, align 4, !dbg !9656
  call void @llvm.dbg.value(metadata i32 %26, metadata !1897, metadata !DIExpression()), !dbg !9624
  %28 = xor i32 %21, -1, !dbg !9657
  %29 = and i32 %20, %28, !dbg !9658
  br label %71, !dbg !9659

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !9660
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #20, !dbg !9662
  %32 = ptrtoint i8* %31 to i32, !dbg !9663
  %33 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !9664
  store i32 %32, i32* %33, align 4, !dbg !9665
  call void @llvm.dbg.value(metadata i32 %32, metadata !1897, metadata !DIExpression()), !dbg !9624
  %34 = or i32 %20, %21, !dbg !9666
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !9667
  %37 = add i32 %36, 1, !dbg !9667
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !9667
  %38 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !9669
  %39 = load i32, i32* %38, align 4, !dbg !9669
  call void @llvm.dbg.value(metadata i32 %39, metadata !1897, metadata !DIExpression()), !dbg !9624
  %40 = shl nuw nsw i32 1, %5, !dbg !9670
  %41 = xor i32 %40, -1, !dbg !9671
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !9672
  %43 = and i32 %42, %41, !dbg !9672
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !9673
  %46 = add i32 %45, 1, !dbg !9673
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !9673
  store i32 %1, i32* %12, align 4, !dbg !9675
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #20, !dbg !9676
  %48 = ptrtoint i8* %47 to i32, !dbg !9677
  %49 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !9678
  store i32 %48, i32* %49, align 4, !dbg !9679
  call void @llvm.dbg.value(metadata i32 %48, metadata !1897, metadata !DIExpression()), !dbg !9624
  %50 = shl nuw nsw i32 1, %5, !dbg !9680
  %51 = xor i32 %50, -1, !dbg !9681
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !9682
  %53 = and i32 %52, %51, !dbg !9682
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !9683
  %56 = add i32 %55, 1, !dbg !9683
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !9683
  %57 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !9685
  %58 = load i32, i32* %57, align 4, !dbg !9685
  call void @llvm.dbg.value(metadata i32 %58, metadata !1897, metadata !DIExpression()), !dbg !9624
  %59 = shl nuw nsw i32 1, %5, !dbg !9686
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !9687
  %61 = or i32 %60, %59, !dbg !9687
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !9688
  %64 = add i32 %63, 1, !dbg !9688
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !9688
  store i32 %1, i32* %6, align 4, !dbg !9690
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #20, !dbg !9691
  %66 = ptrtoint i8* %65 to i32, !dbg !9692
  %67 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !9693
  store i32 %66, i32* %67, align 4, !dbg !9694
  call void @llvm.dbg.value(metadata i32 %66, metadata !1897, metadata !DIExpression()), !dbg !9624
  %68 = shl nuw nsw i32 1, %5, !dbg !9695
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !9696
  %70 = or i32 %69, %68, !dbg !9696
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !9697
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !9697
  call void @llvm.dbg.value(metadata i32 %73, metadata !1897, metadata !DIExpression()), !dbg !9624
  ret i32 %73, !dbg !9698
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 section ".ram_code" !dbg !9699 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9701, metadata !DIExpression()), !dbg !9706
  call void @llvm.dbg.value(metadata i32 %1, metadata !9702, metadata !DIExpression()), !dbg !9706
  call void @llvm.dbg.value(metadata i8* %0, metadata !9703, metadata !DIExpression()), !dbg !9706
  call void @llvm.dbg.value(metadata i32 0, metadata !9704, metadata !DIExpression()), !dbg !9706
  call void @llvm.dbg.value(metadata i32 0, metadata !9705, metadata !DIExpression()), !dbg !9706
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9707
  %4 = bitcast i8* %3 to %struct.vdma_config_t**, !dbg !9707
  %5 = load %struct.vdma_config_t*, %struct.vdma_config_t** %4, align 4, !dbg !9707
  %6 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 0, i32 1, !dbg !9708
  %7 = load i32, i32* %6, align 4, !dbg !9708
  call void @llvm.dbg.value(metadata i32 %7, metadata !9705, metadata !DIExpression()), !dbg !9706
  call void @llvm.dbg.value(metadata i32 0, metadata !9704, metadata !DIExpression()), !dbg !9706
  %8 = icmp ugt i32 %7, %1, !dbg !9709
  br i1 %8, label %17, label %9, !dbg !9710

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9705, metadata !DIExpression()), !dbg !9706
  call void @llvm.dbg.value(metadata i32 %11, metadata !9704, metadata !DIExpression()), !dbg !9706
  %12 = add i32 %11, 1, !dbg !9711
  call void @llvm.dbg.value(metadata i32 %12, metadata !9704, metadata !DIExpression()), !dbg !9706
  %13 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %12, i32 1, !dbg !9713
  %14 = load i32, i32* %13, align 4, !dbg !9713
  %15 = add i32 %14, %10, !dbg !9714
  call void @llvm.dbg.value(metadata i32 %15, metadata !9705, metadata !DIExpression()), !dbg !9706
  %16 = icmp ugt i32 %15, %1, !dbg !9709
  br i1 %16, label %17, label %9, !dbg !9710, !llvm.loop !9715

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !9706
  %19 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %18, i32 0, !dbg !9717
  %20 = load i32, i32* %19, align 4, !dbg !9717
  ret i32 %20, !dbg !9718
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 section ".ram_code" !dbg !9719 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9721, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i32 %1, metadata !9722, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i8* %0, metadata !9723, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i32 0, metadata !9724, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i32 0, metadata !9725, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i32 0, metadata !9726, metadata !DIExpression()), !dbg !9727
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9728
  %4 = bitcast i8* %3 to %struct.vdma_config_t**, !dbg !9728
  %5 = load %struct.vdma_config_t*, %struct.vdma_config_t** %4, align 4, !dbg !9728
  %6 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 0, i32 1, !dbg !9729
  %7 = load i32, i32* %6, align 4, !dbg !9729
  %8 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 0, i32 0, !dbg !9730
  %9 = load i32, i32* %8, align 4, !dbg !9730
  %10 = mul i32 %9, %7, !dbg !9731
  call void @llvm.dbg.value(metadata i32 %10, metadata !9725, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i32 0, metadata !9726, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i32 0, metadata !9724, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i32 %1, metadata !9722, metadata !DIExpression()), !dbg !9727
  %11 = icmp ult i32 %10, %1, !dbg !9732
  br i1 %11, label %12, label %30, !dbg !9733

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !9734
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !9726, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i32 %16, metadata !9725, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i32 %17, metadata !9724, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i32 %18, metadata !9722, metadata !DIExpression()), !dbg !9727
  %19 = icmp eq i32 %14, 0, !dbg !9733
  br i1 %19, label %36, label %20, !dbg !9735

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !9736
  call void @llvm.dbg.value(metadata i32 %21, metadata !9726, metadata !DIExpression()), !dbg !9727
  %22 = sub i32 %18, %16, !dbg !9738
  call void @llvm.dbg.value(metadata i32 %22, metadata !9722, metadata !DIExpression()), !dbg !9727
  %23 = add i32 %17, 1, !dbg !9739
  call void @llvm.dbg.value(metadata i32 %23, metadata !9724, metadata !DIExpression()), !dbg !9727
  %24 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %23, i32 1, !dbg !9740
  %25 = load i32, i32* %24, align 4, !dbg !9740
  %26 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %23, i32 0, !dbg !9741
  %27 = load i32, i32* %26, align 4, !dbg !9741
  %28 = mul i32 %27, %25, !dbg !9742
  call void @llvm.dbg.value(metadata i32 %28, metadata !9725, metadata !DIExpression()), !dbg !9727
  %29 = icmp ugt i32 %22, %28, !dbg !9732
  br i1 %29, label %12, label %30, !dbg !9733, !llvm.loop !9743

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !9745
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !9727
  %34 = udiv i32 %32, %31, !dbg !9748
  %35 = add i32 %34, %33, !dbg !9749
  call void @llvm.dbg.value(metadata i32 %35, metadata !9726, metadata !DIExpression()), !dbg !9727
  br label %36, !dbg !9750

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !9751
  call void @llvm.dbg.value(metadata i32 %37, metadata !9726, metadata !DIExpression()), !dbg !9727
  ret i32 %37, !dbg !9752
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #8 !dbg !9753 {
  ret i32 134217728, !dbg !9754
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #8 !dbg !9755 {
  ret i32 3932160, !dbg !9756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #8 !dbg !9757 {
  ret i32 0, !dbg !9758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #8 !dbg !9759 {
  ret i32 262144, !dbg !9760
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !9761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9763, metadata !DIExpression()), !dbg !9765
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #21, !dbg !9766
  call void @llvm.dbg.value(metadata i32 %2, metadata !9764, metadata !DIExpression()), !dbg !9765
  %3 = icmp eq i32 %2, 0, !dbg !9767
  br i1 %3, label %5, label %4, !dbg !9769

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #21, !dbg !9770
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.137, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.138, i32 0, i32 0)) #23, !dbg !9770
  unreachable, !dbg !9770

5:                                                ; preds = %1
  ret void, !dbg !9775
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !9776 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9780, metadata !DIExpression()), !dbg !9793
  call void @llvm.dbg.value(metadata i32 %1, metadata !9781, metadata !DIExpression()), !dbg !9793
  call void @llvm.dbg.value(metadata i8* %2, metadata !9782, metadata !DIExpression()), !dbg !9793
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !9794
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !9794
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !9783, metadata !DIExpression()), !dbg !9795
  %7 = bitcast i32* %5 to i8*, !dbg !9796
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9796
  call void @llvm.dbg.value(metadata i32* %5, metadata !9792, metadata !DIExpression(DW_OP_deref)), !dbg !9793
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #21, !dbg !9797
  call void @llvm.va_start(i8* nonnull %6), !dbg !9798
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !9799
  %10 = load i32, i32* %9, align 4, !dbg !9799
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !9799
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #21, !dbg !9799
  call void @llvm.va_end(i8* nonnull %6), !dbg !9800
  %13 = load i32, i32* %5, align 4, !dbg !9801
  call void @llvm.dbg.value(metadata i32 %13, metadata !9792, metadata !DIExpression()), !dbg !9793
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #21, !dbg !9802
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9803
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !9803
  ret void, !dbg !9803
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #18

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #18

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !9804 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9806, metadata !DIExpression()), !dbg !9811
  call void @llvm.dbg.value(metadata i32 %1, metadata !9807, metadata !DIExpression()), !dbg !9811
  call void @llvm.dbg.value(metadata i8* %2, metadata !9808, metadata !DIExpression()), !dbg !9811
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !9812
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !9812
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !9809, metadata !DIExpression()), !dbg !9813
  %7 = bitcast i32* %5 to i8*, !dbg !9814
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9814
  call void @llvm.dbg.value(metadata i32* %5, metadata !9810, metadata !DIExpression(DW_OP_deref)), !dbg !9811
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #21, !dbg !9815
  call void @llvm.va_start(i8* nonnull %6), !dbg !9816
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !9817
  %10 = load i32, i32* %9, align 4, !dbg !9817
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !9817
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #21, !dbg !9817
  call void @llvm.va_end(i8* nonnull %6), !dbg !9818
  %13 = load i32, i32* %5, align 4, !dbg !9819
  call void @llvm.dbg.value(metadata i32 %13, metadata !9810, metadata !DIExpression()), !dbg !9811
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #21, !dbg !9820
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9821
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !9821
  ret void, !dbg !9821
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !9822 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9824, metadata !DIExpression()), !dbg !9829
  call void @llvm.dbg.value(metadata i32 %1, metadata !9825, metadata !DIExpression()), !dbg !9829
  call void @llvm.dbg.value(metadata i8* %2, metadata !9826, metadata !DIExpression()), !dbg !9829
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !9830
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !9830
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !9827, metadata !DIExpression()), !dbg !9831
  %7 = bitcast i32* %5 to i8*, !dbg !9832
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9832
  call void @llvm.dbg.value(metadata i32* %5, metadata !9828, metadata !DIExpression(DW_OP_deref)), !dbg !9829
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #21, !dbg !9833
  call void @llvm.va_start(i8* nonnull %6), !dbg !9834
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !9835
  %10 = load i32, i32* %9, align 4, !dbg !9835
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !9835
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #21, !dbg !9835
  call void @llvm.va_end(i8* nonnull %6), !dbg !9836
  %13 = load i32, i32* %5, align 4, !dbg !9837
  call void @llvm.dbg.value(metadata i32 %13, metadata !9828, metadata !DIExpression()), !dbg !9829
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #21, !dbg !9838
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !9839
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !9839
  ret void, !dbg !9839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #8 !dbg !9840 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9846, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata i32 %1, metadata !9847, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata i8* %2, metadata !9848, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata i8* %3, metadata !9849, metadata !DIExpression()), !dbg !9851
  call void @llvm.dbg.value(metadata i32 %4, metadata !9850, metadata !DIExpression()), !dbg !9851
  ret void, !dbg !9852
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !9853 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9855, metadata !DIExpression()), !dbg !9857
  %2 = shl i32 %0, 20, !dbg !9858
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !9859
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !9860
  store volatile i32 %2, i32* %4, align 4, !dbg !9861
  %5 = load volatile i32, i32* %4, align 4, !dbg !9862
  %6 = or i32 %5, 65536, !dbg !9863
  store volatile i32 %6, i32* %4, align 4, !dbg !9864
  br label %7, !dbg !9865

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !9866
  %9 = and i32 %8, 1, !dbg !9867
  %10 = icmp eq i32 %9, 0, !dbg !9868
  br i1 %10, label %7, label %11, !dbg !9865, !llvm.loop !9869

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !9871
  %13 = lshr i32 %12, 8, !dbg !9872
  %14 = and i32 %13, 255, !dbg !9872
  call void @llvm.dbg.value(metadata i32 %14, metadata !9856, metadata !DIExpression()), !dbg !9857
  ret i32 %14, !dbg !9873
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 section ".tcm_code" !dbg !9874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9878, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i32 %1, metadata !9879, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i32 %1, metadata !9879, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !9880
  %3 = shl i32 %1, 24, !dbg !9881
  %4 = shl i32 %0, 20, !dbg !9882
  %5 = or i32 %4, %3, !dbg !9883
  %6 = or i32 %5, 131072, !dbg !9883
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !9884
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !9885
  store volatile i32 %6, i32* %8, align 4, !dbg !9886
  %9 = load volatile i32, i32* %8, align 4, !dbg !9887
  %10 = or i32 %9, 65536, !dbg !9888
  store volatile i32 %10, i32* %8, align 4, !dbg !9889
  br label %11, !dbg !9890

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !9891
  %13 = and i32 %12, 1, !dbg !9892
  %14 = icmp eq i32 %13, 0, !dbg !9893
  br i1 %14, label %11, label %15, !dbg !9890, !llvm.loop !9894

15:                                               ; preds = %11
  ret void, !dbg !9896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #5 section ".tcm_code" !dbg !9897 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !9898
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !9899
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !9900
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !9901
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !9902
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !9903
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !9904
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !9905
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !9906
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !9907
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !9908
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !9909
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !9910
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !9911
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !9912
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !9913
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !9914
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !9915
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !9916
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !9917
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !9918
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !9919
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !9920
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !9921
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !9922
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !9923
  ret void, !dbg !9924
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #10 section ".tcm_code" !dbg !9925 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !9928
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !9929
  store volatile i32 21553, i32* %2, align 4, !dbg !9930
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !9931
  store volatile i32 20489, i32* %3, align 4, !dbg !9932
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !9933
  store volatile i32 20550, i32* %4, align 4, !dbg !9934
  ret i32 0, !dbg !9935
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #10 section ".tcm_code" !dbg !9936 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !9940, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.value(metadata i32 0, metadata !9938, metadata !DIExpression()), !dbg !9945
  call void @llvm.dbg.value(metadata i32 16384, metadata !9939, metadata !DIExpression()), !dbg !9945
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !9946
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !9947
  store volatile i32 0, i32* %2, align 4, !dbg !9948
  call void @llvm.dbg.value(metadata i32 0, metadata !9942, metadata !DIExpression()), !dbg !9945
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !9942, metadata !DIExpression()), !dbg !9945
  br label %5, !dbg !9949

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9942, metadata !DIExpression()), !dbg !9945
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !9941, metadata !DIExpression()), !dbg !9945
  br label %8, !dbg !9951

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9941, metadata !DIExpression()), !dbg !9945
  call void @llvm.dbg.value(metadata i32 0, metadata !9943, metadata !DIExpression()), !dbg !9945
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !9955

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !9943, metadata !DIExpression()), !dbg !9945
  %12 = icmp eq i32 %30, 2, !dbg !9959
  br i1 %12, label %31, label %13, !dbg !9955, !llvm.loop !9961

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9943, metadata !DIExpression()), !dbg !9945
  store volatile i32 0, i32* %2, align 4, !dbg !9963
  store volatile i32 63, i32* %3, align 4, !dbg !9965
  %15 = load i32, i32* %10, align 4, !dbg !9966
  %16 = shl i32 %15, 16, !dbg !9967
  %17 = shl nuw nsw i32 %14, 13, !dbg !9968
  %18 = or i32 %17, %7, !dbg !9969
  %19 = or i32 %18, %16, !dbg !9970
  store volatile i32 %19, i32* %2, align 4, !dbg !9971
  %20 = load volatile i32, i32* %2, align 4, !dbg !9972
  %21 = or i32 %20, 805, !dbg !9972
  store volatile i32 %21, i32* %2, align 4, !dbg !9972
  br label %22, !dbg !9973

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !9974
  %24 = and i32 %23, 2, !dbg !9975
  %25 = icmp eq i32 %24, 0, !dbg !9976
  br i1 %25, label %22, label %26, !dbg !9973, !llvm.loop !9977

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !9979
  %28 = and i32 %27, 1, !dbg !9981
  %29 = icmp eq i32 %28, 0, !dbg !9982
  %30 = add nuw nsw i32 %14, 1, !dbg !9983
  call void @llvm.dbg.value(metadata i32 %30, metadata !9943, metadata !DIExpression()), !dbg !9945
  br i1 %29, label %11, label %37, !dbg !9984

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !9985
  call void @llvm.dbg.value(metadata i32 %32, metadata !9941, metadata !DIExpression()), !dbg !9945
  %33 = icmp eq i32 %32, 2, !dbg !9986
  br i1 %33, label %34, label %8, !dbg !9951, !llvm.loop !9987

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !9989
  call void @llvm.dbg.value(metadata i32 %35, metadata !9942, metadata !DIExpression()), !dbg !9945
  %36 = icmp eq i32 %35, 2, !dbg !9990
  br i1 %36, label %37, label %5, !dbg !9949, !llvm.loop !9991

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !9945
  store volatile i32 0, i32* %2, align 4, !dbg !9945
  ret i32 %38, !dbg !9993
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #10 section ".tcm_code" !dbg !9994 {
  %1 = tail call i32 @TestCase_MBIST() #20, !dbg !9995
  %2 = icmp ne i32 %1, 0, !dbg !9997
  %3 = sext i1 %2 to i32, !dbg !9998
  ret i32 %3, !dbg !9999
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #10 section ".tcm_code" !dbg !10000 {
  call void @llvm.dbg.value(metadata i32 31, metadata !10002, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata i32 0, metadata !10003, metadata !DIExpression()), !dbg !10004
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10005
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !10006
  store volatile i32 0, i32* %2, align 4, !dbg !10007
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10008
  store volatile i32 0, i32* %3, align 4, !dbg !10009
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10010
  store volatile i32 0, i32* %4, align 4, !dbg !10011
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10012
  store volatile i32 0, i32* %5, align 4, !dbg !10013
  call void @llvm.dbg.value(metadata i32 31, metadata !10002, metadata !DIExpression()), !dbg !10004
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10014
  store volatile i32 522133279, i32* %6, align 4, !dbg !10018
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10019
  store volatile i32 522133279, i32* %7, align 4, !dbg !10020
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #20, !dbg !10021
  %9 = icmp eq i32 %8, 0, !dbg !10023
  call void @llvm.dbg.value(metadata i32 31, metadata !10002, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10004
  br i1 %9, label %36, label %10, !dbg !10024

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10002, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata i32 %11, metadata !10002, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10004
  call void @llvm.dbg.value(metadata i32 %11, metadata !10002, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10004
  %12 = icmp eq i32 %11, 0, !dbg !10025
  br i1 %12, label %26, label %13, !dbg !10026, !llvm.loop !10027

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !10029
  call void @llvm.dbg.value(metadata i32 %14, metadata !10002, metadata !DIExpression()), !dbg !10004
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10030
  %16 = shl i32 %14, 24, !dbg !10031
  %17 = shl i32 %14, 16, !dbg !10032
  %18 = shl i32 %14, 8, !dbg !10033
  %19 = or i32 %17, %14, !dbg !10034
  %20 = or i32 %19, %16, !dbg !10035
  %21 = or i32 %20, %18, !dbg !10036
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !10014
  store volatile i32 %21, i32* %22, align 4, !dbg !10018
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !10019
  store volatile i32 %21, i32* %23, align 4, !dbg !10020
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #20, !dbg !10021
  %25 = icmp eq i32 %24, 0, !dbg !10023
  call void @llvm.dbg.value(metadata i32 %14, metadata !10002, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10004
  br i1 %25, label %36, label %10, !dbg !10024

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !10003, metadata !DIExpression()), !dbg !10004
  %28 = shl nuw nsw i32 %27, 16, !dbg !10037
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10043
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !10044
  store volatile i32 %28, i32* %30, align 4, !dbg !10045
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #20, !dbg !10046
  %32 = icmp eq i32 %31, 0, !dbg !10048
  call void @llvm.dbg.value(metadata i32 %27, metadata !10003, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10004
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !10049
  call void @llvm.dbg.value(metadata i32 %33, metadata !10003, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata i32 %27, metadata !10003, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10004
  br i1 %35, label %36, label %26, !dbg !10049, !llvm.loop !10050

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !10053
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #10 section ".tcm_code" !dbg !10054 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !10055
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10056
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !10057
  store volatile i32 1, i32* %2, align 4, !dbg !10058
  br label %3, !dbg !10059

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10060
  %5 = and i32 %4, 2, !dbg !10061
  %6 = icmp eq i32 %5, 0, !dbg !10061
  br i1 %6, label %3, label %7, !dbg !10059, !llvm.loop !10062

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !10064
  br label %8, !dbg !10065

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !10066
  %10 = and i32 %9, 2, !dbg !10067
  %11 = icmp eq i32 %10, 0, !dbg !10067
  br i1 %11, label %12, label %8, !dbg !10065, !llvm.loop !10068

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !10070
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !10071
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !10072

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !10073
  %17 = and i32 %16, 1, !dbg !10074
  %18 = icmp eq i32 %17, 0, !dbg !10075
  br i1 %18, label %15, label %19, !dbg !10072, !llvm.loop !10076

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #20, !dbg !10078
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #20, !dbg !10079
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !10080

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !10081
  %24 = and i32 %23, 1, !dbg !10082
  %25 = icmp eq i32 %24, 0, !dbg !10083
  br i1 %25, label %22, label %26, !dbg !10080, !llvm.loop !10084

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !10086
  %28 = icmp eq i32 %27, 9507, !dbg !10088
  br i1 %28, label %29, label %37, !dbg !10089

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !10090
  %31 = and i32 %30, 15, !dbg !10093
  %32 = icmp eq i32 %31, 2, !dbg !10094
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !10095
  %34 = and i32 %33, -128, !dbg !10095
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !10095
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !10095
  br label %37, !dbg !10096

37:                                               ; preds = %29, %26
  ret void, !dbg !10096
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #10 section ".tcm_code" !dbg !10097 {
  tail call void @EMI_PowerOn_Init() #20, !dbg !10100
  tail call void @__EMI_SetRegValfromCMCP() #20, !dbg !10101
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #20, !dbg !10102
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !10103
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #20, !dbg !10104
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !10105
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #20, !dbg !10106
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !10107
  ret i8 0, !dbg !10108
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #10 section ".tcm_code" !dbg !10109 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !10110
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10111
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !10112
  store volatile i32 %1, i32* %3, align 4, !dbg !10113
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !10114
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !10115
  store volatile i32 %4, i32* %5, align 4, !dbg !10116
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !10117
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !10118
  store volatile i32 %6, i32* %7, align 4, !dbg !10119
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !10120
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !10121
  store volatile i32 %8, i32* %9, align 4, !dbg !10122
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !10123
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !10124
  store volatile i32 %10, i32* %11, align 4, !dbg !10125
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !10126
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !10127
  store volatile i32 %12, i32* %13, align 4, !dbg !10128
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !10129
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !10130
  store volatile i32 %14, i32* %15, align 4, !dbg !10131
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !10132
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !10133
  store volatile i32 %16, i32* %17, align 4, !dbg !10134
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !10135
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !10136
  store volatile i32 %18, i32* %19, align 4, !dbg !10137
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !10138
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !10139
  store volatile i32 %20, i32* %21, align 4, !dbg !10140
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !10141
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !10142
  store volatile i32 %22, i32* %23, align 4, !dbg !10143
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !10144
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !10145
  store volatile i32 %24, i32* %25, align 4, !dbg !10146
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !10147
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !10148
  store volatile i32 %26, i32* %27, align 4, !dbg !10149
  tail call void @__EMI_EnableDataAutoTracking() #20, !dbg !10150
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10151
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !10152
  store volatile i32 806289408, i32* %29, align 4, !dbg !10153
  br label %30, !dbg !10154

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !10155
  %32 = and i32 %31, 128, !dbg !10156
  %33 = icmp eq i32 %32, 0, !dbg !10156
  br i1 %33, label %30, label %34, !dbg !10154, !llvm.loop !10157

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !10159
  br label %35, !dbg !10160

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !10161
  %37 = and i32 %36, 128, !dbg !10162
  %38 = icmp eq i32 %37, 0, !dbg !10162
  br i1 %38, label %39, label %35, !dbg !10160, !llvm.loop !10163

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !10165
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #20, !dbg !10166
  ret i8 0, !dbg !10167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #10 section ".tcm_code" !dbg !10168 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10169
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !10170
  %3 = load volatile i32, i32* %2, align 4, !dbg !10170
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !10171
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !10172
  %5 = load volatile i32, i32* %4, align 4, !dbg !10172
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !10173
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !10174
  %7 = load volatile i32, i32* %6, align 4, !dbg !10174
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !10175
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10176
  %9 = load volatile i32, i32* %8, align 4, !dbg !10176
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !10177
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10178
  %11 = load volatile i32, i32* %10, align 4, !dbg !10178
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !10179
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10180
  %13 = load volatile i32, i32* %12, align 4, !dbg !10180
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !10181
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !10182
  %15 = load volatile i32, i32* %14, align 4, !dbg !10182
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !10183
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !10184
  %17 = load volatile i32, i32* %16, align 4, !dbg !10184
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !10185
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !10186
  %19 = load volatile i32, i32* %18, align 4, !dbg !10186
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !10187
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !10188
  %21 = load volatile i32, i32* %20, align 4, !dbg !10188
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !10189
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !10190
  %23 = load volatile i32, i32* %22, align 4, !dbg !10190
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !10191
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10192
  %25 = load volatile i32, i32* %24, align 4, !dbg !10192
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !10193
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !10194
  %27 = load volatile i32, i32* %26, align 4, !dbg !10194
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !10195
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !10196
  %29 = load volatile i32, i32* %28, align 4, !dbg !10196
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !10197
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10198
  %31 = load volatile i32, i32* %30, align 4, !dbg !10198
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !10199
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10200
  %33 = load volatile i32, i32* %32, align 4, !dbg !10200
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !10201
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10202
  %35 = load volatile i32, i32* %34, align 4, !dbg !10202
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !10203
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !10204
  %37 = load volatile i32, i32* %36, align 4, !dbg !10204
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !10205
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !10206
  %39 = load volatile i32, i32* %38, align 4, !dbg !10206
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !10207
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !10208
  %41 = load volatile i32, i32* %40, align 4, !dbg !10208
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !10209
  ret void, !dbg !10210
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #10 section ".tcm_code" !dbg !10211 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !10212

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10213
  %5 = and i32 %4, 17, !dbg !10214
  %6 = icmp eq i32 %5, 17, !dbg !10215
  br i1 %6, label %7, label %3, !dbg !10212, !llvm.loop !10216

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !10218
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !10219
  store volatile i32 %8, i32* %9, align 4, !dbg !10220
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !10221
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !10222
  store volatile i32 %10, i32* %11, align 4, !dbg !10223
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !10224
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !10225
  store volatile i32 %12, i32* %13, align 4, !dbg !10226
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !10227
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10228
  store volatile i32 %14, i32* %15, align 4, !dbg !10229
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !10230
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10231
  store volatile i32 %16, i32* %17, align 4, !dbg !10232
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !10233
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10234
  store volatile i32 %18, i32* %19, align 4, !dbg !10235
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !10236
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !10237
  store volatile i32 %20, i32* %21, align 4, !dbg !10238
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !10239
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !10240
  store volatile i32 %22, i32* %23, align 4, !dbg !10241
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !10242
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10243
  store volatile i32 %24, i32* %25, align 4, !dbg !10244
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !10245
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !10246
  store volatile i32 %26, i32* %27, align 4, !dbg !10247
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !10248
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !10249
  store volatile i32 %28, i32* %29, align 4, !dbg !10250
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !10251
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !10252
  store volatile i32 %30, i32* %31, align 4, !dbg !10253
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !10254
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !10255
  store volatile i32 %32, i32* %33, align 4, !dbg !10256
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !10257
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !10258
  store volatile i32 %34, i32* %35, align 4, !dbg !10259
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !10260
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10261
  store volatile i32 %36, i32* %37, align 4, !dbg !10262
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !10263
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10264
  store volatile i32 %38, i32* %39, align 4, !dbg !10265
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !10266
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10267
  store volatile i32 %40, i32* %41, align 4, !dbg !10268
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !10269
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !10270
  store volatile i32 %42, i32* %43, align 4, !dbg !10271
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !10272
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !10273
  store volatile i32 %44, i32* %45, align 4, !dbg !10274
  ret void, !dbg !10275
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #10 section ".tcm_code" !dbg !10276 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10277
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10278
  %3 = load volatile i32, i32* %2, align 4, !dbg !10278
  %4 = and i32 %3, -2097185, !dbg !10279
  store volatile i32 %4, i32* %2, align 4, !dbg !10280
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !10281
  store volatile i32 1, i32* %5, align 4, !dbg !10282
  br label %6, !dbg !10283

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !10284
  %8 = and i32 %7, 2, !dbg !10285
  %9 = icmp eq i32 %8, 0, !dbg !10285
  br i1 %9, label %6, label %10, !dbg !10283, !llvm.loop !10286

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !10288
  br label %11, !dbg !10289

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !10290
  %13 = and i32 %12, 2, !dbg !10291
  %14 = icmp eq i32 %13, 0, !dbg !10291
  br i1 %14, label %15, label %11, !dbg !10289, !llvm.loop !10292

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #20, !dbg !10294
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10295
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !10296
  store volatile i32 806289408, i32* %17, align 4, !dbg !10297
  br label %18, !dbg !10298

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !10299
  %20 = and i32 %19, 128, !dbg !10300
  %21 = icmp eq i32 %20, 0, !dbg !10300
  br i1 %21, label %18, label %22, !dbg !10298, !llvm.loop !10301

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !10303
  br label %23, !dbg !10304

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !10305
  %25 = and i32 %24, 128, !dbg !10306
  %26 = icmp eq i32 %25, 0, !dbg !10306
  br i1 %26, label %27, label %23, !dbg !10304, !llvm.loop !10307

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !10309
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !10310
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !10311
  store volatile i32 %28, i32* %29, align 4, !dbg !10312
  ret void, !dbg !10313
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #10 section ".tcm_code" !dbg !10314 {
  tail call void @EMI_Setting_Save() #20, !dbg !10315
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !10316

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10317
  %5 = and i32 %4, 17, !dbg !10318
  %6 = icmp eq i32 %5, 17, !dbg !10319
  br i1 %6, label %7, label %3, !dbg !10316, !llvm.loop !10320

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !10322
  %9 = or i32 %8, 1792, !dbg !10323
  store volatile i32 %9, i32* %2, align 4, !dbg !10324
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !10325
  store volatile i32 -261685248, i32* %10, align 4, !dbg !10326
  br label %11, !dbg !10327

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !10328
  %13 = and i32 %12, 1, !dbg !10329
  %14 = icmp eq i32 %13, 0, !dbg !10330
  br i1 %14, label %11, label %15, !dbg !10327, !llvm.loop !10331

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !10333
  store volatile i32 0, i32* %16, align 4, !dbg !10334
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !10335

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !10336
  %20 = and i32 %19, 16, !dbg !10337
  %21 = icmp eq i32 %20, 0, !dbg !10337
  br i1 %21, label %18, label %22, !dbg !10335, !llvm.loop !10338

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10340
  %24 = load volatile i32, i32* %23, align 4, !dbg !10340
  %25 = or i32 %24, 2097184, !dbg !10341
  store volatile i32 %25, i32* %23, align 4, !dbg !10342
  ret void, !dbg !10343
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #7 section ".tcm_code" !dbg !10344 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10349, metadata !DIExpression()), !dbg !10351
  %3 = bitcast i32* %2 to i8*, !dbg !10352
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10352
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10350, metadata !DIExpression()), !dbg !10353
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !10354

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10355
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !10358
  store volatile i32 0, i32* %6, align 4, !dbg !10359
  store volatile i32 806289408, i32* %6, align 4, !dbg !10360
  br label %7, !dbg !10361

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !10362
  %9 = and i32 %8, 128, !dbg !10363
  %10 = icmp eq i32 %9, 0, !dbg !10363
  br i1 %10, label %7, label %11, !dbg !10361, !llvm.loop !10364

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !10366
  br label %12, !dbg !10367

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !10368
  %14 = and i32 %13, 128, !dbg !10369
  %15 = icmp eq i32 %14, 0, !dbg !10369
  br i1 %15, label %16, label %12, !dbg !10367, !llvm.loop !10370

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !10372
  store volatile i32 0, i32* %2, align 4, !dbg !10373
  %17 = load volatile i32, i32* %2, align 4, !dbg !10375
  %18 = icmp ult i32 %17, 255, !dbg !10377
  br i1 %18, label %19, label %25, !dbg !10378

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !10379
  %21 = add i32 %20, 1, !dbg !10379
  store volatile i32 %21, i32* %2, align 4, !dbg !10379
  %22 = load volatile i32, i32* %2, align 4, !dbg !10375
  %23 = icmp ult i32 %22, 255, !dbg !10377
  br i1 %23, label %19, label %25, !dbg !10378, !llvm.loop !10380

24:                                               ; preds = %1
  br label %25, !dbg !10382

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !10351
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10385
  ret i32 %26, !dbg !10385
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #10 section ".tcm_code" !dbg !10386 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10387
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !10388
  %3 = load volatile i32, i32* %2, align 4, !dbg !10388
  %4 = or i32 %3, 1792, !dbg !10389
  store volatile i32 %4, i32* %2, align 4, !dbg !10390
  ret void, !dbg !10391
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #10 section ".tcm_code" !dbg !10392 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10393
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !10394
  %3 = load volatile i32, i32* %2, align 4, !dbg !10394
  %4 = and i32 %3, -1793, !dbg !10395
  store volatile i32 %4, i32* %2, align 4, !dbg !10396
  ret void, !dbg !10397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #8 section ".tcm_code" !dbg !10398 {
  ret i1 false, !dbg !10399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #8 section ".tcm_code" !dbg !10400 {
  ret i1 false, !dbg !10401
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !10402 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #21, !dbg !10403
  ret void, !dbg !10406
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !10407 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #21, !dbg !10408
  ret void, !dbg !10411
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !10412 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #21, !dbg !10413
  ret void, !dbg !10416
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !10417 {
  tail call void @peri_26m_dcxo() #21, !dbg !10418
  ret void, !dbg !10421
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !10422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10426, metadata !DIExpression()), !dbg !10427
  %2 = trunc i32 %0 to i8, !dbg !10428
  tail call void @hal_uart_put_char(i32 noundef 2, i8 noundef zeroext %2) #21, !dbg !10429
  ret i32 %0, !dbg !10430
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #19 !dbg !10431 {
  tail call fastcc void @SystemClock_Config() #20, !dbg !10432
  tail call void @SystemCoreClockUpdate() #21, !dbg !10433
  tail call fastcc void @prvSetupHardware() #20, !dbg !10434
  tail call void asm sideeffect "cpsie i", "~{memory}"() #22, !dbg !10435, !srcloc !10438
  tail call void asm sideeffect "cpsie f", "~{memory}"() #22, !dbg !10439, !srcloc !10442
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.149, i32 0, i32 0)) #21, !dbg !10443
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.150, i32 0, i32 0)) #21, !dbg !10444
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.149, i32 0, i32 0)) #21, !dbg !10445
  tail call fastcc void @hal_gpt_interrupt_repeat_mode_example() #20, !dbg !10446
  br label %4, !dbg !10447

4:                                                ; preds = %0, %4
  br label %4, !dbg !10447, !llvm.loop !10448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !10450 {
  %1 = tail call i32 @hal_clock_init() #21, !dbg !10451
  ret void, !dbg !10452
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !10453 {
  tail call fastcc void @log_uart_init() #20, !dbg !10454
  %1 = tail call i32 @hal_flash_init() #21, !dbg !10455
  %2 = tail call i32 @hal_nvic_init() #21, !dbg !10456
  ret void, !dbg !10457
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @hal_gpt_interrupt_repeat_mode_example() unnamed_addr #0 !dbg !10458 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !10463
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #22, !dbg !10463
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i32 0, i32 0)) #21, !dbg !10464
  store i32 2, i32* @gpt_port, align 4, !dbg !10465
  call void @llvm.dbg.value(metadata i32 1000, metadata !10461, metadata !DIExpression()), !dbg !10466
  %4 = tail call i32 @hal_gpt_init(i32 noundef 2) #21, !dbg !10467
  call void @llvm.dbg.value(metadata i32 %4, metadata !10460, metadata !DIExpression()), !dbg !10466
  %5 = icmp eq i32 %4, 0, !dbg !10468
  br i1 %5, label %8, label %6, !dbg !10470

6:                                                ; preds = %0
  %7 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i32 0, i32 0), i32 noundef %4) #21, !dbg !10471
  br label %24, !dbg !10473

8:                                                ; preds = %0
  %9 = load i32, i32* @gpt_port, align 4, !dbg !10474
  %10 = tail call i32 @hal_gpt_register_callback(i32 noundef %9, void (i8*)* noundef nonnull @gpt_callback, i8* noundef null) #21, !dbg !10475
  call void @llvm.dbg.value(metadata i32 %10, metadata !10460, metadata !DIExpression()), !dbg !10466
  %11 = icmp eq i32 %10, 0, !dbg !10476
  br i1 %11, label %16, label %12, !dbg !10478

12:                                               ; preds = %8
  %13 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i32 0, i32 0), i32 noundef %10) #21, !dbg !10479
  %14 = load i32, i32* @gpt_port, align 4, !dbg !10481
  %15 = tail call i32 @hal_gpt_deinit(i32 noundef %14) #21, !dbg !10482
  br label %24, !dbg !10483

16:                                               ; preds = %8
  %17 = load i32, i32* @gpt_port, align 4, !dbg !10484
  %18 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef %17, i32 noundef 1000, i32 noundef 1) #21, !dbg !10485
  call void @llvm.dbg.value(metadata i32 %18, metadata !10460, metadata !DIExpression()), !dbg !10466
  %19 = icmp eq i32 %18, 0, !dbg !10486
  br i1 %19, label %22, label %20, !dbg !10488

20:                                               ; preds = %16
  %21 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.5, i32 0, i32 0), i32 noundef %18) #21, !dbg !10489
  br label %24, !dbg !10491

22:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32* %1, metadata !10462, metadata !DIExpression(DW_OP_deref)), !dbg !10466
  %23 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %1) #21, !dbg !10492
  br label %24, !dbg !10493

24:                                               ; preds = %22, %20, %12, %6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #22, !dbg !10493
  ret void, !dbg !10493
}

; Function Attrs: noinline nounwind optsize
define internal void @gpt_callback(i8* nocapture noundef readnone %0) #0 !dbg !2095 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2097, metadata !DIExpression()), !dbg !10494
  call void @llvm.dbg.value(metadata i32 0, metadata !2098, metadata !DIExpression()), !dbg !10494
  %2 = load i32, i32* @gpt_callback.timeout_times, align 4, !dbg !10495
  %3 = add i32 %2, 1, !dbg !10495
  store i32 %3, i32* @gpt_callback.timeout_times, align 4, !dbg !10495
  %4 = icmp ult i32 %3, 10, !dbg !10496
  br i1 %4, label %5, label %21, !dbg !10498

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @get_current_millisecond() #20, !dbg !10499
  %7 = load i32, i32* @gpt_callback.last_time, align 4, !dbg !10501
  call void @llvm.dbg.value(metadata i32 undef, metadata !2098, metadata !DIExpression()), !dbg !10494
  store i32 %6, i32* @gpt_callback.last_time, align 4, !dbg !10502
  %8 = add i32 %6, -1051, !dbg !10503
  %9 = sub i32 %8, %7, !dbg !10504
  %10 = icmp ult i32 %9, -101, !dbg !10504
  br i1 %10, label %11, label %36, !dbg !10504

11:                                               ; preds = %5
  %12 = load i32, i32* @gpt_port, align 4, !dbg !10506
  %13 = tail call i32 @hal_gpt_stop_timer(i32 noundef %12) #21, !dbg !10508
  %14 = load i32, i32* @gpt_port, align 4, !dbg !10509
  %15 = tail call i32 @hal_gpt_deinit(i32 noundef %14) #21, !dbg !10510
  %16 = load i32, i32* @gpt_callback.timeout_times, align 4, !dbg !10511
  %17 = tail call fastcc i32 @get_current_millisecond() #20, !dbg !10512, !range !10513
  %18 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i32 0, i32 0), i32 noundef %16, i32 noundef %17) #21, !dbg !10514
  %19 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i32 0, i32 0)) #21, !dbg !10515
  %20 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0)) #21, !dbg !10516
  br label %36, !dbg !10517

21:                                               ; preds = %1
  %22 = load i32, i32* @gpt_port, align 4, !dbg !10518
  %23 = tail call i32 @hal_gpt_stop_timer(i32 noundef %22) #21, !dbg !10520
  call void @llvm.dbg.value(metadata i32 %23, metadata !2099, metadata !DIExpression()), !dbg !10494
  %24 = icmp eq i32 %23, 0, !dbg !10521
  br i1 %24, label %27, label %25, !dbg !10523

25:                                               ; preds = %21
  %26 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9, i32 0, i32 0), i32 noundef %23) #21, !dbg !10524
  br label %36, !dbg !10526

27:                                               ; preds = %21
  %28 = load i32, i32* @gpt_port, align 4, !dbg !10527
  %29 = tail call i32 @hal_gpt_deinit(i32 noundef %28) #21, !dbg !10528
  call void @llvm.dbg.value(metadata i32 %29, metadata !2099, metadata !DIExpression()), !dbg !10494
  %30 = icmp eq i32 %29, 0, !dbg !10529
  br i1 %30, label %33, label %31, !dbg !10531

31:                                               ; preds = %27
  %32 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i32 0, i32 0), i32 noundef %29) #21, !dbg !10532
  br label %36, !dbg !10534

33:                                               ; preds = %27
  %34 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i32 0, i32 0)) #21, !dbg !10535
  %35 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i32 0, i32 0)) #21, !dbg !10536
  br label %36

36:                                               ; preds = %33, %5, %31, %25, %11
  ret void, !dbg !10537
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_current_millisecond() unnamed_addr #0 !dbg !10538 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !10545
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #22, !dbg !10545
  call void @llvm.dbg.value(metadata i32 0, metadata !10541, metadata !DIExpression()), !dbg !10546
  store i32 0, i32* %1, align 4, !dbg !10547
  call void @llvm.dbg.value(metadata i32* %1, metadata !10541, metadata !DIExpression(DW_OP_deref)), !dbg !10546
  %3 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %1) #21, !dbg !10548
  call void @llvm.dbg.value(metadata i32 %3, metadata !10540, metadata !DIExpression()), !dbg !10546
  %4 = icmp eq i32 %3, 0, !dbg !10549
  br i1 %4, label %7, label %5, !dbg !10551

5:                                                ; preds = %0
  %6 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0), i32 noundef %3) #21, !dbg !10552
  br label %16, !dbg !10554

7:                                                ; preds = %0
  %8 = load i32, i32* %1, align 4, !dbg !10555
  call void @llvm.dbg.value(metadata i32 %8, metadata !10541, metadata !DIExpression()), !dbg !10546
  %9 = lshr i32 %8, 15, !dbg !10556
  call void @llvm.dbg.value(metadata i32 %9, metadata !10543, metadata !DIExpression()), !dbg !10546
  %10 = and i32 %8, 32767, !dbg !10557
  %11 = mul nuw nsw i32 %10, 1000, !dbg !10558
  %12 = add nuw nsw i32 %11, 16384, !dbg !10559
  %13 = lshr i32 %12, 15, !dbg !10560
  call void @llvm.dbg.value(metadata i32 %13, metadata !10544, metadata !DIExpression()), !dbg !10546
  %14 = mul nuw nsw i32 %9, 1000, !dbg !10561
  %15 = add nuw nsw i32 %13, %14, !dbg !10562
  call void @llvm.dbg.value(metadata i32 %15, metadata !10542, metadata !DIExpression()), !dbg !10546
  br label %16, !dbg !10563

16:                                               ; preds = %7, %5
  %17 = phi i32 [ 0, %5 ], [ %15, %7 ], !dbg !10546
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #22, !dbg !10564
  ret i32 %17, !dbg !10564
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @log_uart_init() unnamed_addr #0 !dbg !10565 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !10575
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #22, !dbg !10575
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !10567, metadata !DIExpression()), !dbg !10576
  %3 = tail call i32 @hal_gpio_init(i32 noundef 0) #21, !dbg !10577
  %4 = tail call i32 @hal_gpio_init(i32 noundef 1) #21, !dbg !10578
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #21, !dbg !10579
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #21, !dbg !10580
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !10581
  store i32 9, i32* %7, align 4, !dbg !10582
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !10583
  store i32 3, i32* %8, align 4, !dbg !10584
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !10585
  store i32 0, i32* %9, align 4, !dbg !10586
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !10587
  store i32 0, i32* %10, align 4, !dbg !10588
  %11 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #21, !dbg !10589
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #22, !dbg !10590
  ret void, !dbg !10590
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #8 !dbg !10591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10593, metadata !DIExpression()), !dbg !10594
  ret i32 0, !dbg !10595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #8 !dbg !10596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10646, metadata !DIExpression()), !dbg !10648
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !10647, metadata !DIExpression()), !dbg !10648
  ret i32 0, !dbg !10649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #8 !dbg !10650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10652, metadata !DIExpression()), !dbg !10653
  ret i32 1, !dbg !10654
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !10655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10659, metadata !DIExpression()), !dbg !10662
  call void @llvm.dbg.value(metadata i32 %1, metadata !10660, metadata !DIExpression()), !dbg !10662
  call void @llvm.dbg.value(metadata i32 %2, metadata !10661, metadata !DIExpression()), !dbg !10662
  ret i32 0, !dbg !10663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !10664 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10668, metadata !DIExpression()), !dbg !10671
  call void @llvm.dbg.value(metadata i32 %1, metadata !10669, metadata !DIExpression()), !dbg !10671
  call void @llvm.dbg.value(metadata i32 %2, metadata !10670, metadata !DIExpression()), !dbg !10671
  ret i32 -1, !dbg !10672
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #8 !dbg !10673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10677, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.value(metadata i8* %1, metadata !10678, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.value(metadata i32 %2, metadata !10679, metadata !DIExpression()), !dbg !10680
  ret i32 0, !dbg !10681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_getpid() local_unnamed_addr #8 !dbg !10682 {
  ret i32 1, !dbg !10683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !10684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10688, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.value(metadata i32 %1, metadata !10689, metadata !DIExpression()), !dbg !10690
  ret i32 -1, !dbg !10691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #8 !dbg !10692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10694, metadata !DIExpression()), !dbg !10695
  ret i32 -1, !dbg !10696
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2108 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !2306, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.value(metadata i32 %1, metadata !2307, metadata !DIExpression()), !dbg !10697
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #22, !dbg !10698, !srcloc !10699
  call void @llvm.dbg.value(metadata i8* %3, metadata !2309, metadata !DIExpression()), !dbg !10697
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !10700
  %5 = icmp eq i8* %4, null, !dbg !10702
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !10703
  call void @llvm.dbg.value(metadata i8* %6, metadata !2308, metadata !DIExpression()), !dbg !10697
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !10704
  %8 = icmp ult i8* %3, %7, !dbg !10706
  %9 = xor i1 %8, true, !dbg !10707
  %10 = or i1 %5, %9, !dbg !10707
  br i1 %10, label %11, label %13, !dbg !10707

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !10708
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !10707
  br label %13, !dbg !10707

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !10708
  ret i8* %14, !dbg !10707
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !10709 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10711, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i8* %1, metadata !10712, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i32 %2, metadata !10713, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i32 0, metadata !10714, metadata !DIExpression()), !dbg !10715
  %4 = icmp sgt i32 %2, 0, !dbg !10716
  br i1 %4, label %5, label %14, !dbg !10719

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !10714, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.value(metadata i8* %7, metadata !10712, metadata !DIExpression()), !dbg !10715
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !10720
  call void @llvm.dbg.value(metadata i8* %8, metadata !10712, metadata !DIExpression()), !dbg !10715
  %9 = load i8, i8* %7, align 1, !dbg !10722
  %10 = zext i8 %9 to i32, !dbg !10722
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #21, !dbg !10723
  %12 = add nuw nsw i32 %6, 1, !dbg !10724
  call void @llvm.dbg.value(metadata i32 %12, metadata !10714, metadata !DIExpression()), !dbg !10715
  %13 = icmp eq i32 %12, %2, !dbg !10716
  br i1 %13, label %14, label %5, !dbg !10719, !llvm.loop !10725

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !10727
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #10 !dbg !10728 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10730, metadata !DIExpression()), !dbg !10732
  %2 = add i32 %0, -1, !dbg !10733
  %3 = icmp ugt i32 %2, 16777215, !dbg !10735
  br i1 %3, label %8, label %4, !dbg !10736

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10737
  call void @llvm.dbg.value(metadata i32 %5, metadata !10731, metadata !DIExpression()), !dbg !10732
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10738
  %7 = and i32 %6, -4, !dbg !10738
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10738
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10739
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10740
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10741
  br label %8, !dbg !10742

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !10732
  ret i32 %9, !dbg !10743
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #10 !dbg !10744 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !10745
  ret void, !dbg !10746
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #9 !dbg !10747 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !10748
  ret i32 %1, !dbg !10749
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #9 !dbg !10750 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !10753
  %2 = lshr i32 %1, 3, !dbg !10754
  %3 = and i32 %2, 15, !dbg !10754
  call void @llvm.dbg.value(metadata i32 %3, metadata !10752, metadata !DIExpression()), !dbg !10755
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !10756

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !10757

5:                                                ; preds = %0, %0
  br label %9, !dbg !10759

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !10760
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !10761
  br label %15, !dbg !10763

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !10760
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !10761
  %12 = and i32 %11, 1024, !dbg !10764
  %13 = icmp eq i32 %12, 0, !dbg !10764
  br i1 %13, label %15, label %14, !dbg !10763

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !10765
  br label %15, !dbg !10767

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !10768
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #10 !dbg !10769 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !10770
  %2 = or i32 %1, 15728640, !dbg !10770
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !10770
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !10771
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10772
  %4 = or i32 %3, 458752, !dbg !10772
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10772
  ret void, !dbg !10773
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #10 !dbg !10774 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !10775
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !10776
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !10777
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !10778
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !10779
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !10780
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !10781
  ret void, !dbg !10782
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #9 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { nofree nosync nounwind willreturn }
attributes #19 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { nobuiltin optsize "no-builtins" }
attributes #21 = { nobuiltin nounwind optsize "no-builtins" }
attributes #22 = { nounwind }
attributes #23 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2441, !2, !263, !546, !2463, !701, !791, !2467, !882, !981, !1306, !2513, !1394, !1405, !1763, !1824, !2515, !1904, !2072, !2084, !2301, !2312, !2429}
!llvm.ident = !{!2517, !2517, !2517, !2517, !2517, !2517, !2517, !2517, !2517, !2517, !2517, !2517, !2517, !2517, !2517, !2517, !2517, !2517, !2517, !2517, !2517, !2517, !2517}
!llvm.module.flags = !{!2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !2, file: !3, line: 48, type: !259, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !174, globals: !195, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!4 = !{!5, !66, !71, !77, !156, !165, !170}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 1170, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65}
!9 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!10 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!11 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!12 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!13 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!14 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!15 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!16 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!17 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!18 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!19 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!20 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!21 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!22 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!23 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!24 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!25 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!26 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!27 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!28 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!29 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!30 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!31 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!32 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!33 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!34 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!35 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!36 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!37 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!38 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!39 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!40 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!41 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!42 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!43 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!44 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!45 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!46 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!47 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!48 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!49 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!50 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!51 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!52 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!53 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!54 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!55 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!56 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!57 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!58 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!59 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!60 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!61 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!62 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!63 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!64 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!65 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !67, line: 82, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!68 = !{!69, !70}
!69 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!70 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !67, line: 75, baseType: !7, size: 32, elements: !72)
!72 = !{!73, !74, !75, !76}
!73 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!74 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!75 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!76 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !78, line: 44, baseType: !79, size: 32, elements: !80)
!78 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!79 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!80 = !{!81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155}
!81 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!82 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!83 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!84 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!85 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!86 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!87 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!88 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!89 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!90 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!91 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!92 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!93 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!94 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!95 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!96 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!97 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!98 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!99 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!100 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!101 = !DIEnumerator(name: "KP_IRQn", value: 10)
!102 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!103 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!104 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!105 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!106 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!107 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!108 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!109 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!110 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!111 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!112 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!113 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!114 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!115 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!116 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!117 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!118 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!119 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!120 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!121 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!122 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!123 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!124 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!125 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!126 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!127 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!128 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!129 = !DIEnumerator(name: "SF_IRQn", value: 38)
!130 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!131 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!132 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!133 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!134 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!135 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!136 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!137 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!138 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!139 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!140 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!141 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!142 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!143 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!144 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!145 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!146 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!147 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!148 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!149 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!150 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!151 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!152 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!153 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!154 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!155 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!156 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 846, baseType: !7, size: 32, elements: !157)
!157 = !{!158, !159, !160, !161, !162, !163, !164}
!158 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!159 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!160 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!161 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!162 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!163 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!164 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !166, line: 380, baseType: !7, size: 32, elements: !167)
!166 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!167 = !{!168, !169}
!168 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!169 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !166, line: 397, baseType: !7, size: 32, elements: !171)
!171 = !{!172, !173}
!172 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!173 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!174 = !{!175, !179, !194}
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !176, line: 48, baseType: !177)
!176 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !178, line: 79, baseType: !7)
!178 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !78, line: 1272, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1262, size: 288, elements: !182)
!182 = !{!183, !185, !186, !187, !189, !190, !191, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !181, file: !78, line: 1263, baseType: !184, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !175)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !181, file: !78, line: 1264, baseType: !184, size: 32, offset: 32)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !181, file: !78, line: 1265, baseType: !184, size: 32, offset: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !181, file: !78, line: 1266, baseType: !188, size: 32, offset: 96)
!188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !184)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !181, file: !78, line: 1267, baseType: !184, size: 32, offset: 128)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !181, file: !78, line: 1268, baseType: !184, size: 32, offset: 160)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !181, file: !78, line: 1269, baseType: !184, size: 32, offset: 192)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !181, file: !78, line: 1270, baseType: !184, size: 32, offset: 224)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !181, file: !78, line: 1271, baseType: !184, size: 32, offset: 256)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!195 = !{!0, !196, !205, !212, !234, !257}
!196 = !DIGlobalVariableExpression(var: !197, expr: !DIExpression())
!197 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !2, file: !3, line: 49, type: !198, isLocal: false, isDefinition: true)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !78, line: 1260, baseType: !200)
!200 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1256, size: 96, elements: !201)
!201 = !{!202, !203, !204}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !200, file: !78, line: 1257, baseType: !188, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !200, file: !78, line: 1258, baseType: !184, size: 32, offset: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !200, file: !78, line: 1259, baseType: !184, size: 32, offset: 64)
!205 = !DIGlobalVariableExpression(var: !206, expr: !DIExpression())
!206 = distinct !DIGlobalVariable(name: "flag", scope: !207, file: !3, line: 88, type: !211, isLocal: true, isDefinition: true)
!207 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !3, file: !3, line: 86, type: !208, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !210)
!208 = !DISubroutineType(types: !209)
!209 = !{null}
!210 = !{}
!211 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!212 = !DIGlobalVariableExpression(var: !213, expr: !DIExpression())
!213 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !2, file: !3, line: 51, type: !214, isLocal: false, isDefinition: true)
!214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 768, elements: !232)
!215 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !67, line: 116, baseType: !216)
!216 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !67, line: 111, size: 128, elements: !217)
!217 = !{!218, !220, !230, !231}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !216, file: !67, line: 112, baseType: !219, size: 32)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !166, line: 400, baseType: !170)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !216, file: !67, line: 113, baseType: !221, size: 64, offset: 32)
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !67, line: 109, baseType: !222)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !67, line: 106, size: 64, elements: !223)
!223 = !{!224, !229}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !222, file: !67, line: 107, baseType: !225, size: 32)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !166, line: 371, baseType: !226)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!227 = !DISubroutineType(types: !228)
!228 = !{null, !194}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !222, file: !67, line: 108, baseType: !194, size: 32, offset: 32)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !216, file: !67, line: 114, baseType: !211, size: 8, offset: 96)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !216, file: !67, line: 115, baseType: !211, size: 8, offset: 104)
!232 = !{!233}
!233 = !DISubrange(count: 6)
!234 = !DIGlobalVariableExpression(var: !235, expr: !DIExpression())
!235 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !2, file: !3, line: 52, type: !236, isLocal: false, isDefinition: true)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !67, line: 134, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !67, line: 125, size: 4256, elements: !238)
!238 = !{!239, !250, !251, !252, !253, !254, !255, !256}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !237, file: !67, line: 126, baseType: !240, size: 4096)
!240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 4096, elements: !248)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !67, line: 123, baseType: !242)
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !67, line: 118, size: 128, elements: !243)
!243 = !{!244, !245, !246, !247}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !242, file: !67, line: 119, baseType: !221, size: 64)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !242, file: !67, line: 120, baseType: !175, size: 32, offset: 64)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !242, file: !67, line: 121, baseType: !211, size: 8, offset: 96)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !242, file: !67, line: 122, baseType: !211, size: 8, offset: 104)
!248 = !{!249}
!249 = !DISubrange(count: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !237, file: !67, line: 127, baseType: !175, size: 32, offset: 4096)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !237, file: !67, line: 128, baseType: !175, size: 32, offset: 4128)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !237, file: !67, line: 129, baseType: !175, size: 32, offset: 4160)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !237, file: !67, line: 130, baseType: !175, size: 32, offset: 4192)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !237, file: !67, line: 131, baseType: !211, size: 8, offset: 4224)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !237, file: !67, line: 132, baseType: !211, size: 8, offset: 4232)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !237, file: !67, line: 133, baseType: !211, size: 8, offset: 4240)
!257 = !DIGlobalVariableExpression(var: !258, expr: !DIExpression())
!258 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !2, file: !3, line: 53, type: !175, isLocal: false, isDefinition: true)
!259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 192, elements: !232)
!260 = !DIGlobalVariableExpression(var: !206, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!261 = !DIGlobalVariableExpression(var: !262, expr: !DIExpression())
!262 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !263, file: !264, line: 64, type: !364, isLocal: false, isDefinition: true)
!263 = distinct !DICompileUnit(language: DW_LANG_C99, file: !264, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !265, retainedTypes: !359, globals: !363, splitDebugInlining: false, nameTableKind: None)
!264 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!265 = !{!266, !318, !325, !329, !335, !339, !348, !353}
!266 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 339, baseType: !7, size: 32, elements: !267)
!267 = !{!268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317}
!268 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!269 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!270 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!271 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!272 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!273 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!274 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!275 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!276 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!277 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!278 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!279 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!280 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!281 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!282 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!283 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!284 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!285 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!286 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!287 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!288 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!289 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!290 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!291 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!292 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!293 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!294 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!295 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!296 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!297 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!298 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!299 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!300 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!301 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!302 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!303 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!304 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!305 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!306 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!307 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!308 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!309 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!310 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!311 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!312 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!313 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!314 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!315 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!316 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!317 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!318 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !319, line: 224, baseType: !79, size: 32, elements: !320)
!319 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!320 = !{!321, !322, !323, !324}
!321 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!322 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!323 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!324 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!325 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !319, line: 210, baseType: !7, size: 32, elements: !326)
!326 = !{!327, !328}
!327 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!328 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!329 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !319, line: 233, baseType: !79, size: 32, elements: !330)
!330 = !{!331, !332, !333, !334}
!331 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!332 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!333 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!334 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!335 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !319, line: 217, baseType: !7, size: 32, elements: !336)
!336 = !{!337, !338}
!337 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!338 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!339 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 415, baseType: !7, size: 32, elements: !340)
!340 = !{!341, !342, !343, !344, !345, !346, !347}
!341 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!342 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!343 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!344 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!345 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!346 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!347 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 427, baseType: !7, size: 32, elements: !349)
!349 = !{!350, !351, !352}
!350 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!351 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!352 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!353 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !319, line: 242, baseType: !7, size: 32, elements: !354)
!354 = !{!355, !356, !357, !358}
!355 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!356 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!357 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!358 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!359 = !{!194, !360, !361, !362}
!360 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !319, line: 213, baseType: !325)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !319, line: 220, baseType: !335)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !319, line: 247, baseType: !353)
!363 = !{!261}
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !78, line: 1554, baseType: !366)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1522, size: 29440, elements: !367)
!367 = !{!368, !385, !389, !398, !399, !408, !409, !418, !419, !429, !430, !439, !440, !449, !450, !459, !460, !469, !473, !482, !483, !492, !493, !502, !511, !512, !523, !527, !536, !537}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !366, file: !78, line: 1523, baseType: !369, size: 256)
!369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !370, size: 256, elements: !383)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !78, line: 1400, baseType: !371)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1395, size: 128, elements: !372)
!372 = !{!373, !374, !375, !376}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !371, file: !78, line: 1396, baseType: !184, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !371, file: !78, line: 1397, baseType: !184, size: 32, offset: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !371, file: !78, line: 1398, baseType: !184, size: 32, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !371, file: !78, line: 1399, baseType: !377, size: 32, offset: 96)
!377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 32, elements: !381)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !176, line: 24, baseType: !379)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !178, line: 43, baseType: !380)
!380 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!381 = !{!382}
!382 = !DISubrange(count: 4)
!383 = !{!384}
!384 = !DISubrange(count: 2)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !366, file: !78, line: 1524, baseType: !386, size: 1792, offset: 256)
!386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 1792, elements: !387)
!387 = !{!388}
!388 = !DISubrange(count: 224)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !366, file: !78, line: 1525, baseType: !390, size: 256, offset: 2048)
!390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !391, size: 256, elements: !383)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !78, line: 1409, baseType: !392)
!392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1404, size: 128, elements: !393)
!393 = !{!394, !395, !396, !397}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !392, file: !78, line: 1405, baseType: !184, size: 32)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !392, file: !78, line: 1406, baseType: !184, size: 32, offset: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !392, file: !78, line: 1407, baseType: !184, size: 32, offset: 64)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !392, file: !78, line: 1408, baseType: !377, size: 32, offset: 96)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !366, file: !78, line: 1526, baseType: !386, size: 1792, offset: 2304)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !366, file: !78, line: 1527, baseType: !400, size: 256, offset: 4096)
!400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !401, size: 256, elements: !383)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !78, line: 1417, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1412, size: 128, elements: !403)
!403 = !{!404, !405, !406, !407}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !402, file: !78, line: 1413, baseType: !184, size: 32)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !402, file: !78, line: 1414, baseType: !184, size: 32, offset: 32)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !402, file: !78, line: 1415, baseType: !184, size: 32, offset: 64)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !402, file: !78, line: 1416, baseType: !377, size: 32, offset: 96)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !366, file: !78, line: 1528, baseType: !386, size: 1792, offset: 4352)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !366, file: !78, line: 1529, baseType: !410, size: 256, offset: 6144)
!410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 256, elements: !383)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !78, line: 1426, baseType: !412)
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1421, size: 128, elements: !413)
!413 = !{!414, !415, !416, !417}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !412, file: !78, line: 1422, baseType: !184, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !412, file: !78, line: 1423, baseType: !184, size: 32, offset: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !412, file: !78, line: 1424, baseType: !184, size: 32, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !412, file: !78, line: 1425, baseType: !377, size: 32, offset: 96)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !366, file: !78, line: 1530, baseType: !386, size: 1792, offset: 6400)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !366, file: !78, line: 1531, baseType: !420, size: 256, offset: 8192)
!420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 256, elements: !383)
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !78, line: 1432, baseType: !422)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1429, size: 128, elements: !423)
!423 = !{!424, !425}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !422, file: !78, line: 1430, baseType: !184, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !422, file: !78, line: 1431, baseType: !426, size: 96, offset: 32)
!426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 96, elements: !427)
!427 = !{!428}
!428 = !DISubrange(count: 12)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !366, file: !78, line: 1532, baseType: !386, size: 1792, offset: 8448)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !366, file: !78, line: 1533, baseType: !431, size: 256, offset: 10240)
!431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !432, size: 256, elements: !383)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !78, line: 1440, baseType: !433)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1435, size: 128, elements: !434)
!434 = !{!435, !436, !437, !438}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !433, file: !78, line: 1436, baseType: !184, size: 32)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !433, file: !78, line: 1437, baseType: !184, size: 32, offset: 32)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !433, file: !78, line: 1438, baseType: !184, size: 32, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !433, file: !78, line: 1439, baseType: !377, size: 32, offset: 96)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !366, file: !78, line: 1534, baseType: !386, size: 1792, offset: 10496)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !366, file: !78, line: 1535, baseType: !441, size: 256, offset: 12288)
!441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !442, size: 256, elements: !383)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !78, line: 1448, baseType: !443)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1443, size: 128, elements: !444)
!444 = !{!445, !446, !447, !448}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !443, file: !78, line: 1444, baseType: !184, size: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !443, file: !78, line: 1445, baseType: !184, size: 32, offset: 32)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !443, file: !78, line: 1446, baseType: !184, size: 32, offset: 64)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !443, file: !78, line: 1447, baseType: !377, size: 32, offset: 96)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !366, file: !78, line: 1536, baseType: !386, size: 1792, offset: 12544)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !366, file: !78, line: 1537, baseType: !451, size: 256, offset: 14336)
!451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 256, elements: !383)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !78, line: 1455, baseType: !453)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1450, size: 128, elements: !454)
!454 = !{!455, !456, !457, !458}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !453, file: !78, line: 1451, baseType: !184, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !453, file: !78, line: 1452, baseType: !184, size: 32, offset: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !453, file: !78, line: 1453, baseType: !184, size: 32, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !453, file: !78, line: 1454, baseType: !377, size: 32, offset: 96)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !366, file: !78, line: 1538, baseType: !386, size: 1792, offset: 14592)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !366, file: !78, line: 1539, baseType: !461, size: 512, offset: 16384)
!461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 512, elements: !381)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !78, line: 1463, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1458, size: 128, elements: !464)
!464 = !{!465, !466, !467, !468}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !463, file: !78, line: 1459, baseType: !184, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !463, file: !78, line: 1460, baseType: !184, size: 32, offset: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !463, file: !78, line: 1461, baseType: !184, size: 32, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !463, file: !78, line: 1462, baseType: !377, size: 32, offset: 96)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !366, file: !78, line: 1540, baseType: !470, size: 1536, offset: 16896)
!470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 1536, elements: !471)
!471 = !{!472}
!472 = !DISubrange(count: 192)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !366, file: !78, line: 1541, baseType: !474, size: 256, offset: 18432)
!474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !475, size: 256, elements: !383)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !78, line: 1471, baseType: !476)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1466, size: 128, elements: !477)
!477 = !{!478, !479, !480, !481}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !476, file: !78, line: 1467, baseType: !184, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !476, file: !78, line: 1468, baseType: !184, size: 32, offset: 32)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !476, file: !78, line: 1469, baseType: !184, size: 32, offset: 64)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !476, file: !78, line: 1470, baseType: !377, size: 32, offset: 96)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !366, file: !78, line: 1542, baseType: !386, size: 1792, offset: 18688)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !366, file: !78, line: 1543, baseType: !484, size: 256, offset: 20480)
!484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 256, elements: !383)
!485 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !78, line: 1480, baseType: !486)
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1475, size: 128, elements: !487)
!487 = !{!488, !489, !490, !491}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !486, file: !78, line: 1476, baseType: !184, size: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !486, file: !78, line: 1477, baseType: !184, size: 32, offset: 32)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !486, file: !78, line: 1478, baseType: !184, size: 32, offset: 64)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !486, file: !78, line: 1479, baseType: !377, size: 32, offset: 96)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !366, file: !78, line: 1544, baseType: !386, size: 1792, offset: 20736)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !366, file: !78, line: 1545, baseType: !494, size: 256, offset: 22528)
!494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !495, size: 256, elements: !383)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !78, line: 1489, baseType: !496)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1484, size: 128, elements: !497)
!497 = !{!498, !499, !500, !501}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !496, file: !78, line: 1485, baseType: !184, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !496, file: !78, line: 1486, baseType: !184, size: 32, offset: 32)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !496, file: !78, line: 1487, baseType: !184, size: 32, offset: 64)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !496, file: !78, line: 1488, baseType: !377, size: 32, offset: 96)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !366, file: !78, line: 1546, baseType: !503, size: 256, offset: 22784)
!503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !504, size: 256, elements: !383)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !78, line: 1497, baseType: !505)
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1492, size: 128, elements: !506)
!506 = !{!507, !508, !509, !510}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !505, file: !78, line: 1493, baseType: !184, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !505, file: !78, line: 1494, baseType: !184, size: 32, offset: 32)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !505, file: !78, line: 1495, baseType: !184, size: 32, offset: 64)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !505, file: !78, line: 1496, baseType: !377, size: 32, offset: 96)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !366, file: !78, line: 1547, baseType: !470, size: 1536, offset: 23040)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !366, file: !78, line: 1548, baseType: !513, size: 896, offset: 24576)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 896, elements: !521)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !78, line: 1505, baseType: !515)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1500, size: 128, elements: !516)
!516 = !{!517, !518, !519, !520}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !515, file: !78, line: 1501, baseType: !184, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !515, file: !78, line: 1502, baseType: !184, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !515, file: !78, line: 1503, baseType: !184, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !515, file: !78, line: 1504, baseType: !377, size: 32, offset: 96)
!521 = !{!522}
!522 = !DISubrange(count: 7)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !366, file: !78, line: 1549, baseType: !524, size: 1152, offset: 25472)
!524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 1152, elements: !525)
!525 = !{!526}
!526 = !DISubrange(count: 144)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !366, file: !78, line: 1550, baseType: !528, size: 512, offset: 26624)
!528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !529, size: 512, elements: !381)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !78, line: 1513, baseType: !530)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1508, size: 128, elements: !531)
!531 = !{!532, !533, !534, !535}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !530, file: !78, line: 1509, baseType: !184, size: 32)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !530, file: !78, line: 1510, baseType: !184, size: 32, offset: 32)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !530, file: !78, line: 1511, baseType: !184, size: 32, offset: 64)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !530, file: !78, line: 1512, baseType: !377, size: 32, offset: 96)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !366, file: !78, line: 1551, baseType: !470, size: 1536, offset: 27136)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !366, file: !78, line: 1552, baseType: !538, size: 768, offset: 28672)
!538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 768, elements: !232)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !78, line: 1519, baseType: !540)
!540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1516, size: 128, elements: !541)
!541 = !{!542, !543}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !540, file: !78, line: 1517, baseType: !184, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !540, file: !78, line: 1518, baseType: !426, size: 96, offset: 32)
!544 = !DIGlobalVariableExpression(var: !545, expr: !DIExpression())
!545 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !546, file: !547, line: 101, type: !695, isLocal: true, isDefinition: true)
!546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !547, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !548, retainedTypes: !645, globals: !654, splitDebugInlining: false, nameTableKind: None)
!547 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!548 = !{!549, !556, !571, !577, !583, !588, !595, !611, !617, !621, !626, !633, !641}
!549 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 180, baseType: !7, size: 32, elements: !550)
!550 = !{!551, !552, !553, !554, !555}
!551 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!552 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!553 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!554 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!555 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!556 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !557, line: 189, baseType: !7, size: 32, elements: !558)
!557 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!558 = !{!559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570}
!559 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!560 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!561 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!562 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!563 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!564 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!565 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!566 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!567 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!568 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!569 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!570 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!571 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 355, baseType: !79, size: 32, elements: !573)
!572 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!573 = !{!574, !575, !576}
!574 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!575 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!576 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!577 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !557, line: 206, baseType: !79, size: 32, elements: !578)
!578 = !{!579, !580, !581, !582}
!579 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!580 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!581 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!582 = !DIEnumerator(name: "VDMA_OK", value: 0)
!583 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !547, line: 65, baseType: !7, size: 32, elements: !584)
!584 = !{!585, !586, !587}
!585 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!586 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!587 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!588 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 345, baseType: !79, size: 32, elements: !589)
!589 = !{!590, !591, !592, !593, !594}
!590 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!591 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!592 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!593 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!594 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!595 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 302, baseType: !7, size: 32, elements: !596)
!596 = !{!597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610}
!597 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!598 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!599 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!600 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!601 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!602 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!603 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!604 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!605 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!606 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!607 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!608 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!609 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!610 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!611 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 321, baseType: !7, size: 32, elements: !612)
!612 = !{!613, !614, !615, !616}
!613 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!614 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!615 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!616 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!617 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 330, baseType: !7, size: 32, elements: !618)
!618 = !{!619, !620}
!619 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!620 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!621 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 337, baseType: !7, size: 32, elements: !622)
!622 = !{!623, !624, !625}
!623 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!624 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!625 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!626 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !627, line: 101, baseType: !79, size: 32, elements: !628)
!627 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!628 = !{!629, !630, !631, !632}
!629 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!630 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!631 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!632 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!633 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !634, line: 152, baseType: !79, size: 32, elements: !635)
!634 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!635 = !{!636, !637, !638, !639, !640}
!636 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!637 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!638 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!639 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!640 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!641 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !557, line: 222, baseType: !79, size: 32, elements: !642)
!642 = !{!643, !644}
!643 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!644 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!645 = !{!194, !175, !646}
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 32)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !648, line: 96, baseType: !649)
!648 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!649 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !648, line: 93, size: 64, elements: !650)
!650 = !{!651, !652}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !649, file: !648, line: 94, baseType: !211, size: 8)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !649, file: !648, line: 95, baseType: !653, size: 32, offset: 32)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !6, line: 186, baseType: !549)
!654 = !{!544, !655, !668, !673, !687, !693}
!655 = !DIGlobalVariableExpression(var: !656, expr: !DIExpression())
!656 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !546, file: !547, line: 102, type: !657, isLocal: true, isDefinition: true)
!657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !658, size: 256, elements: !381)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !547, line: 74, baseType: !659)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !547, line: 71, size: 64, elements: !660)
!660 = !{!661, !667}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !659, file: !547, line: 72, baseType: !662, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !572, line: 410, baseType: !663)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 32)
!664 = !DISubroutineType(types: !665)
!665 = !{null, !666, !194}
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !572, line: 359, baseType: !571)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !659, file: !547, line: 73, baseType: !194, size: 32, offset: 32)
!668 = !DIGlobalVariableExpression(var: !669, expr: !DIExpression())
!669 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !546, file: !547, line: 103, type: !670, isLocal: true, isDefinition: true)
!670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 512, elements: !671)
!671 = !{!672}
!672 = !DISubrange(count: 8)
!673 = !DIGlobalVariableExpression(var: !674, expr: !DIExpression())
!674 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !546, file: !547, line: 104, type: !675, isLocal: true, isDefinition: true)
!675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !676, size: 896, elements: !381)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !572, line: 390, baseType: !677)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 382, size: 224, elements: !678)
!678 = !{!679, !681, !682, !683, !684, !685, !686}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !677, file: !572, line: 383, baseType: !680, size: 32)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !677, file: !572, line: 384, baseType: !175, size: 32, offset: 32)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !677, file: !572, line: 385, baseType: !175, size: 32, offset: 64)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !677, file: !572, line: 386, baseType: !680, size: 32, offset: 96)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !677, file: !572, line: 387, baseType: !175, size: 32, offset: 128)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !677, file: !572, line: 388, baseType: !175, size: 32, offset: 160)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !677, file: !572, line: 389, baseType: !175, size: 32, offset: 192)
!687 = !DIGlobalVariableExpression(var: !688, expr: !DIExpression())
!688 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !546, file: !547, line: 105, type: !689, isLocal: true, isDefinition: true)
!689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 416, elements: !691)
!690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!691 = !{!692}
!692 = !DISubrange(count: 13)
!693 = !DIGlobalVariableExpression(var: !694, expr: !DIExpression())
!694 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !546, file: !547, line: 90, type: !211, isLocal: true, isDefinition: true)
!695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !696, size: 128, elements: !381)
!696 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !697)
!697 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !547, line: 69, baseType: !583)
!698 = !DIGlobalVariableExpression(var: !694, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!699 = !DIGlobalVariableExpression(var: !700, expr: !DIExpression())
!700 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !701, file: !702, line: 53, type: !782, isLocal: false, isDefinition: true)
!701 = distinct !DICompileUnit(language: DW_LANG_C99, file: !702, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !703, retainedTypes: !714, globals: !770, splitDebugInlining: false, nameTableKind: None)
!702 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!703 = !{!5, !77, !556, !549, !704}
!704 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !648, line: 46, baseType: !7, size: 32, elements: !705)
!705 = !{!706, !707, !708, !709, !710, !711, !712, !713}
!706 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!707 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!708 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!709 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!710 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!711 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!712 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!713 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!714 = !{!715}
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !78, line: 588, baseType: !717)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 542, size: 800, elements: !718)
!718 = !{!719, !725, !730, !736, !737, !742, !747, !748, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !717, file: !78, line: 547, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !78, line: 543, size: 32, elements: !721)
!721 = !{!722, !723, !724}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !720, file: !78, line: 544, baseType: !188, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !720, file: !78, line: 545, baseType: !184, size: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !720, file: !78, line: 546, baseType: !184, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !717, file: !78, line: 551, baseType: !726, size: 32, offset: 32)
!726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !78, line: 548, size: 32, elements: !727)
!727 = !{!728, !729}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !726, file: !78, line: 549, baseType: !184, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !726, file: !78, line: 550, baseType: !184, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !717, file: !78, line: 556, baseType: !731, size: 32, offset: 64)
!731 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !78, line: 552, size: 32, elements: !732)
!732 = !{!733, !734, !735}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !731, file: !78, line: 553, baseType: !188, size: 32)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !731, file: !78, line: 554, baseType: !184, size: 32)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !731, file: !78, line: 555, baseType: !184, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !717, file: !78, line: 557, baseType: !184, size: 32, offset: 96)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !717, file: !78, line: 561, baseType: !738, size: 32, offset: 128)
!738 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !78, line: 558, size: 32, elements: !739)
!739 = !{!740, !741}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !738, file: !78, line: 559, baseType: !184, size: 32)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !738, file: !78, line: 560, baseType: !184, size: 32)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !717, file: !78, line: 565, baseType: !743, size: 32, offset: 160)
!743 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !78, line: 562, size: 32, elements: !744)
!744 = !{!745, !746}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !743, file: !78, line: 563, baseType: !188, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !743, file: !78, line: 564, baseType: !184, size: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !717, file: !78, line: 566, baseType: !184, size: 32, offset: 192)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !717, file: !78, line: 570, baseType: !749, size: 32, offset: 224)
!749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !78, line: 567, size: 32, elements: !750)
!750 = !{!751, !752}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !749, file: !78, line: 568, baseType: !184, size: 32)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !749, file: !78, line: 569, baseType: !184, size: 32)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !717, file: !78, line: 571, baseType: !184, size: 32, offset: 256)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !717, file: !78, line: 572, baseType: !184, size: 32, offset: 288)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !717, file: !78, line: 573, baseType: !184, size: 32, offset: 320)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !717, file: !78, line: 574, baseType: !184, size: 32, offset: 352)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !717, file: !78, line: 575, baseType: !188, size: 32, offset: 384)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !717, file: !78, line: 576, baseType: !184, size: 32, offset: 416)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !717, file: !78, line: 577, baseType: !184, size: 32, offset: 448)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !717, file: !78, line: 578, baseType: !184, size: 32, offset: 480)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !717, file: !78, line: 579, baseType: !184, size: 32, offset: 512)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !717, file: !78, line: 580, baseType: !184, size: 32, offset: 544)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !717, file: !78, line: 581, baseType: !184, size: 32, offset: 576)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !717, file: !78, line: 582, baseType: !184, size: 32, offset: 608)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !717, file: !78, line: 583, baseType: !184, size: 32, offset: 640)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !717, file: !78, line: 584, baseType: !184, size: 32, offset: 672)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !717, file: !78, line: 585, baseType: !184, size: 32, offset: 704)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !717, file: !78, line: 586, baseType: !188, size: 32, offset: 736)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !717, file: !78, line: 587, baseType: !184, size: 32, offset: 768)
!770 = !{!699, !771, !776}
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !701, file: !702, line: 54, type: !773, isLocal: false, isDefinition: true)
!773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !774, size: 128, elements: !381)
!774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !775)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !6, line: 1237, baseType: !5)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !701, file: !702, line: 55, type: !778, isLocal: false, isDefinition: true)
!778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !779, size: 128, elements: !381)
!779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !780)
!780 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !78, line: 125, baseType: !781)
!781 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !78, line: 123, baseType: !77)
!782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !783, size: 128, elements: !381)
!783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !715)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!785 = distinct !DIGlobalVariable(name: "priority_set", scope: !786, file: !787, line: 128, type: !175, isLocal: true, isDefinition: true)
!786 = distinct !DISubprogram(name: "hal_nvic_init", scope: !787, file: !787, line: 126, type: !788, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !878)
!787 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!788 = !DISubroutineType(types: !789)
!789 = !{!790}
!790 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !634, line: 158, baseType: !633)
!791 = distinct !DICompileUnit(language: DW_LANG_C99, file: !787, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !792, retainedTypes: !793, globals: !860, splitDebugInlining: false, nameTableKind: None)
!792 = !{!633, !77}
!793 = !{!780, !794, !175, !828, !858}
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 32)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !796, line: 418, baseType: !797)
!796 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 395, size: 1120, elements: !798)
!798 = !{!799, !800, !801, !802, !803, !804, !805, !808, !809, !810, !811, !812, !813, !814, !815, !817, !818, !819, !821, !825, !827}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !797, file: !796, line: 397, baseType: !188, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !797, file: !796, line: 398, baseType: !184, size: 32, offset: 32)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !797, file: !796, line: 399, baseType: !184, size: 32, offset: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !797, file: !796, line: 400, baseType: !184, size: 32, offset: 96)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !797, file: !796, line: 401, baseType: !184, size: 32, offset: 128)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !797, file: !796, line: 402, baseType: !184, size: 32, offset: 160)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !797, file: !796, line: 403, baseType: !806, size: 96, offset: 192)
!806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 96, elements: !427)
!807 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !378)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !797, file: !796, line: 404, baseType: !184, size: 32, offset: 288)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !797, file: !796, line: 405, baseType: !184, size: 32, offset: 320)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !797, file: !796, line: 406, baseType: !184, size: 32, offset: 352)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !797, file: !796, line: 407, baseType: !184, size: 32, offset: 384)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !797, file: !796, line: 408, baseType: !184, size: 32, offset: 416)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !797, file: !796, line: 409, baseType: !184, size: 32, offset: 448)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !797, file: !796, line: 410, baseType: !184, size: 32, offset: 480)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !797, file: !796, line: 411, baseType: !816, size: 64, offset: 512)
!816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !188, size: 64, elements: !383)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !797, file: !796, line: 412, baseType: !188, size: 32, offset: 576)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !797, file: !796, line: 413, baseType: !188, size: 32, offset: 608)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !797, file: !796, line: 414, baseType: !820, size: 128, offset: 640)
!820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !188, size: 128, elements: !381)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !797, file: !796, line: 415, baseType: !822, size: 160, offset: 768)
!822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !188, size: 160, elements: !823)
!823 = !{!824}
!824 = !DISubrange(count: 5)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !797, file: !796, line: 416, baseType: !826, size: 160, offset: 928)
!826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 160, elements: !823)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !797, file: !796, line: 417, baseType: !184, size: 32, offset: 1088)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !796, line: 378, baseType: !830)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 363, size: 28704, elements: !831)
!831 = !{!832, !834, !838, !839, !840, !841, !842, !843, !844, !845, !849, !853, !857}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !830, file: !796, line: 365, baseType: !833, size: 256)
!833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 256, elements: !671)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !830, file: !796, line: 366, baseType: !835, size: 768, offset: 256)
!835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 768, elements: !836)
!836 = !{!837}
!837 = !DISubrange(count: 24)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !830, file: !796, line: 367, baseType: !833, size: 256, offset: 1024)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !830, file: !796, line: 368, baseType: !835, size: 768, offset: 1280)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !830, file: !796, line: 369, baseType: !833, size: 256, offset: 2048)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !830, file: !796, line: 370, baseType: !835, size: 768, offset: 2304)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !830, file: !796, line: 371, baseType: !833, size: 256, offset: 3072)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !830, file: !796, line: 372, baseType: !835, size: 768, offset: 3328)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !830, file: !796, line: 373, baseType: !833, size: 256, offset: 4096)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !830, file: !796, line: 374, baseType: !846, size: 1792, offset: 4352)
!846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 1792, elements: !847)
!847 = !{!848}
!848 = !DISubrange(count: 56)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !830, file: !796, line: 375, baseType: !850, size: 1920, offset: 6144)
!850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 1920, elements: !851)
!851 = !{!852}
!852 = !DISubrange(count: 240)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !830, file: !796, line: 376, baseType: !854, size: 20608, offset: 8064)
!854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 20608, elements: !855)
!855 = !{!856}
!856 = !DISubrange(count: 644)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !830, file: !796, line: 377, baseType: !184, size: 32, offset: 28672)
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !176, line: 44, baseType: !859)
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !178, line: 77, baseType: !79)
!860 = !{!861, !862, !875}
!861 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!862 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression())
!863 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !791, file: !787, line: 119, type: !864, isLocal: false, isDefinition: true)
!864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !865, size: 4096, elements: !873)
!865 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !787, line: 50, baseType: !866)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !787, line: 47, size: 64, elements: !867)
!867 = !{!868, !872}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !866, file: !787, line: 48, baseType: !869, size: 32)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 32)
!870 = !DISubroutineType(types: !871)
!871 = !{null, !780}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !866, file: !787, line: 49, baseType: !175, size: 32, offset: 32)
!873 = !{!874}
!874 = !DISubrange(count: 64)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !791, file: !787, line: 52, type: !877, isLocal: true, isDefinition: true)
!877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 2048, elements: !873)
!878 = !{!879}
!879 = !DILocalVariable(name: "i", scope: !786, file: !787, line: 129, type: !175)
!880 = !DIGlobalVariableExpression(var: !881, expr: !DIExpression())
!881 = distinct !DIGlobalVariable(name: "DelayResume", scope: !882, file: !883, line: 55, type: !211, isLocal: false, isDefinition: true)
!882 = distinct !DICompileUnit(language: DW_LANG_C99, file: !883, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !884, retainedTypes: !919, globals: !958, splitDebugInlining: false, nameTableKind: None)
!883 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!884 = !{!885, !893, !898}
!885 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !886, line: 51, baseType: !7, size: 32, elements: !887)
!886 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!887 = !{!888, !889, !890, !891, !892}
!888 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!889 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!890 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!891 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!892 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !886, line: 62, baseType: !7, size: 32, elements: !894)
!894 = !{!895, !896, !897}
!895 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!896 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!897 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!898 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !899, line: 228, baseType: !7, size: 32, elements: !900)
!899 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!900 = !{!901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918}
!901 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!902 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!903 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!904 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!905 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!906 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!907 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!908 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!909 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!910 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!911 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!912 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!913 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!914 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!915 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!916 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!917 = !DIEnumerator(name: "NR_MUXS", value: 16)
!918 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!919 = !{!920, !921, !943, !680, !175, !7, !949, !951, !955, !957}
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 32)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !78, line: 2777, baseType: !923)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 2758, size: 576, elements: !924)
!924 = !{!925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !923, file: !78, line: 2759, baseType: !184, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !923, file: !78, line: 2760, baseType: !184, size: 32, offset: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !923, file: !78, line: 2761, baseType: !184, size: 32, offset: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !923, file: !78, line: 2762, baseType: !184, size: 32, offset: 96)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !923, file: !78, line: 2763, baseType: !184, size: 32, offset: 128)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !923, file: !78, line: 2764, baseType: !184, size: 32, offset: 160)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !923, file: !78, line: 2765, baseType: !184, size: 32, offset: 192)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !923, file: !78, line: 2766, baseType: !184, size: 32, offset: 224)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !923, file: !78, line: 2767, baseType: !184, size: 32, offset: 256)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !923, file: !78, line: 2768, baseType: !184, size: 32, offset: 288)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !923, file: !78, line: 2769, baseType: !184, size: 32, offset: 320)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !923, file: !78, line: 2770, baseType: !184, size: 32, offset: 352)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !923, file: !78, line: 2771, baseType: !184, size: 32, offset: 384)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !923, file: !78, line: 2772, baseType: !184, size: 32, offset: 416)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !923, file: !78, line: 2773, baseType: !184, size: 32, offset: 448)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !923, file: !78, line: 2774, baseType: !184, size: 32, offset: 480)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !923, file: !78, line: 2775, baseType: !184, size: 32, offset: 512)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !923, file: !78, line: 2776, baseType: !184, size: 32, offset: 544)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !78, line: 2801, baseType: !945)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 2798, size: 64, elements: !946)
!946 = !{!947, !948}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !945, file: !78, line: 2799, baseType: !184, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !945, file: !78, line: 2800, baseType: !184, size: 32, offset: 32)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !176, line: 36, baseType: !953)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !178, line: 57, baseType: !954)
!954 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !380)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 32)
!958 = !{!880, !959, !961, !963, !965, !967, !969, !971, !973, !975, !977}
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !882, file: !883, line: 604, type: !378, isLocal: false, isDefinition: true)
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !882, file: !883, line: 605, type: !175, isLocal: false, isDefinition: true)
!963 = !DIGlobalVariableExpression(var: !964, expr: !DIExpression())
!964 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !882, file: !883, line: 606, type: !175, isLocal: false, isDefinition: true)
!965 = !DIGlobalVariableExpression(var: !966, expr: !DIExpression())
!966 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !882, file: !883, line: 607, type: !175, isLocal: false, isDefinition: true)
!967 = !DIGlobalVariableExpression(var: !968, expr: !DIExpression())
!968 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !882, file: !883, line: 608, type: !175, isLocal: false, isDefinition: true)
!969 = !DIGlobalVariableExpression(var: !970, expr: !DIExpression())
!970 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !882, file: !883, line: 609, type: !175, isLocal: false, isDefinition: true)
!971 = !DIGlobalVariableExpression(var: !972, expr: !DIExpression())
!972 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !882, file: !883, line: 610, type: !175, isLocal: false, isDefinition: true)
!973 = !DIGlobalVariableExpression(var: !974, expr: !DIExpression())
!974 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !882, file: !883, line: 611, type: !175, isLocal: false, isDefinition: true)
!975 = !DIGlobalVariableExpression(var: !976, expr: !DIExpression())
!976 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !882, file: !883, line: 665, type: !175, isLocal: false, isDefinition: true)
!977 = !DIGlobalVariableExpression(var: !978, expr: !DIExpression())
!978 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !882, file: !883, line: 666, type: !175, isLocal: false, isDefinition: true)
!979 = !DIGlobalVariableExpression(var: !980, expr: !DIExpression())
!980 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !981, file: !982, line: 334, type: !211, isLocal: false, isDefinition: true)
!981 = distinct !DICompileUnit(language: DW_LANG_C99, file: !982, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !983, retainedTypes: !1151, globals: !1291, splitDebugInlining: false, nameTableKind: None)
!982 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!983 = !{!984, !1075, !1081, !1088, !1100, !1111, !1120, !1129, !1133, !1137}
!984 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !985, line: 58, baseType: !79, size: 32, elements: !986)
!985 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!986 = !{!987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074}
!987 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!988 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!989 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!990 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!991 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!992 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!993 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!994 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!995 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!996 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!997 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!998 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!999 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!1000 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!1001 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!1002 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!1003 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!1004 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!1005 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!1006 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!1007 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!1008 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!1009 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!1010 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!1011 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!1012 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!1013 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!1014 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!1015 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!1016 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!1017 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!1018 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!1019 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!1020 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!1021 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!1022 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!1023 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!1024 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!1025 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!1026 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!1027 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!1028 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!1029 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!1030 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!1031 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!1032 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!1033 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!1034 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!1035 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!1036 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!1037 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!1038 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!1039 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!1040 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!1041 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!1042 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!1043 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!1044 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!1045 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!1046 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!1047 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!1048 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!1049 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!1050 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!1051 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!1052 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!1053 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!1054 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!1055 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!1056 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!1057 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!1058 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!1059 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!1060 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!1061 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!1062 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!1063 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!1064 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!1065 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!1066 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!1067 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!1068 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!1069 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!1070 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!1071 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!1072 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!1073 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!1074 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!1075 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1076, line: 81, baseType: !7, size: 32, elements: !1077)
!1076 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1077 = !{!1078, !1079, !1080}
!1078 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!1079 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!1080 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!1081 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !982, line: 298, baseType: !7, size: 32, elements: !1082)
!1082 = !{!1083, !1084, !1085, !1086, !1087}
!1083 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!1084 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!1085 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!1086 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!1087 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!1088 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1089, line: 51, baseType: !7, size: 32, elements: !1090)
!1089 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1090 = !{!1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099}
!1091 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!1092 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!1093 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!1094 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!1095 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!1096 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!1097 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!1098 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!1099 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!1100 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1101, line: 110, baseType: !79, size: 32, elements: !1102)
!1101 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1102 = !{!1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110}
!1103 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1104 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1105 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1106 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1107 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1108 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1109 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1110 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1111 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1089, line: 73, baseType: !7, size: 32, elements: !1112)
!1112 = !{!1113, !1114, !1115, !1116, !1117, !1118, !1119}
!1113 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!1114 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!1115 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!1116 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!1117 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!1118 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!1119 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!1120 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1089, line: 83, baseType: !7, size: 32, elements: !1121)
!1121 = !{!1122, !1123, !1124, !1125, !1126, !1127, !1128}
!1122 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!1123 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!1124 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!1125 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!1126 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!1127 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!1128 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!1129 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1089, line: 98, baseType: !7, size: 32, elements: !1130)
!1130 = !{!1131, !1132}
!1131 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!1132 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!1133 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1076, line: 76, baseType: !7, size: 32, elements: !1134)
!1134 = !{!1135, !1136}
!1135 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!1136 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!1137 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1076, line: 208, baseType: !7, size: 32, elements: !1138)
!1138 = !{!1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150}
!1139 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!1140 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!1141 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!1142 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!1143 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!1144 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!1145 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!1146 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!1147 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!1148 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!1149 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!1150 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!1151 = !{!175, !920, !951, !680, !1152, !1262, !1284, !194, !1290, !380}
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 32)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1076, line: 193, baseType: !1154)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1076, line: 134, size: 1824, elements: !1155)
!1155 = !{!1156, !1157, !1158, !1165, !1171, !1175, !1183, !1184, !1191, !1192, !1193, !1194, !1202, !1205, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1256, !1257, !1261}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1154, file: !1076, line: 136, baseType: !175, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1154, file: !1076, line: 137, baseType: !680, size: 32, offset: 32)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1154, file: !1076, line: 138, baseType: !1159, size: 32, offset: 64)
!1159 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1160, line: 56, baseType: !1161)
!1160 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 54, size: 8, elements: !1163)
!1163 = !{!1164}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1162, file: !1160, line: 55, baseType: !378, size: 8)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1154, file: !1076, line: 139, baseType: !1166, size: 32, offset: 96)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1160, line: 46, baseType: !1167)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 44, size: 8, elements: !1169)
!1169 = !{!1170}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1168, file: !1160, line: 45, baseType: !378, size: 8)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1154, file: !1076, line: 140, baseType: !1172, size: 8, offset: 128)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !176, line: 20, baseType: !1173)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !178, line: 41, baseType: !1174)
!1174 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1154, file: !1076, line: 143, baseType: !1176, size: 32, offset: 160)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 32)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1178, line: 146, baseType: !1179)
!1178 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 143, size: 64, elements: !1180)
!1180 = !{!1181, !1182}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1179, file: !1178, line: 144, baseType: !175, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1179, file: !1178, line: 145, baseType: !175, size: 32, offset: 32)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1154, file: !1076, line: 144, baseType: !680, size: 32, offset: 192)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1154, file: !1076, line: 145, baseType: !1185, size: 32, offset: 224)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1178, line: 152, baseType: !1187)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 149, size: 64, elements: !1188)
!1188 = !{!1189, !1190}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1187, file: !1178, line: 150, baseType: !175, size: 32)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1187, file: !1178, line: 151, baseType: !175, size: 32, offset: 32)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1154, file: !1076, line: 146, baseType: !680, size: 32, offset: 256)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1154, file: !1076, line: 147, baseType: !175, size: 32, offset: 288)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1154, file: !1076, line: 148, baseType: !680, size: 32, offset: 320)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1154, file: !1076, line: 151, baseType: !1195, size: 1024, offset: 352)
!1195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1196, size: 1024, elements: !1201)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1178, line: 170, baseType: !1197)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 167, size: 64, elements: !1198)
!1198 = !{!1199, !1200}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1197, file: !1178, line: 168, baseType: !175, size: 32)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1197, file: !1178, line: 169, baseType: !175, size: 32, offset: 32)
!1201 = !{!672, !384}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1154, file: !1076, line: 155, baseType: !1203, size: 32, offset: 1376)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !1089, line: 120, baseType: !378)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1154, file: !1076, line: 156, baseType: !1206, size: 32, offset: 1408)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1076, line: 124, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1076, line: 90, size: 200, elements: !1209)
!1209 = !{!1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1208, file: !1076, line: 91, baseType: !378, size: 8)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1208, file: !1076, line: 92, baseType: !378, size: 8, offset: 8)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1208, file: !1076, line: 94, baseType: !378, size: 8, offset: 16)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1208, file: !1076, line: 95, baseType: !378, size: 8, offset: 24)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1208, file: !1076, line: 96, baseType: !378, size: 8, offset: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1208, file: !1076, line: 98, baseType: !378, size: 8, offset: 40)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1208, file: !1076, line: 99, baseType: !378, size: 8, offset: 48)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1208, file: !1076, line: 100, baseType: !378, size: 8, offset: 56)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1208, file: !1076, line: 101, baseType: !378, size: 8, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1208, file: !1076, line: 103, baseType: !378, size: 8, offset: 72)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1208, file: !1076, line: 104, baseType: !378, size: 8, offset: 80)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1208, file: !1076, line: 106, baseType: !378, size: 8, offset: 88)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1208, file: !1076, line: 107, baseType: !378, size: 8, offset: 96)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1208, file: !1076, line: 108, baseType: !378, size: 8, offset: 104)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1208, file: !1076, line: 109, baseType: !378, size: 8, offset: 112)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1208, file: !1076, line: 110, baseType: !378, size: 8, offset: 120)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1208, file: !1076, line: 111, baseType: !378, size: 8, offset: 128)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1208, file: !1076, line: 112, baseType: !378, size: 8, offset: 136)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1208, file: !1076, line: 114, baseType: !378, size: 8, offset: 144)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1208, file: !1076, line: 115, baseType: !378, size: 8, offset: 152)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1208, file: !1076, line: 118, baseType: !378, size: 8, offset: 160)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1208, file: !1076, line: 119, baseType: !378, size: 8, offset: 168)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1208, file: !1076, line: 120, baseType: !378, size: 8, offset: 176)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1208, file: !1076, line: 121, baseType: !378, size: 8, offset: 184)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1208, file: !1076, line: 122, baseType: !378, size: 8, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1154, file: !1076, line: 157, baseType: !175, size: 32, offset: 1440)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1154, file: !1076, line: 158, baseType: !952, size: 16, offset: 1472)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1154, file: !1076, line: 159, baseType: !952, size: 16, offset: 1488)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1154, file: !1076, line: 163, baseType: !952, size: 16, offset: 1504)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1154, file: !1076, line: 164, baseType: !952, size: 16, offset: 1520)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1154, file: !1076, line: 167, baseType: !378, size: 8, offset: 1536)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1154, file: !1076, line: 168, baseType: !1242, size: 24, offset: 1544)
!1242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 24, elements: !1243)
!1243 = !{!1244}
!1244 = !DISubrange(count: 3)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1154, file: !1076, line: 169, baseType: !378, size: 8, offset: 1568)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1154, file: !1076, line: 170, baseType: !378, size: 8, offset: 1576)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1154, file: !1076, line: 173, baseType: !952, size: 16, offset: 1584)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1154, file: !1076, line: 174, baseType: !175, size: 32, offset: 1600)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1154, file: !1076, line: 175, baseType: !175, size: 32, offset: 1632)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1154, file: !1076, line: 178, baseType: !211, size: 8, offset: 1664)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1154, file: !1076, line: 179, baseType: !211, size: 8, offset: 1672)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1154, file: !1076, line: 182, baseType: !1253, size: 32, offset: 1696)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 32)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!79, !194}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1154, file: !1076, line: 186, baseType: !1253, size: 32, offset: 1728)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1154, file: !1076, line: 187, baseType: !1258, size: 32, offset: 1760)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 32)
!1259 = !DISubroutineType(types: !1260)
!1260 = !{!79, !194, !175, !194, !175}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1154, file: !1076, line: 188, baseType: !1258, size: 32, offset: 1792)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !78, line: 2777, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 2758, size: 576, elements: !1265)
!1265 = !{!1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1264, file: !78, line: 2759, baseType: !184, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1264, file: !78, line: 2760, baseType: !184, size: 32, offset: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1264, file: !78, line: 2761, baseType: !184, size: 32, offset: 64)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1264, file: !78, line: 2762, baseType: !184, size: 32, offset: 96)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1264, file: !78, line: 2763, baseType: !184, size: 32, offset: 128)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1264, file: !78, line: 2764, baseType: !184, size: 32, offset: 160)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1264, file: !78, line: 2765, baseType: !184, size: 32, offset: 192)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1264, file: !78, line: 2766, baseType: !184, size: 32, offset: 224)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1264, file: !78, line: 2767, baseType: !184, size: 32, offset: 256)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1264, file: !78, line: 2768, baseType: !184, size: 32, offset: 288)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1264, file: !78, line: 2769, baseType: !184, size: 32, offset: 320)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1264, file: !78, line: 2770, baseType: !184, size: 32, offset: 352)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1264, file: !78, line: 2771, baseType: !184, size: 32, offset: 384)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1264, file: !78, line: 2772, baseType: !184, size: 32, offset: 416)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1264, file: !78, line: 2773, baseType: !184, size: 32, offset: 448)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1264, file: !78, line: 2774, baseType: !184, size: 32, offset: 480)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1264, file: !78, line: 2775, baseType: !184, size: 32, offset: 512)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1264, file: !78, line: 2776, baseType: !184, size: 32, offset: 544)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !78, line: 2801, baseType: !1286)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 2798, size: 64, elements: !1287)
!1287 = !{!1288, !1289}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1286, file: !78, line: 2799, baseType: !184, size: 32)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1286, file: !78, line: 2800, baseType: !184, size: 32, offset: 32)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 32)
!1291 = !{!979, !1292, !1294, !1296, !1301}
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !981, file: !982, line: 382, type: !175, isLocal: false, isDefinition: true)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !981, file: !982, line: 383, type: !175, isLocal: false, isDefinition: true)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !981, file: !982, line: 369, type: !1298, isLocal: true, isDefinition: true)
!1298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 1024, elements: !1299)
!1299 = !{!1300}
!1300 = !DISubrange(count: 128)
!1301 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression())
!1302 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !981, file: !982, line: 1409, type: !79, isLocal: true, isDefinition: true)
!1303 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !1306, file: !1361, line: 35, type: !1362, isLocal: false, isDefinition: true)
!1306 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1307, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1308, retainedTypes: !1354, globals: !1355, splitDebugInlining: false, nameTableKind: None)
!1307 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1308 = !{!1309}
!1309 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1310, line: 77, baseType: !7, size: 32, elements: !1311)
!1310 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1311 = !{!1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353}
!1312 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!1313 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!1314 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!1315 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!1316 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!1317 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!1318 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!1319 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!1320 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!1321 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!1322 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1323 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1324 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1325 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1326 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1327 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1328 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1329 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1330 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1331 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1332 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1333 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1334 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1335 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1336 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1337 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1338 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1339 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1340 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1341 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1342 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1343 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1344 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1345 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1346 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1347 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1348 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1349 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1350 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1351 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1352 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1353 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1354 = !{!194}
!1355 = !{!1304, !1356, !1359}
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "cmem_index", scope: !1306, file: !1307, line: 96, type: !1358, isLocal: true, isDefinition: true)
!1358 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1359 = !DIGlobalVariableExpression(var: !1360, expr: !DIExpression())
!1360 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !1306, file: !1307, line: 94, type: !1358, isLocal: true, isDefinition: true)
!1361 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1363)
!1363 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !1307, line: 54, baseType: !1364)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1307, line: 51, size: 576, elements: !1365)
!1365 = !{!1366, !1376}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1364, file: !1307, line: 52, baseType: !1367, size: 96)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1310, line: 152, baseType: !1368)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1310, line: 144, size: 96, elements: !1369)
!1369 = !{!1370, !1372, !1374}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1368, file: !1310, line: 145, baseType: !1371, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !1310, line: 61, baseType: !7)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1368, file: !1310, line: 146, baseType: !1373, size: 16, offset: 32)
!1373 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !1310, line: 62, baseType: !954)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1368, file: !1310, line: 150, baseType: !1375, size: 32, offset: 64)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !1310, line: 127, baseType: !1309)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1364, file: !1307, line: 53, baseType: !1377, size: 480, offset: 96)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1378, line: 107, baseType: !1379)
!1378 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1378, line: 103, size: 480, elements: !1380)
!1380 = !{!1381, !1382, !1383}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1379, file: !1378, line: 104, baseType: !7, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1379, file: !1378, line: 105, baseType: !7, size: 32, offset: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1379, file: !1378, line: 106, baseType: !1384, size: 400, offset: 64)
!1384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1385, size: 400, elements: !823)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1378, line: 100, baseType: !1386)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1378, line: 92, size: 80, elements: !1387)
!1387 = !{!1388, !1389, !1390}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1386, file: !1378, line: 93, baseType: !378, size: 8)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1386, file: !1378, line: 94, baseType: !378, size: 8, offset: 8)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1386, file: !1378, line: 96, baseType: !1391, size: 64, offset: 16)
!1391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 64, elements: !671)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !1394, file: !1397, line: 96, type: !1398, isLocal: false, isDefinition: true)
!1394 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1395, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1396, splitDebugInlining: false, nameTableKind: None)
!1395 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1396 = !{!1392}
!1397 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1399, size: 152, elements: !1401)
!1399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1400)
!1400 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1401 = !{!1402}
!1402 = !DISubrange(count: 19)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "nor_egid", scope: !1405, file: !1406, line: 168, type: !1756, isLocal: false, isDefinition: true)
!1405 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1406, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1407, retainedTypes: !1418, globals: !1427, splitDebugInlining: false, nameTableKind: None)
!1406 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1407 = !{!1408, !984, !1309}
!1408 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1409, line: 49, baseType: !7, size: 32, elements: !1410)
!1409 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1410 = !{!1411, !1412, !1413, !1414, !1415, !1416, !1417}
!1411 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!1412 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!1413 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!1414 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!1415 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!1416 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!1417 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!1418 = !{!1419, !175, !1421}
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !985, line: 47, baseType: !380)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 32)
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1178, line: 146, baseType: !1423)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 143, size: 64, elements: !1424)
!1424 = !{!1425, !1426}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1423, file: !1178, line: 144, baseType: !175, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1423, file: !1178, line: 145, baseType: !175, size: 32, offset: 32)
!1427 = !{!1403, !1428, !1430, !1440, !1577, !1579, !1581, !1583, !1585, !1590, !1593, !1602, !1604, !1606, !1614, !1616, !1618, !1701, !1704, !1706, !1708, !1719, !1721, !1734}
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !1405, file: !1406, line: 94, type: !858, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "cmem_id", scope: !1405, file: !1406, line: 95, type: !1432, isLocal: false, isDefinition: true)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1434)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1378, line: 100, baseType: !1435)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1378, line: 92, size: 80, elements: !1436)
!1436 = !{!1437, !1438, !1439}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1435, file: !1378, line: 93, baseType: !378, size: 8)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1435, file: !1378, line: 94, baseType: !378, size: 8, offset: 8)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1435, file: !1378, line: 96, baseType: !1391, size: 64, offset: 16)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !1405, file: !1406, line: 127, type: !1442, isLocal: false, isDefinition: true)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !1178, line: 317, baseType: !1443)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !1178, line: 237, size: 2720, elements: !1444)
!1444 = !{!1445, !1446, !1498, !1499, !1502, !1503, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1544, !1545, !1546, !1551, !1552, !1553, !1554, !1555, !1559, !1563, !1570, !1571, !1572, !1573, !1574, !1575, !1576}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !1443, file: !1178, line: 238, baseType: !175, size: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1443, file: !1178, line: 239, baseType: !1447, size: 32, offset: 32)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 32)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1178, line: 121, baseType: !1449)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 105, size: 480, elements: !1450)
!1450 = !{!1451, !1455, !1456, !1460, !1464, !1468, !1469, !1473, !1474, !1475, !1476, !1481, !1486, !1490, !1494}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !1449, file: !1178, line: 106, baseType: !1452, size: 32)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 32)
!1453 = !DISubroutineType(types: !1454)
!1454 = !{!79, !194, !194}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !1449, file: !1178, line: 107, baseType: !1253, size: 32, offset: 32)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !1449, file: !1178, line: 108, baseType: !1457, size: 32, offset: 64)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 32)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!194, !194, !175, !175}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !1449, file: !1178, line: 109, baseType: !1461, size: 32, offset: 96)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 32)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!79, !194, !175}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !1449, file: !1178, line: 110, baseType: !1465, size: 32, offset: 128)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 32)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!79, !194, !194, !194, !175}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !1449, file: !1178, line: 111, baseType: !1461, size: 32, offset: 160)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !1449, file: !1178, line: 112, baseType: !1470, size: 32, offset: 192)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 32)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{!858, !194, !175}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !1449, file: !1178, line: 113, baseType: !1461, size: 32, offset: 224)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !1449, file: !1178, line: 114, baseType: !1461, size: 32, offset: 256)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !1449, file: !1178, line: 115, baseType: !1461, size: 32, offset: 288)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !1449, file: !1178, line: 116, baseType: !1477, size: 32, offset: 320)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 32)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{!79, !194, !79, !1480, !194, !1480}
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !985, line: 50, baseType: !7)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !1449, file: !1178, line: 117, baseType: !1482, size: 32, offset: 352)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 32)
!1483 = !DISubroutineType(types: !1484)
!1484 = !{!79, !194, !1485}
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !1449, file: !1178, line: 118, baseType: !1487, size: 32, offset: 384)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{!79, !194, !194, !175}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1449, file: !1178, line: 119, baseType: !1491, size: 32, offset: 416)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 32)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{!211, !194, !175}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !1449, file: !1178, line: 120, baseType: !1495, size: 32, offset: 448)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{!79, !194, !175, !194}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1443, file: !1178, line: 240, baseType: !194, size: 32, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !1443, file: !1178, line: 241, baseType: !1500, size: 32, offset: 96)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !985, line: 46, baseType: !954)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !1443, file: !1178, line: 242, baseType: !1500, size: 32, offset: 128)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1443, file: !1178, line: 243, baseType: !1504, size: 928, offset: 160)
!1504 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1178, line: 99, baseType: !1505)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 90, size: 928, elements: !1506)
!1506 = !{!1507, !1508, !1510, !1511, !1512, !1513, !1514, !1515}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !1505, file: !1178, line: 91, baseType: !175, size: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1505, file: !1178, line: 92, baseType: !1509, size: 256, offset: 32)
!1509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 256, elements: !671)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !1505, file: !1178, line: 93, baseType: !1509, size: 256, offset: 288)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1505, file: !1178, line: 94, baseType: !1509, size: 256, offset: 544)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !1505, file: !1178, line: 95, baseType: !175, size: 32, offset: 800)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !1505, file: !1178, line: 96, baseType: !1501, size: 16, offset: 832)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !1505, file: !1178, line: 97, baseType: !175, size: 32, offset: 864)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !1505, file: !1178, line: 98, baseType: !175, size: 32, offset: 896)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1443, file: !1178, line: 244, baseType: !1509, size: 256, offset: 1088)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !1443, file: !1178, line: 245, baseType: !1509, size: 256, offset: 1344)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !1443, file: !1178, line: 246, baseType: !175, size: 32, offset: 1600)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !1443, file: !1178, line: 247, baseType: !175, size: 32, offset: 1632)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !1443, file: !1178, line: 248, baseType: !175, size: 32, offset: 1664)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !1443, file: !1178, line: 249, baseType: !175, size: 32, offset: 1696)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !1443, file: !1178, line: 250, baseType: !175, size: 32, offset: 1728)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !1443, file: !1178, line: 252, baseType: !175, size: 32, offset: 1760)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !1443, file: !1178, line: 255, baseType: !175, size: 32, offset: 1792)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !1443, file: !1178, line: 256, baseType: !175, size: 32, offset: 1824)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !1443, file: !1178, line: 257, baseType: !175, size: 32, offset: 1856)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !1443, file: !1178, line: 261, baseType: !175, size: 32, offset: 1888)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !1443, file: !1178, line: 262, baseType: !175, size: 32, offset: 1920)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !1443, file: !1178, line: 263, baseType: !175, size: 32, offset: 1952)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !1443, file: !1178, line: 264, baseType: !175, size: 32, offset: 1984)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !1443, file: !1178, line: 265, baseType: !175, size: 32, offset: 2016)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !1443, file: !1178, line: 266, baseType: !175, size: 32, offset: 2048)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !1443, file: !1178, line: 267, baseType: !175, size: 32, offset: 2080)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !1443, file: !1178, line: 268, baseType: !175, size: 32, offset: 2112)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !1443, file: !1178, line: 270, baseType: !175, size: 32, offset: 2144)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !1443, file: !1178, line: 271, baseType: !175, size: 32, offset: 2176)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !1443, file: !1178, line: 272, baseType: !1538, size: 32, offset: 2208)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !1178, line: 229, baseType: !1540)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 226, size: 64, elements: !1541)
!1541 = !{!1542, !1543}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !1540, file: !1178, line: 227, baseType: !175, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !1540, file: !1178, line: 228, baseType: !175, size: 32, offset: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !1443, file: !1178, line: 273, baseType: !1419, size: 32, offset: 2240)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !1443, file: !1178, line: 274, baseType: !1419, size: 32, offset: 2272)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !1443, file: !1178, line: 276, baseType: !1547, size: 32, offset: 2304)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{null, !1550}
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !1443, file: !1178, line: 278, baseType: !175, size: 32, offset: 2336)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !1443, file: !1178, line: 280, baseType: !1547, size: 32, offset: 2368)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !1443, file: !1178, line: 281, baseType: !1547, size: 32, offset: 2400)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !1443, file: !1178, line: 283, baseType: !175, size: 32, offset: 2432)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !1443, file: !1178, line: 284, baseType: !1556, size: 32, offset: 2464)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!175, !1550}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !1443, file: !1178, line: 285, baseType: !1560, size: 32, offset: 2496)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!175, !1550, !175, !175}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !1443, file: !1178, line: 293, baseType: !1564, size: 32, offset: 2528)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !1178, line: 162, baseType: !1566)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 159, size: 64, elements: !1567)
!1567 = !{!1568, !1569}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1566, file: !1178, line: 160, baseType: !175, size: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !1566, file: !1178, line: 161, baseType: !175, size: 32, offset: 32)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !1443, file: !1178, line: 295, baseType: !175, size: 32, offset: 2560)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !1443, file: !1178, line: 296, baseType: !175, size: 32, offset: 2592)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !1443, file: !1178, line: 297, baseType: !175, size: 32, offset: 2624)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !1443, file: !1178, line: 298, baseType: !1501, size: 16, offset: 2656)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !1443, file: !1178, line: 302, baseType: !1501, size: 16, offset: 2672)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !1443, file: !1178, line: 310, baseType: !211, size: 8, offset: 2688)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1443, file: !1178, line: 313, baseType: !211, size: 8, offset: 2696)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !1405, file: !1406, line: 129, type: !175, isLocal: false, isDefinition: true)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !1405, file: !1406, line: 130, type: !175, isLocal: false, isDefinition: true)
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !1405, file: !1406, line: 131, type: !175, isLocal: false, isDefinition: true)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !1405, file: !1406, line: 132, type: !952, isLocal: true, isDefinition: true)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !1405, file: !1406, line: 136, type: !1587, isLocal: false, isDefinition: true)
!1587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 4096, elements: !1588)
!1588 = !{!1589}
!1589 = !DISubrange(count: 512)
!1590 = !DIGlobalVariableExpression(var: !1591, expr: !DIExpression())
!1591 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !1405, file: !1406, line: 146, type: !1592, isLocal: true, isDefinition: true)
!1592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1422, size: 512, elements: !671)
!1593 = !DIGlobalVariableExpression(var: !1594, expr: !DIExpression())
!1594 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !1405, file: !1406, line: 152, type: !1595, isLocal: true, isDefinition: true)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1597)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1378, line: 116, baseType: !1598)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1378, line: 113, size: 64, elements: !1599)
!1599 = !{!1600, !1601}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !1598, file: !1378, line: 114, baseType: !175, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !1598, file: !1378, line: 115, baseType: !175, size: 32, offset: 32)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !1405, file: !1406, line: 156, type: !175, isLocal: false, isDefinition: true)
!1604 = !DIGlobalVariableExpression(var: !1605, expr: !DIExpression())
!1605 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !1405, file: !1406, line: 157, type: !175, isLocal: false, isDefinition: true)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "BankInfo", scope: !1405, file: !1406, line: 160, type: !1608, isLocal: true, isDefinition: true)
!1608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1609, size: 512, elements: !671)
!1609 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1178, line: 152, baseType: !1610)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 149, size: 64, elements: !1611)
!1611 = !{!1612, !1613}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1610, file: !1178, line: 150, baseType: !175, size: 32)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1610, file: !1178, line: 151, baseType: !175, size: 32, offset: 32)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !1405, file: !1406, line: 173, type: !175, isLocal: false, isDefinition: true)
!1616 = !DIGlobalVariableExpression(var: !1617, expr: !DIExpression())
!1617 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !1405, file: !1406, line: 176, type: !1448, isLocal: false, isDefinition: true)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "mtdflash", scope: !1405, file: !1406, line: 177, type: !1620, isLocal: false, isDefinition: true)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1076, line: 193, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1076, line: 134, size: 1824, elements: !1622)
!1622 = !{!1623, !1624, !1625, !1631, !1637, !1638, !1639, !1640, !1642, !1643, !1644, !1645, !1652, !1653, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1621, file: !1076, line: 136, baseType: !175, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1621, file: !1076, line: 137, baseType: !680, size: 32, offset: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1621, file: !1076, line: 138, baseType: !1626, size: 32, offset: 64)
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1160, line: 56, baseType: !1627)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 32)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 54, size: 8, elements: !1629)
!1629 = !{!1630}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1628, file: !1160, line: 55, baseType: !378, size: 8)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1621, file: !1076, line: 139, baseType: !1632, size: 32, offset: 96)
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1160, line: 46, baseType: !1633)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 32)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 44, size: 8, elements: !1635)
!1635 = !{!1636}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1634, file: !1160, line: 45, baseType: !378, size: 8)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1621, file: !1076, line: 140, baseType: !1172, size: 8, offset: 128)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1621, file: !1076, line: 143, baseType: !1421, size: 32, offset: 160)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1621, file: !1076, line: 144, baseType: !680, size: 32, offset: 192)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1621, file: !1076, line: 145, baseType: !1641, size: 32, offset: 224)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1621, file: !1076, line: 146, baseType: !680, size: 32, offset: 256)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1621, file: !1076, line: 147, baseType: !175, size: 32, offset: 288)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1621, file: !1076, line: 148, baseType: !680, size: 32, offset: 320)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1621, file: !1076, line: 151, baseType: !1646, size: 1024, offset: 352)
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1647, size: 1024, elements: !1201)
!1647 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1178, line: 170, baseType: !1648)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 167, size: 64, elements: !1649)
!1649 = !{!1650, !1651}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1648, file: !1178, line: 168, baseType: !175, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1648, file: !1178, line: 169, baseType: !175, size: 32, offset: 32)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1621, file: !1076, line: 155, baseType: !1203, size: 32, offset: 1376)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1621, file: !1076, line: 156, baseType: !1654, size: 32, offset: 1408)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 32)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1076, line: 124, baseType: !1656)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1076, line: 90, size: 200, elements: !1657)
!1657 = !{!1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1656, file: !1076, line: 91, baseType: !378, size: 8)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1656, file: !1076, line: 92, baseType: !378, size: 8, offset: 8)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1656, file: !1076, line: 94, baseType: !378, size: 8, offset: 16)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1656, file: !1076, line: 95, baseType: !378, size: 8, offset: 24)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1656, file: !1076, line: 96, baseType: !378, size: 8, offset: 32)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1656, file: !1076, line: 98, baseType: !378, size: 8, offset: 40)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1656, file: !1076, line: 99, baseType: !378, size: 8, offset: 48)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1656, file: !1076, line: 100, baseType: !378, size: 8, offset: 56)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1656, file: !1076, line: 101, baseType: !378, size: 8, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1656, file: !1076, line: 103, baseType: !378, size: 8, offset: 72)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1656, file: !1076, line: 104, baseType: !378, size: 8, offset: 80)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1656, file: !1076, line: 106, baseType: !378, size: 8, offset: 88)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1656, file: !1076, line: 107, baseType: !378, size: 8, offset: 96)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1656, file: !1076, line: 108, baseType: !378, size: 8, offset: 104)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1656, file: !1076, line: 109, baseType: !378, size: 8, offset: 112)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1656, file: !1076, line: 110, baseType: !378, size: 8, offset: 120)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1656, file: !1076, line: 111, baseType: !378, size: 8, offset: 128)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1656, file: !1076, line: 112, baseType: !378, size: 8, offset: 136)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1656, file: !1076, line: 114, baseType: !378, size: 8, offset: 144)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1656, file: !1076, line: 115, baseType: !378, size: 8, offset: 152)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1656, file: !1076, line: 118, baseType: !378, size: 8, offset: 160)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1656, file: !1076, line: 119, baseType: !378, size: 8, offset: 168)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1656, file: !1076, line: 120, baseType: !378, size: 8, offset: 176)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1656, file: !1076, line: 121, baseType: !378, size: 8, offset: 184)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1656, file: !1076, line: 122, baseType: !378, size: 8, offset: 192)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1621, file: !1076, line: 157, baseType: !175, size: 32, offset: 1440)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1621, file: !1076, line: 158, baseType: !952, size: 16, offset: 1472)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1621, file: !1076, line: 159, baseType: !952, size: 16, offset: 1488)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1621, file: !1076, line: 163, baseType: !952, size: 16, offset: 1504)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1621, file: !1076, line: 164, baseType: !952, size: 16, offset: 1520)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1621, file: !1076, line: 167, baseType: !378, size: 8, offset: 1536)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1621, file: !1076, line: 168, baseType: !1242, size: 24, offset: 1544)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1621, file: !1076, line: 169, baseType: !378, size: 8, offset: 1568)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1621, file: !1076, line: 170, baseType: !378, size: 8, offset: 1576)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1621, file: !1076, line: 173, baseType: !952, size: 16, offset: 1584)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1621, file: !1076, line: 174, baseType: !175, size: 32, offset: 1600)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1621, file: !1076, line: 175, baseType: !175, size: 32, offset: 1632)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1621, file: !1076, line: 178, baseType: !211, size: 8, offset: 1664)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1621, file: !1076, line: 179, baseType: !211, size: 8, offset: 1672)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1621, file: !1076, line: 182, baseType: !1253, size: 32, offset: 1696)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1621, file: !1076, line: 186, baseType: !1253, size: 32, offset: 1728)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1621, file: !1076, line: 187, baseType: !1258, size: 32, offset: 1760)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1621, file: !1076, line: 188, baseType: !1258, size: 32, offset: 1792)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "StatusMap", scope: !1405, file: !1406, line: 178, type: !1703, isLocal: false, isDefinition: true)
!1703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1204, size: 64, elements: !671)
!1704 = !DIGlobalVariableExpression(var: !1705, expr: !DIExpression())
!1705 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !1405, file: !1406, line: 179, type: !1655, isLocal: false, isDefinition: true)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !1405, file: !1406, line: 204, type: !1592, isLocal: true, isDefinition: true)
!1708 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression())
!1709 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !1405, file: !1406, line: 205, type: !1710, isLocal: false, isDefinition: true)
!1710 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1711, line: 93, baseType: !1712)
!1711 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1711, line: 83, size: 1056, elements: !1713)
!1713 = !{!1714, !1715, !1716, !1717, !1718}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !1712, file: !1711, line: 84, baseType: !175, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1712, file: !1711, line: 85, baseType: !1447, size: 32, offset: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1712, file: !1711, line: 86, baseType: !194, size: 32, offset: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1712, file: !1711, line: 87, baseType: !1504, size: 928, offset: 96)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !1712, file: !1711, line: 92, baseType: !211, size: 8, offset: 1024)
!1719 = !DIGlobalVariableExpression(var: !1720, expr: !DIExpression())
!1720 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !1405, file: !1406, line: 208, type: !1620, isLocal: false, isDefinition: true)
!1721 = !DIGlobalVariableExpression(var: !1722, expr: !DIExpression())
!1722 = distinct !DIGlobalVariable(name: "nor_list", scope: !1405, file: !1406, line: 114, type: !1723, isLocal: true, isDefinition: true)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1725)
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1378, line: 125, baseType: !1726)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1378, line: 119, size: 1088, elements: !1727)
!1727 = !{!1728, !1729, !1730, !1731, !1733}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !1726, file: !1378, line: 120, baseType: !952, size: 16)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !1726, file: !1378, line: 121, baseType: !952, size: 16, offset: 16)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !1726, file: !1378, line: 122, baseType: !175, size: 32, offset: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !1726, file: !1378, line: 123, baseType: !1732, size: 512, offset: 64)
!1732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1597, size: 512, elements: !671)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1726, file: !1378, line: 124, baseType: !1608, size: 512, offset: 576)
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !1405, file: !1736, line: 42, type: !1737, isLocal: true, isDefinition: true)
!1736 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1738)
!1738 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !1406, line: 66, baseType: !1739)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1406, line: 63, size: 5600, elements: !1740)
!1740 = !{!1741, !1748}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1739, file: !1406, line: 64, baseType: !1742, size: 96)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1310, line: 152, baseType: !1743)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1310, line: 144, size: 96, elements: !1744)
!1744 = !{!1745, !1746, !1747}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1743, file: !1310, line: 145, baseType: !1371, size: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1743, file: !1310, line: 146, baseType: !1373, size: 16, offset: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1743, file: !1310, line: 150, baseType: !1375, size: 32, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1739, file: !1406, line: 65, baseType: !1749, size: 5504, offset: 96)
!1749 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1378, line: 132, baseType: !1750)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1378, line: 128, size: 5504, elements: !1751)
!1751 = !{!1752, !1753, !1754}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1750, file: !1378, line: 129, baseType: !7, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1750, file: !1378, line: 130, baseType: !7, size: 32, offset: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1750, file: !1378, line: 131, baseType: !1755, size: 5440, offset: 64)
!1755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1725, size: 5440, elements: !823)
!1756 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !1160, line: 79, baseType: !1757)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 32)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 77, size: 8, elements: !1759)
!1759 = !{!1760}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1758, file: !1160, line: 78, baseType: !378, size: 8)
!1761 = !DIGlobalVariableExpression(var: !1762, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1762 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !1763, file: !1764, line: 82, type: !79, isLocal: true, isDefinition: true)
!1763 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1764, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1765, retainedTypes: !1771, globals: !1816, splitDebugInlining: false, nameTableKind: None)
!1764 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1765 = !{!1100, !984, !1766}
!1766 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1101, line: 123, baseType: !7, size: 32, elements: !1767)
!1767 = !{!1768, !1769, !1770}
!1768 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!1769 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!1770 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!1771 = !{!175, !1772, !194, !680}
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1178, line: 190, baseType: !1774)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 173, size: 1376, elements: !1775)
!1775 = !{!1776, !1777, !1778, !1784, !1790, !1791, !1798, !1799, !1806, !1807, !1808, !1809}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1774, file: !1178, line: 174, baseType: !175, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1774, file: !1178, line: 175, baseType: !1419, size: 32, offset: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1774, file: !1178, line: 176, baseType: !1779, size: 32, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1160, line: 56, baseType: !1780)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 54, size: 8, elements: !1782)
!1782 = !{!1783}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1781, file: !1160, line: 55, baseType: !378, size: 8)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1774, file: !1178, line: 177, baseType: !1785, size: 32, offset: 96)
!1785 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1160, line: 46, baseType: !1786)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 44, size: 8, elements: !1788)
!1788 = !{!1789}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1787, file: !1160, line: 45, baseType: !378, size: 8)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1774, file: !1178, line: 178, baseType: !1172, size: 8, offset: 128)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1774, file: !1178, line: 180, baseType: !1792, size: 32, offset: 160)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1178, line: 146, baseType: !1794)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 143, size: 64, elements: !1795)
!1795 = !{!1796, !1797}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1794, file: !1178, line: 144, baseType: !175, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1794, file: !1178, line: 145, baseType: !175, size: 32, offset: 32)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1774, file: !1178, line: 181, baseType: !1419, size: 32, offset: 192)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1774, file: !1178, line: 182, baseType: !1800, size: 32, offset: 224)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1178, line: 152, baseType: !1802)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 149, size: 64, elements: !1803)
!1803 = !{!1804, !1805}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1802, file: !1178, line: 150, baseType: !175, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1802, file: !1178, line: 151, baseType: !175, size: 32, offset: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1774, file: !1178, line: 183, baseType: !1419, size: 32, offset: 256)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1774, file: !1178, line: 184, baseType: !175, size: 32, offset: 288)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1774, file: !1178, line: 185, baseType: !1419, size: 32, offset: 320)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1774, file: !1178, line: 188, baseType: !1810, size: 1024, offset: 352)
!1810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1811, size: 1024, elements: !1201)
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1178, line: 170, baseType: !1812)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 167, size: 64, elements: !1813)
!1813 = !{!1814, !1815}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1812, file: !1178, line: 168, baseType: !175, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1812, file: !1178, line: 169, baseType: !175, size: 32, offset: 32)
!1816 = !{!1817, !1818}
!1817 = !DIGlobalVariableExpression(var: !1762, expr: !DIExpression())
!1818 = !DIGlobalVariableExpression(var: !1819, expr: !DIExpression())
!1819 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !1763, file: !1764, line: 432, type: !1820, isLocal: true, isDefinition: true)
!1820 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !1101, line: 119, baseType: !1100)
!1821 = !DIGlobalVariableExpression(var: !1819, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!1822 = !DIGlobalVariableExpression(var: !1823, expr: !DIExpression())
!1823 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !1824, file: !1825, line: 60, type: !175, isLocal: false, isDefinition: true)
!1824 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1825, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1826, retainedTypes: !1834, globals: !1835, splitDebugInlining: false, nameTableKind: None)
!1825 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1826 = !{!1827}
!1827 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !166, line: 387, baseType: !79, size: 32, elements: !1828)
!1828 = !{!1829, !1830, !1831, !1832, !1833}
!1829 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!1830 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!1831 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!1832 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!1833 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!1834 = !{!194, !175}
!1835 = !{!1822, !1836, !1838, !1840, !1842, !1844, !1898, !1900}
!1836 = !DIGlobalVariableExpression(var: !1837, expr: !DIExpression())
!1837 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !1824, file: !1825, line: 61, type: !175, isLocal: false, isDefinition: true)
!1838 = !DIGlobalVariableExpression(var: !1839, expr: !DIExpression())
!1839 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !1824, file: !1825, line: 107, type: !175, isLocal: false, isDefinition: true)
!1840 = !DIGlobalVariableExpression(var: !1841, expr: !DIExpression())
!1841 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !1824, file: !1825, line: 132, type: !211, isLocal: false, isDefinition: true)
!1842 = !DIGlobalVariableExpression(var: !1843, expr: !DIExpression())
!1843 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !1824, file: !1825, line: 133, type: !211, isLocal: false, isDefinition: true)
!1844 = !DIGlobalVariableExpression(var: !1845, expr: !DIExpression())
!1845 = distinct !DIGlobalVariable(name: "replaced", scope: !1846, file: !1825, line: 139, type: !175, isLocal: true, isDefinition: true)
!1846 = distinct !DISubprogram(name: "LookupAddress", scope: !1825, file: !1825, line: 135, type: !1847, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !1849)
!1847 = !DISubroutineType(types: !1848)
!1848 = !{!175, !194, !175}
!1849 = !{!1850, !1851, !1852, !1897}
!1850 = !DILocalVariable(name: "DriveData", arg: 1, scope: !1846, file: !1825, line: 135, type: !194)
!1851 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !1846, file: !1825, line: 135, type: !175)
!1852 = !DILocalVariable(name: "D", scope: !1846, file: !1825, line: 137, type: !1853)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1178, line: 190, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 173, size: 1376, elements: !1856)
!1856 = !{!1857, !1858, !1859, !1865, !1871, !1872, !1879, !1880, !1887, !1888, !1889, !1890}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1855, file: !1178, line: 174, baseType: !175, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1855, file: !1178, line: 175, baseType: !1419, size: 32, offset: 32)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1855, file: !1178, line: 176, baseType: !1860, size: 32, offset: 64)
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1160, line: 56, baseType: !1861)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 32)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 54, size: 8, elements: !1863)
!1863 = !{!1864}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1862, file: !1160, line: 55, baseType: !378, size: 8)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1855, file: !1178, line: 177, baseType: !1866, size: 32, offset: 96)
!1866 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1160, line: 46, baseType: !1867)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 32)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 44, size: 8, elements: !1869)
!1869 = !{!1870}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1868, file: !1160, line: 45, baseType: !378, size: 8)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1855, file: !1178, line: 178, baseType: !1172, size: 8, offset: 128)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1855, file: !1178, line: 180, baseType: !1873, size: 32, offset: 160)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1178, line: 146, baseType: !1875)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 143, size: 64, elements: !1876)
!1876 = !{!1877, !1878}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1875, file: !1178, line: 144, baseType: !175, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1875, file: !1178, line: 145, baseType: !175, size: 32, offset: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1855, file: !1178, line: 181, baseType: !1419, size: 32, offset: 192)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1855, file: !1178, line: 182, baseType: !1881, size: 32, offset: 224)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 32)
!1882 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1178, line: 152, baseType: !1883)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 149, size: 64, elements: !1884)
!1884 = !{!1885, !1886}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1883, file: !1178, line: 150, baseType: !175, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1883, file: !1178, line: 151, baseType: !175, size: 32, offset: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1855, file: !1178, line: 183, baseType: !1419, size: 32, offset: 256)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1855, file: !1178, line: 184, baseType: !175, size: 32, offset: 288)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1855, file: !1178, line: 185, baseType: !1419, size: 32, offset: 320)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1855, file: !1178, line: 188, baseType: !1891, size: 1024, offset: 352)
!1891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1892, size: 1024, elements: !1201)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1178, line: 170, baseType: !1893)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 167, size: 64, elements: !1894)
!1894 = !{!1895, !1896}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1893, file: !1178, line: 168, baseType: !175, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1893, file: !1178, line: 169, baseType: !175, size: 32, offset: 32)
!1897 = !DILocalVariable(name: "addr", scope: !1846, file: !1825, line: 138, type: !175)
!1898 = !DIGlobalVariableExpression(var: !1899, expr: !DIExpression())
!1899 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !1846, file: !1825, line: 140, type: !175, isLocal: true, isDefinition: true)
!1900 = !DIGlobalVariableExpression(var: !1901, expr: !DIExpression())
!1901 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !1846, file: !1825, line: 141, type: !175, isLocal: true, isDefinition: true)
!1902 = !DIGlobalVariableExpression(var: !1903, expr: !DIExpression())
!1903 = distinct !DIGlobalVariable(name: "emi_settings", scope: !1904, file: !1905, line: 44, type: !2051, isLocal: false, isDefinition: true)
!1904 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1905, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1906, retainedTypes: !1912, globals: !1913, splitDebugInlining: false, nameTableKind: None)
!1905 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1906 = !{!1907}
!1907 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !1908, line: 40, baseType: !7, size: 32, elements: !1909)
!1908 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!1909 = !{!1910, !1911}
!1910 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!1911 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!1912 = !{!957}
!1913 = !{!1902, !1914, !1916, !1918, !1920, !2021, !2023, !2025, !2027, !2029, !2031, !2033, !2035, !2037, !2039, !2041, !2043, !2045, !2047, !2049}
!1914 = !DIGlobalVariableExpression(var: !1915, expr: !DIExpression())
!1915 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !1904, file: !1905, line: 65, type: !175, isLocal: false, isDefinition: true)
!1916 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression())
!1917 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !1904, file: !1905, line: 66, type: !175, isLocal: false, isDefinition: true)
!1918 = !DIGlobalVariableExpression(var: !1919, expr: !DIExpression())
!1919 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !1904, file: !1905, line: 67, type: !175, isLocal: false, isDefinition: true)
!1920 = !DIGlobalVariableExpression(var: !1921, expr: !DIExpression())
!1921 = distinct !DIGlobalVariable(name: "emi_register", scope: !1904, file: !1905, line: 83, type: !1922, isLocal: false, isDefinition: true)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !78, line: 2524, baseType: !1924)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 2447, size: 6752, elements: !1925)
!1925 = !{!1926, !1930, !1931, !1932, !1933, !1937, !1938, !1940, !1941, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1924, file: !78, line: 2448, baseType: !1927, size: 768)
!1927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 768, elements: !1928)
!1928 = !{!1929}
!1929 = !DISubrange(count: 96)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !1924, file: !78, line: 2449, baseType: !184, size: 32, offset: 768)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1924, file: !78, line: 2450, baseType: !806, size: 96, offset: 800)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !1924, file: !78, line: 2451, baseType: !184, size: 32, offset: 896)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1924, file: !78, line: 2452, baseType: !1934, size: 160, offset: 928)
!1934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 160, elements: !1935)
!1935 = !{!1936}
!1936 = !DISubrange(count: 20)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !1924, file: !78, line: 2453, baseType: !184, size: 32, offset: 1088)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1924, file: !78, line: 2454, baseType: !1939, size: 32, offset: 1120)
!1939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 32, elements: !381)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !1924, file: !78, line: 2455, baseType: !184, size: 32, offset: 1152)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1924, file: !78, line: 2456, baseType: !1942, size: 480, offset: 1184)
!1942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 480, elements: !1943)
!1943 = !{!1944}
!1944 = !DISubrange(count: 60)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !1924, file: !78, line: 2457, baseType: !184, size: 32, offset: 1664)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1924, file: !78, line: 2458, baseType: !1939, size: 32, offset: 1696)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !1924, file: !78, line: 2459, baseType: !184, size: 32, offset: 1728)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1924, file: !78, line: 2460, baseType: !1939, size: 32, offset: 1760)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !1924, file: !78, line: 2461, baseType: !184, size: 32, offset: 1792)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !1924, file: !78, line: 2462, baseType: !1934, size: 160, offset: 1824)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !1924, file: !78, line: 2463, baseType: !184, size: 32, offset: 1984)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !1924, file: !78, line: 2464, baseType: !1939, size: 32, offset: 2016)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !1924, file: !78, line: 2465, baseType: !184, size: 32, offset: 2048)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !1924, file: !78, line: 2466, baseType: !1939, size: 32, offset: 2080)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !1924, file: !78, line: 2467, baseType: !184, size: 32, offset: 2112)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !1924, file: !78, line: 2468, baseType: !1939, size: 32, offset: 2144)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !1924, file: !78, line: 2469, baseType: !184, size: 32, offset: 2176)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !1924, file: !78, line: 2470, baseType: !1959, size: 224, offset: 2208)
!1959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 224, elements: !1960)
!1960 = !{!1961}
!1961 = !DISubrange(count: 28)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !1924, file: !78, line: 2471, baseType: !184, size: 32, offset: 2432)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !1924, file: !78, line: 2472, baseType: !1939, size: 32, offset: 2464)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !1924, file: !78, line: 2473, baseType: !184, size: 32, offset: 2496)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !1924, file: !78, line: 2474, baseType: !806, size: 96, offset: 2528)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !1924, file: !78, line: 2475, baseType: !184, size: 32, offset: 2624)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !1924, file: !78, line: 2476, baseType: !1939, size: 32, offset: 2656)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !1924, file: !78, line: 2477, baseType: !184, size: 32, offset: 2688)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !1924, file: !78, line: 2478, baseType: !1939, size: 32, offset: 2720)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !1924, file: !78, line: 2479, baseType: !184, size: 32, offset: 2752)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !1924, file: !78, line: 2480, baseType: !1939, size: 32, offset: 2784)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !1924, file: !78, line: 2481, baseType: !184, size: 32, offset: 2816)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !1924, file: !78, line: 2482, baseType: !806, size: 96, offset: 2848)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !1924, file: !78, line: 2483, baseType: !184, size: 32, offset: 2944)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !1924, file: !78, line: 2484, baseType: !1939, size: 32, offset: 2976)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !1924, file: !78, line: 2485, baseType: !184, size: 32, offset: 3008)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !1924, file: !78, line: 2486, baseType: !1939, size: 32, offset: 3040)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !1924, file: !78, line: 2487, baseType: !184, size: 32, offset: 3072)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !1924, file: !78, line: 2488, baseType: !1934, size: 160, offset: 3104)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !1924, file: !78, line: 2489, baseType: !184, size: 32, offset: 3264)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !1924, file: !78, line: 2490, baseType: !1939, size: 32, offset: 3296)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !1924, file: !78, line: 2491, baseType: !184, size: 32, offset: 3328)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !1924, file: !78, line: 2492, baseType: !1984, size: 736, offset: 3360)
!1984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 736, elements: !1985)
!1985 = !{!1986}
!1986 = !DISubrange(count: 92)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !1924, file: !78, line: 2493, baseType: !184, size: 32, offset: 4096)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !1924, file: !78, line: 2494, baseType: !1939, size: 32, offset: 4128)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !1924, file: !78, line: 2495, baseType: !184, size: 32, offset: 4160)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !1924, file: !78, line: 2496, baseType: !1939, size: 32, offset: 4192)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !1924, file: !78, line: 2497, baseType: !184, size: 32, offset: 4224)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !1924, file: !78, line: 2498, baseType: !1939, size: 32, offset: 4256)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !1924, file: !78, line: 2499, baseType: !184, size: 32, offset: 4288)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !1924, file: !78, line: 2500, baseType: !1939, size: 32, offset: 4320)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !1924, file: !78, line: 2501, baseType: !184, size: 32, offset: 4352)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !1924, file: !78, line: 2502, baseType: !1939, size: 32, offset: 4384)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !1924, file: !78, line: 2503, baseType: !184, size: 32, offset: 4416)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !1924, file: !78, line: 2504, baseType: !1939, size: 32, offset: 4448)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !1924, file: !78, line: 2505, baseType: !184, size: 32, offset: 4480)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !1924, file: !78, line: 2506, baseType: !1939, size: 32, offset: 4512)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !1924, file: !78, line: 2507, baseType: !184, size: 32, offset: 4544)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !1924, file: !78, line: 2508, baseType: !1939, size: 32, offset: 4576)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !1924, file: !78, line: 2509, baseType: !184, size: 32, offset: 4608)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !1924, file: !78, line: 2510, baseType: !1942, size: 480, offset: 4640)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !1924, file: !78, line: 2511, baseType: !184, size: 32, offset: 5120)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !1924, file: !78, line: 2512, baseType: !2007, size: 992, offset: 5152)
!2007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 992, elements: !2008)
!2008 = !{!2009}
!2009 = !DISubrange(count: 124)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !1924, file: !78, line: 2513, baseType: !184, size: 32, offset: 6144)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !1924, file: !78, line: 2514, baseType: !1939, size: 32, offset: 6176)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !1924, file: !78, line: 2515, baseType: !184, size: 32, offset: 6208)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !1924, file: !78, line: 2516, baseType: !1939, size: 32, offset: 6240)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !1924, file: !78, line: 2517, baseType: !184, size: 32, offset: 6272)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !1924, file: !78, line: 2518, baseType: !1939, size: 32, offset: 6304)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !1924, file: !78, line: 2519, baseType: !184, size: 32, offset: 6336)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !1924, file: !78, line: 2520, baseType: !1934, size: 160, offset: 6368)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !1924, file: !78, line: 2521, baseType: !184, size: 32, offset: 6528)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !1924, file: !78, line: 2522, baseType: !1934, size: 160, offset: 6560)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !1924, file: !78, line: 2523, baseType: !184, size: 32, offset: 6720)
!2021 = !DIGlobalVariableExpression(var: !2022, expr: !DIExpression())
!2022 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !1904, file: !1905, line: 485, type: !184, isLocal: false, isDefinition: true)
!2023 = !DIGlobalVariableExpression(var: !2024, expr: !DIExpression())
!2024 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !1904, file: !1905, line: 68, type: !175, isLocal: false, isDefinition: true)
!2025 = !DIGlobalVariableExpression(var: !2026, expr: !DIExpression())
!2026 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !1904, file: !1905, line: 69, type: !175, isLocal: false, isDefinition: true)
!2027 = !DIGlobalVariableExpression(var: !2028, expr: !DIExpression())
!2028 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !1904, file: !1905, line: 70, type: !175, isLocal: false, isDefinition: true)
!2029 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression())
!2030 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !1904, file: !1905, line: 71, type: !175, isLocal: false, isDefinition: true)
!2031 = !DIGlobalVariableExpression(var: !2032, expr: !DIExpression())
!2032 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !1904, file: !1905, line: 72, type: !175, isLocal: false, isDefinition: true)
!2033 = !DIGlobalVariableExpression(var: !2034, expr: !DIExpression())
!2034 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !1904, file: !1905, line: 73, type: !175, isLocal: false, isDefinition: true)
!2035 = !DIGlobalVariableExpression(var: !2036, expr: !DIExpression())
!2036 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !1904, file: !1905, line: 74, type: !175, isLocal: false, isDefinition: true)
!2037 = !DIGlobalVariableExpression(var: !2038, expr: !DIExpression())
!2038 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !1904, file: !1905, line: 75, type: !175, isLocal: false, isDefinition: true)
!2039 = !DIGlobalVariableExpression(var: !2040, expr: !DIExpression())
!2040 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !1904, file: !1905, line: 76, type: !175, isLocal: false, isDefinition: true)
!2041 = !DIGlobalVariableExpression(var: !2042, expr: !DIExpression())
!2042 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !1904, file: !1905, line: 77, type: !175, isLocal: false, isDefinition: true)
!2043 = !DIGlobalVariableExpression(var: !2044, expr: !DIExpression())
!2044 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !1904, file: !1905, line: 78, type: !175, isLocal: false, isDefinition: true)
!2045 = !DIGlobalVariableExpression(var: !2046, expr: !DIExpression())
!2046 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !1904, file: !1905, line: 79, type: !175, isLocal: false, isDefinition: true)
!2047 = !DIGlobalVariableExpression(var: !2048, expr: !DIExpression())
!2048 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !1904, file: !1905, line: 80, type: !175, isLocal: false, isDefinition: true)
!2049 = !DIGlobalVariableExpression(var: !2050, expr: !DIExpression())
!2050 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !1904, file: !1905, line: 84, type: !1923, isLocal: false, isDefinition: true)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2052, size: 416, elements: !2068)
!2052 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !1908, line: 60, baseType: !2053)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1908, line: 45, size: 416, elements: !2054)
!2054 = !{!2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !2053, file: !1908, line: 46, baseType: !175, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !2053, file: !1908, line: 47, baseType: !175, size: 32, offset: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !2053, file: !1908, line: 48, baseType: !175, size: 32, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !2053, file: !1908, line: 49, baseType: !175, size: 32, offset: 96)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !2053, file: !1908, line: 50, baseType: !175, size: 32, offset: 128)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !2053, file: !1908, line: 51, baseType: !175, size: 32, offset: 160)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !2053, file: !1908, line: 52, baseType: !175, size: 32, offset: 192)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !2053, file: !1908, line: 53, baseType: !175, size: 32, offset: 224)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !2053, file: !1908, line: 54, baseType: !175, size: 32, offset: 256)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !2053, file: !1908, line: 55, baseType: !175, size: 32, offset: 288)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !2053, file: !1908, line: 56, baseType: !175, size: 32, offset: 320)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !2053, file: !1908, line: 57, baseType: !175, size: 32, offset: 352)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !2053, file: !1908, line: 58, baseType: !175, size: 32, offset: 384)
!2068 = !{!2069}
!2069 = !DISubrange(count: 1)
!2070 = !DIGlobalVariableExpression(var: !2071, expr: !DIExpression())
!2071 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !2072, file: !2073, line: 48, type: !2081, isLocal: false, isDefinition: true)
!2072 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2073, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2074, globals: !2080, splitDebugInlining: false, nameTableKind: None)
!2073 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!2074 = !{!2075}
!2075 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !899, line: 100, baseType: !7, size: 32, elements: !2076)
!2076 = !{!2077, !2078, !2079}
!2077 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!2078 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!2079 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!2080 = !{!2070}
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !899, line: 104, baseType: !2075)
!2082 = !DIGlobalVariableExpression(var: !2083, expr: !DIExpression())
!2083 = distinct !DIGlobalVariable(name: "gpt_port", scope: !2084, file: !2085, line: 48, type: !2105, isLocal: false, isDefinition: true)
!2084 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2085, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2086, retainedTypes: !2091, globals: !2092, splitDebugInlining: false, nameTableKind: None)
!2085 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!2086 = !{!549, !156, !595, !611, !617, !621, !266, !1827, !165, !2087}
!2087 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 857, baseType: !7, size: 32, elements: !2088)
!2088 = !{!2089, !2090}
!2089 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!2090 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!2091 = !{!194, !79}
!2092 = !{!2082, !2093, !2101, !2103}
!2093 = !DIGlobalVariableExpression(var: !2094, expr: !DIExpression())
!2094 = distinct !DIGlobalVariable(name: "current_time", scope: !2095, file: !2085, line: 139, type: !175, isLocal: true, isDefinition: true)
!2095 = distinct !DISubprogram(name: "gpt_callback", scope: !2085, file: !2085, line: 137, type: !227, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !2096)
!2096 = !{!2097, !2098, !2099}
!2097 = !DILocalVariable(name: "parameter", arg: 1, scope: !2095, file: !2085, line: 137, type: !194)
!2098 = !DILocalVariable(name: "duration_time", scope: !2095, file: !2085, line: 142, type: !175)
!2099 = !DILocalVariable(name: "ret", scope: !2095, file: !2085, line: 143, type: !2100)
!2100 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !166, line: 393, baseType: !1827)
!2101 = !DIGlobalVariableExpression(var: !2102, expr: !DIExpression())
!2102 = distinct !DIGlobalVariable(name: "last_time", scope: !2095, file: !2085, line: 140, type: !175, isLocal: true, isDefinition: true)
!2103 = !DIGlobalVariableExpression(var: !2104, expr: !DIExpression())
!2104 = distinct !DIGlobalVariable(name: "timeout_times", scope: !2095, file: !2085, line: 141, type: !175, isLocal: true, isDefinition: true)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !6, line: 854, baseType: !156)
!2106 = !DIGlobalVariableExpression(var: !2107, expr: !DIExpression())
!2107 = distinct !DIGlobalVariable(name: "heap_end", scope: !2108, file: !2109, line: 69, type: !2114, isLocal: true, isDefinition: true)
!2108 = distinct !DISubprogram(name: "_sbrk_r", scope: !2109, file: !2109, line: 66, type: !2110, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !2305)
!2109 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!2110 = !DISubroutineType(types: !2111)
!2111 = !{!2112, !2115, !2300}
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !2113, line: 123, baseType: !2114)
!2113 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 32)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !2117, line: 377, size: 1920, elements: !2118)
!2117 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!2118 = !{!2119, !2120, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2199, !2220, !2224, !2225, !2226, !2227, !2237, !2250, !2251, !2256, !2274, !2275, !2282, !2283, !2299}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !2116, file: !2117, line: 381, baseType: !79, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !2116, file: !2117, line: 386, baseType: !2121, size: 32, offset: 32)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 32)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !2117, line: 292, baseType: !2123)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !2117, line: 186, size: 832, elements: !2124)
!2124 = !{!2125, !2127, !2128, !2129, !2130, !2131, !2136, !2137, !2138, !2139, !2143, !2148, !2155, !2159, !2160, !2161, !2162, !2164, !2166, !2167, !2168, !2170, !2176, !2189}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !2123, file: !2117, line: 187, baseType: !2126, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !2123, file: !2117, line: 188, baseType: !79, size: 32, offset: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !2123, file: !2117, line: 189, baseType: !79, size: 32, offset: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2123, file: !2117, line: 190, baseType: !1358, size: 16, offset: 96)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !2123, file: !2117, line: 191, baseType: !1358, size: 16, offset: 112)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !2123, file: !2117, line: 192, baseType: !2132, size: 64, offset: 128)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !2117, line: 122, size: 64, elements: !2133)
!2133 = !{!2134, !2135}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !2132, file: !2117, line: 123, baseType: !2126, size: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !2132, file: !2117, line: 124, baseType: !79, size: 32, offset: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !2123, file: !2117, line: 193, baseType: !79, size: 32, offset: 192)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !2123, file: !2117, line: 196, baseType: !2115, size: 32, offset: 224)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !2123, file: !2117, line: 200, baseType: !194, size: 32, offset: 256)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !2123, file: !2117, line: 202, baseType: !2140, size: 32, offset: 288)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 32)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!79, !2115, !194, !2114, !79}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !2123, file: !2117, line: 204, baseType: !2144, size: 32, offset: 320)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 32)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{!79, !2115, !194, !2147, !79}
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !2123, file: !2117, line: 207, baseType: !2149, size: 32, offset: 352)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 32)
!2150 = !DISubroutineType(types: !2151)
!2151 = !{!2152, !2115, !194, !2152, !79}
!2152 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !2153, line: 116, baseType: !2154)
!2153 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!2154 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !2123, file: !2117, line: 208, baseType: !2156, size: 32, offset: 384)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 32)
!2157 = !DISubroutineType(types: !2158)
!2158 = !{!79, !2115, !194}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !2123, file: !2117, line: 211, baseType: !2132, size: 64, offset: 416)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !2123, file: !2117, line: 212, baseType: !2126, size: 32, offset: 480)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !2123, file: !2117, line: 213, baseType: !79, size: 32, offset: 512)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !2123, file: !2117, line: 216, baseType: !2163, size: 24, offset: 544)
!2163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 24, elements: !1243)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !2123, file: !2117, line: 217, baseType: !2165, size: 8, offset: 568)
!2165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 8, elements: !2068)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !2123, file: !2117, line: 220, baseType: !2132, size: 64, offset: 576)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !2123, file: !2117, line: 223, baseType: !79, size: 32, offset: 640)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2123, file: !2117, line: 224, baseType: !2169, size: 32, offset: 672)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !2153, line: 46, baseType: !2154)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2123, file: !2117, line: 231, baseType: !2171, size: 32, offset: 704)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !2117, line: 35, baseType: !2172)
!2172 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !2173, line: 34, baseType: !2174)
!2173 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 32)
!2175 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !2173, line: 33, flags: DIFlagFwdDecl)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !2123, file: !2117, line: 233, baseType: !2177, size: 64, offset: 736)
!2177 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !2153, line: 170, baseType: !2178)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2153, line: 162, size: 64, elements: !2179)
!2179 = !{!2180, !2181}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2178, file: !2153, line: 164, baseType: !79, size: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2178, file: !2153, line: 169, baseType: !2182, size: 32, offset: 32)
!2182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2178, file: !2153, line: 165, size: 32, elements: !2183)
!2183 = !{!2184, !2187}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2182, file: !2153, line: 167, baseType: !2185, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2186, line: 116, baseType: !79)
!2186 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2182, file: !2153, line: 168, baseType: !2188, size: 32)
!2188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 32, elements: !381)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2123, file: !2117, line: 234, baseType: !79, size: 32, offset: 800)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !2116, file: !2117, line: 386, baseType: !2121, size: 32, offset: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !2116, file: !2117, line: 386, baseType: !2121, size: 32, offset: 96)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !2116, file: !2117, line: 388, baseType: !79, size: 32, offset: 128)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !2116, file: !2117, line: 390, baseType: !2114, size: 32, offset: 160)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !2116, file: !2117, line: 392, baseType: !79, size: 32, offset: 192)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !2116, file: !2117, line: 394, baseType: !79, size: 32, offset: 224)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !2116, file: !2117, line: 395, baseType: !2197, size: 32, offset: 256)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 32)
!2198 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !2117, line: 45, flags: DIFlagFwdDecl)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !2116, file: !2117, line: 397, baseType: !2200, size: 32, offset: 288)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 32)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !2117, line: 349, size: 128, elements: !2202)
!2202 = !{!2203, !2216, !2217, !2218}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !2201, file: !2117, line: 352, baseType: !2204, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 32)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !2117, line: 52, size: 192, elements: !2206)
!2206 = !{!2207, !2208, !2209, !2210, !2211, !2212}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2205, file: !2117, line: 54, baseType: !2204, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !2205, file: !2117, line: 55, baseType: !79, size: 32, offset: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !2205, file: !2117, line: 55, baseType: !79, size: 32, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !2205, file: !2117, line: 55, baseType: !79, size: 32, offset: 96)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !2205, file: !2117, line: 55, baseType: !79, size: 32, offset: 128)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !2205, file: !2117, line: 56, baseType: !2213, size: 32, offset: 160)
!2213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2214, size: 32, elements: !2068)
!2214 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !2117, line: 22, baseType: !2215)
!2215 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !2201, file: !2117, line: 353, baseType: !79, size: 32, offset: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !2201, file: !2117, line: 354, baseType: !2204, size: 32, offset: 64)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !2201, file: !2117, line: 355, baseType: !2219, size: 32, offset: 96)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !2116, file: !2117, line: 399, baseType: !2221, size: 32, offset: 320)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 32)
!2222 = !DISubroutineType(types: !2223)
!2223 = !{null, !2115}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !2116, file: !2117, line: 401, baseType: !79, size: 32, offset: 352)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !2116, file: !2117, line: 404, baseType: !79, size: 32, offset: 384)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !2116, file: !2117, line: 405, baseType: !2114, size: 32, offset: 416)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !2116, file: !2117, line: 407, baseType: !2228, size: 32, offset: 448)
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 32)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !2117, line: 324, size: 192, elements: !2230)
!2230 = !{!2231, !2233, !2234, !2235}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !2229, file: !2117, line: 325, baseType: !2232, size: 48)
!2232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !954, size: 48, elements: !1243)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !2229, file: !2117, line: 326, baseType: !2232, size: 48, offset: 48)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !2229, file: !2117, line: 327, baseType: !954, size: 16, offset: 96)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !2229, file: !2117, line: 330, baseType: !2236, size: 64, offset: 128)
!2236 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !2116, file: !2117, line: 408, baseType: !2238, size: 32, offset: 480)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 32)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !2117, line: 60, size: 288, elements: !2240)
!2240 = !{!2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !2239, file: !2117, line: 62, baseType: !79, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !2239, file: !2117, line: 63, baseType: !79, size: 32, offset: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !2239, file: !2117, line: 64, baseType: !79, size: 32, offset: 64)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !2239, file: !2117, line: 65, baseType: !79, size: 32, offset: 96)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !2239, file: !2117, line: 66, baseType: !79, size: 32, offset: 128)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !2239, file: !2117, line: 67, baseType: !79, size: 32, offset: 160)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !2239, file: !2117, line: 68, baseType: !79, size: 32, offset: 192)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !2239, file: !2117, line: 69, baseType: !79, size: 32, offset: 224)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !2239, file: !2117, line: 70, baseType: !79, size: 32, offset: 256)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !2116, file: !2117, line: 409, baseType: !2114, size: 32, offset: 512)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !2116, file: !2117, line: 412, baseType: !2252, size: 32, offset: 544)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!2254 = !DISubroutineType(types: !2255)
!2255 = !{null, !79}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !2116, file: !2117, line: 416, baseType: !2257, size: 32, offset: 576)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 32)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !2117, line: 90, size: 1120, elements: !2259)
!2259 = !{!2260, !2261, !2262, !2265}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2258, file: !2117, line: 91, baseType: !2257, size: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !2258, file: !2117, line: 92, baseType: !79, size: 32, offset: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !2258, file: !2117, line: 93, baseType: !2263, size: 1024, offset: 64)
!2263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2264, size: 1024, elements: !248)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !2258, file: !2117, line: 94, baseType: !2266, size: 32, offset: 1088)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 32)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !2117, line: 79, size: 2112, elements: !2268)
!2268 = !{!2269, !2271, !2272, !2273}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !2267, file: !2117, line: 80, baseType: !2270, size: 1024)
!2270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 1024, elements: !248)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !2267, file: !2117, line: 81, baseType: !2270, size: 1024, offset: 1024)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !2267, file: !2117, line: 83, baseType: !2214, size: 32, offset: 2048)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !2267, file: !2117, line: 86, baseType: !2214, size: 32, offset: 2080)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !2116, file: !2117, line: 417, baseType: !2258, size: 1120, offset: 608)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !2116, file: !2117, line: 420, baseType: !2276, size: 96, offset: 1728)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !2117, line: 296, size: 96, elements: !2277)
!2277 = !{!2278, !2280, !2281}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2276, file: !2117, line: 298, baseType: !2279, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !2276, file: !2117, line: 299, baseType: !79, size: 32, offset: 32)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !2276, file: !2117, line: 300, baseType: !2121, size: 32, offset: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !2116, file: !2117, line: 421, baseType: !2121, size: 32, offset: 1824)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !2116, file: !2117, line: 422, baseType: !2284, size: 32, offset: 1856)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 32)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !2117, line: 359, size: 640, elements: !2286)
!2286 = !{!2287, !2288, !2289, !2290, !2291, !2293, !2294, !2295, !2296, !2297, !2298}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !2285, file: !2117, line: 362, baseType: !2114, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !2285, file: !2117, line: 363, baseType: !2177, size: 64, offset: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !2285, file: !2117, line: 364, baseType: !2177, size: 64, offset: 96)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !2285, file: !2117, line: 365, baseType: !2177, size: 64, offset: 160)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !2285, file: !2117, line: 366, baseType: !2292, size: 64, offset: 224)
!2292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1400, size: 64, elements: !671)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !2285, file: !2117, line: 367, baseType: !79, size: 32, offset: 288)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !2285, file: !2117, line: 368, baseType: !2177, size: 64, offset: 320)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !2285, file: !2117, line: 369, baseType: !2177, size: 64, offset: 384)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !2285, file: !2117, line: 370, baseType: !2177, size: 64, offset: 448)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !2285, file: !2117, line: 371, baseType: !2177, size: 64, offset: 512)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !2285, file: !2117, line: 372, baseType: !2177, size: 64, offset: 576)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !2116, file: !2117, line: 423, baseType: !2114, size: 32, offset: 1888)
!2300 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2186, line: 46, baseType: !7)
!2301 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2302, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2303, globals: !2304, splitDebugInlining: false, nameTableKind: None)
!2302 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!2303 = !{!2114, !2112}
!2304 = !{!2106}
!2305 = !{!2306, !2307, !2308, !2309}
!2306 = !DILocalVariable(name: "r", arg: 1, scope: !2108, file: !2109, line: 66, type: !2115)
!2307 = !DILocalVariable(name: "nbytes", arg: 2, scope: !2108, file: !2109, line: 66, type: !2300)
!2308 = !DILocalVariable(name: "prev_heap_end", scope: !2108, file: !2109, line: 70, type: !2114)
!2309 = !DILocalVariable(name: "stack", scope: !2108, file: !2109, line: 71, type: !2114)
!2310 = !DIGlobalVariableExpression(var: !2311, expr: !DIExpression())
!2311 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !2312, file: !2313, line: 52, type: !184, isLocal: true, isDefinition: true)
!2312 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2313, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2314, globals: !2424, splitDebugInlining: false, nameTableKind: None)
!2313 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!2314 = !{!2315, !2323, !175, !2368, !2373, !2398}
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !796, line: 656, baseType: !2317)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 650, size: 128, elements: !2318)
!2318 = !{!2319, !2320, !2321, !2322}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2317, file: !796, line: 652, baseType: !184, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2317, file: !796, line: 653, baseType: !184, size: 32, offset: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2317, file: !796, line: 654, baseType: !184, size: 32, offset: 64)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2317, file: !796, line: 655, baseType: !188, size: 32, offset: 96)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 32)
!2324 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !78, line: 1952, baseType: !2325)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1921, size: 8288, elements: !2326)
!2326 = !{!2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2337, !2338, !2342, !2343, !2345, !2346, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2365, !2366, !2367}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !2325, file: !78, line: 1922, baseType: !184, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !2325, file: !78, line: 1923, baseType: !184, size: 32, offset: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !2325, file: !78, line: 1924, baseType: !184, size: 32, offset: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !2325, file: !78, line: 1925, baseType: !184, size: 32, offset: 96)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !2325, file: !78, line: 1926, baseType: !184, size: 32, offset: 128)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !2325, file: !78, line: 1927, baseType: !184, size: 32, offset: 160)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !2325, file: !78, line: 1928, baseType: !184, size: 32, offset: 192)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !2325, file: !78, line: 1929, baseType: !184, size: 32, offset: 224)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !2325, file: !78, line: 1930, baseType: !2336, size: 768, offset: 256)
!2336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 768, elements: !836)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !2325, file: !78, line: 1931, baseType: !184, size: 32, offset: 1024)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !2325, file: !78, line: 1932, baseType: !2339, size: 992, offset: 1056)
!2339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 992, elements: !2340)
!2340 = !{!2341}
!2341 = !DISubrange(count: 31)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !2325, file: !78, line: 1933, baseType: !184, size: 32, offset: 2048)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !2325, file: !78, line: 1934, baseType: !2344, size: 416, offset: 2080)
!2344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 416, elements: !691)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !2325, file: !78, line: 1935, baseType: !184, size: 32, offset: 2496)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !2325, file: !78, line: 1936, baseType: !2347, size: 1568, offset: 2528)
!2347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 1568, elements: !2348)
!2348 = !{!2349}
!2349 = !DISubrange(count: 49)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !2325, file: !78, line: 1937, baseType: !188, size: 32, offset: 4096)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !2325, file: !78, line: 1938, baseType: !188, size: 32, offset: 4128)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !2325, file: !78, line: 1939, baseType: !188, size: 32, offset: 4160)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !2325, file: !78, line: 1940, baseType: !184, size: 32, offset: 4192)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !2325, file: !78, line: 1941, baseType: !184, size: 32, offset: 4224)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !2325, file: !78, line: 1942, baseType: !184, size: 32, offset: 4256)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !2325, file: !78, line: 1943, baseType: !184, size: 32, offset: 4288)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !2325, file: !78, line: 1944, baseType: !184, size: 32, offset: 4320)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !2325, file: !78, line: 1945, baseType: !184, size: 32, offset: 4352)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !2325, file: !78, line: 1946, baseType: !184, size: 32, offset: 4384)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !2325, file: !78, line: 1947, baseType: !184, size: 32, offset: 4416)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !2325, file: !78, line: 1948, baseType: !2362, size: 3744, offset: 4448)
!2362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 3744, elements: !2363)
!2363 = !{!2364}
!2364 = !DISubrange(count: 117)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !2325, file: !78, line: 1949, baseType: !184, size: 32, offset: 8192)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !2325, file: !78, line: 1950, baseType: !184, size: 32, offset: 8224)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !2325, file: !78, line: 1951, baseType: !188, size: 32, offset: 8256)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !78, line: 2158, baseType: !2370)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 2156, size: 32, elements: !2371)
!2371 = !{!2372}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !2370, file: !78, line: 2157, baseType: !184, size: 32)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !796, line: 418, baseType: !2375)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 395, size: 1120, elements: !2376)
!2376 = !{!2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2375, file: !796, line: 397, baseType: !188, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2375, file: !796, line: 398, baseType: !184, size: 32, offset: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2375, file: !796, line: 399, baseType: !184, size: 32, offset: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2375, file: !796, line: 400, baseType: !184, size: 32, offset: 96)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2375, file: !796, line: 401, baseType: !184, size: 32, offset: 128)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2375, file: !796, line: 402, baseType: !184, size: 32, offset: 160)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2375, file: !796, line: 403, baseType: !806, size: 96, offset: 192)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2375, file: !796, line: 404, baseType: !184, size: 32, offset: 288)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2375, file: !796, line: 405, baseType: !184, size: 32, offset: 320)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2375, file: !796, line: 406, baseType: !184, size: 32, offset: 352)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2375, file: !796, line: 407, baseType: !184, size: 32, offset: 384)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2375, file: !796, line: 408, baseType: !184, size: 32, offset: 416)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2375, file: !796, line: 409, baseType: !184, size: 32, offset: 448)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2375, file: !796, line: 410, baseType: !184, size: 32, offset: 480)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2375, file: !796, line: 411, baseType: !816, size: 64, offset: 512)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2375, file: !796, line: 412, baseType: !188, size: 32, offset: 576)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2375, file: !796, line: 413, baseType: !188, size: 32, offset: 608)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2375, file: !796, line: 414, baseType: !820, size: 128, offset: 640)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2375, file: !796, line: 415, baseType: !822, size: 160, offset: 768)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2375, file: !796, line: 416, baseType: !826, size: 160, offset: 928)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2375, file: !796, line: 417, baseType: !184, size: 32, offset: 1088)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !78, line: 276, baseType: !2400)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 260, size: 525312, elements: !2401)
!2401 = !{!2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2414, !2415, !2419, !2423}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !2400, file: !78, line: 261, baseType: !184, size: 32)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !2400, file: !78, line: 262, baseType: !184, size: 32, offset: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !2400, file: !78, line: 263, baseType: !184, size: 32, offset: 64)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !2400, file: !78, line: 264, baseType: !184, size: 32, offset: 96)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !2400, file: !78, line: 265, baseType: !184, size: 32, offset: 128)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !2400, file: !78, line: 266, baseType: !184, size: 32, offset: 160)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !2400, file: !78, line: 267, baseType: !184, size: 32, offset: 192)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !2400, file: !78, line: 268, baseType: !184, size: 32, offset: 224)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !2400, file: !78, line: 269, baseType: !184, size: 32, offset: 256)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !2400, file: !78, line: 270, baseType: !184, size: 32, offset: 288)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2400, file: !78, line: 271, baseType: !2413, size: 32, offset: 320)
!2413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 32, elements: !2068)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !2400, file: !78, line: 272, baseType: !184, size: 32, offset: 352)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2400, file: !78, line: 273, baseType: !2416, size: 523904, offset: 384)
!2416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 523904, elements: !2417)
!2417 = !{!2418}
!2418 = !DISubrange(count: 16372)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !2400, file: !78, line: 274, baseType: !2420, size: 512, offset: 524288)
!2420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 512, elements: !2421)
!2421 = !{!2422}
!2422 = !DISubrange(count: 16)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !2400, file: !78, line: 275, baseType: !2420, size: 512, offset: 524800)
!2424 = !{!2425, !2310}
!2425 = !DIGlobalVariableExpression(var: !2426, expr: !DIExpression())
!2426 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2312, file: !2313, line: 50, type: !175, isLocal: false, isDefinition: true)
!2427 = !DIGlobalVariableExpression(var: !2428, expr: !DIExpression())
!2428 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2429, file: !2434, line: 4, type: !2440, isLocal: false, isDefinition: true)
!2429 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2430, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2431, splitDebugInlining: false, nameTableKind: None)
!2430 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!2431 = !{!2427, !2432, !2438}
!2432 = !DIGlobalVariableExpression(var: !2433, expr: !DIExpression())
!2433 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2429, file: !2434, line: 5, type: !2435, isLocal: false, isDefinition: true)
!2434 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!2435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1400, size: 88, elements: !2436)
!2436 = !{!2437}
!2437 = !DISubrange(count: 11)
!2438 = !DIGlobalVariableExpression(var: !2439, expr: !DIExpression())
!2439 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2429, file: !2434, line: 6, type: !2435, isLocal: false, isDefinition: true)
!2440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1400, size: 248, elements: !2340)
!2441 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2442, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2443, retainedTypes: !2462, splitDebugInlining: false, nameTableKind: None)
!2442 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!2443 = !{!1827, !156, !170, !2087, !2444, !165, !66}
!2444 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !67, line: 87, baseType: !7, size: 32, elements: !2445)
!2445 = !{!2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461}
!2446 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!2447 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!2448 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!2449 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!2450 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!2451 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!2452 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!2453 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!2454 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!2455 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!2456 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!2457 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!2458 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!2459 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!2460 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!2461 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!2462 = !{!175, !194, !225}
!2463 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2464, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2465, retainedTypes: !2466, splitDebugInlining: false, nameTableKind: None)
!2464 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!2465 = !{!611, !617, !621, !704}
!2466 = !{!378}
!2467 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2468, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2469, retainedTypes: !2470, splitDebugInlining: false, nameTableKind: None)
!2468 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!2469 = !{!77, !633}
!2470 = !{!780, !2471, !175, !2496, !858}
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !796, line: 418, baseType: !2473)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 395, size: 1120, elements: !2474)
!2474 = !{!2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2473, file: !796, line: 397, baseType: !188, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2473, file: !796, line: 398, baseType: !184, size: 32, offset: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2473, file: !796, line: 399, baseType: !184, size: 32, offset: 64)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2473, file: !796, line: 400, baseType: !184, size: 32, offset: 96)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2473, file: !796, line: 401, baseType: !184, size: 32, offset: 128)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2473, file: !796, line: 402, baseType: !184, size: 32, offset: 160)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2473, file: !796, line: 403, baseType: !806, size: 96, offset: 192)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2473, file: !796, line: 404, baseType: !184, size: 32, offset: 288)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2473, file: !796, line: 405, baseType: !184, size: 32, offset: 320)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2473, file: !796, line: 406, baseType: !184, size: 32, offset: 352)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2473, file: !796, line: 407, baseType: !184, size: 32, offset: 384)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2473, file: !796, line: 408, baseType: !184, size: 32, offset: 416)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2473, file: !796, line: 409, baseType: !184, size: 32, offset: 448)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2473, file: !796, line: 410, baseType: !184, size: 32, offset: 480)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2473, file: !796, line: 411, baseType: !816, size: 64, offset: 512)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2473, file: !796, line: 412, baseType: !188, size: 32, offset: 576)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2473, file: !796, line: 413, baseType: !188, size: 32, offset: 608)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2473, file: !796, line: 414, baseType: !820, size: 128, offset: 640)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2473, file: !796, line: 415, baseType: !822, size: 160, offset: 768)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2473, file: !796, line: 416, baseType: !826, size: 160, offset: 928)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2473, file: !796, line: 417, baseType: !184, size: 32, offset: 1088)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !796, line: 378, baseType: !2498)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 363, size: 28704, elements: !2499)
!2499 = !{!2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2498, file: !796, line: 365, baseType: !833, size: 256)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2498, file: !796, line: 366, baseType: !835, size: 768, offset: 256)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2498, file: !796, line: 367, baseType: !833, size: 256, offset: 1024)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !2498, file: !796, line: 368, baseType: !835, size: 768, offset: 1280)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2498, file: !796, line: 369, baseType: !833, size: 256, offset: 2048)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2498, file: !796, line: 370, baseType: !835, size: 768, offset: 2304)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2498, file: !796, line: 371, baseType: !833, size: 256, offset: 3072)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2498, file: !796, line: 372, baseType: !835, size: 768, offset: 3328)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2498, file: !796, line: 373, baseType: !833, size: 256, offset: 4096)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2498, file: !796, line: 374, baseType: !846, size: 1792, offset: 4352)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2498, file: !796, line: 375, baseType: !850, size: 1920, offset: 6144)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2498, file: !796, line: 376, baseType: !854, size: 20608, offset: 8064)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2498, file: !796, line: 377, baseType: !184, size: 32, offset: 28672)
!2513 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2514, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2514 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!2515 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2516, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2516 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!2517 = !{!"Ubuntu clang version 14.0.6"}
!2518 = !{i32 7, !"Dwarf Version", i32 2}
!2519 = !{i32 2, !"Debug Info Version", i32 3}
!2520 = !{i32 1, !"wchar_size", i32 4}
!2521 = !{i32 1, !"min_enum_size", i32 4}
!2522 = !{i32 1, !"branch-target-enforcement", i32 0}
!2523 = !{i32 1, !"sign-return-address", i32 0}
!2524 = !{i32 1, !"sign-return-address-all", i32 0}
!2525 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2526 = !{i32 7, !"frame-pointer", i32 2}
!2527 = distinct !DISubprogram(name: "hal_gpt_init", scope: !2442, file: !2442, line: 95, type: !2528, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2530)
!2528 = !DISubroutineType(types: !2529)
!2529 = !{!2100, !2105}
!2530 = !{!2531}
!2531 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2527, file: !2442, line: 95, type: !2105)
!2532 = !DILocation(line: 0, scope: !2527)
!2533 = !DILocation(line: 98, column: 9, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2527, file: !2442, line: 98, column: 9)
!2535 = !DILocation(line: 98, column: 9, scope: !2527)
!2536 = !DILocation(line: 102, column: 10, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2527, file: !2442, line: 102, column: 9)
!2538 = !DILocation(line: 102, column: 34, scope: !2537)
!2539 = !DILocation(line: 102, column: 49, scope: !2537)
!2540 = !DILocation(line: 102, column: 69, scope: !2537)
!2541 = !DILocation(line: 103, column: 38, scope: !2537)
!2542 = !{i8 0, i8 2}
!2543 = !DILocation(line: 102, column: 9, scope: !2527)
!2544 = !DILocation(line: 109, column: 12, scope: !2527)
!2545 = !DILocation(line: 109, column: 5, scope: !2527)
!2546 = !DILocation(line: 112, column: 5, scope: !2527)
!2547 = !DILocation(line: 115, column: 44, scope: !2527)
!2548 = !DILocation(line: 118, column: 5, scope: !2527)
!2549 = !DILocation(line: 118, column: 23, scope: !2527)
!2550 = !DILocation(line: 118, column: 35, scope: !2527)
!2551 = !DILocation(line: 121, column: 42, scope: !2527)
!2552 = !DILocation(line: 121, column: 38, scope: !2527)
!2553 = !DILocation(line: 121, column: 5, scope: !2527)
!2554 = !DILocation(line: 121, column: 17, scope: !2527)
!2555 = !DILocation(line: 121, column: 35, scope: !2527)
!2556 = !DILocation(line: 129, column: 5, scope: !2527)
!2557 = !DILocation(line: 131, column: 1, scope: !2527)
!2558 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !2442, file: !2442, line: 81, type: !2559, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2561)
!2559 = !DISubroutineType(types: !2560)
!2560 = !{!211, !2105}
!2561 = !{!2562}
!2562 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2558, file: !2442, line: 81, type: !2105)
!2563 = !DILocation(line: 0, scope: !2558)
!2564 = !DILocation(line: 84, column: 25, scope: !2565)
!2565 = distinct !DILexicalBlock(scope: !2558, file: !2442, line: 84, column: 9)
!2566 = !DILocation(line: 84, column: 35, scope: !2565)
!2567 = !DILocation(line: 84, column: 45, scope: !2565)
!2568 = !DILocation(line: 93, column: 1, scope: !2558)
!2569 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !2442, file: !2442, line: 133, type: !2528, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2570)
!2570 = !{!2571}
!2571 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2569, file: !2442, line: 133, type: !2105)
!2572 = !DILocation(line: 0, scope: !2569)
!2573 = !DILocation(line: 136, column: 9, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !2569, file: !2442, line: 136, column: 9)
!2575 = !DILocation(line: 136, column: 9, scope: !2569)
!2576 = !DILocation(line: 140, column: 9, scope: !2577)
!2577 = distinct !DILexicalBlock(scope: !2569, file: !2442, line: 140, column: 9)
!2578 = !DILocation(line: 140, column: 33, scope: !2577)
!2579 = !DILocation(line: 140, column: 48, scope: !2577)
!2580 = !DILocation(line: 140, column: 9, scope: !2569)
!2581 = !DILocation(line: 146, column: 12, scope: !2569)
!2582 = !DILocation(line: 146, column: 5, scope: !2569)
!2583 = !DILocation(line: 149, column: 29, scope: !2569)
!2584 = !DILocation(line: 149, column: 44, scope: !2569)
!2585 = !DILocation(line: 151, column: 29, scope: !2569)
!2586 = !DILocation(line: 151, column: 5, scope: !2569)
!2587 = !DILocation(line: 159, column: 5, scope: !2569)
!2588 = !DILocation(line: 160, column: 1, scope: !2569)
!2589 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !2442, file: !2442, line: 163, type: !2590, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2593)
!2590 = !DISubroutineType(types: !2591)
!2591 = !{!2100, !2592, !920}
!2592 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !6, line: 860, baseType: !2087)
!2593 = !{!2594, !2595}
!2594 = !DILocalVariable(name: "clock_source", arg: 1, scope: !2589, file: !2442, line: 163, type: !2592)
!2595 = !DILocalVariable(name: "count", arg: 2, scope: !2589, file: !2442, line: 163, type: !920)
!2596 = !DILocation(line: 0, scope: !2589)
!2597 = !DILocation(line: 166, column: 9, scope: !2589)
!2598 = !DILocation(line: 167, column: 44, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !2600, file: !2442, line: 167, column: 13)
!2600 = distinct !DILexicalBlock(scope: !2601, file: !2442, line: 166, column: 51)
!2601 = distinct !DILexicalBlock(scope: !2589, file: !2442, line: 166, column: 9)
!2602 = !DILocation(line: 167, column: 59, scope: !2599)
!2603 = !DILocation(line: 167, column: 13, scope: !2600)
!2604 = !DILocation(line: 170, column: 38, scope: !2605)
!2605 = distinct !DILexicalBlock(scope: !2599, file: !2442, line: 167, column: 79)
!2606 = !DILocation(line: 170, column: 13, scope: !2605)
!2607 = !DILocation(line: 172, column: 59, scope: !2605)
!2608 = !DILocation(line: 173, column: 9, scope: !2605)
!2609 = !DILocation(line: 175, column: 36, scope: !2600)
!2610 = !DILocation(line: 175, column: 18, scope: !2600)
!2611 = !DILocation(line: 177, column: 5, scope: !2600)
!2612 = !DILocation(line: 179, column: 44, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !2614, file: !2442, line: 179, column: 13)
!2614 = distinct !DILexicalBlock(scope: !2615, file: !2442, line: 178, column: 55)
!2615 = distinct !DILexicalBlock(scope: !2601, file: !2442, line: 178, column: 14)
!2616 = !DILocation(line: 179, column: 59, scope: !2613)
!2617 = !DILocation(line: 179, column: 13, scope: !2614)
!2618 = !DILocation(line: 182, column: 38, scope: !2619)
!2619 = distinct !DILexicalBlock(scope: !2613, file: !2442, line: 179, column: 79)
!2620 = !DILocation(line: 182, column: 13, scope: !2619)
!2621 = !DILocation(line: 184, column: 59, scope: !2619)
!2622 = !DILocation(line: 186, column: 9, scope: !2619)
!2623 = !DILocation(line: 188, column: 68, scope: !2614)
!2624 = !DILocation(line: 188, column: 50, scope: !2614)
!2625 = !DILocation(line: 188, column: 18, scope: !2614)
!2626 = !DILocation(line: 0, scope: !2601)
!2627 = !DILocation(line: 193, column: 5, scope: !2589)
!2628 = !DILocation(line: 194, column: 1, scope: !2589)
!2629 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !2442, file: !2442, line: 196, type: !2630, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2632)
!2630 = !DISubroutineType(types: !2631)
!2631 = !{!2100, !175, !175, !920}
!2632 = !{!2633, !2634, !2635}
!2633 = !DILocalVariable(name: "start_count", arg: 1, scope: !2629, file: !2442, line: 196, type: !175)
!2634 = !DILocalVariable(name: "end_count", arg: 2, scope: !2629, file: !2442, line: 196, type: !175)
!2635 = !DILocalVariable(name: "duration_count", arg: 3, scope: !2629, file: !2442, line: 196, type: !920)
!2636 = !DILocation(line: 0, scope: !2629)
!2637 = !DILocation(line: 198, column: 24, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2629, file: !2442, line: 198, column: 9)
!2639 = !DILocation(line: 198, column: 9, scope: !2629)
!2640 = !DILocation(line: 0, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2629, file: !2442, line: 202, column: 9)
!2642 = !DILocation(line: 208, column: 5, scope: !2629)
!2643 = !DILocation(line: 209, column: 1, scope: !2629)
!2644 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !2442, file: !2442, line: 211, type: !2645, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2648)
!2645 = !DISubroutineType(types: !2646)
!2646 = !{!2100, !2105, !2647}
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 32)
!2648 = !{!2649, !2650}
!2649 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2644, file: !2442, line: 211, type: !2105)
!2650 = !DILocalVariable(name: "running_status", arg: 2, scope: !2644, file: !2442, line: 211, type: !2647)
!2651 = !DILocation(line: 0, scope: !2644)
!2652 = !DILocation(line: 213, column: 18, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2644, file: !2442, line: 213, column: 9)
!2654 = !DILocation(line: 213, column: 9, scope: !2644)
!2655 = !DILocation(line: 217, column: 47, scope: !2644)
!2656 = !DILocation(line: 217, column: 21, scope: !2644)
!2657 = !DILocation(line: 219, column: 5, scope: !2644)
!2658 = !DILocation(line: 220, column: 1, scope: !2644)
!2659 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !2442, file: !2442, line: 222, type: !2660, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2662)
!2660 = !DISubroutineType(types: !2661)
!2661 = !{!2100, !2105, !225, !194}
!2662 = !{!2663, !2664, !2665}
!2663 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2659, file: !2442, line: 222, type: !2105)
!2664 = !DILocalVariable(name: "callback", arg: 2, scope: !2659, file: !2442, line: 223, type: !225)
!2665 = !DILocalVariable(name: "user_data", arg: 3, scope: !2659, file: !2442, line: 224, type: !194)
!2666 = !DILocation(line: 0, scope: !2659)
!2667 = !DILocation(line: 227, column: 9, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2659, file: !2442, line: 227, column: 9)
!2669 = !DILocation(line: 227, column: 9, scope: !2659)
!2670 = !DILocation(line: 231, column: 34, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2659, file: !2442, line: 231, column: 9)
!2672 = !DILocation(line: 231, column: 49, scope: !2671)
!2673 = !DILocation(line: 231, column: 69, scope: !2671)
!2674 = !DILocation(line: 232, column: 38, scope: !2671)
!2675 = !DILocation(line: 232, column: 53, scope: !2671)
!2676 = !DILocation(line: 231, column: 9, scope: !2659)
!2677 = !DILocation(line: 237, column: 18, scope: !2678)
!2678 = distinct !DILexicalBlock(scope: !2659, file: !2442, line: 237, column: 9)
!2679 = !DILocation(line: 237, column: 9, scope: !2659)
!2680 = !DILocation(line: 245, column: 46, scope: !2659)
!2681 = !DILocation(line: 245, column: 56, scope: !2659)
!2682 = !DILocation(line: 246, column: 46, scope: !2659)
!2683 = !DILocation(line: 246, column: 56, scope: !2659)
!2684 = !DILocation(line: 248, column: 5, scope: !2659)
!2685 = !DILocation(line: 250, column: 5, scope: !2659)
!2686 = !DILocation(line: 252, column: 1, scope: !2659)
!2687 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !2442, file: !2442, line: 256, type: !2688, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2691)
!2688 = !DISubroutineType(types: !2689)
!2689 = !{!2100, !2105, !175, !2690}
!2690 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !166, line: 383, baseType: !165)
!2691 = !{!2692, !2693, !2694, !2695}
!2692 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2687, file: !2442, line: 256, type: !2105)
!2693 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !2687, file: !2442, line: 256, type: !175)
!2694 = !DILocalVariable(name: "timer_type", arg: 3, scope: !2687, file: !2442, line: 256, type: !2690)
!2695 = !DILocalVariable(name: "mask", scope: !2687, file: !2442, line: 259, type: !184)
!2696 = !DILocation(line: 0, scope: !2687)
!2697 = !DILocation(line: 259, column: 5, scope: !2687)
!2698 = !DILocation(line: 259, column: 23, scope: !2687)
!2699 = !DILocation(line: 261, column: 9, scope: !2700)
!2700 = distinct !DILexicalBlock(scope: !2687, file: !2442, line: 261, column: 9)
!2701 = !DILocation(line: 261, column: 9, scope: !2687)
!2702 = !DILocation(line: 265, column: 34, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2687, file: !2442, line: 265, column: 9)
!2704 = !DILocation(line: 265, column: 49, scope: !2703)
!2705 = !DILocation(line: 266, column: 13, scope: !2703)
!2706 = !DILocation(line: 266, column: 41, scope: !2703)
!2707 = !DILocation(line: 266, column: 56, scope: !2703)
!2708 = !DILocation(line: 265, column: 9, scope: !2687)
!2709 = !DILocation(line: 271, column: 25, scope: !2710)
!2710 = distinct !DILexicalBlock(scope: !2687, file: !2442, line: 271, column: 9)
!2711 = !DILocation(line: 271, column: 9, scope: !2687)
!2712 = !DILocation(line: 282, column: 12, scope: !2687)
!2713 = !DILocation(line: 282, column: 10, scope: !2687)
!2714 = !DILocation(line: 284, column: 5, scope: !2687)
!2715 = !DILocation(line: 286, column: 5, scope: !2687)
!2716 = !DILocation(line: 286, column: 23, scope: !2687)
!2717 = !DILocation(line: 286, column: 34, scope: !2687)
!2718 = !DILocation(line: 287, column: 5, scope: !2687)
!2719 = !DILocation(line: 287, column: 23, scope: !2687)
!2720 = !DILocation(line: 287, column: 34, scope: !2687)
!2721 = !DILocation(line: 290, column: 5, scope: !2687)
!2722 = !DILocation(line: 290, column: 23, scope: !2687)
!2723 = !DILocation(line: 290, column: 37, scope: !2687)
!2724 = !DILocation(line: 291, column: 39, scope: !2687)
!2725 = !DILocation(line: 291, column: 5, scope: !2687)
!2726 = !DILocation(line: 291, column: 23, scope: !2687)
!2727 = !DILocation(line: 291, column: 37, scope: !2687)
!2728 = !DILocation(line: 292, column: 5, scope: !2687)
!2729 = !DILocation(line: 292, column: 23, scope: !2687)
!2730 = !DILocation(line: 292, column: 37, scope: !2687)
!2731 = !DILocation(line: 297, column: 47, scope: !2687)
!2732 = !DILocation(line: 298, column: 33, scope: !2687)
!2733 = !DILocation(line: 296, column: 5, scope: !2687)
!2734 = !DILocation(line: 296, column: 23, scope: !2687)
!2735 = !DILocation(line: 296, column: 31, scope: !2687)
!2736 = !DILocation(line: 300, column: 5, scope: !2687)
!2737 = !DILocation(line: 300, column: 29, scope: !2687)
!2738 = distinct !{!2738, !2736, !2739}
!2739 = !DILocation(line: 300, column: 39, scope: !2687)
!2740 = !DILocation(line: 301, column: 23, scope: !2687)
!2741 = !DILocation(line: 301, column: 33, scope: !2687)
!2742 = !DILocation(line: 302, column: 5, scope: !2687)
!2743 = !DILocation(line: 302, column: 23, scope: !2687)
!2744 = !DILocation(line: 302, column: 34, scope: !2687)
!2745 = !DILocation(line: 303, column: 44, scope: !2687)
!2746 = !DILocation(line: 305, column: 28, scope: !2687)
!2747 = !DILocation(line: 305, column: 5, scope: !2687)
!2748 = !DILocation(line: 306, column: 5, scope: !2687)
!2749 = !DILocation(line: 307, column: 1, scope: !2687)
!2750 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !2442, file: !2442, line: 310, type: !2751, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2753)
!2751 = !DISubroutineType(types: !2752)
!2752 = !{!2100, !175}
!2753 = !{!2754}
!2754 = !DILocalVariable(name: "ms", arg: 1, scope: !2750, file: !2442, line: 310, type: !175)
!2755 = !DILocation(line: 0, scope: !2750)
!2756 = !DILocation(line: 313, column: 40, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2750, file: !2442, line: 313, column: 9)
!2758 = !DILocation(line: 313, column: 55, scope: !2757)
!2759 = !DILocation(line: 313, column: 9, scope: !2750)
!2760 = !DILocation(line: 316, column: 34, scope: !2761)
!2761 = distinct !DILexicalBlock(scope: !2757, file: !2442, line: 313, column: 75)
!2762 = !DILocation(line: 316, column: 9, scope: !2761)
!2763 = !DILocation(line: 317, column: 55, scope: !2761)
!2764 = !DILocation(line: 318, column: 5, scope: !2761)
!2765 = !DILocation(line: 320, column: 20, scope: !2750)
!2766 = !DILocation(line: 320, column: 45, scope: !2750)
!2767 = !DILocation(line: 320, column: 5, scope: !2750)
!2768 = !DILocation(line: 322, column: 5, scope: !2750)
!2769 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !2442, file: !2442, line: 327, type: !2688, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2770)
!2770 = !{!2771, !2772, !2773, !2774}
!2771 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2769, file: !2442, line: 327, type: !2105)
!2772 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !2769, file: !2442, line: 327, type: !175)
!2773 = !DILocalVariable(name: "timer_type", arg: 3, scope: !2769, file: !2442, line: 327, type: !2690)
!2774 = !DILocalVariable(name: "mask", scope: !2769, file: !2442, line: 329, type: !184)
!2775 = !DILocation(line: 0, scope: !2769)
!2776 = !DILocation(line: 329, column: 5, scope: !2769)
!2777 = !DILocation(line: 329, column: 23, scope: !2769)
!2778 = !DILocation(line: 331, column: 9, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2769, file: !2442, line: 331, column: 9)
!2780 = !DILocation(line: 331, column: 9, scope: !2769)
!2781 = !DILocation(line: 336, column: 34, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2769, file: !2442, line: 336, column: 9)
!2783 = !DILocation(line: 336, column: 49, scope: !2782)
!2784 = !DILocation(line: 337, column: 13, scope: !2782)
!2785 = !DILocation(line: 337, column: 41, scope: !2782)
!2786 = !DILocation(line: 337, column: 56, scope: !2782)
!2787 = !DILocation(line: 336, column: 9, scope: !2769)
!2788 = !DILocation(line: 349, column: 29, scope: !2769)
!2789 = !DILocation(line: 349, column: 49, scope: !2769)
!2790 = !DILocation(line: 351, column: 12, scope: !2769)
!2791 = !DILocation(line: 351, column: 10, scope: !2769)
!2792 = !DILocation(line: 353, column: 5, scope: !2769)
!2793 = !DILocation(line: 355, column: 5, scope: !2769)
!2794 = !DILocation(line: 355, column: 23, scope: !2769)
!2795 = !DILocation(line: 355, column: 34, scope: !2769)
!2796 = !DILocation(line: 356, column: 5, scope: !2769)
!2797 = !DILocation(line: 356, column: 23, scope: !2769)
!2798 = !DILocation(line: 356, column: 34, scope: !2769)
!2799 = !DILocation(line: 359, column: 5, scope: !2769)
!2800 = !DILocation(line: 359, column: 23, scope: !2769)
!2801 = !DILocation(line: 359, column: 37, scope: !2769)
!2802 = !DILocation(line: 360, column: 39, scope: !2769)
!2803 = !DILocation(line: 360, column: 5, scope: !2769)
!2804 = !DILocation(line: 360, column: 23, scope: !2769)
!2805 = !DILocation(line: 360, column: 37, scope: !2769)
!2806 = !DILocation(line: 361, column: 5, scope: !2769)
!2807 = !DILocation(line: 361, column: 23, scope: !2769)
!2808 = !DILocation(line: 361, column: 37, scope: !2769)
!2809 = !DILocation(line: 366, column: 47, scope: !2769)
!2810 = !DILocation(line: 367, column: 33, scope: !2769)
!2811 = !DILocation(line: 365, column: 5, scope: !2769)
!2812 = !DILocation(line: 365, column: 23, scope: !2769)
!2813 = !DILocation(line: 365, column: 31, scope: !2769)
!2814 = !DILocation(line: 369, column: 5, scope: !2769)
!2815 = !DILocation(line: 369, column: 29, scope: !2769)
!2816 = distinct !{!2816, !2814, !2817}
!2817 = !DILocation(line: 369, column: 39, scope: !2769)
!2818 = !DILocation(line: 370, column: 23, scope: !2769)
!2819 = !DILocation(line: 370, column: 33, scope: !2769)
!2820 = !DILocation(line: 371, column: 5, scope: !2769)
!2821 = !DILocation(line: 371, column: 23, scope: !2769)
!2822 = !DILocation(line: 371, column: 34, scope: !2769)
!2823 = !DILocation(line: 373, column: 28, scope: !2769)
!2824 = !DILocation(line: 373, column: 5, scope: !2769)
!2825 = !DILocation(line: 375, column: 44, scope: !2769)
!2826 = !DILocation(line: 377, column: 5, scope: !2769)
!2827 = !DILocation(line: 378, column: 1, scope: !2769)
!2828 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !2442, file: !2442, line: 382, type: !2751, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2829)
!2829 = !{!2830}
!2830 = !DILocalVariable(name: "us", arg: 1, scope: !2828, file: !2442, line: 382, type: !175)
!2831 = !DILocation(line: 0, scope: !2828)
!2832 = !DILocation(line: 385, column: 40, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2828, file: !2442, line: 385, column: 9)
!2834 = !DILocation(line: 385, column: 55, scope: !2833)
!2835 = !DILocation(line: 385, column: 9, scope: !2828)
!2836 = !DILocation(line: 388, column: 34, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2833, file: !2442, line: 385, column: 75)
!2838 = !DILocation(line: 388, column: 9, scope: !2837)
!2839 = !DILocation(line: 390, column: 55, scope: !2837)
!2840 = !DILocation(line: 391, column: 5, scope: !2837)
!2841 = !DILocation(line: 392, column: 20, scope: !2828)
!2842 = !DILocation(line: 392, column: 45, scope: !2828)
!2843 = !DILocation(line: 392, column: 5, scope: !2828)
!2844 = !DILocation(line: 394, column: 5, scope: !2828)
!2845 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !2442, file: !2442, line: 398, type: !2528, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2846)
!2846 = !{!2847, !2848}
!2847 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2845, file: !2442, line: 398, type: !2105)
!2848 = !DILocalVariable(name: "mask", scope: !2845, file: !2442, line: 400, type: !184)
!2849 = !DILocation(line: 0, scope: !2845)
!2850 = !DILocation(line: 400, column: 5, scope: !2845)
!2851 = !DILocation(line: 400, column: 23, scope: !2845)
!2852 = !DILocation(line: 402, column: 9, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2845, file: !2442, line: 402, column: 9)
!2854 = !DILocation(line: 402, column: 9, scope: !2845)
!2855 = !DILocation(line: 413, column: 12, scope: !2845)
!2856 = !DILocation(line: 413, column: 10, scope: !2845)
!2857 = !DILocation(line: 415, column: 5, scope: !2845)
!2858 = !DILocation(line: 415, column: 23, scope: !2845)
!2859 = !DILocation(line: 415, column: 34, scope: !2845)
!2860 = !DILocation(line: 418, column: 5, scope: !2845)
!2861 = !DILocation(line: 418, column: 23, scope: !2845)
!2862 = !DILocation(line: 418, column: 34, scope: !2845)
!2863 = !DILocation(line: 420, column: 5, scope: !2845)
!2864 = !DILocation(line: 420, column: 23, scope: !2845)
!2865 = !DILocation(line: 420, column: 35, scope: !2845)
!2866 = !DILocation(line: 422, column: 29, scope: !2845)
!2867 = !DILocation(line: 422, column: 44, scope: !2845)
!2868 = !DILocation(line: 423, column: 28, scope: !2845)
!2869 = !DILocation(line: 423, column: 5, scope: !2845)
!2870 = !DILocation(line: 425, column: 33, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2845, file: !2442, line: 425, column: 9)
!2872 = !DILocation(line: 425, column: 9, scope: !2845)
!2873 = !DILocation(line: 427, column: 53, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2871, file: !2442, line: 425, column: 62)
!2875 = !DILocation(line: 428, column: 5, scope: !2874)
!2876 = !DILocation(line: 430, column: 1, scope: !2845)
!2877 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !2442, file: !2442, line: 434, type: !2878, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2880)
!2878 = !DISubroutineType(types: !2879)
!2879 = !{!2100, !920}
!2880 = !{!2881, !2882, !2883}
!2881 = !DILocalVariable(name: "handle", arg: 1, scope: !2877, file: !2442, line: 434, type: !920)
!2882 = !DILocalVariable(name: "timer", scope: !2877, file: !2442, line: 436, type: !175)
!2883 = !DILocalVariable(name: "mask", scope: !2877, file: !2442, line: 437, type: !175)
!2884 = !DILocation(line: 0, scope: !2877)
!2885 = !DILocation(line: 439, column: 24, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2877, file: !2442, line: 439, column: 9)
!2887 = !DILocation(line: 439, column: 41, scope: !2886)
!2888 = !DILocation(line: 439, column: 9, scope: !2877)
!2889 = !DILocation(line: 443, column: 16, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2877, file: !2442, line: 443, column: 9)
!2891 = !DILocation(line: 443, column: 9, scope: !2877)
!2892 = !DILocation(line: 448, column: 12, scope: !2877)
!2893 = !DILocation(line: 450, column: 15, scope: !2877)
!2894 = !DILocation(line: 451, column: 21, scope: !2877)
!2895 = !DILocation(line: 451, column: 13, scope: !2877)
!2896 = !DILocation(line: 452, column: 33, scope: !2877)
!2897 = !DILocation(line: 452, column: 41, scope: !2877)
!2898 = !DILocation(line: 453, column: 36, scope: !2877)
!2899 = !DILocation(line: 455, column: 5, scope: !2877)
!2900 = !DILocation(line: 456, column: 5, scope: !2877)
!2901 = !DILocation(line: 457, column: 1, scope: !2877)
!2902 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !2442, file: !2442, line: 459, type: !2751, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2903)
!2903 = !{!2904, !2905}
!2904 = !DILocalVariable(name: "handle", arg: 1, scope: !2902, file: !2442, line: 459, type: !175)
!2905 = !DILocalVariable(name: "timer", scope: !2902, file: !2442, line: 461, type: !184)
!2906 = !DILocation(line: 0, scope: !2902)
!2907 = !DILocation(line: 461, column: 5, scope: !2902)
!2908 = !DILocation(line: 461, column: 23, scope: !2902)
!2909 = !DILocation(line: 463, column: 17, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2902, file: !2442, line: 463, column: 9)
!2911 = !DILocation(line: 463, column: 37, scope: !2910)
!2912 = !DILocation(line: 463, column: 9, scope: !2902)
!2913 = !DILocation(line: 467, column: 20, scope: !2902)
!2914 = !DILocation(line: 467, column: 11, scope: !2902)
!2915 = !DILocation(line: 469, column: 24, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2902, file: !2442, line: 469, column: 9)
!2917 = !DILocation(line: 469, column: 41, scope: !2916)
!2918 = !DILocation(line: 469, column: 9, scope: !2902)
!2919 = !DILocation(line: 473, column: 30, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2902, file: !2442, line: 473, column: 9)
!2921 = !DILocation(line: 473, column: 37, scope: !2920)
!2922 = !DILocation(line: 473, column: 9, scope: !2902)
!2923 = !DILocation(line: 477, column: 30, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2902, file: !2442, line: 477, column: 9)
!2925 = !DILocation(line: 477, column: 37, scope: !2924)
!2926 = !DILocation(line: 477, column: 45, scope: !2924)
!2927 = !DILocation(line: 477, column: 9, scope: !2902)
!2928 = !DILocation(line: 481, column: 26, scope: !2902)
!2929 = !DILocation(line: 481, column: 33, scope: !2902)
!2930 = !DILocation(line: 481, column: 41, scope: !2902)
!2931 = !DILocation(line: 482, column: 36, scope: !2902)
!2932 = !DILocation(line: 484, column: 5, scope: !2902)
!2933 = !DILocation(line: 485, column: 1, scope: !2902)
!2934 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !2442, file: !2442, line: 487, type: !2935, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2937)
!2935 = !DISubroutineType(types: !2936)
!2936 = !{!2100, !175, !175, !225, !194}
!2937 = !{!2938, !2939, !2940, !2941, !2942, !2943, !2944}
!2938 = !DILocalVariable(name: "handle", arg: 1, scope: !2934, file: !2442, line: 487, type: !175)
!2939 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !2934, file: !2442, line: 487, type: !175)
!2940 = !DILocalVariable(name: "callback", arg: 3, scope: !2934, file: !2442, line: 487, type: !225)
!2941 = !DILocalVariable(name: "user_data", arg: 4, scope: !2934, file: !2442, line: 487, type: !194)
!2942 = !DILocalVariable(name: "current_time", scope: !2934, file: !2442, line: 489, type: !175)
!2943 = !DILocalVariable(name: "mask", scope: !2934, file: !2442, line: 490, type: !175)
!2944 = !DILocalVariable(name: "timer", scope: !2934, file: !2442, line: 491, type: !175)
!2945 = !DILocation(line: 0, scope: !2934)
!2946 = !DILocation(line: 493, column: 17, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2934, file: !2442, line: 493, column: 9)
!2948 = !DILocation(line: 493, column: 37, scope: !2947)
!2949 = !DILocation(line: 493, column: 9, scope: !2934)
!2950 = !DILocation(line: 497, column: 20, scope: !2934)
!2951 = !DILocation(line: 503, column: 37, scope: !2952)
!2952 = distinct !DILexicalBlock(scope: !2934, file: !2442, line: 503, column: 9)
!2953 = !DILocation(line: 503, column: 9, scope: !2934)
!2954 = !DILocation(line: 507, column: 37, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2934, file: !2442, line: 507, column: 9)
!2956 = !DILocation(line: 507, column: 45, scope: !2955)
!2957 = !DILocation(line: 507, column: 9, scope: !2934)
!2958 = !DILocation(line: 511, column: 25, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2934, file: !2442, line: 511, column: 9)
!2960 = !DILocation(line: 511, column: 9, scope: !2934)
!2961 = !DILocation(line: 516, column: 12, scope: !2934)
!2962 = !DILocation(line: 519, column: 30, scope: !2934)
!2963 = !DILocation(line: 521, column: 24, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2934, file: !2442, line: 521, column: 9)
!2965 = !DILocation(line: 521, column: 38, scope: !2964)
!2966 = !DILocation(line: 521, column: 9, scope: !2934)
!2967 = !DILocation(line: 522, column: 9, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2964, file: !2442, line: 521, column: 48)
!2969 = !DILocation(line: 523, column: 9, scope: !2968)
!2970 = !DILocation(line: 524, column: 38, scope: !2968)
!2971 = !DILocation(line: 525, column: 5, scope: !2968)
!2972 = !DILocation(line: 526, column: 5, scope: !2934)
!2973 = !DILocation(line: 528, column: 23, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2934, file: !2442, line: 528, column: 8)
!2975 = !DILocation(line: 528, column: 41, scope: !2974)
!2976 = !DILocation(line: 528, column: 8, scope: !2934)
!2977 = !DILocation(line: 529, column: 51, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2974, file: !2442, line: 528, column: 51)
!2979 = !DILocation(line: 529, column: 24, scope: !2978)
!2980 = !DILocation(line: 530, column: 5, scope: !2978)
!2981 = !DILocation(line: 0, scope: !2974)
!2982 = !DILocation(line: 534, column: 34, scope: !2934)
!2983 = !DILocation(line: 535, column: 39, scope: !2934)
!2984 = !DILocation(line: 537, column: 49, scope: !2934)
!2985 = !DILocation(line: 538, column: 80, scope: !2934)
!2986 = !DILocation(line: 538, column: 33, scope: !2934)
!2987 = !DILocation(line: 538, column: 49, scope: !2934)
!2988 = !DILocation(line: 539, column: 50, scope: !2934)
!2989 = !DILocation(line: 539, column: 61, scope: !2934)
!2990 = !DILocation(line: 540, column: 50, scope: !2934)
!2991 = !DILocation(line: 540, column: 61, scope: !2934)
!2992 = !DILocation(line: 542, column: 5, scope: !2934)
!2993 = !DILocation(line: 546, column: 30, scope: !2934)
!2994 = !DILocation(line: 548, column: 5, scope: !2934)
!2995 = !DILocation(line: 550, column: 5, scope: !2934)
!2996 = !DILocation(line: 551, column: 1, scope: !2934)
!2997 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !2442, file: !2442, line: 553, type: !2751, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !2998)
!2998 = !{!2999, !3000, !3001, !3002}
!2999 = !DILocalVariable(name: "handle", arg: 1, scope: !2997, file: !2442, line: 553, type: !175)
!3000 = !DILocalVariable(name: "current_time", scope: !2997, file: !2442, line: 555, type: !175)
!3001 = !DILocalVariable(name: "mask", scope: !2997, file: !2442, line: 556, type: !175)
!3002 = !DILocalVariable(name: "timer", scope: !2997, file: !2442, line: 557, type: !175)
!3003 = !DILocation(line: 0, scope: !2997)
!3004 = !DILocation(line: 559, column: 17, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !2997, file: !2442, line: 559, column: 9)
!3006 = !DILocation(line: 559, column: 37, scope: !3005)
!3007 = !DILocation(line: 559, column: 9, scope: !2997)
!3008 = !DILocation(line: 563, column: 20, scope: !2997)
!3009 = !DILocation(line: 565, column: 37, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !2997, file: !2442, line: 565, column: 9)
!3011 = !DILocation(line: 565, column: 48, scope: !3010)
!3012 = !DILocation(line: 565, column: 9, scope: !2997)
!3013 = !DILocation(line: 569, column: 37, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !2997, file: !2442, line: 569, column: 9)
!3015 = !DILocation(line: 569, column: 45, scope: !3014)
!3016 = !DILocation(line: 569, column: 9, scope: !2997)
!3017 = !DILocation(line: 574, column: 12, scope: !2997)
!3018 = !DILocation(line: 577, column: 30, scope: !2997)
!3019 = !DILocation(line: 578, column: 5, scope: !2997)
!3020 = !DILocation(line: 579, column: 30, scope: !2997)
!3021 = !DILocation(line: 581, column: 23, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !2997, file: !2442, line: 581, column: 8)
!3023 = !DILocation(line: 581, column: 41, scope: !3022)
!3024 = !DILocation(line: 581, column: 8, scope: !2997)
!3025 = !DILocation(line: 582, column: 51, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !3022, file: !2442, line: 581, column: 51)
!3027 = !DILocation(line: 582, column: 24, scope: !3026)
!3028 = !DILocation(line: 583, column: 5, scope: !3026)
!3029 = !DILocation(line: 0, scope: !3022)
!3030 = !DILocation(line: 587, column: 34, scope: !2997)
!3031 = !DILocation(line: 588, column: 39, scope: !2997)
!3032 = !DILocation(line: 590, column: 44, scope: !2997)
!3033 = !DILocation(line: 592, column: 24, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !2997, file: !2442, line: 592, column: 9)
!3035 = !DILocation(line: 592, column: 44, scope: !3034)
!3036 = !DILocation(line: 592, column: 9, scope: !2997)
!3037 = !DILocation(line: 593, column: 9, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3034, file: !2442, line: 592, column: 50)
!3039 = !DILocation(line: 594, column: 5, scope: !3038)
!3040 = !DILocation(line: 598, column: 30, scope: !2997)
!3041 = !DILocation(line: 599, column: 5, scope: !2997)
!3042 = !DILocation(line: 601, column: 5, scope: !2997)
!3043 = !DILocation(line: 603, column: 1, scope: !2997)
!3044 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !2442, file: !2442, line: 605, type: !3045, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !3047)
!3045 = !DISubroutineType(types: !3046)
!3046 = !{!2100, !175, !920}
!3047 = !{!3048, !3049, !3050, !3051, !3052}
!3048 = !DILocalVariable(name: "handle", arg: 1, scope: !3044, file: !2442, line: 605, type: !175)
!3049 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !3044, file: !2442, line: 605, type: !920)
!3050 = !DILocalVariable(name: "current_time", scope: !3044, file: !2442, line: 607, type: !175)
!3051 = !DILocalVariable(name: "mask", scope: !3044, file: !2442, line: 608, type: !175)
!3052 = !DILocalVariable(name: "timer", scope: !3044, file: !2442, line: 609, type: !175)
!3053 = !DILocation(line: 0, scope: !3044)
!3054 = !DILocation(line: 611, column: 17, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3044, file: !2442, line: 611, column: 9)
!3056 = !DILocation(line: 611, column: 37, scope: !3055)
!3057 = !DILocation(line: 611, column: 9, scope: !3044)
!3058 = !DILocation(line: 615, column: 20, scope: !3044)
!3059 = !DILocation(line: 617, column: 37, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3044, file: !2442, line: 617, column: 9)
!3061 = !DILocation(line: 617, column: 45, scope: !3060)
!3062 = !DILocation(line: 617, column: 9, scope: !3044)
!3063 = !DILocation(line: 622, column: 12, scope: !3044)
!3064 = !DILocation(line: 624, column: 35, scope: !3044)
!3065 = !DILocation(line: 624, column: 51, scope: !3044)
!3066 = !DILocation(line: 624, column: 76, scope: !3044)
!3067 = !DILocation(line: 624, column: 49, scope: !3044)
!3068 = !DILocation(line: 626, column: 37, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3044, file: !2442, line: 626, column: 9)
!3070 = !DILocation(line: 626, column: 9, scope: !3044)
!3071 = !DILocation(line: 0, scope: !3069)
!3072 = !DILocation(line: 632, column: 5, scope: !3044)
!3073 = !DILocation(line: 634, column: 5, scope: !3044)
!3074 = !DILocation(line: 636, column: 1, scope: !3044)
!3075 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !3, file: !3, line: 56, type: !3076, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3078)
!3076 = !DISubroutineType(types: !3077)
!3077 = !{!175, !175, !175, !175}
!3078 = !{!3079, !3080, !3081, !3082, !3084, !3085}
!3079 = !DILocalVariable(name: "mul1", arg: 1, scope: !3075, file: !3, line: 56, type: !175)
!3080 = !DILocalVariable(name: "mul2", arg: 2, scope: !3075, file: !3, line: 56, type: !175)
!3081 = !DILocalVariable(name: "div", arg: 3, scope: !3075, file: !3, line: 56, type: !175)
!3082 = !DILocalVariable(name: "data1", scope: !3075, file: !3, line: 58, type: !3083)
!3083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 64, elements: !383)
!3084 = !DILocalVariable(name: "data2", scope: !3075, file: !3, line: 59, type: !3083)
!3085 = !DILocalVariable(name: "result", scope: !3075, file: !3, line: 60, type: !3083)
!3086 = !DILocation(line: 0, scope: !3075)
!3087 = !DILocation(line: 63, column: 22, scope: !3075)
!3088 = !DILocation(line: 63, column: 32, scope: !3075)
!3089 = !DILocation(line: 64, column: 23, scope: !3075)
!3090 = !DILocation(line: 64, column: 40, scope: !3075)
!3091 = !DILocation(line: 66, column: 27, scope: !3075)
!3092 = !DILocation(line: 67, column: 27, scope: !3075)
!3093 = !DILocation(line: 67, column: 44, scope: !3075)
!3094 = !DILocation(line: 69, column: 26, scope: !3075)
!3095 = !DILocation(line: 70, column: 36, scope: !3075)
!3096 = !DILocation(line: 70, column: 43, scope: !3075)
!3097 = !DILocation(line: 70, column: 55, scope: !3075)
!3098 = !DILocation(line: 72, column: 34, scope: !3075)
!3099 = !DILocation(line: 72, column: 41, scope: !3075)
!3100 = !DILocation(line: 72, column: 5, scope: !3075)
!3101 = distinct !DISubprogram(name: "gpt_current_count", scope: !3, file: !3, line: 75, type: !3102, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3104)
!3102 = !DISubroutineType(types: !3103)
!3103 = !{!175, !179}
!3104 = !{!3105}
!3105 = !DILocalVariable(name: "gpt", arg: 1, scope: !3101, file: !3, line: 75, type: !179)
!3106 = !DILocation(line: 0, scope: !3101)
!3107 = !DILocation(line: 77, column: 17, scope: !3101)
!3108 = !DILocation(line: 77, column: 5, scope: !3101)
!3109 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !3, file: !3, line: 81, type: !3110, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3112)
!3110 = !DISubroutineType(types: !3111)
!3111 = !{!175, !175}
!3112 = !{!3113}
!3113 = !DILocalVariable(name: "ms", arg: 1, scope: !3109, file: !3, line: 81, type: !175)
!3114 = !DILocation(line: 0, scope: !3109)
!3115 = !DILocation(line: 83, column: 27, scope: !3109)
!3116 = !DILocation(line: 83, column: 37, scope: !3109)
!3117 = !DILocation(line: 83, column: 43, scope: !3109)
!3118 = !DILocation(line: 83, column: 32, scope: !3109)
!3119 = !DILocation(line: 83, column: 53, scope: !3109)
!3120 = !DILocation(line: 83, column: 59, scope: !3109)
!3121 = !DILocation(line: 83, column: 48, scope: !3109)
!3122 = !DILocation(line: 83, column: 70, scope: !3109)
!3123 = !DILocation(line: 83, column: 76, scope: !3109)
!3124 = !DILocation(line: 83, column: 65, scope: !3109)
!3125 = !DILocation(line: 83, column: 5, scope: !3109)
!3126 = !DILocation(line: 90, column: 9, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !207, file: !3, line: 90, column: 9)
!3128 = !DILocation(line: 90, column: 9, scope: !207)
!3129 = !DILocation(line: 91, column: 13, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3131, file: !3, line: 91, column: 13)
!3131 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 90, column: 24)
!3132 = !DILocation(line: 91, column: 13, scope: !3131)
!3133 = !DILocation(line: 92, column: 32, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3130, file: !3, line: 91, column: 41)
!3135 = !DILocation(line: 92, column: 30, scope: !3134)
!3136 = !DILocation(line: 93, column: 41, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3134, file: !3, line: 93, column: 17)
!3138 = !DILocation(line: 0, scope: !3130)
!3139 = !DILocation(line: 105, column: 1, scope: !207)
!3140 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !3, file: !3, line: 107, type: !208, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !210)
!3141 = !DILocation(line: 109, column: 9, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3140, file: !3, line: 109, column: 9)
!3143 = !DILocation(line: 109, column: 9, scope: !3140)
!3144 = !DILocation(line: 110, column: 9, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3142, file: !3, line: 109, column: 61)
!3146 = !DILocation(line: 111, column: 5, scope: !3145)
!3147 = !DILocation(line: 112, column: 1, scope: !3140)
!3148 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !3, file: !3, line: 114, type: !3110, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3149)
!3149 = !{!3150}
!3150 = !DILocalVariable(name: "time_us", arg: 1, scope: !3148, file: !3, line: 114, type: !175)
!3151 = !DILocation(line: 0, scope: !3148)
!3152 = !DILocation(line: 116, column: 5, scope: !3148)
!3153 = !DILocation(line: 118, column: 9, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3148, file: !3, line: 118, column: 9)
!3155 = !DILocation(line: 118, column: 9, scope: !3148)
!3156 = !DILocation(line: 120, column: 49, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3154, file: !3, line: 118, column: 37)
!3158 = !DILocation(line: 120, column: 16, scope: !3157)
!3159 = !DILocation(line: 120, column: 9, scope: !3157)
!3160 = !DILocation(line: 0, scope: !3154)
!3161 = !DILocation(line: 125, column: 1, scope: !3148)
!3162 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !3, file: !3, line: 127, type: !3110, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3163)
!3163 = !{!3164}
!3164 = !DILocalVariable(name: "count", arg: 1, scope: !3162, file: !3, line: 127, type: !175)
!3165 = !DILocation(line: 0, scope: !3162)
!3166 = !DILocation(line: 129, column: 5, scope: !3162)
!3167 = !DILocation(line: 131, column: 9, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 131, column: 9)
!3169 = !DILocation(line: 131, column: 9, scope: !3162)
!3170 = !DILocation(line: 133, column: 69, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3168, file: !3, line: 131, column: 37)
!3172 = !DILocation(line: 133, column: 16, scope: !3171)
!3173 = !DILocation(line: 133, column: 9, scope: !3171)
!3174 = !DILocation(line: 0, scope: !3168)
!3175 = !DILocation(line: 138, column: 1, scope: !3162)
!3176 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !3, file: !3, line: 141, type: !3177, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3179)
!3177 = !DISubroutineType(types: !3178)
!3178 = !{null, !179, !175, !175}
!3179 = !{!3180, !3181, !3182}
!3180 = !DILocalVariable(name: "gpt", arg: 1, scope: !3176, file: !3, line: 141, type: !179)
!3181 = !DILocalVariable(name: "clock_source", arg: 2, scope: !3176, file: !3, line: 141, type: !175)
!3182 = !DILocalVariable(name: "divide", arg: 3, scope: !3176, file: !3, line: 141, type: !175)
!3183 = !DILocation(line: 0, scope: !3176)
!3184 = !DILocation(line: 143, column: 5, scope: !3176)
!3185 = !DILocation(line: 145, column: 33, scope: !3176)
!3186 = !DILocation(line: 145, column: 10, scope: !3176)
!3187 = !DILocation(line: 145, column: 18, scope: !3176)
!3188 = !DILocation(line: 148, column: 10, scope: !3176)
!3189 = !DILocation(line: 148, column: 18, scope: !3176)
!3190 = !DILocation(line: 149, column: 1, scope: !3176)
!3191 = distinct !DISubprogram(name: "gpt_delay_time", scope: !3, file: !3, line: 151, type: !3192, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3194)
!3192 = !DISubroutineType(types: !3193)
!3193 = !{null, !179, !690}
!3194 = !{!3195, !3196, !3197, !3198}
!3195 = !DILocalVariable(name: "gpt", arg: 1, scope: !3191, file: !3, line: 151, type: !179)
!3196 = !DILocalVariable(name: "count", arg: 2, scope: !3191, file: !3, line: 151, type: !690)
!3197 = !DILocalVariable(name: "end_count", scope: !3191, file: !3, line: 153, type: !175)
!3198 = !DILocalVariable(name: "current", scope: !3191, file: !3, line: 153, type: !175)
!3199 = !DILocation(line: 0, scope: !3191)
!3200 = !DILocation(line: 155, column: 17, scope: !3191)
!3201 = !DILocation(line: 156, column: 25, scope: !3191)
!3202 = !DILocation(line: 156, column: 33, scope: !3191)
!3203 = !DILocation(line: 159, column: 19, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3191, file: !3, line: 159, column: 9)
!3205 = !DILocation(line: 159, column: 9, scope: !3191)
!3206 = !DILocation(line: 160, column: 16, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 159, column: 30)
!3208 = !DILocation(line: 160, column: 39, scope: !3207)
!3209 = !DILocation(line: 160, column: 9, scope: !3207)
!3210 = distinct !{!3210, !3209, !3211}
!3211 = !DILocation(line: 160, column: 51, scope: !3207)
!3212 = !DILocation(line: 162, column: 16, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 161, column: 12)
!3214 = !DILocation(line: 162, column: 39, scope: !3213)
!3215 = !DILocation(line: 162, column: 9, scope: !3213)
!3216 = distinct !{!3216, !3215, !3217}
!3217 = !DILocation(line: 162, column: 50, scope: !3213)
!3218 = !DILocation(line: 163, column: 16, scope: !3213)
!3219 = !DILocation(line: 163, column: 39, scope: !3213)
!3220 = !DILocation(line: 163, column: 9, scope: !3213)
!3221 = distinct !{!3221, !3220, !3222}
!3222 = !DILocation(line: 163, column: 51, scope: !3213)
!3223 = !DILocation(line: 165, column: 1, scope: !3191)
!3224 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !3, file: !3, line: 166, type: !3225, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3227)
!3225 = !DISubroutineType(types: !3226)
!3226 = !{null, !179}
!3227 = !{!3228}
!3228 = !DILocalVariable(name: "gpt", arg: 1, scope: !3224, file: !3, line: 166, type: !179)
!3229 = !DILocation(line: 0, scope: !3224)
!3230 = !DILocation(line: 168, column: 10, scope: !3224)
!3231 = !DILocation(line: 168, column: 22, scope: !3224)
!3232 = !DILocation(line: 169, column: 10, scope: !3224)
!3233 = !DILocation(line: 169, column: 22, scope: !3224)
!3234 = !DILocation(line: 170, column: 21, scope: !3224)
!3235 = !DILocation(line: 171, column: 5, scope: !3224)
!3236 = !DILocation(line: 171, column: 16, scope: !3224)
!3237 = distinct !{!3237, !3235, !3238}
!3238 = !DILocation(line: 171, column: 26, scope: !3224)
!3239 = !DILocation(line: 172, column: 10, scope: !3224)
!3240 = !DILocation(line: 172, column: 22, scope: !3224)
!3241 = !DILocation(line: 173, column: 10, scope: !3224)
!3242 = !DILocation(line: 173, column: 22, scope: !3224)
!3243 = !DILocation(line: 174, column: 10, scope: !3224)
!3244 = !DILocation(line: 174, column: 22, scope: !3224)
!3245 = !DILocation(line: 176, column: 13, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3224, file: !3, line: 176, column: 9)
!3247 = !DILocation(line: 176, column: 9, scope: !3224)
!3248 = !DILocation(line: 177, column: 27, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 176, column: 22)
!3250 = !DILocation(line: 178, column: 5, scope: !3249)
!3251 = !DILocation(line: 179, column: 1, scope: !3224)
!3252 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !3, file: !3, line: 181, type: !3102, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3253)
!3253 = !{!3254, !3255}
!3254 = !DILocalVariable(name: "gpt", arg: 1, scope: !3252, file: !3, line: 181, type: !179)
!3255 = !DILocalVariable(name: "mask", scope: !3252, file: !3, line: 183, type: !184)
!3256 = !DILocation(line: 0, scope: !3252)
!3257 = !DILocation(line: 183, column: 5, scope: !3252)
!3258 = !DILocation(line: 183, column: 23, scope: !3252)
!3259 = !DILocation(line: 185, column: 17, scope: !3252)
!3260 = !DILocation(line: 185, column: 10, scope: !3252)
!3261 = !DILocation(line: 187, column: 22, scope: !3252)
!3262 = !DILocation(line: 189, column: 12, scope: !3252)
!3263 = !DILocation(line: 190, column: 1, scope: !3252)
!3264 = !DILocation(line: 189, column: 5, scope: !3252)
!3265 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !3, file: !3, line: 192, type: !3266, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3268)
!3266 = !DISubroutineType(types: !3267)
!3267 = !{null, !179, !175}
!3268 = !{!3269, !3270}
!3269 = !DILocalVariable(name: "gpt", arg: 1, scope: !3265, file: !3, line: 192, type: !179)
!3270 = !DILocalVariable(name: "mask", arg: 2, scope: !3265, file: !3, line: 192, type: !175)
!3271 = !DILocation(line: 0, scope: !3265)
!3272 = !DILocation(line: 194, column: 10, scope: !3265)
!3273 = !DILocation(line: 194, column: 21, scope: !3265)
!3274 = !DILocation(line: 195, column: 1, scope: !3265)
!3275 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !3, file: !3, line: 197, type: !870, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3276)
!3276 = !{!3277, !3278, !3279, !3280, !3281}
!3277 = !DILocalVariable(name: "irq_number", arg: 1, scope: !3275, file: !3, line: 197, type: !780)
!3278 = !DILocalVariable(name: "i", scope: !3275, file: !3, line: 199, type: !175)
!3279 = !DILocalVariable(name: "mask", scope: !3275, file: !3, line: 200, type: !184)
!3280 = !DILocalVariable(name: "state", scope: !3275, file: !3, line: 201, type: !184)
!3281 = !DILocalVariable(name: "enable", scope: !3275, file: !3, line: 202, type: !184)
!3282 = !DILocation(line: 0, scope: !3275)
!3283 = !DILocation(line: 200, column: 5, scope: !3275)
!3284 = !DILocation(line: 200, column: 23, scope: !3275)
!3285 = !DILocation(line: 201, column: 5, scope: !3275)
!3286 = !DILocation(line: 201, column: 23, scope: !3275)
!3287 = !DILocation(line: 202, column: 5, scope: !3275)
!3288 = !DILocation(line: 202, column: 23, scope: !3275)
!3289 = !DILocation(line: 207, column: 5, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 207, column: 5)
!3291 = !DILocation(line: 209, column: 18, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3293, file: !3, line: 207, column: 44)
!3293 = distinct !DILexicalBlock(scope: !3290, file: !3, line: 207, column: 5)
!3294 = !DILocation(line: 209, column: 29, scope: !3292)
!3295 = !DILocation(line: 209, column: 16, scope: !3292)
!3296 = !DILocation(line: 210, column: 29, scope: !3292)
!3297 = !DILocation(line: 210, column: 16, scope: !3292)
!3298 = !DILocation(line: 212, column: 16, scope: !3292)
!3299 = !DILocation(line: 212, column: 14, scope: !3292)
!3300 = !DILocation(line: 214, column: 9, scope: !3292)
!3301 = !DILocation(line: 214, column: 20, scope: !3292)
!3302 = !DILocation(line: 214, column: 32, scope: !3292)
!3303 = !DILocation(line: 216, column: 14, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3292, file: !3, line: 216, column: 13)
!3305 = !DILocation(line: 216, column: 20, scope: !3304)
!3306 = !DILocation(line: 216, column: 40, scope: !3304)
!3307 = !DILocation(line: 216, column: 44, scope: !3304)
!3308 = !DILocation(line: 216, column: 51, scope: !3304)
!3309 = !DILocation(line: 216, column: 13, scope: !3292)
!3310 = !DILocation(line: 224, column: 51, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3312, file: !3, line: 224, column: 17)
!3312 = distinct !DILexicalBlock(scope: !3304, file: !3, line: 216, column: 70)
!3313 = !DILocation(line: 224, column: 60, scope: !3311)
!3314 = !DILocation(line: 224, column: 17, scope: !3312)
!3315 = !DILocation(line: 225, column: 94, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3311, file: !3, line: 224, column: 69)
!3317 = !DILocation(line: 225, column: 17, scope: !3316)
!3318 = !DILocation(line: 226, column: 13, scope: !3316)
!3319 = !DILocation(line: 229, column: 31, scope: !3292)
!3320 = !DILocation(line: 229, column: 42, scope: !3292)
!3321 = !DILocation(line: 229, column: 9, scope: !3292)
!3322 = !DILocation(line: 207, column: 40, scope: !3293)
!3323 = !DILocation(line: 207, column: 19, scope: !3293)
!3324 = distinct !{!3324, !3289, !3325}
!3325 = !DILocation(line: 231, column: 5, scope: !3290)
!3326 = !DILocation(line: 233, column: 1, scope: !3275)
!3327 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !3, file: !3, line: 236, type: !208, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !210)
!3328 = !DILocation(line: 238, column: 5, scope: !3327)
!3329 = !DILocation(line: 239, column: 5, scope: !3327)
!3330 = !DILocation(line: 240, column: 5, scope: !3327)
!3331 = !DILocation(line: 241, column: 1, scope: !3327)
!3332 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !3, file: !3, line: 242, type: !3102, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3333)
!3333 = !{!3334, !3335, !3336, !3337, !3338}
!3334 = !DILocalVariable(name: "gpt", arg: 1, scope: !3332, file: !3, line: 242, type: !179)
!3335 = !DILocalVariable(name: "time", scope: !3332, file: !3, line: 244, type: !184)
!3336 = !DILocalVariable(name: "count", scope: !3332, file: !3, line: 245, type: !175)
!3337 = !DILocalVariable(name: "time_s", scope: !3332, file: !3, line: 245, type: !175)
!3338 = !DILocalVariable(name: "time_ms", scope: !3332, file: !3, line: 245, type: !175)
!3339 = !DILocation(line: 0, scope: !3332)
!3340 = !DILocation(line: 244, column: 5, scope: !3332)
!3341 = !DILocation(line: 244, column: 23, scope: !3332)
!3342 = !DILocation(line: 247, column: 13, scope: !3332)
!3343 = !DILocation(line: 248, column: 20, scope: !3332)
!3344 = !DILocation(line: 249, column: 23, scope: !3332)
!3345 = !DILocation(line: 249, column: 32, scope: !3332)
!3346 = !DILocation(line: 249, column: 39, scope: !3332)
!3347 = !DILocation(line: 249, column: 48, scope: !3332)
!3348 = !DILocation(line: 250, column: 19, scope: !3332)
!3349 = !DILocation(line: 250, column: 26, scope: !3332)
!3350 = !DILocation(line: 250, column: 10, scope: !3332)
!3351 = !DILocation(line: 253, column: 5, scope: !3332)
!3352 = !DILocation(line: 253, column: 30, scope: !3332)
!3353 = !DILocation(line: 253, column: 38, scope: !3332)
!3354 = !DILocation(line: 254, column: 5, scope: !3332)
!3355 = !DILocation(line: 254, column: 36, scope: !3332)
!3356 = distinct !{!3356, !3354, !3357}
!3357 = !DILocation(line: 254, column: 46, scope: !3332)
!3358 = !DILocation(line: 255, column: 12, scope: !3332)
!3359 = !DILocation(line: 256, column: 1, scope: !3332)
!3360 = !DILocation(line: 255, column: 5, scope: !3332)
!3361 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !3, file: !3, line: 258, type: !3362, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3364)
!3362 = !DISubroutineType(types: !3363)
!3363 = !{!175}
!3364 = !{!3365}
!3365 = !DILocalVariable(name: "i", scope: !3361, file: !3, line: 260, type: !175)
!3366 = !DILocation(line: 0, scope: !3361)
!3367 = !DILocation(line: 262, column: 5, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 262, column: 5)
!3369 = !DILocation(line: 263, column: 37, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 263, column: 13)
!3371 = distinct !DILexicalBlock(scope: !3372, file: !3, line: 262, column: 45)
!3372 = distinct !DILexicalBlock(scope: !3368, file: !3, line: 262, column: 5)
!3373 = !DILocation(line: 263, column: 45, scope: !3370)
!3374 = !DILocation(line: 263, column: 13, scope: !3371)
!3375 = !DILocation(line: 262, column: 41, scope: !3372)
!3376 = !DILocation(line: 262, column: 19, scope: !3372)
!3377 = distinct !{!3377, !3367, !3378}
!3378 = !DILocation(line: 266, column: 5, scope: !3368)
!3379 = !DILocation(line: 269, column: 1, scope: !3361)
!3380 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !3, file: !3, line: 271, type: !208, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3381)
!3381 = !{!3382, !3383}
!3382 = !DILocalVariable(name: "minimum_time", scope: !3380, file: !3, line: 273, type: !175)
!3383 = !DILocalVariable(name: "current_timer", scope: !3380, file: !3, line: 273, type: !175)
!3384 = !DILocation(line: 273, column: 5, scope: !3380)
!3385 = !DILocation(line: 275, column: 24, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3380, file: !3, line: 275, column: 9)
!3387 = !DILocation(line: 275, column: 9, scope: !3380)
!3388 = !DILocation(line: 0, scope: !3380)
!3389 = !DILocation(line: 279, column: 5, scope: !3380)
!3390 = !DILocation(line: 282, column: 56, scope: !3380)
!3391 = !DILocation(line: 282, column: 39, scope: !3380)
!3392 = !DILocation(line: 284, column: 30, scope: !3380)
!3393 = !DILocation(line: 285, column: 45, scope: !3380)
!3394 = !DILocation(line: 285, column: 5, scope: !3380)
!3395 = !DILocation(line: 286, column: 30, scope: !3380)
!3396 = !DILocation(line: 287, column: 1, scope: !3380)
!3397 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !3, file: !3, line: 308, type: !3398, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3400)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{null, !920, !920}
!3400 = !{!3401, !3402, !3403, !3404, !3405}
!3401 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !3397, file: !3, line: 308, type: !920)
!3402 = !DILocalVariable(name: "number", arg: 2, scope: !3397, file: !3, line: 308, type: !920)
!3403 = !DILocalVariable(name: "i", scope: !3397, file: !3, line: 310, type: !175)
!3404 = !DILocalVariable(name: "minimum", scope: !3397, file: !3, line: 311, type: !175)
!3405 = !DILocalVariable(name: "data", scope: !3397, file: !3, line: 312, type: !175)
!3406 = !DILocation(line: 0, scope: !3397)
!3407 = !DILocation(line: 314, column: 5, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 314, column: 5)
!3409 = !DILocation(line: 315, column: 37, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 315, column: 13)
!3411 = distinct !DILexicalBlock(scope: !3412, file: !3, line: 314, column: 45)
!3412 = distinct !DILexicalBlock(scope: !3408, file: !3, line: 314, column: 5)
!3413 = !DILocation(line: 315, column: 13, scope: !3411)
!3414 = !DILocation(line: 316, column: 20, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3410, file: !3, line: 315, column: 57)
!3416 = !DILocation(line: 318, column: 22, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3415, file: !3, line: 318, column: 17)
!3418 = !DILocation(line: 318, column: 17, scope: !3415)
!3419 = !DILocation(line: 320, column: 25, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3417, file: !3, line: 318, column: 33)
!3421 = !DILocation(line: 321, column: 13, scope: !3420)
!3422 = !DILocation(line: 314, column: 41, scope: !3412)
!3423 = !DILocation(line: 314, column: 19, scope: !3412)
!3424 = distinct !{!3424, !3407, !3425}
!3425 = !DILocation(line: 323, column: 5, scope: !3408)
!3426 = !DILocation(line: 325, column: 19, scope: !3397)
!3427 = !DILocation(line: 326, column: 1, scope: !3397)
!3428 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !3, file: !3, line: 289, type: !3110, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3429)
!3429 = !{!3430, !3431, !3432, !3433}
!3430 = !DILocalVariable(name: "timer_number", arg: 1, scope: !3428, file: !3, line: 289, type: !175)
!3431 = !DILocalVariable(name: "time_out_delta", scope: !3428, file: !3, line: 291, type: !175)
!3432 = !DILocalVariable(name: "current_delta", scope: !3428, file: !3, line: 292, type: !175)
!3433 = !DILocalVariable(name: "ret_value", scope: !3428, file: !3, line: 293, type: !175)
!3434 = !DILocation(line: 0, scope: !3428)
!3435 = !DILocation(line: 295, column: 22, scope: !3428)
!3436 = !DILocation(line: 296, column: 22, scope: !3428)
!3437 = !DILocation(line: 298, column: 24, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3428, file: !3, line: 298, column: 9)
!3439 = !DILocation(line: 298, column: 9, scope: !3428)
!3440 = !DILocation(line: 306, column: 5, scope: !3428)
!3441 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !3, file: !3, line: 329, type: !227, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3442)
!3442 = !{!3443, !3444, !3445, !3446}
!3443 = !DILocalVariable(name: "parameter", arg: 1, scope: !3441, file: !3, line: 329, type: !194)
!3444 = !DILocalVariable(name: "i", scope: !3441, file: !3, line: 331, type: !175)
!3445 = !DILocalVariable(name: "time_ms", scope: !3441, file: !3, line: 332, type: !184)
!3446 = !DILocalVariable(name: "data", scope: !3441, file: !3, line: 333, type: !184)
!3447 = !DILocation(line: 0, scope: !3441)
!3448 = !DILocation(line: 332, column: 5, scope: !3441)
!3449 = !DILocation(line: 332, column: 23, scope: !3441)
!3450 = !DILocation(line: 333, column: 5, scope: !3441)
!3451 = !DILocation(line: 333, column: 23, scope: !3441)
!3452 = !DILocation(line: 336, column: 24, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3441, file: !3, line: 336, column: 9)
!3454 = !DILocation(line: 336, column: 41, scope: !3453)
!3455 = !DILocation(line: 336, column: 9, scope: !3441)
!3456 = !DILocation(line: 338, column: 34, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3453, file: !3, line: 336, column: 47)
!3458 = !DILocation(line: 339, column: 9, scope: !3457)
!3459 = !DILocation(line: 340, column: 34, scope: !3457)
!3460 = !DILocation(line: 342, column: 46, scope: !3457)
!3461 = !DILocation(line: 342, column: 19, scope: !3457)
!3462 = !DILocation(line: 342, column: 17, scope: !3457)
!3463 = !DILocation(line: 344, column: 41, scope: !3457)
!3464 = !DILocation(line: 344, column: 38, scope: !3457)
!3465 = !DILocation(line: 345, column: 42, scope: !3457)
!3466 = !DILocation(line: 347, column: 9, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3457, file: !3, line: 347, column: 9)
!3468 = !DILocation(line: 348, column: 41, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3470, file: !3, line: 348, column: 17)
!3470 = distinct !DILexicalBlock(scope: !3471, file: !3, line: 347, column: 49)
!3471 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 347, column: 9)
!3472 = !DILocation(line: 348, column: 17, scope: !3470)
!3473 = !DILocation(line: 350, column: 24, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 348, column: 61)
!3475 = !DILocation(line: 350, column: 22, scope: !3474)
!3476 = !DILocation(line: 352, column: 21, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3474, file: !3, line: 352, column: 21)
!3478 = !DILocation(line: 352, column: 26, scope: !3477)
!3479 = !DILocation(line: 352, column: 21, scope: !3474)
!3480 = !DILocation(line: 353, column: 56, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3477, file: !3, line: 352, column: 32)
!3482 = !DILocation(line: 354, column: 55, scope: !3481)
!3483 = !DILocation(line: 356, column: 62, scope: !3481)
!3484 = !DILocation(line: 356, column: 112, scope: !3481)
!3485 = !DILocation(line: 356, column: 21, scope: !3481)
!3486 = !DILocation(line: 357, column: 17, scope: !3481)
!3487 = !DILocation(line: 347, column: 45, scope: !3471)
!3488 = !DILocation(line: 347, column: 23, scope: !3471)
!3489 = distinct !{!3489, !3466, !3490}
!3490 = !DILocation(line: 360, column: 9, scope: !3467)
!3491 = !DILocation(line: 362, column: 42, scope: !3457)
!3492 = !DILocation(line: 364, column: 28, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3457, file: !3, line: 364, column: 13)
!3494 = !DILocation(line: 364, column: 48, scope: !3493)
!3495 = !DILocation(line: 364, column: 13, scope: !3457)
!3496 = !DILocation(line: 365, column: 13, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3493, file: !3, line: 364, column: 54)
!3498 = !DILocation(line: 366, column: 9, scope: !3497)
!3499 = !DILocation(line: 369, column: 1, scope: !3441)
!3500 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !264, file: !264, line: 50, type: !3501, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3504)
!3501 = !DISubroutineType(types: !3502)
!3502 = !{!175, !3503}
!3503 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !6, line: 390, baseType: !266)
!3504 = !{!3505, !3506, !3507}
!3505 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3500, file: !264, line: 50, type: !3503)
!3506 = !DILocalVariable(name: "i", scope: !3500, file: !264, line: 52, type: !175)
!3507 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !3500, file: !264, line: 53, type: !826)
!3508 = !DILocation(line: 0, scope: !3500)
!3509 = !DILocation(line: 53, column: 14, scope: !3500)
!3510 = !DILocation(line: 55, column: 5, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3500, file: !264, line: 55, column: 5)
!3512 = !DILocation(line: 55, column: 25, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3511, file: !264, line: 55, column: 5)
!3514 = !DILocation(line: 55, column: 19, scope: !3513)
!3515 = distinct !{!3515, !3510, !3516}
!3516 = !DILocation(line: 59, column: 5, scope: !3511)
!3517 = !DILocation(line: 56, column: 13, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3519, file: !264, line: 56, column: 13)
!3519 = distinct !DILexicalBlock(scope: !3513, file: !264, line: 55, column: 29)
!3520 = !DILocation(line: 56, column: 40, scope: !3518)
!3521 = !DILocation(line: 56, column: 13, scope: !3519)
!3522 = !DILocation(line: 61, column: 1, scope: !3500)
!3523 = distinct !DISubprogram(name: "hal_gpio_init", scope: !264, file: !264, line: 66, type: !3524, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3527)
!3524 = !DISubroutineType(types: !3525)
!3525 = !{!3526, !3503}
!3526 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !319, line: 229, baseType: !318)
!3527 = !{!3528}
!3528 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3523, file: !264, line: 66, type: !3503)
!3529 = !DILocation(line: 0, scope: !3523)
!3530 = !DILocation(line: 68, column: 5, scope: !3523)
!3531 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !264, file: !264, line: 72, type: !3524, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3532)
!3532 = !{!3533}
!3533 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3531, file: !264, line: 72, type: !3503)
!3534 = !DILocation(line: 0, scope: !3531)
!3535 = !DILocation(line: 74, column: 5, scope: !3531)
!3536 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !264, file: !264, line: 79, type: !3537, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3539)
!3537 = !DISubroutineType(types: !3538)
!3538 = !{!3526, !3503, !360}
!3539 = !{!3540, !3541, !3542, !3543}
!3540 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3536, file: !264, line: 79, type: !3503)
!3541 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !3536, file: !264, line: 79, type: !360)
!3542 = !DILocalVariable(name: "no", scope: !3536, file: !264, line: 81, type: !175)
!3543 = !DILocalVariable(name: "remainder", scope: !3536, file: !264, line: 82, type: !175)
!3544 = !DILocation(line: 0, scope: !3536)
!3545 = !DILocation(line: 84, column: 18, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3536, file: !264, line: 84, column: 9)
!3547 = !DILocation(line: 84, column: 9, scope: !3536)
!3548 = !DILocation(line: 89, column: 19, scope: !3536)
!3549 = !DILocation(line: 92, column: 26, scope: !3536)
!3550 = !DILocation(line: 94, column: 24, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3536, file: !264, line: 94, column: 9)
!3552 = !DILocation(line: 0, scope: !3551)
!3553 = !DILocation(line: 94, column: 9, scope: !3536)
!3554 = !DILocation(line: 101, column: 1, scope: !3536)
!3555 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !264, file: !264, line: 105, type: !3556, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3559)
!3556 = !DISubroutineType(types: !3557)
!3557 = !{!3526, !3503, !3558}
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 32)
!3559 = !{!3560, !3561, !3562, !3563, !3564}
!3560 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3555, file: !264, line: 105, type: !3503)
!3561 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !3555, file: !264, line: 105, type: !3558)
!3562 = !DILocalVariable(name: "no", scope: !3555, file: !264, line: 107, type: !175)
!3563 = !DILocalVariable(name: "remainder", scope: !3555, file: !264, line: 108, type: !175)
!3564 = !DILocalVariable(name: "temp", scope: !3555, file: !264, line: 109, type: !175)
!3565 = !DILocation(line: 0, scope: !3555)
!3566 = !DILocation(line: 111, column: 18, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3555, file: !264, line: 111, column: 9)
!3568 = !DILocation(line: 111, column: 9, scope: !3555)
!3569 = !DILocation(line: 115, column: 14, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3555, file: !264, line: 115, column: 9)
!3571 = !DILocation(line: 115, column: 9, scope: !3555)
!3572 = !DILocation(line: 120, column: 19, scope: !3555)
!3573 = !DILocation(line: 123, column: 26, scope: !3555)
!3574 = !DILocation(line: 125, column: 12, scope: !3555)
!3575 = !DILocation(line: 125, column: 54, scope: !3555)
!3576 = !DILocation(line: 126, column: 45, scope: !3555)
!3577 = !DILocation(line: 126, column: 17, scope: !3555)
!3578 = !DILocation(line: 127, column: 51, scope: !3555)
!3579 = !DILocation(line: 127, column: 21, scope: !3555)
!3580 = !DILocation(line: 128, column: 5, scope: !3555)
!3581 = !DILocation(line: 130, column: 1, scope: !3555)
!3582 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !264, file: !264, line: 134, type: !3583, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3586)
!3583 = !DISubroutineType(types: !3584)
!3584 = !{!3585, !3503, !378}
!3585 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !319, line: 238, baseType: !329)
!3586 = !{!3587, !3588, !3589, !3590, !3591}
!3587 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3582, file: !264, line: 134, type: !3503)
!3588 = !DILocalVariable(name: "function_index", arg: 2, scope: !3582, file: !264, line: 134, type: !378)
!3589 = !DILocalVariable(name: "no", scope: !3582, file: !264, line: 136, type: !175)
!3590 = !DILocalVariable(name: "remainder", scope: !3582, file: !264, line: 137, type: !175)
!3591 = !DILocalVariable(name: "irq_status", scope: !3582, file: !264, line: 138, type: !175)
!3592 = !DILocation(line: 0, scope: !3582)
!3593 = !DILocation(line: 140, column: 18, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3582, file: !264, line: 140, column: 9)
!3595 = !DILocation(line: 140, column: 9, scope: !3582)
!3596 = !DILocation(line: 145, column: 24, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3582, file: !264, line: 145, column: 9)
!3598 = !DILocation(line: 145, column: 9, scope: !3582)
!3599 = !DILocation(line: 145, column: 9, scope: !3597)
!3600 = !DILocation(line: 150, column: 19, scope: !3582)
!3601 = !DILocation(line: 156, column: 18, scope: !3582)
!3602 = !DILocation(line: 157, column: 105, scope: !3582)
!3603 = !DILocation(line: 157, column: 91, scope: !3582)
!3604 = !DILocation(line: 157, column: 5, scope: !3582)
!3605 = !DILocation(line: 157, column: 48, scope: !3582)
!3606 = !DILocation(line: 157, column: 62, scope: !3582)
!3607 = !DILocation(line: 158, column: 80, scope: !3582)
!3608 = !DILocation(line: 158, column: 5, scope: !3582)
!3609 = !DILocation(line: 158, column: 48, scope: !3582)
!3610 = !DILocation(line: 158, column: 62, scope: !3582)
!3611 = !DILocation(line: 159, column: 5, scope: !3582)
!3612 = !DILocation(line: 160, column: 5, scope: !3582)
!3613 = !DILocation(line: 162, column: 1, scope: !3582)
!3614 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !264, file: !264, line: 166, type: !3615, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3618)
!3615 = !DISubroutineType(types: !3616)
!3616 = !{!3526, !3503, !3617}
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 32)
!3618 = !{!3619, !3620, !3621, !3622, !3623}
!3619 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3614, file: !264, line: 166, type: !3503)
!3620 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !3614, file: !264, line: 166, type: !3617)
!3621 = !DILocalVariable(name: "no", scope: !3614, file: !264, line: 168, type: !175)
!3622 = !DILocalVariable(name: "remainder", scope: !3614, file: !264, line: 169, type: !175)
!3623 = !DILocalVariable(name: "temp", scope: !3614, file: !264, line: 170, type: !175)
!3624 = !DILocation(line: 0, scope: !3614)
!3625 = !DILocation(line: 172, column: 18, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3614, file: !264, line: 172, column: 9)
!3627 = !DILocation(line: 172, column: 9, scope: !3614)
!3628 = !DILocation(line: 176, column: 14, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3614, file: !264, line: 176, column: 9)
!3630 = !DILocation(line: 176, column: 9, scope: !3614)
!3631 = !DILocation(line: 181, column: 19, scope: !3614)
!3632 = !DILocation(line: 184, column: 26, scope: !3614)
!3633 = !DILocation(line: 186, column: 12, scope: !3614)
!3634 = !DILocation(line: 186, column: 54, scope: !3614)
!3635 = !DILocation(line: 187, column: 45, scope: !3614)
!3636 = !DILocation(line: 187, column: 17, scope: !3614)
!3637 = !DILocation(line: 188, column: 41, scope: !3614)
!3638 = !DILocation(line: 188, column: 16, scope: !3614)
!3639 = !DILocation(line: 189, column: 5, scope: !3614)
!3640 = !DILocation(line: 191, column: 1, scope: !3614)
!3641 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !264, file: !264, line: 195, type: !3642, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3644)
!3642 = !DISubroutineType(types: !3643)
!3643 = !{!3526, !3503, !361}
!3644 = !{!3645, !3646, !3647, !3648}
!3645 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3641, file: !264, line: 195, type: !3503)
!3646 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !3641, file: !264, line: 195, type: !361)
!3647 = !DILocalVariable(name: "no", scope: !3641, file: !264, line: 197, type: !175)
!3648 = !DILocalVariable(name: "remainder", scope: !3641, file: !264, line: 198, type: !175)
!3649 = !DILocation(line: 0, scope: !3641)
!3650 = !DILocation(line: 200, column: 18, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3641, file: !264, line: 200, column: 9)
!3652 = !DILocation(line: 200, column: 9, scope: !3641)
!3653 = !DILocation(line: 205, column: 19, scope: !3641)
!3654 = !DILocation(line: 208, column: 26, scope: !3641)
!3655 = !DILocation(line: 210, column: 9, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3641, file: !264, line: 210, column: 9)
!3657 = !DILocation(line: 0, scope: !3656)
!3658 = !DILocation(line: 210, column: 9, scope: !3641)
!3659 = !DILocation(line: 216, column: 1, scope: !3641)
!3660 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !264, file: !264, line: 220, type: !3615, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3661)
!3661 = !{!3662, !3663, !3664, !3665, !3666}
!3662 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3660, file: !264, line: 220, type: !3503)
!3663 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !3660, file: !264, line: 220, type: !3617)
!3664 = !DILocalVariable(name: "no", scope: !3660, file: !264, line: 222, type: !175)
!3665 = !DILocalVariable(name: "remainder", scope: !3660, file: !264, line: 223, type: !175)
!3666 = !DILocalVariable(name: "temp", scope: !3660, file: !264, line: 224, type: !175)
!3667 = !DILocation(line: 0, scope: !3660)
!3668 = !DILocation(line: 226, column: 18, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3660, file: !264, line: 226, column: 9)
!3670 = !DILocation(line: 226, column: 9, scope: !3660)
!3671 = !DILocation(line: 230, column: 14, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3660, file: !264, line: 230, column: 9)
!3673 = !DILocation(line: 230, column: 9, scope: !3660)
!3674 = !DILocation(line: 235, column: 19, scope: !3660)
!3675 = !DILocation(line: 238, column: 26, scope: !3660)
!3676 = !DILocation(line: 240, column: 12, scope: !3660)
!3677 = !DILocation(line: 240, column: 55, scope: !3660)
!3678 = !DILocation(line: 241, column: 45, scope: !3660)
!3679 = !DILocation(line: 241, column: 17, scope: !3660)
!3680 = !DILocation(line: 242, column: 41, scope: !3660)
!3681 = !DILocation(line: 242, column: 16, scope: !3660)
!3682 = !DILocation(line: 243, column: 5, scope: !3660)
!3683 = !DILocation(line: 245, column: 1, scope: !3660)
!3684 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !264, file: !264, line: 249, type: !3524, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3685)
!3685 = !{!3686, !3687, !3688, !3689}
!3686 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3684, file: !264, line: 249, type: !3503)
!3687 = !DILocalVariable(name: "no", scope: !3684, file: !264, line: 251, type: !175)
!3688 = !DILocalVariable(name: "remainder", scope: !3684, file: !264, line: 252, type: !175)
!3689 = !DILocalVariable(name: "temp", scope: !3684, file: !264, line: 253, type: !175)
!3690 = !DILocation(line: 0, scope: !3684)
!3691 = !DILocation(line: 255, column: 18, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3684, file: !264, line: 255, column: 9)
!3693 = !DILocation(line: 255, column: 9, scope: !3684)
!3694 = !DILocation(line: 260, column: 19, scope: !3684)
!3695 = !DILocation(line: 263, column: 26, scope: !3684)
!3696 = !DILocation(line: 265, column: 12, scope: !3684)
!3697 = !DILocation(line: 265, column: 55, scope: !3684)
!3698 = !DILocation(line: 266, column: 45, scope: !3684)
!3699 = !DILocation(line: 266, column: 17, scope: !3684)
!3700 = !DILocation(line: 267, column: 15, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3684, file: !264, line: 267, column: 9)
!3702 = !DILocation(line: 267, column: 9, scope: !3684)
!3703 = !DILocation(line: 0, scope: !3701)
!3704 = !DILocation(line: 273, column: 1, scope: !3684)
!3705 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !264, file: !264, line: 278, type: !3524, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3706)
!3706 = !{!3707, !3708, !3709}
!3707 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3705, file: !264, line: 278, type: !3503)
!3708 = !DILocalVariable(name: "no", scope: !3705, file: !264, line: 280, type: !175)
!3709 = !DILocalVariable(name: "remainder", scope: !3705, file: !264, line: 281, type: !175)
!3710 = !DILocation(line: 0, scope: !3705)
!3711 = !DILocation(line: 283, column: 18, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3705, file: !264, line: 283, column: 9)
!3713 = !DILocation(line: 283, column: 9, scope: !3705)
!3714 = !DILocation(line: 288, column: 19, scope: !3705)
!3715 = !DILocation(line: 291, column: 26, scope: !3705)
!3716 = !DILocation(line: 293, column: 90, scope: !3705)
!3717 = !DILocation(line: 293, column: 5, scope: !3705)
!3718 = !DILocation(line: 293, column: 48, scope: !3705)
!3719 = !DILocation(line: 293, column: 62, scope: !3705)
!3720 = !DILocation(line: 294, column: 5, scope: !3705)
!3721 = !DILocation(line: 295, column: 1, scope: !3705)
!3722 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !264, file: !264, line: 299, type: !3524, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3723)
!3723 = !{!3724, !3725, !3726}
!3724 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3722, file: !264, line: 299, type: !3503)
!3725 = !DILocalVariable(name: "no", scope: !3722, file: !264, line: 301, type: !175)
!3726 = !DILocalVariable(name: "remainder", scope: !3722, file: !264, line: 302, type: !175)
!3727 = !DILocation(line: 0, scope: !3722)
!3728 = !DILocation(line: 304, column: 18, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3722, file: !264, line: 304, column: 9)
!3730 = !DILocation(line: 304, column: 9, scope: !3722)
!3731 = !DILocation(line: 309, column: 19, scope: !3722)
!3732 = !DILocation(line: 312, column: 26, scope: !3722)
!3733 = !DILocation(line: 314, column: 90, scope: !3722)
!3734 = !DILocation(line: 314, column: 5, scope: !3722)
!3735 = !DILocation(line: 314, column: 48, scope: !3722)
!3736 = !DILocation(line: 314, column: 62, scope: !3722)
!3737 = !DILocation(line: 315, column: 5, scope: !3722)
!3738 = !DILocation(line: 316, column: 1, scope: !3722)
!3739 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !264, file: !264, line: 321, type: !3524, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3740)
!3740 = !{!3741, !3742, !3743}
!3741 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3739, file: !264, line: 321, type: !3503)
!3742 = !DILocalVariable(name: "no", scope: !3739, file: !264, line: 323, type: !175)
!3743 = !DILocalVariable(name: "remainder", scope: !3739, file: !264, line: 324, type: !175)
!3744 = !DILocation(line: 0, scope: !3739)
!3745 = !DILocation(line: 326, column: 19, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3739, file: !264, line: 326, column: 9)
!3747 = !DILocation(line: 326, column: 36, scope: !3746)
!3748 = !DILocation(line: 326, column: 41, scope: !3746)
!3749 = !DILocation(line: 326, column: 9, scope: !3739)
!3750 = !DILocation(line: 331, column: 19, scope: !3739)
!3751 = !DILocation(line: 334, column: 26, scope: !3739)
!3752 = !DILocation(line: 336, column: 94, scope: !3739)
!3753 = !DILocation(line: 336, column: 5, scope: !3739)
!3754 = !DILocation(line: 336, column: 50, scope: !3739)
!3755 = !DILocation(line: 336, column: 66, scope: !3739)
!3756 = !DILocation(line: 337, column: 5, scope: !3739)
!3757 = !DILocation(line: 337, column: 51, scope: !3739)
!3758 = !DILocation(line: 337, column: 68, scope: !3739)
!3759 = !DILocation(line: 338, column: 5, scope: !3739)
!3760 = !DILocation(line: 339, column: 1, scope: !3739)
!3761 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !264, file: !264, line: 343, type: !3524, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3762)
!3762 = !{!3763, !3764, !3765}
!3763 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3761, file: !264, line: 343, type: !3503)
!3764 = !DILocalVariable(name: "no", scope: !3761, file: !264, line: 345, type: !175)
!3765 = !DILocalVariable(name: "remainder", scope: !3761, file: !264, line: 346, type: !175)
!3766 = !DILocation(line: 0, scope: !3761)
!3767 = !DILocation(line: 348, column: 19, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3761, file: !264, line: 348, column: 9)
!3769 = !DILocation(line: 348, column: 36, scope: !3768)
!3770 = !DILocation(line: 348, column: 41, scope: !3768)
!3771 = !DILocation(line: 348, column: 9, scope: !3761)
!3772 = !DILocation(line: 353, column: 19, scope: !3761)
!3773 = !DILocation(line: 356, column: 26, scope: !3761)
!3774 = !DILocation(line: 358, column: 94, scope: !3761)
!3775 = !DILocation(line: 358, column: 5, scope: !3761)
!3776 = !DILocation(line: 358, column: 50, scope: !3761)
!3777 = !DILocation(line: 358, column: 66, scope: !3761)
!3778 = !DILocation(line: 359, column: 5, scope: !3761)
!3779 = !DILocation(line: 359, column: 51, scope: !3761)
!3780 = !DILocation(line: 359, column: 68, scope: !3761)
!3781 = !DILocation(line: 360, column: 5, scope: !3761)
!3782 = !DILocation(line: 361, column: 1, scope: !3761)
!3783 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !264, file: !264, line: 365, type: !3524, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3784)
!3784 = !{!3785, !3786, !3787}
!3785 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3783, file: !264, line: 365, type: !3503)
!3786 = !DILocalVariable(name: "no", scope: !3783, file: !264, line: 367, type: !175)
!3787 = !DILocalVariable(name: "remainder", scope: !3783, file: !264, line: 368, type: !175)
!3788 = !DILocation(line: 0, scope: !3783)
!3789 = !DILocation(line: 370, column: 19, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3783, file: !264, line: 370, column: 9)
!3791 = !DILocation(line: 370, column: 36, scope: !3790)
!3792 = !DILocation(line: 370, column: 41, scope: !3790)
!3793 = !DILocation(line: 370, column: 9, scope: !3783)
!3794 = !DILocation(line: 375, column: 19, scope: !3783)
!3795 = !DILocation(line: 378, column: 26, scope: !3783)
!3796 = !DILocation(line: 380, column: 94, scope: !3783)
!3797 = !DILocation(line: 380, column: 5, scope: !3783)
!3798 = !DILocation(line: 380, column: 50, scope: !3783)
!3799 = !DILocation(line: 380, column: 66, scope: !3783)
!3800 = !DILocation(line: 381, column: 5, scope: !3783)
!3801 = !DILocation(line: 382, column: 1, scope: !3783)
!3802 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !264, file: !264, line: 387, type: !3803, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3807)
!3803 = !DISubroutineType(types: !3804)
!3804 = !{!3526, !3805, !3806}
!3805 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !6, line: 423, baseType: !339)
!3806 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !6, line: 431, baseType: !348)
!3807 = !{!3808, !3809}
!3808 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !3802, file: !264, line: 387, type: !3805)
!3809 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !3802, file: !264, line: 387, type: !3806)
!3810 = !DILocation(line: 0, scope: !3802)
!3811 = !DILocation(line: 390, column: 24, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3802, file: !264, line: 390, column: 9)
!3813 = !DILocation(line: 390, column: 9, scope: !3802)
!3814 = !DILocation(line: 394, column: 5, scope: !3802)
!3815 = !DILocation(line: 394, column: 62, scope: !3802)
!3816 = !DILocation(line: 394, column: 74, scope: !3802)
!3817 = !DILocation(line: 395, column: 5, scope: !3802)
!3818 = !DILocation(line: 396, column: 1, scope: !3802)
!3819 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !264, file: !264, line: 403, type: !3820, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3822)
!3820 = !DISubroutineType(types: !3821)
!3821 = !{!3526, !3503, !378, !378, !378}
!3822 = !{!3823, !3824, !3825, !3826, !3827, !3828}
!3823 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3819, file: !264, line: 403, type: !3503)
!3824 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !3819, file: !264, line: 403, type: !378)
!3825 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !3819, file: !264, line: 403, type: !378)
!3826 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !3819, file: !264, line: 403, type: !378)
!3827 = !DILocalVariable(name: "no", scope: !3819, file: !264, line: 405, type: !175)
!3828 = !DILocalVariable(name: "remainder", scope: !3819, file: !264, line: 406, type: !175)
!3829 = !DILocation(line: 0, scope: !3819)
!3830 = !DILocation(line: 408, column: 19, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3819, file: !264, line: 408, column: 9)
!3832 = !DILocation(line: 408, column: 36, scope: !3831)
!3833 = !DILocation(line: 408, column: 40, scope: !3831)
!3834 = !DILocation(line: 408, column: 9, scope: !3819)
!3835 = !DILocation(line: 413, column: 19, scope: !3819)
!3836 = !DILocation(line: 416, column: 26, scope: !3819)
!3837 = !DILocation(line: 418, column: 9, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3819, file: !264, line: 418, column: 9)
!3839 = !DILocation(line: 0, scope: !3838)
!3840 = !DILocation(line: 418, column: 9, scope: !3819)
!3841 = !DILocation(line: 424, column: 9, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3819, file: !264, line: 424, column: 9)
!3843 = !DILocation(line: 0, scope: !3842)
!3844 = !DILocation(line: 424, column: 9, scope: !3819)
!3845 = !DILocation(line: 430, column: 9, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3819, file: !264, line: 430, column: 9)
!3847 = !DILocation(line: 0, scope: !3846)
!3848 = !DILocation(line: 430, column: 9, scope: !3819)
!3849 = !DILocation(line: 436, column: 1, scope: !3819)
!3850 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !264, file: !264, line: 441, type: !3524, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3851)
!3851 = !{!3852, !3853, !3854, !3855, !3856, !3857, !3858}
!3852 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3850, file: !264, line: 441, type: !3503)
!3853 = !DILocalVariable(name: "no1", scope: !3850, file: !264, line: 443, type: !175)
!3854 = !DILocalVariable(name: "no2", scope: !3850, file: !264, line: 443, type: !175)
!3855 = !DILocalVariable(name: "no3", scope: !3850, file: !264, line: 443, type: !175)
!3856 = !DILocalVariable(name: "remainder1", scope: !3850, file: !264, line: 444, type: !175)
!3857 = !DILocalVariable(name: "remainder2", scope: !3850, file: !264, line: 444, type: !175)
!3858 = !DILocalVariable(name: "remainder3", scope: !3850, file: !264, line: 444, type: !175)
!3859 = !DILocation(line: 0, scope: !3850)
!3860 = !DILocation(line: 446, column: 18, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3850, file: !264, line: 446, column: 9)
!3862 = !DILocation(line: 446, column: 9, scope: !3850)
!3863 = !DILocation(line: 451, column: 20, scope: !3850)
!3864 = !DILocation(line: 454, column: 27, scope: !3850)
!3865 = !DILocation(line: 457, column: 20, scope: !3850)
!3866 = !DILocation(line: 463, column: 20, scope: !3850)
!3867 = !DILocation(line: 469, column: 107, scope: !3850)
!3868 = !DILocation(line: 469, column: 92, scope: !3850)
!3869 = !DILocation(line: 469, column: 5, scope: !3850)
!3870 = !DILocation(line: 469, column: 49, scope: !3850)
!3871 = !DILocation(line: 469, column: 63, scope: !3850)
!3872 = !DILocation(line: 472, column: 89, scope: !3850)
!3873 = !DILocation(line: 472, column: 5, scope: !3850)
!3874 = !DILocation(line: 472, column: 48, scope: !3850)
!3875 = !DILocation(line: 472, column: 61, scope: !3850)
!3876 = !DILocation(line: 475, column: 5, scope: !3850)
!3877 = !DILocation(line: 475, column: 48, scope: !3850)
!3878 = !DILocation(line: 475, column: 61, scope: !3850)
!3879 = !DILocation(line: 478, column: 9, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3850, file: !264, line: 478, column: 9)
!3881 = !DILocation(line: 0, scope: !3880)
!3882 = !DILocation(line: 478, column: 9, scope: !3850)
!3883 = !DILocation(line: 479, column: 55, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3880, file: !264, line: 478, column: 40)
!3885 = !DILocation(line: 480, column: 5, scope: !3884)
!3886 = !DILocation(line: 483, column: 53, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3880, file: !264, line: 482, column: 10)
!3888 = !DILocation(line: 483, column: 67, scope: !3887)
!3889 = !DILocation(line: 484, column: 9, scope: !3887)
!3890 = !DILocation(line: 484, column: 55, scope: !3887)
!3891 = !DILocation(line: 484, column: 71, scope: !3887)
!3892 = !DILocation(line: 485, column: 9, scope: !3887)
!3893 = !DILocation(line: 485, column: 55, scope: !3887)
!3894 = !DILocation(line: 490, column: 5, scope: !3850)
!3895 = !DILocation(line: 490, column: 48, scope: !3850)
!3896 = !DILocation(line: 490, column: 61, scope: !3850)
!3897 = !DILocation(line: 493, column: 5, scope: !3850)
!3898 = !DILocation(line: 493, column: 47, scope: !3850)
!3899 = !DILocation(line: 493, column: 59, scope: !3850)
!3900 = !DILocation(line: 496, column: 108, scope: !3850)
!3901 = !DILocation(line: 496, column: 93, scope: !3850)
!3902 = !DILocation(line: 496, column: 5, scope: !3850)
!3903 = !DILocation(line: 496, column: 50, scope: !3850)
!3904 = !DILocation(line: 496, column: 65, scope: !3850)
!3905 = !DILocation(line: 498, column: 5, scope: !3850)
!3906 = !DILocation(line: 499, column: 1, scope: !3850)
!3907 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !264, file: !264, line: 502, type: !3524, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3908)
!3908 = !{!3909, !3910, !3911, !3912, !3913}
!3909 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3907, file: !264, line: 502, type: !3503)
!3910 = !DILocalVariable(name: "no1", scope: !3907, file: !264, line: 504, type: !175)
!3911 = !DILocalVariable(name: "no2", scope: !3907, file: !264, line: 504, type: !175)
!3912 = !DILocalVariable(name: "remainder1", scope: !3907, file: !264, line: 505, type: !175)
!3913 = !DILocalVariable(name: "remainder2", scope: !3907, file: !264, line: 505, type: !175)
!3914 = !DILocation(line: 0, scope: !3907)
!3915 = !DILocation(line: 507, column: 18, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3907, file: !264, line: 507, column: 9)
!3917 = !DILocation(line: 507, column: 9, scope: !3907)
!3918 = !DILocation(line: 512, column: 20, scope: !3907)
!3919 = !DILocation(line: 515, column: 27, scope: !3907)
!3920 = !DILocation(line: 518, column: 20, scope: !3907)
!3921 = !DILocation(line: 524, column: 107, scope: !3907)
!3922 = !DILocation(line: 524, column: 92, scope: !3907)
!3923 = !DILocation(line: 524, column: 5, scope: !3907)
!3924 = !DILocation(line: 524, column: 49, scope: !3907)
!3925 = !DILocation(line: 524, column: 63, scope: !3907)
!3926 = !DILocation(line: 527, column: 89, scope: !3907)
!3927 = !DILocation(line: 527, column: 5, scope: !3907)
!3928 = !DILocation(line: 527, column: 48, scope: !3907)
!3929 = !DILocation(line: 527, column: 61, scope: !3907)
!3930 = !DILocation(line: 530, column: 9, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3907, file: !264, line: 530, column: 9)
!3932 = !DILocation(line: 0, scope: !3931)
!3933 = !DILocation(line: 530, column: 9, scope: !3907)
!3934 = !DILocation(line: 531, column: 55, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3931, file: !264, line: 530, column: 40)
!3936 = !DILocation(line: 531, column: 71, scope: !3935)
!3937 = !DILocation(line: 532, column: 9, scope: !3935)
!3938 = !DILocation(line: 532, column: 56, scope: !3935)
!3939 = !DILocation(line: 533, column: 5, scope: !3935)
!3940 = !DILocation(line: 536, column: 53, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3931, file: !264, line: 535, column: 10)
!3942 = !DILocation(line: 536, column: 67, scope: !3941)
!3943 = !DILocation(line: 537, column: 9, scope: !3941)
!3944 = !DILocation(line: 537, column: 55, scope: !3941)
!3945 = !DILocation(line: 537, column: 71, scope: !3941)
!3946 = !DILocation(line: 538, column: 9, scope: !3941)
!3947 = !DILocation(line: 538, column: 55, scope: !3941)
!3948 = !DILocation(line: 543, column: 5, scope: !3907)
!3949 = !DILocation(line: 543, column: 48, scope: !3907)
!3950 = !DILocation(line: 543, column: 61, scope: !3907)
!3951 = !DILocation(line: 546, column: 5, scope: !3907)
!3952 = !DILocation(line: 546, column: 47, scope: !3907)
!3953 = !DILocation(line: 546, column: 59, scope: !3907)
!3954 = !DILocation(line: 549, column: 5, scope: !3907)
!3955 = !DILocation(line: 550, column: 1, scope: !3907)
!3956 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !264, file: !264, line: 554, type: !3957, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3959)
!3957 = !DISubroutineType(types: !3958)
!3958 = !{!3526, !3503, !362}
!3959 = !{!3960, !3961, !3962, !3963}
!3960 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3956, file: !264, line: 554, type: !3503)
!3961 = !DILocalVariable(name: "driving", arg: 2, scope: !3956, file: !264, line: 554, type: !362)
!3962 = !DILocalVariable(name: "no", scope: !3956, file: !264, line: 556, type: !175)
!3963 = !DILocalVariable(name: "remainder", scope: !3956, file: !264, line: 557, type: !175)
!3964 = !DILocation(line: 0, scope: !3956)
!3965 = !DILocation(line: 559, column: 19, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3956, file: !264, line: 559, column: 9)
!3967 = !DILocation(line: 559, column: 9, scope: !3956)
!3968 = !DILocation(line: 564, column: 19, scope: !3956)
!3969 = !DILocation(line: 569, column: 102, scope: !3956)
!3970 = !DILocation(line: 569, column: 88, scope: !3956)
!3971 = !DILocation(line: 569, column: 5, scope: !3956)
!3972 = !DILocation(line: 569, column: 47, scope: !3956)
!3973 = !DILocation(line: 569, column: 60, scope: !3956)
!3974 = !DILocation(line: 570, column: 71, scope: !3956)
!3975 = !DILocation(line: 570, column: 5, scope: !3956)
!3976 = !DILocation(line: 570, column: 47, scope: !3956)
!3977 = !DILocation(line: 570, column: 60, scope: !3956)
!3978 = !DILocation(line: 571, column: 5, scope: !3956)
!3979 = !DILocation(line: 572, column: 1, scope: !3956)
!3980 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !264, file: !264, line: 575, type: !3981, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3984)
!3981 = !DISubroutineType(types: !3982)
!3982 = !{!3526, !3503, !3983}
!3983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 32)
!3984 = !{!3985, !3986, !3987, !3988, !3989}
!3985 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3980, file: !264, line: 575, type: !3503)
!3986 = !DILocalVariable(name: "driving", arg: 2, scope: !3980, file: !264, line: 575, type: !3983)
!3987 = !DILocalVariable(name: "no", scope: !3980, file: !264, line: 577, type: !175)
!3988 = !DILocalVariable(name: "remainder", scope: !3980, file: !264, line: 578, type: !175)
!3989 = !DILocalVariable(name: "temp", scope: !3980, file: !264, line: 579, type: !175)
!3990 = !DILocation(line: 0, scope: !3980)
!3991 = !DILocation(line: 581, column: 19, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3980, file: !264, line: 581, column: 9)
!3993 = !DILocation(line: 581, column: 9, scope: !3980)
!3994 = !DILocation(line: 585, column: 14, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3980, file: !264, line: 585, column: 9)
!3996 = !DILocation(line: 585, column: 9, scope: !3980)
!3997 = !DILocation(line: 590, column: 19, scope: !3980)
!3998 = !DILocation(line: 595, column: 12, scope: !3980)
!3999 = !DILocation(line: 595, column: 54, scope: !3980)
!4000 = !DILocation(line: 596, column: 59, scope: !3980)
!4001 = !DILocation(line: 596, column: 45, scope: !3980)
!4002 = !DILocation(line: 596, column: 17, scope: !3980)
!4003 = !DILocation(line: 597, column: 18, scope: !3980)
!4004 = !DILocation(line: 600, column: 56, scope: !3980)
!4005 = !DILocation(line: 600, column: 14, scope: !3980)
!4006 = !DILocation(line: 602, column: 5, scope: !3980)
!4007 = !DILocation(line: 603, column: 1, scope: !3980)
!4008 = distinct !DISubprogram(name: "uart_receive_handler", scope: !547, file: !547, line: 146, type: !4009, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4011)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{null, !653, !211}
!4011 = !{!4012, !4013, !4014, !4016, !4017, !4018, !4019, !4075}
!4012 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4008, file: !547, line: 146, type: !653)
!4013 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !4008, file: !547, line: 146, type: !211)
!4014 = !DILocalVariable(name: "channel", scope: !4008, file: !547, line: 148, type: !4015)
!4015 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !557, line: 203, baseType: !556)
!4016 = !DILocalVariable(name: "avail_bytes", scope: !4008, file: !547, line: 149, type: !175)
!4017 = !DILocalVariable(name: "callback", scope: !4008, file: !547, line: 150, type: !662)
!4018 = !DILocalVariable(name: "arg", scope: !4008, file: !547, line: 151, type: !194)
!4019 = !DILocalVariable(name: "uartx", scope: !4008, file: !547, line: 152, type: !4020)
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4021, size: 32)
!4021 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !78, line: 588, baseType: !4022)
!4022 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 542, size: 800, elements: !4023)
!4023 = !{!4024, !4030, !4035, !4041, !4042, !4047, !4052, !4053, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074}
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !4022, file: !78, line: 547, baseType: !4025, size: 32)
!4025 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4022, file: !78, line: 543, size: 32, elements: !4026)
!4026 = !{!4027, !4028, !4029}
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !4025, file: !78, line: 544, baseType: !188, size: 32)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !4025, file: !78, line: 545, baseType: !184, size: 32)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !4025, file: !78, line: 546, baseType: !184, size: 32)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !4022, file: !78, line: 551, baseType: !4031, size: 32, offset: 32)
!4031 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4022, file: !78, line: 548, size: 32, elements: !4032)
!4032 = !{!4033, !4034}
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !4031, file: !78, line: 549, baseType: !184, size: 32)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !4031, file: !78, line: 550, baseType: !184, size: 32)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !4022, file: !78, line: 556, baseType: !4036, size: 32, offset: 64)
!4036 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4022, file: !78, line: 552, size: 32, elements: !4037)
!4037 = !{!4038, !4039, !4040}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !4036, file: !78, line: 553, baseType: !188, size: 32)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !4036, file: !78, line: 554, baseType: !184, size: 32)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !4036, file: !78, line: 555, baseType: !184, size: 32)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !4022, file: !78, line: 557, baseType: !184, size: 32, offset: 96)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !4022, file: !78, line: 561, baseType: !4043, size: 32, offset: 128)
!4043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4022, file: !78, line: 558, size: 32, elements: !4044)
!4044 = !{!4045, !4046}
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !4043, file: !78, line: 559, baseType: !184, size: 32)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !4043, file: !78, line: 560, baseType: !184, size: 32)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !4022, file: !78, line: 565, baseType: !4048, size: 32, offset: 160)
!4048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4022, file: !78, line: 562, size: 32, elements: !4049)
!4049 = !{!4050, !4051}
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !4048, file: !78, line: 563, baseType: !188, size: 32)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !4048, file: !78, line: 564, baseType: !184, size: 32)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !4022, file: !78, line: 566, baseType: !184, size: 32, offset: 192)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !4022, file: !78, line: 570, baseType: !4054, size: 32, offset: 224)
!4054 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4022, file: !78, line: 567, size: 32, elements: !4055)
!4055 = !{!4056, !4057}
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !4054, file: !78, line: 568, baseType: !184, size: 32)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !4054, file: !78, line: 569, baseType: !184, size: 32)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !4022, file: !78, line: 571, baseType: !184, size: 32, offset: 256)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !4022, file: !78, line: 572, baseType: !184, size: 32, offset: 288)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !4022, file: !78, line: 573, baseType: !184, size: 32, offset: 320)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !4022, file: !78, line: 574, baseType: !184, size: 32, offset: 352)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !4022, file: !78, line: 575, baseType: !188, size: 32, offset: 384)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !4022, file: !78, line: 576, baseType: !184, size: 32, offset: 416)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !4022, file: !78, line: 577, baseType: !184, size: 32, offset: 448)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !4022, file: !78, line: 578, baseType: !184, size: 32, offset: 480)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !4022, file: !78, line: 579, baseType: !184, size: 32, offset: 512)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !4022, file: !78, line: 580, baseType: !184, size: 32, offset: 544)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !4022, file: !78, line: 581, baseType: !184, size: 32, offset: 576)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !4022, file: !78, line: 582, baseType: !184, size: 32, offset: 608)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !4022, file: !78, line: 583, baseType: !184, size: 32, offset: 640)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !4022, file: !78, line: 584, baseType: !184, size: 32, offset: 672)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !4022, file: !78, line: 585, baseType: !184, size: 32, offset: 704)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !4022, file: !78, line: 586, baseType: !188, size: 32, offset: 736)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !4022, file: !78, line: 587, baseType: !184, size: 32, offset: 768)
!4075 = !DILocalVariable(name: "status", scope: !4008, file: !547, line: 153, type: !4076)
!4076 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !557, line: 211, baseType: !577)
!4077 = !DILocation(line: 0, scope: !4008)
!4078 = !DILocation(line: 149, column: 5, scope: !4008)
!4079 = !DILocation(line: 155, column: 9, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4008, file: !547, line: 155, column: 9)
!4081 = !DILocation(line: 155, column: 36, scope: !4080)
!4082 = !DILocation(line: 155, column: 9, scope: !4008)
!4083 = !DILocation(line: 156, column: 9, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4080, file: !547, line: 155, column: 70)
!4085 = !DILocation(line: 160, column: 13, scope: !4008)
!4086 = !DILocation(line: 161, column: 15, scope: !4008)
!4087 = !DILocation(line: 163, column: 9, scope: !4008)
!4088 = !DILocation(line: 164, column: 9, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4090, file: !547, line: 163, column: 29)
!4090 = distinct !DILexicalBlock(scope: !4008, file: !547, line: 163, column: 9)
!4091 = !DILocation(line: 165, column: 5, scope: !4089)
!4092 = !DILocation(line: 167, column: 14, scope: !4008)
!4093 = !DILocation(line: 168, column: 16, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4008, file: !547, line: 168, column: 9)
!4095 = !DILocation(line: 168, column: 9, scope: !4008)
!4096 = !DILocation(line: 169, column: 9, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4094, file: !547, line: 168, column: 28)
!4098 = !DILocation(line: 172, column: 9, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4008, file: !547, line: 172, column: 9)
!4100 = !DILocation(line: 172, column: 21, scope: !4099)
!4101 = !DILocation(line: 172, column: 9, scope: !4008)
!4102 = !DILocation(line: 176, column: 43, scope: !4008)
!4103 = !DILocation(line: 178, column: 18, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4008, file: !547, line: 178, column: 9)
!4105 = !DILocation(line: 178, column: 9, scope: !4008)
!4106 = !DILocation(line: 179, column: 9, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4104, file: !547, line: 178, column: 27)
!4108 = !DILocation(line: 177, column: 38, scope: !4008)
!4109 = !DILocation(line: 183, column: 5, scope: !4008)
!4110 = !DILocation(line: 184, column: 5, scope: !4008)
!4111 = !DILocation(line: 185, column: 5, scope: !4008)
!4112 = !DILocation(line: 187, column: 14, scope: !4008)
!4113 = !DILocation(line: 188, column: 16, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4008, file: !547, line: 188, column: 9)
!4115 = !DILocation(line: 188, column: 9, scope: !4008)
!4116 = !DILocation(line: 189, column: 9, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4114, file: !547, line: 188, column: 28)
!4118 = !DILocation(line: 192, column: 9, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4008, file: !547, line: 192, column: 9)
!4120 = !DILocation(line: 192, column: 53, scope: !4119)
!4121 = !DILocation(line: 192, column: 21, scope: !4119)
!4122 = !DILocation(line: 192, column: 9, scope: !4008)
!4123 = !DILocation(line: 193, column: 18, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4119, file: !547, line: 192, column: 83)
!4125 = !DILocation(line: 194, column: 20, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4124, file: !547, line: 194, column: 13)
!4127 = !DILocation(line: 194, column: 13, scope: !4124)
!4128 = !DILocation(line: 195, column: 13, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4126, file: !547, line: 194, column: 32)
!4130 = !DILocation(line: 199, column: 1, scope: !4008)
!4131 = distinct !DISubprogram(name: "uart_send_handler", scope: !547, file: !547, line: 210, type: !4009, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4132)
!4132 = !{!4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140}
!4133 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4131, file: !547, line: 210, type: !653)
!4134 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !4131, file: !547, line: 210, type: !211)
!4135 = !DILocalVariable(name: "channel", scope: !4131, file: !547, line: 212, type: !4015)
!4136 = !DILocalVariable(name: "status", scope: !4131, file: !547, line: 213, type: !4076)
!4137 = !DILocalVariable(name: "compare_space", scope: !4131, file: !547, line: 214, type: !175)
!4138 = !DILocalVariable(name: "avail_space", scope: !4131, file: !547, line: 214, type: !175)
!4139 = !DILocalVariable(name: "callback", scope: !4131, file: !547, line: 215, type: !662)
!4140 = !DILocalVariable(name: "arg", scope: !4131, file: !547, line: 216, type: !194)
!4141 = !DILocation(line: 0, scope: !4131)
!4142 = !DILocation(line: 214, column: 5, scope: !4131)
!4143 = !DILocation(line: 221, column: 9, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4131, file: !547, line: 221, column: 9)
!4145 = !DILocation(line: 221, column: 36, scope: !4144)
!4146 = !DILocation(line: 221, column: 9, scope: !4131)
!4147 = !DILocation(line: 222, column: 9, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4144, file: !547, line: 221, column: 70)
!4149 = !DILocation(line: 226, column: 15, scope: !4131)
!4150 = !DILocation(line: 228, column: 9, scope: !4131)
!4151 = !DILocation(line: 253, column: 47, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4153, file: !547, line: 252, column: 12)
!4153 = distinct !DILexicalBlock(scope: !4131, file: !547, line: 228, column: 9)
!4154 = !DILocation(line: 255, column: 22, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4152, file: !547, line: 255, column: 13)
!4156 = !DILocation(line: 255, column: 13, scope: !4152)
!4157 = !DILocation(line: 256, column: 13, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4155, file: !547, line: 255, column: 31)
!4159 = !DILocation(line: 254, column: 42, scope: !4152)
!4160 = !DILocation(line: 260, column: 9, scope: !4152)
!4161 = !DILocation(line: 261, column: 9, scope: !4152)
!4162 = !DILocation(line: 262, column: 9, scope: !4152)
!4163 = !DILocation(line: 264, column: 18, scope: !4152)
!4164 = !DILocation(line: 265, column: 20, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4152, file: !547, line: 265, column: 13)
!4166 = !DILocation(line: 265, column: 13, scope: !4152)
!4167 = !DILocation(line: 266, column: 13, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4165, file: !547, line: 265, column: 32)
!4169 = !DILocation(line: 269, column: 54, scope: !4152)
!4170 = !DILocation(line: 270, column: 56, scope: !4152)
!4171 = !DILocation(line: 270, column: 25, scope: !4152)
!4172 = !DILocation(line: 271, column: 13, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4152, file: !547, line: 271, column: 13)
!4174 = !DILocation(line: 271, column: 25, scope: !4173)
!4175 = !DILocation(line: 271, column: 13, scope: !4152)
!4176 = !DILocation(line: 272, column: 22, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4173, file: !547, line: 271, column: 43)
!4178 = !DILocation(line: 273, column: 24, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4177, file: !547, line: 273, column: 17)
!4180 = !DILocation(line: 273, column: 17, scope: !4177)
!4181 = !DILocation(line: 274, column: 17, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4179, file: !547, line: 273, column: 36)
!4183 = !DILocation(line: 279, column: 1, scope: !4131)
!4184 = distinct !DISubprogram(name: "uart_error_handler", scope: !547, file: !547, line: 282, type: !4185, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4187)
!4185 = !DISubroutineType(types: !4186)
!4186 = !{null, !653}
!4187 = !{!4188, !4189, !4190, !4191}
!4188 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4184, file: !547, line: 282, type: !653)
!4189 = !DILocalVariable(name: "uartx", scope: !4184, file: !547, line: 284, type: !4020)
!4190 = !DILocalVariable(name: "callback", scope: !4184, file: !547, line: 285, type: !662)
!4191 = !DILocalVariable(name: "arg", scope: !4184, file: !547, line: 286, type: !194)
!4192 = !DILocation(line: 0, scope: !4184)
!4193 = !DILocation(line: 288, column: 13, scope: !4184)
!4194 = !DILocation(line: 290, column: 10, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4184, file: !547, line: 290, column: 9)
!4196 = !DILocation(line: 290, column: 9, scope: !4184)
!4197 = !DILocation(line: 291, column: 9, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4195, file: !547, line: 290, column: 36)
!4199 = !DILocation(line: 292, column: 9, scope: !4198)
!4200 = !DILocation(line: 293, column: 47, scope: !4198)
!4201 = !DILocation(line: 295, column: 22, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4198, file: !547, line: 295, column: 13)
!4203 = !DILocation(line: 295, column: 13, scope: !4198)
!4204 = !DILocation(line: 296, column: 13, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4202, file: !547, line: 295, column: 31)
!4206 = !DILocation(line: 294, column: 42, scope: !4198)
!4207 = !DILocation(line: 299, column: 9, scope: !4198)
!4208 = !DILocation(line: 300, column: 5, scope: !4198)
!4209 = !DILocation(line: 301, column: 1, scope: !4184)
!4210 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !547, file: !547, line: 416, type: !4211, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4215)
!4211 = !DISubroutineType(types: !4212)
!4212 = !{!4213, !653, !4214}
!4213 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !572, line: 351, baseType: !588)
!4214 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !572, line: 317, baseType: !595)
!4215 = !{!4216, !4217, !4218, !4219, !4220}
!4216 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4210, file: !547, line: 416, type: !653)
!4217 = !DILocalVariable(name: "baudrate", arg: 2, scope: !4210, file: !547, line: 416, type: !4214)
!4218 = !DILocalVariable(name: "actual_baudrate", scope: !4210, file: !547, line: 418, type: !175)
!4219 = !DILocalVariable(name: "irq_status", scope: !4210, file: !547, line: 418, type: !175)
!4220 = !DILocalVariable(name: "uartx", scope: !4210, file: !547, line: 419, type: !4020)
!4221 = !DILocation(line: 0, scope: !4210)
!4222 = !DILocation(line: 421, column: 11, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4210, file: !547, line: 421, column: 9)
!4224 = !DILocation(line: 421, column: 42, scope: !4223)
!4225 = !DILocation(line: 422, column: 11, scope: !4223)
!4226 = !DILocation(line: 421, column: 9, scope: !4210)
!4227 = !DILocation(line: 426, column: 9, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4210, file: !547, line: 426, column: 9)
!4229 = !DILocation(line: 426, column: 36, scope: !4228)
!4230 = !DILocation(line: 426, column: 9, scope: !4210)
!4231 = !DILocation(line: 430, column: 18, scope: !4210)
!4232 = !DILocation(line: 434, column: 5, scope: !4210)
!4233 = !DILocation(line: 436, column: 13, scope: !4210)
!4234 = !DILocation(line: 437, column: 23, scope: !4210)
!4235 = !DILocation(line: 439, column: 5, scope: !4210)
!4236 = !DILocation(line: 441, column: 5, scope: !4210)
!4237 = !DILocation(line: 442, column: 1, scope: !4210)
!4238 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !547, file: !547, line: 120, type: !4239, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4241)
!4239 = !DISubroutineType(types: !4240)
!4240 = !{!211, !653}
!4241 = !{!4242}
!4242 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4238, file: !547, line: 120, type: !653)
!4243 = !DILocation(line: 0, scope: !4238)
!4244 = !DILocation(line: 122, column: 23, scope: !4238)
!4245 = !DILocation(line: 122, column: 5, scope: !4238)
!4246 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !547, file: !547, line: 125, type: !4247, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4249)
!4247 = !DISubroutineType(types: !4248)
!4248 = !{!211, !4214}
!4249 = !{!4250}
!4250 = !DILocalVariable(name: "baudrate", arg: 1, scope: !4246, file: !547, line: 125, type: !4214)
!4251 = !DILocation(line: 0, scope: !4246)
!4252 = !DILocation(line: 127, column: 22, scope: !4246)
!4253 = !DILocation(line: 127, column: 5, scope: !4246)
!4254 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !547, file: !547, line: 444, type: !4255, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4269)
!4255 = !DISubroutineType(types: !4256)
!4256 = !{!4213, !653, !4257}
!4257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4258, size: 32)
!4258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4259)
!4259 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !572, line: 378, baseType: !4260)
!4260 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 373, size: 128, elements: !4261)
!4261 = !{!4262, !4263, !4265, !4267}
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !4260, file: !572, line: 374, baseType: !4214, size: 32)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !4260, file: !572, line: 375, baseType: !4264, size: 32, offset: 32)
!4264 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !572, line: 326, baseType: !611)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !4260, file: !572, line: 376, baseType: !4266, size: 32, offset: 64)
!4266 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !572, line: 333, baseType: !617)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4260, file: !572, line: 377, baseType: !4268, size: 32, offset: 96)
!4268 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !572, line: 341, baseType: !621)
!4269 = !{!4270, !4271, !4272, !4273}
!4270 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4254, file: !547, line: 444, type: !653)
!4271 = !DILocalVariable(name: "config", arg: 2, scope: !4254, file: !547, line: 445, type: !4257)
!4272 = !DILocalVariable(name: "irq_status", scope: !4254, file: !547, line: 447, type: !175)
!4273 = !DILocalVariable(name: "uartx", scope: !4254, file: !547, line: 448, type: !4020)
!4274 = !DILocation(line: 0, scope: !4254)
!4275 = !DILocation(line: 450, column: 11, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4254, file: !547, line: 450, column: 9)
!4277 = !DILocation(line: 450, column: 42, scope: !4276)
!4278 = !DILocation(line: 451, column: 11, scope: !4276)
!4279 = !DILocation(line: 450, column: 9, scope: !4254)
!4280 = !DILocation(line: 455, column: 9, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4254, file: !547, line: 455, column: 9)
!4282 = !DILocation(line: 455, column: 36, scope: !4281)
!4283 = !DILocation(line: 455, column: 9, scope: !4254)
!4284 = !DILocation(line: 459, column: 18, scope: !4254)
!4285 = !DILocation(line: 466, column: 5, scope: !4254)
!4286 = !DILocation(line: 468, column: 13, scope: !4254)
!4287 = !DILocation(line: 470, column: 46, scope: !4254)
!4288 = !DILocation(line: 470, column: 5, scope: !4254)
!4289 = !DILocation(line: 471, column: 36, scope: !4254)
!4290 = !DILocation(line: 471, column: 57, scope: !4254)
!4291 = !DILocation(line: 471, column: 75, scope: !4254)
!4292 = !DILocation(line: 471, column: 5, scope: !4254)
!4293 = !DILocation(line: 473, column: 5, scope: !4254)
!4294 = !DILocation(line: 474, column: 1, scope: !4254)
!4295 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !547, file: !547, line: 130, type: !4296, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4298)
!4296 = !DISubroutineType(types: !4297)
!4297 = !{!211, !4257}
!4298 = !{!4299}
!4299 = !DILocalVariable(name: "config", arg: 1, scope: !4295, file: !547, line: 130, type: !4257)
!4300 = !DILocation(line: 0, scope: !4295)
!4301 = !DILocation(line: 132, column: 22, scope: !4295)
!4302 = !DILocation(line: 132, column: 31, scope: !4295)
!4303 = !DILocation(line: 132, column: 56, scope: !4295)
!4304 = !DILocation(line: 133, column: 22, scope: !4295)
!4305 = !DILocation(line: 133, column: 34, scope: !4295)
!4306 = !DILocation(line: 133, column: 61, scope: !4295)
!4307 = !DILocation(line: 134, column: 22, scope: !4295)
!4308 = !DILocation(line: 134, column: 31, scope: !4295)
!4309 = !DILocation(line: 134, column: 55, scope: !4295)
!4310 = !DILocation(line: 135, column: 22, scope: !4295)
!4311 = !DILocation(line: 135, column: 29, scope: !4295)
!4312 = !DILocation(line: 132, column: 5, scope: !4295)
!4313 = distinct !DISubprogram(name: "hal_uart_init", scope: !547, file: !547, line: 476, type: !4314, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4317)
!4314 = !DISubroutineType(types: !4315)
!4315 = !{!4213, !653, !4316}
!4316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4259, size: 32)
!4317 = !{!4318, !4319, !4320, !4321, !4322, !4323, !4324}
!4318 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4313, file: !547, line: 476, type: !653)
!4319 = !DILocalVariable(name: "uart_config", arg: 2, scope: !4313, file: !547, line: 476, type: !4316)
!4320 = !DILocalVariable(name: "uartx", scope: !4313, file: !547, line: 478, type: !4020)
!4321 = !DILocalVariable(name: "i", scope: !4313, file: !547, line: 479, type: !175)
!4322 = !DILocalVariable(name: "actual_baudrate", scope: !4313, file: !547, line: 479, type: !175)
!4323 = !DILocalVariable(name: "irq_status", scope: !4313, file: !547, line: 479, type: !175)
!4324 = !DILocalVariable(name: "status", scope: !4313, file: !547, line: 480, type: !4325)
!4325 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !627, line: 106, baseType: !626)
!4326 = !DILocation(line: 0, scope: !4313)
!4327 = !DILocation(line: 482, column: 11, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4313, file: !547, line: 482, column: 9)
!4329 = !DILocation(line: 482, column: 42, scope: !4328)
!4330 = !DILocation(line: 483, column: 11, scope: !4328)
!4331 = !DILocation(line: 482, column: 9, scope: !4313)
!4332 = !DILocation(line: 487, column: 18, scope: !4313)
!4333 = !DILocation(line: 488, column: 9, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4313, file: !547, line: 488, column: 9)
!4335 = !DILocation(line: 488, column: 36, scope: !4334)
!4336 = !DILocation(line: 488, column: 9, scope: !4313)
!4337 = !DILocation(line: 489, column: 9, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4334, file: !547, line: 488, column: 68)
!4339 = !DILocation(line: 490, column: 9, scope: !4338)
!4340 = !DILocation(line: 502, column: 9, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4313, file: !547, line: 502, column: 9)
!4342 = !DILocation(line: 502, column: 9, scope: !4313)
!4343 = !DILocation(line: 504, column: 13, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4345, file: !547, line: 503, column: 44)
!4345 = distinct !DILexicalBlock(scope: !4346, file: !547, line: 503, column: 9)
!4346 = distinct !DILexicalBlock(scope: !4347, file: !547, line: 503, column: 9)
!4347 = distinct !DILexicalBlock(scope: !4341, file: !547, line: 502, column: 50)
!4348 = !DILocation(line: 504, column: 32, scope: !4344)
!4349 = !DILocation(line: 510, column: 32, scope: !4344)
!4350 = !DILocation(line: 510, column: 36, scope: !4344)
!4351 = !DILocation(line: 511, column: 32, scope: !4344)
!4352 = !DILocation(line: 511, column: 37, scope: !4344)
!4353 = !DILocation(line: 503, column: 40, scope: !4345)
!4354 = !DILocation(line: 503, column: 23, scope: !4345)
!4355 = !DILocation(line: 503, column: 9, scope: !4346)
!4356 = distinct !{!4356, !4355, !4357}
!4357 = !DILocation(line: 512, column: 9, scope: !4346)
!4358 = !DILocation(line: 513, column: 40, scope: !4347)
!4359 = !DILocation(line: 514, column: 5, scope: !4347)
!4360 = !DILocation(line: 521, column: 32, scope: !4313)
!4361 = !DILocation(line: 522, column: 5, scope: !4313)
!4362 = !DILocation(line: 524, column: 31, scope: !4313)
!4363 = !DILocation(line: 524, column: 14, scope: !4313)
!4364 = !DILocation(line: 525, column: 16, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4313, file: !547, line: 525, column: 9)
!4366 = !DILocation(line: 525, column: 9, scope: !4313)
!4367 = !DILocation(line: 526, column: 9, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4365, file: !547, line: 525, column: 40)
!4369 = !DILocation(line: 530, column: 13, scope: !4313)
!4370 = !DILocation(line: 532, column: 5, scope: !4313)
!4371 = !DILocation(line: 533, column: 56, scope: !4313)
!4372 = !DILocation(line: 533, column: 23, scope: !4313)
!4373 = !DILocation(line: 534, column: 5, scope: !4313)
!4374 = !DILocation(line: 535, column: 41, scope: !4313)
!4375 = !DILocation(line: 535, column: 67, scope: !4313)
!4376 = !DILocation(line: 535, column: 90, scope: !4313)
!4377 = !DILocation(line: 535, column: 5, scope: !4313)
!4378 = !DILocation(line: 536, column: 5, scope: !4313)
!4379 = !DILocation(line: 541, column: 5, scope: !4313)
!4380 = !DILocation(line: 542, column: 1, scope: !4313)
!4381 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !547, file: !547, line: 544, type: !4382, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4384)
!4382 = !DISubroutineType(types: !4383)
!4383 = !{!4213, !653}
!4384 = !{!4385, !4386, !4387, !4388, !4389, !4390, !4391}
!4385 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4381, file: !547, line: 544, type: !653)
!4386 = !DILocalVariable(name: "uartx", scope: !4381, file: !547, line: 546, type: !4020)
!4387 = !DILocalVariable(name: "tx_dma_channel", scope: !4381, file: !547, line: 547, type: !4015)
!4388 = !DILocalVariable(name: "rx_dma_channel", scope: !4381, file: !547, line: 547, type: !4015)
!4389 = !DILocalVariable(name: "irq_status", scope: !4381, file: !547, line: 548, type: !175)
!4390 = !DILocalVariable(name: "status", scope: !4381, file: !547, line: 549, type: !4076)
!4391 = !DILocalVariable(name: "clock_status", scope: !4381, file: !547, line: 550, type: !4325)
!4392 = !DILocation(line: 0, scope: !4381)
!4393 = !DILocation(line: 552, column: 10, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4381, file: !547, line: 552, column: 9)
!4395 = !DILocation(line: 552, column: 9, scope: !4381)
!4396 = !DILocation(line: 556, column: 18, scope: !4381)
!4397 = !DILocation(line: 557, column: 9, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4381, file: !547, line: 557, column: 9)
!4399 = !DILocation(line: 557, column: 36, scope: !4398)
!4400 = !DILocation(line: 557, column: 9, scope: !4381)
!4401 = !DILocation(line: 562, column: 13, scope: !4381)
!4402 = !DILocation(line: 565, column: 5, scope: !4381)
!4403 = !DILocation(line: 568, column: 9, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4381, file: !547, line: 568, column: 9)
!4405 = !DILocation(line: 568, column: 36, scope: !4404)
!4406 = !DILocation(line: 568, column: 9, scope: !4381)
!4407 = !DILocation(line: 569, column: 26, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4404, file: !547, line: 568, column: 70)
!4409 = !DILocation(line: 570, column: 26, scope: !4408)
!4410 = !DILocation(line: 572, column: 18, scope: !4408)
!4411 = !DILocation(line: 573, column: 20, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4408, file: !547, line: 573, column: 13)
!4413 = !DILocation(line: 573, column: 13, scope: !4408)
!4414 = !DILocation(line: 574, column: 13, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4412, file: !547, line: 573, column: 32)
!4416 = !DILocation(line: 575, column: 13, scope: !4415)
!4417 = !DILocation(line: 578, column: 18, scope: !4408)
!4418 = !DILocation(line: 579, column: 20, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4408, file: !547, line: 579, column: 13)
!4420 = !DILocation(line: 579, column: 13, scope: !4408)
!4421 = !DILocation(line: 580, column: 13, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4419, file: !547, line: 579, column: 32)
!4423 = !DILocation(line: 581, column: 13, scope: !4422)
!4424 = !DILocation(line: 584, column: 18, scope: !4408)
!4425 = !DILocation(line: 585, column: 20, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4408, file: !547, line: 585, column: 13)
!4427 = !DILocation(line: 585, column: 13, scope: !4408)
!4428 = !DILocation(line: 586, column: 13, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4426, file: !547, line: 585, column: 32)
!4430 = !DILocation(line: 587, column: 13, scope: !4429)
!4431 = !DILocation(line: 590, column: 18, scope: !4408)
!4432 = !DILocation(line: 591, column: 20, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4408, file: !547, line: 591, column: 13)
!4434 = !DILocation(line: 591, column: 13, scope: !4408)
!4435 = !DILocation(line: 592, column: 13, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4433, file: !547, line: 591, column: 32)
!4437 = !DILocation(line: 593, column: 13, scope: !4436)
!4438 = !DILocation(line: 596, column: 18, scope: !4408)
!4439 = !DILocation(line: 597, column: 20, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4408, file: !547, line: 597, column: 13)
!4441 = !DILocation(line: 597, column: 13, scope: !4408)
!4442 = !DILocation(line: 598, column: 13, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4440, file: !547, line: 597, column: 32)
!4444 = !DILocation(line: 599, column: 13, scope: !4443)
!4445 = !DILocation(line: 602, column: 18, scope: !4408)
!4446 = !DILocation(line: 603, column: 20, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4408, file: !547, line: 603, column: 13)
!4448 = !DILocation(line: 603, column: 13, scope: !4408)
!4449 = !DILocation(line: 604, column: 13, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4447, file: !547, line: 603, column: 32)
!4451 = !DILocation(line: 605, column: 13, scope: !4450)
!4452 = !DILocation(line: 608, column: 30, scope: !4408)
!4453 = !DILocation(line: 608, column: 9, scope: !4408)
!4454 = !DILocation(line: 609, column: 5, scope: !4408)
!4455 = !DILocation(line: 610, column: 5, scope: !4381)
!4456 = !DILocation(line: 611, column: 38, scope: !4381)
!4457 = !DILocation(line: 611, column: 20, scope: !4381)
!4458 = !DILocation(line: 612, column: 22, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4381, file: !547, line: 612, column: 9)
!4460 = !DILocation(line: 612, column: 9, scope: !4381)
!4461 = !DILocation(line: 613, column: 9, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4459, file: !547, line: 612, column: 46)
!4463 = !DILocation(line: 614, column: 9, scope: !4462)
!4464 = !DILocation(line: 618, column: 32, scope: !4381)
!4465 = !DILocation(line: 618, column: 37, scope: !4381)
!4466 = !DILocation(line: 619, column: 32, scope: !4381)
!4467 = !DILocation(line: 619, column: 36, scope: !4381)
!4468 = !DILocation(line: 635, column: 32, scope: !4381)
!4469 = !DILocation(line: 639, column: 5, scope: !4381)
!4470 = !DILocation(line: 640, column: 1, scope: !4381)
!4471 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !547, file: !547, line: 642, type: !4472, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4474)
!4472 = !DISubroutineType(types: !4473)
!4473 = !{null, !653, !1400}
!4474 = !{!4475, !4476, !4477}
!4475 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4471, file: !547, line: 642, type: !653)
!4476 = !DILocalVariable(name: "byte", arg: 2, scope: !4471, file: !547, line: 642, type: !1400)
!4477 = !DILocalVariable(name: "uartx", scope: !4471, file: !547, line: 644, type: !4020)
!4478 = !DILocation(line: 0, scope: !4471)
!4479 = !DILocation(line: 646, column: 10, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4471, file: !547, line: 646, column: 9)
!4481 = !DILocation(line: 646, column: 9, scope: !4471)
!4482 = !DILocation(line: 650, column: 9, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4471, file: !547, line: 650, column: 9)
!4484 = !DILocation(line: 650, column: 36, scope: !4483)
!4485 = !DILocation(line: 650, column: 9, scope: !4471)
!4486 = !DILocation(line: 654, column: 13, scope: !4471)
!4487 = !DILocation(line: 655, column: 5, scope: !4471)
!4488 = !DILocation(line: 656, column: 1, scope: !4471)
!4489 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !547, file: !547, line: 658, type: !4490, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4494)
!4490 = !DISubroutineType(types: !4491)
!4491 = !{!175, !653, !4492, !175}
!4492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4493, size: 32)
!4493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !378)
!4494 = !{!4495, !4496, !4497, !4498}
!4495 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4489, file: !547, line: 658, type: !653)
!4496 = !DILocalVariable(name: "data", arg: 2, scope: !4489, file: !547, line: 658, type: !4492)
!4497 = !DILocalVariable(name: "size", arg: 3, scope: !4489, file: !547, line: 658, type: !175)
!4498 = !DILocalVariable(name: "i", scope: !4489, file: !547, line: 660, type: !175)
!4499 = !DILocation(line: 0, scope: !4489)
!4500 = !DILocation(line: 662, column: 11, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4489, file: !547, line: 662, column: 9)
!4502 = !DILocation(line: 662, column: 42, scope: !4501)
!4503 = !DILocation(line: 666, column: 9, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4489, file: !547, line: 666, column: 9)
!4505 = !DILocation(line: 666, column: 36, scope: !4504)
!4506 = !DILocation(line: 666, column: 9, scope: !4489)
!4507 = !DILocation(line: 671, column: 38, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4509, file: !547, line: 670, column: 32)
!4509 = distinct !DILexicalBlock(scope: !4510, file: !547, line: 670, column: 5)
!4510 = distinct !DILexicalBlock(scope: !4489, file: !547, line: 670, column: 5)
!4511 = !DILocation(line: 671, column: 9, scope: !4508)
!4512 = !DILocation(line: 672, column: 13, scope: !4508)
!4513 = !DILocation(line: 670, column: 28, scope: !4509)
!4514 = !DILocation(line: 670, column: 19, scope: !4509)
!4515 = !DILocation(line: 670, column: 5, scope: !4510)
!4516 = distinct !{!4516, !4515, !4517}
!4517 = !DILocation(line: 673, column: 5, scope: !4510)
!4518 = !DILocation(line: 676, column: 1, scope: !4489)
!4519 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !547, file: !547, line: 678, type: !4490, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4520)
!4520 = !{!4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528}
!4521 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4519, file: !547, line: 678, type: !653)
!4522 = !DILocalVariable(name: "data", arg: 2, scope: !4519, file: !547, line: 678, type: !4492)
!4523 = !DILocalVariable(name: "size", arg: 3, scope: !4519, file: !547, line: 678, type: !175)
!4524 = !DILocalVariable(name: "channel", scope: !4519, file: !547, line: 680, type: !4015)
!4525 = !DILocalVariable(name: "i", scope: !4519, file: !547, line: 681, type: !175)
!4526 = !DILocalVariable(name: "real_count", scope: !4519, file: !547, line: 681, type: !175)
!4527 = !DILocalVariable(name: "avail_space", scope: !4519, file: !547, line: 681, type: !175)
!4528 = !DILocalVariable(name: "status", scope: !4519, file: !547, line: 682, type: !4076)
!4529 = !DILocation(line: 0, scope: !4519)
!4530 = !DILocation(line: 681, column: 5, scope: !4519)
!4531 = !DILocation(line: 687, column: 11, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4519, file: !547, line: 687, column: 9)
!4533 = !DILocation(line: 687, column: 42, scope: !4532)
!4534 = !DILocation(line: 691, column: 9, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4519, file: !547, line: 691, column: 9)
!4536 = !DILocation(line: 691, column: 36, scope: !4535)
!4537 = !DILocation(line: 691, column: 9, scope: !4519)
!4538 = !DILocation(line: 704, column: 15, scope: !4519)
!4539 = !DILocation(line: 706, column: 14, scope: !4519)
!4540 = !DILocation(line: 707, column: 16, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4519, file: !547, line: 707, column: 9)
!4542 = !DILocation(line: 707, column: 9, scope: !4519)
!4543 = !DILocation(line: 708, column: 9, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4541, file: !547, line: 707, column: 28)
!4545 = !DILocation(line: 712, column: 9, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4519, file: !547, line: 712, column: 9)
!4547 = !DILocation(line: 712, column: 21, scope: !4546)
!4548 = !DILocation(line: 717, column: 19, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4550, file: !547, line: 717, column: 5)
!4550 = distinct !DILexicalBlock(scope: !4519, file: !547, line: 717, column: 5)
!4551 = !DILocation(line: 717, column: 5, scope: !4550)
!4552 = distinct !{!4552, !4551, !4553}
!4553 = !DILocation(line: 723, column: 5, scope: !4550)
!4554 = !DILocation(line: 718, column: 42, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4549, file: !547, line: 717, column: 38)
!4556 = !DILocation(line: 718, column: 18, scope: !4555)
!4557 = !DILocation(line: 719, column: 20, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4555, file: !547, line: 719, column: 13)
!4559 = !DILocation(line: 717, column: 34, scope: !4549)
!4560 = !DILocation(line: 719, column: 13, scope: !4555)
!4561 = !DILocation(line: 720, column: 13, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4558, file: !547, line: 719, column: 32)
!4563 = !DILocation(line: 728, column: 23, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4519, file: !547, line: 728, column: 9)
!4565 = !DILocation(line: 728, column: 20, scope: !4564)
!4566 = !DILocation(line: 728, column: 9, scope: !4519)
!4567 = !DILocation(line: 729, column: 18, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4564, file: !547, line: 728, column: 36)
!4569 = !DILocation(line: 730, column: 20, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4568, file: !547, line: 730, column: 13)
!4571 = !DILocation(line: 730, column: 13, scope: !4568)
!4572 = !DILocation(line: 731, column: 13, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4570, file: !547, line: 730, column: 32)
!4574 = !DILocation(line: 737, column: 1, scope: !4519)
!4575 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !547, file: !547, line: 739, type: !4576, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4578)
!4576 = !DISubroutineType(types: !4577)
!4577 = !{!1400, !653}
!4578 = !{!4579, !4580, !4581}
!4579 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4575, file: !547, line: 739, type: !653)
!4580 = !DILocalVariable(name: "data", scope: !4575, file: !547, line: 741, type: !1400)
!4581 = !DILocalVariable(name: "uartx", scope: !4575, file: !547, line: 742, type: !4020)
!4582 = !DILocation(line: 0, scope: !4575)
!4583 = !DILocation(line: 744, column: 10, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4575, file: !547, line: 744, column: 9)
!4585 = !DILocation(line: 744, column: 9, scope: !4575)
!4586 = !DILocation(line: 748, column: 9, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4575, file: !547, line: 748, column: 9)
!4588 = !DILocation(line: 748, column: 36, scope: !4587)
!4589 = !DILocation(line: 748, column: 9, scope: !4575)
!4590 = !DILocation(line: 752, column: 13, scope: !4575)
!4591 = !DILocation(line: 754, column: 12, scope: !4575)
!4592 = !DILocation(line: 756, column: 5, scope: !4575)
!4593 = !DILocation(line: 757, column: 1, scope: !4575)
!4594 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !547, file: !547, line: 759, type: !4595, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4597)
!4595 = !DISubroutineType(types: !4596)
!4596 = !{!175, !653}
!4597 = !{!4598, !4599, !4600}
!4598 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4594, file: !547, line: 759, type: !653)
!4599 = !DILocalVariable(name: "data", scope: !4594, file: !547, line: 761, type: !175)
!4600 = !DILocalVariable(name: "uartx", scope: !4594, file: !547, line: 762, type: !4020)
!4601 = !DILocation(line: 0, scope: !4594)
!4602 = !DILocation(line: 764, column: 10, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4594, file: !547, line: 764, column: 9)
!4604 = !DILocation(line: 764, column: 9, scope: !4594)
!4605 = !DILocation(line: 768, column: 9, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4594, file: !547, line: 768, column: 9)
!4607 = !DILocation(line: 768, column: 36, scope: !4606)
!4608 = !DILocation(line: 768, column: 9, scope: !4594)
!4609 = !DILocation(line: 772, column: 13, scope: !4594)
!4610 = !DILocation(line: 774, column: 12, scope: !4594)
!4611 = !DILocation(line: 776, column: 5, scope: !4594)
!4612 = !DILocation(line: 777, column: 1, scope: !4594)
!4613 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !547, file: !547, line: 779, type: !4614, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4616)
!4614 = !DISubroutineType(types: !4615)
!4615 = !{!175, !653, !680, !175}
!4616 = !{!4617, !4618, !4619, !4620, !4621}
!4617 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4613, file: !547, line: 779, type: !653)
!4618 = !DILocalVariable(name: "buffer", arg: 2, scope: !4613, file: !547, line: 779, type: !680)
!4619 = !DILocalVariable(name: "size", arg: 3, scope: !4613, file: !547, line: 779, type: !175)
!4620 = !DILocalVariable(name: "i", scope: !4613, file: !547, line: 781, type: !175)
!4621 = !DILocalVariable(name: "pbuf", scope: !4613, file: !547, line: 782, type: !680)
!4622 = !DILocation(line: 0, scope: !4613)
!4623 = !DILocation(line: 784, column: 11, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4613, file: !547, line: 784, column: 9)
!4625 = !DILocation(line: 784, column: 42, scope: !4624)
!4626 = !DILocation(line: 789, column: 9, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4613, file: !547, line: 789, column: 9)
!4628 = !DILocation(line: 789, column: 36, scope: !4627)
!4629 = !DILocation(line: 789, column: 9, scope: !4613)
!4630 = !DILocation(line: 794, column: 19, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4632, file: !547, line: 793, column: 32)
!4632 = distinct !DILexicalBlock(scope: !4633, file: !547, line: 793, column: 5)
!4633 = distinct !DILexicalBlock(scope: !4613, file: !547, line: 793, column: 5)
!4634 = !DILocation(line: 794, column: 9, scope: !4631)
!4635 = !DILocation(line: 794, column: 17, scope: !4631)
!4636 = !DILocation(line: 793, column: 28, scope: !4632)
!4637 = !DILocation(line: 793, column: 19, scope: !4632)
!4638 = !DILocation(line: 793, column: 5, scope: !4633)
!4639 = distinct !{!4639, !4638, !4640}
!4640 = !DILocation(line: 795, column: 5, scope: !4633)
!4641 = !DILocation(line: 798, column: 1, scope: !4613)
!4642 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !547, file: !547, line: 800, type: !4614, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4643)
!4643 = !{!4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651}
!4644 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4642, file: !547, line: 800, type: !653)
!4645 = !DILocalVariable(name: "buffer", arg: 2, scope: !4642, file: !547, line: 800, type: !680)
!4646 = !DILocalVariable(name: "size", arg: 3, scope: !4642, file: !547, line: 800, type: !175)
!4647 = !DILocalVariable(name: "channel", scope: !4642, file: !547, line: 802, type: !4015)
!4648 = !DILocalVariable(name: "receive_count", scope: !4642, file: !547, line: 803, type: !175)
!4649 = !DILocalVariable(name: "avail_count", scope: !4642, file: !547, line: 803, type: !175)
!4650 = !DILocalVariable(name: "index", scope: !4642, file: !547, line: 804, type: !175)
!4651 = !DILocalVariable(name: "status", scope: !4642, file: !547, line: 805, type: !4076)
!4652 = !DILocation(line: 0, scope: !4642)
!4653 = !DILocation(line: 803, column: 5, scope: !4642)
!4654 = !DILocation(line: 807, column: 11, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4642, file: !547, line: 807, column: 9)
!4656 = !DILocation(line: 807, column: 42, scope: !4655)
!4657 = !DILocation(line: 813, column: 9, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4642, file: !547, line: 813, column: 9)
!4659 = !DILocation(line: 813, column: 36, scope: !4658)
!4660 = !DILocation(line: 813, column: 9, scope: !4642)
!4661 = !DILocation(line: 817, column: 15, scope: !4642)
!4662 = !DILocation(line: 819, column: 14, scope: !4642)
!4663 = !DILocation(line: 820, column: 16, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4642, file: !547, line: 820, column: 9)
!4665 = !DILocation(line: 820, column: 9, scope: !4642)
!4666 = !DILocation(line: 821, column: 9, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4664, file: !547, line: 820, column: 28)
!4668 = !DILocation(line: 825, column: 9, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4642, file: !547, line: 825, column: 9)
!4670 = !DILocation(line: 825, column: 21, scope: !4669)
!4671 = !DILocation(line: 830, column: 27, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4673, file: !547, line: 830, column: 5)
!4673 = distinct !DILexicalBlock(scope: !4642, file: !547, line: 830, column: 5)
!4674 = !DILocation(line: 830, column: 5, scope: !4673)
!4675 = distinct !{!4675, !4674, !4676}
!4676 = !DILocation(line: 836, column: 5, scope: !4673)
!4677 = !DILocation(line: 831, column: 42, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4672, file: !547, line: 830, column: 53)
!4679 = !DILocation(line: 831, column: 18, scope: !4678)
!4680 = !DILocation(line: 832, column: 20, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4678, file: !547, line: 832, column: 13)
!4682 = !DILocation(line: 830, column: 49, scope: !4672)
!4683 = !DILocation(line: 832, column: 13, scope: !4678)
!4684 = !DILocation(line: 833, column: 13, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4681, file: !547, line: 832, column: 32)
!4686 = !DILocation(line: 841, column: 26, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4642, file: !547, line: 841, column: 9)
!4688 = !DILocation(line: 841, column: 23, scope: !4687)
!4689 = !DILocation(line: 841, column: 9, scope: !4642)
!4690 = !DILocation(line: 842, column: 18, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4687, file: !547, line: 841, column: 39)
!4692 = !DILocation(line: 843, column: 20, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4691, file: !547, line: 843, column: 13)
!4694 = !DILocation(line: 843, column: 13, scope: !4691)
!4695 = !DILocation(line: 844, column: 13, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4693, file: !547, line: 843, column: 32)
!4697 = !DILocation(line: 850, column: 1, scope: !4642)
!4698 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !547, file: !547, line: 891, type: !4699, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4701)
!4699 = !DISubroutineType(types: !4700)
!4700 = !{!4213, !653, !662, !194}
!4701 = !{!4702, !4703, !4704, !4705, !4706, !4707, !4708, !4709}
!4702 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4698, file: !547, line: 891, type: !653)
!4703 = !DILocalVariable(name: "user_callback", arg: 2, scope: !4698, file: !547, line: 892, type: !662)
!4704 = !DILocalVariable(name: "user_data", arg: 3, scope: !4698, file: !547, line: 893, type: !194)
!4705 = !DILocalVariable(name: "tx_dma_channel", scope: !4698, file: !547, line: 895, type: !4015)
!4706 = !DILocalVariable(name: "rx_dma_channel", scope: !4698, file: !547, line: 895, type: !4015)
!4707 = !DILocalVariable(name: "irq_status", scope: !4698, file: !547, line: 896, type: !175)
!4708 = !DILocalVariable(name: "status", scope: !4698, file: !547, line: 897, type: !4076)
!4709 = !DILocalVariable(name: "nvic_status", scope: !4698, file: !547, line: 898, type: !790)
!4710 = !DILocation(line: 0, scope: !4698)
!4711 = !DILocation(line: 900, column: 11, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4698, file: !547, line: 900, column: 9)
!4713 = !DILocation(line: 900, column: 42, scope: !4712)
!4714 = !DILocation(line: 905, column: 18, scope: !4698)
!4715 = !DILocation(line: 906, column: 9, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4698, file: !547, line: 906, column: 9)
!4717 = !DILocation(line: 906, column: 36, scope: !4716)
!4718 = !DILocation(line: 906, column: 9, scope: !4698)
!4719 = !DILocation(line: 911, column: 22, scope: !4698)
!4720 = !DILocation(line: 912, column: 22, scope: !4698)
!4721 = !DILocation(line: 914, column: 32, scope: !4698)
!4722 = !DILocation(line: 914, column: 37, scope: !4698)
!4723 = !DILocation(line: 915, column: 32, scope: !4698)
!4724 = !DILocation(line: 915, column: 36, scope: !4698)
!4725 = !DILocation(line: 917, column: 91, scope: !4698)
!4726 = !DILocation(line: 917, column: 56, scope: !4698)
!4727 = !DILocation(line: 917, column: 5, scope: !4698)
!4728 = !DILocation(line: 918, column: 80, scope: !4698)
!4729 = !DILocation(line: 918, column: 14, scope: !4698)
!4730 = !DILocation(line: 919, column: 16, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4698, file: !547, line: 919, column: 9)
!4732 = !DILocation(line: 919, column: 9, scope: !4698)
!4733 = !DILocation(line: 920, column: 9, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4731, file: !547, line: 919, column: 28)
!4735 = !DILocation(line: 921, column: 9, scope: !4734)
!4736 = !DILocation(line: 924, column: 97, scope: !4698)
!4737 = !DILocation(line: 924, column: 56, scope: !4698)
!4738 = !DILocation(line: 924, column: 5, scope: !4698)
!4739 = !DILocation(line: 925, column: 80, scope: !4698)
!4740 = !DILocation(line: 925, column: 14, scope: !4698)
!4741 = !DILocation(line: 926, column: 16, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4698, file: !547, line: 926, column: 9)
!4743 = !DILocation(line: 926, column: 9, scope: !4698)
!4744 = !DILocation(line: 927, column: 9, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4742, file: !547, line: 926, column: 28)
!4746 = !DILocation(line: 928, column: 9, scope: !4745)
!4747 = !DILocation(line: 931, column: 49, scope: !4698)
!4748 = !DILocation(line: 931, column: 19, scope: !4698)
!4749 = !DILocation(line: 932, column: 21, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4698, file: !547, line: 932, column: 9)
!4751 = !DILocation(line: 932, column: 9, scope: !4698)
!4752 = !DILocation(line: 933, column: 9, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4750, file: !547, line: 932, column: 44)
!4754 = !DILocation(line: 934, column: 9, scope: !4753)
!4755 = !DILocation(line: 938, column: 5, scope: !4698)
!4756 = !DILocation(line: 940, column: 32, scope: !4698)
!4757 = !DILocation(line: 944, column: 5, scope: !4698)
!4758 = !DILocation(line: 945, column: 1, scope: !4698)
!4759 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !547, file: !547, line: 303, type: !4760, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4763)
!4760 = !DISubroutineType(types: !4761)
!4761 = !{null, !4762, !194}
!4762 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !557, line: 225, baseType: !641)
!4763 = !{!4764, !4765, !4766}
!4764 = !DILocalVariable(name: "event", arg: 1, scope: !4759, file: !547, line: 303, type: !4762)
!4765 = !DILocalVariable(name: "user_data", arg: 2, scope: !4759, file: !547, line: 303, type: !194)
!4766 = !DILocalVariable(name: "callback_data", scope: !4759, file: !547, line: 305, type: !646)
!4767 = !DILocation(line: 0, scope: !4759)
!4768 = !DILocation(line: 307, column: 24, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4759, file: !547, line: 307, column: 9)
!4770 = !DILocation(line: 0, scope: !4769)
!4771 = !DILocation(line: 307, column: 9, scope: !4759)
!4772 = !DILocation(line: 308, column: 9, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4769, file: !547, line: 307, column: 39)
!4774 = !DILocation(line: 309, column: 5, scope: !4773)
!4775 = !DILocation(line: 310, column: 9, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4769, file: !547, line: 309, column: 12)
!4777 = !DILocation(line: 312, column: 1, scope: !4759)
!4778 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !547, file: !547, line: 852, type: !4185, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4779)
!4779 = !{!4780, !4781, !4782, !4783, !4784}
!4780 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4778, file: !547, line: 852, type: !653)
!4781 = !DILocalVariable(name: "uartx", scope: !4778, file: !547, line: 854, type: !4020)
!4782 = !DILocalVariable(name: "tx_dma_channel", scope: !4778, file: !547, line: 855, type: !4015)
!4783 = !DILocalVariable(name: "rx_dma_channel", scope: !4778, file: !547, line: 855, type: !4015)
!4784 = !DILocalVariable(name: "status", scope: !4778, file: !547, line: 856, type: !4076)
!4785 = !DILocation(line: 0, scope: !4778)
!4786 = !DILocation(line: 858, column: 13, scope: !4778)
!4787 = !DILocation(line: 859, column: 22, scope: !4778)
!4788 = !DILocation(line: 860, column: 22, scope: !4778)
!4789 = !DILocation(line: 866, column: 5, scope: !4778)
!4790 = !DILocation(line: 867, column: 25, scope: !4778)
!4791 = !DILocation(line: 867, column: 5, scope: !4778)
!4792 = !DILocation(line: 868, column: 14, scope: !4778)
!4793 = !DILocation(line: 869, column: 16, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4778, file: !547, line: 869, column: 9)
!4795 = !DILocation(line: 869, column: 9, scope: !4778)
!4796 = !DILocation(line: 870, column: 9, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4794, file: !547, line: 869, column: 28)
!4798 = !DILocation(line: 873, column: 14, scope: !4778)
!4799 = !DILocation(line: 874, column: 16, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4778, file: !547, line: 874, column: 9)
!4801 = !DILocation(line: 874, column: 9, scope: !4778)
!4802 = !DILocation(line: 875, column: 9, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4800, file: !547, line: 874, column: 28)
!4804 = !DILocation(line: 878, column: 14, scope: !4778)
!4805 = !DILocation(line: 879, column: 16, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4778, file: !547, line: 879, column: 9)
!4807 = !DILocation(line: 879, column: 9, scope: !4778)
!4808 = !DILocation(line: 880, column: 9, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4806, file: !547, line: 879, column: 28)
!4810 = !DILocation(line: 883, column: 14, scope: !4778)
!4811 = !DILocation(line: 884, column: 16, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4778, file: !547, line: 884, column: 9)
!4813 = !DILocation(line: 884, column: 9, scope: !4778)
!4814 = !DILocation(line: 885, column: 9, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4812, file: !547, line: 884, column: 28)
!4816 = !DILocation(line: 888, column: 5, scope: !4778)
!4817 = !DILocation(line: 889, column: 1, scope: !4778)
!4818 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !547, file: !547, line: 947, type: !4595, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4819)
!4819 = !{!4820, !4821, !4822, !4823}
!4820 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4818, file: !547, line: 947, type: !653)
!4821 = !DILocalVariable(name: "channel", scope: !4818, file: !547, line: 949, type: !4015)
!4822 = !DILocalVariable(name: "roomleft", scope: !4818, file: !547, line: 950, type: !175)
!4823 = !DILocalVariable(name: "status", scope: !4818, file: !547, line: 951, type: !4076)
!4824 = !DILocation(line: 0, scope: !4818)
!4825 = !DILocation(line: 950, column: 5, scope: !4818)
!4826 = !DILocation(line: 953, column: 10, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4818, file: !547, line: 953, column: 9)
!4828 = !DILocation(line: 953, column: 9, scope: !4818)
!4829 = !DILocation(line: 957, column: 9, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4818, file: !547, line: 957, column: 9)
!4831 = !DILocation(line: 957, column: 36, scope: !4830)
!4832 = !DILocation(line: 957, column: 9, scope: !4818)
!4833 = !DILocation(line: 961, column: 15, scope: !4818)
!4834 = !DILocation(line: 962, column: 14, scope: !4818)
!4835 = !DILocation(line: 963, column: 16, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4818, file: !547, line: 963, column: 9)
!4837 = !DILocation(line: 963, column: 9, scope: !4818)
!4838 = !DILocation(line: 964, column: 9, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4836, file: !547, line: 963, column: 28)
!4840 = !DILocation(line: 968, column: 12, scope: !4818)
!4841 = !DILocation(line: 968, column: 5, scope: !4818)
!4842 = !DILocation(line: 969, column: 1, scope: !4818)
!4843 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !547, file: !547, line: 971, type: !4595, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4844)
!4844 = !{!4845, !4846, !4847, !4848}
!4845 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4843, file: !547, line: 971, type: !653)
!4846 = !DILocalVariable(name: "channel", scope: !4843, file: !547, line: 973, type: !4015)
!4847 = !DILocalVariable(name: "avail", scope: !4843, file: !547, line: 974, type: !175)
!4848 = !DILocalVariable(name: "status", scope: !4843, file: !547, line: 975, type: !4076)
!4849 = !DILocation(line: 0, scope: !4843)
!4850 = !DILocation(line: 974, column: 5, scope: !4843)
!4851 = !DILocation(line: 977, column: 10, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4843, file: !547, line: 977, column: 9)
!4853 = !DILocation(line: 977, column: 9, scope: !4843)
!4854 = !DILocation(line: 981, column: 9, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4843, file: !547, line: 981, column: 9)
!4856 = !DILocation(line: 981, column: 36, scope: !4855)
!4857 = !DILocation(line: 981, column: 9, scope: !4843)
!4858 = !DILocation(line: 985, column: 15, scope: !4843)
!4859 = !DILocation(line: 986, column: 14, scope: !4843)
!4860 = !DILocation(line: 987, column: 16, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4843, file: !547, line: 987, column: 9)
!4862 = !DILocation(line: 987, column: 9, scope: !4843)
!4863 = !DILocation(line: 988, column: 9, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4861, file: !547, line: 987, column: 28)
!4865 = !DILocation(line: 992, column: 12, scope: !4843)
!4866 = !DILocation(line: 992, column: 5, scope: !4843)
!4867 = !DILocation(line: 993, column: 1, scope: !4843)
!4868 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !547, file: !547, line: 995, type: !4382, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4869)
!4869 = !{!4870, !4871}
!4870 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4868, file: !547, line: 995, type: !653)
!4871 = !DILocalVariable(name: "uartx", scope: !4868, file: !547, line: 997, type: !4020)
!4872 = !DILocation(line: 0, scope: !4868)
!4873 = !DILocation(line: 999, column: 10, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4868, file: !547, line: 999, column: 9)
!4875 = !DILocation(line: 999, column: 9, scope: !4868)
!4876 = !DILocation(line: 1003, column: 9, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4868, file: !547, line: 1003, column: 9)
!4878 = !DILocation(line: 1003, column: 36, scope: !4877)
!4879 = !DILocation(line: 1003, column: 9, scope: !4868)
!4880 = !DILocation(line: 1007, column: 13, scope: !4868)
!4881 = !DILocation(line: 1009, column: 5, scope: !4868)
!4882 = !DILocation(line: 1015, column: 5, scope: !4868)
!4883 = !DILocation(line: 1016, column: 1, scope: !4868)
!4884 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !547, file: !547, line: 1018, type: !4885, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4887)
!4885 = !DISubroutineType(types: !4886)
!4886 = !{!4213, !653, !378, !378, !378}
!4887 = !{!4888, !4889, !4890, !4891, !4892}
!4888 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4884, file: !547, line: 1018, type: !653)
!4889 = !DILocalVariable(name: "xon", arg: 2, scope: !4884, file: !547, line: 1019, type: !378)
!4890 = !DILocalVariable(name: "xoff", arg: 3, scope: !4884, file: !547, line: 1020, type: !378)
!4891 = !DILocalVariable(name: "escape_character", arg: 4, scope: !4884, file: !547, line: 1021, type: !378)
!4892 = !DILocalVariable(name: "uartx", scope: !4884, file: !547, line: 1023, type: !4020)
!4893 = !DILocation(line: 0, scope: !4884)
!4894 = !DILocation(line: 1025, column: 10, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4884, file: !547, line: 1025, column: 9)
!4896 = !DILocation(line: 1025, column: 9, scope: !4884)
!4897 = !DILocation(line: 1029, column: 9, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4884, file: !547, line: 1029, column: 9)
!4899 = !DILocation(line: 1029, column: 36, scope: !4898)
!4900 = !DILocation(line: 1029, column: 9, scope: !4884)
!4901 = !DILocation(line: 1033, column: 13, scope: !4884)
!4902 = !DILocation(line: 1035, column: 5, scope: !4884)
!4903 = !DILocation(line: 1044, column: 5, scope: !4884)
!4904 = !DILocation(line: 1045, column: 1, scope: !4884)
!4905 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !547, file: !547, line: 1047, type: !4382, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4906)
!4906 = !{!4907, !4908}
!4907 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4905, file: !547, line: 1047, type: !653)
!4908 = !DILocalVariable(name: "uartx", scope: !4905, file: !547, line: 1049, type: !4020)
!4909 = !DILocation(line: 0, scope: !4905)
!4910 = !DILocation(line: 1051, column: 10, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4905, file: !547, line: 1051, column: 9)
!4912 = !DILocation(line: 1051, column: 9, scope: !4905)
!4913 = !DILocation(line: 1055, column: 9, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4905, file: !547, line: 1055, column: 9)
!4915 = !DILocation(line: 1055, column: 36, scope: !4914)
!4916 = !DILocation(line: 1055, column: 9, scope: !4905)
!4917 = !DILocation(line: 1059, column: 13, scope: !4905)
!4918 = !DILocation(line: 1061, column: 5, scope: !4905)
!4919 = !DILocation(line: 1067, column: 5, scope: !4905)
!4920 = !DILocation(line: 1068, column: 1, scope: !4905)
!4921 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !547, file: !547, line: 1071, type: !4922, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4926)
!4922 = !DISubroutineType(types: !4923)
!4923 = !{!4213, !653, !4924}
!4924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4925, size: 32)
!4925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !676)
!4926 = !{!4927, !4928, !4929, !4930, !4936, !4937, !4938}
!4927 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4921, file: !547, line: 1071, type: !653)
!4928 = !DILocalVariable(name: "dma_config", arg: 2, scope: !4921, file: !547, line: 1071, type: !4924)
!4929 = !DILocalVariable(name: "irq_status", scope: !4921, file: !547, line: 1073, type: !175)
!4930 = !DILocalVariable(name: "internal_dma_config", scope: !4921, file: !547, line: 1074, type: !4931)
!4931 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !557, line: 283, baseType: !4932)
!4932 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !557, line: 280, size: 64, elements: !4933)
!4933 = !{!4934, !4935}
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !4932, file: !557, line: 281, baseType: !175, size: 32)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4932, file: !557, line: 282, baseType: !175, size: 32, offset: 32)
!4936 = !DILocalVariable(name: "tx_dma_channel", scope: !4921, file: !547, line: 1075, type: !4015)
!4937 = !DILocalVariable(name: "rx_dma_channel", scope: !4921, file: !547, line: 1075, type: !4015)
!4938 = !DILocalVariable(name: "status", scope: !4921, file: !547, line: 1076, type: !4076)
!4939 = !DILocation(line: 0, scope: !4921)
!4940 = !DILocation(line: 1074, column: 5, scope: !4921)
!4941 = !DILocation(line: 1074, column: 19, scope: !4921)
!4942 = !DILocation(line: 1078, column: 10, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4921, file: !547, line: 1078, column: 9)
!4944 = !DILocation(line: 1078, column: 9, scope: !4921)
!4945 = !DILocation(line: 1081, column: 22, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4921, file: !547, line: 1081, column: 9)
!4947 = !DILocation(line: 1081, column: 40, scope: !4946)
!4948 = !DILocation(line: 1081, column: 49, scope: !4946)
!4949 = !DILocation(line: 1082, column: 22, scope: !4946)
!4950 = !DILocation(line: 1082, column: 43, scope: !4946)
!4951 = !DILocation(line: 1081, column: 9, scope: !4921)
!4952 = !DILocation(line: 1085, column: 22, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4921, file: !547, line: 1085, column: 9)
!4954 = !DILocation(line: 1085, column: 45, scope: !4953)
!4955 = !DILocation(line: 1085, column: 76, scope: !4953)
!4956 = !DILocation(line: 1086, column: 22, scope: !4953)
!4957 = !DILocation(line: 1086, column: 48, scope: !4953)
!4958 = !DILocation(line: 1086, column: 79, scope: !4953)
!4959 = !DILocation(line: 1090, column: 22, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4921, file: !547, line: 1090, column: 9)
!4961 = !DILocation(line: 1090, column: 48, scope: !4960)
!4962 = !DILocation(line: 1090, column: 79, scope: !4960)
!4963 = !DILocation(line: 1091, column: 22, scope: !4960)
!4964 = !DILocation(line: 1091, column: 51, scope: !4960)
!4965 = !DILocation(line: 1091, column: 82, scope: !4960)
!4966 = !DILocation(line: 1092, column: 22, scope: !4960)
!4967 = !DILocation(line: 1092, column: 47, scope: !4960)
!4968 = !DILocation(line: 1092, column: 78, scope: !4960)
!4969 = !DILocation(line: 1098, column: 9, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4921, file: !547, line: 1098, column: 9)
!4971 = !DILocation(line: 1098, column: 36, scope: !4970)
!4972 = !DILocation(line: 1098, column: 9, scope: !4921)
!4973 = !DILocation(line: 1102, column: 22, scope: !4921)
!4974 = !DILocation(line: 1103, column: 22, scope: !4921)
!4975 = !DILocation(line: 1105, column: 14, scope: !4921)
!4976 = !DILocation(line: 1106, column: 16, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4921, file: !547, line: 1106, column: 9)
!4978 = !DILocation(line: 1106, column: 9, scope: !4921)
!4979 = !DILocation(line: 1107, column: 9, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4977, file: !547, line: 1106, column: 28)
!4981 = !DILocation(line: 1110, column: 62, scope: !4921)
!4982 = !DILocation(line: 1110, column: 40, scope: !4921)
!4983 = !DILocation(line: 1110, column: 25, scope: !4921)
!4984 = !DILocation(line: 1110, column: 38, scope: !4921)
!4985 = !DILocation(line: 1111, column: 44, scope: !4921)
!4986 = !DILocation(line: 1111, column: 25, scope: !4921)
!4987 = !DILocation(line: 1111, column: 30, scope: !4921)
!4988 = !DILocation(line: 1112, column: 14, scope: !4921)
!4989 = !DILocation(line: 1113, column: 16, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4921, file: !547, line: 1113, column: 9)
!4991 = !DILocation(line: 1113, column: 9, scope: !4921)
!4992 = !DILocation(line: 1114, column: 9, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4990, file: !547, line: 1113, column: 28)
!4994 = !DILocation(line: 1117, column: 61, scope: !4921)
!4995 = !DILocation(line: 1117, column: 14, scope: !4921)
!4996 = !DILocation(line: 1118, column: 16, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4921, file: !547, line: 1118, column: 9)
!4998 = !DILocation(line: 1118, column: 9, scope: !4921)
!4999 = !DILocation(line: 1119, column: 9, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4997, file: !547, line: 1118, column: 28)
!5001 = !DILocation(line: 1123, column: 14, scope: !4921)
!5002 = !DILocation(line: 1124, column: 16, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4921, file: !547, line: 1124, column: 9)
!5004 = !DILocation(line: 1124, column: 9, scope: !4921)
!5005 = !DILocation(line: 1125, column: 9, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5003, file: !547, line: 1124, column: 28)
!5007 = !DILocation(line: 1128, column: 62, scope: !4921)
!5008 = !DILocation(line: 1128, column: 40, scope: !4921)
!5009 = !DILocation(line: 1128, column: 38, scope: !4921)
!5010 = !DILocation(line: 1129, column: 44, scope: !4921)
!5011 = !DILocation(line: 1129, column: 30, scope: !4921)
!5012 = !DILocation(line: 1130, column: 14, scope: !4921)
!5013 = !DILocation(line: 1131, column: 16, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !4921, file: !547, line: 1131, column: 9)
!5015 = !DILocation(line: 1131, column: 9, scope: !4921)
!5016 = !DILocation(line: 1132, column: 9, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5014, file: !547, line: 1131, column: 28)
!5018 = !DILocation(line: 1135, column: 61, scope: !4921)
!5019 = !DILocation(line: 1135, column: 14, scope: !4921)
!5020 = !DILocation(line: 1136, column: 16, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !4921, file: !547, line: 1136, column: 9)
!5022 = !DILocation(line: 1136, column: 9, scope: !4921)
!5023 = !DILocation(line: 1137, column: 9, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5021, file: !547, line: 1136, column: 28)
!5025 = !DILocation(line: 1140, column: 64, scope: !4921)
!5026 = !DILocation(line: 1140, column: 14, scope: !4921)
!5027 = !DILocation(line: 1141, column: 16, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !4921, file: !547, line: 1141, column: 9)
!5029 = !DILocation(line: 1141, column: 9, scope: !4921)
!5030 = !DILocation(line: 1142, column: 9, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5028, file: !547, line: 1141, column: 28)
!5032 = !DILocation(line: 1146, column: 18, scope: !4921)
!5033 = !DILocation(line: 1147, column: 66, scope: !4921)
!5034 = !DILocation(line: 1147, column: 34, scope: !4921)
!5035 = !DILocation(line: 1147, column: 52, scope: !4921)
!5036 = !DILocation(line: 1148, column: 71, scope: !4921)
!5037 = !DILocation(line: 1148, column: 34, scope: !4921)
!5038 = !DILocation(line: 1148, column: 57, scope: !4921)
!5039 = !DILocation(line: 1149, column: 74, scope: !4921)
!5040 = !DILocation(line: 1149, column: 34, scope: !4921)
!5041 = !DILocation(line: 1149, column: 60, scope: !4921)
!5042 = !DILocation(line: 1150, column: 73, scope: !4921)
!5043 = !DILocation(line: 1150, column: 34, scope: !4921)
!5044 = !DILocation(line: 1150, column: 59, scope: !4921)
!5045 = !DILocation(line: 1151, column: 69, scope: !4921)
!5046 = !DILocation(line: 1151, column: 34, scope: !4921)
!5047 = !DILocation(line: 1151, column: 55, scope: !4921)
!5048 = !DILocation(line: 1152, column: 74, scope: !4921)
!5049 = !DILocation(line: 1152, column: 34, scope: !4921)
!5050 = !DILocation(line: 1152, column: 60, scope: !4921)
!5051 = !DILocation(line: 1153, column: 77, scope: !4921)
!5052 = !DILocation(line: 1153, column: 34, scope: !4921)
!5053 = !DILocation(line: 1153, column: 63, scope: !4921)
!5054 = !DILocation(line: 1154, column: 5, scope: !4921)
!5055 = !DILocation(line: 1156, column: 5, scope: !4921)
!5056 = !DILocation(line: 1157, column: 1, scope: !4921)
!5057 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !2464, file: !2464, line: 52, type: !5058, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2463, retainedNodes: !5115)
!5058 = !DISubroutineType(types: !5059)
!5059 = !{null, !5060, !175}
!5060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5061, size: 32)
!5061 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !78, line: 588, baseType: !5062)
!5062 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 542, size: 800, elements: !5063)
!5063 = !{!5064, !5070, !5075, !5081, !5082, !5087, !5092, !5093, !5098, !5099, !5100, !5101, !5102, !5103, !5104, !5105, !5106, !5107, !5108, !5109, !5110, !5111, !5112, !5113, !5114}
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !5062, file: !78, line: 547, baseType: !5065, size: 32)
!5065 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5062, file: !78, line: 543, size: 32, elements: !5066)
!5066 = !{!5067, !5068, !5069}
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !5065, file: !78, line: 544, baseType: !188, size: 32)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !5065, file: !78, line: 545, baseType: !184, size: 32)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !5065, file: !78, line: 546, baseType: !184, size: 32)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !5062, file: !78, line: 551, baseType: !5071, size: 32, offset: 32)
!5071 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5062, file: !78, line: 548, size: 32, elements: !5072)
!5072 = !{!5073, !5074}
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !5071, file: !78, line: 549, baseType: !184, size: 32)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !5071, file: !78, line: 550, baseType: !184, size: 32)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !5062, file: !78, line: 556, baseType: !5076, size: 32, offset: 64)
!5076 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5062, file: !78, line: 552, size: 32, elements: !5077)
!5077 = !{!5078, !5079, !5080}
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !5076, file: !78, line: 553, baseType: !188, size: 32)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !5076, file: !78, line: 554, baseType: !184, size: 32)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !5076, file: !78, line: 555, baseType: !184, size: 32)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !5062, file: !78, line: 557, baseType: !184, size: 32, offset: 96)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !5062, file: !78, line: 561, baseType: !5083, size: 32, offset: 128)
!5083 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5062, file: !78, line: 558, size: 32, elements: !5084)
!5084 = !{!5085, !5086}
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !5083, file: !78, line: 559, baseType: !184, size: 32)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !5083, file: !78, line: 560, baseType: !184, size: 32)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !5062, file: !78, line: 565, baseType: !5088, size: 32, offset: 160)
!5088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5062, file: !78, line: 562, size: 32, elements: !5089)
!5089 = !{!5090, !5091}
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !5088, file: !78, line: 563, baseType: !188, size: 32)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !5088, file: !78, line: 564, baseType: !184, size: 32)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !5062, file: !78, line: 566, baseType: !184, size: 32, offset: 192)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !5062, file: !78, line: 570, baseType: !5094, size: 32, offset: 224)
!5094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5062, file: !78, line: 567, size: 32, elements: !5095)
!5095 = !{!5096, !5097}
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !5094, file: !78, line: 568, baseType: !184, size: 32)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !5094, file: !78, line: 569, baseType: !184, size: 32)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !5062, file: !78, line: 571, baseType: !184, size: 32, offset: 256)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !5062, file: !78, line: 572, baseType: !184, size: 32, offset: 288)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !5062, file: !78, line: 573, baseType: !184, size: 32, offset: 320)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !5062, file: !78, line: 574, baseType: !184, size: 32, offset: 352)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !5062, file: !78, line: 575, baseType: !188, size: 32, offset: 384)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !5062, file: !78, line: 576, baseType: !184, size: 32, offset: 416)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !5062, file: !78, line: 577, baseType: !184, size: 32, offset: 448)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !5062, file: !78, line: 578, baseType: !184, size: 32, offset: 480)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !5062, file: !78, line: 579, baseType: !184, size: 32, offset: 512)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !5062, file: !78, line: 580, baseType: !184, size: 32, offset: 544)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !5062, file: !78, line: 581, baseType: !184, size: 32, offset: 576)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !5062, file: !78, line: 582, baseType: !184, size: 32, offset: 608)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !5062, file: !78, line: 583, baseType: !184, size: 32, offset: 640)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !5062, file: !78, line: 584, baseType: !184, size: 32, offset: 672)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !5062, file: !78, line: 585, baseType: !184, size: 32, offset: 704)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !5062, file: !78, line: 586, baseType: !188, size: 32, offset: 736)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !5062, file: !78, line: 587, baseType: !184, size: 32, offset: 768)
!5115 = !{!5116, !5117, !5118, !5119, !5120, !5121, !5122, !5123, !5124, !5125, !5126, !5130}
!5116 = !DILocalVariable(name: "uartx", arg: 1, scope: !5057, file: !2464, line: 52, type: !5060)
!5117 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !5057, file: !2464, line: 52, type: !175)
!5118 = !DILocalVariable(name: "uart_clock", scope: !5057, file: !2464, line: 54, type: !175)
!5119 = !DILocalVariable(name: "integer", scope: !5057, file: !2464, line: 54, type: !175)
!5120 = !DILocalVariable(name: "remainder", scope: !5057, file: !2464, line: 54, type: !175)
!5121 = !DILocalVariable(name: "fraction", scope: !5057, file: !2464, line: 54, type: !175)
!5122 = !DILocalVariable(name: "dll_dlm", scope: !5057, file: !2464, line: 55, type: !175)
!5123 = !DILocalVariable(name: "sample_count", scope: !5057, file: !2464, line: 55, type: !175)
!5124 = !DILocalVariable(name: "sample_point", scope: !5057, file: !2464, line: 55, type: !175)
!5125 = !DILocalVariable(name: "temp_lcr", scope: !5057, file: !2464, line: 55, type: !175)
!5126 = !DILocalVariable(name: "fraction_L_mapping", scope: !5057, file: !2464, line: 56, type: !5127)
!5127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 320, elements: !5128)
!5128 = !{!5129}
!5129 = !DISubrange(count: 10)
!5130 = !DILocalVariable(name: "fraction_M_mapping", scope: !5057, file: !2464, line: 57, type: !5127)
!5131 = !DILocation(line: 0, scope: !5057)
!5132 = !DILocation(line: 56, column: 14, scope: !5057)
!5133 = !DILocation(line: 57, column: 5, scope: !5057)
!5134 = !DILocation(line: 57, column: 14, scope: !5057)
!5135 = !DILocation(line: 59, column: 12, scope: !5057)
!5136 = !DILocation(line: 59, column: 23, scope: !5057)
!5137 = !DILocation(line: 60, column: 12, scope: !5057)
!5138 = !DILocation(line: 60, column: 22, scope: !5057)
!5139 = !DILocation(line: 61, column: 12, scope: !5057)
!5140 = !DILocation(line: 61, column: 22, scope: !5057)
!5141 = !DILocation(line: 63, column: 9, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5057, file: !2464, line: 63, column: 9)
!5143 = !DILocation(line: 63, column: 9, scope: !5057)
!5144 = !DILocation(line: 64, column: 22, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5142, file: !2464, line: 63, column: 37)
!5146 = !DILocation(line: 64, column: 45, scope: !5145)
!5147 = !DILocation(line: 65, column: 5, scope: !5145)
!5148 = !DILocation(line: 0, scope: !5142)
!5149 = !DILocation(line: 69, column: 45, scope: !5057)
!5150 = !DILocation(line: 69, column: 26, scope: !5057)
!5151 = !DILocation(line: 70, column: 30, scope: !5057)
!5152 = !DILocation(line: 70, column: 36, scope: !5057)
!5153 = !DILocation(line: 70, column: 63, scope: !5057)
!5154 = !DILocation(line: 71, column: 20, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5057, file: !2464, line: 71, column: 9)
!5156 = !DILocation(line: 71, column: 26, scope: !5155)
!5157 = !DILocation(line: 77, column: 5, scope: !5057)
!5158 = !DILocation(line: 77, column: 25, scope: !5057)
!5159 = !DILocation(line: 78, column: 16, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5057, file: !2464, line: 77, column: 32)
!5161 = distinct !{!5161, !5157, !5162}
!5162 = !DILocation(line: 80, column: 5, scope: !5057)
!5163 = !DILocation(line: 82, column: 35, scope: !5057)
!5164 = !DILocation(line: 82, column: 66, scope: !5057)
!5165 = !DILocation(line: 84, column: 18, scope: !5057)
!5166 = !DILocation(line: 85, column: 34, scope: !5057)
!5167 = !DILocation(line: 85, column: 39, scope: !5057)
!5168 = !DILocation(line: 87, column: 12, scope: !5057)
!5169 = !DILocation(line: 87, column: 22, scope: !5057)
!5170 = !DILocation(line: 89, column: 23, scope: !5057)
!5171 = !DILocation(line: 90, column: 27, scope: !5057)
!5172 = !DILocation(line: 90, column: 16, scope: !5057)
!5173 = !DILocation(line: 91, column: 38, scope: !5057)
!5174 = !DILocation(line: 91, column: 24, scope: !5057)
!5175 = !DILocation(line: 91, column: 28, scope: !5057)
!5176 = !DILocation(line: 92, column: 35, scope: !5057)
!5177 = !DILocation(line: 92, column: 41, scope: !5057)
!5178 = !DILocation(line: 92, column: 20, scope: !5057)
!5179 = !DILocation(line: 92, column: 24, scope: !5057)
!5180 = !DILocation(line: 93, column: 16, scope: !5057)
!5181 = !DILocation(line: 95, column: 12, scope: !5057)
!5182 = !DILocation(line: 95, column: 25, scope: !5057)
!5183 = !DILocation(line: 96, column: 12, scope: !5057)
!5184 = !DILocation(line: 96, column: 25, scope: !5057)
!5185 = !DILocation(line: 98, column: 24, scope: !5057)
!5186 = !DILocation(line: 98, column: 22, scope: !5057)
!5187 = !DILocation(line: 99, column: 24, scope: !5057)
!5188 = !DILocation(line: 99, column: 22, scope: !5057)
!5189 = !DILocation(line: 101, column: 25, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5057, file: !2464, line: 101, column: 9)
!5191 = !DILocation(line: 101, column: 9, scope: !5057)
!5192 = !DILocation(line: 102, column: 16, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5190, file: !2464, line: 101, column: 37)
!5194 = !DILocation(line: 102, column: 22, scope: !5193)
!5195 = !DILocation(line: 103, column: 5, scope: !5193)
!5196 = !DILocation(line: 104, column: 1, scope: !5057)
!5197 = distinct !DISubprogram(name: "uart_set_format", scope: !2464, file: !2464, line: 106, type: !5198, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2463, retainedNodes: !5200)
!5198 = !DISubroutineType(types: !5199)
!5199 = !{null, !5060, !4264, !4266, !4268}
!5200 = !{!5201, !5202, !5203, !5204, !5205}
!5201 = !DILocalVariable(name: "uartx", arg: 1, scope: !5197, file: !2464, line: 106, type: !5060)
!5202 = !DILocalVariable(name: "word_length", arg: 2, scope: !5197, file: !2464, line: 107, type: !4264)
!5203 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !5197, file: !2464, line: 108, type: !4266)
!5204 = !DILocalVariable(name: "parity", arg: 4, scope: !5197, file: !2464, line: 109, type: !4268)
!5205 = !DILocalVariable(name: "byte", scope: !5197, file: !2464, line: 111, type: !952)
!5206 = !DILocation(line: 0, scope: !5197)
!5207 = !DILocation(line: 114, column: 19, scope: !5197)
!5208 = !DILocation(line: 115, column: 16, scope: !5197)
!5209 = !DILocation(line: 118, column: 10, scope: !5197)
!5210 = !DILocation(line: 119, column: 5, scope: !5197)
!5211 = !DILocation(line: 124, column: 18, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5197, file: !2464, line: 119, column: 26)
!5213 = !DILocation(line: 125, column: 13, scope: !5212)
!5214 = !DILocation(line: 127, column: 18, scope: !5212)
!5215 = !DILocation(line: 128, column: 13, scope: !5212)
!5216 = !DILocation(line: 130, column: 18, scope: !5212)
!5217 = !DILocation(line: 131, column: 13, scope: !5212)
!5218 = !DILocation(line: 137, column: 10, scope: !5197)
!5219 = !DILocation(line: 138, column: 5, scope: !5197)
!5220 = !DILocation(line: 151, column: 5, scope: !5197)
!5221 = !DILocation(line: 166, column: 18, scope: !5197)
!5222 = !DILocation(line: 166, column: 16, scope: !5197)
!5223 = !DILocation(line: 167, column: 1, scope: !5197)
!5224 = distinct !DISubprogram(name: "uart_put_char_block", scope: !2464, file: !2464, line: 169, type: !5225, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2463, retainedNodes: !5227)
!5225 = !DISubroutineType(types: !5226)
!5226 = !{null, !5060, !378}
!5227 = !{!5228, !5229, !5230}
!5228 = !DILocalVariable(name: "uartx", arg: 1, scope: !5224, file: !2464, line: 169, type: !5060)
!5229 = !DILocalVariable(name: "byte", arg: 2, scope: !5224, file: !2464, line: 169, type: !378)
!5230 = !DILocalVariable(name: "LSR", scope: !5224, file: !2464, line: 171, type: !952)
!5231 = !DILocation(line: 0, scope: !5224)
!5232 = !DILocation(line: 173, column: 5, scope: !5224)
!5233 = !DILocation(line: 174, column: 31, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5224, file: !2464, line: 173, column: 15)
!5235 = !DILocation(line: 175, column: 17, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5234, file: !2464, line: 175, column: 13)
!5237 = !DILocation(line: 175, column: 13, scope: !5234)
!5238 = distinct !{!5238, !5232, !5239}
!5239 = !DILocation(line: 179, column: 5, scope: !5224)
!5240 = !DILocation(line: 176, column: 38, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5236, file: !2464, line: 175, column: 39)
!5242 = !DILocation(line: 176, column: 32, scope: !5241)
!5243 = !DILocation(line: 176, column: 36, scope: !5241)
!5244 = !DILocation(line: 180, column: 1, scope: !5224)
!5245 = distinct !DISubprogram(name: "uart_get_char_block", scope: !2464, file: !2464, line: 182, type: !5246, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2463, retainedNodes: !5248)
!5246 = !DISubroutineType(types: !5247)
!5247 = !{!378, !5060}
!5248 = !{!5249, !5250, !5251}
!5249 = !DILocalVariable(name: "uartx", arg: 1, scope: !5245, file: !2464, line: 182, type: !5060)
!5250 = !DILocalVariable(name: "LSR", scope: !5245, file: !2464, line: 184, type: !952)
!5251 = !DILocalVariable(name: "byte", scope: !5245, file: !2464, line: 185, type: !378)
!5252 = !DILocation(line: 0, scope: !5245)
!5253 = !DILocation(line: 187, column: 5, scope: !5245)
!5254 = !DILocation(line: 188, column: 31, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5245, file: !2464, line: 187, column: 15)
!5256 = !DILocation(line: 189, column: 17, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5255, file: !2464, line: 189, column: 13)
!5258 = !DILocation(line: 189, column: 13, scope: !5255)
!5259 = distinct !{!5259, !5253, !5260}
!5260 = !DILocation(line: 193, column: 5, scope: !5245)
!5261 = !DILocation(line: 190, column: 48, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5257, file: !2464, line: 189, column: 37)
!5263 = !DILocation(line: 190, column: 20, scope: !5262)
!5264 = !DILocation(line: 195, column: 5, scope: !5245)
!5265 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !2464, file: !2464, line: 198, type: !5266, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2463, retainedNodes: !5268)
!5266 = !DISubroutineType(types: !5267)
!5267 = !{!175, !5060}
!5268 = !{!5269, !5270, !5271}
!5269 = !DILocalVariable(name: "uartx", arg: 1, scope: !5265, file: !2464, line: 198, type: !5060)
!5270 = !DILocalVariable(name: "LSR", scope: !5265, file: !2464, line: 200, type: !952)
!5271 = !DILocalVariable(name: "value", scope: !5265, file: !2464, line: 201, type: !175)
!5272 = !DILocation(line: 0, scope: !5265)
!5273 = !DILocation(line: 203, column: 27, scope: !5265)
!5274 = !DILocation(line: 204, column: 13, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5265, file: !2464, line: 204, column: 9)
!5276 = !DILocation(line: 204, column: 9, scope: !5265)
!5277 = !DILocation(line: 205, column: 36, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5275, file: !2464, line: 204, column: 33)
!5279 = !DILocation(line: 206, column: 5, scope: !5278)
!5280 = !DILocation(line: 0, scope: !5275)
!5281 = !DILocation(line: 210, column: 5, scope: !5265)
!5282 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !2464, file: !2464, line: 213, type: !5283, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2463, retainedNodes: !5285)
!5283 = !DISubroutineType(types: !5284)
!5284 = !{null, !5060}
!5285 = !{!5286, !5287, !5288}
!5286 = !DILocalVariable(name: "uartx", arg: 1, scope: !5282, file: !2464, line: 213, type: !5060)
!5287 = !DILocalVariable(name: "EFR", scope: !5282, file: !2464, line: 215, type: !952)
!5288 = !DILocalVariable(name: "LCR", scope: !5282, file: !2464, line: 215, type: !952)
!5289 = !DILocation(line: 0, scope: !5282)
!5290 = !DILocation(line: 217, column: 18, scope: !5282)
!5291 = !DILocation(line: 219, column: 16, scope: !5282)
!5292 = !DILocation(line: 220, column: 30, scope: !5282)
!5293 = !DILocation(line: 222, column: 30, scope: !5282)
!5294 = !DILocation(line: 222, column: 28, scope: !5282)
!5295 = !DILocation(line: 223, column: 12, scope: !5282)
!5296 = !DILocation(line: 223, column: 22, scope: !5282)
!5297 = !DILocation(line: 225, column: 16, scope: !5282)
!5298 = !DILocation(line: 226, column: 21, scope: !5282)
!5299 = !DILocation(line: 226, column: 25, scope: !5282)
!5300 = !DILocation(line: 228, column: 18, scope: !5282)
!5301 = !DILocation(line: 228, column: 16, scope: !5282)
!5302 = !DILocation(line: 229, column: 1, scope: !5282)
!5303 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !2464, file: !2464, line: 231, type: !5304, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2463, retainedNodes: !5306)
!5304 = !DISubroutineType(types: !5305)
!5305 = !{null, !5060, !378, !378, !378}
!5306 = !{!5307, !5308, !5309, !5310, !5311, !5312}
!5307 = !DILocalVariable(name: "uartx", arg: 1, scope: !5303, file: !2464, line: 231, type: !5060)
!5308 = !DILocalVariable(name: "xon", arg: 2, scope: !5303, file: !2464, line: 232, type: !378)
!5309 = !DILocalVariable(name: "xoff", arg: 3, scope: !5303, file: !2464, line: 233, type: !378)
!5310 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5303, file: !2464, line: 234, type: !378)
!5311 = !DILocalVariable(name: "EFR", scope: !5303, file: !2464, line: 236, type: !952)
!5312 = !DILocalVariable(name: "LCR", scope: !5303, file: !2464, line: 236, type: !952)
!5313 = !DILocation(line: 0, scope: !5303)
!5314 = !DILocation(line: 238, column: 18, scope: !5303)
!5315 = !DILocation(line: 240, column: 16, scope: !5303)
!5316 = !DILocation(line: 241, column: 28, scope: !5303)
!5317 = !DILocation(line: 241, column: 21, scope: !5303)
!5318 = !DILocation(line: 241, column: 26, scope: !5303)
!5319 = !DILocation(line: 242, column: 20, scope: !5303)
!5320 = !DILocation(line: 242, column: 12, scope: !5303)
!5321 = !DILocation(line: 242, column: 18, scope: !5303)
!5322 = !DILocation(line: 243, column: 30, scope: !5303)
!5323 = !DILocation(line: 245, column: 30, scope: !5303)
!5324 = !DILocation(line: 245, column: 28, scope: !5303)
!5325 = !DILocation(line: 246, column: 25, scope: !5303)
!5326 = !DILocation(line: 246, column: 12, scope: !5303)
!5327 = !DILocation(line: 246, column: 23, scope: !5303)
!5328 = !DILocation(line: 247, column: 12, scope: !5303)
!5329 = !DILocation(line: 247, column: 22, scope: !5303)
!5330 = !DILocation(line: 249, column: 18, scope: !5303)
!5331 = !DILocation(line: 249, column: 16, scope: !5303)
!5332 = !DILocation(line: 250, column: 1, scope: !5303)
!5333 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !2464, file: !2464, line: 252, type: !5283, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2463, retainedNodes: !5334)
!5334 = !{!5335, !5336}
!5335 = !DILocalVariable(name: "uartx", arg: 1, scope: !5333, file: !2464, line: 252, type: !5060)
!5336 = !DILocalVariable(name: "LCR", scope: !5333, file: !2464, line: 254, type: !952)
!5337 = !DILocation(line: 0, scope: !5333)
!5338 = !DILocation(line: 256, column: 18, scope: !5333)
!5339 = !DILocation(line: 258, column: 16, scope: !5333)
!5340 = !DILocation(line: 259, column: 24, scope: !5333)
!5341 = !DILocation(line: 259, column: 28, scope: !5333)
!5342 = !DILocation(line: 261, column: 16, scope: !5333)
!5343 = !DILocation(line: 262, column: 18, scope: !5333)
!5344 = !DILocation(line: 262, column: 16, scope: !5333)
!5345 = !DILocation(line: 263, column: 1, scope: !5333)
!5346 = distinct !DISubprogram(name: "uart_set_fifo", scope: !2464, file: !2464, line: 265, type: !5283, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2463, retainedNodes: !5347)
!5347 = !{!5348, !5349, !5350}
!5348 = !DILocalVariable(name: "uartx", arg: 1, scope: !5346, file: !2464, line: 265, type: !5060)
!5349 = !DILocalVariable(name: "EFR", scope: !5346, file: !2464, line: 267, type: !952)
!5350 = !DILocalVariable(name: "LCR", scope: !5346, file: !2464, line: 267, type: !952)
!5351 = !DILocation(line: 0, scope: !5346)
!5352 = !DILocation(line: 269, column: 18, scope: !5346)
!5353 = !DILocation(line: 271, column: 16, scope: !5346)
!5354 = !DILocation(line: 272, column: 30, scope: !5346)
!5355 = !DILocation(line: 274, column: 30, scope: !5346)
!5356 = !DILocation(line: 274, column: 28, scope: !5346)
!5357 = !DILocation(line: 276, column: 16, scope: !5346)
!5358 = !DILocation(line: 277, column: 28, scope: !5346)
!5359 = !DILocation(line: 283, column: 18, scope: !5346)
!5360 = !DILocation(line: 283, column: 16, scope: !5346)
!5361 = !DILocation(line: 284, column: 1, scope: !5346)
!5362 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !2464, file: !2464, line: 307, type: !5283, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2463, retainedNodes: !5363)
!5363 = !{!5364, !5365, !5366}
!5364 = !DILocalVariable(name: "uartx", arg: 1, scope: !5362, file: !2464, line: 307, type: !5060)
!5365 = !DILocalVariable(name: "IER", scope: !5362, file: !2464, line: 309, type: !952)
!5366 = !DILocalVariable(name: "LCR", scope: !5362, file: !2464, line: 309, type: !952)
!5367 = !DILocation(line: 0, scope: !5362)
!5368 = !DILocation(line: 311, column: 18, scope: !5362)
!5369 = !DILocation(line: 313, column: 16, scope: !5362)
!5370 = !DILocation(line: 314, column: 26, scope: !5362)
!5371 = !DILocation(line: 316, column: 26, scope: !5362)
!5372 = !DILocation(line: 316, column: 24, scope: !5362)
!5373 = !DILocation(line: 318, column: 19, scope: !5362)
!5374 = !DILocation(line: 318, column: 16, scope: !5362)
!5375 = !DILocation(line: 319, column: 1, scope: !5362)
!5376 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !2464, file: !2464, line: 321, type: !5377, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2463, retainedNodes: !5379)
!5377 = !DISubroutineType(types: !5378)
!5378 = !{null, !5060, !858}
!5379 = !{!5380, !5381, !5382}
!5380 = !DILocalVariable(name: "uartx", arg: 1, scope: !5376, file: !2464, line: 321, type: !5060)
!5381 = !DILocalVariable(name: "is_rx", arg: 2, scope: !5376, file: !2464, line: 321, type: !858)
!5382 = !DILocalVariable(name: "FCR", scope: !5376, file: !2464, line: 323, type: !952)
!5383 = !DILocation(line: 0, scope: !5376)
!5384 = !DILocation(line: 327, column: 9, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5376, file: !2464, line: 327, column: 9)
!5386 = !DILocation(line: 333, column: 24, scope: !5376)
!5387 = !DILocation(line: 333, column: 28, scope: !5376)
!5388 = !DILocation(line: 334, column: 1, scope: !5376)
!5389 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !2464, file: !2464, line: 336, type: !5390, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2463, retainedNodes: !5393)
!5390 = !DISubroutineType(types: !5391)
!5391 = !{!5392, !5060}
!5392 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !648, line: 55, baseType: !704)
!5393 = !{!5394, !5395, !5396, !5397}
!5394 = !DILocalVariable(name: "uartx", arg: 1, scope: !5389, file: !2464, line: 336, type: !5060)
!5395 = !DILocalVariable(name: "IIR", scope: !5389, file: !2464, line: 338, type: !952)
!5396 = !DILocalVariable(name: "LSR", scope: !5389, file: !2464, line: 338, type: !952)
!5397 = !DILocalVariable(name: "type", scope: !5389, file: !2464, line: 339, type: !5392)
!5398 = !DILocation(line: 0, scope: !5389)
!5399 = !DILocation(line: 341, column: 30, scope: !5389)
!5400 = !DILocation(line: 342, column: 13, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5389, file: !2464, line: 342, column: 9)
!5402 = !DILocation(line: 342, column: 9, scope: !5389)
!5403 = !DILocation(line: 346, column: 17, scope: !5389)
!5404 = !DILocation(line: 346, column: 5, scope: !5389)
!5405 = !DILocation(line: 350, column: 13, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5389, file: !2464, line: 346, column: 37)
!5407 = !DILocation(line: 353, column: 35, scope: !5406)
!5408 = !DILocation(line: 354, column: 21, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5406, file: !2464, line: 354, column: 17)
!5410 = !DILocation(line: 363, column: 13, scope: !5406)
!5411 = !DILocation(line: 369, column: 1, scope: !5389)
!5412 = distinct !DISubprogram(name: "uart_verify_error", scope: !2464, file: !2464, line: 371, type: !5413, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2463, retainedNodes: !5415)
!5413 = !DISubroutineType(types: !5414)
!5414 = !{!858, !5060}
!5415 = !{!5416, !5417, !5418}
!5416 = !DILocalVariable(name: "uartx", arg: 1, scope: !5412, file: !2464, line: 371, type: !5060)
!5417 = !DILocalVariable(name: "LSR", scope: !5412, file: !2464, line: 373, type: !952)
!5418 = !DILocalVariable(name: "ret", scope: !5412, file: !2464, line: 374, type: !858)
!5419 = !DILocation(line: 0, scope: !5412)
!5420 = !DILocation(line: 376, column: 27, scope: !5412)
!5421 = !DILocation(line: 377, column: 15, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5412, file: !2464, line: 377, column: 9)
!5423 = !DILocation(line: 377, column: 9, scope: !5412)
!5424 = !DILocation(line: 381, column: 5, scope: !5412)
!5425 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !2464, file: !2464, line: 384, type: !5283, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2463, retainedNodes: !5426)
!5426 = !{!5427, !5428}
!5427 = !DILocalVariable(name: "uartx", arg: 1, scope: !5425, file: !2464, line: 384, type: !5060)
!5428 = !DILocalVariable(name: "DMA_EN", scope: !5425, file: !2464, line: 386, type: !952)
!5429 = !DILocation(line: 0, scope: !5425)
!5430 = !DILocation(line: 388, column: 21, scope: !5425)
!5431 = !DILocation(line: 390, column: 1, scope: !5425)
!5432 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !2464, file: !2464, line: 392, type: !5283, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2463, retainedNodes: !5433)
!5433 = !{!5434}
!5434 = !DILocalVariable(name: "uartx", arg: 1, scope: !5432, file: !2464, line: 392, type: !5060)
!5435 = !DILocation(line: 0, scope: !5432)
!5436 = !DILocation(line: 394, column: 12, scope: !5432)
!5437 = !DILocation(line: 394, column: 16, scope: !5432)
!5438 = !DILocation(line: 395, column: 24, scope: !5432)
!5439 = !DILocation(line: 395, column: 28, scope: !5432)
!5440 = !DILocation(line: 396, column: 21, scope: !5432)
!5441 = !DILocation(line: 396, column: 26, scope: !5432)
!5442 = !DILocation(line: 397, column: 12, scope: !5432)
!5443 = !DILocation(line: 397, column: 18, scope: !5432)
!5444 = !DILocation(line: 399, column: 16, scope: !5432)
!5445 = !DILocation(line: 400, column: 24, scope: !5432)
!5446 = !DILocation(line: 400, column: 28, scope: !5432)
!5447 = !DILocation(line: 401, column: 20, scope: !5432)
!5448 = !DILocation(line: 401, column: 24, scope: !5432)
!5449 = !DILocation(line: 403, column: 16, scope: !5432)
!5450 = !DILocation(line: 404, column: 24, scope: !5432)
!5451 = !DILocation(line: 405, column: 28, scope: !5432)
!5452 = !DILocation(line: 407, column: 16, scope: !5432)
!5453 = !DILocation(line: 408, column: 28, scope: !5432)
!5454 = !DILocation(line: 409, column: 16, scope: !5432)
!5455 = !DILocation(line: 411, column: 25, scope: !5432)
!5456 = !DILocation(line: 412, column: 22, scope: !5432)
!5457 = !DILocation(line: 412, column: 26, scope: !5432)
!5458 = !DILocation(line: 413, column: 12, scope: !5432)
!5459 = !DILocation(line: 413, column: 24, scope: !5432)
!5460 = !DILocation(line: 414, column: 12, scope: !5432)
!5461 = !DILocation(line: 414, column: 22, scope: !5432)
!5462 = !DILocation(line: 415, column: 12, scope: !5432)
!5463 = !DILocation(line: 415, column: 25, scope: !5432)
!5464 = !DILocation(line: 416, column: 12, scope: !5432)
!5465 = !DILocation(line: 416, column: 25, scope: !5432)
!5466 = !DILocation(line: 417, column: 12, scope: !5432)
!5467 = !DILocation(line: 417, column: 23, scope: !5432)
!5468 = !DILocation(line: 418, column: 12, scope: !5432)
!5469 = !DILocation(line: 418, column: 27, scope: !5432)
!5470 = !DILocation(line: 419, column: 12, scope: !5432)
!5471 = !DILocation(line: 419, column: 18, scope: !5432)
!5472 = !DILocation(line: 420, column: 12, scope: !5432)
!5473 = !DILocation(line: 420, column: 23, scope: !5432)
!5474 = !DILocation(line: 421, column: 12, scope: !5432)
!5475 = !DILocation(line: 421, column: 22, scope: !5432)
!5476 = !DILocation(line: 422, column: 12, scope: !5432)
!5477 = !DILocation(line: 422, column: 21, scope: !5432)
!5478 = !DILocation(line: 423, column: 12, scope: !5432)
!5479 = !DILocation(line: 423, column: 19, scope: !5432)
!5480 = !DILocation(line: 424, column: 23, scope: !5432)
!5481 = !DILocation(line: 425, column: 12, scope: !5432)
!5482 = !DILocation(line: 425, column: 22, scope: !5432)
!5483 = !DILocation(line: 426, column: 12, scope: !5432)
!5484 = !DILocation(line: 426, column: 22, scope: !5432)
!5485 = !DILocation(line: 427, column: 1, scope: !5432)
!5486 = distinct !DISubprogram(name: "uart_query_empty", scope: !2464, file: !2464, line: 429, type: !5283, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2463, retainedNodes: !5487)
!5487 = !{!5488}
!5488 = !DILocalVariable(name: "uartx", arg: 1, scope: !5486, file: !2464, line: 429, type: !5060)
!5489 = !DILocation(line: 0, scope: !5486)
!5490 = !DILocation(line: 431, column: 5, scope: !5486)
!5491 = !DILocation(line: 431, column: 31, scope: !5486)
!5492 = !DILocation(line: 431, column: 36, scope: !5486)
!5493 = !DILocation(line: 431, column: 12, scope: !5486)
!5494 = distinct !{!5494, !5490, !5495}
!5495 = !DILocation(line: 431, column: 44, scope: !5486)
!5496 = !DILocation(line: 432, column: 1, scope: !5486)
!5497 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !702, file: !702, line: 134, type: !5498, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !701, retainedNodes: !5500)
!5498 = !DISubroutineType(types: !5499)
!5499 = !{!4015, !653, !858}
!5500 = !{!5501, !5502, !5503}
!5501 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5497, file: !702, line: 134, type: !653)
!5502 = !DILocalVariable(name: "is_rx", arg: 2, scope: !5497, file: !702, line: 134, type: !858)
!5503 = !DILocalVariable(name: "dma_channel", scope: !5497, file: !702, line: 136, type: !4015)
!5504 = !DILocation(line: 0, scope: !5497)
!5505 = !DILocation(line: 138, column: 5, scope: !5497)
!5506 = !DILocation(line: 140, column: 17, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5508, file: !702, line: 140, column: 17)
!5508 = distinct !DILexicalBlock(scope: !5497, file: !702, line: 138, column: 24)
!5509 = !DILocation(line: 147, column: 17, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5508, file: !702, line: 147, column: 17)
!5511 = !DILocation(line: 154, column: 17, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5508, file: !702, line: 154, column: 17)
!5513 = !DILocation(line: 161, column: 17, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5508, file: !702, line: 161, column: 17)
!5515 = !DILocation(line: 171, column: 5, scope: !5497)
!5516 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !702, file: !702, line: 174, type: !5517, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !701, retainedNodes: !5525)
!5517 = !DISubroutineType(types: !5518)
!5518 = !{null, !4015, !5519}
!5519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5520, size: 32)
!5520 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !648, line: 96, baseType: !5521)
!5521 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !648, line: 93, size: 64, elements: !5522)
!5522 = !{!5523, !5524}
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !5521, file: !648, line: 94, baseType: !211, size: 8)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !5521, file: !648, line: 95, baseType: !653, size: 32, offset: 32)
!5525 = !{!5526, !5527}
!5526 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !5516, file: !702, line: 174, type: !4015)
!5527 = !DILocalVariable(name: "user_data", arg: 2, scope: !5516, file: !702, line: 174, type: !5519)
!5528 = !DILocation(line: 0, scope: !5516)
!5529 = !DILocation(line: 176, column: 5, scope: !5516)
!5530 = !DILocation(line: 0, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5516, file: !702, line: 176, column: 26)
!5532 = !DILocation(line: 212, column: 1, scope: !5516)
!5533 = distinct !DISubprogram(name: "uart_enable_dma", scope: !702, file: !702, line: 214, type: !5534, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !701, retainedNodes: !5536)
!5534 = !DISubroutineType(types: !5535)
!5535 = !{null, !715}
!5536 = !{!5537}
!5537 = !DILocalVariable(name: "uartx", arg: 1, scope: !5533, file: !702, line: 214, type: !715)
!5538 = !DILocation(line: 0, scope: !5533)
!5539 = !DILocation(line: 216, column: 12, scope: !5533)
!5540 = !DILocation(line: 216, column: 19, scope: !5533)
!5541 = !DILocation(line: 217, column: 1, scope: !5533)
!5542 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !702, file: !702, line: 219, type: !870, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !701, retainedNodes: !5543)
!5543 = !{!5544, !5545, !5546, !5547}
!5544 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5542, file: !702, line: 219, type: !780)
!5545 = !DILocalVariable(name: "uart_port", scope: !5542, file: !702, line: 221, type: !653)
!5546 = !DILocalVariable(name: "type", scope: !5542, file: !702, line: 222, type: !5392)
!5547 = !DILocalVariable(name: "uartx", scope: !5542, file: !702, line: 223, type: !715)
!5548 = !DILocation(line: 0, scope: !5542)
!5549 = !DILocation(line: 225, column: 5, scope: !5542)
!5550 = !DILocation(line: 242, column: 13, scope: !5542)
!5551 = !DILocation(line: 243, column: 12, scope: !5542)
!5552 = !DILocation(line: 245, column: 5, scope: !5542)
!5553 = !DILocation(line: 248, column: 13, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5542, file: !702, line: 245, column: 19)
!5555 = !DILocation(line: 249, column: 13, scope: !5554)
!5556 = !DILocation(line: 252, column: 13, scope: !5554)
!5557 = !DILocation(line: 253, column: 13, scope: !5554)
!5558 = !DILocation(line: 263, column: 13, scope: !5554)
!5559 = !DILocation(line: 264, column: 13, scope: !5554)
!5560 = !DILocation(line: 276, column: 13, scope: !5554)
!5561 = !DILocation(line: 278, column: 1, scope: !5542)
!5562 = !DILocation(line: 131, column: 9, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !786, file: !787, line: 131, column: 9)
!5564 = !DILocation(line: 131, column: 9, scope: !786)
!5565 = !DILocation(line: 0, scope: !786)
!5566 = !DILocation(line: 134, column: 49, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5568, file: !787, line: 133, column: 46)
!5568 = distinct !DILexicalBlock(scope: !5569, file: !787, line: 133, column: 9)
!5569 = distinct !DILexicalBlock(scope: !5570, file: !787, line: 133, column: 9)
!5570 = distinct !DILexicalBlock(scope: !5563, file: !787, line: 131, column: 28)
!5571 = !DILocation(line: 134, column: 13, scope: !5567)
!5572 = !DILocation(line: 133, column: 42, scope: !5568)
!5573 = !DILocation(line: 133, column: 23, scope: !5568)
!5574 = !DILocation(line: 133, column: 9, scope: !5569)
!5575 = distinct !{!5575, !5574, !5576}
!5576 = !DILocation(line: 135, column: 9, scope: !5569)
!5577 = !DILocation(line: 136, column: 22, scope: !5570)
!5578 = !DILocation(line: 137, column: 5, scope: !5570)
!5579 = !DILocation(line: 138, column: 5, scope: !786)
!5580 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !796, file: !796, line: 1577, type: !5581, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5583)
!5581 = !DISubroutineType(types: !5582)
!5582 = !{null, !781, !175}
!5583 = !{!5584, !5585}
!5584 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5580, file: !796, line: 1577, type: !781)
!5585 = !DILocalVariable(name: "priority", arg: 2, scope: !5580, file: !796, line: 1577, type: !175)
!5586 = !DILocation(line: 0, scope: !5580)
!5587 = !DILocation(line: 1582, column: 34, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5589, file: !796, line: 1581, column: 8)
!5589 = distinct !DILexicalBlock(scope: !5580, file: !796, line: 1579, column: 6)
!5590 = !DILocation(line: 1582, column: 5, scope: !5588)
!5591 = !DILocation(line: 1582, column: 32, scope: !5588)
!5592 = !DILocation(line: 1583, column: 1, scope: !5580)
!5593 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !787, file: !787, line: 141, type: !5594, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5596)
!5594 = !DISubroutineType(types: !5595)
!5595 = !{!790, !780}
!5596 = !{!5597, !5598}
!5597 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5593, file: !787, line: 141, type: !780)
!5598 = !DILocalVariable(name: "status", scope: !5593, file: !787, line: 143, type: !790)
!5599 = !DILocation(line: 0, scope: !5593)
!5600 = !DILocation(line: 145, column: 40, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5593, file: !787, line: 145, column: 9)
!5602 = !DILocation(line: 149, column: 9, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5601, file: !787, line: 148, column: 12)
!5604 = !DILocation(line: 153, column: 5, scope: !5593)
!5605 = !DILocation(line: 154, column: 1, scope: !5593)
!5606 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !796, file: !796, line: 1494, type: !5607, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5609)
!5607 = !DISubroutineType(types: !5608)
!5608 = !{null, !781}
!5609 = !{!5610}
!5610 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5606, file: !796, line: 1494, type: !781)
!5611 = !DILocation(line: 0, scope: !5606)
!5612 = !DILocation(line: 1497, column: 91, scope: !5606)
!5613 = !DILocation(line: 1497, column: 61, scope: !5606)
!5614 = !DILocation(line: 1497, column: 40, scope: !5606)
!5615 = !DILocation(line: 1497, column: 3, scope: !5606)
!5616 = !DILocation(line: 1497, column: 46, scope: !5606)
!5617 = !DILocation(line: 1498, column: 1, scope: !5606)
!5618 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !787, file: !787, line: 156, type: !5594, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5619)
!5619 = !{!5620, !5621}
!5620 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5618, file: !787, line: 156, type: !780)
!5621 = !DILocalVariable(name: "status", scope: !5618, file: !787, line: 158, type: !790)
!5622 = !DILocation(line: 0, scope: !5618)
!5623 = !DILocation(line: 160, column: 40, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5618, file: !787, line: 160, column: 9)
!5625 = !DILocation(line: 164, column: 9, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5624, file: !787, line: 163, column: 12)
!5627 = !DILocation(line: 168, column: 5, scope: !5618)
!5628 = !DILocation(line: 169, column: 1, scope: !5618)
!5629 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !796, file: !796, line: 1507, type: !5607, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5630)
!5630 = !{!5631}
!5631 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5629, file: !796, line: 1507, type: !781)
!5632 = !DILocation(line: 0, scope: !5629)
!5633 = !DILocation(line: 1509, column: 65, scope: !5629)
!5634 = !DILocation(line: 1509, column: 44, scope: !5629)
!5635 = !DILocation(line: 1509, column: 32, scope: !5629)
!5636 = !DILocation(line: 1509, column: 3, scope: !5629)
!5637 = !DILocation(line: 1509, column: 39, scope: !5629)
!5638 = !DILocation(line: 1510, column: 1, scope: !5629)
!5639 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !787, file: !787, line: 171, type: !5640, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5642)
!5640 = !DISubroutineType(types: !5641)
!5641 = !{!175, !780}
!5642 = !{!5643, !5644}
!5643 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5639, file: !787, line: 171, type: !780)
!5644 = !DILocalVariable(name: "ret", scope: !5639, file: !787, line: 173, type: !175)
!5645 = !DILocation(line: 0, scope: !5639)
!5646 = !DILocation(line: 175, column: 40, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5639, file: !787, line: 175, column: 9)
!5648 = !DILocation(line: 178, column: 15, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5647, file: !787, line: 177, column: 12)
!5650 = !DILocation(line: 181, column: 5, scope: !5639)
!5651 = !DILocation(line: 182, column: 1, scope: !5639)
!5652 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !796, file: !796, line: 1523, type: !5653, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5655)
!5653 = !DISubroutineType(types: !5654)
!5654 = !{!175, !781}
!5655 = !{!5656}
!5656 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5652, file: !796, line: 1523, type: !781)
!5657 = !DILocation(line: 0, scope: !5652)
!5658 = !DILocation(line: 1525, column: 51, scope: !5652)
!5659 = !DILocation(line: 1525, column: 23, scope: !5652)
!5660 = !DILocation(line: 1525, column: 83, scope: !5652)
!5661 = !DILocation(line: 1525, column: 22, scope: !5652)
!5662 = !DILocation(line: 1525, column: 3, scope: !5652)
!5663 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !787, file: !787, line: 184, type: !5594, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5664)
!5664 = !{!5665, !5666}
!5665 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5663, file: !787, line: 184, type: !780)
!5666 = !DILocalVariable(name: "status", scope: !5663, file: !787, line: 186, type: !790)
!5667 = !DILocation(line: 0, scope: !5663)
!5668 = !DILocation(line: 188, column: 40, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5663, file: !787, line: 188, column: 9)
!5670 = !DILocation(line: 192, column: 9, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5669, file: !787, line: 191, column: 12)
!5672 = !DILocation(line: 196, column: 5, scope: !5663)
!5673 = !DILocation(line: 197, column: 1, scope: !5663)
!5674 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !796, file: !796, line: 1535, type: !5607, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5675)
!5675 = !{!5676}
!5676 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5674, file: !796, line: 1535, type: !781)
!5677 = !DILocation(line: 0, scope: !5674)
!5678 = !DILocation(line: 1537, column: 65, scope: !5674)
!5679 = !DILocation(line: 1537, column: 44, scope: !5674)
!5680 = !DILocation(line: 1537, column: 32, scope: !5674)
!5681 = !DILocation(line: 1537, column: 3, scope: !5674)
!5682 = !DILocation(line: 1537, column: 39, scope: !5674)
!5683 = !DILocation(line: 1538, column: 1, scope: !5674)
!5684 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !787, file: !787, line: 199, type: !5594, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5685)
!5685 = !{!5686, !5687}
!5686 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5684, file: !787, line: 199, type: !780)
!5687 = !DILocalVariable(name: "status", scope: !5684, file: !787, line: 201, type: !790)
!5688 = !DILocation(line: 0, scope: !5684)
!5689 = !DILocation(line: 203, column: 40, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5684, file: !787, line: 203, column: 9)
!5691 = !DILocation(line: 207, column: 9, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5690, file: !787, line: 206, column: 12)
!5693 = !DILocation(line: 211, column: 5, scope: !5684)
!5694 = !DILocation(line: 212, column: 1, scope: !5684)
!5695 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !796, file: !796, line: 1547, type: !5607, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5696)
!5696 = !{!5697}
!5697 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5695, file: !796, line: 1547, type: !781)
!5698 = !DILocation(line: 0, scope: !5695)
!5699 = !DILocation(line: 1549, column: 65, scope: !5695)
!5700 = !DILocation(line: 1549, column: 44, scope: !5695)
!5701 = !DILocation(line: 1549, column: 32, scope: !5695)
!5702 = !DILocation(line: 1549, column: 3, scope: !5695)
!5703 = !DILocation(line: 1549, column: 39, scope: !5695)
!5704 = !DILocation(line: 1550, column: 1, scope: !5695)
!5705 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !787, file: !787, line: 214, type: !5706, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5708)
!5706 = !DISubroutineType(types: !5707)
!5707 = !{!790, !780, !175}
!5708 = !{!5709, !5710, !5711}
!5709 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5705, file: !787, line: 214, type: !780)
!5710 = !DILocalVariable(name: "priority", arg: 2, scope: !5705, file: !787, line: 214, type: !175)
!5711 = !DILocalVariable(name: "status", scope: !5705, file: !787, line: 216, type: !790)
!5712 = !DILocation(line: 0, scope: !5705)
!5713 = !DILocation(line: 218, column: 40, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5705, file: !787, line: 218, column: 9)
!5715 = !DILocation(line: 222, column: 9, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5714, file: !787, line: 221, column: 12)
!5717 = !DILocation(line: 226, column: 5, scope: !5705)
!5718 = !DILocation(line: 227, column: 1, scope: !5705)
!5719 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !787, file: !787, line: 229, type: !5640, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5720)
!5720 = !{!5721, !5722}
!5721 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5719, file: !787, line: 229, type: !780)
!5722 = !DILocalVariable(name: "ret", scope: !5719, file: !787, line: 231, type: !175)
!5723 = !DILocation(line: 0, scope: !5719)
!5724 = !DILocation(line: 233, column: 40, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5719, file: !787, line: 233, column: 9)
!5726 = !DILocation(line: 236, column: 15, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5725, file: !787, line: 235, column: 12)
!5728 = !DILocation(line: 239, column: 5, scope: !5719)
!5729 = !DILocation(line: 240, column: 1, scope: !5719)
!5730 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !796, file: !796, line: 1597, type: !5653, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5731)
!5731 = !{!5732}
!5732 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5730, file: !796, line: 1597, type: !781)
!5733 = !DILocation(line: 0, scope: !5730)
!5734 = !DILocation(line: 1603, column: 23, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5736, file: !796, line: 1602, column: 8)
!5736 = distinct !DILexicalBlock(scope: !5730, file: !796, line: 1600, column: 6)
!5737 = !DILocation(line: 1603, column: 60, scope: !5735)
!5738 = !DILocation(line: 1604, column: 1, scope: !5730)
!5739 = distinct !DISubprogram(name: "isrC_main", scope: !787, file: !787, line: 248, type: !788, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5740)
!5740 = !{!5741, !5742}
!5741 = !DILocalVariable(name: "status", scope: !5739, file: !787, line: 250, type: !790)
!5742 = !DILocalVariable(name: "irq_number", scope: !5739, file: !787, line: 251, type: !780)
!5743 = !DILocation(line: 0, scope: !5739)
!5744 = !DILocation(line: 253, column: 5, scope: !5739)
!5745 = !DILocation(line: 255, column: 35, scope: !5739)
!5746 = !DILocation(line: 256, column: 40, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5739, file: !787, line: 256, column: 9)
!5748 = !DILocation(line: 259, column: 48, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5747, file: !787, line: 259, column: 16)
!5750 = !DILocation(line: 259, column: 62, scope: !5749)
!5751 = !DILocation(line: 259, column: 16, scope: !5747)
!5752 = !DILocation(line: 261, column: 9, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5749, file: !787, line: 259, column: 71)
!5754 = !DILocation(line: 262, column: 9, scope: !5753)
!5755 = !DILocation(line: 264, column: 55, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5749, file: !787, line: 263, column: 12)
!5757 = !DILocation(line: 264, column: 41, scope: !5756)
!5758 = !DILocation(line: 264, column: 53, scope: !5756)
!5759 = !DILocation(line: 265, column: 41, scope: !5756)
!5760 = !DILocation(line: 265, column: 9, scope: !5756)
!5761 = !DILocation(line: 269, column: 5, scope: !5739)
!5762 = !DILocation(line: 270, column: 1, scope: !5739)
!5763 = distinct !DISubprogram(name: "get_current_irq", scope: !787, file: !787, line: 242, type: !3362, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5764)
!5764 = !{!5765}
!5765 = !DILocalVariable(name: "irq_num", scope: !5763, file: !787, line: 244, type: !175)
!5766 = !DILocation(line: 244, column: 31, scope: !5763)
!5767 = !DILocation(line: 244, column: 36, scope: !5763)
!5768 = !DILocation(line: 0, scope: !5763)
!5769 = !DILocation(line: 245, column: 21, scope: !5763)
!5770 = !DILocation(line: 245, column: 5, scope: !5763)
!5771 = distinct !DISubprogram(name: "get_pending_irq", scope: !787, file: !787, line: 121, type: !3362, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !210)
!5772 = !DILocation(line: 123, column: 19, scope: !5771)
!5773 = !DILocation(line: 123, column: 51, scope: !5771)
!5774 = !DILocation(line: 123, column: 5, scope: !5771)
!5775 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !787, file: !787, line: 272, type: !5776, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5779)
!5776 = !DISubroutineType(types: !5777)
!5777 = !{!790, !780, !5778}
!5778 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !634, line: 175, baseType: !869)
!5779 = !{!5780, !5781, !5782}
!5780 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5775, file: !787, line: 272, type: !780)
!5781 = !DILocalVariable(name: "callback", arg: 2, scope: !5775, file: !787, line: 272, type: !5778)
!5782 = !DILocalVariable(name: "mask", scope: !5775, file: !787, line: 274, type: !175)
!5783 = !DILocation(line: 0, scope: !5775)
!5784 = !DILocation(line: 276, column: 40, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5775, file: !787, line: 276, column: 9)
!5786 = !DILocation(line: 280, column: 12, scope: !5775)
!5787 = !DILocation(line: 281, column: 5, scope: !5775)
!5788 = !DILocation(line: 282, column: 37, scope: !5775)
!5789 = !DILocation(line: 282, column: 51, scope: !5775)
!5790 = !DILocation(line: 283, column: 37, scope: !5775)
!5791 = !DILocation(line: 283, column: 49, scope: !5775)
!5792 = !DILocation(line: 284, column: 5, scope: !5775)
!5793 = !DILocation(line: 286, column: 5, scope: !5775)
!5794 = !DILocation(line: 287, column: 1, scope: !5775)
!5795 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !787, file: !787, line: 289, type: !5796, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5798)
!5796 = !DISubroutineType(types: !5797)
!5797 = !{!790, !920}
!5798 = !{!5799}
!5799 = !DILocalVariable(name: "mask", arg: 1, scope: !5795, file: !787, line: 289, type: !920)
!5800 = !DILocation(line: 0, scope: !5795)
!5801 = !DILocation(line: 291, column: 13, scope: !5795)
!5802 = !DILocation(line: 291, column: 11, scope: !5795)
!5803 = !DILocation(line: 292, column: 5, scope: !5795)
!5804 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !787, file: !787, line: 295, type: !5805, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5807)
!5805 = !DISubroutineType(types: !5806)
!5806 = !{!790, !175}
!5807 = !{!5808}
!5808 = !DILocalVariable(name: "mask", arg: 1, scope: !5804, file: !787, line: 295, type: !175)
!5809 = !DILocation(line: 0, scope: !5804)
!5810 = !DILocation(line: 297, column: 5, scope: !5804)
!5811 = !DILocation(line: 298, column: 5, scope: !5804)
!5812 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2468, file: !2468, line: 51, type: !3362, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !5813)
!5813 = !{!5814, !5815}
!5814 = !DILocalVariable(name: "mask", scope: !5812, file: !2468, line: 53, type: !175)
!5815 = !DILocalVariable(name: "priority", scope: !5812, file: !2468, line: 55, type: !175)
!5816 = !DILocation(line: 521, column: 3, scope: !5817, inlinedAt: !5821)
!5817 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !5818, file: !5818, line: 517, type: !3362, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !5819)
!5818 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!5819 = !{!5820}
!5820 = !DILocalVariable(name: "result", scope: !5817, file: !5818, line: 519, type: !175)
!5821 = distinct !DILocation(line: 53, column: 21, scope: !5812)
!5822 = !{i64 457584}
!5823 = !DILocation(line: 0, scope: !5817, inlinedAt: !5821)
!5824 = !DILocation(line: 0, scope: !5812)
!5825 = !DILocalVariable(name: "value", arg: 1, scope: !5826, file: !5818, line: 532, type: !175)
!5826 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !5818, file: !5818, line: 532, type: !5827, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !5829)
!5827 = !DISubroutineType(types: !5828)
!5828 = !{null, !175}
!5829 = !{!5825}
!5830 = !DILocation(line: 0, scope: !5826, inlinedAt: !5831)
!5831 = distinct !DILocation(line: 56, column: 5, scope: !5812)
!5832 = !DILocation(line: 534, column: 3, scope: !5826, inlinedAt: !5831)
!5833 = !{i64 457917}
!5834 = !DILocation(line: 456, column: 3, scope: !5835, inlinedAt: !5837)
!5835 = distinct !DISubprogram(name: "__DMB", scope: !5836, file: !5836, line: 454, type: !208, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !210)
!5836 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!5837 = distinct !DILocation(line: 57, column: 5, scope: !5812)
!5838 = !{i64 430673}
!5839 = !DILocation(line: 434, column: 3, scope: !5840, inlinedAt: !5841)
!5840 = distinct !DISubprogram(name: "__ISB", scope: !5836, file: !5836, line: 432, type: !208, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !210)
!5841 = distinct !DILocation(line: 58, column: 5, scope: !5812)
!5842 = !{i64 430088}
!5843 = !DILocation(line: 59, column: 5, scope: !5812)
!5844 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2468, file: !2468, line: 62, type: !5827, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !5845)
!5845 = !{!5846}
!5846 = !DILocalVariable(name: "mask", arg: 1, scope: !5844, file: !2468, line: 62, type: !175)
!5847 = !DILocation(line: 0, scope: !5844)
!5848 = !DILocation(line: 0, scope: !5826, inlinedAt: !5849)
!5849 = distinct !DILocation(line: 64, column: 5, scope: !5844)
!5850 = !DILocation(line: 534, column: 3, scope: !5826, inlinedAt: !5849)
!5851 = !DILocation(line: 456, column: 3, scope: !5835, inlinedAt: !5852)
!5852 = distinct !DILocation(line: 65, column: 5, scope: !5844)
!5853 = !DILocation(line: 434, column: 3, scope: !5840, inlinedAt: !5854)
!5854 = distinct !DILocation(line: 66, column: 5, scope: !5844)
!5855 = !DILocation(line: 67, column: 1, scope: !5844)
!5856 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !2468, file: !2468, line: 69, type: !208, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !5857)
!5857 = !{!5858, !5859}
!5858 = !DILocalVariable(name: "irq_number", scope: !5856, file: !2468, line: 71, type: !780)
!5859 = !DILocalVariable(name: "mask", scope: !5856, file: !2468, line: 72, type: !175)
!5860 = !DILocation(line: 72, column: 21, scope: !5856)
!5861 = !DILocation(line: 0, scope: !5856)
!5862 = !DILocation(line: 73, column: 5, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5856, file: !2468, line: 73, column: 5)
!5864 = !DILocation(line: 74, column: 9, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5866, file: !2468, line: 73, column: 85)
!5866 = distinct !DILexicalBlock(scope: !5863, file: !2468, line: 73, column: 5)
!5867 = !DILocation(line: 73, column: 81, scope: !5866)
!5868 = !DILocation(line: 73, column: 53, scope: !5866)
!5869 = distinct !{!5869, !5862, !5870}
!5870 = !DILocation(line: 75, column: 5, scope: !5863)
!5871 = !DILocation(line: 76, column: 5, scope: !5856)
!5872 = !DILocation(line: 77, column: 1, scope: !5856)
!5873 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !796, file: !796, line: 1507, type: !5607, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !5874)
!5874 = !{!5875}
!5875 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5873, file: !796, line: 1507, type: !781)
!5876 = !DILocation(line: 0, scope: !5873)
!5877 = !DILocation(line: 1509, column: 65, scope: !5873)
!5878 = !DILocation(line: 1509, column: 44, scope: !5873)
!5879 = !DILocation(line: 1509, column: 32, scope: !5873)
!5880 = !DILocation(line: 1509, column: 3, scope: !5873)
!5881 = !DILocation(line: 1509, column: 39, scope: !5873)
!5882 = !DILocation(line: 1510, column: 1, scope: !5873)
!5883 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !2468, file: !2468, line: 79, type: !208, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !5884)
!5884 = !{!5885, !5886}
!5885 = !DILocalVariable(name: "irq_number", scope: !5883, file: !2468, line: 81, type: !780)
!5886 = !DILocalVariable(name: "mask", scope: !5883, file: !2468, line: 82, type: !175)
!5887 = !DILocation(line: 82, column: 21, scope: !5883)
!5888 = !DILocation(line: 0, scope: !5883)
!5889 = !DILocation(line: 84, column: 5, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5883, file: !2468, line: 84, column: 5)
!5891 = !DILocation(line: 85, column: 9, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5893, file: !2468, line: 84, column: 85)
!5893 = distinct !DILexicalBlock(scope: !5890, file: !2468, line: 84, column: 5)
!5894 = !DILocation(line: 84, column: 81, scope: !5893)
!5895 = !DILocation(line: 84, column: 53, scope: !5893)
!5896 = distinct !{!5896, !5889, !5897}
!5897 = !DILocation(line: 86, column: 5, scope: !5890)
!5898 = !DILocation(line: 87, column: 5, scope: !5883)
!5899 = !DILocation(line: 88, column: 1, scope: !5883)
!5900 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !796, file: !796, line: 1494, type: !5607, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !5901)
!5901 = !{!5902}
!5902 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5900, file: !796, line: 1494, type: !781)
!5903 = !DILocation(line: 0, scope: !5900)
!5904 = !DILocation(line: 1497, column: 91, scope: !5900)
!5905 = !DILocation(line: 1497, column: 61, scope: !5900)
!5906 = !DILocation(line: 1497, column: 40, scope: !5900)
!5907 = !DILocation(line: 1497, column: 3, scope: !5900)
!5908 = !DILocation(line: 1497, column: 46, scope: !5900)
!5909 = !DILocation(line: 1498, column: 1, scope: !5900)
!5910 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !2468, file: !2468, line: 90, type: !208, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !5911)
!5911 = !{!5912}
!5912 = !DILocalVariable(name: "irq_number", scope: !5910, file: !2468, line: 92, type: !780)
!5913 = !DILocation(line: 0, scope: !5910)
!5914 = !DILocation(line: 93, column: 5, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5910, file: !2468, line: 93, column: 5)
!5916 = !DILocation(line: 94, column: 9, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5918, file: !2468, line: 93, column: 85)
!5918 = distinct !DILexicalBlock(scope: !5915, file: !2468, line: 93, column: 5)
!5919 = !DILocation(line: 93, column: 81, scope: !5918)
!5920 = !DILocation(line: 93, column: 53, scope: !5918)
!5921 = distinct !{!5921, !5914, !5922}
!5922 = !DILocation(line: 95, column: 5, scope: !5915)
!5923 = !DILocation(line: 96, column: 1, scope: !5910)
!5924 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !796, file: !796, line: 1547, type: !5607, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !5925)
!5925 = !{!5926}
!5926 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5924, file: !796, line: 1547, type: !781)
!5927 = !DILocation(line: 0, scope: !5924)
!5928 = !DILocation(line: 1549, column: 65, scope: !5924)
!5929 = !DILocation(line: 1549, column: 44, scope: !5924)
!5930 = !DILocation(line: 1549, column: 32, scope: !5924)
!5931 = !DILocation(line: 1549, column: 3, scope: !5924)
!5932 = !DILocation(line: 1549, column: 39, scope: !5924)
!5933 = !DILocation(line: 1550, column: 1, scope: !5924)
!5934 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !2468, file: !2468, line: 98, type: !5594, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !5935)
!5935 = !{!5936}
!5936 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5934, file: !2468, line: 98, type: !780)
!5937 = !DILocation(line: 0, scope: !5934)
!5938 = !DILocation(line: 100, column: 24, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5934, file: !2468, line: 100, column: 9)
!5940 = !DILocation(line: 104, column: 5, scope: !5934)
!5941 = !DILocation(line: 105, column: 5, scope: !5934)
!5942 = !DILocation(line: 106, column: 1, scope: !5934)
!5943 = distinct !DISubprogram(name: "software_trigger_irq", scope: !2468, file: !2468, line: 45, type: !870, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !5944)
!5944 = !{!5945}
!5945 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5943, file: !2468, line: 45, type: !780)
!5946 = !DILocation(line: 0, scope: !5943)
!5947 = !DILocation(line: 47, column: 54, scope: !5943)
!5948 = !DILocation(line: 47, column: 16, scope: !5943)
!5949 = !DILocation(line: 445, column: 3, scope: !5950, inlinedAt: !5951)
!5950 = distinct !DISubprogram(name: "__DSB", scope: !5836, file: !5836, line: 443, type: !208, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !210)
!5951 = distinct !DILocation(line: 48, column: 5, scope: !5943)
!5952 = !{i64 430384}
!5953 = !DILocation(line: 49, column: 1, scope: !5943)
!5954 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !2468, file: !2468, line: 114, type: !3362, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2467, retainedNodes: !210)
!5955 = !DILocation(line: 116, column: 19, scope: !5954)
!5956 = !DILocation(line: 116, column: 24, scope: !5954)
!5957 = !DILocation(line: 116, column: 5, scope: !5954)
!5958 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !883, file: !883, line: 71, type: !5959, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !5961)
!5959 = !DISubroutineType(types: !5960)
!5960 = !{null, !194, !175}
!5961 = !{!5962, !5963, !5964, !6058, !6059, !6060}
!5962 = !DILocalVariable(name: "MTDData", arg: 1, scope: !5958, file: !883, line: 71, type: !194)
!5963 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !5958, file: !883, line: 71, type: !175)
!5964 = !DILocalVariable(name: "D", scope: !5958, file: !883, line: 73, type: !5965)
!5965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5966, size: 32)
!5966 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1076, line: 193, baseType: !5967)
!5967 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1076, line: 134, size: 1824, elements: !5968)
!5968 = !{!5969, !5970, !5971, !5977, !5983, !5984, !5991, !5992, !5999, !6000, !6001, !6002, !6009, !6010, !6040, !6041, !6042, !6043, !6044, !6045, !6046, !6047, !6048, !6049, !6050, !6051, !6052, !6053, !6054, !6055, !6056, !6057}
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !5967, file: !1076, line: 136, baseType: !175, size: 32)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !5967, file: !1076, line: 137, baseType: !680, size: 32, offset: 32)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !5967, file: !1076, line: 138, baseType: !5972, size: 32, offset: 64)
!5972 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1160, line: 56, baseType: !5973)
!5973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5974, size: 32)
!5974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 54, size: 8, elements: !5975)
!5975 = !{!5976}
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !5974, file: !1160, line: 55, baseType: !378, size: 8)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !5967, file: !1076, line: 139, baseType: !5978, size: 32, offset: 96)
!5978 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1160, line: 46, baseType: !5979)
!5979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5980, size: 32)
!5980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1160, line: 44, size: 8, elements: !5981)
!5981 = !{!5982}
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !5980, file: !1160, line: 45, baseType: !378, size: 8)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !5967, file: !1076, line: 140, baseType: !1172, size: 8, offset: 128)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !5967, file: !1076, line: 143, baseType: !5985, size: 32, offset: 160)
!5985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5986, size: 32)
!5986 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1178, line: 146, baseType: !5987)
!5987 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 143, size: 64, elements: !5988)
!5988 = !{!5989, !5990}
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !5987, file: !1178, line: 144, baseType: !175, size: 32)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !5987, file: !1178, line: 145, baseType: !175, size: 32, offset: 32)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !5967, file: !1076, line: 144, baseType: !680, size: 32, offset: 192)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !5967, file: !1076, line: 145, baseType: !5993, size: 32, offset: 224)
!5993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5994, size: 32)
!5994 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1178, line: 152, baseType: !5995)
!5995 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 149, size: 64, elements: !5996)
!5996 = !{!5997, !5998}
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !5995, file: !1178, line: 150, baseType: !175, size: 32)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !5995, file: !1178, line: 151, baseType: !175, size: 32, offset: 32)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !5967, file: !1076, line: 146, baseType: !680, size: 32, offset: 256)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !5967, file: !1076, line: 147, baseType: !175, size: 32, offset: 288)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !5967, file: !1076, line: 148, baseType: !680, size: 32, offset: 320)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !5967, file: !1076, line: 151, baseType: !6003, size: 1024, offset: 352)
!6003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6004, size: 1024, elements: !1201)
!6004 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1178, line: 170, baseType: !6005)
!6005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 167, size: 64, elements: !6006)
!6006 = !{!6007, !6008}
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !6005, file: !1178, line: 168, baseType: !175, size: 32)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !6005, file: !1178, line: 169, baseType: !175, size: 32, offset: 32)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !5967, file: !1076, line: 155, baseType: !1203, size: 32, offset: 1376)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !5967, file: !1076, line: 156, baseType: !6011, size: 32, offset: 1408)
!6011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6012, size: 32)
!6012 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1076, line: 124, baseType: !6013)
!6013 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1076, line: 90, size: 200, elements: !6014)
!6014 = !{!6015, !6016, !6017, !6018, !6019, !6020, !6021, !6022, !6023, !6024, !6025, !6026, !6027, !6028, !6029, !6030, !6031, !6032, !6033, !6034, !6035, !6036, !6037, !6038, !6039}
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !6013, file: !1076, line: 91, baseType: !378, size: 8)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !6013, file: !1076, line: 92, baseType: !378, size: 8, offset: 8)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !6013, file: !1076, line: 94, baseType: !378, size: 8, offset: 16)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !6013, file: !1076, line: 95, baseType: !378, size: 8, offset: 24)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !6013, file: !1076, line: 96, baseType: !378, size: 8, offset: 32)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !6013, file: !1076, line: 98, baseType: !378, size: 8, offset: 40)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !6013, file: !1076, line: 99, baseType: !378, size: 8, offset: 48)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !6013, file: !1076, line: 100, baseType: !378, size: 8, offset: 56)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !6013, file: !1076, line: 101, baseType: !378, size: 8, offset: 64)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !6013, file: !1076, line: 103, baseType: !378, size: 8, offset: 72)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !6013, file: !1076, line: 104, baseType: !378, size: 8, offset: 80)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !6013, file: !1076, line: 106, baseType: !378, size: 8, offset: 88)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !6013, file: !1076, line: 107, baseType: !378, size: 8, offset: 96)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !6013, file: !1076, line: 108, baseType: !378, size: 8, offset: 104)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !6013, file: !1076, line: 109, baseType: !378, size: 8, offset: 112)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !6013, file: !1076, line: 110, baseType: !378, size: 8, offset: 120)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !6013, file: !1076, line: 111, baseType: !378, size: 8, offset: 128)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !6013, file: !1076, line: 112, baseType: !378, size: 8, offset: 136)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !6013, file: !1076, line: 114, baseType: !378, size: 8, offset: 144)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !6013, file: !1076, line: 115, baseType: !378, size: 8, offset: 152)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !6013, file: !1076, line: 118, baseType: !378, size: 8, offset: 160)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !6013, file: !1076, line: 119, baseType: !378, size: 8, offset: 168)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !6013, file: !1076, line: 120, baseType: !378, size: 8, offset: 176)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !6013, file: !1076, line: 121, baseType: !378, size: 8, offset: 184)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !6013, file: !1076, line: 122, baseType: !378, size: 8, offset: 192)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !5967, file: !1076, line: 157, baseType: !175, size: 32, offset: 1440)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !5967, file: !1076, line: 158, baseType: !952, size: 16, offset: 1472)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !5967, file: !1076, line: 159, baseType: !952, size: 16, offset: 1488)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !5967, file: !1076, line: 163, baseType: !952, size: 16, offset: 1504)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !5967, file: !1076, line: 164, baseType: !952, size: 16, offset: 1520)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !5967, file: !1076, line: 167, baseType: !378, size: 8, offset: 1536)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !5967, file: !1076, line: 168, baseType: !1242, size: 24, offset: 1544)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !5967, file: !1076, line: 169, baseType: !378, size: 8, offset: 1568)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !5967, file: !1076, line: 170, baseType: !378, size: 8, offset: 1576)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !5967, file: !1076, line: 173, baseType: !952, size: 16, offset: 1584)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !5967, file: !1076, line: 174, baseType: !175, size: 32, offset: 1600)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !5967, file: !1076, line: 175, baseType: !175, size: 32, offset: 1632)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !5967, file: !1076, line: 178, baseType: !211, size: 8, offset: 1664)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !5967, file: !1076, line: 179, baseType: !211, size: 8, offset: 1672)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !5967, file: !1076, line: 182, baseType: !1253, size: 32, offset: 1696)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !5967, file: !1076, line: 186, baseType: !1253, size: 32, offset: 1728)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !5967, file: !1076, line: 187, baseType: !1258, size: 32, offset: 1760)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !5967, file: !1076, line: 188, baseType: !1258, size: 32, offset: 1792)
!6058 = !DILocalVariable(name: "i", scope: !5958, file: !883, line: 74, type: !175)
!6059 = !DILocalVariable(name: "data_cnt", scope: !5958, file: !883, line: 74, type: !175)
!6060 = !DILocalVariable(name: "p_data", scope: !5958, file: !883, line: 75, type: !920)
!6061 = !DILocation(line: 0, scope: !5958)
!6062 = !DILocation(line: 77, column: 16, scope: !5958)
!6063 = !DILocation(line: 79, column: 53, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6065, file: !883, line: 79, column: 5)
!6065 = distinct !DILexicalBlock(scope: !5958, file: !883, line: 79, column: 5)
!6066 = !DILocation(line: 79, column: 5, scope: !6065)
!6067 = !DILocation(line: 79, column: 41, scope: !6065)
!6068 = !DILocation(line: 77, column: 47, scope: !5958)
!6069 = !DILocation(line: 80, column: 13, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !883, line: 80, column: 13)
!6071 = distinct !DILexicalBlock(scope: !6064, file: !883, line: 79, column: 80)
!6072 = !DILocation(line: 80, column: 21, scope: !6070)
!6073 = !DILocation(line: 80, column: 13, scope: !6071)
!6074 = !DILocation(line: 81, column: 13, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6076, file: !883, line: 81, column: 13)
!6076 = distinct !DILexicalBlock(scope: !6077, file: !883, line: 81, column: 13)
!6077 = distinct !DILexicalBlock(scope: !6078, file: !883, line: 81, column: 13)
!6078 = distinct !DILexicalBlock(scope: !6070, file: !883, line: 80, column: 36)
!6079 = !DILocation(line: 79, column: 65, scope: !6064)
!6080 = !DILocation(line: 79, column: 70, scope: !6064)
!6081 = distinct !{!6081, !6066, !6082}
!6082 = !DILocation(line: 84, column: 5, scope: !6065)
!6083 = !DILocation(line: 85, column: 1, scope: !5958)
!6084 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !883, file: !883, line: 93, type: !3110, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6085)
!6085 = !{!6086, !6087}
!6086 = !DILocalVariable(name: "num", arg: 1, scope: !6084, file: !883, line: 93, type: !175)
!6087 = !DILocalVariable(name: "ret", scope: !6084, file: !883, line: 95, type: !7)
!6088 = !DILocation(line: 0, scope: !6084)
!6089 = !DILocation(line: 100, column: 9, scope: !6084)
!6090 = !DILocation(line: 102, column: 5, scope: !6084)
!6091 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !883, file: !883, line: 110, type: !6092, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6095)
!6092 = !DISubroutineType(types: !6093)
!6093 = !{null, !6094}
!6094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !952)
!6095 = !{!6096, !6097}
!6096 = !DILocalVariable(name: "CS", arg: 1, scope: !6091, file: !883, line: 110, type: !6094)
!6097 = !DILocalVariable(name: "val", scope: !6091, file: !883, line: 112, type: !175)
!6098 = !DILocation(line: 0, scope: !6091)
!6099 = !DILocation(line: 114, column: 5, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6101, file: !883, line: 114, column: 5)
!6101 = distinct !DILexicalBlock(scope: !6091, file: !883, line: 114, column: 5)
!6102 = !DILocation(line: 116, column: 16, scope: !6091)
!6103 = !DILocation(line: 117, column: 9, scope: !6091)
!6104 = !DILocation(line: 122, column: 13, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6106, file: !883, line: 121, column: 27)
!6106 = distinct !DILexicalBlock(scope: !6107, file: !883, line: 121, column: 16)
!6107 = distinct !DILexicalBlock(scope: !6091, file: !883, line: 117, column: 9)
!6108 = !DILocation(line: 127, column: 9, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6110, file: !883, line: 127, column: 9)
!6110 = distinct !DILexicalBlock(scope: !6111, file: !883, line: 127, column: 9)
!6111 = distinct !DILexicalBlock(scope: !6112, file: !883, line: 127, column: 9)
!6112 = distinct !DILexicalBlock(scope: !6106, file: !883, line: 125, column: 12)
!6113 = !DILocation(line: 0, scope: !6107)
!6114 = !DILocation(line: 134, column: 5, scope: !6091)
!6115 = !DILocation(line: 134, column: 19, scope: !6091)
!6116 = !DILocation(line: 134, column: 35, scope: !6091)
!6117 = !DILocation(line: 134, column: 12, scope: !6091)
!6118 = distinct !{!6118, !6114, !6119}
!6119 = !DILocation(line: 134, column: 57, scope: !6091)
!6120 = !DILocation(line: 135, column: 19, scope: !6091)
!6121 = !DILocation(line: 135, column: 34, scope: !6091)
!6122 = !DILocation(line: 135, column: 12, scope: !6091)
!6123 = !DILocation(line: 135, column: 5, scope: !6091)
!6124 = distinct !{!6124, !6123, !6125}
!6125 = !DILocation(line: 135, column: 50, scope: !6091)
!6126 = !DILocation(line: 130, column: 9, scope: !6091)
!6127 = !DILocation(line: 138, column: 24, scope: !6091)
!6128 = !DILocation(line: 139, column: 1, scope: !6091)
!6129 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !883, file: !883, line: 148, type: !6092, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6130)
!6130 = !{!6131, !6132}
!6131 = !DILocalVariable(name: "CS", arg: 1, scope: !6129, file: !883, line: 148, type: !6094)
!6132 = !DILocalVariable(name: "val", scope: !6129, file: !883, line: 150, type: !175)
!6133 = !DILocation(line: 0, scope: !6129)
!6134 = !DILocation(line: 153, column: 16, scope: !6129)
!6135 = !DILocation(line: 154, column: 9, scope: !6129)
!6136 = !DILocation(line: 155, column: 24, scope: !6129)
!6137 = !DILocation(line: 158, column: 5, scope: !6129)
!6138 = !DILocation(line: 158, column: 18, scope: !6129)
!6139 = !DILocation(line: 158, column: 32, scope: !6129)
!6140 = distinct !{!6140, !6137, !6141}
!6141 = !DILocation(line: 158, column: 49, scope: !6129)
!6142 = !DILocation(line: 163, column: 16, scope: !6129)
!6143 = !DILocation(line: 164, column: 9, scope: !6129)
!6144 = !DILocation(line: 165, column: 24, scope: !6129)
!6145 = !DILocation(line: 168, column: 5, scope: !6129)
!6146 = !DILocation(line: 168, column: 18, scope: !6129)
!6147 = !DILocation(line: 168, column: 32, scope: !6129)
!6148 = distinct !{!6148, !6145, !6149}
!6149 = !DILocation(line: 168, column: 46, scope: !6129)
!6150 = !DILocation(line: 174, column: 10, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6129, file: !883, line: 174, column: 9)
!6152 = !DILocation(line: 174, column: 25, scope: !6151)
!6153 = !DILocation(line: 174, column: 9, scope: !6129)
!6154 = !DILocation(line: 175, column: 9, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6156, file: !883, line: 175, column: 9)
!6156 = distinct !DILexicalBlock(scope: !6157, file: !883, line: 175, column: 9)
!6157 = distinct !DILexicalBlock(scope: !6151, file: !883, line: 174, column: 36)
!6158 = !DILocation(line: 176, column: 5, scope: !6157)
!6159 = !DILocation(line: 179, column: 1, scope: !6129)
!6160 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !883, file: !883, line: 186, type: !6161, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6163)
!6161 = !DISubroutineType(types: !6162)
!6162 = !{!175, !6094}
!6163 = !{!6164, !6165, !6166}
!6164 = !DILocalVariable(name: "CS", arg: 1, scope: !6160, file: !883, line: 186, type: !6094)
!6165 = !DILocalVariable(name: "val", scope: !6160, file: !883, line: 188, type: !175)
!6166 = !DILocalVariable(name: "misc_ctl", scope: !6160, file: !883, line: 189, type: !175)
!6167 = !DILocation(line: 0, scope: !6160)
!6168 = !DILocation(line: 204, column: 16, scope: !6160)
!6169 = !DILocation(line: 208, column: 12, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6160, file: !883, line: 208, column: 9)
!6171 = !DILocation(line: 208, column: 9, scope: !6160)
!6172 = !DILocation(line: 212, column: 20, scope: !6160)
!6173 = !DILocation(line: 215, column: 1, scope: !6160)
!6174 = !DILocation(line: 215, column: 15, scope: !6160)
!6175 = !DILocation(line: 215, column: 29, scope: !6160)
!6176 = !DILocation(line: 215, column: 8, scope: !6160)
!6177 = distinct !{!6177, !6173, !6178}
!6178 = !DILocation(line: 215, column: 46, scope: !6160)
!6179 = !DILocation(line: 216, column: 22, scope: !6160)
!6180 = !DILocation(line: 216, column: 36, scope: !6160)
!6181 = !DILocation(line: 216, column: 9, scope: !6160)
!6182 = distinct !{!6182, !6181, !6183}
!6183 = !DILocation(line: 216, column: 47, scope: !6160)
!6184 = !DILocation(line: 218, column: 13, scope: !6160)
!6185 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !883, file: !883, line: 227, type: !6092, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6186)
!6186 = !{!6187}
!6187 = !DILocalVariable(name: "CS", arg: 1, scope: !6185, file: !883, line: 227, type: !6094)
!6188 = !DILocation(line: 0, scope: !6185)
!6189 = !DILocation(line: 235, column: 5, scope: !6185)
!6190 = !DILocation(line: 236, column: 5, scope: !6185)
!6191 = !DILocation(line: 238, column: 1, scope: !6185)
!6192 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !883, file: !883, line: 249, type: !6193, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6195)
!6193 = !DISubroutineType(types: !6194)
!6194 = !{null, !6094, !690}
!6195 = !{!6196, !6197, !6198, !6199, !6200}
!6196 = !DILocalVariable(name: "CS", arg: 1, scope: !6192, file: !883, line: 249, type: !6094)
!6197 = !DILocalVariable(name: "cmd", arg: 2, scope: !6192, file: !883, line: 249, type: !690)
!6198 = !DILocalVariable(name: "cmdi", scope: !6192, file: !883, line: 251, type: !175)
!6199 = !DILocalVariable(name: "cmdo", scope: !6192, file: !883, line: 251, type: !175)
!6200 = !DILocalVariable(name: "len", scope: !6192, file: !883, line: 252, type: !378)
!6201 = !DILocation(line: 0, scope: !6192)
!6202 = !DILocation(line: 254, column: 46, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6204, file: !883, line: 254, column: 5)
!6204 = distinct !DILexicalBlock(scope: !6192, file: !883, line: 254, column: 5)
!6205 = !DILocation(line: 254, column: 5, scope: !6204)
!6206 = !DILocation(line: 255, column: 22, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6203, file: !883, line: 254, column: 103)
!6208 = !DILocation(line: 255, column: 59, scope: !6207)
!6209 = !DILocation(line: 255, column: 51, scope: !6207)
!6210 = !DILocation(line: 254, column: 65, scope: !6203)
!6211 = !DILocation(line: 254, column: 97, scope: !6203)
!6212 = distinct !{!6212, !6205, !6213}
!6213 = !DILocation(line: 256, column: 5, scope: !6204)
!6214 = !DILocation(line: 258, column: 9, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6192, file: !883, line: 258, column: 9)
!6216 = !DILocation(line: 262, column: 5, scope: !6192)
!6217 = !DILocation(line: 263, column: 33, scope: !6192)
!6218 = !DILocation(line: 264, column: 25, scope: !6192)
!6219 = !DILocation(line: 265, column: 24, scope: !6192)
!6220 = !DILocation(line: 266, column: 5, scope: !6192)
!6221 = !DILocation(line: 268, column: 5, scope: !6192)
!6222 = !DILocation(line: 269, column: 1, scope: !6192)
!6223 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !883, file: !883, line: 281, type: !6224, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6226)
!6224 = !DISubroutineType(types: !6225)
!6225 = !{null, !6094, !4493, !690, !690}
!6226 = !{!6227, !6228, !6229, !6230, !6231, !6232}
!6227 = !DILocalVariable(name: "CS", arg: 1, scope: !6223, file: !883, line: 281, type: !6094)
!6228 = !DILocalVariable(name: "cmd", arg: 2, scope: !6223, file: !883, line: 281, type: !4493)
!6229 = !DILocalVariable(name: "address", arg: 3, scope: !6223, file: !883, line: 281, type: !690)
!6230 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !6223, file: !883, line: 281, type: !690)
!6231 = !DILocalVariable(name: "cmd1", scope: !6223, file: !883, line: 283, type: !175)
!6232 = !DILocalVariable(name: "cmd2", scope: !6223, file: !883, line: 283, type: !175)
!6233 = !DILocation(line: 0, scope: !6223)
!6234 = !DILocation(line: 285, column: 12, scope: !6223)
!6235 = !DILocation(line: 287, column: 23, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6223, file: !883, line: 287, column: 9)
!6237 = !DILocation(line: 287, column: 9, scope: !6223)
!6238 = !DILocation(line: 288, column: 22, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6236, file: !883, line: 287, column: 31)
!6240 = !DILocation(line: 288, column: 55, scope: !6239)
!6241 = !DILocation(line: 288, column: 53, scope: !6239)
!6242 = !DILocation(line: 289, column: 5, scope: !6239)
!6243 = !DILocation(line: 290, column: 22, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6236, file: !883, line: 289, column: 12)
!6245 = !DILocation(line: 290, column: 53, scope: !6244)
!6246 = !DILocation(line: 290, column: 51, scope: !6244)
!6247 = !DILocation(line: 291, column: 21, scope: !6244)
!6248 = !DILocation(line: 0, scope: !6236)
!6249 = !DILocation(line: 294, column: 33, scope: !6223)
!6250 = !DILocation(line: 295, column: 38, scope: !6223)
!6251 = !DILocation(line: 296, column: 41, scope: !6223)
!6252 = !DILocation(line: 296, column: 25, scope: !6223)
!6253 = !DILocation(line: 297, column: 24, scope: !6223)
!6254 = !DILocation(line: 299, column: 5, scope: !6223)
!6255 = !DILocation(line: 300, column: 5, scope: !6223)
!6256 = !DILocation(line: 302, column: 1, scope: !6223)
!6257 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !883, file: !883, line: 312, type: !6258, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6260)
!6258 = !DISubroutineType(types: !6259)
!6259 = !{!175, !690, !690}
!6260 = !{!6261, !6262}
!6261 = !DILocalVariable(name: "cmd", arg: 1, scope: !6257, file: !883, line: 312, type: !690)
!6262 = !DILocalVariable(name: "address", arg: 2, scope: !6257, file: !883, line: 312, type: !690)
!6263 = !DILocation(line: 0, scope: !6257)
!6264 = !DILocation(line: 314, column: 14, scope: !6257)
!6265 = !DILocation(line: 314, column: 44, scope: !6257)
!6266 = !DILocation(line: 314, column: 82, scope: !6257)
!6267 = !DILocation(line: 314, column: 75, scope: !6257)
!6268 = !DILocation(line: 314, column: 5, scope: !6257)
!6269 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !883, file: !883, line: 332, type: !6270, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6273)
!6270 = !DISubroutineType(types: !6271)
!6271 = !{!175, !690, !690, !6272, !920}
!6272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 32)
!6273 = !{!6274, !6275, !6276, !6277, !6278, !6286, !6287, !6288}
!6274 = !DILocalVariable(name: "cmd", arg: 1, scope: !6269, file: !883, line: 332, type: !690)
!6275 = !DILocalVariable(name: "address", arg: 2, scope: !6269, file: !883, line: 332, type: !690)
!6276 = !DILocalVariable(name: "p_data", arg: 3, scope: !6269, file: !883, line: 332, type: !6272)
!6277 = !DILocalVariable(name: "length", arg: 4, scope: !6269, file: !883, line: 332, type: !920)
!6278 = !DILocalVariable(name: "tmp", scope: !6269, file: !883, line: 334, type: !6279)
!6279 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !1076, line: 202, baseType: !6280)
!6280 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1076, line: 198, size: 32, elements: !6281)
!6281 = !{!6282, !6283, !6285}
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !6280, file: !1076, line: 199, baseType: !175, size: 32)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !6280, file: !1076, line: 200, baseType: !6284, size: 32)
!6284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 32, elements: !383)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !6280, file: !1076, line: 201, baseType: !377, size: 32)
!6286 = !DILocalVariable(name: "cmd1", scope: !6269, file: !883, line: 335, type: !175)
!6287 = !DILocalVariable(name: "cmd2", scope: !6269, file: !883, line: 335, type: !175)
!6288 = !DILocalVariable(name: "i", scope: !6269, file: !883, line: 336, type: !175)
!6289 = !DILocation(line: 0, scope: !6269)
!6290 = !DILocation(line: 334, column: 5, scope: !6269)
!6291 = !DILocation(line: 334, column: 16, scope: !6269)
!6292 = !DILocation(line: 338, column: 12, scope: !6269)
!6293 = !DILocation(line: 340, column: 17, scope: !6269)
!6294 = !DILocation(line: 342, column: 17, scope: !6269)
!6295 = !DILocation(line: 342, column: 9, scope: !6269)
!6296 = !DILocation(line: 342, column: 15, scope: !6269)
!6297 = !DILocation(line: 344, column: 22, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6299, file: !883, line: 343, column: 29)
!6299 = distinct !DILexicalBlock(scope: !6300, file: !883, line: 343, column: 5)
!6300 = distinct !DILexicalBlock(scope: !6269, file: !883, line: 343, column: 5)
!6301 = !DILocation(line: 343, column: 5, scope: !6300)
!6302 = !DILocation(line: 344, column: 21, scope: !6298)
!6303 = !DILocation(line: 344, column: 9, scope: !6298)
!6304 = !DILocation(line: 344, column: 19, scope: !6298)
!6305 = !DILocation(line: 345, column: 18, scope: !6298)
!6306 = !DILocation(line: 343, column: 25, scope: !6299)
!6307 = !DILocation(line: 343, column: 19, scope: !6299)
!6308 = distinct !{!6308, !6301, !6309}
!6309 = !DILocation(line: 346, column: 5, scope: !6300)
!6310 = !DILocation(line: 347, column: 16, scope: !6269)
!6311 = !DILocation(line: 348, column: 16, scope: !6269)
!6312 = !DILocation(line: 348, column: 15, scope: !6269)
!6313 = !DILocation(line: 339, column: 17, scope: !6269)
!6314 = !DILocation(line: 339, column: 52, scope: !6269)
!6315 = !DILocation(line: 339, column: 45, scope: !6269)
!6316 = !DILocation(line: 348, column: 13, scope: !6269)
!6317 = !DILocation(line: 349, column: 38, scope: !6269)
!6318 = !DILocation(line: 351, column: 1, scope: !6269)
!6319 = !DILocation(line: 350, column: 5, scope: !6269)
!6320 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !883, file: !883, line: 367, type: !6321, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6323)
!6321 = !DISubroutineType(types: !6322)
!6322 = !{null, !175, !194, !858}
!6323 = !{!6324, !6325, !6326, !6327, !6328, !6329}
!6324 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !6320, file: !883, line: 367, type: !175)
!6325 = !DILocalVariable(name: "buff", arg: 2, scope: !6320, file: !883, line: 367, type: !194)
!6326 = !DILocalVariable(name: "length", arg: 3, scope: !6320, file: !883, line: 367, type: !858)
!6327 = !DILocalVariable(name: "i", scope: !6320, file: !883, line: 369, type: !175)
!6328 = !DILocalVariable(name: "p_data", scope: !6320, file: !883, line: 370, type: !680)
!6329 = !DILocalVariable(name: "tmp", scope: !6320, file: !883, line: 371, type: !6279)
!6330 = !DILocation(line: 0, scope: !6320)
!6331 = !DILocation(line: 371, column: 5, scope: !6320)
!6332 = !DILocation(line: 371, column: 13, scope: !6320)
!6333 = !DILocation(line: 373, column: 18, scope: !6320)
!6334 = !DILocation(line: 376, column: 15, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6320, file: !883, line: 376, column: 9)
!6336 = !DILocation(line: 376, column: 30, scope: !6335)
!6337 = !DILocation(line: 376, column: 11, scope: !6335)
!6338 = !DILocation(line: 376, column: 9, scope: !6320)
!6339 = !DILocation(line: 377, column: 23, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6341, file: !883, line: 377, column: 9)
!6341 = distinct !DILexicalBlock(scope: !6342, file: !883, line: 377, column: 9)
!6342 = distinct !DILexicalBlock(scope: !6335, file: !883, line: 376, column: 41)
!6343 = !DILocation(line: 377, column: 9, scope: !6341)
!6344 = !DILocation(line: 378, column: 13, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6340, file: !883, line: 377, column: 80)
!6346 = !DILocation(line: 377, column: 41, scope: !6340)
!6347 = !DILocation(line: 377, column: 54, scope: !6340)
!6348 = !DILocation(line: 377, column: 67, scope: !6340)
!6349 = distinct !{!6349, !6343, !6350}
!6350 = !DILocation(line: 379, column: 9, scope: !6341)
!6351 = !DILocation(line: 382, column: 37, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6335, file: !883, line: 382, column: 14)
!6353 = !DILocation(line: 382, column: 16, scope: !6352)
!6354 = !DILocation(line: 0, scope: !6352)
!6355 = !DILocation(line: 382, column: 14, scope: !6335)
!6356 = !DILocation(line: 391, column: 9, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6358, file: !883, line: 391, column: 9)
!6358 = distinct !DILexicalBlock(scope: !6352, file: !883, line: 390, column: 13)
!6359 = !DILocation(line: 383, column: 9, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6361, file: !883, line: 383, column: 9)
!6361 = distinct !DILexicalBlock(scope: !6352, file: !883, line: 382, column: 49)
!6362 = !DILocation(line: 384, column: 26, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6364, file: !883, line: 383, column: 80)
!6364 = distinct !DILexicalBlock(scope: !6360, file: !883, line: 383, column: 9)
!6365 = !DILocation(line: 384, column: 24, scope: !6363)
!6366 = !DILocation(line: 385, column: 47, scope: !6363)
!6367 = !DILocation(line: 385, column: 26, scope: !6363)
!6368 = !DILocation(line: 385, column: 24, scope: !6363)
!6369 = !DILocation(line: 386, column: 13, scope: !6363)
!6370 = !DILocation(line: 383, column: 41, scope: !6364)
!6371 = !DILocation(line: 383, column: 54, scope: !6364)
!6372 = !DILocation(line: 383, column: 67, scope: !6364)
!6373 = !DILocation(line: 383, column: 23, scope: !6364)
!6374 = distinct !{!6374, !6359, !6375}
!6375 = !DILocation(line: 387, column: 9, scope: !6360)
!6376 = !DILocation(line: 392, column: 13, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6378, file: !883, line: 392, column: 13)
!6378 = distinct !DILexicalBlock(scope: !6379, file: !883, line: 391, column: 61)
!6379 = distinct !DILexicalBlock(scope: !6357, file: !883, line: 391, column: 9)
!6380 = !DILocation(line: 393, column: 36, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6382, file: !883, line: 392, column: 51)
!6382 = distinct !DILexicalBlock(scope: !6377, file: !883, line: 392, column: 13)
!6383 = !DILocation(line: 393, column: 29, scope: !6381)
!6384 = !DILocation(line: 393, column: 17, scope: !6381)
!6385 = !DILocation(line: 393, column: 27, scope: !6381)
!6386 = !DILocation(line: 392, column: 47, scope: !6382)
!6387 = !DILocation(line: 392, column: 27, scope: !6382)
!6388 = !DILocation(line: 392, column: 31, scope: !6382)
!6389 = distinct !{!6389, !6376, !6390}
!6390 = !DILocation(line: 394, column: 13, scope: !6377)
!6391 = !DILocation(line: 395, column: 13, scope: !6378)
!6392 = !DILocation(line: 391, column: 41, scope: !6379)
!6393 = !DILocation(line: 391, column: 54, scope: !6379)
!6394 = !DILocation(line: 391, column: 23, scope: !6379)
!6395 = distinct !{!6395, !6356, !6396}
!6396 = !DILocation(line: 396, column: 9, scope: !6357)
!6397 = !DILocation(line: 398, column: 1, scope: !6320)
!6398 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !883, file: !883, line: 414, type: !6399, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6401)
!6399 = !DISubroutineType(types: !6400)
!6400 = !{null, !6094, !4492, !680, !6094, !6094}
!6401 = !{!6402, !6403, !6404, !6405, !6406, !6407, !6408, !6409, !6410, !6411}
!6402 = !DILocalVariable(name: "CS", arg: 1, scope: !6398, file: !883, line: 414, type: !6094)
!6403 = !DILocalVariable(name: "cmd", arg: 2, scope: !6398, file: !883, line: 414, type: !4492)
!6404 = !DILocalVariable(name: "data", arg: 3, scope: !6398, file: !883, line: 414, type: !680)
!6405 = !DILocalVariable(name: "outl", arg: 4, scope: !6398, file: !883, line: 414, type: !6094)
!6406 = !DILocalVariable(name: "inl", arg: 5, scope: !6398, file: !883, line: 414, type: !6094)
!6407 = !DILocalVariable(name: "tmp", scope: !6398, file: !883, line: 416, type: !175)
!6408 = !DILocalVariable(name: "i", scope: !6398, file: !883, line: 417, type: !175)
!6409 = !DILocalVariable(name: "j", scope: !6398, file: !883, line: 417, type: !175)
!6410 = !DILocalVariable(name: "p_data", scope: !6398, file: !883, line: 418, type: !680)
!6411 = !DILocalVariable(name: "p_tmp", scope: !6398, file: !883, line: 418, type: !680)
!6412 = !DILocation(line: 0, scope: !6398)
!6413 = !DILocation(line: 416, column: 5, scope: !6398)
!6414 = !DILocation(line: 422, column: 60, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6416, file: !883, line: 422, column: 5)
!6416 = distinct !DILexicalBlock(scope: !6398, file: !883, line: 422, column: 5)
!6417 = !DILocation(line: 422, column: 5, scope: !6416)
!6418 = !DILocation(line: 423, column: 25, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6420, file: !883, line: 423, column: 9)
!6420 = distinct !DILexicalBlock(scope: !6415, file: !883, line: 422, column: 83)
!6421 = !DILocation(line: 423, column: 32, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6419, file: !883, line: 423, column: 9)
!6423 = !DILocation(line: 423, column: 9, scope: !6419)
!6424 = !DILocation(line: 424, column: 24, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6422, file: !883, line: 423, column: 59)
!6426 = !DILocation(line: 424, column: 13, scope: !6425)
!6427 = !DILocation(line: 424, column: 22, scope: !6425)
!6428 = !DILocation(line: 423, column: 50, scope: !6422)
!6429 = !DILocation(line: 423, column: 55, scope: !6422)
!6430 = !DILocation(line: 423, column: 39, scope: !6422)
!6431 = distinct !{!6431, !6423, !6432}
!6432 = !DILocation(line: 425, column: 9, scope: !6419)
!6433 = !DILocation(line: 426, column: 9, scope: !6420)
!6434 = !DILocation(line: 0, scope: !6416)
!6435 = !DILocation(line: 422, column: 75, scope: !6415)
!6436 = distinct !{!6436, !6417, !6437}
!6437 = !DILocation(line: 427, column: 5, scope: !6416)
!6438 = !DILocation(line: 428, column: 25, scope: !6398)
!6439 = !DILocation(line: 429, column: 26, scope: !6398)
!6440 = !DILocation(line: 429, column: 24, scope: !6398)
!6441 = !DILocation(line: 430, column: 5, scope: !6398)
!6442 = !DILocation(line: 431, column: 5, scope: !6398)
!6443 = !DILocation(line: 433, column: 67, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6445, file: !883, line: 433, column: 5)
!6445 = distinct !DILexicalBlock(scope: !6398, file: !883, line: 433, column: 5)
!6446 = !DILocation(line: 433, column: 5, scope: !6445)
!6447 = !DILocation(line: 433, column: 56, scope: !6445)
!6448 = !DILocation(line: 434, column: 17, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6444, file: !883, line: 433, column: 100)
!6450 = !DILocation(line: 434, column: 15, scope: !6449)
!6451 = !DILocation(line: 433, column: 74, scope: !6444)
!6452 = !DILocation(line: 433, column: 79, scope: !6444)
!6453 = !DILocation(line: 433, column: 87, scope: !6444)
!6454 = distinct !{!6454, !6446, !6455}
!6455 = !DILocation(line: 435, column: 5, scope: !6445)
!6456 = !DILocation(line: 437, column: 1, scope: !6398)
!6457 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !883, file: !883, line: 462, type: !6458, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6460)
!6458 = !DISubroutineType(types: !6459)
!6459 = !{null, !6094, !4492}
!6460 = !{!6461, !6462, !6463, !6464, !6465}
!6461 = !DILocalVariable(name: "CS", arg: 1, scope: !6457, file: !883, line: 462, type: !6094)
!6462 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !6457, file: !883, line: 462, type: !4492)
!6463 = !DILocalVariable(name: "i", scope: !6457, file: !883, line: 464, type: !175)
!6464 = !DILocalVariable(name: "val", scope: !6457, file: !883, line: 465, type: !175)
!6465 = !DILocalVariable(name: "status", scope: !6466, file: !883, line: 492, type: !378)
!6466 = distinct !DILexicalBlock(scope: !6467, file: !883, line: 491, column: 47)
!6467 = distinct !DILexicalBlock(scope: !6468, file: !883, line: 491, column: 13)
!6468 = distinct !DILexicalBlock(scope: !6457, file: !883, line: 477, column: 17)
!6469 = !DILocation(line: 0, scope: !6457)
!6470 = !DILocation(line: 467, column: 17, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6457, file: !883, line: 467, column: 9)
!6472 = !DILocation(line: 467, column: 9, scope: !6457)
!6473 = !DILocation(line: 474, column: 11, scope: !6457)
!6474 = !DILocation(line: 477, column: 5, scope: !6457)
!6475 = !DILocation(line: 478, column: 17, scope: !6468)
!6476 = !DILocation(line: 478, column: 9, scope: !6468)
!6477 = !DILocation(line: 481, column: 17, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6479, file: !883, line: 481, column: 17)
!6479 = distinct !DILexicalBlock(scope: !6468, file: !883, line: 478, column: 29)
!6480 = !DILocation(line: 481, column: 17, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6482, file: !883, line: 481, column: 17)
!6482 = distinct !DILexicalBlock(scope: !6483, file: !883, line: 481, column: 17)
!6483 = distinct !DILexicalBlock(scope: !6478, file: !883, line: 481, column: 17)
!6484 = !DILocation(line: 481, column: 17, scope: !6482)
!6485 = !DILocation(line: 481, column: 17, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6487, file: !883, line: 481, column: 17)
!6487 = distinct !DILexicalBlock(scope: !6483, file: !883, line: 481, column: 17)
!6488 = !DILocation(line: 484, column: 17, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6479, file: !883, line: 484, column: 17)
!6490 = !DILocation(line: 484, column: 17, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6492, file: !883, line: 484, column: 17)
!6492 = distinct !DILexicalBlock(scope: !6493, file: !883, line: 484, column: 17)
!6493 = distinct !DILexicalBlock(scope: !6489, file: !883, line: 484, column: 17)
!6494 = !DILocation(line: 484, column: 17, scope: !6492)
!6495 = !DILocation(line: 484, column: 17, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6497, file: !883, line: 484, column: 17)
!6497 = distinct !DILexicalBlock(scope: !6493, file: !883, line: 484, column: 17)
!6498 = !DILocation(line: 0, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6500, file: !883, line: 487, column: 17)
!6500 = distinct !DILexicalBlock(scope: !6479, file: !883, line: 487, column: 17)
!6501 = !DILocation(line: 487, column: 17, scope: !6500)
!6502 = !DILocation(line: 487, column: 17, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6504, file: !883, line: 487, column: 17)
!6504 = distinct !DILexicalBlock(scope: !6499, file: !883, line: 487, column: 17)
!6505 = !DILocation(line: 487, column: 17, scope: !6504)
!6506 = !DILocation(line: 487, column: 17, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6508, file: !883, line: 487, column: 17)
!6508 = distinct !DILexicalBlock(scope: !6499, file: !883, line: 487, column: 17)
!6509 = !DILocation(line: 487, column: 17, scope: !6508)
!6510 = !DILocation(line: 491, column: 23, scope: !6467)
!6511 = !DILocation(line: 491, column: 13, scope: !6467)
!6512 = !DILocation(line: 491, column: 28, scope: !6467)
!6513 = !DILocation(line: 491, column: 13, scope: !6468)
!6514 = !DILocation(line: 492, column: 13, scope: !6466)
!6515 = !DILocation(line: 494, column: 13, scope: !6466)
!6516 = !DILocation(line: 0, scope: !6466)
!6517 = !DILocation(line: 495, column: 17, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6466, file: !883, line: 494, column: 16)
!6519 = !DILocation(line: 496, column: 22, scope: !6466)
!6520 = !DILocation(line: 496, column: 31, scope: !6466)
!6521 = !DILocation(line: 496, column: 29, scope: !6466)
!6522 = !DILocation(line: 496, column: 13, scope: !6518)
!6523 = distinct !{!6523, !6515, !6524}
!6524 = !DILocation(line: 496, column: 45, scope: !6466)
!6525 = !DILocation(line: 497, column: 9, scope: !6467)
!6526 = !DILocation(line: 503, column: 25, scope: !6468)
!6527 = !DILocation(line: 497, column: 9, scope: !6466)
!6528 = !DILocation(line: 500, column: 70, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6467, file: !883, line: 499, column: 14)
!6530 = !DILocation(line: 500, column: 60, scope: !6529)
!6531 = !DILocation(line: 500, column: 13, scope: !6529)
!6532 = !DILocation(line: 503, column: 15, scope: !6468)
!6533 = !DILocation(line: 503, column: 11, scope: !6468)
!6534 = distinct !{!6534, !6474, !6535}
!6535 = !DILocation(line: 504, column: 5, scope: !6457)
!6536 = !DILocation(line: 505, column: 1, scope: !6457)
!6537 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !883, file: !883, line: 514, type: !6538, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6540)
!6538 = !DISubroutineType(types: !6539)
!6539 = !{null, !6094, !680, !378}
!6540 = !{!6541, !6542, !6543}
!6541 = !DILocalVariable(name: "CS", arg: 1, scope: !6537, file: !883, line: 514, type: !6094)
!6542 = !DILocalVariable(name: "id", arg: 2, scope: !6537, file: !883, line: 514, type: !680)
!6543 = !DILocalVariable(name: "cmd", arg: 3, scope: !6537, file: !883, line: 514, type: !378)
!6544 = !DILocation(line: 0, scope: !6537)
!6545 = !DILocation(line: 517, column: 5, scope: !6537)
!6546 = !DILocation(line: 518, column: 1, scope: !6537)
!6547 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !883, file: !883, line: 521, type: !6548, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6550)
!6548 = !DISubroutineType(types: !6549)
!6549 = !{null, !6094, !680}
!6550 = !{!6551, !6552}
!6551 = !DILocalVariable(name: "CS", arg: 1, scope: !6547, file: !883, line: 521, type: !6094)
!6552 = !DILocalVariable(name: "id", arg: 2, scope: !6547, file: !883, line: 521, type: !680)
!6553 = !DILocation(line: 0, scope: !6547)
!6554 = !DILocation(line: 523, column: 5, scope: !6547)
!6555 = !DILocation(line: 524, column: 1, scope: !6547)
!6556 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !883, file: !883, line: 536, type: !6557, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !210)
!6557 = !DISubroutineType(types: !6558)
!6558 = !{!6559}
!6559 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !886, line: 57, baseType: !885)
!6560 = !DILocation(line: 540, column: 5, scope: !6556)
!6561 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !883, file: !883, line: 561, type: !6562, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !210)
!6562 = !DISubroutineType(types: !6563)
!6563 = !{!6564}
!6564 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !886, line: 66, baseType: !893)
!6565 = !DILocation(line: 564, column: 15, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6561, file: !883, line: 564, column: 9)
!6567 = !DILocation(line: 564, column: 31, scope: !6566)
!6568 = !DILocation(line: 564, column: 45, scope: !6566)
!6569 = !DILocation(line: 0, scope: !6566)
!6570 = !DILocation(line: 569, column: 1, scope: !6561)
!6571 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !883, file: !883, line: 580, type: !6572, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6574)
!6572 = !DISubroutineType(types: !6573)
!6573 = !{!211, !680}
!6574 = !{!6575, !6576}
!6575 = !DILocalVariable(name: "buffer", arg: 1, scope: !6571, file: !883, line: 580, type: !680)
!6576 = !DILocalVariable(name: "i", scope: !6571, file: !883, line: 582, type: !79)
!6577 = !DILocation(line: 0, scope: !6571)
!6578 = !DILocation(line: 583, column: 5, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6571, file: !883, line: 583, column: 5)
!6580 = !DILocation(line: 584, column: 9, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6582, file: !883, line: 583, column: 29)
!6582 = distinct !DILexicalBlock(scope: !6579, file: !883, line: 583, column: 5)
!6583 = !DILocation(line: 584, column: 19, scope: !6581)
!6584 = !DILocation(line: 583, column: 25, scope: !6582)
!6585 = !DILocation(line: 583, column: 19, scope: !6582)
!6586 = distinct !{!6586, !6578, !6587}
!6587 = !DILocation(line: 585, column: 5, scope: !6579)
!6588 = !DILocation(line: 586, column: 5, scope: !6571)
!6589 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !883, file: !883, line: 613, type: !208, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6590)
!6590 = !{!6591}
!6591 = !DILocalVariable(name: "D", scope: !6589, file: !883, line: 615, type: !5965)
!6592 = !DILocation(line: 0, scope: !6589)
!6593 = !DILocation(line: 616, column: 32, scope: !6589)
!6594 = !DILocation(line: 616, column: 37, scope: !6589)
!6595 = !DILocation(line: 616, column: 27, scope: !6589)
!6596 = !DILocation(line: 617, column: 44, scope: !6589)
!6597 = !DILocation(line: 617, column: 31, scope: !6589)
!6598 = !DILocation(line: 617, column: 28, scope: !6589)
!6599 = !DILocation(line: 618, column: 32, scope: !6589)
!6600 = !DILocation(line: 618, column: 31, scope: !6589)
!6601 = !DILocation(line: 618, column: 29, scope: !6589)
!6602 = !DILocation(line: 621, column: 31, scope: !6589)
!6603 = !DILocation(line: 621, column: 24, scope: !6589)
!6604 = !DILocation(line: 622, column: 34, scope: !6589)
!6605 = !DILocation(line: 622, column: 27, scope: !6589)
!6606 = !DILocation(line: 623, column: 32, scope: !6589)
!6607 = !DILocation(line: 623, column: 25, scope: !6589)
!6608 = !DILocation(line: 624, column: 33, scope: !6589)
!6609 = !DILocation(line: 624, column: 26, scope: !6589)
!6610 = !DILocation(line: 625, column: 33, scope: !6589)
!6611 = !DILocation(line: 625, column: 26, scope: !6589)
!6612 = !DILocation(line: 629, column: 32, scope: !6589)
!6613 = !DILocation(line: 629, column: 47, scope: !6589)
!6614 = !DILocation(line: 629, column: 25, scope: !6589)
!6615 = !DILocation(line: 630, column: 32, scope: !6589)
!6616 = !DILocation(line: 630, column: 47, scope: !6589)
!6617 = !DILocation(line: 630, column: 25, scope: !6589)
!6618 = !DILocation(line: 633, column: 24, scope: !6589)
!6619 = !DILocation(line: 633, column: 31, scope: !6589)
!6620 = !DILocation(line: 633, column: 36, scope: !6589)
!6621 = !DILocation(line: 633, column: 28, scope: !6589)
!6622 = !DILocation(line: 633, column: 5, scope: !6589)
!6623 = !DILocation(line: 635, column: 5, scope: !6589)
!6624 = !DILocation(line: 636, column: 1, scope: !6589)
!6625 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !883, file: !883, line: 641, type: !208, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !210)
!6626 = !DILocation(line: 644, column: 26, scope: !6625)
!6627 = !DILocation(line: 644, column: 24, scope: !6625)
!6628 = !DILocation(line: 645, column: 29, scope: !6625)
!6629 = !DILocation(line: 645, column: 27, scope: !6625)
!6630 = !DILocation(line: 646, column: 27, scope: !6625)
!6631 = !DILocation(line: 646, column: 25, scope: !6625)
!6632 = !DILocation(line: 647, column: 28, scope: !6625)
!6633 = !DILocation(line: 647, column: 26, scope: !6625)
!6634 = !DILocation(line: 648, column: 27, scope: !6625)
!6635 = !DILocation(line: 648, column: 25, scope: !6625)
!6636 = !DILocation(line: 652, column: 32, scope: !6625)
!6637 = !DILocation(line: 652, column: 47, scope: !6625)
!6638 = !DILocation(line: 652, column: 25, scope: !6625)
!6639 = !DILocation(line: 655, column: 24, scope: !6625)
!6640 = !DILocation(line: 655, column: 5, scope: !6625)
!6641 = !DILocation(line: 657, column: 5, scope: !6625)
!6642 = !DILocation(line: 660, column: 9, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6625, file: !883, line: 660, column: 9)
!6644 = !DILocation(line: 660, column: 59, scope: !6643)
!6645 = !DILocation(line: 660, column: 38, scope: !6643)
!6646 = !DILocation(line: 660, column: 37, scope: !6643)
!6647 = !DILocation(line: 660, column: 33, scope: !6643)
!6648 = !DILocation(line: 660, column: 9, scope: !6625)
!6649 = !DILocation(line: 661, column: 9, scope: !6643)
!6650 = distinct !{!6650, !6649, !6651}
!6651 = !DILocation(line: 661, column: 18, scope: !6643)
!6652 = !DILocation(line: 662, column: 1, scope: !6625)
!6653 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !883, file: !883, line: 668, type: !208, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !210)
!6654 = !DILocation(line: 671, column: 9, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6653, file: !883, line: 671, column: 9)
!6656 = !DILocation(line: 671, column: 40, scope: !6655)
!6657 = !DILocation(line: 671, column: 9, scope: !6653)
!6658 = !DILocation(line: 672, column: 47, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6655, file: !883, line: 671, column: 46)
!6660 = !DILocation(line: 672, column: 40, scope: !6659)
!6661 = !DILocation(line: 673, column: 5, scope: !6659)
!6662 = !DILocation(line: 674, column: 9, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6653, file: !883, line: 674, column: 9)
!6664 = !DILocation(line: 674, column: 41, scope: !6663)
!6665 = !DILocation(line: 674, column: 9, scope: !6653)
!6666 = !DILocation(line: 675, column: 48, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6663, file: !883, line: 674, column: 47)
!6668 = !DILocation(line: 675, column: 41, scope: !6667)
!6669 = !DILocation(line: 676, column: 5, scope: !6667)
!6670 = !DILocation(line: 679, column: 33, scope: !6653)
!6671 = !DILocation(line: 679, column: 48, scope: !6653)
!6672 = !DILocation(line: 679, column: 25, scope: !6653)
!6673 = !DILocation(line: 680, column: 25, scope: !6653)
!6674 = !DILocation(line: 686, column: 5, scope: !6653)
!6675 = !DILocation(line: 688, column: 1, scope: !6653)
!6676 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !883, file: !883, line: 689, type: !208, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !210)
!6677 = !DILocation(line: 692, column: 9, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6676, file: !883, line: 692, column: 9)
!6679 = !DILocation(line: 692, column: 40, scope: !6678)
!6680 = !DILocation(line: 692, column: 9, scope: !6676)
!6681 = !DILocation(line: 693, column: 29, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6678, file: !883, line: 692, column: 46)
!6683 = !DILocation(line: 694, column: 5, scope: !6682)
!6684 = !DILocation(line: 695, column: 9, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6676, file: !883, line: 695, column: 9)
!6686 = !DILocation(line: 695, column: 41, scope: !6685)
!6687 = !DILocation(line: 695, column: 9, scope: !6676)
!6688 = !DILocation(line: 696, column: 29, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6685, file: !883, line: 695, column: 47)
!6690 = !DILocation(line: 697, column: 5, scope: !6689)
!6691 = !DILocation(line: 698, column: 5, scope: !6676)
!6692 = !DILocation(line: 699, column: 1, scope: !6676)
!6693 = distinct !DISubprogram(name: "ust_get_current_time", scope: !982, file: !982, line: 91, type: !3362, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6694)
!6694 = !{!6695}
!6695 = !DILocalVariable(name: "counter", scope: !6693, file: !982, line: 102, type: !175)
!6696 = !DILocation(line: 0, scope: !6693)
!6697 = !DILocation(line: 110, column: 5, scope: !6693)
!6698 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !982, file: !982, line: 114, type: !3362, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6699)
!6699 = !{!6700}
!6700 = !DILocalVariable(name: "counter", scope: !6698, file: !982, line: 125, type: !175)
!6701 = !DILocation(line: 0, scope: !6698)
!6702 = !DILocation(line: 133, column: 5, scope: !6698)
!6703 = distinct !DISubprogram(name: "ust_busy_wait", scope: !982, file: !982, line: 137, type: !5827, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6704)
!6704 = !{!6705}
!6705 = !DILocalVariable(name: "delay_us", arg: 1, scope: !6703, file: !982, line: 137, type: !175)
!6706 = !DILocation(line: 0, scope: !6703)
!6707 = !DILocation(line: 142, column: 5, scope: !6703)
!6708 = !DILocation(line: 144, column: 1, scope: !6703)
!6709 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !982, file: !982, line: 163, type: !3362, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6710)
!6710 = !{!6711}
!6711 = !DILocalVariable(name: "mask", scope: !6709, file: !982, line: 165, type: !175)
!6712 = !DILocation(line: 166, column: 12, scope: !6709)
!6713 = !DILocation(line: 0, scope: !6709)
!6714 = !DILocation(line: 167, column: 5, scope: !6709)
!6715 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !982, file: !982, line: 171, type: !5827, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6716)
!6716 = !{!6717}
!6717 = !DILocalVariable(name: "mask", arg: 1, scope: !6715, file: !982, line: 171, type: !175)
!6718 = !DILocation(line: 0, scope: !6715)
!6719 = !DILocation(line: 173, column: 5, scope: !6715)
!6720 = !DILocation(line: 174, column: 1, scope: !6715)
!6721 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !982, file: !982, line: 199, type: !1254, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6722)
!6722 = !{!6723}
!6723 = !DILocalVariable(name: "MTDData", arg: 1, scope: !6721, file: !982, line: 199, type: !194)
!6724 = !DILocation(line: 0, scope: !6721)
!6725 = !DILocation(line: 201, column: 5, scope: !6721)
!6726 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !982, file: !982, line: 388, type: !6727, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !210)
!6727 = !DISubroutineType(types: !6728)
!6728 = !{!858}
!6729 = !DILocation(line: 390, column: 5, scope: !6726)
!6730 = distinct !DISubprogram(name: "CompareData", scope: !982, file: !982, line: 872, type: !6731, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6733)
!6731 = !DISubroutineType(types: !6732)
!6732 = !{!211, !194, !194, !175}
!6733 = !{!6734, !6735, !6736, !6737, !6738, !6741, !6742, !6745, !6746, !6748}
!6734 = !DILocalVariable(name: "Address", arg: 1, scope: !6730, file: !982, line: 872, type: !194)
!6735 = !DILocalVariable(name: "Data", arg: 2, scope: !6730, file: !982, line: 872, type: !194)
!6736 = !DILocalVariable(name: "Length", arg: 3, scope: !6730, file: !982, line: 872, type: !175)
!6737 = !DILocalVariable(name: "i", scope: !6730, file: !982, line: 874, type: !175)
!6738 = !DILocalVariable(name: "Source", scope: !6739, file: !982, line: 877, type: !920)
!6739 = distinct !DILexicalBlock(scope: !6740, file: !982, line: 876, column: 74)
!6740 = distinct !DILexicalBlock(scope: !6730, file: !982, line: 876, column: 9)
!6741 = !DILocalVariable(name: "Dest", scope: !6739, file: !982, line: 878, type: !920)
!6742 = !DILocalVariable(name: "Source", scope: !6743, file: !982, line: 885, type: !951)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !982, line: 884, column: 79)
!6744 = distinct !DILexicalBlock(scope: !6740, file: !982, line: 884, column: 16)
!6745 = !DILocalVariable(name: "Dest", scope: !6743, file: !982, line: 886, type: !951)
!6746 = !DILocalVariable(name: "Source", scope: !6747, file: !982, line: 893, type: !680)
!6747 = distinct !DILexicalBlock(scope: !6744, file: !982, line: 892, column: 12)
!6748 = !DILocalVariable(name: "Dest", scope: !6747, file: !982, line: 894, type: !680)
!6749 = !DILocation(line: 0, scope: !6730)
!6750 = !DILocation(line: 876, column: 11, scope: !6740)
!6751 = !DILocation(line: 876, column: 42, scope: !6740)
!6752 = !DILocation(line: 877, column: 28, scope: !6739)
!6753 = !DILocation(line: 0, scope: !6739)
!6754 = !DILocation(line: 878, column: 26, scope: !6739)
!6755 = !DILocation(line: 879, column: 23, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6757, file: !982, line: 879, column: 9)
!6757 = distinct !DILexicalBlock(scope: !6739, file: !982, line: 879, column: 9)
!6758 = !DILocation(line: 879, column: 9, scope: !6757)
!6759 = !DILocation(line: 880, column: 17, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6761, file: !982, line: 880, column: 17)
!6761 = distinct !DILexicalBlock(scope: !6756, file: !982, line: 879, column: 68)
!6762 = !DILocation(line: 880, column: 30, scope: !6760)
!6763 = !DILocation(line: 880, column: 27, scope: !6760)
!6764 = !DILocation(line: 879, column: 64, scope: !6756)
!6765 = !DILocation(line: 880, column: 17, scope: !6761)
!6766 = distinct !{!6766, !6758, !6767}
!6767 = !DILocation(line: 883, column: 9, scope: !6757)
!6768 = !DILocation(line: 884, column: 47, scope: !6744)
!6769 = !DILocation(line: 895, column: 23, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6771, file: !982, line: 895, column: 9)
!6771 = distinct !DILexicalBlock(scope: !6747, file: !982, line: 895, column: 9)
!6772 = !DILocation(line: 895, column: 9, scope: !6771)
!6773 = !DILocation(line: 885, column: 28, scope: !6743)
!6774 = !DILocation(line: 0, scope: !6743)
!6775 = !DILocation(line: 886, column: 26, scope: !6743)
!6776 = !DILocation(line: 887, column: 23, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6778, file: !982, line: 887, column: 9)
!6778 = distinct !DILexicalBlock(scope: !6743, file: !982, line: 887, column: 9)
!6779 = !DILocation(line: 887, column: 9, scope: !6778)
!6780 = !DILocation(line: 888, column: 17, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6782, file: !982, line: 888, column: 17)
!6782 = distinct !DILexicalBlock(scope: !6777, file: !982, line: 887, column: 68)
!6783 = !DILocation(line: 888, column: 30, scope: !6781)
!6784 = !DILocation(line: 888, column: 27, scope: !6781)
!6785 = !DILocation(line: 887, column: 64, scope: !6777)
!6786 = !DILocation(line: 888, column: 17, scope: !6782)
!6787 = distinct !{!6787, !6779, !6788}
!6788 = !DILocation(line: 891, column: 9, scope: !6778)
!6789 = !DILocation(line: 896, column: 17, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6791, file: !982, line: 896, column: 17)
!6791 = distinct !DILexicalBlock(scope: !6770, file: !982, line: 895, column: 38)
!6792 = !DILocation(line: 896, column: 30, scope: !6790)
!6793 = !DILocation(line: 896, column: 27, scope: !6790)
!6794 = !DILocation(line: 895, column: 34, scope: !6770)
!6795 = !DILocation(line: 896, column: 17, scope: !6791)
!6796 = distinct !{!6796, !6772, !6797}
!6797 = !DILocation(line: 899, column: 9, scope: !6771)
!6798 = !DILocation(line: 902, column: 1, scope: !6730)
!6799 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !982, file: !982, line: 919, type: !6800, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6802)
!6800 = !DISubroutineType(types: !6801)
!6801 = !{null, !194, !194, !175}
!6802 = !{!6803, !6804, !6805, !6806, !6807, !6808, !6809, !6810, !6811, !6812, !6813}
!6803 = !DILocalVariable(name: "Target", arg: 1, scope: !6799, file: !982, line: 919, type: !194)
!6804 = !DILocalVariable(name: "Data", arg: 2, scope: !6799, file: !982, line: 919, type: !194)
!6805 = !DILocalVariable(name: "Size", arg: 3, scope: !6799, file: !982, line: 919, type: !175)
!6806 = !DILocalVariable(name: "D", scope: !6799, file: !982, line: 921, type: !1152)
!6807 = !DILocalVariable(name: "address", scope: !6799, file: !982, line: 922, type: !175)
!6808 = !DILocalVariable(name: "p_data", scope: !6799, file: !982, line: 923, type: !680)
!6809 = !DILocalVariable(name: "cmd1", scope: !6799, file: !982, line: 924, type: !175)
!6810 = !DILocalVariable(name: "length", scope: !6799, file: !982, line: 924, type: !175)
!6811 = !DILocalVariable(name: "written", scope: !6799, file: !982, line: 924, type: !175)
!6812 = !DILocalVariable(name: "status", scope: !6799, file: !982, line: 925, type: !1204)
!6813 = !DILocalVariable(name: "savedMask", scope: !6799, file: !982, line: 926, type: !175)
!6814 = !DILocation(line: 0, scope: !6799)
!6815 = !DILocation(line: 921, column: 60, scope: !6799)
!6816 = !DILocation(line: 923, column: 5, scope: !6799)
!6817 = !DILocation(line: 923, column: 19, scope: !6799)
!6818 = !DILocation(line: 924, column: 5, scope: !6799)
!6819 = !DILocation(line: 932, column: 9, scope: !6799)
!6820 = !DILocation(line: 933, column: 8, scope: !6799)
!6821 = !DILocation(line: 933, column: 21, scope: !6799)
!6822 = !DILocation(line: 935, column: 14, scope: !6799)
!6823 = !DILocation(line: 935, column: 5, scope: !6799)
!6824 = !DILocation(line: 922, column: 29, scope: !6799)
!6825 = !DILocation(line: 937, column: 18, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6799, file: !982, line: 935, column: 23)
!6827 = !DILocation(line: 937, column: 35, scope: !6826)
!6828 = !DILocation(line: 937, column: 74, scope: !6826)
!6829 = !DILocation(line: 937, column: 50, scope: !6826)
!6830 = !DILocation(line: 937, column: 39, scope: !6826)
!6831 = !DILocation(line: 940, column: 35, scope: !6826)
!6832 = !DILocation(line: 940, column: 29, scope: !6826)
!6833 = !DILocation(line: 940, column: 16, scope: !6826)
!6834 = !DILocation(line: 942, column: 18, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6826, file: !982, line: 942, column: 13)
!6836 = !DILocation(line: 942, column: 29, scope: !6835)
!6837 = !DILocation(line: 942, column: 13, scope: !6826)
!6838 = !DILocation(line: 943, column: 13, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6835, file: !982, line: 942, column: 55)
!6840 = !DILocation(line: 944, column: 9, scope: !6839)
!6841 = !DILocation(line: 947, column: 16, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6826, file: !982, line: 947, column: 13)
!6843 = !DILocation(line: 947, column: 29, scope: !6842)
!6844 = !DILocation(line: 0, scope: !6842)
!6845 = !DILocation(line: 947, column: 13, scope: !6826)
!6846 = !DILocation(line: 948, column: 20, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6842, file: !982, line: 947, column: 35)
!6848 = !DILocation(line: 949, column: 32, scope: !6847)
!6849 = !DILocation(line: 949, column: 40, scope: !6847)
!6850 = !DILocation(line: 949, column: 13, scope: !6847)
!6851 = !DILocation(line: 950, column: 9, scope: !6847)
!6852 = !DILocation(line: 953, column: 20, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6842, file: !982, line: 952, column: 9)
!6854 = !DILocation(line: 954, column: 32, scope: !6853)
!6855 = !DILocation(line: 954, column: 40, scope: !6853)
!6856 = !DILocation(line: 954, column: 13, scope: !6853)
!6857 = !DILocation(line: 957, column: 21, scope: !6826)
!6858 = !DILocation(line: 963, column: 45, scope: !6826)
!6859 = !DILocation(line: 963, column: 42, scope: !6826)
!6860 = !DILocation(line: 963, column: 40, scope: !6826)
!6861 = !DILocation(line: 963, column: 58, scope: !6826)
!6862 = !DILocation(line: 963, column: 29, scope: !6826)
!6863 = !DILocation(line: 964, column: 28, scope: !6826)
!6864 = !DILocation(line: 965, column: 37, scope: !6826)
!6865 = !DILocation(line: 966, column: 9, scope: !6826)
!6866 = !DILocation(line: 967, column: 26, scope: !6826)
!6867 = !DILocation(line: 967, column: 9, scope: !6826)
!6868 = !DILocation(line: 968, column: 29, scope: !6826)
!6869 = !DILocation(line: 968, column: 9, scope: !6826)
!6870 = !DILocation(line: 972, column: 9, scope: !6826)
!6871 = !DILocation(line: 978, column: 9, scope: !6826)
!6872 = !DILocation(line: 979, column: 50, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6826, file: !982, line: 978, column: 22)
!6874 = !DILocation(line: 979, column: 55, scope: !6873)
!6875 = !DILocation(line: 979, column: 22, scope: !6873)
!6876 = !DILocation(line: 980, column: 35, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6873, file: !982, line: 980, column: 17)
!6878 = !DILocation(line: 980, column: 32, scope: !6877)
!6879 = !DILocation(line: 980, column: 30, scope: !6877)
!6880 = !DILocation(line: 980, column: 19, scope: !6877)
!6881 = !DILocation(line: 980, column: 17, scope: !6873)
!6882 = distinct !{!6882, !6871, !6883}
!6883 = !DILocation(line: 983, column: 9, scope: !6826)
!6884 = !DILocation(line: 991, column: 9, scope: !6826)
!6885 = !DILocation(line: 993, column: 19, scope: !6826)
!6886 = !DILocation(line: 993, column: 16, scope: !6826)
!6887 = !DILocation(line: 994, column: 14, scope: !6826)
!6888 = !DILocation(line: 995, column: 17, scope: !6826)
!6889 = distinct !{!6889, !6823, !6890}
!6890 = !DILocation(line: 996, column: 5, scope: !6799)
!6891 = !DILocation(line: 998, column: 21, scope: !6799)
!6892 = !DILocation(line: 1005, column: 9, scope: !6799)
!6893 = !DILocation(line: 1008, column: 1, scope: !6799)
!6894 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !982, file: !982, line: 1427, type: !6895, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6897)
!6895 = !DISubroutineType(types: !6896)
!6896 = !{null, !1152}
!6897 = !{!6898, !6899}
!6898 = !DILocalVariable(name: "D", arg: 1, scope: !6894, file: !982, line: 1427, type: !1152)
!6899 = !DILocalVariable(name: "Result", scope: !6894, file: !982, line: 1429, type: !1820)
!6900 = !DILocation(line: 0, scope: !6894)
!6901 = !DILocation(line: 1430, column: 5, scope: !6894)
!6902 = !DILocation(line: 1431, column: 18, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6894, file: !982, line: 1430, column: 8)
!6904 = !DILocation(line: 1432, column: 21, scope: !6894)
!6905 = !DILocation(line: 1432, column: 5, scope: !6903)
!6906 = distinct !{!6906, !6901, !6907}
!6907 = !DILocation(line: 1432, column: 43, scope: !6894)
!6908 = !DILocation(line: 1433, column: 1, scope: !6894)
!6909 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !982, file: !982, line: 3478, type: !6895, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6910)
!6910 = !{!6911}
!6911 = !DILocalVariable(name: "D", arg: 1, scope: !6909, file: !982, line: 3478, type: !1152)
!6912 = !DILocation(line: 0, scope: !6909)
!6913 = !DILocation(line: 3480, column: 30, scope: !6909)
!6914 = !DILocation(line: 3480, column: 35, scope: !6909)
!6915 = !DILocation(line: 3480, column: 27, scope: !6909)
!6916 = !DILocation(line: 3480, column: 5, scope: !6909)
!6917 = !DILocation(line: 3481, column: 1, scope: !6909)
!6918 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !982, file: !982, line: 2382, type: !208, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6919)
!6919 = !{!6920}
!6920 = !DILocalVariable(name: "savedMask", scope: !6918, file: !982, line: 2384, type: !175)
!6921 = !DILocation(line: 2385, column: 17, scope: !6918)
!6922 = !DILocation(line: 0, scope: !6918)
!6923 = !DILocation(line: 2390, column: 20, scope: !6918)
!6924 = !DILocation(line: 2391, column: 5, scope: !6918)
!6925 = !DILocation(line: 2392, column: 1, scope: !6918)
!6926 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !982, file: !982, line: 3536, type: !6927, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6929)
!6927 = !DISubroutineType(types: !6928)
!6928 = !{!175, !1152, !378}
!6929 = !{!6930, !6931, !6932, !6933}
!6930 = !DILocalVariable(name: "D", arg: 1, scope: !6926, file: !982, line: 3536, type: !1152)
!6931 = !DILocalVariable(name: "cmd", arg: 2, scope: !6926, file: !982, line: 3536, type: !378)
!6932 = !DILocalVariable(name: "savedMask", scope: !6926, file: !982, line: 3538, type: !175)
!6933 = !DILocalVariable(name: "result", scope: !6926, file: !982, line: 3539, type: !175)
!6934 = !DILocation(line: 0, scope: !6926)
!6935 = !DILocation(line: 3541, column: 17, scope: !6926)
!6936 = !DILocation(line: 3542, column: 22, scope: !6926)
!6937 = !DILocation(line: 3542, column: 5, scope: !6926)
!6938 = !DILocation(line: 3543, column: 35, scope: !6926)
!6939 = !DILocation(line: 3543, column: 33, scope: !6926)
!6940 = !DILocation(line: 3544, column: 25, scope: !6926)
!6941 = !DILocation(line: 3545, column: 24, scope: !6926)
!6942 = !DILocation(line: 3546, column: 25, scope: !6926)
!6943 = !DILocation(line: 3546, column: 5, scope: !6926)
!6944 = !DILocation(line: 3547, column: 42, scope: !6926)
!6945 = !DILocation(line: 3547, column: 60, scope: !6926)
!6946 = !DILocation(line: 3547, column: 14, scope: !6926)
!6947 = !DILocation(line: 3548, column: 5, scope: !6926)
!6948 = !DILocation(line: 3550, column: 5, scope: !6926)
!6949 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !982, file: !982, line: 2393, type: !208, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6950)
!6950 = !{!6951}
!6951 = !DILocalVariable(name: "savedMask", scope: !6949, file: !982, line: 2395, type: !175)
!6952 = !DILocation(line: 2396, column: 17, scope: !6949)
!6953 = !DILocation(line: 0, scope: !6949)
!6954 = !DILocation(line: 2401, column: 20, scope: !6949)
!6955 = !DILocation(line: 2402, column: 5, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6957, file: !982, line: 2402, column: 5)
!6957 = distinct !DILexicalBlock(scope: !6949, file: !982, line: 2402, column: 5)
!6958 = !DILocation(line: 2403, column: 5, scope: !6949)
!6959 = !DILocation(line: 2404, column: 1, scope: !6949)
!6960 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !982, file: !982, line: 1440, type: !6895, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6961)
!6961 = !{!6962, !6963}
!6962 = !DILocalVariable(name: "D", arg: 1, scope: !6960, file: !982, line: 1440, type: !1152)
!6963 = !DILocalVariable(name: "savedMask", scope: !6960, file: !982, line: 1442, type: !858)
!6964 = !DILocation(line: 0, scope: !6960)
!6965 = !DILocation(line: 1443, column: 17, scope: !6960)
!6966 = !DILocation(line: 1444, column: 9, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6960, file: !982, line: 1444, column: 9)
!6968 = !DILocation(line: 1444, column: 9, scope: !6960)
!6969 = !DILocation(line: 1445, column: 17, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6967, file: !982, line: 1444, column: 24)
!6971 = !DILocation(line: 1446, column: 9, scope: !6970)
!6972 = !DILocation(line: 1451, column: 1, scope: !6960)
!6973 = !DILocation(line: 1448, column: 9, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6967, file: !982, line: 1447, column: 12)
!6975 = !DILocation(line: 1449, column: 9, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6977, file: !982, line: 1449, column: 9)
!6977 = distinct !DILexicalBlock(scope: !6978, file: !982, line: 1449, column: 9)
!6978 = distinct !DILexicalBlock(scope: !6974, file: !982, line: 1449, column: 9)
!6979 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !982, file: !982, line: 1027, type: !208, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !6980)
!6980 = !{!6981, !6982, !6983, !6984}
!6981 = !DILocalVariable(name: "D", scope: !6979, file: !982, line: 1029, type: !1152)
!6982 = !DILocalVariable(name: "status", scope: !6979, file: !982, line: 1030, type: !1204)
!6983 = !DILocalVariable(name: "savedMask", scope: !6979, file: !982, line: 1031, type: !175)
!6984 = !DILocalVariable(name: "duration", scope: !6985, file: !982, line: 1231, type: !175)
!6985 = distinct !DILexicalBlock(scope: !6979, file: !982, line: 1230, column: 5)
!6986 = !DILocation(line: 0, scope: !6979)
!6987 = !DILocation(line: 1033, column: 17, scope: !6979)
!6988 = !DILocation(line: 1034, column: 8, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6979, file: !982, line: 1034, column: 8)
!6990 = !DILocation(line: 1034, column: 30, scope: !6989)
!6991 = !DILocation(line: 1034, column: 8, scope: !6979)
!6992 = !DILocation(line: 1039, column: 27, scope: !6979)
!6993 = !DILocation(line: 1058, column: 48, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6979, file: !982, line: 1055, column: 5)
!6995 = !DILocation(line: 1069, column: 5, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6997, file: !982, line: 1069, column: 5)
!6997 = distinct !DILexicalBlock(scope: !6979, file: !982, line: 1069, column: 5)
!6998 = !DILocation(line: 1069, column: 5, scope: !6997)
!6999 = !DILocation(line: 1069, column: 5, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6996, file: !982, line: 1069, column: 5)
!7001 = !DILocation(line: 1075, column: 10, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6979, file: !982, line: 1075, column: 9)
!7003 = !DILocation(line: 1075, column: 27, scope: !7002)
!7004 = !DILocation(line: 1075, column: 33, scope: !7002)
!7005 = !DILocation(line: 1075, column: 40, scope: !7002)
!7006 = !DILocation(line: 1075, column: 53, scope: !7002)
!7007 = !DILocation(line: 1075, column: 9, scope: !6979)
!7008 = !DILocation(line: 1084, column: 9, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7002, file: !982, line: 1083, column: 11)
!7010 = !DILocation(line: 1085, column: 50, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !7009, file: !982, line: 1084, column: 21)
!7012 = !DILocation(line: 1085, column: 55, scope: !7011)
!7013 = !DILocation(line: 1085, column: 22, scope: !7011)
!7014 = !DILocation(line: 1086, column: 35, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7011, file: !982, line: 1086, column: 17)
!7016 = !DILocation(line: 1086, column: 32, scope: !7015)
!7017 = !DILocation(line: 1086, column: 30, scope: !7015)
!7018 = !DILocation(line: 1086, column: 19, scope: !7015)
!7019 = !DILocation(line: 1086, column: 17, scope: !7011)
!7020 = distinct !{!7020, !7008, !7021}
!7021 = !DILocation(line: 1089, column: 9, scope: !7009)
!7022 = !DILocation(line: 1107, column: 11, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !6979, file: !982, line: 1107, column: 9)
!7024 = !DILocation(line: 1107, column: 30, scope: !7023)
!7025 = !DILocation(line: 1117, column: 46, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7023, file: !982, line: 1107, column: 53)
!7027 = !DILocation(line: 1117, column: 51, scope: !7026)
!7028 = !DILocation(line: 1117, column: 18, scope: !7026)
!7029 = !DILocation(line: 1120, column: 31, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7026, file: !982, line: 1120, column: 13)
!7031 = !DILocation(line: 1120, column: 28, scope: !7030)
!7032 = !DILocation(line: 1120, column: 26, scope: !7030)
!7033 = !DILocation(line: 1120, column: 15, scope: !7030)
!7034 = !DILocation(line: 1120, column: 13, scope: !7026)
!7035 = !DILocation(line: 1128, column: 13, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7030, file: !982, line: 1120, column: 55)
!7037 = !DILocation(line: 1131, column: 13, scope: !7036)
!7038 = !DILocation(line: 1132, column: 54, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7036, file: !982, line: 1131, column: 23)
!7040 = !DILocation(line: 1132, column: 59, scope: !7039)
!7041 = !DILocation(line: 1132, column: 26, scope: !7039)
!7042 = !DILocation(line: 1133, column: 39, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7039, file: !982, line: 1133, column: 21)
!7044 = !DILocation(line: 1133, column: 36, scope: !7043)
!7045 = !DILocation(line: 1133, column: 34, scope: !7043)
!7046 = !DILocation(line: 1133, column: 23, scope: !7043)
!7047 = !DILocation(line: 1133, column: 21, scope: !7039)
!7048 = distinct !{!7048, !7037, !7049}
!7049 = !DILocation(line: 1158, column: 13, scope: !7036)
!7050 = !DILocation(line: 1162, column: 21, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7036, file: !982, line: 1162, column: 17)
!7052 = !DILocation(line: 1162, column: 32, scope: !7051)
!7053 = !DILocation(line: 1162, column: 51, scope: !7051)
!7054 = !DILocation(line: 1162, column: 58, scope: !7051)
!7055 = !DILocation(line: 1162, column: 71, scope: !7051)
!7056 = !DILocation(line: 1162, column: 17, scope: !7036)
!7057 = !DILocation(line: 1164, column: 45, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7051, file: !982, line: 1162, column: 91)
!7059 = !DILocation(line: 1165, column: 36, scope: !7058)
!7060 = !DILocation(line: 1166, column: 37, scope: !7058)
!7061 = !DILocation(line: 1167, column: 34, scope: !7058)
!7062 = !DILocation(line: 1167, column: 17, scope: !7058)
!7063 = !DILocation(line: 1168, column: 37, scope: !7058)
!7064 = !DILocation(line: 1168, column: 17, scope: !7058)
!7065 = !DILocation(line: 1171, column: 50, scope: !7058)
!7066 = !DILocation(line: 1172, column: 37, scope: !7058)
!7067 = !DILocation(line: 1173, column: 45, scope: !7058)
!7068 = !DILocation(line: 1174, column: 34, scope: !7058)
!7069 = !DILocation(line: 1174, column: 17, scope: !7058)
!7070 = !DILocation(line: 1175, column: 37, scope: !7058)
!7071 = !DILocation(line: 1175, column: 17, scope: !7058)
!7072 = !DILocation(line: 1178, column: 17, scope: !7058)
!7073 = !DILocation(line: 1179, column: 49, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7058, file: !982, line: 1178, column: 20)
!7075 = !DILocation(line: 1180, column: 40, scope: !7074)
!7076 = !DILocation(line: 1181, column: 41, scope: !7074)
!7077 = !DILocation(line: 1182, column: 38, scope: !7074)
!7078 = !DILocation(line: 1182, column: 21, scope: !7074)
!7079 = !DILocation(line: 1183, column: 41, scope: !7074)
!7080 = !DILocation(line: 1183, column: 21, scope: !7074)
!7081 = !DILocation(line: 1184, column: 43, scope: !7074)
!7082 = !DILocation(line: 1185, column: 17, scope: !7074)
!7083 = distinct !{!7083, !7072, !7084}
!7084 = !DILocation(line: 1185, column: 32, scope: !7058)
!7085 = !DILocation(line: 1194, column: 13, scope: !7036)
!7086 = !DILocation(line: 1195, column: 9, scope: !7036)
!7087 = !DILocation(line: 1197, column: 21, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7089, file: !982, line: 1197, column: 17)
!7089 = distinct !DILexicalBlock(scope: !7030, file: !982, line: 1195, column: 16)
!7090 = !DILocation(line: 1197, column: 32, scope: !7088)
!7091 = !DILocation(line: 1197, column: 53, scope: !7088)
!7092 = !DILocation(line: 1197, column: 60, scope: !7088)
!7093 = !DILocation(line: 1197, column: 76, scope: !7088)
!7094 = !DILocation(line: 1197, column: 17, scope: !7089)
!7095 = !DILocation(line: 1198, column: 54, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7088, file: !982, line: 1197, column: 98)
!7097 = !DILocation(line: 1198, column: 59, scope: !7096)
!7098 = !DILocation(line: 1198, column: 26, scope: !7096)
!7099 = !DILocation(line: 1199, column: 40, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7096, file: !982, line: 1199, column: 21)
!7101 = !DILocation(line: 1199, column: 37, scope: !7100)
!7102 = !DILocation(line: 1199, column: 35, scope: !7100)
!7103 = !DILocation(line: 1199, column: 24, scope: !7100)
!7104 = !DILocation(line: 1199, column: 63, scope: !7100)
!7105 = !DILocation(line: 1200, column: 41, scope: !7100)
!7106 = !DILocation(line: 1200, column: 39, scope: !7100)
!7107 = !DILocation(line: 1200, column: 28, scope: !7100)
!7108 = !DILocation(line: 1199, column: 21, scope: !7096)
!7109 = !DILocation(line: 1201, column: 40, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7100, file: !982, line: 1200, column: 68)
!7111 = !DILocation(line: 1201, column: 21, scope: !7110)
!7112 = !DILocation(line: 1202, column: 40, scope: !7110)
!7113 = !DILocation(line: 1202, column: 21, scope: !7110)
!7114 = !DILocation(line: 1203, column: 17, scope: !7110)
!7115 = !DILocation(line: 1206, column: 13, scope: !7089)
!7116 = !DILocation(line: 1228, column: 25, scope: !6979)
!7117 = !DILocation(line: 1231, column: 29, scope: !6985)
!7118 = !DILocation(line: 0, scope: !6985)
!7119 = !DILocation(line: 1232, column: 13, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !6985, file: !982, line: 1232, column: 13)
!7121 = !DILocation(line: 1232, column: 43, scope: !7120)
!7122 = !DILocation(line: 1232, column: 13, scope: !6985)
!7123 = !DILocation(line: 1233, column: 43, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7120, file: !982, line: 1232, column: 55)
!7125 = !DILocation(line: 1234, column: 9, scope: !7124)
!7126 = !DILocation(line: 1237, column: 5, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7128, file: !982, line: 1237, column: 5)
!7128 = distinct !DILexicalBlock(scope: !6979, file: !982, line: 1237, column: 5)
!7129 = !DILocation(line: 1240, column: 5, scope: !6979)
!7130 = !DILocation(line: 1241, column: 1, scope: !6979)
!7131 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !982, file: !982, line: 3421, type: !6895, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7132)
!7132 = !{!7133, !7134, !7135, !7136}
!7133 = !DILocalVariable(name: "D", arg: 1, scope: !7131, file: !982, line: 3421, type: !1152)
!7134 = !DILocalVariable(name: "savedMask", scope: !7131, file: !982, line: 3423, type: !175)
!7135 = !DILocalVariable(name: "currtime", scope: !7131, file: !982, line: 3424, type: !175)
!7136 = !DILocalVariable(name: "difftime", scope: !7131, file: !982, line: 3424, type: !175)
!7137 = !DILocation(line: 0, scope: !7131)
!7138 = !DILocation(line: 3427, column: 9, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7131, file: !982, line: 3427, column: 9)
!7140 = !DILocation(line: 3427, column: 28, scope: !7139)
!7141 = !DILocation(line: 3427, column: 9, scope: !7131)
!7142 = !DILocation(line: 3429, column: 20, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7139, file: !982, line: 3427, column: 59)
!7144 = !DILocation(line: 3430, column: 27, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7143, file: !982, line: 3430, column: 13)
!7146 = !DILocation(line: 3430, column: 24, scope: !7145)
!7147 = !DILocation(line: 3430, column: 22, scope: !7145)
!7148 = !DILocation(line: 3430, column: 13, scope: !7143)
!7149 = !DILocation(line: 3431, column: 47, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7145, file: !982, line: 3430, column: 46)
!7151 = !DILocation(line: 3431, column: 13, scope: !7150)
!7152 = !DILocation(line: 3432, column: 9, scope: !7150)
!7153 = !DILocation(line: 3435, column: 17, scope: !7131)
!7154 = !DILocation(line: 3436, column: 24, scope: !7131)
!7155 = !DILocation(line: 3436, column: 31, scope: !7131)
!7156 = !DILocation(line: 3436, column: 36, scope: !7131)
!7157 = !DILocation(line: 3436, column: 28, scope: !7131)
!7158 = !DILocation(line: 3436, column: 5, scope: !7131)
!7159 = !DILocation(line: 3442, column: 5, scope: !7131)
!7160 = !DILocation(line: 3443, column: 1, scope: !7131)
!7161 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !982, file: !982, line: 2405, type: !208, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7162)
!7162 = !{!7163}
!7163 = !DILocalVariable(name: "savedMask", scope: !7161, file: !982, line: 2407, type: !175)
!7164 = !DILocation(line: 2408, column: 17, scope: !7161)
!7165 = !DILocation(line: 0, scope: !7161)
!7166 = !DILocation(line: 2413, column: 25, scope: !7161)
!7167 = !DILocation(line: 2414, column: 5, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7169, file: !982, line: 2414, column: 5)
!7169 = distinct !DILexicalBlock(scope: !7161, file: !982, line: 2414, column: 5)
!7170 = !DILocation(line: 2415, column: 5, scope: !7161)
!7171 = !DILocation(line: 2416, column: 1, scope: !7161)
!7172 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !982, file: !982, line: 3561, type: !7173, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7175)
!7173 = !DISubroutineType(types: !7174)
!7174 = !{null, !1152, !690, !378}
!7175 = !{!7176, !7177, !7178, !7179}
!7176 = !DILocalVariable(name: "D", arg: 1, scope: !7172, file: !982, line: 3561, type: !1152)
!7177 = !DILocalVariable(name: "cmd", arg: 2, scope: !7172, file: !982, line: 3561, type: !690)
!7178 = !DILocalVariable(name: "outlen", arg: 3, scope: !7172, file: !982, line: 3561, type: !378)
!7179 = !DILocalVariable(name: "savedMask", scope: !7172, file: !982, line: 3563, type: !175)
!7180 = !DILocation(line: 0, scope: !7172)
!7181 = !DILocation(line: 3565, column: 17, scope: !7172)
!7182 = !DILocation(line: 3566, column: 22, scope: !7172)
!7183 = !DILocation(line: 3566, column: 5, scope: !7172)
!7184 = !DILocation(line: 3567, column: 33, scope: !7172)
!7185 = !DILocation(line: 3568, column: 27, scope: !7172)
!7186 = !DILocation(line: 3568, column: 25, scope: !7172)
!7187 = !DILocation(line: 3569, column: 24, scope: !7172)
!7188 = !DILocation(line: 3570, column: 25, scope: !7172)
!7189 = !DILocation(line: 3570, column: 5, scope: !7172)
!7190 = !DILocation(line: 3571, column: 5, scope: !7172)
!7191 = !DILocation(line: 3573, column: 1, scope: !7172)
!7192 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !982, file: !982, line: 1410, type: !7193, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7195)
!7193 = !DISubroutineType(types: !7194)
!7194 = !{!1820}
!7195 = !{!7196}
!7196 = !DILocalVariable(name: "savedMask", scope: !7192, file: !982, line: 1412, type: !858)
!7197 = !DILocation(line: 1413, column: 17, scope: !7192)
!7198 = !DILocation(line: 0, scope: !7192)
!7199 = !DILocation(line: 1414, column: 9, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7192, file: !982, line: 1414, column: 9)
!7201 = !DILocation(line: 1414, column: 9, scope: !7192)
!7202 = !DILocation(line: 1415, column: 17, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7200, file: !982, line: 1414, column: 24)
!7204 = !DILocation(line: 1417, column: 9, scope: !7203)
!7205 = !DILocation(line: 0, scope: !7200)
!7206 = !DILocation(line: 1425, column: 1, scope: !7192)
!7207 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !982, file: !982, line: 1257, type: !7208, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7210)
!7208 = !DISubroutineType(types: !7209)
!7209 = !{!211}
!7210 = !{!7211, !7212, !7213}
!7211 = !DILocalVariable(name: "D", scope: !7207, file: !982, line: 1259, type: !1152)
!7212 = !DILocalVariable(name: "status", scope: !7207, file: !982, line: 1260, type: !1204)
!7213 = !DILocalVariable(name: "result", scope: !7207, file: !982, line: 1261, type: !211)
!7214 = !DILocation(line: 1259, column: 57, scope: !7207)
!7215 = !DILocation(line: 0, scope: !7207)
!7216 = !DILocation(line: 1263, column: 5, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7218, file: !982, line: 1263, column: 5)
!7218 = distinct !DILexicalBlock(scope: !7207, file: !982, line: 1263, column: 5)
!7219 = !DILocation(line: 1263, column: 5, scope: !7218)
!7220 = !DILocation(line: 1263, column: 5, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7217, file: !982, line: 1263, column: 5)
!7222 = !DILocation(line: 1265, column: 5, scope: !7207)
!7223 = !DILocation(line: 1267, column: 42, scope: !7207)
!7224 = !DILocation(line: 1267, column: 47, scope: !7207)
!7225 = !DILocation(line: 1267, column: 14, scope: !7207)
!7226 = !DILocation(line: 1269, column: 27, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7207, file: !982, line: 1269, column: 9)
!7228 = !DILocation(line: 1269, column: 24, scope: !7227)
!7229 = !DILocation(line: 1269, column: 22, scope: !7227)
!7230 = !DILocation(line: 1269, column: 11, scope: !7227)
!7231 = !DILocation(line: 1269, column: 9, scope: !7207)
!7232 = !DILocation(line: 1270, column: 9, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7227, file: !982, line: 1269, column: 51)
!7234 = !DILocation(line: 1272, column: 5, scope: !7233)
!7235 = !DILocation(line: 1274, column: 5, scope: !7207)
!7236 = !DILocation(line: 1276, column: 5, scope: !7207)
!7237 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !982, file: !982, line: 1289, type: !208, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7238)
!7238 = !{!7239}
!7239 = !DILocalVariable(name: "D", scope: !7237, file: !982, line: 1291, type: !1152)
!7240 = !DILocation(line: 0, scope: !7237)
!7241 = !DILocation(line: 1293, column: 5, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7243, file: !982, line: 1293, column: 5)
!7243 = distinct !DILexicalBlock(scope: !7237, file: !982, line: 1293, column: 5)
!7244 = !DILocation(line: 1293, column: 5, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7242, file: !982, line: 1293, column: 5)
!7246 = !DILocation(line: 1293, column: 5, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7248, file: !982, line: 1293, column: 5)
!7248 = distinct !DILexicalBlock(scope: !7249, file: !982, line: 1293, column: 5)
!7249 = distinct !DILexicalBlock(scope: !7245, file: !982, line: 1293, column: 5)
!7250 = !DILocation(line: 1291, column: 60, scope: !7237)
!7251 = !DILocation(line: 1295, column: 5, scope: !7237)
!7252 = !DILocation(line: 1296, column: 1, scope: !7237)
!7253 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !982, file: !982, line: 3452, type: !6895, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7254)
!7254 = !{!7255, !7256}
!7255 = !DILocalVariable(name: "D", arg: 1, scope: !7253, file: !982, line: 3452, type: !1152)
!7256 = !DILocalVariable(name: "savedMask", scope: !7253, file: !982, line: 3454, type: !175)
!7257 = !DILocation(line: 0, scope: !7253)
!7258 = !DILocation(line: 3456, column: 17, scope: !7253)
!7259 = !DILocation(line: 3462, column: 24, scope: !7253)
!7260 = !DILocation(line: 3462, column: 31, scope: !7253)
!7261 = !DILocation(line: 3462, column: 36, scope: !7253)
!7262 = !DILocation(line: 3462, column: 28, scope: !7253)
!7263 = !DILocation(line: 3462, column: 5, scope: !7253)
!7264 = !DILocation(line: 3463, column: 12, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7253, file: !982, line: 3463, column: 9)
!7266 = !DILocation(line: 3463, column: 27, scope: !7265)
!7267 = !DILocation(line: 3463, column: 9, scope: !7253)
!7268 = !DILocation(line: 3464, column: 28, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7265, file: !982, line: 3463, column: 33)
!7270 = !DILocation(line: 3465, column: 5, scope: !7269)
!7271 = !DILocation(line: 3467, column: 5, scope: !7253)
!7272 = !DILocation(line: 3468, column: 5, scope: !7253)
!7273 = !DILocation(line: 3469, column: 1, scope: !7253)
!7274 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !982, file: !982, line: 2417, type: !208, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7275)
!7275 = !{!7276}
!7276 = !DILocalVariable(name: "savedMask", scope: !7274, file: !982, line: 2419, type: !175)
!7277 = !DILocation(line: 2420, column: 17, scope: !7274)
!7278 = !DILocation(line: 0, scope: !7274)
!7279 = !DILocation(line: 2425, column: 25, scope: !7274)
!7280 = !DILocation(line: 2426, column: 5, scope: !7274)
!7281 = !DILocation(line: 2427, column: 1, scope: !7274)
!7282 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !982, file: !982, line: 1308, type: !208, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7283)
!7283 = !{!7284, !7285}
!7284 = !DILocalVariable(name: "D", scope: !7282, file: !982, line: 1310, type: !1152)
!7285 = !DILocalVariable(name: "status", scope: !7282, file: !982, line: 1311, type: !1204)
!7286 = !DILocation(line: 1310, column: 60, scope: !7282)
!7287 = !DILocation(line: 0, scope: !7282)
!7288 = !DILocation(line: 1313, column: 5, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7290, file: !982, line: 1313, column: 5)
!7290 = distinct !DILexicalBlock(scope: !7282, file: !982, line: 1313, column: 5)
!7291 = !DILocation(line: 1313, column: 5, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7289, file: !982, line: 1313, column: 5)
!7293 = !DILocation(line: 1313, column: 5, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7295, file: !982, line: 1313, column: 5)
!7295 = distinct !DILexicalBlock(scope: !7296, file: !982, line: 1313, column: 5)
!7296 = distinct !DILexicalBlock(scope: !7292, file: !982, line: 1313, column: 5)
!7297 = !DILocation(line: 1315, column: 5, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7299, file: !982, line: 1315, column: 5)
!7299 = distinct !DILexicalBlock(scope: !7282, file: !982, line: 1315, column: 5)
!7300 = !DILocation(line: 1315, column: 5, scope: !7299)
!7301 = !DILocation(line: 1315, column: 5, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7298, file: !982, line: 1315, column: 5)
!7303 = !DILocation(line: 1317, column: 5, scope: !7282)
!7304 = !DILocation(line: 1319, column: 5, scope: !7282)
!7305 = !DILocation(line: 1320, column: 46, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7282, file: !982, line: 1319, column: 15)
!7307 = !DILocation(line: 1320, column: 51, scope: !7306)
!7308 = !DILocation(line: 1320, column: 18, scope: !7306)
!7309 = !DILocation(line: 1322, column: 31, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7306, file: !982, line: 1322, column: 13)
!7311 = !DILocation(line: 1322, column: 28, scope: !7310)
!7312 = !DILocation(line: 1322, column: 26, scope: !7310)
!7313 = !DILocation(line: 1322, column: 15, scope: !7310)
!7314 = !DILocation(line: 1322, column: 13, scope: !7306)
!7315 = distinct !{!7315, !7304, !7316}
!7316 = !DILocation(line: 1325, column: 5, scope: !7282)
!7317 = !DILocation(line: 1327, column: 5, scope: !7282)
!7318 = !DILocation(line: 1328, column: 1, scope: !7282)
!7319 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !982, file: !982, line: 1394, type: !6895, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7320)
!7320 = !{!7321}
!7321 = !DILocalVariable(name: "D", arg: 1, scope: !7319, file: !982, line: 1394, type: !1152)
!7322 = !DILocation(line: 0, scope: !7319)
!7323 = !DILocation(line: 1401, column: 1, scope: !7319)
!7324 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !982, file: !982, line: 1556, type: !7325, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7346)
!7325 = !DISubroutineType(types: !7326)
!7326 = !{!858, !7327, !1152}
!7327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7328, size: 32)
!7328 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1178, line: 121, baseType: !7329)
!7329 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 105, size: 480, elements: !7330)
!7330 = !{!7331, !7332, !7333, !7334, !7335, !7336, !7337, !7338, !7339, !7340, !7341, !7342, !7343, !7344, !7345}
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !7329, file: !1178, line: 106, baseType: !1452, size: 32)
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !7329, file: !1178, line: 107, baseType: !1253, size: 32, offset: 32)
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !7329, file: !1178, line: 108, baseType: !1457, size: 32, offset: 64)
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !7329, file: !1178, line: 109, baseType: !1461, size: 32, offset: 96)
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !7329, file: !1178, line: 110, baseType: !1465, size: 32, offset: 128)
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !7329, file: !1178, line: 111, baseType: !1461, size: 32, offset: 160)
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !7329, file: !1178, line: 112, baseType: !1470, size: 32, offset: 192)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !7329, file: !1178, line: 113, baseType: !1461, size: 32, offset: 224)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !7329, file: !1178, line: 114, baseType: !1461, size: 32, offset: 256)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !7329, file: !1178, line: 115, baseType: !1461, size: 32, offset: 288)
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !7329, file: !1178, line: 116, baseType: !1477, size: 32, offset: 320)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !7329, file: !1178, line: 117, baseType: !1482, size: 32, offset: 352)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !7329, file: !1178, line: 118, baseType: !1487, size: 32, offset: 384)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !7329, file: !1178, line: 119, baseType: !1491, size: 32, offset: 416)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !7329, file: !1178, line: 120, baseType: !1495, size: 32, offset: 448)
!7346 = !{!7347, !7348, !7349}
!7347 = !DILocalVariable(name: "driver", arg: 1, scope: !7324, file: !982, line: 1556, type: !7327)
!7348 = !DILocalVariable(name: "D", arg: 2, scope: !7324, file: !982, line: 1556, type: !1152)
!7349 = !DILocalVariable(name: "smap", scope: !7324, file: !982, line: 1558, type: !1203)
!7350 = !DILocation(line: 0, scope: !7324)
!7351 = !DILocation(line: 1561, column: 15, scope: !7324)
!7352 = !DILocation(line: 1562, column: 22, scope: !7324)
!7353 = !DILocation(line: 1563, column: 5, scope: !7324)
!7354 = !DILocation(line: 1563, column: 22, scope: !7324)
!7355 = !DILocation(line: 1565, column: 5, scope: !7324)
!7356 = !DILocation(line: 1565, column: 22, scope: !7324)
!7357 = !DILocation(line: 1566, column: 5, scope: !7324)
!7358 = !DILocation(line: 1566, column: 22, scope: !7324)
!7359 = !DILocation(line: 1568, column: 5, scope: !7324)
!7360 = !DILocation(line: 1568, column: 22, scope: !7324)
!7361 = !DILocation(line: 1569, column: 5, scope: !7324)
!7362 = !DILocation(line: 1569, column: 22, scope: !7324)
!7363 = !DILocation(line: 1570, column: 5, scope: !7324)
!7364 = !DILocation(line: 1570, column: 22, scope: !7324)
!7365 = !DILocation(line: 1573, column: 8, scope: !7324)
!7366 = !DILocation(line: 1573, column: 13, scope: !7324)
!7367 = !DILocation(line: 1573, column: 28, scope: !7324)
!7368 = !DILocation(line: 1574, column: 8, scope: !7324)
!7369 = !DILocation(line: 1574, column: 13, scope: !7324)
!7370 = !DILocation(line: 1574, column: 29, scope: !7324)
!7371 = !DILocation(line: 1575, column: 8, scope: !7324)
!7372 = !DILocation(line: 1575, column: 13, scope: !7324)
!7373 = !DILocation(line: 1575, column: 30, scope: !7324)
!7374 = !DILocation(line: 1576, column: 8, scope: !7324)
!7375 = !DILocation(line: 1576, column: 13, scope: !7324)
!7376 = !DILocation(line: 1576, column: 23, scope: !7324)
!7377 = !DILocation(line: 1577, column: 8, scope: !7324)
!7378 = !DILocation(line: 1577, column: 13, scope: !7324)
!7379 = !DILocation(line: 1577, column: 24, scope: !7324)
!7380 = !DILocation(line: 1578, column: 8, scope: !7324)
!7381 = !DILocation(line: 1578, column: 13, scope: !7324)
!7382 = !DILocation(line: 1578, column: 25, scope: !7324)
!7383 = !DILocation(line: 1579, column: 8, scope: !7324)
!7384 = !DILocation(line: 1579, column: 23, scope: !7324)
!7385 = !DILocation(line: 1583, column: 10, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7324, file: !982, line: 1583, column: 9)
!7387 = !DILocation(line: 1583, column: 24, scope: !7386)
!7388 = !DILocation(line: 1583, column: 32, scope: !7386)
!7389 = !DILocation(line: 1583, column: 35, scope: !7386)
!7390 = !DILocation(line: 1583, column: 49, scope: !7386)
!7391 = !DILocation(line: 1583, column: 9, scope: !7324)
!7392 = !DILocation(line: 1586, column: 12, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7386, file: !982, line: 1583, column: 59)
!7394 = !DILocation(line: 1586, column: 17, scope: !7393)
!7395 = !DILocation(line: 1586, column: 25, scope: !7393)
!7396 = !DILocation(line: 1587, column: 12, scope: !7393)
!7397 = !DILocation(line: 1587, column: 17, scope: !7393)
!7398 = !DILocation(line: 1587, column: 24, scope: !7393)
!7399 = !DILocation(line: 1591, column: 10, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7324, file: !982, line: 1591, column: 9)
!7401 = !DILocation(line: 1589, column: 5, scope: !7393)
!7402 = !DILocation(line: 1600, column: 32, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7324, file: !982, line: 1600, column: 9)
!7404 = !DILocation(line: 1600, column: 35, scope: !7403)
!7405 = !DILocation(line: 1600, column: 49, scope: !7403)
!7406 = !DILocation(line: 1600, column: 9, scope: !7324)
!7407 = !DILocation(line: 1601, column: 12, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7403, file: !982, line: 1600, column: 59)
!7409 = !DILocation(line: 1601, column: 17, scope: !7408)
!7410 = !DILocation(line: 1601, column: 25, scope: !7408)
!7411 = !DILocation(line: 1602, column: 12, scope: !7408)
!7412 = !DILocation(line: 1602, column: 17, scope: !7408)
!7413 = !DILocation(line: 1602, column: 24, scope: !7408)
!7414 = !DILocation(line: 1603, column: 5, scope: !7408)
!7415 = !DILocation(line: 1607, column: 8, scope: !7324)
!7416 = !DILocation(line: 1607, column: 20, scope: !7324)
!7417 = !DILocation(line: 1622, column: 5, scope: !7324)
!7418 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !982, file: !982, line: 4553, type: !1254, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7419)
!7419 = !{!7420, !7421, !7422, !7423}
!7420 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7418, file: !982, line: 4553, type: !194)
!7421 = !DILocalVariable(name: "D", scope: !7418, file: !982, line: 4555, type: !1152)
!7422 = !DILocalVariable(name: "unlock", scope: !7418, file: !982, line: 4556, type: !175)
!7423 = !DILocalVariable(name: "cmd", scope: !7418, file: !982, line: 4557, type: !378)
!7424 = !DILocation(line: 0, scope: !7418)
!7425 = !DILocation(line: 4555, column: 24, scope: !7418)
!7426 = !DILocation(line: 4557, column: 5, scope: !7418)
!7427 = !DILocation(line: 4558, column: 12, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7418, file: !982, line: 4558, column: 9)
!7429 = !DILocation(line: 4558, column: 9, scope: !7428)
!7430 = !DILocation(line: 4558, column: 23, scope: !7428)
!7431 = !DILocation(line: 4558, column: 31, scope: !7428)
!7432 = !DILocation(line: 4558, column: 34, scope: !7428)
!7433 = !DILocation(line: 4558, column: 48, scope: !7428)
!7434 = !DILocation(line: 4558, column: 56, scope: !7428)
!7435 = !DILocation(line: 4558, column: 59, scope: !7428)
!7436 = !DILocation(line: 4558, column: 73, scope: !7428)
!7437 = !DILocation(line: 4558, column: 9, scope: !7418)
!7438 = !DILocation(line: 4563, column: 24, scope: !7418)
!7439 = !DILocation(line: 4563, column: 31, scope: !7418)
!7440 = !DILocation(line: 4563, column: 36, scope: !7418)
!7441 = !DILocation(line: 4563, column: 28, scope: !7418)
!7442 = !DILocation(line: 4563, column: 5, scope: !7418)
!7443 = !DILocation(line: 4564, column: 5, scope: !7418)
!7444 = !DILocation(line: 4567, column: 28, scope: !7418)
!7445 = !DILocation(line: 4567, column: 36, scope: !7418)
!7446 = !DILocation(line: 4567, column: 41, scope: !7418)
!7447 = !DILocation(line: 4567, column: 5, scope: !7418)
!7448 = !DILocation(line: 4568, column: 17, scope: !7418)
!7449 = !DILocation(line: 4568, column: 22, scope: !7418)
!7450 = !DILocation(line: 4568, column: 14, scope: !7418)
!7451 = !DILocation(line: 4569, column: 22, scope: !7418)
!7452 = !DILocation(line: 4569, column: 54, scope: !7418)
!7453 = !DILocation(line: 4569, column: 65, scope: !7418)
!7454 = !DILocation(line: 4569, column: 62, scope: !7418)
!7455 = !DILocation(line: 4569, column: 87, scope: !7418)
!7456 = !DILocation(line: 4569, column: 85, scope: !7418)
!7457 = !DILocation(line: 4569, column: 60, scope: !7418)
!7458 = !DILocation(line: 4569, column: 58, scope: !7418)
!7459 = !DILocation(line: 4569, column: 51, scope: !7418)
!7460 = !DILocation(line: 4572, column: 24, scope: !7418)
!7461 = !DILocation(line: 4572, column: 5, scope: !7418)
!7462 = !DILocation(line: 4573, column: 5, scope: !7418)
!7463 = !DILocation(line: 4575, column: 5, scope: !7418)
!7464 = !DILocation(line: 4576, column: 1, scope: !7418)
!7465 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !982, file: !982, line: 4488, type: !6895, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7466)
!7466 = !{!7467, !7468}
!7467 = !DILocalVariable(name: "D", arg: 1, scope: !7465, file: !982, line: 4488, type: !1152)
!7468 = !DILocalVariable(name: "status", scope: !7465, file: !982, line: 4490, type: !1204)
!7469 = !DILocation(line: 0, scope: !7465)
!7470 = !DILocation(line: 4490, column: 5, scope: !7465)
!7471 = !DILocation(line: 4491, column: 5, scope: !7465)
!7472 = !DILocation(line: 4492, column: 32, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7465, file: !982, line: 4491, column: 10)
!7474 = !DILocation(line: 4492, column: 40, scope: !7473)
!7475 = !DILocation(line: 4492, column: 45, scope: !7473)
!7476 = !DILocation(line: 4492, column: 9, scope: !7473)
!7477 = !DILocation(line: 4493, column: 20, scope: !7465)
!7478 = !DILocation(line: 4493, column: 32, scope: !7465)
!7479 = !DILocation(line: 4493, column: 29, scope: !7465)
!7480 = !DILocation(line: 4493, column: 27, scope: !7465)
!7481 = !DILocation(line: 4493, column: 16, scope: !7465)
!7482 = !DILocation(line: 4493, column: 5, scope: !7473)
!7483 = distinct !{!7483, !7471, !7484}
!7484 = !DILocation(line: 4493, column: 54, scope: !7465)
!7485 = !DILocation(line: 4494, column: 1, scope: !7465)
!7486 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !982, file: !982, line: 1742, type: !7325, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7487)
!7487 = !{!7488, !7489, !7490}
!7488 = !DILocalVariable(name: "driver", arg: 1, scope: !7486, file: !982, line: 1742, type: !7327)
!7489 = !DILocalVariable(name: "D", arg: 2, scope: !7486, file: !982, line: 1742, type: !1152)
!7490 = !DILocalVariable(name: "smap", scope: !7486, file: !982, line: 1744, type: !1203)
!7491 = !DILocation(line: 0, scope: !7486)
!7492 = !DILocation(line: 1747, column: 15, scope: !7486)
!7493 = !DILocation(line: 1748, column: 22, scope: !7486)
!7494 = !DILocation(line: 1749, column: 5, scope: !7486)
!7495 = !DILocation(line: 1749, column: 22, scope: !7486)
!7496 = !DILocation(line: 1750, column: 5, scope: !7486)
!7497 = !DILocation(line: 1750, column: 22, scope: !7486)
!7498 = !DILocation(line: 1751, column: 5, scope: !7486)
!7499 = !DILocation(line: 1751, column: 22, scope: !7486)
!7500 = !DILocation(line: 1752, column: 5, scope: !7486)
!7501 = !DILocation(line: 1752, column: 22, scope: !7486)
!7502 = !DILocation(line: 1753, column: 5, scope: !7486)
!7503 = !DILocation(line: 1753, column: 22, scope: !7486)
!7504 = !DILocation(line: 1756, column: 8, scope: !7486)
!7505 = !DILocation(line: 1756, column: 13, scope: !7486)
!7506 = !DILocation(line: 1756, column: 24, scope: !7486)
!7507 = !DILocation(line: 1758, column: 8, scope: !7486)
!7508 = !DILocation(line: 1758, column: 13, scope: !7486)
!7509 = !DILocation(line: 1758, column: 28, scope: !7486)
!7510 = !DILocation(line: 1759, column: 8, scope: !7486)
!7511 = !DILocation(line: 1759, column: 13, scope: !7486)
!7512 = !DILocation(line: 1759, column: 29, scope: !7486)
!7513 = !DILocation(line: 1760, column: 8, scope: !7486)
!7514 = !DILocation(line: 1760, column: 13, scope: !7486)
!7515 = !DILocation(line: 1760, column: 23, scope: !7486)
!7516 = !DILocation(line: 1761, column: 8, scope: !7486)
!7517 = !DILocation(line: 1761, column: 13, scope: !7486)
!7518 = !DILocation(line: 1761, column: 24, scope: !7486)
!7519 = !DILocation(line: 1762, column: 8, scope: !7486)
!7520 = !DILocation(line: 1762, column: 13, scope: !7486)
!7521 = !DILocation(line: 1762, column: 21, scope: !7486)
!7522 = !DILocation(line: 1763, column: 8, scope: !7486)
!7523 = !DILocation(line: 1763, column: 13, scope: !7486)
!7524 = !DILocation(line: 1763, column: 20, scope: !7486)
!7525 = !DILocation(line: 1764, column: 8, scope: !7486)
!7526 = !DILocation(line: 1764, column: 23, scope: !7486)
!7527 = !DILocation(line: 1768, column: 8, scope: !7486)
!7528 = !DILocation(line: 1768, column: 20, scope: !7486)
!7529 = !DILocation(line: 1770, column: 5, scope: !7486)
!7530 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !982, file: !982, line: 1775, type: !7325, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7531)
!7531 = !{!7532, !7533}
!7532 = !DILocalVariable(name: "driver", arg: 1, scope: !7530, file: !982, line: 1775, type: !7327)
!7533 = !DILocalVariable(name: "D", arg: 2, scope: !7530, file: !982, line: 1775, type: !1152)
!7534 = !DILocation(line: 0, scope: !7530)
!7535 = !DILocation(line: 1793, column: 5, scope: !7530)
!7536 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !982, file: !982, line: 1932, type: !7325, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7537)
!7537 = !{!7538, !7539}
!7538 = !DILocalVariable(name: "driver", arg: 1, scope: !7536, file: !982, line: 1932, type: !7327)
!7539 = !DILocalVariable(name: "D", arg: 2, scope: !7536, file: !982, line: 1932, type: !1152)
!7540 = !DILocation(line: 0, scope: !7536)
!7541 = !DILocation(line: 1935, column: 13, scope: !7536)
!7542 = !DILocation(line: 1935, column: 25, scope: !7536)
!7543 = !DILocation(line: 1936, column: 13, scope: !7536)
!7544 = !DILocation(line: 1936, column: 22, scope: !7536)
!7545 = !DILocation(line: 1937, column: 13, scope: !7536)
!7546 = !DILocation(line: 1937, column: 23, scope: !7536)
!7547 = !DILocation(line: 1939, column: 13, scope: !7536)
!7548 = !DILocation(line: 1939, column: 24, scope: !7536)
!7549 = !DILocation(line: 1940, column: 13, scope: !7536)
!7550 = !DILocation(line: 1940, column: 25, scope: !7536)
!7551 = !DILocation(line: 1945, column: 13, scope: !7536)
!7552 = !DILocation(line: 1945, column: 32, scope: !7536)
!7553 = !DILocation(line: 1946, column: 13, scope: !7536)
!7554 = !DILocation(line: 1946, column: 30, scope: !7536)
!7555 = !DILocation(line: 1947, column: 13, scope: !7536)
!7556 = !DILocation(line: 1947, column: 26, scope: !7536)
!7557 = !DILocation(line: 1948, column: 13, scope: !7536)
!7558 = !DILocation(line: 1948, column: 25, scope: !7536)
!7559 = !DILocation(line: 1949, column: 13, scope: !7536)
!7560 = !DILocation(line: 1949, column: 24, scope: !7536)
!7561 = !DILocation(line: 1956, column: 13, scope: !7536)
!7562 = !DILocation(line: 1956, column: 23, scope: !7536)
!7563 = !DILocation(line: 1957, column: 13, scope: !7536)
!7564 = !DILocation(line: 1957, column: 28, scope: !7536)
!7565 = !DILocation(line: 1960, column: 13, scope: !7536)
!7566 = !DILocation(line: 1960, column: 30, scope: !7536)
!7567 = !DILocation(line: 1961, column: 13, scope: !7536)
!7568 = !DILocation(line: 1961, column: 30, scope: !7536)
!7569 = !DILocation(line: 1962, column: 13, scope: !7536)
!7570 = !DILocation(line: 1962, column: 20, scope: !7536)
!7571 = !DILocation(line: 1968, column: 9, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7536, file: !982, line: 1968, column: 9)
!7573 = !DILocation(line: 1968, column: 36, scope: !7572)
!7574 = !DILocation(line: 1968, column: 9, scope: !7536)
!7575 = !DILocation(line: 1971, column: 12, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7572, file: !982, line: 1970, column: 5)
!7577 = !DILocation(line: 1971, column: 25, scope: !7576)
!7578 = !DILocation(line: 1979, column: 8, scope: !7536)
!7579 = !DILocation(line: 1979, column: 13, scope: !7536)
!7580 = !DILocation(line: 1979, column: 25, scope: !7536)
!7581 = !DILocation(line: 1980, column: 8, scope: !7536)
!7582 = !DILocation(line: 1980, column: 13, scope: !7536)
!7583 = !DILocation(line: 1980, column: 24, scope: !7536)
!7584 = !DILocation(line: 1981, column: 8, scope: !7536)
!7585 = !DILocation(line: 1981, column: 13, scope: !7536)
!7586 = !DILocation(line: 1981, column: 24, scope: !7536)
!7587 = !DILocation(line: 1982, column: 8, scope: !7536)
!7588 = !DILocation(line: 1982, column: 13, scope: !7536)
!7589 = !DILocation(line: 1982, column: 22, scope: !7536)
!7590 = !DILocation(line: 1983, column: 8, scope: !7536)
!7591 = !DILocation(line: 1983, column: 13, scope: !7536)
!7592 = !DILocation(line: 1983, column: 21, scope: !7536)
!7593 = !DILocation(line: 1984, column: 8, scope: !7536)
!7594 = !DILocation(line: 1984, column: 13, scope: !7536)
!7595 = !DILocation(line: 1984, column: 22, scope: !7536)
!7596 = !DILocation(line: 1985, column: 8, scope: !7536)
!7597 = !DILocation(line: 1985, column: 13, scope: !7536)
!7598 = !DILocation(line: 1985, column: 22, scope: !7536)
!7599 = !DILocation(line: 1986, column: 8, scope: !7536)
!7600 = !DILocation(line: 1986, column: 13, scope: !7536)
!7601 = !DILocation(line: 1986, column: 21, scope: !7536)
!7602 = !DILocation(line: 1987, column: 8, scope: !7536)
!7603 = !DILocation(line: 1987, column: 13, scope: !7536)
!7604 = !DILocation(line: 1987, column: 20, scope: !7536)
!7605 = !DILocation(line: 1988, column: 8, scope: !7536)
!7606 = !DILocation(line: 1988, column: 13, scope: !7536)
!7607 = !DILocation(line: 1988, column: 25, scope: !7536)
!7608 = !DILocation(line: 1989, column: 8, scope: !7536)
!7609 = !DILocation(line: 1989, column: 13, scope: !7536)
!7610 = !DILocation(line: 1989, column: 22, scope: !7536)
!7611 = !DILocation(line: 1990, column: 8, scope: !7536)
!7612 = !DILocation(line: 1990, column: 13, scope: !7536)
!7613 = !DILocation(line: 1990, column: 22, scope: !7536)
!7614 = !DILocation(line: 1993, column: 8, scope: !7536)
!7615 = !DILocation(line: 1993, column: 13, scope: !7536)
!7616 = !DILocation(line: 1993, column: 26, scope: !7536)
!7617 = !DILocation(line: 1996, column: 8, scope: !7536)
!7618 = !DILocation(line: 1996, column: 20, scope: !7536)
!7619 = !DILocation(line: 1999, column: 8, scope: !7536)
!7620 = !DILocation(line: 1999, column: 24, scope: !7536)
!7621 = !DILocation(line: 2000, column: 8, scope: !7536)
!7622 = !DILocation(line: 2000, column: 19, scope: !7536)
!7623 = !DILocation(line: 2001, column: 8, scope: !7536)
!7624 = !DILocation(line: 2001, column: 24, scope: !7536)
!7625 = !DILocation(line: 2002, column: 8, scope: !7536)
!7626 = !DILocation(line: 2002, column: 23, scope: !7536)
!7627 = !DILocation(line: 2004, column: 5, scope: !7536)
!7628 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !982, file: !982, line: 2160, type: !1453, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7629)
!7629 = !{!7630, !7631, !7632, !7645, !7646, !7647}
!7630 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7628, file: !982, line: 2160, type: !194)
!7631 = !DILocalVariable(name: "Info", arg: 2, scope: !7628, file: !982, line: 2160, type: !194)
!7632 = !DILocalVariable(name: "FlashInfo", scope: !7628, file: !982, line: 2162, type: !7633)
!7633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7634, size: 32)
!7634 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1178, line: 99, baseType: !7635)
!7635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 90, size: 928, elements: !7636)
!7636 = !{!7637, !7638, !7639, !7640, !7641, !7642, !7643, !7644}
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !7635, file: !1178, line: 91, baseType: !175, size: 32)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !7635, file: !1178, line: 92, baseType: !1509, size: 256, offset: 32)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !7635, file: !1178, line: 93, baseType: !1509, size: 256, offset: 288)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !7635, file: !1178, line: 94, baseType: !1509, size: 256, offset: 544)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !7635, file: !1178, line: 95, baseType: !175, size: 32, offset: 800)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !7635, file: !1178, line: 96, baseType: !1501, size: 16, offset: 832)
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !7635, file: !1178, line: 97, baseType: !175, size: 32, offset: 864)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !7635, file: !1178, line: 98, baseType: !175, size: 32, offset: 896)
!7645 = !DILocalVariable(name: "D", scope: !7628, file: !982, line: 2163, type: !1152)
!7646 = !DILocalVariable(name: "i", scope: !7628, file: !982, line: 2164, type: !175)
!7647 = !DILocalVariable(name: "result", scope: !7628, file: !982, line: 2166, type: !858)
!7648 = !DILocation(line: 0, scope: !7628)
!7649 = !DILocation(line: 2163, column: 37, scope: !7628)
!7650 = !DILocation(line: 2202, column: 16, scope: !7628)
!7651 = !DILocation(line: 2202, column: 28, scope: !7628)
!7652 = !DILocation(line: 2204, column: 15, scope: !7628)
!7653 = !DILocation(line: 2204, column: 29, scope: !7628)
!7654 = !DILocation(line: 2204, column: 39, scope: !7628)
!7655 = !DILocation(line: 2204, column: 5, scope: !7628)
!7656 = !DILocation(line: 2205, column: 9, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7628, file: !982, line: 2204, column: 45)
!7658 = !DILocation(line: 2205, column: 33, scope: !7657)
!7659 = !DILocation(line: 2206, column: 41, scope: !7657)
!7660 = !DILocation(line: 2206, column: 55, scope: !7657)
!7661 = !DILocation(line: 2206, column: 9, scope: !7657)
!7662 = !DILocation(line: 2206, column: 36, scope: !7657)
!7663 = !DILocation(line: 2207, column: 38, scope: !7657)
!7664 = !DILocation(line: 2207, column: 52, scope: !7657)
!7665 = !DILocation(line: 2207, column: 32, scope: !7657)
!7666 = !DILocation(line: 2209, column: 10, scope: !7657)
!7667 = distinct !{!7667, !7655, !7668}
!7668 = !DILocation(line: 2210, column: 5, scope: !7628)
!7669 = !DILocation(line: 2212, column: 16, scope: !7628)
!7670 = !DILocation(line: 2212, column: 32, scope: !7628)
!7671 = !DILocation(line: 2213, column: 16, scope: !7628)
!7672 = !DILocation(line: 2213, column: 25, scope: !7628)
!7673 = !DILocation(line: 2236, column: 5, scope: !7628)
!7674 = !DILocation(line: 2238, column: 5, scope: !7628)
!7675 = !DILocation(line: 2239, column: 18, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7628, file: !982, line: 2238, column: 10)
!7677 = !DILocation(line: 2240, column: 34, scope: !7628)
!7678 = !DILocation(line: 2240, column: 5, scope: !7676)
!7679 = distinct !{!7679, !7674, !7680}
!7680 = !DILocation(line: 2240, column: 43, scope: !7628)
!7681 = !DILocation(line: 2259, column: 5, scope: !7628)
!7682 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !982, file: !982, line: 2275, type: !1254, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7683)
!7683 = !{!7684, !7685, !7686, !7687}
!7684 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7682, file: !982, line: 2275, type: !194)
!7685 = !DILocalVariable(name: "D", scope: !7682, file: !982, line: 2278, type: !1152)
!7686 = !DILocalVariable(name: "status", scope: !7682, file: !982, line: 2279, type: !1204)
!7687 = !DILocalVariable(name: "saved_mask", scope: !7682, file: !982, line: 2280, type: !175)
!7688 = !DILocation(line: 0, scope: !7682)
!7689 = !DILocation(line: 2278, column: 33, scope: !7682)
!7690 = !DILocation(line: 2286, column: 5, scope: !7682)
!7691 = !DILocation(line: 2293, column: 9, scope: !7682)
!7692 = !DILocation(line: 2294, column: 26, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7682, file: !982, line: 2293, column: 19)
!7694 = !DILocation(line: 2297, column: 17, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7693, file: !982, line: 2297, column: 17)
!7696 = !DILocation(line: 2297, column: 17, scope: !7693)
!7697 = !DILocation(line: 2298, column: 17, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7695, file: !982, line: 2297, column: 36)
!7699 = !DILocation(line: 2299, column: 37, scope: !7698)
!7700 = !DILocation(line: 2300, column: 13, scope: !7698)
!7701 = !DILocation(line: 2303, column: 50, scope: !7693)
!7702 = !DILocation(line: 2303, column: 55, scope: !7693)
!7703 = !DILocation(line: 2303, column: 22, scope: !7693)
!7704 = !DILocation(line: 2306, column: 35, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7693, file: !982, line: 2306, column: 17)
!7706 = !DILocation(line: 2306, column: 32, scope: !7705)
!7707 = !DILocation(line: 2306, column: 30, scope: !7705)
!7708 = !DILocation(line: 2306, column: 19, scope: !7705)
!7709 = !DILocation(line: 2306, column: 17, scope: !7693)
!7710 = !DILocation(line: 2307, column: 17, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7705, file: !982, line: 2306, column: 59)
!7712 = !DILocation(line: 2308, column: 17, scope: !7711)
!7713 = !DILocation(line: 2315, column: 12, scope: !7682)
!7714 = !DILocation(line: 2315, column: 21, scope: !7682)
!7715 = !DILocation(line: 2325, column: 9, scope: !7682)
!7716 = !DILocation(line: 2326, column: 5, scope: !7682)
!7717 = !DILocation(line: 2311, column: 17, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7705, file: !982, line: 2310, column: 20)
!7719 = distinct !{!7719, !7691, !7720}
!7720 = !DILocation(line: 2313, column: 9, scope: !7682)
!7721 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !982, file: !982, line: 2819, type: !1462, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7722)
!7722 = !{!7723, !7724, !7725, !7726, !7727, !7728, !7729, !7730, !7731, !7732, !7735, !7736}
!7723 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7721, file: !982, line: 2819, type: !194)
!7724 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !7721, file: !982, line: 2819, type: !175)
!7725 = !DILocalVariable(name: "result", scope: !7721, file: !982, line: 2821, type: !858)
!7726 = !DILocalVariable(name: "blocksize", scope: !7721, file: !982, line: 2822, type: !175)
!7727 = !DILocalVariable(name: "eraseunit", scope: !7721, file: !982, line: 2823, type: !175)
!7728 = !DILocalVariable(name: "eraseaddr", scope: !7721, file: !982, line: 2824, type: !175)
!7729 = !DILocalVariable(name: "iteration", scope: !7721, file: !982, line: 2825, type: !175)
!7730 = !DILocalVariable(name: "D", scope: !7721, file: !982, line: 2826, type: !1152)
!7731 = !DILocalVariable(name: "erase_block", scope: !7721, file: !982, line: 2827, type: !175)
!7732 = !DILocalVariable(name: "a", scope: !7733, file: !982, line: 2853, type: !175)
!7733 = distinct !DILexicalBlock(scope: !7734, file: !982, line: 2852, column: 56)
!7734 = distinct !DILexicalBlock(scope: !7721, file: !982, line: 2852, column: 9)
!7735 = !DILocalVariable(name: "b", scope: !7733, file: !982, line: 2853, type: !175)
!7736 = !DILocalVariable(name: "c", scope: !7733, file: !982, line: 2853, type: !175)
!7737 = !DILocation(line: 0, scope: !7721)
!7738 = !DILocation(line: 2826, column: 30, scope: !7721)
!7739 = !DILocation(line: 2829, column: 5, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !982, line: 2829, column: 5)
!7741 = distinct !DILexicalBlock(scope: !7721, file: !982, line: 2829, column: 5)
!7742 = !DILocation(line: 2829, column: 5, scope: !7741)
!7743 = !DILocation(line: 2829, column: 5, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7740, file: !982, line: 2829, column: 5)
!7745 = !DILocation(line: 2836, column: 9, scope: !7721)
!7746 = !DILocation(line: 2838, column: 8, scope: !7721)
!7747 = !DILocation(line: 2838, column: 21, scope: !7721)
!7748 = !DILocation(line: 2847, column: 5, scope: !7721)
!7749 = !DILocation(line: 2848, column: 18, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7721, file: !982, line: 2847, column: 10)
!7751 = !DILocation(line: 2850, column: 34, scope: !7721)
!7752 = !DILocation(line: 2850, column: 5, scope: !7750)
!7753 = distinct !{!7753, !7748, !7754}
!7754 = !DILocation(line: 2850, column: 43, scope: !7721)
!7755 = !DILocation(line: 2839, column: 32, scope: !7721)
!7756 = !DILocation(line: 2861, column: 53, scope: !7733)
!7757 = !DILocation(line: 2861, column: 40, scope: !7733)
!7758 = !DILocation(line: 2861, column: 25, scope: !7733)
!7759 = !DILocation(line: 2874, column: 16, scope: !7733)
!7760 = !DILocation(line: 2874, column: 13, scope: !7733)
!7761 = !DILocation(line: 0, scope: !7733)
!7762 = !DILocation(line: 2875, column: 24, scope: !7733)
!7763 = !DILocation(line: 2877, column: 21, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7733, file: !982, line: 2877, column: 13)
!7765 = !DILocation(line: 2877, column: 13, scope: !7733)
!7766 = !DILocation(line: 2879, column: 23, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !982, line: 2879, column: 21)
!7768 = distinct !DILexicalBlock(scope: !7769, file: !982, line: 2878, column: 120)
!7769 = distinct !DILexicalBlock(scope: !7770, file: !982, line: 2878, column: 13)
!7770 = distinct !DILexicalBlock(scope: !7771, file: !982, line: 2878, column: 13)
!7771 = distinct !DILexicalBlock(scope: !7764, file: !982, line: 2877, column: 27)
!7772 = !DILocation(line: 2879, column: 21, scope: !7768)
!7773 = !DILocation(line: 2878, column: 48, scope: !7769)
!7774 = !DILocation(line: 2878, column: 83, scope: !7769)
!7775 = !DILocation(line: 2878, column: 113, scope: !7769)
!7776 = !DILocation(line: 2878, column: 35, scope: !7769)
!7777 = !DILocation(line: 2878, column: 13, scope: !7770)
!7778 = distinct !{!7778, !7777, !7779}
!7779 = !DILocation(line: 2883, column: 13, scope: !7770)
!7780 = !DILocation(line: 2863, column: 19, scope: !7733)
!7781 = !DILocation(line: 2825, column: 24, scope: !7721)
!7782 = !DILocation(line: 2886, column: 9, scope: !7733)
!7783 = !DILocation(line: 2888, column: 36, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7733, file: !982, line: 2886, column: 31)
!7785 = !DILocation(line: 2888, column: 41, scope: !7784)
!7786 = !DILocation(line: 2889, column: 17, scope: !7784)
!7787 = !DILocation(line: 2891, column: 36, scope: !7784)
!7788 = !DILocation(line: 2891, column: 41, scope: !7784)
!7789 = !DILocation(line: 2892, column: 17, scope: !7784)
!7790 = !DILocation(line: 2894, column: 36, scope: !7784)
!7791 = !DILocation(line: 2894, column: 41, scope: !7784)
!7792 = !DILocation(line: 2895, column: 17, scope: !7784)
!7793 = !DILocation(line: 2897, column: 17, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7795, file: !982, line: 2897, column: 17)
!7795 = distinct !DILexicalBlock(scope: !7796, file: !982, line: 2897, column: 17)
!7796 = distinct !DILexicalBlock(scope: !7784, file: !982, line: 2897, column: 17)
!7797 = !DILocation(line: 0, scope: !7784)
!7798 = !DILocation(line: 2906, column: 5, scope: !7721)
!7799 = !DILocation(line: 2908, column: 32, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7721, file: !982, line: 2906, column: 27)
!7801 = !DILocation(line: 2908, column: 37, scope: !7800)
!7802 = !DILocation(line: 2909, column: 13, scope: !7800)
!7803 = !DILocation(line: 2911, column: 32, scope: !7800)
!7804 = !DILocation(line: 2911, column: 37, scope: !7800)
!7805 = !DILocation(line: 2912, column: 13, scope: !7800)
!7806 = !DILocation(line: 2914, column: 32, scope: !7800)
!7807 = !DILocation(line: 2914, column: 37, scope: !7800)
!7808 = !DILocation(line: 2915, column: 13, scope: !7800)
!7809 = !DILocation(line: 0, scope: !7800)
!7810 = !DILocation(line: 2921, column: 56, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7812, file: !982, line: 2921, column: 5)
!7812 = distinct !DILexicalBlock(scope: !7721, file: !982, line: 2921, column: 5)
!7813 = !DILocation(line: 2921, column: 5, scope: !7812)
!7814 = !DILocation(line: 2921, column: 35, scope: !7812)
!7815 = !DILocation(line: 2921, column: 22, scope: !7812)
!7816 = !DILocation(line: 2922, column: 9, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7811, file: !982, line: 2921, column: 99)
!7818 = !DILocation(line: 2929, column: 9, scope: !7817)
!7819 = !DILocation(line: 2938, column: 26, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7817, file: !982, line: 2929, column: 26)
!7821 = !DILocation(line: 2939, column: 37, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7820, file: !982, line: 2939, column: 17)
!7823 = !DILocation(line: 2939, column: 17, scope: !7820)
!7824 = distinct !{!7824, !7818, !7825}
!7825 = !DILocation(line: 2943, column: 9, scope: !7817)
!7826 = !DILocation(line: 2921, column: 71, scope: !7811)
!7827 = !DILocation(line: 2921, column: 85, scope: !7811)
!7828 = distinct !{!7828, !7813, !7829}
!7829 = !DILocation(line: 2983, column: 5, scope: !7812)
!7830 = !DILocation(line: 2985, column: 21, scope: !7721)
!7831 = !DILocation(line: 2992, column: 9, scope: !7721)
!7832 = !DILocation(line: 3000, column: 5, scope: !7721)
!7833 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !982, file: !982, line: 2533, type: !1466, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7834)
!7834 = !{!7835, !7836, !7837, !7838, !7839, !7840, !7841, !7842, !7843, !7844, !7845, !7846, !7847, !7848}
!7835 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7833, file: !982, line: 2533, type: !194)
!7836 = !DILocalVariable(name: "Address", arg: 2, scope: !7833, file: !982, line: 2533, type: !194)
!7837 = !DILocalVariable(name: "Data", arg: 3, scope: !7833, file: !982, line: 2533, type: !194)
!7838 = !DILocalVariable(name: "Length", arg: 4, scope: !7833, file: !982, line: 2533, type: !175)
!7839 = !DILocalVariable(name: "D", scope: !7833, file: !982, line: 2535, type: !1152)
!7840 = !DILocalVariable(name: "savedMask", scope: !7833, file: !982, line: 2536, type: !175)
!7841 = !DILocalVariable(name: "address", scope: !7833, file: !982, line: 2537, type: !175)
!7842 = !DILocalVariable(name: "p_data", scope: !7833, file: !982, line: 2538, type: !680)
!7843 = !DILocalVariable(name: "p_data_first", scope: !7833, file: !982, line: 2539, type: !680)
!7844 = !DILocalVariable(name: "result", scope: !7833, file: !982, line: 2540, type: !858)
!7845 = !DILocalVariable(name: "written", scope: !7833, file: !982, line: 2541, type: !175)
!7846 = !DILocalVariable(name: "length", scope: !7833, file: !982, line: 2542, type: !175)
!7847 = !DILocalVariable(name: "cmd1", scope: !7833, file: !982, line: 2543, type: !175)
!7848 = !DILocalVariable(name: "j", scope: !7849, file: !982, line: 2599, type: !175)
!7849 = distinct !DILexicalBlock(scope: !7850, file: !982, line: 2597, column: 61)
!7850 = distinct !DILexicalBlock(scope: !7851, file: !982, line: 2597, column: 13)
!7851 = distinct !DILexicalBlock(scope: !7833, file: !982, line: 2583, column: 25)
!7852 = !DILocation(line: 0, scope: !7833)
!7853 = !DILocation(line: 2535, column: 26, scope: !7833)
!7854 = !DILocation(line: 2537, column: 37, scope: !7833)
!7855 = !DILocation(line: 2538, column: 5, scope: !7833)
!7856 = !DILocation(line: 2538, column: 19, scope: !7833)
!7857 = !DILocation(line: 2542, column: 5, scope: !7833)
!7858 = !DILocation(line: 2545, column: 5, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7860, file: !982, line: 2545, column: 5)
!7860 = distinct !DILexicalBlock(scope: !7833, file: !982, line: 2545, column: 5)
!7861 = !DILocation(line: 2545, column: 5, scope: !7860)
!7862 = !DILocation(line: 2545, column: 5, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7859, file: !982, line: 2545, column: 5)
!7864 = !DILocation(line: 2567, column: 9, scope: !7833)
!7865 = !DILocation(line: 2569, column: 8, scope: !7833)
!7866 = !DILocation(line: 2569, column: 21, scope: !7833)
!7867 = !DILocation(line: 2576, column: 5, scope: !7833)
!7868 = !DILocation(line: 2577, column: 18, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7833, file: !982, line: 2576, column: 10)
!7870 = !DILocation(line: 2579, column: 34, scope: !7833)
!7871 = !DILocation(line: 2579, column: 5, scope: !7869)
!7872 = distinct !{!7872, !7867, !7873}
!7873 = !DILocation(line: 2579, column: 43, scope: !7833)
!7874 = !DILocation(line: 2583, column: 14, scope: !7833)
!7875 = !DILocation(line: 2583, column: 5, scope: !7833)
!7876 = !DILocation(line: 2584, column: 27, scope: !7851)
!7877 = !DILocation(line: 2592, column: 18, scope: !7851)
!7878 = !DILocation(line: 2592, column: 35, scope: !7851)
!7879 = !DILocation(line: 2592, column: 74, scope: !7851)
!7880 = !DILocation(line: 2592, column: 50, scope: !7851)
!7881 = !DILocation(line: 2592, column: 39, scope: !7851)
!7882 = !DILocation(line: 2595, column: 37, scope: !7851)
!7883 = !DILocation(line: 2595, column: 29, scope: !7851)
!7884 = !DILocation(line: 2595, column: 16, scope: !7851)
!7885 = !DILocation(line: 2597, column: 13, scope: !7850)
!7886 = !DILocation(line: 2597, column: 30, scope: !7850)
!7887 = !DILocation(line: 2597, column: 13, scope: !7851)
!7888 = !DILocation(line: 0, scope: !7849)
!7889 = !DILocation(line: 2600, column: 27, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7891, file: !982, line: 2600, column: 13)
!7891 = distinct !DILexicalBlock(scope: !7849, file: !982, line: 2600, column: 13)
!7892 = !DILocation(line: 2600, column: 13, scope: !7891)
!7893 = !DILocation(line: 2601, column: 38, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7890, file: !982, line: 2600, column: 42)
!7895 = !DILocation(line: 2601, column: 17, scope: !7894)
!7896 = !DILocation(line: 2601, column: 36, scope: !7894)
!7897 = !DILocation(line: 2600, column: 38, scope: !7890)
!7898 = distinct !{!7898, !7892, !7899}
!7899 = !DILocation(line: 2602, column: 13, scope: !7891)
!7900 = !DILocation(line: 0, scope: !7851)
!7901 = !DILocation(line: 2606, column: 18, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7851, file: !982, line: 2606, column: 13)
!7903 = !DILocation(line: 2606, column: 29, scope: !7902)
!7904 = !DILocation(line: 2606, column: 13, scope: !7851)
!7905 = !DILocation(line: 2607, column: 13, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7902, file: !982, line: 2606, column: 55)
!7907 = !DILocation(line: 2608, column: 9, scope: !7906)
!7908 = !DILocation(line: 2613, column: 16, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7851, file: !982, line: 2613, column: 13)
!7910 = !DILocation(line: 2613, column: 29, scope: !7909)
!7911 = !DILocation(line: 0, scope: !7909)
!7912 = !DILocation(line: 2613, column: 13, scope: !7851)
!7913 = !DILocation(line: 2614, column: 20, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7909, file: !982, line: 2613, column: 35)
!7915 = !DILocation(line: 2615, column: 32, scope: !7914)
!7916 = !DILocation(line: 2615, column: 40, scope: !7914)
!7917 = !DILocation(line: 2615, column: 13, scope: !7914)
!7918 = !DILocation(line: 2616, column: 9, scope: !7914)
!7919 = !DILocation(line: 2619, column: 20, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7909, file: !982, line: 2618, column: 9)
!7921 = !DILocation(line: 2620, column: 32, scope: !7920)
!7922 = !DILocation(line: 2620, column: 40, scope: !7920)
!7923 = !DILocation(line: 2620, column: 13, scope: !7920)
!7924 = !DILocation(line: 2626, column: 21, scope: !7851)
!7925 = !DILocation(line: 2633, column: 37, scope: !7851)
!7926 = !DILocation(line: 2634, column: 45, scope: !7851)
!7927 = !DILocation(line: 2634, column: 42, scope: !7851)
!7928 = !DILocation(line: 2634, column: 40, scope: !7851)
!7929 = !DILocation(line: 2634, column: 58, scope: !7851)
!7930 = !DILocation(line: 2634, column: 29, scope: !7851)
!7931 = !DILocation(line: 2635, column: 28, scope: !7851)
!7932 = !DILocation(line: 2636, column: 9, scope: !7851)
!7933 = !DILocation(line: 2638, column: 26, scope: !7851)
!7934 = !DILocation(line: 2638, column: 9, scope: !7851)
!7935 = !DILocation(line: 2639, column: 29, scope: !7851)
!7936 = !DILocation(line: 2639, column: 9, scope: !7851)
!7937 = !DILocation(line: 2662, column: 9, scope: !7851)
!7938 = !DILocation(line: 2670, column: 9, scope: !7851)
!7939 = !DILocation(line: 2676, column: 89, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7851, file: !982, line: 2670, column: 13)
!7941 = !DILocation(line: 2676, column: 26, scope: !7940)
!7942 = !DILocation(line: 2678, column: 36, scope: !7851)
!7943 = !DILocation(line: 2678, column: 9, scope: !7940)
!7944 = distinct !{!7944, !7938, !7945}
!7945 = !DILocation(line: 2678, column: 45, scope: !7851)
!7946 = !DILocation(line: 2718, column: 19, scope: !7851)
!7947 = !DILocation(line: 2718, column: 16, scope: !7851)
!7948 = !DILocation(line: 2719, column: 16, scope: !7851)
!7949 = !DILocation(line: 2722, column: 31, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7851, file: !982, line: 2722, column: 13)
!7951 = !DILocation(line: 2722, column: 13, scope: !7851)
!7952 = distinct !{!7952, !7875, !7953}
!7953 = !DILocation(line: 2725, column: 5, scope: !7833)
!7954 = !DILocation(line: 2748, column: 21, scope: !7833)
!7955 = !DILocation(line: 2755, column: 9, scope: !7833)
!7956 = !DILocation(line: 2757, column: 16, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7833, file: !982, line: 2757, column: 9)
!7958 = !DILocation(line: 2761, column: 1, scope: !7833)
!7959 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !982, file: !982, line: 3019, type: !1462, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7960)
!7960 = !{!7961, !7962}
!7961 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7959, file: !982, line: 3019, type: !194)
!7962 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !7959, file: !982, line: 3019, type: !175)
!7963 = !DILocation(line: 0, scope: !7959)
!7964 = !DILocation(line: 3021, column: 5, scope: !7959)
!7965 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !982, file: !982, line: 3124, type: !1471, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !7966)
!7966 = !{!7967, !7968, !7969, !7970, !7971, !7972, !7973, !7974}
!7967 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7965, file: !982, line: 3124, type: !194)
!7968 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !7965, file: !982, line: 3124, type: !175)
!7969 = !DILocalVariable(name: "result", scope: !7965, file: !982, line: 3126, type: !858)
!7970 = !DILocalVariable(name: "savedMask", scope: !7965, file: !982, line: 3127, type: !175)
!7971 = !DILocalVariable(name: "D", scope: !7965, file: !982, line: 3128, type: !1152)
!7972 = !DILocalVariable(name: "status_busy", scope: !7965, file: !982, line: 3129, type: !1204)
!7973 = !DILocalVariable(name: "status_suspend", scope: !7965, file: !982, line: 3129, type: !1204)
!7974 = !DILocalVariable(name: "check_status", scope: !7975, file: !982, line: 3141, type: !1204)
!7975 = distinct !DILexicalBlock(scope: !7976, file: !982, line: 3140, column: 56)
!7976 = distinct !DILexicalBlock(scope: !7965, file: !982, line: 3140, column: 9)
!7977 = !DILocation(line: 0, scope: !7965)
!7978 = !DILocation(line: 3128, column: 47, scope: !7965)
!7979 = !DILocation(line: 3131, column: 5, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7981, file: !982, line: 3131, column: 5)
!7981 = distinct !DILexicalBlock(scope: !7965, file: !982, line: 3131, column: 5)
!7982 = !DILocation(line: 3131, column: 5, scope: !7981)
!7983 = !DILocation(line: 3131, column: 5, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7980, file: !982, line: 3131, column: 5)
!7985 = !DILocation(line: 3134, column: 50, scope: !7965)
!7986 = !DILocation(line: 3134, column: 55, scope: !7965)
!7987 = !DILocation(line: 3134, column: 22, scope: !7965)
!7988 = !DILocation(line: 3135, column: 50, scope: !7965)
!7989 = !DILocation(line: 3135, column: 55, scope: !7965)
!7990 = !DILocation(line: 3135, column: 22, scope: !7965)
!7991 = !DILocation(line: 3138, column: 17, scope: !7965)
!7992 = !DILocation(line: 3140, column: 32, scope: !7976)
!7993 = !DILocation(line: 3140, column: 29, scope: !7976)
!7994 = !DILocation(line: 3140, column: 27, scope: !7976)
!7995 = !DILocation(line: 3140, column: 11, scope: !7976)
!7996 = !DILocation(line: 3140, column: 9, scope: !7965)
!7997 = !DILocation(line: 3141, column: 34, scope: !7975)
!7998 = !DILocation(line: 3141, column: 60, scope: !7975)
!7999 = !DILocation(line: 3141, column: 58, scope: !7975)
!8000 = !DILocation(line: 0, scope: !7975)
!8001 = !DILocation(line: 3144, column: 37, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7975, file: !982, line: 3144, column: 13)
!8003 = !DILocation(line: 3144, column: 35, scope: !8002)
!8004 = !DILocation(line: 3144, column: 16, scope: !8002)
!8005 = !DILocation(line: 3144, column: 52, scope: !8002)
!8006 = !DILocation(line: 3145, column: 21, scope: !8002)
!8007 = !DILocation(line: 3145, column: 38, scope: !8002)
!8008 = !DILocation(line: 3147, column: 13, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8010, file: !982, line: 3147, column: 13)
!8010 = distinct !DILexicalBlock(scope: !8011, file: !982, line: 3147, column: 13)
!8011 = distinct !DILexicalBlock(scope: !8002, file: !982, line: 3145, column: 61)
!8012 = !DILocation(line: 3147, column: 13, scope: !8010)
!8013 = !DILocation(line: 3147, column: 13, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8009, file: !982, line: 3147, column: 13)
!8015 = !DILocation(line: 3150, column: 13, scope: !8011)
!8016 = !DILocation(line: 3151, column: 33, scope: !8011)
!8017 = !DILocation(line: 3153, column: 9, scope: !8011)
!8018 = !DILocation(line: 3155, column: 20, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8020, file: !982, line: 3155, column: 17)
!8020 = distinct !DILexicalBlock(scope: !8002, file: !982, line: 3153, column: 16)
!8021 = !DILocation(line: 3155, column: 31, scope: !8019)
!8022 = !DILocation(line: 3155, column: 17, scope: !8020)
!8023 = !DILocation(line: 3156, column: 36, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8019, file: !982, line: 3155, column: 54)
!8025 = !DILocation(line: 3156, column: 17, scope: !8024)
!8026 = !DILocation(line: 3157, column: 36, scope: !8024)
!8027 = !DILocation(line: 3157, column: 17, scope: !8024)
!8028 = !DILocation(line: 3158, column: 13, scope: !8024)
!8029 = !DILocation(line: 3191, column: 5, scope: !7965)
!8030 = !DILocation(line: 3193, column: 9, scope: !7965)
!8031 = !DILocation(line: 3160, column: 13, scope: !8020)
!8032 = !DILocation(line: 3173, column: 13, scope: !8020)
!8033 = !DILocation(line: 3194, column: 18, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8035, file: !982, line: 3193, column: 32)
!8035 = distinct !DILexicalBlock(scope: !7965, file: !982, line: 3193, column: 9)
!8036 = !DILocation(line: 3195, column: 5, scope: !8034)
!8037 = !DILocation(line: 3197, column: 5, scope: !7965)
!8038 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !982, file: !982, line: 3225, type: !1462, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8039)
!8039 = !{!8040, !8041, !8042, !8043, !8044}
!8040 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8038, file: !982, line: 3225, type: !194)
!8041 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8038, file: !982, line: 3225, type: !175)
!8042 = !DILocalVariable(name: "D", scope: !8038, file: !982, line: 3227, type: !1152)
!8043 = !DILocalVariable(name: "status", scope: !8038, file: !982, line: 3228, type: !1204)
!8044 = !DILocalVariable(name: "savedMask", scope: !8038, file: !982, line: 3229, type: !175)
!8045 = !DILocation(line: 0, scope: !8038)
!8046 = !DILocation(line: 3227, column: 30, scope: !8038)
!8047 = !DILocation(line: 3231, column: 17, scope: !8038)
!8048 = !DILocation(line: 3234, column: 5, scope: !8038)
!8049 = !DILocation(line: 3238, column: 5, scope: !8038)
!8050 = !DILocation(line: 3239, column: 46, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8038, file: !982, line: 3238, column: 15)
!8052 = !DILocation(line: 3239, column: 51, scope: !8051)
!8053 = !DILocation(line: 3239, column: 18, scope: !8051)
!8054 = !DILocation(line: 3241, column: 31, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8051, file: !982, line: 3241, column: 13)
!8056 = !DILocation(line: 3241, column: 28, scope: !8055)
!8057 = !DILocation(line: 3241, column: 26, scope: !8055)
!8058 = !DILocation(line: 3241, column: 15, scope: !8055)
!8059 = !DILocation(line: 3241, column: 13, scope: !8051)
!8060 = distinct !{!8060, !8049, !8061}
!8061 = !DILocation(line: 3244, column: 5, scope: !8038)
!8062 = !DILocation(line: 3246, column: 5, scope: !8038)
!8063 = !DILocation(line: 3248, column: 5, scope: !8038)
!8064 = !DILocation(line: 3250, column: 5, scope: !8038)
!8065 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !982, file: !982, line: 3277, type: !1462, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8066)
!8066 = !{!8067, !8068, !8069}
!8067 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8065, file: !982, line: 3277, type: !194)
!8068 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8065, file: !982, line: 3277, type: !175)
!8069 = !DILocalVariable(name: "D", scope: !8065, file: !982, line: 3279, type: !1152)
!8070 = !DILocation(line: 0, scope: !8065)
!8071 = !DILocation(line: 3279, column: 29, scope: !8065)
!8072 = !DILocation(line: 3281, column: 5, scope: !8065)
!8073 = !DILocation(line: 3282, column: 5, scope: !8065)
!8074 = !DILocation(line: 3283, column: 5, scope: !8065)
!8075 = !DILocation(line: 3285, column: 5, scope: !8065)
!8076 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !982, file: !982, line: 3332, type: !1488, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8077)
!8077 = !{!8078, !8079, !8080}
!8078 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8076, file: !982, line: 3332, type: !194)
!8079 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !8076, file: !982, line: 3332, type: !194)
!8080 = !DILocalVariable(name: "ACTION", arg: 3, scope: !8076, file: !982, line: 3332, type: !175)
!8081 = !DILocation(line: 0, scope: !8076)
!8082 = !DILocation(line: 3334, column: 5, scope: !8076)
!8083 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !982, file: !982, line: 2350, type: !1496, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8084)
!8084 = !{!8085, !8086, !8087, !8088}
!8085 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8083, file: !982, line: 2350, type: !194)
!8086 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !8083, file: !982, line: 2350, type: !175)
!8087 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !8083, file: !982, line: 2350, type: !194)
!8088 = !DILocalVariable(name: "D", scope: !8083, file: !982, line: 2352, type: !1152)
!8089 = !DILocation(line: 0, scope: !8083)
!8090 = !DILocation(line: 2353, column: 9, scope: !8083)
!8091 = !DILocation(line: 2354, column: 12, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8093, file: !982, line: 2353, column: 51)
!8093 = distinct !DILexicalBlock(scope: !8083, file: !982, line: 2353, column: 9)
!8094 = !DILocation(line: 2354, column: 9, scope: !8092)
!8095 = !DILocation(line: 2355, column: 5, scope: !8092)
!8096 = !DILocation(line: 2356, column: 17, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8098, file: !982, line: 2356, column: 13)
!8098 = distinct !DILexicalBlock(scope: !8099, file: !982, line: 2355, column: 71)
!8099 = distinct !DILexicalBlock(scope: !8093, file: !982, line: 2355, column: 16)
!8100 = !DILocation(line: 2356, column: 14, scope: !8097)
!8101 = !DILocation(line: 2356, column: 28, scope: !8097)
!8102 = !DILocation(line: 2356, column: 49, scope: !8097)
!8103 = !DILocation(line: 2356, column: 56, scope: !8097)
!8104 = !DILocation(line: 2356, column: 70, scope: !8097)
!8105 = !DILocation(line: 2356, column: 80, scope: !8097)
!8106 = !DILocation(line: 2356, column: 13, scope: !8098)
!8107 = !DILocation(line: 2361, column: 9, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8109, file: !982, line: 2361, column: 9)
!8109 = distinct !DILexicalBlock(scope: !8110, file: !982, line: 2361, column: 9)
!8110 = distinct !DILexicalBlock(scope: !8111, file: !982, line: 2361, column: 9)
!8111 = distinct !DILexicalBlock(scope: !8099, file: !982, line: 2359, column: 12)
!8112 = !DILocation(line: 2363, column: 5, scope: !8083)
!8113 = !DILocation(line: 2364, column: 1, scope: !8083)
!8114 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !982, file: !982, line: 3355, type: !1254, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8115)
!8115 = !{!8116, !8117, !8118}
!8116 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8114, file: !982, line: 3355, type: !194)
!8117 = !DILocalVariable(name: "D", scope: !8114, file: !982, line: 3357, type: !1152)
!8118 = !DILocalVariable(name: "status", scope: !8114, file: !982, line: 3358, type: !952)
!8119 = !DILocation(line: 0, scope: !8114)
!8120 = !DILocation(line: 3366, column: 12, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8114, file: !982, line: 3366, column: 9)
!8122 = !DILocation(line: 3366, column: 17, scope: !8121)
!8123 = !DILocation(line: 3366, column: 9, scope: !8121)
!8124 = !DILocation(line: 3366, column: 9, scope: !8114)
!8125 = !DILocation(line: 3357, column: 25, scope: !8114)
!8126 = !DILocation(line: 3367, column: 18, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8121, file: !982, line: 3366, column: 33)
!8128 = !DILocation(line: 3368, column: 25, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8127, file: !982, line: 3368, column: 13)
!8130 = !DILocation(line: 3368, column: 22, scope: !8129)
!8131 = !DILocation(line: 3368, column: 20, scope: !8129)
!8132 = !DILocation(line: 3368, column: 13, scope: !8127)
!8133 = !DILocation(line: 3373, column: 5, scope: !8114)
!8134 = !DILocation(line: 3374, column: 1, scope: !8114)
!8135 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !982, file: !982, line: 3044, type: !8136, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8138)
!8136 = !DISubroutineType(types: !8137)
!8137 = !{!858, !194, !175, !378}
!8138 = !{!8139, !8140, !8141, !8142, !8143, !8144, !8145, !8146}
!8139 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8135, file: !982, line: 3044, type: !194)
!8140 = !DILocalVariable(name: "addr", arg: 2, scope: !8135, file: !982, line: 3044, type: !175)
!8141 = !DILocalVariable(name: "data", arg: 3, scope: !8135, file: !982, line: 3044, type: !378)
!8142 = !DILocalVariable(name: "savedMask", scope: !8135, file: !982, line: 3046, type: !175)
!8143 = !DILocalVariable(name: "D", scope: !8135, file: !982, line: 3047, type: !1152)
!8144 = !DILocalVariable(name: "result", scope: !8135, file: !982, line: 3048, type: !858)
!8145 = !DILocalVariable(name: "check_data", scope: !8135, file: !982, line: 3049, type: !378)
!8146 = !DILocalVariable(name: "status_busy", scope: !8135, file: !982, line: 3050, type: !952)
!8147 = !DILocation(line: 0, scope: !8135)
!8148 = !DILocation(line: 3047, column: 43, scope: !8135)
!8149 = !DILocation(line: 3053, column: 47, scope: !8135)
!8150 = !DILocation(line: 3053, column: 52, scope: !8135)
!8151 = !DILocation(line: 3053, column: 19, scope: !8135)
!8152 = !DILocation(line: 3056, column: 9, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8135, file: !982, line: 3056, column: 9)
!8154 = !DILocation(line: 3056, column: 9, scope: !8135)
!8155 = !DILocation(line: 3058, column: 9, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8157, file: !982, line: 3058, column: 9)
!8157 = distinct !DILexicalBlock(scope: !8158, file: !982, line: 3058, column: 9)
!8158 = distinct !DILexicalBlock(scope: !8153, file: !982, line: 3056, column: 28)
!8159 = !DILocation(line: 3058, column: 9, scope: !8157)
!8160 = !DILocation(line: 3058, column: 9, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8156, file: !982, line: 3058, column: 9)
!8162 = !DILocation(line: 3060, column: 9, scope: !8158)
!8163 = !DILocation(line: 3062, column: 29, scope: !8158)
!8164 = !DILocation(line: 3063, column: 5, scope: !8158)
!8165 = !DILocation(line: 3065, column: 38, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8153, file: !982, line: 3065, column: 15)
!8167 = !DILocation(line: 3065, column: 35, scope: !8166)
!8168 = !DILocation(line: 3065, column: 33, scope: !8166)
!8169 = !DILocation(line: 3065, column: 17, scope: !8166)
!8170 = !DILocation(line: 3065, column: 15, scope: !8153)
!8171 = !DILocation(line: 3066, column: 21, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8166, file: !982, line: 3065, column: 62)
!8173 = !DILocation(line: 3068, column: 9, scope: !8172)
!8174 = !DILocation(line: 3071, column: 23, scope: !8172)
!8175 = !DILocation(line: 3071, column: 22, scope: !8172)
!8176 = !DILocation(line: 3073, column: 24, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8172, file: !982, line: 3073, column: 13)
!8178 = !DILocation(line: 3088, column: 9, scope: !8172)
!8179 = !DILocation(line: 3092, column: 13, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8181, file: !982, line: 3092, column: 13)
!8181 = distinct !DILexicalBlock(scope: !8135, file: !982, line: 3091, column: 9)
!8182 = !DILocation(line: 3092, column: 33, scope: !8180)
!8183 = !DILocation(line: 3092, column: 13, scope: !8181)
!8184 = !DILocation(line: 3106, column: 5, scope: !8135)
!8185 = !DILocation(line: 3107, column: 1, scope: !8135)
!8186 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !982, file: !982, line: 3497, type: !8187, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8189)
!8187 = !DISubroutineType(types: !8188)
!8188 = !{null, !1152, !175}
!8189 = !{!8190, !8191, !8192}
!8190 = !DILocalVariable(name: "D", arg: 1, scope: !8186, file: !982, line: 3497, type: !1152)
!8191 = !DILocalVariable(name: "addr", arg: 2, scope: !8186, file: !982, line: 3497, type: !175)
!8192 = !DILocalVariable(name: "savedMask", scope: !8186, file: !982, line: 3499, type: !175)
!8193 = !DILocation(line: 0, scope: !8186)
!8194 = !DILocation(line: 3501, column: 14, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8186, file: !982, line: 3501, column: 9)
!8196 = !DILocation(line: 3501, column: 25, scope: !8195)
!8197 = !DILocation(line: 3501, column: 9, scope: !8186)
!8198 = !DILocation(line: 3502, column: 9, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8195, file: !982, line: 3501, column: 51)
!8200 = !DILocation(line: 3503, column: 5, scope: !8199)
!8201 = !DILocation(line: 3507, column: 17, scope: !8186)
!8202 = !DILocation(line: 3516, column: 5, scope: !8186)
!8203 = !DILocation(line: 3517, column: 31, scope: !8186)
!8204 = !DILocation(line: 3517, column: 38, scope: !8186)
!8205 = !DILocation(line: 3517, column: 43, scope: !8186)
!8206 = !DILocation(line: 3517, column: 59, scope: !8186)
!8207 = !DILocation(line: 3517, column: 56, scope: !8186)
!8208 = !DILocation(line: 3517, column: 5, scope: !8186)
!8209 = !DILocation(line: 3523, column: 5, scope: !8186)
!8210 = !DILocation(line: 3524, column: 1, scope: !8186)
!8211 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !982, file: !982, line: 2018, type: !7325, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8212)
!8212 = !{!8213, !8214, !8215}
!8213 = !DILocalVariable(name: "driver", arg: 1, scope: !8211, file: !982, line: 2018, type: !7327)
!8214 = !DILocalVariable(name: "D", arg: 2, scope: !8211, file: !982, line: 2018, type: !1152)
!8215 = !DILocalVariable(name: "result", scope: !8211, file: !982, line: 2020, type: !858)
!8216 = !DILocation(line: 0, scope: !8211)
!8217 = !DILocation(line: 2022, column: 13, scope: !8211)
!8218 = !DILocation(line: 2022, column: 5, scope: !8211)
!8219 = !DILocation(line: 2031, column: 16, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8211, file: !982, line: 2022, column: 31)
!8221 = !DILocation(line: 2031, column: 27, scope: !8220)
!8222 = !DILocation(line: 2033, column: 22, scope: !8220)
!8223 = !DILocation(line: 2034, column: 13, scope: !8220)
!8224 = !DILocation(line: 2049, column: 16, scope: !8220)
!8225 = !DILocation(line: 2049, column: 27, scope: !8220)
!8226 = !DILocation(line: 2051, column: 23, scope: !8220)
!8227 = !DILocation(line: 2053, column: 13, scope: !8220)
!8228 = !DILocation(line: 2058, column: 22, scope: !8220)
!8229 = !DILocation(line: 2059, column: 13, scope: !8220)
!8230 = !DILocation(line: 2079, column: 13, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8232, file: !982, line: 2079, column: 13)
!8232 = distinct !DILexicalBlock(scope: !8233, file: !982, line: 2079, column: 13)
!8233 = distinct !DILexicalBlock(scope: !8220, file: !982, line: 2079, column: 13)
!8234 = !DILocation(line: 2083, column: 5, scope: !8211)
!8235 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !982, file: !982, line: 2100, type: !8236, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8238)
!8236 = !DISubroutineType(types: !8237)
!8237 = !{!858, !7327, !1152, !175, !175}
!8238 = !{!8239, !8240, !8241, !8242, !8243}
!8239 = !DILocalVariable(name: "driver", arg: 1, scope: !8235, file: !982, line: 2100, type: !7327)
!8240 = !DILocalVariable(name: "D", arg: 2, scope: !8235, file: !982, line: 2100, type: !1152)
!8241 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !8235, file: !982, line: 2100, type: !175)
!8242 = !DILocalVariable(name: "parameter", arg: 4, scope: !8235, file: !982, line: 2100, type: !175)
!8243 = !DILocalVariable(name: "result", scope: !8235, file: !982, line: 2102, type: !858)
!8244 = !DILocation(line: 0, scope: !8235)
!8245 = !DILocation(line: 2105, column: 16, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8235, file: !982, line: 2105, column: 9)
!8247 = !DILocation(line: 2105, column: 24, scope: !8246)
!8248 = !DILocation(line: 2109, column: 12, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8235, file: !982, line: 2109, column: 9)
!8250 = !DILocation(line: 2109, column: 16, scope: !8249)
!8251 = !DILocation(line: 2109, column: 24, scope: !8249)
!8252 = !DILocation(line: 2109, column: 30, scope: !8249)
!8253 = !DILocation(line: 2109, column: 40, scope: !8249)
!8254 = !DILocation(line: 2109, column: 9, scope: !8235)
!8255 = !DILocation(line: 2118, column: 19, scope: !8235)
!8256 = !DILocation(line: 2118, column: 8, scope: !8235)
!8257 = !DILocation(line: 2118, column: 17, scope: !8235)
!8258 = !DILocation(line: 2119, column: 23, scope: !8235)
!8259 = !DILocation(line: 2119, column: 8, scope: !8235)
!8260 = !DILocation(line: 2119, column: 21, scope: !8235)
!8261 = !DILocation(line: 2122, column: 5, scope: !8235)
!8262 = !DILocation(line: 2125, column: 8, scope: !8235)
!8263 = !DILocation(line: 2125, column: 13, scope: !8235)
!8264 = !DILocation(line: 2125, column: 24, scope: !8235)
!8265 = !DILocation(line: 2126, column: 26, scope: !8235)
!8266 = !DILocation(line: 2126, column: 5, scope: !8235)
!8267 = !DILocation(line: 2128, column: 9, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8235, file: !982, line: 2128, column: 9)
!8269 = !DILocation(line: 2128, column: 31, scope: !8268)
!8270 = !DILocation(line: 2128, column: 60, scope: !8268)
!8271 = !DILocation(line: 2128, column: 9, scope: !8235)
!8272 = !DILocation(line: 2129, column: 12, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8268, file: !982, line: 2128, column: 110)
!8274 = !DILocation(line: 2129, column: 17, scope: !8273)
!8275 = !DILocation(line: 2129, column: 28, scope: !8273)
!8276 = !DILocation(line: 2130, column: 9, scope: !8273)
!8277 = !DILocation(line: 2131, column: 5, scope: !8273)
!8278 = !DILocation(line: 2134, column: 14, scope: !8235)
!8279 = !DILocation(line: 2136, column: 5, scope: !8235)
!8280 = !DILocation(line: 2137, column: 1, scope: !8235)
!8281 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !982, file: !982, line: 3387, type: !8282, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8284)
!8282 = !DISubroutineType(types: !8283)
!8283 = !{null, !1152, !680}
!8284 = !{!8285, !8286, !8287}
!8285 = !DILocalVariable(name: "D", arg: 1, scope: !8281, file: !982, line: 3387, type: !1152)
!8286 = !DILocalVariable(name: "id", arg: 2, scope: !8281, file: !982, line: 3387, type: !680)
!8287 = !DILocalVariable(name: "cmd", scope: !8281, file: !982, line: 3389, type: !378)
!8288 = !DILocation(line: 0, scope: !8281)
!8289 = !DILocation(line: 3389, column: 5, scope: !8281)
!8290 = !DILocation(line: 3405, column: 9, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8281, file: !982, line: 3405, column: 9)
!8292 = !DILocation(line: 3405, column: 21, scope: !8291)
!8293 = !DILocation(line: 0, scope: !8291)
!8294 = !DILocation(line: 3405, column: 9, scope: !8281)
!8295 = !DILocation(line: 3411, column: 31, scope: !8281)
!8296 = !DILocation(line: 3411, column: 5, scope: !8281)
!8297 = !DILocation(line: 3412, column: 1, scope: !8281)
!8298 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !982, file: !982, line: 3585, type: !8299, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !8301)
!8299 = !DISubroutineType(types: !8300)
!8300 = !{null, !6094, !680, !680, !6094, !6094}
!8301 = !{!8302, !8303, !8304, !8305, !8306, !8307}
!8302 = !DILocalVariable(name: "CS", arg: 1, scope: !8298, file: !982, line: 3585, type: !6094)
!8303 = !DILocalVariable(name: "cmd", arg: 2, scope: !8298, file: !982, line: 3585, type: !680)
!8304 = !DILocalVariable(name: "data", arg: 3, scope: !8298, file: !982, line: 3585, type: !680)
!8305 = !DILocalVariable(name: "outl", arg: 4, scope: !8298, file: !982, line: 3585, type: !6094)
!8306 = !DILocalVariable(name: "inl", arg: 5, scope: !8298, file: !982, line: 3585, type: !6094)
!8307 = !DILocalVariable(name: "savedMask", scope: !8298, file: !982, line: 3587, type: !175)
!8308 = !DILocation(line: 0, scope: !8298)
!8309 = !DILocation(line: 3589, column: 17, scope: !8298)
!8310 = !DILocation(line: 3590, column: 5, scope: !8298)
!8311 = !DILocation(line: 3591, column: 5, scope: !8298)
!8312 = !DILocation(line: 3593, column: 1, scope: !8298)
!8313 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !1307, file: !1307, line: 110, type: !6572, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !8314)
!8314 = !{!8315, !8316, !8317, !8318}
!8315 = !DILocalVariable(name: "id", arg: 1, scope: !8313, file: !1307, line: 110, type: !680)
!8316 = !DILocalVariable(name: "i", scope: !8313, file: !1307, line: 114, type: !858)
!8317 = !DILocalVariable(name: "j", scope: !8313, file: !1307, line: 114, type: !858)
!8318 = !DILocalVariable(name: "id_list", scope: !8313, file: !1307, line: 115, type: !8319)
!8319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8320, size: 32)
!8320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1385)
!8321 = !DILocation(line: 0, scope: !8313)
!8322 = !DILocation(line: 119, column: 5, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8313, file: !1307, line: 119, column: 5)
!8324 = !DILocation(line: 119, column: 46, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8323, file: !1307, line: 119, column: 5)
!8326 = !DILocation(line: 119, column: 19, scope: !8325)
!8327 = distinct !{!8327, !8322, !8328}
!8328 = !DILocation(line: 131, column: 5, scope: !8323)
!8329 = !DILocation(line: 121, column: 23, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8331, file: !1307, line: 121, column: 9)
!8331 = distinct !DILexicalBlock(scope: !8332, file: !1307, line: 121, column: 9)
!8332 = distinct !DILexicalBlock(scope: !8325, file: !1307, line: 119, column: 50)
!8333 = !DILocation(line: 121, column: 9, scope: !8331)
!8334 = !DILocation(line: 122, column: 17, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8336, file: !1307, line: 122, column: 17)
!8336 = distinct !DILexicalBlock(scope: !8330, file: !1307, line: 121, column: 51)
!8337 = !DILocation(line: 122, column: 37, scope: !8335)
!8338 = !DILocation(line: 122, column: 34, scope: !8335)
!8339 = !DILocation(line: 122, column: 17, scope: !8336)
!8340 = !DILocation(line: 121, column: 47, scope: !8330)
!8341 = distinct !{!8341, !8333, !8342}
!8342 = !DILocation(line: 125, column: 9, scope: !8331)
!8343 = !DILocation(line: 0, scope: !8331)
!8344 = !DILocation(line: 127, column: 15, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8332, file: !1307, line: 127, column: 13)
!8346 = !DILocation(line: 127, column: 13, scope: !8332)
!8347 = !DILocation(line: 134, column: 1, scope: !8313)
!8348 = distinct !DISubprogram(name: "CMEM_Index", scope: !1307, file: !1307, line: 153, type: !6727, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !8349)
!8349 = !{!8350, !8351, !8352, !8359}
!8350 = !DILocalVariable(name: "i", scope: !8348, file: !1307, line: 156, type: !858)
!8351 = !DILocalVariable(name: "j", scope: !8348, file: !1307, line: 156, type: !858)
!8352 = !DILocalVariable(name: "id", scope: !8348, file: !1307, line: 157, type: !8353)
!8353 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1378, line: 89, baseType: !8354)
!8354 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1378, line: 86, size: 64, elements: !8355)
!8355 = !{!8356, !8357}
!8356 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !8354, file: !1378, line: 87, baseType: !1391, size: 64)
!8357 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !8354, file: !1378, line: 88, baseType: !8358, size: 64)
!8358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 64, elements: !381)
!8359 = !DILocalVariable(name: "id_list", scope: !8348, file: !1307, line: 158, type: !8319)
!8360 = !DILocation(line: 157, column: 5, scope: !8348)
!8361 = !DILocation(line: 157, column: 17, scope: !8348)
!8362 = !DILocation(line: 0, scope: !8348)
!8363 = !DILocation(line: 161, column: 9, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8348, file: !1307, line: 161, column: 9)
!8365 = !DILocation(line: 161, column: 20, scope: !8364)
!8366 = !DILocation(line: 161, column: 9, scope: !8348)
!8367 = !DILocation(line: 172, column: 58, scope: !8348)
!8368 = !DILocation(line: 172, column: 5, scope: !8348)
!8369 = !DILocation(line: 178, column: 5, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8348, file: !1307, line: 178, column: 5)
!8371 = !DILocation(line: 180, column: 23, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8373, file: !1307, line: 180, column: 9)
!8373 = distinct !DILexicalBlock(scope: !8374, file: !1307, line: 180, column: 9)
!8374 = distinct !DILexicalBlock(scope: !8375, file: !1307, line: 178, column: 53)
!8375 = distinct !DILexicalBlock(scope: !8370, file: !1307, line: 178, column: 5)
!8376 = !DILocation(line: 180, column: 9, scope: !8373)
!8377 = !DILocation(line: 181, column: 17, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8379, file: !1307, line: 181, column: 17)
!8379 = distinct !DILexicalBlock(scope: !8372, file: !1307, line: 180, column: 51)
!8380 = !DILocation(line: 181, column: 37, scope: !8378)
!8381 = !DILocation(line: 181, column: 34, scope: !8378)
!8382 = !DILocation(line: 181, column: 17, scope: !8379)
!8383 = !DILocation(line: 180, column: 47, scope: !8372)
!8384 = distinct !{!8384, !8376, !8385}
!8385 = !DILocation(line: 184, column: 9, scope: !8373)
!8386 = !DILocation(line: 0, scope: !8373)
!8387 = !DILocation(line: 186, column: 15, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8374, file: !1307, line: 186, column: 13)
!8389 = !DILocation(line: 186, column: 13, scope: !8374)
!8390 = !DILocation(line: 188, column: 26, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8388, file: !1307, line: 186, column: 41)
!8392 = !DILocation(line: 188, column: 24, scope: !8391)
!8393 = !DILocation(line: 189, column: 13, scope: !8391)
!8394 = !DILocation(line: 178, column: 46, scope: !8375)
!8395 = !DILocation(line: 178, column: 19, scope: !8375)
!8396 = distinct !{!8396, !8369, !8397}
!8397 = !DILocation(line: 191, column: 5, scope: !8370)
!8398 = !DILocation(line: 222, column: 12, scope: !8348)
!8399 = !DILocation(line: 223, column: 1, scope: !8348)
!8400 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !1307, file: !1307, line: 240, type: !8401, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !8403)
!8401 = !DISubroutineType(types: !8402)
!8402 = !{!8319, !175}
!8403 = !{!8404}
!8404 = !DILocalVariable(name: "index", arg: 1, scope: !8400, file: !1307, line: 240, type: !175)
!8405 = !DILocation(line: 0, scope: !8400)
!8406 = !DILocation(line: 242, column: 13, scope: !8400)
!8407 = !DILocation(line: 242, column: 5, scope: !8400)
!8408 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !1307, file: !1307, line: 254, type: !8409, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !8411)
!8409 = !DISubroutineType(types: !8410)
!8410 = !{null, !6094, !194, !951}
!8411 = !{!8412, !8413, !8414, !8415, !8417, !8418}
!8412 = !DILocalVariable(name: "CS", arg: 1, scope: !8408, file: !1307, line: 254, type: !6094)
!8413 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !8408, file: !1307, line: 254, type: !194)
!8414 = !DILocalVariable(name: "flashid", arg: 3, scope: !8408, file: !1307, line: 254, type: !951)
!8415 = !DILocalVariable(name: "cmd", scope: !8416, file: !1307, line: 258, type: !378)
!8416 = distinct !DILexicalBlock(scope: !8408, file: !1307, line: 257, column: 5)
!8417 = !DILocalVariable(name: "id", scope: !8416, file: !1307, line: 258, type: !1242)
!8418 = !DILocalVariable(name: "i", scope: !8416, file: !1307, line: 258, type: !378)
!8419 = !DILocation(line: 0, scope: !8408)
!8420 = !DILocation(line: 258, column: 9, scope: !8416)
!8421 = !DILocation(line: 258, column: 22, scope: !8416)
!8422 = !DILocation(line: 0, scope: !8416)
!8423 = !DILocation(line: 260, column: 13, scope: !8416)
!8424 = !DILocation(line: 261, column: 9, scope: !8416)
!8425 = !DILocation(line: 263, column: 13, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8416, file: !1307, line: 263, column: 13)
!8427 = !DILocation(line: 263, column: 27, scope: !8426)
!8428 = !DILocation(line: 263, column: 48, scope: !8426)
!8429 = !DILocation(line: 263, column: 13, scope: !8416)
!8430 = !DILocation(line: 264, column: 17, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8426, file: !1307, line: 263, column: 95)
!8432 = !DILocation(line: 265, column: 13, scope: !8431)
!8433 = !DILocation(line: 266, column: 9, scope: !8431)
!8434 = !DILocation(line: 268, column: 9, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8416, file: !1307, line: 268, column: 9)
!8436 = !DILocation(line: 269, column: 26, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8438, file: !1307, line: 268, column: 50)
!8438 = distinct !DILexicalBlock(scope: !8435, file: !1307, line: 268, column: 9)
!8439 = !DILocation(line: 269, column: 13, scope: !8437)
!8440 = !DILocation(line: 269, column: 24, scope: !8437)
!8441 = !DILocation(line: 268, column: 46, scope: !8438)
!8442 = !DILocation(line: 268, column: 23, scope: !8438)
!8443 = distinct !{!8443, !8434, !8444}
!8444 = !DILocation(line: 270, column: 9, scope: !8435)
!8445 = !DILocation(line: 271, column: 5, scope: !8408)
!8446 = !DILocation(line: 272, column: 5, scope: !8408)
!8447 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !1307, file: !1307, line: 285, type: !6572, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !8448)
!8448 = !{!8449, !8450, !8451, !8452}
!8449 = !DILocalVariable(name: "id", arg: 1, scope: !8447, file: !1307, line: 285, type: !680)
!8450 = !DILocalVariable(name: "i", scope: !8447, file: !1307, line: 289, type: !858)
!8451 = !DILocalVariable(name: "j", scope: !8447, file: !1307, line: 289, type: !858)
!8452 = !DILocalVariable(name: "id_list", scope: !8447, file: !1307, line: 290, type: !8319)
!8453 = !DILocation(line: 0, scope: !8447)
!8454 = !DILocation(line: 294, column: 5, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8447, file: !1307, line: 294, column: 5)
!8456 = !DILocation(line: 294, column: 46, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8455, file: !1307, line: 294, column: 5)
!8458 = !DILocation(line: 294, column: 19, scope: !8457)
!8459 = distinct !{!8459, !8454, !8460}
!8460 = !DILocation(line: 306, column: 5, scope: !8455)
!8461 = !DILocation(line: 296, column: 23, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8463, file: !1307, line: 296, column: 9)
!8463 = distinct !DILexicalBlock(scope: !8464, file: !1307, line: 296, column: 9)
!8464 = distinct !DILexicalBlock(scope: !8457, file: !1307, line: 294, column: 53)
!8465 = !DILocation(line: 296, column: 9, scope: !8463)
!8466 = !DILocation(line: 297, column: 17, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8468, file: !1307, line: 297, column: 17)
!8468 = distinct !DILexicalBlock(scope: !8462, file: !1307, line: 296, column: 51)
!8469 = !DILocation(line: 297, column: 37, scope: !8467)
!8470 = !DILocation(line: 297, column: 34, scope: !8467)
!8471 = !DILocation(line: 297, column: 17, scope: !8468)
!8472 = !DILocation(line: 296, column: 47, scope: !8462)
!8473 = distinct !{!8473, !8465, !8474}
!8474 = !DILocation(line: 300, column: 9, scope: !8463)
!8475 = !DILocation(line: 0, scope: !8463)
!8476 = !DILocation(line: 302, column: 15, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8464, file: !1307, line: 302, column: 13)
!8478 = !DILocation(line: 302, column: 13, scope: !8464)
!8479 = !DILocation(line: 310, column: 1, scope: !8447)
!8480 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !1307, file: !1307, line: 328, type: !6727, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1306, retainedNodes: !8481)
!8481 = !{!8482, !8483, !8484, !8485}
!8482 = !DILocalVariable(name: "i", scope: !8480, file: !1307, line: 331, type: !858)
!8483 = !DILocalVariable(name: "j", scope: !8480, file: !1307, line: 331, type: !858)
!8484 = !DILocalVariable(name: "id", scope: !8480, file: !1307, line: 332, type: !8353)
!8485 = !DILocalVariable(name: "id_list", scope: !8480, file: !1307, line: 333, type: !8319)
!8486 = !DILocation(line: 332, column: 5, scope: !8480)
!8487 = !DILocation(line: 332, column: 17, scope: !8480)
!8488 = !DILocation(line: 0, scope: !8480)
!8489 = !DILocation(line: 336, column: 9, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8480, file: !1307, line: 336, column: 9)
!8491 = !DILocation(line: 336, column: 28, scope: !8490)
!8492 = !DILocation(line: 336, column: 9, scope: !8480)
!8493 = !DILocation(line: 344, column: 60, scope: !8480)
!8494 = !DILocation(line: 344, column: 5, scope: !8480)
!8495 = !DILocation(line: 350, column: 5, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8480, file: !1307, line: 350, column: 5)
!8497 = !DILocation(line: 352, column: 23, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8499, file: !1307, line: 352, column: 9)
!8499 = distinct !DILexicalBlock(scope: !8500, file: !1307, line: 352, column: 9)
!8500 = distinct !DILexicalBlock(scope: !8501, file: !1307, line: 350, column: 53)
!8501 = distinct !DILexicalBlock(scope: !8496, file: !1307, line: 350, column: 5)
!8502 = !DILocation(line: 352, column: 9, scope: !8499)
!8503 = !DILocation(line: 353, column: 17, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8505, file: !1307, line: 353, column: 17)
!8505 = distinct !DILexicalBlock(scope: !8498, file: !1307, line: 352, column: 51)
!8506 = !DILocation(line: 353, column: 37, scope: !8504)
!8507 = !DILocation(line: 353, column: 34, scope: !8504)
!8508 = !DILocation(line: 353, column: 17, scope: !8505)
!8509 = !DILocation(line: 352, column: 47, scope: !8498)
!8510 = distinct !{!8510, !8502, !8511}
!8511 = !DILocation(line: 356, column: 9, scope: !8499)
!8512 = !DILocation(line: 0, scope: !8499)
!8513 = !DILocation(line: 358, column: 15, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8500, file: !1307, line: 358, column: 13)
!8515 = !DILocation(line: 358, column: 13, scope: !8500)
!8516 = !DILocation(line: 360, column: 34, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8514, file: !1307, line: 358, column: 41)
!8518 = !DILocation(line: 360, column: 32, scope: !8517)
!8519 = !DILocation(line: 361, column: 13, scope: !8517)
!8520 = !DILocation(line: 350, column: 46, scope: !8501)
!8521 = !DILocation(line: 350, column: 19, scope: !8501)
!8522 = distinct !{!8522, !8495, !8523}
!8523 = !DILocation(line: 363, column: 5, scope: !8496)
!8524 = !DILocation(line: 364, column: 12, scope: !8480)
!8525 = !DILocation(line: 365, column: 1, scope: !8480)
!8526 = distinct !DISubprogram(name: "NOR_ReadID", scope: !2514, file: !2514, line: 64, type: !8527, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !8533)
!8527 = !DISubroutineType(types: !8528)
!8528 = !{null, !6094, !8529, !951}
!8529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8530, size: 32)
!8530 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !8531)
!8531 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !8532, line: 158, baseType: !952)
!8532 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!8533 = !{!8534, !8535, !8536, !8537, !8538, !8540, !8541}
!8534 = !DILocalVariable(name: "CS", arg: 1, scope: !8526, file: !2514, line: 64, type: !6094)
!8535 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !8526, file: !2514, line: 64, type: !8529)
!8536 = !DILocalVariable(name: "flashid", arg: 3, scope: !8526, file: !2514, line: 64, type: !951)
!8537 = !DILocalVariable(name: "savedMask", scope: !8526, file: !2514, line: 66, type: !175)
!8538 = !DILocalVariable(name: "cmd", scope: !8539, file: !2514, line: 70, type: !378)
!8539 = distinct !DILexicalBlock(scope: !8526, file: !2514, line: 69, column: 5)
!8540 = !DILocalVariable(name: "id", scope: !8539, file: !2514, line: 70, type: !1242)
!8541 = !DILocalVariable(name: "i", scope: !8539, file: !2514, line: 70, type: !378)
!8542 = !DILocation(line: 0, scope: !8526)
!8543 = !DILocation(line: 70, column: 9, scope: !8539)
!8544 = !DILocation(line: 70, column: 22, scope: !8539)
!8545 = !DILocation(line: 0, scope: !8539)
!8546 = !DILocation(line: 72, column: 13, scope: !8539)
!8547 = !DILocation(line: 73, column: 21, scope: !8539)
!8548 = !DILocation(line: 74, column: 9, scope: !8539)
!8549 = !DILocation(line: 75, column: 9, scope: !8539)
!8550 = !DILocation(line: 77, column: 13, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8539, file: !2514, line: 77, column: 13)
!8552 = !DILocation(line: 77, column: 27, scope: !8551)
!8553 = !DILocation(line: 77, column: 48, scope: !8551)
!8554 = !DILocation(line: 77, column: 13, scope: !8539)
!8555 = !DILocation(line: 78, column: 17, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8551, file: !2514, line: 77, column: 87)
!8557 = !DILocation(line: 79, column: 25, scope: !8556)
!8558 = !DILocation(line: 80, column: 13, scope: !8556)
!8559 = !DILocation(line: 81, column: 13, scope: !8556)
!8560 = !DILocation(line: 82, column: 9, scope: !8556)
!8561 = !DILocation(line: 84, column: 9, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8539, file: !2514, line: 84, column: 9)
!8563 = !DILocation(line: 85, column: 26, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8565, file: !2514, line: 84, column: 50)
!8565 = distinct !DILexicalBlock(scope: !8562, file: !2514, line: 84, column: 9)
!8566 = !DILocation(line: 85, column: 13, scope: !8564)
!8567 = !DILocation(line: 85, column: 24, scope: !8564)
!8568 = !DILocation(line: 84, column: 46, scope: !8565)
!8569 = !DILocation(line: 84, column: 23, scope: !8565)
!8570 = distinct !{!8570, !8561, !8571}
!8571 = !DILocation(line: 86, column: 9, scope: !8562)
!8572 = !DILocation(line: 87, column: 5, scope: !8526)
!8573 = !DILocation(line: 89, column: 1, scope: !8526)
!8574 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !1395, file: !1395, line: 248, type: !3362, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8575 = !DILocation(line: 250, column: 5, scope: !8574)
!8576 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !1395, file: !1395, line: 270, type: !3362, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8577 = !DILocation(line: 272, column: 5, scope: !8576)
!8578 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !1395, file: !1395, line: 294, type: !208, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8579 = !DILocation(line: 296, column: 5, scope: !8578)
!8580 = !DILocation(line: 297, column: 5, scope: !8578)
!8581 = distinct !DISubprogram(name: "nor_sweep_device", scope: !1395, file: !1395, line: 304, type: !208, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8582 = !DILocation(line: 309, column: 5, scope: !8581)
!8583 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !1395, file: !1395, line: 312, type: !208, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8584 = !DILocation(line: 317, column: 5, scope: !8583)
!8585 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !1395, file: !1395, line: 334, type: !3362, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8586 = !DILocation(line: 336, column: 5, scope: !8585)
!8587 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !1395, file: !1395, line: 353, type: !3362, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8588 = !DILocation(line: 355, column: 5, scope: !8587)
!8589 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !1395, file: !1395, line: 374, type: !208, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8590 = !DILocation(line: 376, column: 5, scope: !8589)
!8591 = !DILocation(line: 377, column: 1, scope: !8589)
!8592 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !1395, file: !1395, line: 395, type: !3362, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8593 = !DILocation(line: 397, column: 5, scope: !8592)
!8594 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !1395, file: !1395, line: 416, type: !3362, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1394, retainedNodes: !210)
!8595 = !DILocation(line: 418, column: 5, scope: !8594)
!8596 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !1406, file: !1406, line: 254, type: !3362, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !210)
!8597 = !DILocation(line: 256, column: 32, scope: !8596)
!8598 = !DILocation(line: 257, column: 5, scope: !8596)
!8599 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !1406, file: !1406, line: 269, type: !6727, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !210)
!8600 = !DILocation(line: 275, column: 24, scope: !8599)
!8601 = !DILocation(line: 278, column: 24, scope: !8599)
!8602 = !DILocation(line: 278, column: 33, scope: !8599)
!8603 = !DILocation(line: 278, column: 49, scope: !8599)
!8604 = !DILocation(line: 278, column: 22, scope: !8599)
!8605 = !DILocation(line: 281, column: 5, scope: !8599)
!8606 = !DILocation(line: 283, column: 34, scope: !8599)
!8607 = !DILocation(line: 283, column: 23, scope: !8599)
!8608 = !DILocation(line: 286, column: 25, scope: !8599)
!8609 = !DILocation(line: 321, column: 5, scope: !8599)
!8610 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !1406, file: !1406, line: 332, type: !6727, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8611)
!8611 = !{!8612}
!8612 = !DILocalVariable(name: "result", scope: !8610, file: !1406, line: 334, type: !858)
!8613 = !DILocation(line: 340, column: 30, scope: !8610)
!8614 = !DILocation(line: 343, column: 24, scope: !8610)
!8615 = !DILocation(line: 344, column: 18, scope: !8610)
!8616 = !DILocation(line: 348, column: 17, scope: !8610)
!8617 = !DILocation(line: 353, column: 19, scope: !8610)
!8618 = !DILocation(line: 354, column: 18, scope: !8610)
!8619 = !DILocation(line: 354, column: 27, scope: !8610)
!8620 = !DILocation(line: 354, column: 43, scope: !8610)
!8621 = !DILocation(line: 350, column: 14, scope: !8610)
!8622 = !DILocation(line: 0, scope: !8610)
!8623 = !DILocation(line: 356, column: 16, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8610, file: !1406, line: 356, column: 9)
!8625 = !DILocation(line: 395, column: 1, scope: !8610)
!8626 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !1406, file: !1406, line: 406, type: !8627, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !210)
!8627 = !DISubroutineType(types: !2466)
!8628 = !DILocation(line: 408, column: 5, scope: !8626)
!8629 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !1406, file: !1406, line: 420, type: !8630, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8632)
!8630 = !DISubroutineType(types: !8631)
!8631 = !{!175, !378}
!8632 = !{!8633, !8634, !8635}
!8633 = !DILocalVariable(name: "CS", arg: 1, scope: !8629, file: !1406, line: 420, type: !378)
!8634 = !DILocalVariable(name: "index", scope: !8629, file: !1406, line: 422, type: !175)
!8635 = !DILocalVariable(name: "list", scope: !8629, file: !1406, line: 423, type: !1723)
!8636 = !DILocation(line: 0, scope: !8629)
!8637 = !DILocation(line: 427, column: 13, scope: !8629)
!8638 = !DILocation(line: 430, column: 34, scope: !8629)
!8639 = !DILocation(line: 430, column: 5, scope: !8629)
!8640 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !1406, file: !1406, line: 442, type: !8641, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8643)
!8641 = !DISubroutineType(types: !8642)
!8642 = !{!175, !175, !1595}
!8643 = !{!8644, !8645, !8646}
!8644 = !DILocalVariable(name: "address", arg: 1, scope: !8640, file: !1406, line: 442, type: !175)
!8645 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !8640, file: !1406, line: 442, type: !1595)
!8646 = !DILocalVariable(name: "i", scope: !8640, file: !1406, line: 444, type: !952)
!8647 = !DILocation(line: 0, scope: !8640)
!8648 = !DILocation(line: 446, column: 23, scope: !8640)
!8649 = !DILocation(line: 448, column: 36, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8651, file: !1406, line: 448, column: 5)
!8651 = distinct !DILexicalBlock(scope: !8640, file: !1406, line: 448, column: 5)
!8652 = !DILocation(line: 448, column: 41, scope: !8650)
!8653 = !DILocation(line: 448, column: 5, scope: !8651)
!8654 = !DILocation(line: 449, column: 39, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8656, file: !1406, line: 449, column: 13)
!8656 = distinct !DILexicalBlock(scope: !8650, file: !1406, line: 448, column: 54)
!8657 = !DILocation(line: 449, column: 21, scope: !8655)
!8658 = !DILocation(line: 449, column: 46, scope: !8655)
!8659 = !DILocation(line: 450, column: 46, scope: !8655)
!8660 = !DILocation(line: 450, column: 25, scope: !8655)
!8661 = !DILocation(line: 449, column: 13, scope: !8656)
!8662 = !DILocation(line: 448, column: 48, scope: !8650)
!8663 = !DILocation(line: 448, column: 29, scope: !8650)
!8664 = !DILocation(line: 448, column: 31, scope: !8650)
!8665 = distinct !{!8665, !8653, !8666}
!8666 = !DILocation(line: 453, column: 5, scope: !8651)
!8667 = !DILocation(line: 454, column: 27, scope: !8640)
!8668 = !DILocation(line: 454, column: 5, scope: !8640)
!8669 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !1406, file: !1406, line: 462, type: !3110, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8670)
!8670 = !{!8671}
!8671 = !DILocalVariable(name: "address", arg: 1, scope: !8669, file: !1406, line: 462, type: !175)
!8672 = !DILocation(line: 0, scope: !8669)
!8673 = !DILocation(line: 464, column: 45, scope: !8669)
!8674 = !DILocation(line: 464, column: 12, scope: !8669)
!8675 = !DILocation(line: 464, column: 5, scope: !8669)
!8676 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !1406, file: !1406, line: 487, type: !3110, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8677)
!8677 = !{!8678, !8679, !8680}
!8678 = !DILocalVariable(name: "address", arg: 1, scope: !8676, file: !1406, line: 487, type: !175)
!8679 = !DILocalVariable(name: "index", scope: !8676, file: !1406, line: 490, type: !175)
!8680 = !DILocalVariable(name: "list", scope: !8676, file: !1406, line: 491, type: !1723)
!8681 = !DILocation(line: 0, scope: !8676)
!8682 = !DILocation(line: 490, column: 22, scope: !8676)
!8683 = !DILocation(line: 495, column: 45, scope: !8676)
!8684 = !DILocation(line: 495, column: 12, scope: !8676)
!8685 = !DILocation(line: 495, column: 5, scope: !8676)
!8686 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !1406, file: !1406, line: 517, type: !8687, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8691)
!8687 = !DISubroutineType(types: !8688)
!8688 = !{!858, !8689}
!8689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8690, size: 32)
!8690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1609)
!8691 = !{!8692, !8693, !8694}
!8692 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !8686, file: !1406, line: 517, type: !8689)
!8693 = !DILocalVariable(name: "result", scope: !8686, file: !1406, line: 519, type: !175)
!8694 = !DILocalVariable(name: "i", scope: !8686, file: !1406, line: 519, type: !175)
!8695 = !DILocation(line: 0, scope: !8686)
!8696 = !DILocation(line: 522, column: 29, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8698, file: !1406, line: 522, column: 5)
!8698 = distinct !DILexicalBlock(scope: !8686, file: !1406, line: 522, column: 5)
!8699 = !DILocation(line: 522, column: 38, scope: !8697)
!8700 = !DILocation(line: 522, column: 5, scope: !8698)
!8701 = !DILocation(line: 523, column: 31, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8697, file: !1406, line: 522, column: 51)
!8703 = !DILocation(line: 523, column: 37, scope: !8702)
!8704 = !DILocation(line: 523, column: 16, scope: !8702)
!8705 = !DILocation(line: 522, column: 45, scope: !8697)
!8706 = distinct !{!8706, !8700, !8707}
!8707 = !DILocation(line: 524, column: 5, scope: !8698)
!8708 = !DILocation(line: 525, column: 5, scope: !8686)
!8709 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !1406, file: !1406, line: 535, type: !8710, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8712)
!8710 = !DISubroutineType(types: !8711)
!8711 = !{!175, !175, !175, !1421, !1595}
!8712 = !{!8713, !8714, !8715, !8716, !8717, !8718, !8719, !8720, !8721}
!8713 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !8709, file: !1406, line: 536, type: !175)
!8714 = !DILocalVariable(name: "length", arg: 2, scope: !8709, file: !1406, line: 537, type: !175)
!8715 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !8709, file: !1406, line: 538, type: !1421)
!8716 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !8709, file: !1406, line: 539, type: !1595)
!8717 = !DILocalVariable(name: "addr", scope: !8709, file: !1406, line: 541, type: !175)
!8718 = !DILocalVariable(name: "ptr", scope: !8709, file: !1406, line: 541, type: !175)
!8719 = !DILocalVariable(name: "blksize", scope: !8709, file: !1406, line: 541, type: !175)
!8720 = !DILocalVariable(name: "total_blocks", scope: !8709, file: !1406, line: 541, type: !175)
!8721 = !DILocalVariable(name: "endaddr", scope: !8709, file: !1406, line: 542, type: !175)
!8722 = !DILocation(line: 0, scope: !8709)
!8723 = !DILocation(line: 542, column: 33, scope: !8709)
!8724 = !DILocation(line: 557, column: 59, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8726, file: !1406, line: 557, column: 5)
!8726 = distinct !DILexicalBlock(scope: !8709, file: !1406, line: 557, column: 5)
!8727 = !DILocation(line: 557, column: 5, scope: !8726)
!8728 = !DILocation(line: 560, column: 19, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8725, file: !1406, line: 559, column: 5)
!8730 = !DILocation(line: 562, column: 26, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8729, file: !1406, line: 562, column: 13)
!8732 = !DILocation(line: 0, scope: !8731)
!8733 = !DILocation(line: 562, column: 13, scope: !8729)
!8734 = !DILocation(line: 563, column: 39, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8731, file: !1406, line: 562, column: 34)
!8736 = !DILocation(line: 564, column: 29, scope: !8735)
!8737 = !DILocation(line: 564, column: 42, scope: !8735)
!8738 = !DILocation(line: 565, column: 9, scope: !8735)
!8739 = !DILocation(line: 567, column: 45, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8731, file: !1406, line: 567, column: 18)
!8741 = !DILocation(line: 567, column: 26, scope: !8740)
!8742 = !DILocation(line: 567, column: 18, scope: !8731)
!8743 = !DILocation(line: 568, column: 29, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8740, file: !1406, line: 567, column: 59)
!8745 = !DILocation(line: 568, column: 41, scope: !8744)
!8746 = !DILocation(line: 569, column: 9, scope: !8744)
!8747 = !DILocation(line: 572, column: 16, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8740, file: !1406, line: 571, column: 14)
!8749 = !DILocation(line: 573, column: 21, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8748, file: !1406, line: 573, column: 17)
!8751 = !DILocation(line: 573, column: 17, scope: !8748)
!8752 = !DILocation(line: 576, column: 29, scope: !8748)
!8753 = !DILocation(line: 576, column: 39, scope: !8748)
!8754 = !DILocation(line: 577, column: 29, scope: !8748)
!8755 = !DILocation(line: 577, column: 42, scope: !8748)
!8756 = !DILocation(line: 0, scope: !8726)
!8757 = !DILocation(line: 579, column: 14, scope: !8729)
!8758 = !DILocation(line: 580, column: 21, scope: !8729)
!8759 = distinct !{!8759, !8727, !8760}
!8760 = !DILocation(line: 581, column: 5, scope: !8726)
!8761 = !DILocation(line: 586, column: 1, scope: !8709)
!8762 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !1406, file: !1406, line: 593, type: !8763, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8765)
!8763 = !DISubroutineType(types: !8764)
!8764 = !{!858, !175, !175, !1421}
!8765 = !{!8766, !8767, !8768}
!8766 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !8762, file: !1406, line: 593, type: !175)
!8767 = !DILocalVariable(name: "length", arg: 2, scope: !8762, file: !1406, line: 593, type: !175)
!8768 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !8762, file: !1406, line: 593, type: !1421)
!8769 = !DILocation(line: 0, scope: !8762)
!8770 = !DILocation(line: 595, column: 12, scope: !8762)
!8771 = !DILocation(line: 595, column: 5, scope: !8762)
!8772 = !DILocation(line: 597, column: 81, scope: !8762)
!8773 = !DILocation(line: 597, column: 12, scope: !8762)
!8774 = !DILocation(line: 597, column: 5, scope: !8762)
!8775 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !1406, file: !1406, line: 606, type: !8763, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8776)
!8776 = !{!8777, !8778, !8779}
!8777 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !8775, file: !1406, line: 606, type: !175)
!8778 = !DILocalVariable(name: "length", arg: 2, scope: !8775, file: !1406, line: 606, type: !175)
!8779 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !8775, file: !1406, line: 606, type: !1421)
!8780 = !DILocation(line: 0, scope: !8775)
!8781 = !DILocation(line: 624, column: 5, scope: !8775)
!8782 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !1406, file: !1406, line: 637, type: !8763, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8783)
!8783 = !{!8784, !8785, !8786, !8787, !8788}
!8784 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !8782, file: !1406, line: 637, type: !175)
!8785 = !DILocalVariable(name: "length", arg: 2, scope: !8782, file: !1406, line: 637, type: !175)
!8786 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !8782, file: !1406, line: 637, type: !1421)
!8787 = !DILocalVariable(name: "index", scope: !8782, file: !1406, line: 642, type: !175)
!8788 = !DILocalVariable(name: "list", scope: !8782, file: !1406, line: 644, type: !1723)
!8789 = !DILocation(line: 0, scope: !8782)
!8790 = !DILocation(line: 642, column: 22, scope: !8782)
!8791 = !DILocation(line: 648, column: 81, scope: !8782)
!8792 = !DILocation(line: 648, column: 12, scope: !8782)
!8793 = !DILocation(line: 648, column: 5, scope: !8782)
!8794 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !1406, file: !1406, line: 658, type: !8763, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8795)
!8795 = !{!8796, !8797, !8798}
!8796 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !8794, file: !1406, line: 658, type: !175)
!8797 = !DILocalVariable(name: "length", arg: 2, scope: !8794, file: !1406, line: 658, type: !175)
!8798 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !8794, file: !1406, line: 658, type: !1421)
!8799 = !DILocation(line: 0, scope: !8794)
!8800 = !DILocation(line: 688, column: 5, scope: !8794)
!8801 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !1406, file: !1406, line: 700, type: !6161, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8802)
!8802 = !{!8803, !8804, !8805}
!8803 = !DILocalVariable(name: "CS", arg: 1, scope: !8801, file: !1406, line: 700, type: !6094)
!8804 = !DILocalVariable(name: "index", scope: !8801, file: !1406, line: 705, type: !175)
!8805 = !DILocalVariable(name: "list", scope: !8801, file: !1406, line: 707, type: !1723)
!8806 = !DILocation(line: 0, scope: !8801)
!8807 = !DILocation(line: 705, column: 22, scope: !8801)
!8808 = !DILocation(line: 711, column: 24, scope: !8801)
!8809 = !DILocation(line: 711, column: 5, scope: !8801)
!8810 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !1406, file: !1406, line: 721, type: !8811, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8813)
!8811 = !DISubroutineType(types: !8812)
!8812 = !{null, !1641, !920, !175}
!8813 = !{!8814, !8815, !8816}
!8814 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !8810, file: !1406, line: 721, type: !1641)
!8815 = !DILocalVariable(name: "index", arg: 2, scope: !8810, file: !1406, line: 721, type: !920)
!8816 = !DILocalVariable(name: "bankSize", arg: 3, scope: !8810, file: !1406, line: 721, type: !175)
!8817 = !DILocation(line: 0, scope: !8810)
!8818 = !DILocation(line: 723, column: 18, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8810, file: !1406, line: 723, column: 9)
!8820 = !DILocation(line: 723, column: 26, scope: !8819)
!8821 = !DILocation(line: 723, column: 35, scope: !8819)
!8822 = !DILocation(line: 723, column: 9, scope: !8810)
!8823 = !DILocation(line: 724, column: 26, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8819, file: !1406, line: 723, column: 48)
!8825 = !DILocation(line: 724, column: 32, scope: !8824)
!8826 = !DILocation(line: 725, column: 5, scope: !8824)
!8827 = !DILocation(line: 726, column: 18, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8819, file: !1406, line: 725, column: 12)
!8829 = !DILocation(line: 727, column: 26, scope: !8828)
!8830 = !DILocation(line: 727, column: 32, scope: !8828)
!8831 = !DILocation(line: 728, column: 18, scope: !8828)
!8832 = !DILocation(line: 728, column: 26, scope: !8828)
!8833 = !DILocation(line: 728, column: 35, scope: !8828)
!8834 = !DILocation(line: 731, column: 1, scope: !8810)
!8835 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !1406, file: !1406, line: 739, type: !8836, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8838)
!8836 = !DISubroutineType(types: !8837)
!8837 = !{!175, !175, !175, !1641, !8689}
!8838 = !{!8839, !8840, !8841, !8842, !8843, !8844, !8845, !8846, !8847}
!8839 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !8835, file: !1406, line: 740, type: !175)
!8840 = !DILocalVariable(name: "length", arg: 2, scope: !8835, file: !1406, line: 741, type: !175)
!8841 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !8835, file: !1406, line: 742, type: !1641)
!8842 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !8835, file: !1406, line: 743, type: !8689)
!8843 = !DILocalVariable(name: "Partition", scope: !8835, file: !1406, line: 745, type: !175)
!8844 = !DILocalVariable(name: "Index", scope: !8835, file: !1406, line: 746, type: !858)
!8845 = !DILocalVariable(name: "bankSize", scope: !8835, file: !1406, line: 747, type: !175)
!8846 = !DILocalVariable(name: "NextBankAddr", scope: !8835, file: !1406, line: 748, type: !175)
!8847 = !DILocalVariable(name: "srcBankIdx", scope: !8835, file: !1406, line: 748, type: !175)
!8848 = !DILocation(line: 0, scope: !8835)
!8849 = !DILocation(line: 750, column: 12, scope: !8835)
!8850 = !DILocation(line: 750, column: 5, scope: !8835)
!8851 = !DILocation(line: 752, column: 51, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8853, file: !1406, line: 752, column: 5)
!8853 = distinct !DILexicalBlock(scope: !8835, file: !1406, line: 752, column: 5)
!8854 = !DILocation(line: 752, column: 5, scope: !8853)
!8855 = !DILocation(line: 753, column: 51, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8857, file: !1406, line: 753, column: 13)
!8857 = distinct !DILexicalBlock(scope: !8852, file: !1406, line: 752, column: 70)
!8858 = !DILocation(line: 753, column: 24, scope: !8856)
!8859 = !DILocation(line: 753, column: 13, scope: !8857)
!8860 = !DILocation(line: 758, column: 49, scope: !8857)
!8861 = !DILocation(line: 758, column: 22, scope: !8857)
!8862 = !DILocation(line: 760, column: 22, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8857, file: !1406, line: 760, column: 13)
!8864 = !DILocation(line: 760, column: 13, scope: !8857)
!8865 = !DILocation(line: 761, column: 37, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8863, file: !1406, line: 760, column: 39)
!8867 = !DILocation(line: 762, column: 24, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8866, file: !1406, line: 762, column: 17)
!8869 = !DILocation(line: 762, column: 17, scope: !8866)
!8870 = !DILocation(line: 767, column: 33, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8866, file: !1406, line: 767, column: 17)
!8872 = !DILocation(line: 767, column: 42, scope: !8871)
!8873 = !DILocation(line: 767, column: 17, scope: !8866)
!8874 = !DILocation(line: 768, column: 33, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8871, file: !1406, line: 767, column: 55)
!8876 = !DILocation(line: 768, column: 39, scope: !8875)
!8877 = !DILocation(line: 769, column: 13, scope: !8875)
!8878 = !DILocation(line: 770, column: 46, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8880, file: !1406, line: 770, column: 21)
!8880 = distinct !DILexicalBlock(scope: !8871, file: !1406, line: 769, column: 20)
!8881 = !DILocation(line: 770, column: 21, scope: !8880)
!8882 = !DILocation(line: 773, column: 33, scope: !8880)
!8883 = !DILocation(line: 773, column: 39, scope: !8880)
!8884 = !DILocation(line: 774, column: 33, scope: !8880)
!8885 = !DILocation(line: 774, column: 42, scope: !8880)
!8886 = !DILocation(line: 777, column: 22, scope: !8866)
!8887 = !DILocation(line: 778, column: 20, scope: !8866)
!8888 = !DILocation(line: 779, column: 9, scope: !8866)
!8889 = !DILocation(line: 746, column: 13, scope: !8835)
!8890 = !DILocation(line: 752, column: 66, scope: !8852)
!8891 = distinct !{!8891, !8854, !8892}
!8892 = !DILocation(line: 781, column: 5, scope: !8853)
!8893 = !DILocation(line: 784, column: 5, scope: !8835)
!8894 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !1406, file: !1406, line: 796, type: !6727, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8895)
!8895 = !{!8896, !8897}
!8896 = !DILocalVariable(name: "result", scope: !8894, file: !1406, line: 798, type: !858)
!8897 = !DILocalVariable(name: "i", scope: !8894, file: !1406, line: 799, type: !858)
!8898 = !DILocation(line: 803, column: 19, scope: !8894)
!8899 = !DILocation(line: 803, column: 28, scope: !8894)
!8900 = !DILocation(line: 803, column: 17, scope: !8894)
!8901 = !DILocation(line: 822, column: 33, scope: !8894)
!8902 = !DILocation(line: 822, column: 56, scope: !8894)
!8903 = !DILocation(line: 822, column: 88, scope: !8894)
!8904 = !DILocation(line: 822, column: 97, scope: !8894)
!8905 = !DILocation(line: 822, column: 5, scope: !8894)
!8906 = !DILocation(line: 829, column: 39, scope: !8894)
!8907 = !DILocation(line: 829, column: 62, scope: !8894)
!8908 = !DILocation(line: 829, column: 14, scope: !8894)
!8909 = !DILocation(line: 0, scope: !8894)
!8910 = !DILocation(line: 834, column: 16, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8894, file: !1406, line: 834, column: 9)
!8912 = !DILocation(line: 834, column: 9, scope: !8894)
!8913 = !DILocation(line: 838, column: 30, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8894, file: !1406, line: 838, column: 5)
!8915 = !DILocation(line: 838, column: 58, scope: !8914)
!8916 = !DILocation(line: 838, column: 78, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8914, file: !1406, line: 838, column: 5)
!8918 = !DILocation(line: 838, column: 88, scope: !8917)
!8919 = !DILocation(line: 838, column: 5, scope: !8914)
!8920 = !DILocation(line: 839, column: 39, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8917, file: !1406, line: 838, column: 102)
!8922 = !DILocation(line: 839, column: 22, scope: !8921)
!8923 = !DILocation(line: 840, column: 37, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8921, file: !1406, line: 840, column: 13)
!8925 = !DILocation(line: 840, column: 13, scope: !8921)
!8926 = !DILocation(line: 841, column: 36, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8924, file: !1406, line: 840, column: 63)
!8928 = !DILocation(line: 842, column: 9, scope: !8927)
!8929 = !DILocation(line: 838, column: 95, scope: !8917)
!8930 = distinct !{!8930, !8919, !8931}
!8931 = !DILocation(line: 843, column: 5, scope: !8914)
!8932 = !DILocation(line: 871, column: 49, scope: !8894)
!8933 = !DILocation(line: 871, column: 72, scope: !8894)
!8934 = !DILocation(line: 871, column: 47, scope: !8894)
!8935 = !DILocation(line: 871, column: 97, scope: !8894)
!8936 = !DILocation(line: 871, column: 19, scope: !8894)
!8937 = !DILocation(line: 882, column: 14, scope: !8894)
!8938 = !DILocation(line: 887, column: 13, scope: !8894)
!8939 = !DILocation(line: 887, column: 22, scope: !8894)
!8940 = !DILocation(line: 887, column: 5, scope: !8894)
!8941 = !DILocation(line: 889, column: 22, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8894, file: !1406, line: 887, column: 34)
!8943 = !DILocation(line: 890, column: 13, scope: !8942)
!8944 = !DILocation(line: 902, column: 1, scope: !8894)
!8945 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !1406, file: !1406, line: 912, type: !8946, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8948)
!8946 = !DISubroutineType(types: !8947)
!8947 = !{null, !690}
!8948 = !{!8949}
!8949 = !DILocalVariable(name: "CS", arg: 1, scope: !8945, file: !1406, line: 912, type: !690)
!8950 = !DILocation(line: 0, scope: !8945)
!8951 = !DILocation(line: 914, column: 12, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8945, file: !1406, line: 914, column: 9)
!8953 = !DILocation(line: 914, column: 9, scope: !8945)
!8954 = !DILocation(line: 918, column: 26, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8952, file: !1406, line: 914, column: 18)
!8956 = !DILocation(line: 918, column: 24, scope: !8955)
!8957 = !DILocation(line: 920, column: 28, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8955, file: !1406, line: 920, column: 13)
!8959 = !DILocation(line: 920, column: 13, scope: !8955)
!8960 = !DILocation(line: 921, column: 13, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8962, file: !1406, line: 921, column: 13)
!8962 = distinct !DILexicalBlock(scope: !8963, file: !1406, line: 921, column: 13)
!8963 = distinct !DILexicalBlock(scope: !8964, file: !1406, line: 921, column: 13)
!8964 = distinct !DILexicalBlock(scope: !8958, file: !1406, line: 920, column: 33)
!8965 = !DILocation(line: 923, column: 19, scope: !8955)
!8966 = !DILocation(line: 923, column: 17, scope: !8955)
!8967 = !DILocation(line: 924, column: 5, scope: !8955)
!8968 = !DILocation(line: 935, column: 14, scope: !8945)
!8969 = !DILocation(line: 936, column: 1, scope: !8945)
!8970 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !1406, file: !1406, line: 952, type: !6727, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !210)
!8971 = !DILocation(line: 955, column: 5, scope: !8970)
!8972 = !DILocation(line: 956, column: 12, scope: !8970)
!8973 = !DILocation(line: 956, column: 5, scope: !8970)
!8974 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !1406, file: !1406, line: 974, type: !6727, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !8975)
!8975 = !{!8976}
!8976 = !DILocalVariable(name: "result", scope: !8974, file: !1406, line: 976, type: !858)
!8977 = !DILocation(line: 981, column: 5, scope: !8974)
!8978 = !DILocation(line: 986, column: 24, scope: !8974)
!8979 = !DILocation(line: 986, column: 33, scope: !8974)
!8980 = !DILocation(line: 986, column: 49, scope: !8974)
!8981 = !DILocation(line: 986, column: 22, scope: !8974)
!8982 = !DILocation(line: 1002, column: 19, scope: !8974)
!8983 = !DILocation(line: 1002, column: 17, scope: !8974)
!8984 = !DILocation(line: 1014, column: 22, scope: !8974)
!8985 = !DILocation(line: 1014, column: 5, scope: !8974)
!8986 = !DILocation(line: 1024, column: 33, scope: !8974)
!8987 = !DILocation(line: 1026, column: 27, scope: !8974)
!8988 = !DILocation(line: 1027, column: 26, scope: !8974)
!8989 = !DILocation(line: 1042, column: 33, scope: !8974)
!8990 = !DILocation(line: 1044, column: 32, scope: !8974)
!8991 = !DILocation(line: 1052, column: 18, scope: !8974)
!8992 = !DILocation(line: 1052, column: 27, scope: !8974)
!8993 = !DILocation(line: 1052, column: 43, scope: !8974)
!8994 = !DILocation(line: 1048, column: 14, scope: !8974)
!8995 = !DILocation(line: 0, scope: !8974)
!8996 = !DILocation(line: 1063, column: 5, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8998, file: !1406, line: 1063, column: 5)
!8998 = distinct !DILexicalBlock(scope: !8974, file: !1406, line: 1063, column: 5)
!8999 = !DILocation(line: 1063, column: 5, scope: !8998)
!9000 = !DILocation(line: 1063, column: 5, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8997, file: !1406, line: 1063, column: 5)
!9002 = !DILocation(line: 1096, column: 36, scope: !8974)
!9003 = !DILocation(line: 1096, column: 34, scope: !8974)
!9004 = !DILocation(line: 1101, column: 5, scope: !8974)
!9005 = !DILocation(line: 1103, column: 34, scope: !8974)
!9006 = !DILocation(line: 1109, column: 35, scope: !8974)
!9007 = !DILocation(line: 1110, column: 33, scope: !8974)
!9008 = !DILocation(line: 1111, column: 34, scope: !8974)
!9009 = !DILocation(line: 1113, column: 5, scope: !8974)
!9010 = distinct !DISubprogram(name: "CreateFDMLock", scope: !1764, file: !1764, line: 84, type: !208, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !210)
!9011 = !DILocation(line: 86, column: 1, scope: !9010)
!9012 = distinct !DISubprogram(name: "GetFDMLock", scope: !1764, file: !1764, line: 87, type: !7193, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9013)
!9013 = !{!9014}
!9014 = !DILocalVariable(name: "savedMask", scope: !9012, file: !1764, line: 89, type: !858)
!9015 = !DILocation(line: 90, column: 17, scope: !9012)
!9016 = !DILocation(line: 0, scope: !9012)
!9017 = !DILocation(line: 91, column: 9, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !9012, file: !1764, line: 91, column: 9)
!9019 = !DILocation(line: 91, column: 9, scope: !9012)
!9020 = !DILocation(line: 92, column: 17, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9018, file: !1764, line: 91, column: 24)
!9022 = !DILocation(line: 94, column: 9, scope: !9021)
!9023 = !DILocation(line: 0, scope: !9018)
!9024 = !DILocation(line: 102, column: 1, scope: !9012)
!9025 = distinct !DISubprogram(name: "FreeFDMLock", scope: !1764, file: !1764, line: 103, type: !208, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9026)
!9026 = !{!9027}
!9027 = !DILocalVariable(name: "savedMask", scope: !9025, file: !1764, line: 105, type: !858)
!9028 = !DILocation(line: 106, column: 17, scope: !9025)
!9029 = !DILocation(line: 0, scope: !9025)
!9030 = !DILocation(line: 107, column: 9, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9025, file: !1764, line: 107, column: 9)
!9032 = !DILocation(line: 107, column: 9, scope: !9025)
!9033 = !DILocation(line: 108, column: 17, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9031, file: !1764, line: 107, column: 24)
!9035 = !DILocation(line: 109, column: 9, scope: !9034)
!9036 = !DILocation(line: 114, column: 1, scope: !9025)
!9037 = !DILocation(line: 111, column: 9, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9031, file: !1764, line: 110, column: 12)
!9039 = !DILocation(line: 112, column: 9, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9041, file: !1764, line: 112, column: 9)
!9041 = distinct !DILexicalBlock(scope: !9042, file: !1764, line: 112, column: 9)
!9042 = distinct !DILexicalBlock(scope: !9038, file: !1764, line: 112, column: 9)
!9043 = distinct !DISubprogram(name: "create_FDM_lock", scope: !1764, file: !1764, line: 119, type: !208, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !210)
!9044 = !DILocation(line: 123, column: 1, scope: !9043)
!9045 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !1764, file: !1764, line: 130, type: !208, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9046)
!9046 = !{!9047}
!9047 = !DILocalVariable(name: "Result", scope: !9045, file: !1764, line: 132, type: !1820)
!9048 = !DILocation(line: 133, column: 5, scope: !9045)
!9049 = !DILocation(line: 134, column: 18, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !9045, file: !1764, line: 133, column: 8)
!9051 = !DILocation(line: 0, scope: !9045)
!9052 = !DILocation(line: 135, column: 21, scope: !9045)
!9053 = !DILocation(line: 135, column: 5, scope: !9050)
!9054 = distinct !{!9054, !9048, !9055}
!9055 = !DILocation(line: 135, column: 43, scope: !9045)
!9056 = !DILocation(line: 136, column: 1, scope: !9045)
!9057 = distinct !DISubprogram(name: "release_FDM_lock", scope: !1764, file: !1764, line: 143, type: !208, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !210)
!9058 = !DILocation(line: 147, column: 5, scope: !9057)
!9059 = !DILocation(line: 148, column: 1, scope: !9057)
!9060 = distinct !DISubprogram(name: "readRawDiskData", scope: !1764, file: !1764, line: 216, type: !9061, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9102)
!9061 = !DISubroutineType(types: !9062)
!9062 = !{!858, !9063, !175, !680, !175}
!9063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9064, size: 32)
!9064 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1711, line: 93, baseType: !9065)
!9065 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1711, line: 83, size: 1056, elements: !9066)
!9066 = !{!9067, !9068, !9088, !9089, !9101}
!9067 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !9065, file: !1711, line: 84, baseType: !175, size: 32)
!9068 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !9065, file: !1711, line: 85, baseType: !9069, size: 32, offset: 32)
!9069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9070, size: 32)
!9070 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1178, line: 121, baseType: !9071)
!9071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 105, size: 480, elements: !9072)
!9072 = !{!9073, !9074, !9075, !9076, !9077, !9078, !9079, !9080, !9081, !9082, !9083, !9084, !9085, !9086, !9087}
!9073 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !9071, file: !1178, line: 106, baseType: !1452, size: 32)
!9074 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !9071, file: !1178, line: 107, baseType: !1253, size: 32, offset: 32)
!9075 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !9071, file: !1178, line: 108, baseType: !1457, size: 32, offset: 64)
!9076 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !9071, file: !1178, line: 109, baseType: !1461, size: 32, offset: 96)
!9077 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !9071, file: !1178, line: 110, baseType: !1465, size: 32, offset: 128)
!9078 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !9071, file: !1178, line: 111, baseType: !1461, size: 32, offset: 160)
!9079 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !9071, file: !1178, line: 112, baseType: !1470, size: 32, offset: 192)
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !9071, file: !1178, line: 113, baseType: !1461, size: 32, offset: 224)
!9081 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !9071, file: !1178, line: 114, baseType: !1461, size: 32, offset: 256)
!9082 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !9071, file: !1178, line: 115, baseType: !1461, size: 32, offset: 288)
!9083 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !9071, file: !1178, line: 116, baseType: !1477, size: 32, offset: 320)
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !9071, file: !1178, line: 117, baseType: !1482, size: 32, offset: 352)
!9085 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !9071, file: !1178, line: 118, baseType: !1487, size: 32, offset: 384)
!9086 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !9071, file: !1178, line: 119, baseType: !1491, size: 32, offset: 416)
!9087 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !9071, file: !1178, line: 120, baseType: !1495, size: 32, offset: 448)
!9088 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !9065, file: !1711, line: 86, baseType: !194, size: 32, offset: 64)
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !9065, file: !1711, line: 87, baseType: !9090, size: 928, offset: 96)
!9090 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1178, line: 99, baseType: !9091)
!9091 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 90, size: 928, elements: !9092)
!9092 = !{!9093, !9094, !9095, !9096, !9097, !9098, !9099, !9100}
!9093 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !9091, file: !1178, line: 91, baseType: !175, size: 32)
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !9091, file: !1178, line: 92, baseType: !1509, size: 256, offset: 32)
!9095 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !9091, file: !1178, line: 93, baseType: !1509, size: 256, offset: 288)
!9096 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !9091, file: !1178, line: 94, baseType: !1509, size: 256, offset: 544)
!9097 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !9091, file: !1178, line: 95, baseType: !175, size: 32, offset: 800)
!9098 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !9091, file: !1178, line: 96, baseType: !1501, size: 16, offset: 832)
!9099 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !9091, file: !1178, line: 97, baseType: !175, size: 32, offset: 864)
!9100 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !9091, file: !1178, line: 98, baseType: !175, size: 32, offset: 896)
!9101 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !9065, file: !1711, line: 92, baseType: !211, size: 8, offset: 1024)
!9102 = !{!9103, !9104, !9105, !9106, !9107, !9108}
!9103 = !DILocalVariable(name: "D", arg: 1, scope: !9060, file: !1764, line: 216, type: !9063)
!9104 = !DILocalVariable(name: "addr", arg: 2, scope: !9060, file: !1764, line: 216, type: !175)
!9105 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9060, file: !1764, line: 216, type: !680)
!9106 = !DILocalVariable(name: "len", arg: 4, scope: !9060, file: !1764, line: 216, type: !175)
!9107 = !DILocalVariable(name: "phyAddr", scope: !9060, file: !1764, line: 219, type: !175)
!9108 = !DILocalVariable(name: "diskSize", scope: !9060, file: !1764, line: 220, type: !175)
!9109 = !DILocation(line: 0, scope: !9060)
!9110 = !DILocation(line: 220, column: 28, scope: !9060)
!9111 = !DILocation(line: 222, column: 14, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9060, file: !1764, line: 222, column: 9)
!9113 = !DILocation(line: 222, column: 26, scope: !9112)
!9114 = !DILocation(line: 225, column: 51, scope: !9060)
!9115 = !DILocation(line: 225, column: 61, scope: !9060)
!9116 = !DILocation(line: 225, column: 15, scope: !9060)
!9117 = !DILocation(line: 225, column: 70, scope: !9060)
!9118 = !DILocation(line: 227, column: 13, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9060, file: !1764, line: 227, column: 9)
!9120 = !DILocation(line: 227, column: 9, scope: !9060)
!9121 = !DILocation(line: 228, column: 9, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9119, file: !1764, line: 227, column: 23)
!9123 = !DILocation(line: 229, column: 5, scope: !9122)
!9124 = !DILocation(line: 231, column: 5, scope: !9060)
!9125 = !DILocation(line: 233, column: 22, scope: !9060)
!9126 = !DILocation(line: 233, column: 5, scope: !9060)
!9127 = !DILocation(line: 235, column: 5, scope: !9060)
!9128 = !DILocation(line: 237, column: 5, scope: !9060)
!9129 = !DILocation(line: 238, column: 1, scope: !9060)
!9130 = distinct !DISubprogram(name: "MountDevice", scope: !1764, file: !1764, line: 165, type: !9131, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9133)
!9131 = !DISubroutineType(types: !9132)
!9132 = !{null, !9063}
!9133 = !{!9134, !9135}
!9134 = !DILocalVariable(name: "D", arg: 1, scope: !9130, file: !1764, line: 165, type: !9063)
!9135 = !DILocalVariable(name: "Result", scope: !9130, file: !1764, line: 167, type: !858)
!9136 = !DILocation(line: 0, scope: !9130)
!9137 = !DILocation(line: 171, column: 12, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9130, file: !1764, line: 171, column: 9)
!9139 = !DILocation(line: 171, column: 9, scope: !9130)
!9140 = !DILocation(line: 176, column: 5, scope: !9130)
!9141 = !DILocation(line: 186, column: 17, scope: !9130)
!9142 = !DILocation(line: 186, column: 28, scope: !9130)
!9143 = !DILocation(line: 186, column: 43, scope: !9130)
!9144 = !DILocation(line: 186, column: 64, scope: !9130)
!9145 = !DILocation(line: 186, column: 52, scope: !9130)
!9146 = !DILocation(line: 186, column: 14, scope: !9130)
!9147 = !DILocation(line: 188, column: 5, scope: !9130)
!9148 = !DILocation(line: 190, column: 16, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9130, file: !1764, line: 190, column: 9)
!9150 = !DILocation(line: 190, column: 9, scope: !9130)
!9151 = !DILocation(line: 191, column: 9, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9153, file: !1764, line: 191, column: 9)
!9153 = distinct !DILexicalBlock(scope: !9154, file: !1764, line: 191, column: 9)
!9154 = distinct !DILexicalBlock(scope: !9155, file: !1764, line: 191, column: 9)
!9155 = distinct !DILexicalBlock(scope: !9149, file: !1764, line: 190, column: 31)
!9156 = !DILocation(line: 194, column: 17, scope: !9130)
!9157 = !DILocation(line: 195, column: 1, scope: !9130)
!9158 = distinct !DISubprogram(name: "writeRawDiskData", scope: !1764, file: !1764, line: 277, type: !9061, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9159)
!9159 = !{!9160, !9161, !9162, !9163, !9164, !9165, !9166, !9167, !9168, !9169, !9173, !9174, !9175, !9180}
!9160 = !DILocalVariable(name: "D", arg: 1, scope: !9158, file: !1764, line: 277, type: !9063)
!9161 = !DILocalVariable(name: "addr", arg: 2, scope: !9158, file: !1764, line: 277, type: !175)
!9162 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9158, file: !1764, line: 277, type: !680)
!9163 = !DILocalVariable(name: "len", arg: 4, scope: !9158, file: !1764, line: 277, type: !175)
!9164 = !DILocalVariable(name: "dest", scope: !9158, file: !1764, line: 279, type: !175)
!9165 = !DILocalVariable(name: "src", scope: !9158, file: !1764, line: 279, type: !175)
!9166 = !DILocalVariable(name: "diskSize", scope: !9158, file: !1764, line: 280, type: !175)
!9167 = !DILocalVariable(name: "result", scope: !9158, file: !1764, line: 281, type: !858)
!9168 = !DILocalVariable(name: "DoneLength", scope: !9158, file: !1764, line: 282, type: !175)
!9169 = !DILocalVariable(name: "blockSize", scope: !9170, file: !1764, line: 313, type: !175)
!9170 = distinct !DILexicalBlock(scope: !9171, file: !1764, line: 312, column: 14)
!9171 = distinct !DILexicalBlock(scope: !9172, file: !1764, line: 305, column: 13)
!9172 = distinct !DILexicalBlock(scope: !9158, file: !1764, line: 298, column: 30)
!9173 = !DILocalVariable(name: "programBytes", scope: !9170, file: !1764, line: 314, type: !175)
!9174 = !DILocalVariable(name: "nextBlkAddr", scope: !9170, file: !1764, line: 316, type: !175)
!9175 = !DILocalVariable(name: "Cell", scope: !9176, file: !1764, line: 346, type: !9178)
!9176 = distinct !DILexicalBlock(scope: !9177, file: !1764, line: 345, column: 83)
!9177 = distinct !DILexicalBlock(scope: !9170, file: !1764, line: 345, column: 17)
!9178 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !9179, line: 76, baseType: !952)
!9179 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gpt_interrupt_repeat_mode/GCC")
!9180 = !DILocalVariable(name: "b", scope: !9176, file: !1764, line: 347, type: !680)
!9181 = !DILocation(line: 0, scope: !9158)
!9182 = !DILocation(line: 280, column: 28, scope: !9158)
!9183 = !DILocation(line: 284, column: 14, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9158, file: !1764, line: 284, column: 9)
!9185 = !DILocation(line: 284, column: 9, scope: !9158)
!9186 = !DILocation(line: 288, column: 14, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9158, file: !1764, line: 288, column: 9)
!9188 = !DILocation(line: 288, column: 20, scope: !9187)
!9189 = !DILocation(line: 288, column: 9, scope: !9158)
!9190 = !DILocation(line: 292, column: 13, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9158, file: !1764, line: 292, column: 9)
!9192 = !DILocation(line: 292, column: 9, scope: !9158)
!9193 = !DILocation(line: 293, column: 9, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9191, file: !1764, line: 292, column: 23)
!9195 = !DILocation(line: 294, column: 5, scope: !9194)
!9196 = !DILocation(line: 296, column: 5, scope: !9158)
!9197 = !DILocation(line: 346, column: 17, scope: !9176)
!9198 = !DILocation(line: 298, column: 23, scope: !9158)
!9199 = !DILocation(line: 298, column: 5, scope: !9158)
!9200 = !DILocation(line: 299, column: 52, scope: !9172)
!9201 = !DILocation(line: 299, column: 62, scope: !9172)
!9202 = !DILocation(line: 299, column: 16, scope: !9172)
!9203 = !DILocation(line: 299, column: 71, scope: !9172)
!9204 = !DILocation(line: 299, column: 78, scope: !9172)
!9205 = !DILocation(line: 300, column: 34, scope: !9172)
!9206 = !DILocation(line: 302, column: 12, scope: !9172)
!9207 = !DILocation(line: 302, column: 23, scope: !9172)
!9208 = !DILocation(line: 302, column: 81, scope: !9172)
!9209 = !DILocation(line: 302, column: 45, scope: !9172)
!9210 = !DILocation(line: 302, column: 9, scope: !9172)
!9211 = !DILocation(line: 305, column: 29, scope: !9171)
!9212 = !DILocation(line: 305, column: 57, scope: !9171)
!9213 = !DILocation(line: 305, column: 66, scope: !9171)
!9214 = !DILocation(line: 305, column: 80, scope: !9171)
!9215 = !DILocation(line: 305, column: 13, scope: !9172)
!9216 = !DILocation(line: 306, column: 25, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9171, file: !1764, line: 305, column: 87)
!9218 = !DILocation(line: 306, column: 36, scope: !9217)
!9219 = !DILocation(line: 306, column: 51, scope: !9217)
!9220 = !DILocation(line: 306, column: 60, scope: !9217)
!9221 = !DILocation(line: 306, column: 74, scope: !9217)
!9222 = !DILocation(line: 306, column: 22, scope: !9217)
!9223 = !DILocation(line: 307, column: 24, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9217, file: !1764, line: 307, column: 17)
!9225 = !DILocation(line: 307, column: 17, scope: !9217)
!9226 = !DILocation(line: 310, column: 23, scope: !9217)
!9227 = !DILocation(line: 311, column: 9, scope: !9217)
!9228 = !DILocation(line: 313, column: 47, scope: !9170)
!9229 = !DILocation(line: 313, column: 56, scope: !9170)
!9230 = !DILocation(line: 313, column: 34, scope: !9170)
!9231 = !DILocation(line: 0, scope: !9170)
!9232 = !DILocation(line: 316, column: 42, scope: !9170)
!9233 = !DILocation(line: 316, column: 58, scope: !9170)
!9234 = !DILocation(line: 316, column: 55, scope: !9170)
!9235 = !DILocation(line: 326, column: 22, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9170, file: !1764, line: 326, column: 17)
!9237 = !DILocation(line: 326, column: 37, scope: !9236)
!9238 = !DILocation(line: 326, column: 17, scope: !9170)
!9239 = !DILocation(line: 332, column: 43, scope: !9170)
!9240 = !DILocation(line: 345, column: 30, scope: !9177)
!9241 = !DILocation(line: 345, column: 52, scope: !9177)
!9242 = !DILocation(line: 0, scope: !9176)
!9243 = !DILocation(line: 348, column: 26, scope: !9176)
!9244 = !DILocation(line: 348, column: 24, scope: !9176)
!9245 = !DILocation(line: 348, column: 22, scope: !9176)
!9246 = !DILocation(line: 349, column: 41, scope: !9176)
!9247 = !DILocation(line: 349, column: 24, scope: !9176)
!9248 = !DILocation(line: 349, column: 22, scope: !9176)
!9249 = !DILocation(line: 350, column: 29, scope: !9176)
!9250 = !DILocation(line: 350, column: 40, scope: !9176)
!9251 = !DILocation(line: 350, column: 55, scope: !9176)
!9252 = !DILocation(line: 350, column: 64, scope: !9176)
!9253 = !DILocation(line: 350, column: 26, scope: !9176)
!9254 = !DILocation(line: 351, column: 28, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9176, file: !1764, line: 351, column: 21)
!9256 = !DILocation(line: 354, column: 13, scope: !9177)
!9257 = !DILocation(line: 362, column: 33, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9259, file: !1764, line: 361, column: 24)
!9259 = distinct !DILexicalBlock(scope: !9260, file: !1764, line: 355, column: 21)
!9260 = distinct !DILexicalBlock(scope: !9177, file: !1764, line: 354, column: 20)
!9261 = !DILocation(line: 362, column: 44, scope: !9258)
!9262 = !DILocation(line: 362, column: 59, scope: !9258)
!9263 = !DILocation(line: 362, column: 68, scope: !9258)
!9264 = !DILocation(line: 362, column: 82, scope: !9258)
!9265 = !DILocation(line: 362, column: 30, scope: !9258)
!9266 = !DILocation(line: 364, column: 28, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9260, file: !1764, line: 364, column: 21)
!9268 = !DILocation(line: 364, column: 21, scope: !9260)
!9269 = !DILocation(line: 368, column: 24, scope: !9170)
!9270 = !DILocation(line: 0, scope: !9171)
!9271 = distinct !{!9271, !9199, !9272}
!9272 = !DILocation(line: 370, column: 5, scope: !9158)
!9273 = !DILocation(line: 372, column: 5, scope: !9158)
!9274 = !DILocation(line: 379, column: 1, scope: !9158)
!9275 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !1764, file: !1764, line: 398, type: !9276, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9278)
!9276 = !DISubroutineType(types: !9277)
!9277 = !{!858, !9063, !175}
!9278 = !{!9279, !9280, !9281, !9282}
!9279 = !DILocalVariable(name: "D", arg: 1, scope: !9275, file: !1764, line: 398, type: !9063)
!9280 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !9275, file: !1764, line: 398, type: !175)
!9281 = !DILocalVariable(name: "result", scope: !9275, file: !1764, line: 401, type: !858)
!9282 = !DILocalVariable(name: "block_index", scope: !9275, file: !1764, line: 402, type: !175)
!9283 = !DILocation(line: 0, scope: !9275)
!9284 = !DILocation(line: 402, column: 36, scope: !9275)
!9285 = !DILocation(line: 403, column: 13, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9275, file: !1764, line: 403, column: 9)
!9287 = !DILocation(line: 403, column: 9, scope: !9275)
!9288 = !DILocation(line: 404, column: 9, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9286, file: !1764, line: 403, column: 23)
!9290 = !DILocation(line: 405, column: 5, scope: !9289)
!9291 = !DILocation(line: 407, column: 37, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9275, file: !1764, line: 407, column: 9)
!9293 = !DILocation(line: 407, column: 21, scope: !9292)
!9294 = !DILocation(line: 407, column: 9, scope: !9275)
!9295 = !DILocation(line: 412, column: 5, scope: !9275)
!9296 = !DILocation(line: 414, column: 8, scope: !9275)
!9297 = !DILocation(line: 414, column: 19, scope: !9275)
!9298 = !DILocation(line: 414, column: 32, scope: !9275)
!9299 = !DILocation(line: 414, column: 5, scope: !9275)
!9300 = !DILocation(line: 416, column: 17, scope: !9275)
!9301 = !DILocation(line: 416, column: 28, scope: !9275)
!9302 = !DILocation(line: 416, column: 42, scope: !9275)
!9303 = !DILocation(line: 416, column: 14, scope: !9275)
!9304 = !DILocation(line: 418, column: 5, scope: !9275)
!9305 = !DILocation(line: 420, column: 16, scope: !9306)
!9306 = distinct !DILexicalBlock(scope: !9275, file: !1764, line: 420, column: 9)
!9307 = !DILocation(line: 424, column: 1, scope: !9275)
!9308 = distinct !DISubprogram(name: "NOR_init", scope: !1764, file: !1764, line: 433, type: !6727, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !210)
!9309 = !DILocation(line: 436, column: 9, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9308, file: !1764, line: 436, column: 9)
!9311 = !DILocation(line: 436, column: 9, scope: !9308)
!9312 = !DILocation(line: 437, column: 9, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9310, file: !1764, line: 436, column: 62)
!9314 = !DILocation(line: 438, column: 9, scope: !9313)
!9315 = !DILocation(line: 439, column: 27, scope: !9313)
!9316 = !DILocation(line: 440, column: 5, scope: !9313)
!9317 = !DILocation(line: 441, column: 5, scope: !9308)
!9318 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !1764, file: !1764, line: 444, type: !7193, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !210)
!9319 = !DILocation(line: 446, column: 12, scope: !9318)
!9320 = !DILocation(line: 446, column: 5, scope: !9318)
!9321 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !1764, file: !1764, line: 449, type: !9322, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9324)
!9322 = !DISubroutineType(types: !9323)
!9323 = !{!858, !175, !175, !680}
!9324 = !{!9325, !9326, !9327, !9328, !9329, !9330, !9331}
!9325 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9321, file: !1764, line: 449, type: !175)
!9326 = !DILocalVariable(name: "page_idx", arg: 2, scope: !9321, file: !1764, line: 449, type: !175)
!9327 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9321, file: !1764, line: 449, type: !680)
!9328 = !DILocalVariable(name: "D", scope: !9321, file: !1764, line: 451, type: !9063)
!9329 = !DILocalVariable(name: "mtdData", scope: !9321, file: !1764, line: 452, type: !1772)
!9330 = !DILocalVariable(name: "result", scope: !9321, file: !1764, line: 453, type: !858)
!9331 = !DILocalVariable(name: "addr", scope: !9321, file: !1764, line: 455, type: !175)
!9332 = !DILocation(line: 0, scope: !9321)
!9333 = !DILocation(line: 452, column: 60, scope: !9321)
!9334 = !DILocation(line: 455, column: 32, scope: !9321)
!9335 = !DILocation(line: 455, column: 22, scope: !9321)
!9336 = !DILocation(line: 455, column: 95, scope: !9321)
!9337 = !DILocation(line: 455, column: 76, scope: !9321)
!9338 = !DILocation(line: 455, column: 118, scope: !9321)
!9339 = !DILocation(line: 455, column: 74, scope: !9321)
!9340 = !DILocation(line: 455, column: 106, scope: !9321)
!9341 = !DILocation(line: 457, column: 14, scope: !9321)
!9342 = !DILocation(line: 459, column: 16, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9321, file: !1764, line: 459, column: 9)
!9344 = !DILocation(line: 463, column: 1, scope: !9321)
!9345 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !1764, file: !1764, line: 466, type: !9322, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9346)
!9346 = !{!9347, !9348, !9349, !9350, !9351, !9352, !9353}
!9347 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9345, file: !1764, line: 466, type: !175)
!9348 = !DILocalVariable(name: "page_idx", arg: 2, scope: !9345, file: !1764, line: 466, type: !175)
!9349 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9345, file: !1764, line: 466, type: !680)
!9350 = !DILocalVariable(name: "D", scope: !9345, file: !1764, line: 468, type: !9063)
!9351 = !DILocalVariable(name: "mtdData", scope: !9345, file: !1764, line: 469, type: !1772)
!9352 = !DILocalVariable(name: "result", scope: !9345, file: !1764, line: 470, type: !858)
!9353 = !DILocalVariable(name: "addr", scope: !9345, file: !1764, line: 472, type: !175)
!9354 = !DILocation(line: 0, scope: !9345)
!9355 = !DILocation(line: 469, column: 60, scope: !9345)
!9356 = !DILocation(line: 472, column: 32, scope: !9345)
!9357 = !DILocation(line: 472, column: 22, scope: !9345)
!9358 = !DILocation(line: 472, column: 95, scope: !9345)
!9359 = !DILocation(line: 472, column: 76, scope: !9345)
!9360 = !DILocation(line: 472, column: 118, scope: !9345)
!9361 = !DILocation(line: 472, column: 74, scope: !9345)
!9362 = !DILocation(line: 472, column: 106, scope: !9345)
!9363 = !DILocation(line: 474, column: 14, scope: !9345)
!9364 = !DILocation(line: 475, column: 16, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9345, file: !1764, line: 475, column: 9)
!9366 = !DILocation(line: 479, column: 1, scope: !9345)
!9367 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !1764, file: !1764, line: 481, type: !9368, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9370)
!9368 = !DISubroutineType(types: !9369)
!9369 = !{!858, !175}
!9370 = !{!9371, !9372}
!9371 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9367, file: !1764, line: 481, type: !175)
!9372 = !DILocalVariable(name: "result", scope: !9367, file: !1764, line: 483, type: !858)
!9373 = !DILocation(line: 0, scope: !9367)
!9374 = !DILocation(line: 484, column: 14, scope: !9367)
!9375 = !DILocation(line: 485, column: 16, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9367, file: !1764, line: 485, column: 9)
!9377 = !DILocation(line: 489, column: 1, scope: !9367)
!9378 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !1764, file: !1764, line: 492, type: !3110, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9379)
!9379 = !{!9380, !9381, !9382}
!9380 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9378, file: !1764, line: 492, type: !175)
!9381 = !DILocalVariable(name: "D", scope: !9378, file: !1764, line: 494, type: !9063)
!9382 = !DILocalVariable(name: "mtdData", scope: !9378, file: !1764, line: 495, type: !1772)
!9383 = !DILocation(line: 0, scope: !9378)
!9384 = !DILocation(line: 495, column: 60, scope: !9378)
!9385 = !DILocation(line: 496, column: 12, scope: !9378)
!9386 = !DILocation(line: 496, column: 5, scope: !9378)
!9387 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !1764, file: !1764, line: 499, type: !3110, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9388)
!9388 = !{!9389, !9390, !9391}
!9389 = !DILocalVariable(name: "block_addr", arg: 1, scope: !9387, file: !1764, line: 499, type: !175)
!9390 = !DILocalVariable(name: "D", scope: !9387, file: !1764, line: 501, type: !9063)
!9391 = !DILocalVariable(name: "mtdData", scope: !9387, file: !1764, line: 502, type: !1772)
!9392 = !DILocation(line: 0, scope: !9387)
!9393 = !DILocation(line: 502, column: 60, scope: !9387)
!9394 = !DILocation(line: 504, column: 12, scope: !9387)
!9395 = !DILocation(line: 504, column: 5, scope: !9387)
!9396 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !1764, file: !1764, line: 510, type: !9397, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9399)
!9397 = !DISubroutineType(types: !9398)
!9398 = !{!858, !175, !920, !920}
!9399 = !{!9400, !9401, !9402, !9403, !9404}
!9400 = !DILocalVariable(name: "block_addr", arg: 1, scope: !9396, file: !1764, line: 510, type: !175)
!9401 = !DILocalVariable(name: "block_index", arg: 2, scope: !9396, file: !1764, line: 510, type: !920)
!9402 = !DILocalVariable(name: "offset", arg: 3, scope: !9396, file: !1764, line: 510, type: !920)
!9403 = !DILocalVariable(name: "D", scope: !9396, file: !1764, line: 512, type: !9063)
!9404 = !DILocalVariable(name: "mtdData", scope: !9396, file: !1764, line: 513, type: !1772)
!9405 = !DILocation(line: 0, scope: !9396)
!9406 = !DILocation(line: 513, column: 60, scope: !9396)
!9407 = !DILocation(line: 519, column: 20, scope: !9396)
!9408 = !DILocation(line: 519, column: 18, scope: !9396)
!9409 = !DILocation(line: 520, column: 22, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9396, file: !1764, line: 520, column: 9)
!9411 = !DILocation(line: 520, column: 9, scope: !9396)
!9412 = !DILocation(line: 524, column: 28, scope: !9396)
!9413 = !DILocation(line: 524, column: 26, scope: !9396)
!9414 = !DILocation(line: 524, column: 13, scope: !9396)
!9415 = !DILocation(line: 526, column: 5, scope: !9396)
!9416 = !DILocation(line: 527, column: 1, scope: !9396)
!9417 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !1764, file: !1764, line: 532, type: !9418, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9420)
!9418 = !DISubroutineType(types: !9419)
!9419 = !{!858, !175, !175, !920}
!9420 = !{!9421, !9422, !9423, !9424, !9425}
!9421 = !DILocalVariable(name: "block_index", arg: 1, scope: !9417, file: !1764, line: 532, type: !175)
!9422 = !DILocalVariable(name: "offset", arg: 2, scope: !9417, file: !1764, line: 532, type: !175)
!9423 = !DILocalVariable(name: "addr", arg: 3, scope: !9417, file: !1764, line: 532, type: !920)
!9424 = !DILocalVariable(name: "D", scope: !9417, file: !1764, line: 534, type: !9063)
!9425 = !DILocalVariable(name: "mtdData", scope: !9417, file: !1764, line: 535, type: !1772)
!9426 = !DILocation(line: 0, scope: !9417)
!9427 = !DILocation(line: 535, column: 60, scope: !9417)
!9428 = !DILocation(line: 537, column: 23, scope: !9417)
!9429 = !DILocation(line: 537, column: 13, scope: !9417)
!9430 = !DILocation(line: 537, column: 79, scope: !9417)
!9431 = !DILocation(line: 537, column: 60, scope: !9417)
!9432 = !DILocation(line: 537, column: 58, scope: !9417)
!9433 = !DILocation(line: 537, column: 88, scope: !9417)
!9434 = !DILocation(line: 537, column: 11, scope: !9417)
!9435 = !DILocation(line: 539, column: 5, scope: !9417)
!9436 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !1764, file: !1764, line: 545, type: !9437, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9439)
!9437 = !DISubroutineType(types: !9438)
!9438 = !{!1820, !858}
!9439 = !{!9440}
!9440 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !9436, file: !1764, line: 545, type: !858)
!9441 = !DILocation(line: 0, scope: !9436)
!9442 = !DILocation(line: 547, column: 9, scope: !9436)
!9443 = !DILocation(line: 558, column: 9, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9445, file: !1764, line: 558, column: 9)
!9445 = distinct !DILexicalBlock(scope: !9446, file: !1764, line: 558, column: 9)
!9446 = distinct !DILexicalBlock(scope: !9447, file: !1764, line: 558, column: 9)
!9447 = distinct !DILexicalBlock(scope: !9448, file: !1764, line: 557, column: 12)
!9448 = distinct !DILexicalBlock(scope: !9449, file: !1764, line: 555, column: 16)
!9449 = distinct !DILexicalBlock(scope: !9450, file: !1764, line: 553, column: 16)
!9450 = distinct !DILexicalBlock(scope: !9451, file: !1764, line: 551, column: 16)
!9451 = distinct !DILexicalBlock(scope: !9452, file: !1764, line: 549, column: 16)
!9452 = distinct !DILexicalBlock(scope: !9436, file: !1764, line: 547, column: 9)
!9453 = !DILocation(line: 560, column: 1, scope: !9436)
!9454 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !1764, file: !1764, line: 561, type: !9455, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9458)
!9455 = !DISubroutineType(types: !9456)
!9456 = !{!9457, !175}
!9457 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !1101, line: 127, baseType: !1766)
!9458 = !{!9459, !9460, !9461}
!9459 = !DILocalVariable(name: "address", arg: 1, scope: !9454, file: !1764, line: 561, type: !175)
!9460 = !DILocalVariable(name: "block_size", scope: !9454, file: !1764, line: 563, type: !175)
!9461 = !DILocalVariable(name: "block_index", scope: !9454, file: !1764, line: 564, type: !175)
!9462 = !DILocation(line: 0, scope: !9454)
!9463 = !DILocation(line: 566, column: 19, scope: !9454)
!9464 = !DILocation(line: 567, column: 21, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9454, file: !1764, line: 567, column: 9)
!9466 = !DILocation(line: 567, column: 9, scope: !9454)
!9467 = !DILocation(line: 568, column: 9, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9469, file: !1764, line: 568, column: 9)
!9469 = distinct !DILexicalBlock(scope: !9470, file: !1764, line: 568, column: 9)
!9470 = distinct !DILexicalBlock(scope: !9471, file: !1764, line: 568, column: 9)
!9471 = distinct !DILexicalBlock(scope: !9465, file: !1764, line: 567, column: 45)
!9472 = !DILocation(line: 570, column: 18, scope: !9454)
!9473 = !DILocation(line: 571, column: 9, scope: !9454)
!9474 = !DILocation(line: 574, column: 9, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9476, file: !1764, line: 573, column: 38)
!9476 = distinct !DILexicalBlock(scope: !9477, file: !1764, line: 573, column: 16)
!9477 = distinct !DILexicalBlock(scope: !9454, file: !1764, line: 571, column: 9)
!9478 = !DILocation(line: 576, column: 9, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9480, file: !1764, line: 575, column: 39)
!9480 = distinct !DILexicalBlock(scope: !9476, file: !1764, line: 575, column: 16)
!9481 = !DILocation(line: 578, column: 9, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9483, file: !1764, line: 578, column: 9)
!9483 = distinct !DILexicalBlock(scope: !9484, file: !1764, line: 578, column: 9)
!9484 = distinct !DILexicalBlock(scope: !9485, file: !1764, line: 578, column: 9)
!9485 = distinct !DILexicalBlock(scope: !9480, file: !1764, line: 577, column: 12)
!9486 = !DILocation(line: 0, scope: !9477)
!9487 = !DILocation(line: 580, column: 1, scope: !9454)
!9488 = distinct !DISubprogram(name: "hal_flash_init", scope: !1764, file: !1764, line: 583, type: !7193, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !210)
!9489 = !DILocation(line: 585, column: 5, scope: !9488)
!9490 = !DILocation(line: 586, column: 5, scope: !9488)
!9491 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !1764, file: !1764, line: 589, type: !7193, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !210)
!9492 = !DILocation(line: 591, column: 5, scope: !9491)
!9493 = distinct !DISubprogram(name: "hal_flash_erase", scope: !1764, file: !1764, line: 595, type: !9494, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9496)
!9494 = !DISubroutineType(types: !9495)
!9495 = !{!1820, !175, !9457}
!9496 = !{!9497, !9498, !9499, !9500, !9501}
!9497 = !DILocalVariable(name: "start_address", arg: 1, scope: !9493, file: !1764, line: 595, type: !175)
!9498 = !DILocalVariable(name: "block", arg: 2, scope: !9493, file: !1764, line: 595, type: !9457)
!9499 = !DILocalVariable(name: "result", scope: !9493, file: !1764, line: 597, type: !858)
!9500 = !DILocalVariable(name: "block_index", scope: !9493, file: !1764, line: 598, type: !175)
!9501 = !DILocalVariable(name: "erase_type", scope: !9493, file: !1764, line: 599, type: !175)
!9502 = !DILocation(line: 0, scope: !9493)
!9503 = !DILocation(line: 601, column: 9, scope: !9493)
!9504 = !DILocation(line: 602, column: 28, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9506, file: !1764, line: 602, column: 13)
!9506 = distinct !DILexicalBlock(scope: !9507, file: !1764, line: 601, column: 38)
!9507 = distinct !DILexicalBlock(scope: !9493, file: !1764, line: 601, column: 9)
!9508 = !DILocation(line: 602, column: 37, scope: !9505)
!9509 = !DILocation(line: 602, column: 13, scope: !9506)
!9510 = !DILocation(line: 607, column: 28, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9512, file: !1764, line: 607, column: 13)
!9512 = distinct !DILexicalBlock(scope: !9513, file: !1764, line: 606, column: 46)
!9513 = distinct !DILexicalBlock(scope: !9507, file: !1764, line: 606, column: 16)
!9514 = !DILocation(line: 607, column: 38, scope: !9511)
!9515 = !DILocation(line: 607, column: 13, scope: !9512)
!9516 = !DILocation(line: 612, column: 28, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9518, file: !1764, line: 612, column: 13)
!9518 = distinct !DILexicalBlock(scope: !9519, file: !1764, line: 611, column: 46)
!9519 = distinct !DILexicalBlock(scope: !9513, file: !1764, line: 611, column: 16)
!9520 = !DILocation(line: 612, column: 38, scope: !9517)
!9521 = !DILocation(line: 612, column: 13, scope: !9518)
!9522 = !DILocation(line: 0, scope: !9507)
!9523 = !DILocation(line: 621, column: 19, scope: !9493)
!9524 = !DILocation(line: 622, column: 21, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9493, file: !1764, line: 622, column: 9)
!9526 = !DILocation(line: 622, column: 9, scope: !9493)
!9527 = !DILocation(line: 626, column: 17, scope: !9493)
!9528 = !DILocation(line: 627, column: 14, scope: !9493)
!9529 = !DILocation(line: 628, column: 16, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9493, file: !1764, line: 628, column: 9)
!9531 = !DILocation(line: 628, column: 9, scope: !9493)
!9532 = !DILocation(line: 629, column: 16, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9530, file: !1764, line: 628, column: 38)
!9534 = !DILocation(line: 629, column: 9, scope: !9533)
!9535 = !DILocation(line: 632, column: 1, scope: !9493)
!9536 = distinct !DISubprogram(name: "hal_flash_read", scope: !1764, file: !1764, line: 634, type: !9537, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9539)
!9537 = !DISubroutineType(types: !9538)
!9538 = !{!1820, !175, !680, !175}
!9539 = !{!9540, !9541, !9542, !9543, !9544}
!9540 = !DILocalVariable(name: "start_address", arg: 1, scope: !9536, file: !1764, line: 634, type: !175)
!9541 = !DILocalVariable(name: "buffer", arg: 2, scope: !9536, file: !1764, line: 634, type: !680)
!9542 = !DILocalVariable(name: "length", arg: 3, scope: !9536, file: !1764, line: 634, type: !175)
!9543 = !DILocalVariable(name: "D", scope: !9536, file: !1764, line: 636, type: !9063)
!9544 = !DILocalVariable(name: "result", scope: !9536, file: !1764, line: 637, type: !858)
!9545 = !DILocation(line: 0, scope: !9536)
!9546 = !DILocation(line: 639, column: 14, scope: !9536)
!9547 = !DILocation(line: 641, column: 16, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9536, file: !1764, line: 641, column: 9)
!9549 = !DILocation(line: 641, column: 9, scope: !9536)
!9550 = !DILocation(line: 642, column: 16, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9548, file: !1764, line: 641, column: 38)
!9552 = !DILocation(line: 642, column: 9, scope: !9551)
!9553 = !DILocation(line: 645, column: 1, scope: !9536)
!9554 = distinct !DISubprogram(name: "hal_flash_write", scope: !1764, file: !1764, line: 647, type: !9555, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !9557)
!9555 = !DISubroutineType(types: !9556)
!9556 = !{!1820, !175, !4492, !175}
!9557 = !{!9558, !9559, !9560, !9561, !9562}
!9558 = !DILocalVariable(name: "address", arg: 1, scope: !9554, file: !1764, line: 647, type: !175)
!9559 = !DILocalVariable(name: "data", arg: 2, scope: !9554, file: !1764, line: 647, type: !4492)
!9560 = !DILocalVariable(name: "length", arg: 3, scope: !9554, file: !1764, line: 647, type: !175)
!9561 = !DILocalVariable(name: "D", scope: !9554, file: !1764, line: 649, type: !9063)
!9562 = !DILocalVariable(name: "result", scope: !9554, file: !1764, line: 650, type: !858)
!9563 = !DILocation(line: 0, scope: !9554)
!9564 = !DILocation(line: 652, column: 14, scope: !9554)
!9565 = !DILocation(line: 653, column: 16, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9554, file: !1764, line: 653, column: 9)
!9567 = !DILocation(line: 653, column: 9, scope: !9554)
!9568 = !DILocation(line: 654, column: 16, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9566, file: !1764, line: 653, column: 38)
!9570 = !DILocation(line: 654, column: 9, scope: !9569)
!9571 = !DILocation(line: 668, column: 1, scope: !9554)
!9572 = distinct !DISubprogram(name: "BlockAddress", scope: !1825, file: !1825, line: 111, type: !9573, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !9575)
!9573 = !DISubroutineType(types: !9574)
!9574 = !{!194, !194, !175}
!9575 = !{!9576, !9577, !9578, !9579, !9580, !9581}
!9576 = !DILocalVariable(name: "DriverData", arg: 1, scope: !9572, file: !1825, line: 111, type: !194)
!9577 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9572, file: !1825, line: 111, type: !175)
!9578 = !DILocalVariable(name: "D", scope: !9572, file: !1825, line: 113, type: !1853)
!9579 = !DILocalVariable(name: "addr", scope: !9572, file: !1825, line: 114, type: !175)
!9580 = !DILocalVariable(name: "region", scope: !9572, file: !1825, line: 115, type: !175)
!9581 = !DILocalVariable(name: "BlockUpperBound", scope: !9572, file: !1825, line: 115, type: !175)
!9582 = !DILocation(line: 0, scope: !9572)
!9583 = !DILocation(line: 117, column: 26, scope: !9572)
!9584 = !DILocation(line: 117, column: 40, scope: !9572)
!9585 = !DILocation(line: 118, column: 28, scope: !9572)
!9586 = !DILocation(line: 118, column: 5, scope: !9572)
!9587 = !DILocation(line: 119, column: 39, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9572, file: !1825, line: 118, column: 43)
!9589 = !DILocation(line: 119, column: 76, scope: !9588)
!9590 = !DILocation(line: 119, column: 52, scope: !9588)
!9591 = !DILocation(line: 119, column: 14, scope: !9588)
!9592 = !DILocation(line: 120, column: 15, scope: !9588)
!9593 = !DILocation(line: 121, column: 50, scope: !9588)
!9594 = !DILocation(line: 121, column: 25, scope: !9588)
!9595 = distinct !{!9595, !9586, !9596}
!9596 = !DILocation(line: 122, column: 5, scope: !9572)
!9597 = !DILocation(line: 123, column: 68, scope: !9572)
!9598 = !DILocation(line: 123, column: 44, scope: !9572)
!9599 = !DILocation(line: 123, column: 25, scope: !9572)
!9600 = !DILocation(line: 123, column: 107, scope: !9572)
!9601 = !DILocation(line: 123, column: 83, scope: !9572)
!9602 = !DILocation(line: 123, column: 10, scope: !9572)
!9603 = !DILocation(line: 125, column: 16, scope: !9572)
!9604 = !DILocation(line: 125, column: 25, scope: !9572)
!9605 = !DILocation(line: 125, column: 5, scope: !9572)
!9606 = distinct !DISubprogram(name: "MapWindow", scope: !1825, file: !1825, line: 180, type: !1458, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !9607)
!9607 = !{!9608, !9609, !9610, !9611}
!9608 = !DILocalVariable(name: "DriveData", arg: 1, scope: !9606, file: !1825, line: 180, type: !194)
!9609 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9606, file: !1825, line: 180, type: !175)
!9610 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !9606, file: !1825, line: 180, type: !175)
!9611 = !DILocalVariable(name: "D", scope: !9606, file: !1825, line: 182, type: !1853)
!9612 = !DILocation(line: 0, scope: !9606)
!9613 = !DILocation(line: 185, column: 5, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9615, file: !1825, line: 185, column: 5)
!9615 = distinct !DILexicalBlock(scope: !9606, file: !1825, line: 185, column: 5)
!9616 = !DILocation(line: 185, column: 5, scope: !9615)
!9617 = !DILocation(line: 185, column: 5, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9614, file: !1825, line: 185, column: 5)
!9619 = !DILocation(line: 186, column: 27, scope: !9606)
!9620 = !DILocation(line: 186, column: 19, scope: !9606)
!9621 = !DILocation(line: 186, column: 8, scope: !9606)
!9622 = !DILocation(line: 186, column: 17, scope: !9606)
!9623 = !DILocation(line: 188, column: 5, scope: !9606)
!9624 = !DILocation(line: 0, scope: !1846)
!9625 = !DILocation(line: 142, column: 12, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !1846, file: !1825, line: 142, column: 9)
!9627 = !DILocation(line: 142, column: 34, scope: !9626)
!9628 = !DILocation(line: 142, column: 64, scope: !9626)
!9629 = !DILocation(line: 142, column: 75, scope: !9626)
!9630 = !DILocation(line: 142, column: 9, scope: !1846)
!9631 = !DILocation(line: 143, column: 79, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9633, file: !1825, line: 143, column: 13)
!9633 = distinct !DILexicalBlock(scope: !9626, file: !1825, line: 142, column: 99)
!9634 = !DILocation(line: 143, column: 13, scope: !9633)
!9635 = !DILocation(line: 144, column: 72, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9637, file: !1825, line: 144, column: 17)
!9637 = distinct !DILexicalBlock(scope: !9632, file: !1825, line: 143, column: 94)
!9638 = !DILocation(line: 144, column: 83, scope: !9636)
!9639 = !DILocation(line: 144, column: 17, scope: !9637)
!9640 = !DILocation(line: 145, column: 87, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9642, file: !1825, line: 145, column: 21)
!9642 = distinct !DILexicalBlock(scope: !9636, file: !1825, line: 144, column: 107)
!9643 = !DILocation(line: 145, column: 21, scope: !9642)
!9644 = !DILocation(line: 146, column: 33, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9641, file: !1825, line: 145, column: 102)
!9646 = !DILocation(line: 147, column: 25, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9645, file: !1825, line: 147, column: 25)
!9648 = !DILocation(line: 147, column: 62, scope: !9647)
!9649 = !DILocation(line: 147, column: 34, scope: !9647)
!9650 = !DILocation(line: 147, column: 25, scope: !9645)
!9651 = !DILocation(line: 148, column: 91, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9647, file: !1825, line: 147, column: 106)
!9653 = !DILocation(line: 149, column: 111, scope: !9652)
!9654 = !DILocation(line: 149, column: 101, scope: !9652)
!9655 = !DILocation(line: 149, column: 87, scope: !9652)
!9656 = !DILocation(line: 149, column: 99, scope: !9652)
!9657 = !DILocation(line: 150, column: 37, scope: !9652)
!9658 = !DILocation(line: 150, column: 34, scope: !9652)
!9659 = !DILocation(line: 151, column: 21, scope: !9652)
!9660 = !DILocation(line: 152, column: 91, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9647, file: !1825, line: 151, column: 28)
!9662 = !DILocation(line: 153, column: 111, scope: !9661)
!9663 = !DILocation(line: 153, column: 101, scope: !9661)
!9664 = !DILocation(line: 153, column: 87, scope: !9661)
!9665 = !DILocation(line: 153, column: 99, scope: !9661)
!9666 = !DILocation(line: 154, column: 34, scope: !9661)
!9667 = !DILocation(line: 157, column: 32, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9641, file: !1825, line: 156, column: 24)
!9669 = !DILocation(line: 158, column: 83, scope: !9668)
!9670 = !DILocation(line: 159, column: 60, scope: !9668)
!9671 = !DILocation(line: 159, column: 33, scope: !9668)
!9672 = !DILocation(line: 159, column: 30, scope: !9668)
!9673 = !DILocation(line: 162, column: 29, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9636, file: !1825, line: 161, column: 20)
!9675 = !DILocation(line: 163, column: 83, scope: !9674)
!9676 = !DILocation(line: 164, column: 103, scope: !9674)
!9677 = !DILocation(line: 164, column: 93, scope: !9674)
!9678 = !DILocation(line: 164, column: 79, scope: !9674)
!9679 = !DILocation(line: 164, column: 91, scope: !9674)
!9680 = !DILocation(line: 165, column: 56, scope: !9674)
!9681 = !DILocation(line: 165, column: 29, scope: !9674)
!9682 = !DILocation(line: 165, column: 26, scope: !9674)
!9683 = !DILocation(line: 168, column: 24, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9632, file: !1825, line: 167, column: 16)
!9685 = !DILocation(line: 169, column: 75, scope: !9684)
!9686 = !DILocation(line: 170, column: 50, scope: !9684)
!9687 = !DILocation(line: 170, column: 22, scope: !9684)
!9688 = !DILocation(line: 173, column: 21, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9626, file: !1825, line: 172, column: 12)
!9690 = !DILocation(line: 174, column: 75, scope: !9689)
!9691 = !DILocation(line: 175, column: 95, scope: !9689)
!9692 = !DILocation(line: 175, column: 85, scope: !9689)
!9693 = !DILocation(line: 175, column: 71, scope: !9689)
!9694 = !DILocation(line: 175, column: 83, scope: !9689)
!9695 = !DILocation(line: 176, column: 46, scope: !9689)
!9696 = !DILocation(line: 176, column: 18, scope: !9689)
!9697 = !DILocation(line: 0, scope: !9626)
!9698 = !DILocation(line: 178, column: 5, scope: !1846)
!9699 = distinct !DISubprogram(name: "BlockSize", scope: !1825, file: !1825, line: 191, type: !1847, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !9700)
!9700 = !{!9701, !9702, !9703, !9704, !9705}
!9701 = !DILocalVariable(name: "DriveData", arg: 1, scope: !9699, file: !1825, line: 191, type: !194)
!9702 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9699, file: !1825, line: 191, type: !175)
!9703 = !DILocalVariable(name: "D", scope: !9699, file: !1825, line: 193, type: !1853)
!9704 = !DILocalVariable(name: "region", scope: !9699, file: !1825, line: 194, type: !175)
!9705 = !DILocalVariable(name: "BlockUpperBound", scope: !9699, file: !1825, line: 194, type: !175)
!9706 = !DILocation(line: 0, scope: !9699)
!9707 = !DILocation(line: 196, column: 26, scope: !9699)
!9708 = !DILocation(line: 196, column: 45, scope: !9699)
!9709 = !DILocation(line: 197, column: 28, scope: !9699)
!9710 = !DILocation(line: 197, column: 5, scope: !9699)
!9711 = !DILocation(line: 198, column: 15, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9699, file: !1825, line: 197, column: 43)
!9713 = !DILocation(line: 199, column: 50, scope: !9712)
!9714 = !DILocation(line: 199, column: 25, scope: !9712)
!9715 = distinct !{!9715, !9710, !9716}
!9716 = !DILocation(line: 200, column: 5, scope: !9699)
!9717 = !DILocation(line: 202, column: 35, scope: !9699)
!9718 = !DILocation(line: 202, column: 5, scope: !9699)
!9719 = distinct !DISubprogram(name: "BlockIndex", scope: !1825, file: !1825, line: 205, type: !1847, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !9720)
!9720 = !{!9721, !9722, !9723, !9724, !9725, !9726}
!9721 = !DILocalVariable(name: "DriveData", arg: 1, scope: !9719, file: !1825, line: 205, type: !194)
!9722 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !9719, file: !1825, line: 205, type: !175)
!9723 = !DILocalVariable(name: "D", scope: !9719, file: !1825, line: 207, type: !1853)
!9724 = !DILocalVariable(name: "region", scope: !9719, file: !1825, line: 208, type: !175)
!9725 = !DILocalVariable(name: "BlockUpperAddr", scope: !9719, file: !1825, line: 208, type: !175)
!9726 = !DILocalVariable(name: "blk_idx", scope: !9719, file: !1825, line: 209, type: !175)
!9727 = !DILocation(line: 0, scope: !9719)
!9728 = !DILocation(line: 211, column: 25, scope: !9719)
!9729 = !DILocation(line: 211, column: 44, scope: !9719)
!9730 = !DILocation(line: 211, column: 81, scope: !9719)
!9731 = !DILocation(line: 211, column: 57, scope: !9719)
!9732 = !DILocation(line: 213, column: 28, scope: !9719)
!9733 = !DILocation(line: 213, column: 40, scope: !9719)
!9734 = !DILocation(line: 213, column: 66, scope: !9719)
!9735 = !DILocation(line: 213, column: 5, scope: !9719)
!9736 = !DILocation(line: 214, column: 17, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9719, file: !1825, line: 213, column: 78)
!9738 = !DILocation(line: 215, column: 18, scope: !9737)
!9739 = !DILocation(line: 216, column: 15, scope: !9737)
!9740 = !DILocation(line: 217, column: 48, scope: !9737)
!9741 = !DILocation(line: 217, column: 85, scope: !9737)
!9742 = !DILocation(line: 217, column: 61, scope: !9737)
!9743 = distinct !{!9743, !9735, !9744}
!9744 = !DILocation(line: 218, column: 5, scope: !9719)
!9745 = !DILocation(line: 221, column: 53, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9747, file: !1825, line: 220, column: 37)
!9747 = distinct !DILexicalBlock(scope: !9719, file: !1825, line: 220, column: 9)
!9748 = !DILocation(line: 221, column: 29, scope: !9746)
!9749 = !DILocation(line: 221, column: 17, scope: !9746)
!9750 = !DILocation(line: 222, column: 5, scope: !9746)
!9751 = !DILocation(line: 0, scope: !9747)
!9752 = !DILocation(line: 225, column: 5, scope: !9719)
!9753 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !1825, file: !1825, line: 232, type: !3362, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !210)
!9754 = !DILocation(line: 238, column: 5, scope: !9753)
!9755 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !1825, file: !1825, line: 243, type: !3362, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !210)
!9756 = !DILocation(line: 245, column: 5, scope: !9755)
!9757 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !1825, file: !1825, line: 249, type: !3362, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !210)
!9758 = !DILocation(line: 254, column: 5, scope: !9757)
!9759 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !1825, file: !1825, line: 259, type: !3362, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !210)
!9760 = !DILocation(line: 261, column: 5, scope: !9759)
!9761 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !1825, file: !1825, line: 271, type: !5827, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !9762)
!9762 = !{!9763, !9764}
!9763 = !DILocalVariable(name: "delay", arg: 1, scope: !9761, file: !1825, line: 271, type: !175)
!9764 = !DILocalVariable(name: "ret", scope: !9761, file: !1825, line: 276, type: !2100)
!9765 = !DILocation(line: 0, scope: !9761)
!9766 = !DILocation(line: 277, column: 11, scope: !9761)
!9767 = !DILocation(line: 278, column: 13, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9761, file: !1825, line: 278, column: 9)
!9769 = !DILocation(line: 278, column: 9, scope: !9761)
!9770 = !DILocation(line: 279, column: 9, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9772, file: !1825, line: 279, column: 9)
!9772 = distinct !DILexicalBlock(scope: !9773, file: !1825, line: 279, column: 9)
!9773 = distinct !DILexicalBlock(scope: !9774, file: !1825, line: 279, column: 9)
!9774 = distinct !DILexicalBlock(scope: !9768, file: !1825, line: 278, column: 35)
!9775 = !DILocation(line: 282, column: 1, scope: !9761)
!9776 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !2516, file: !2516, line: 58, type: !9777, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !9779)
!9777 = !DISubroutineType(types: !9778)
!9778 = !{null, !2147, !79, !2147, null}
!9779 = !{!9780, !9781, !9782, !9783, !9792}
!9780 = !DILocalVariable(name: "func", arg: 1, scope: !9776, file: !2516, line: 58, type: !2147)
!9781 = !DILocalVariable(name: "line", arg: 2, scope: !9776, file: !2516, line: 58, type: !79)
!9782 = !DILocalVariable(name: "message", arg: 3, scope: !9776, file: !2516, line: 58, type: !2147)
!9783 = !DILocalVariable(name: "ap", scope: !9776, file: !2516, line: 60, type: !9784)
!9784 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !9785, line: 46, baseType: !9786)
!9785 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!9786 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !9787, line: 32, baseType: !9788)
!9787 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!9788 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2516, baseType: !9789)
!9789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !9790)
!9790 = !{!9791}
!9791 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !9789, file: !2516, line: 60, baseType: !194, size: 32)
!9792 = !DILocalVariable(name: "mask", scope: !9776, file: !2516, line: 62, type: !175)
!9793 = !DILocation(line: 0, scope: !9776)
!9794 = !DILocation(line: 60, column: 5, scope: !9776)
!9795 = !DILocation(line: 60, column: 13, scope: !9776)
!9796 = !DILocation(line: 62, column: 5, scope: !9776)
!9797 = !DILocation(line: 63, column: 5, scope: !9776)
!9798 = !DILocation(line: 65, column: 5, scope: !9776)
!9799 = !DILocation(line: 66, column: 5, scope: !9776)
!9800 = !DILocation(line: 67, column: 5, scope: !9776)
!9801 = !DILocation(line: 69, column: 37, scope: !9776)
!9802 = !DILocation(line: 69, column: 5, scope: !9776)
!9803 = !DILocation(line: 71, column: 1, scope: !9776)
!9804 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !2516, file: !2516, line: 72, type: !9777, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !9805)
!9805 = !{!9806, !9807, !9808, !9809, !9810}
!9806 = !DILocalVariable(name: "func", arg: 1, scope: !9804, file: !2516, line: 72, type: !2147)
!9807 = !DILocalVariable(name: "line", arg: 2, scope: !9804, file: !2516, line: 72, type: !79)
!9808 = !DILocalVariable(name: "message", arg: 3, scope: !9804, file: !2516, line: 72, type: !2147)
!9809 = !DILocalVariable(name: "ap", scope: !9804, file: !2516, line: 74, type: !9784)
!9810 = !DILocalVariable(name: "mask", scope: !9804, file: !2516, line: 76, type: !175)
!9811 = !DILocation(line: 0, scope: !9804)
!9812 = !DILocation(line: 74, column: 5, scope: !9804)
!9813 = !DILocation(line: 74, column: 13, scope: !9804)
!9814 = !DILocation(line: 76, column: 5, scope: !9804)
!9815 = !DILocation(line: 77, column: 5, scope: !9804)
!9816 = !DILocation(line: 79, column: 5, scope: !9804)
!9817 = !DILocation(line: 80, column: 5, scope: !9804)
!9818 = !DILocation(line: 81, column: 5, scope: !9804)
!9819 = !DILocation(line: 83, column: 37, scope: !9804)
!9820 = !DILocation(line: 83, column: 5, scope: !9804)
!9821 = !DILocation(line: 85, column: 1, scope: !9804)
!9822 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !2516, file: !2516, line: 86, type: !9777, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !9823)
!9823 = !{!9824, !9825, !9826, !9827, !9828}
!9824 = !DILocalVariable(name: "func", arg: 1, scope: !9822, file: !2516, line: 86, type: !2147)
!9825 = !DILocalVariable(name: "line", arg: 2, scope: !9822, file: !2516, line: 86, type: !79)
!9826 = !DILocalVariable(name: "message", arg: 3, scope: !9822, file: !2516, line: 86, type: !2147)
!9827 = !DILocalVariable(name: "ap", scope: !9822, file: !2516, line: 88, type: !9784)
!9828 = !DILocalVariable(name: "mask", scope: !9822, file: !2516, line: 90, type: !175)
!9829 = !DILocation(line: 0, scope: !9822)
!9830 = !DILocation(line: 88, column: 5, scope: !9822)
!9831 = !DILocation(line: 88, column: 13, scope: !9822)
!9832 = !DILocation(line: 90, column: 5, scope: !9822)
!9833 = !DILocation(line: 91, column: 5, scope: !9822)
!9834 = !DILocation(line: 93, column: 5, scope: !9822)
!9835 = !DILocation(line: 94, column: 5, scope: !9822)
!9836 = !DILocation(line: 95, column: 5, scope: !9822)
!9837 = !DILocation(line: 97, column: 37, scope: !9822)
!9838 = !DILocation(line: 97, column: 5, scope: !9822)
!9839 = !DILocation(line: 99, column: 1, scope: !9822)
!9840 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !2516, file: !2516, line: 101, type: !9841, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !9845)
!9841 = !DISubroutineType(types: !9842)
!9842 = !{null, !2147, !79, !2147, !9843, !79, null}
!9843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9844, size: 32)
!9844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!9845 = !{!9846, !9847, !9848, !9849, !9850}
!9846 = !DILocalVariable(name: "func", arg: 1, scope: !9840, file: !2516, line: 101, type: !2147)
!9847 = !DILocalVariable(name: "line", arg: 2, scope: !9840, file: !2516, line: 101, type: !79)
!9848 = !DILocalVariable(name: "message", arg: 3, scope: !9840, file: !2516, line: 101, type: !2147)
!9849 = !DILocalVariable(name: "data", arg: 4, scope: !9840, file: !2516, line: 101, type: !9843)
!9850 = !DILocalVariable(name: "length", arg: 5, scope: !9840, file: !2516, line: 101, type: !79)
!9851 = !DILocation(line: 0, scope: !9840)
!9852 = !DILocation(line: 103, column: 1, scope: !9840)
!9853 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !1905, file: !1905, line: 87, type: !3110, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !9854)
!9854 = !{!9855, !9856}
!9855 = !DILocalVariable(name: "bank_no", arg: 1, scope: !9853, file: !1905, line: 87, type: !175)
!9856 = !DILocalVariable(name: "value", scope: !9853, file: !1905, line: 89, type: !175)
!9857 = !DILocation(line: 0, scope: !9853)
!9858 = !DILocation(line: 91, column: 41, scope: !9853)
!9859 = !DILocation(line: 91, column: 5, scope: !9853)
!9860 = !DILocation(line: 91, column: 19, scope: !9853)
!9861 = !DILocation(line: 91, column: 31, scope: !9853)
!9862 = !DILocation(line: 92, column: 77, scope: !9853)
!9863 = !DILocation(line: 92, column: 60, scope: !9853)
!9864 = !DILocation(line: 92, column: 31, scope: !9853)
!9865 = !DILocation(line: 94, column: 5, scope: !9853)
!9866 = !DILocation(line: 94, column: 27, scope: !9853)
!9867 = !DILocation(line: 94, column: 39, scope: !9853)
!9868 = !DILocation(line: 94, column: 65, scope: !9853)
!9869 = distinct !{!9869, !9865, !9870}
!9870 = !DILocation(line: 94, column: 70, scope: !9853)
!9871 = !DILocation(line: 96, column: 29, scope: !9853)
!9872 = !DILocation(line: 96, column: 64, scope: !9853)
!9873 = !DILocation(line: 98, column: 5, scope: !9853)
!9874 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !1905, file: !1905, line: 102, type: !9875, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !9877)
!9875 = !DISubroutineType(types: !9876)
!9876 = !{null, !175, !175}
!9877 = !{!9878, !9879}
!9878 = !DILocalVariable(name: "bank_no", arg: 1, scope: !9874, file: !1905, line: 102, type: !175)
!9879 = !DILocalVariable(name: "value", arg: 2, scope: !9874, file: !1905, line: 102, type: !175)
!9880 = !DILocation(line: 0, scope: !9874)
!9881 = !DILocation(line: 106, column: 40, scope: !9874)
!9882 = !DILocation(line: 106, column: 77, scope: !9874)
!9883 = !DILocation(line: 106, column: 102, scope: !9874)
!9884 = !DILocation(line: 106, column: 5, scope: !9874)
!9885 = !DILocation(line: 106, column: 19, scope: !9874)
!9886 = !DILocation(line: 106, column: 31, scope: !9874)
!9887 = !DILocation(line: 107, column: 77, scope: !9874)
!9888 = !DILocation(line: 107, column: 60, scope: !9874)
!9889 = !DILocation(line: 107, column: 31, scope: !9874)
!9890 = !DILocation(line: 109, column: 5, scope: !9874)
!9891 = !DILocation(line: 109, column: 27, scope: !9874)
!9892 = !DILocation(line: 109, column: 39, scope: !9874)
!9893 = !DILocation(line: 109, column: 65, scope: !9874)
!9894 = distinct !{!9894, !9890, !9895}
!9895 = !DILocation(line: 109, column: 70, scope: !9874)
!9896 = !DILocation(line: 111, column: 5, scope: !9874)
!9897 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !1905, file: !1905, line: 114, type: !208, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!9898 = !DILocation(line: 117, column: 36, scope: !9897)
!9899 = !DILocation(line: 117, column: 18, scope: !9897)
!9900 = !DILocation(line: 118, column: 37, scope: !9897)
!9901 = !DILocation(line: 118, column: 18, scope: !9897)
!9902 = !DILocation(line: 119, column: 37, scope: !9897)
!9903 = !DILocation(line: 119, column: 19, scope: !9897)
!9904 = !DILocation(line: 120, column: 37, scope: !9897)
!9905 = !DILocation(line: 120, column: 19, scope: !9897)
!9906 = !DILocation(line: 121, column: 37, scope: !9897)
!9907 = !DILocation(line: 121, column: 19, scope: !9897)
!9908 = !DILocation(line: 122, column: 37, scope: !9897)
!9909 = !DILocation(line: 122, column: 19, scope: !9897)
!9910 = !DILocation(line: 123, column: 37, scope: !9897)
!9911 = !DILocation(line: 123, column: 19, scope: !9897)
!9912 = !DILocation(line: 125, column: 37, scope: !9897)
!9913 = !DILocation(line: 125, column: 19, scope: !9897)
!9914 = !DILocation(line: 126, column: 37, scope: !9897)
!9915 = !DILocation(line: 126, column: 19, scope: !9897)
!9916 = !DILocation(line: 127, column: 37, scope: !9897)
!9917 = !DILocation(line: 127, column: 19, scope: !9897)
!9918 = !DILocation(line: 128, column: 37, scope: !9897)
!9919 = !DILocation(line: 128, column: 19, scope: !9897)
!9920 = !DILocation(line: 130, column: 36, scope: !9897)
!9921 = !DILocation(line: 130, column: 18, scope: !9897)
!9922 = !DILocation(line: 131, column: 36, scope: !9897)
!9923 = !DILocation(line: 131, column: 18, scope: !9897)
!9924 = !DILocation(line: 133, column: 5, scope: !9897)
!9925 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !1905, file: !1905, line: 140, type: !9926, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!9926 = !DISubroutineType(types: !9927)
!9927 = !{!79}
!9928 = !DILocation(line: 144, column: 5, scope: !9925)
!9929 = !DILocation(line: 144, column: 19, scope: !9925)
!9930 = !DILocation(line: 144, column: 28, scope: !9925)
!9931 = !DILocation(line: 147, column: 19, scope: !9925)
!9932 = !DILocation(line: 147, column: 28, scope: !9925)
!9933 = !DILocation(line: 150, column: 19, scope: !9925)
!9934 = !DILocation(line: 150, column: 28, scope: !9925)
!9935 = !DILocation(line: 152, column: 5, scope: !9925)
!9936 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !1905, file: !1905, line: 157, type: !6727, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !9937)
!9937 = !{!9938, !9939, !9940, !9941, !9942, !9943}
!9938 = !DILocalVariable(name: "mbist_src", scope: !9936, file: !1905, line: 159, type: !175)
!9939 = !DILocalVariable(name: "mbist_len", scope: !9936, file: !1905, line: 159, type: !175)
!9940 = !DILocalVariable(name: "mbist_data", scope: !9936, file: !1905, line: 159, type: !3083)
!9941 = !DILocalVariable(name: "i", scope: !9936, file: !1905, line: 160, type: !175)
!9942 = !DILocalVariable(name: "bist_data_inv", scope: !9936, file: !1905, line: 160, type: !175)
!9943 = !DILocalVariable(name: "bist_data_random", scope: !9936, file: !1905, line: 160, type: !175)
!9944 = !DILocation(line: 159, column: 36, scope: !9936)
!9945 = !DILocation(line: 0, scope: !9936)
!9946 = !DILocation(line: 165, column: 5, scope: !9936)
!9947 = !DILocation(line: 165, column: 19, scope: !9936)
!9948 = !DILocation(line: 165, column: 30, scope: !9936)
!9949 = !DILocation(line: 166, column: 5, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9936, file: !1905, line: 166, column: 5)
!9951 = !DILocation(line: 167, column: 9, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9953, file: !1905, line: 167, column: 9)
!9953 = distinct !DILexicalBlock(scope: !9954, file: !1905, line: 166, column: 66)
!9954 = distinct !DILexicalBlock(scope: !9950, file: !1905, line: 166, column: 5)
!9955 = !DILocation(line: 168, column: 13, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9957, file: !1905, line: 168, column: 13)
!9957 = distinct !DILexicalBlock(scope: !9958, file: !1905, line: 167, column: 34)
!9958 = distinct !DILexicalBlock(scope: !9952, file: !1905, line: 167, column: 9)
!9959 = !DILocation(line: 168, column: 57, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9956, file: !1905, line: 168, column: 13)
!9961 = distinct !{!9961, !9955, !9962}
!9962 = !DILocation(line: 183, column: 13, scope: !9956)
!9963 = !DILocation(line: 170, column: 42, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9960, file: !1905, line: 168, column: 83)
!9965 = !DILocation(line: 172, column: 42, scope: !9964)
!9966 = !DILocation(line: 174, column: 45, scope: !9964)
!9967 = !DILocation(line: 174, column: 59, scope: !9964)
!9968 = !DILocation(line: 174, column: 154, scope: !9964)
!9969 = !DILocation(line: 174, column: 87, scope: !9964)
!9970 = !DILocation(line: 174, column: 134, scope: !9964)
!9971 = !DILocation(line: 174, column: 42, scope: !9964)
!9972 = !DILocation(line: 175, column: 42, scope: !9964)
!9973 = !DILocation(line: 177, column: 17, scope: !9964)
!9974 = !DILocation(line: 177, column: 39, scope: !9964)
!9975 = !DILocation(line: 177, column: 50, scope: !9964)
!9976 = !DILocation(line: 177, column: 71, scope: !9964)
!9977 = distinct !{!9977, !9973, !9978}
!9978 = !DILocation(line: 177, column: 78, scope: !9964)
!9979 = !DILocation(line: 179, column: 36, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9964, file: !1905, line: 179, column: 21)
!9981 = !DILocation(line: 179, column: 47, scope: !9980)
!9982 = !DILocation(line: 179, column: 69, scope: !9980)
!9983 = !DILocation(line: 168, column: 79, scope: !9960)
!9984 = !DILocation(line: 179, column: 21, scope: !9964)
!9985 = !DILocation(line: 167, column: 30, scope: !9958)
!9986 = !DILocation(line: 167, column: 23, scope: !9958)
!9987 = distinct !{!9987, !9951, !9988}
!9988 = !DILocation(line: 184, column: 9, scope: !9952)
!9989 = !DILocation(line: 166, column: 62, scope: !9954)
!9990 = !DILocation(line: 166, column: 43, scope: !9954)
!9991 = distinct !{!9991, !9949, !9992}
!9992 = !DILocation(line: 185, column: 5, scope: !9950)
!9993 = !DILocation(line: 189, column: 1, scope: !9936)
!9994 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !1905, file: !1905, line: 190, type: !6727, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!9995 = !DILocation(line: 192, column: 9, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9994, file: !1905, line: 192, column: 9)
!9997 = !DILocation(line: 192, column: 26, scope: !9996)
!9998 = !DILocation(line: 0, scope: !9994)
!9999 = !DILocation(line: 197, column: 1, scope: !9994)
!10000 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !1905, file: !1905, line: 201, type: !208, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !10001)
!10001 = !{!10002, !10003}
!10002 = !DILocalVariable(name: "dqy_in_del", scope: !10000, file: !1905, line: 203, type: !858)
!10003 = !DILocalVariable(name: "dqs_in_del", scope: !10000, file: !1905, line: 204, type: !858)
!10004 = !DILocation(line: 0, scope: !10000)
!10005 = !DILocation(line: 206, column: 5, scope: !10000)
!10006 = !DILocation(line: 206, column: 19, scope: !10000)
!10007 = !DILocation(line: 206, column: 28, scope: !10000)
!10008 = !DILocation(line: 207, column: 19, scope: !10000)
!10009 = !DILocation(line: 207, column: 28, scope: !10000)
!10010 = !DILocation(line: 208, column: 19, scope: !10000)
!10011 = !DILocation(line: 208, column: 28, scope: !10000)
!10012 = !DILocation(line: 209, column: 19, scope: !10000)
!10013 = !DILocation(line: 209, column: 28, scope: !10000)
!10014 = !DILocation(line: 212, column: 23, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10016, file: !1905, line: 211, column: 78)
!10016 = distinct !DILexicalBlock(scope: !10017, file: !1905, line: 211, column: 5)
!10017 = distinct !DILexicalBlock(scope: !10000, file: !1905, line: 211, column: 5)
!10018 = !DILocation(line: 212, column: 32, scope: !10015)
!10019 = !DILocation(line: 213, column: 23, scope: !10015)
!10020 = !DILocation(line: 213, column: 32, scope: !10015)
!10021 = !DILocation(line: 215, column: 19, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10015, file: !1905, line: 215, column: 13)
!10023 = !DILocation(line: 215, column: 15, scope: !10022)
!10024 = !DILocation(line: 215, column: 13, scope: !10015)
!10025 = !DILocation(line: 211, column: 40, scope: !10016)
!10026 = !DILocation(line: 211, column: 5, scope: !10017)
!10027 = distinct !{!10027, !10026, !10028}
!10028 = !DILocation(line: 218, column: 5, scope: !10017)
!10029 = !DILocation(line: 211, column: 57, scope: !10016)
!10030 = !DILocation(line: 212, column: 9, scope: !10015)
!10031 = !DILocation(line: 212, column: 45, scope: !10015)
!10032 = !DILocation(line: 212, column: 83, scope: !10015)
!10033 = !DILocation(line: 212, column: 121, scope: !10015)
!10034 = !DILocation(line: 212, column: 70, scope: !10015)
!10035 = !DILocation(line: 212, column: 108, scope: !10015)
!10036 = !DILocation(line: 212, column: 146, scope: !10015)
!10037 = !DILocation(line: 222, column: 49, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10039, file: !1905, line: 221, column: 84)
!10039 = distinct !DILexicalBlock(scope: !10040, file: !1905, line: 221, column: 9)
!10040 = distinct !DILexicalBlock(scope: !10041, file: !1905, line: 221, column: 9)
!10041 = distinct !DILexicalBlock(scope: !10042, file: !1905, line: 220, column: 25)
!10042 = distinct !DILexicalBlock(scope: !10000, file: !1905, line: 220, column: 9)
!10043 = !DILocation(line: 222, column: 13, scope: !10038)
!10044 = !DILocation(line: 222, column: 27, scope: !10038)
!10045 = !DILocation(line: 222, column: 36, scope: !10038)
!10046 = !DILocation(line: 224, column: 23, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10038, file: !1905, line: 224, column: 17)
!10048 = !DILocation(line: 224, column: 19, scope: !10047)
!10049 = !DILocation(line: 224, column: 17, scope: !10038)
!10050 = distinct !{!10050, !10051, !10052}
!10051 = !DILocation(line: 221, column: 9, scope: !10040)
!10052 = !DILocation(line: 227, column: 9, scope: !10040)
!10053 = !DILocation(line: 230, column: 1, scope: !10000)
!10054 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !1905, file: !1905, line: 253, type: !208, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!10055 = !DILocation(line: 257, column: 26, scope: !10054)
!10056 = !DILocation(line: 259, column: 5, scope: !10054)
!10057 = !DILocation(line: 259, column: 19, scope: !10054)
!10058 = !DILocation(line: 259, column: 29, scope: !10054)
!10059 = !DILocation(line: 260, column: 5, scope: !10054)
!10060 = !DILocation(line: 260, column: 27, scope: !10054)
!10061 = !DILocation(line: 260, column: 93, scope: !10054)
!10062 = distinct !{!10062, !10059, !10063}
!10063 = !DILocation(line: 260, column: 98, scope: !10054)
!10064 = !DILocation(line: 261, column: 29, scope: !10054)
!10065 = !DILocation(line: 262, column: 5, scope: !10054)
!10066 = !DILocation(line: 262, column: 27, scope: !10054)
!10067 = !DILocation(line: 262, column: 93, scope: !10054)
!10068 = distinct !{!10068, !10065, !10069}
!10069 = !DILocation(line: 262, column: 98, scope: !10054)
!10070 = !DILocation(line: 264, column: 42, scope: !10054)
!10071 = !DILocation(line: 265, column: 48, scope: !10054)
!10072 = !DILocation(line: 267, column: 5, scope: !10054)
!10073 = !DILocation(line: 267, column: 27, scope: !10054)
!10074 = !DILocation(line: 267, column: 39, scope: !10054)
!10075 = !DILocation(line: 267, column: 65, scope: !10054)
!10076 = distinct !{!10076, !10072, !10077}
!10077 = !DILocation(line: 267, column: 70, scope: !10054)
!10078 = !DILocation(line: 269, column: 5, scope: !10054)
!10079 = !DILocation(line: 273, column: 8, scope: !10054)
!10080 = !DILocation(line: 275, column: 5, scope: !10054)
!10081 = !DILocation(line: 275, column: 27, scope: !10054)
!10082 = !DILocation(line: 275, column: 39, scope: !10054)
!10083 = !DILocation(line: 275, column: 65, scope: !10054)
!10084 = distinct !{!10084, !10080, !10085}
!10085 = !DILocation(line: 275, column: 70, scope: !10054)
!10086 = !DILocation(line: 278, column: 9, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10054, file: !1905, line: 278, column: 9)
!10088 = !DILocation(line: 278, column: 44, scope: !10087)
!10089 = !DILocation(line: 278, column: 9, scope: !10054)
!10090 = !DILocation(line: 279, column: 13, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10092, file: !1905, line: 279, column: 12)
!10092 = distinct !DILexicalBlock(scope: !10087, file: !1905, line: 278, column: 55)
!10093 = !DILocation(line: 279, column: 48, scope: !10091)
!10094 = !DILocation(line: 279, column: 56, scope: !10091)
!10095 = !DILocation(line: 0, scope: !10091)
!10096 = !DILocation(line: 288, column: 1, scope: !10054)
!10097 = distinct !DISubprogram(name: "custom_setEMI", scope: !1905, file: !1905, line: 294, type: !10098, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!10098 = !DISubroutineType(types: !10099)
!10099 = !{!1172}
!10100 = !DILocation(line: 298, column: 5, scope: !10097)
!10101 = !DILocation(line: 300, column: 5, scope: !10097)
!10102 = !DILocation(line: 302, column: 20, scope: !10097)
!10103 = !DILocation(line: 302, column: 18, scope: !10097)
!10104 = !DILocation(line: 303, column: 20, scope: !10097)
!10105 = !DILocation(line: 303, column: 18, scope: !10097)
!10106 = !DILocation(line: 304, column: 20, scope: !10097)
!10107 = !DILocation(line: 304, column: 18, scope: !10097)
!10108 = !DILocation(line: 307, column: 5, scope: !10097)
!10109 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !1905, file: !1905, line: 312, type: !10098, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!10110 = !DILocation(line: 319, column: 29, scope: !10109)
!10111 = !DILocation(line: 319, column: 5, scope: !10109)
!10112 = !DILocation(line: 319, column: 19, scope: !10109)
!10113 = !DILocation(line: 319, column: 27, scope: !10109)
!10114 = !DILocation(line: 320, column: 29, scope: !10109)
!10115 = !DILocation(line: 320, column: 19, scope: !10109)
!10116 = !DILocation(line: 320, column: 27, scope: !10109)
!10117 = !DILocation(line: 322, column: 30, scope: !10109)
!10118 = !DILocation(line: 322, column: 19, scope: !10109)
!10119 = !DILocation(line: 322, column: 28, scope: !10109)
!10120 = !DILocation(line: 324, column: 30, scope: !10109)
!10121 = !DILocation(line: 324, column: 19, scope: !10109)
!10122 = !DILocation(line: 324, column: 28, scope: !10109)
!10123 = !DILocation(line: 326, column: 31, scope: !10109)
!10124 = !DILocation(line: 326, column: 19, scope: !10109)
!10125 = !DILocation(line: 326, column: 29, scope: !10109)
!10126 = !DILocation(line: 327, column: 31, scope: !10109)
!10127 = !DILocation(line: 327, column: 19, scope: !10109)
!10128 = !DILocation(line: 327, column: 29, scope: !10109)
!10129 = !DILocation(line: 332, column: 30, scope: !10109)
!10130 = !DILocation(line: 332, column: 19, scope: !10109)
!10131 = !DILocation(line: 332, column: 28, scope: !10109)
!10132 = !DILocation(line: 333, column: 30, scope: !10109)
!10133 = !DILocation(line: 333, column: 19, scope: !10109)
!10134 = !DILocation(line: 333, column: 28, scope: !10109)
!10135 = !DILocation(line: 334, column: 30, scope: !10109)
!10136 = !DILocation(line: 334, column: 19, scope: !10109)
!10137 = !DILocation(line: 334, column: 28, scope: !10109)
!10138 = !DILocation(line: 336, column: 30, scope: !10109)
!10139 = !DILocation(line: 336, column: 19, scope: !10109)
!10140 = !DILocation(line: 336, column: 28, scope: !10109)
!10141 = !DILocation(line: 337, column: 30, scope: !10109)
!10142 = !DILocation(line: 337, column: 19, scope: !10109)
!10143 = !DILocation(line: 337, column: 28, scope: !10109)
!10144 = !DILocation(line: 338, column: 30, scope: !10109)
!10145 = !DILocation(line: 338, column: 19, scope: !10109)
!10146 = !DILocation(line: 338, column: 28, scope: !10109)
!10147 = !DILocation(line: 339, column: 30, scope: !10109)
!10148 = !DILocation(line: 339, column: 19, scope: !10109)
!10149 = !DILocation(line: 339, column: 28, scope: !10109)
!10150 = !DILocation(line: 341, column: 5, scope: !10109)
!10151 = !DILocation(line: 345, column: 5, scope: !10109)
!10152 = !DILocation(line: 345, column: 19, scope: !10109)
!10153 = !DILocation(line: 345, column: 28, scope: !10109)
!10154 = !DILocation(line: 346, column: 5, scope: !10109)
!10155 = !DILocation(line: 346, column: 28, scope: !10109)
!10156 = !DILocation(line: 346, column: 82, scope: !10109)
!10157 = distinct !{!10157, !10154, !10158}
!10158 = !DILocation(line: 346, column: 87, scope: !10109)
!10159 = !DILocation(line: 347, column: 28, scope: !10109)
!10160 = !DILocation(line: 348, column: 5, scope: !10109)
!10161 = !DILocation(line: 348, column: 28, scope: !10109)
!10162 = !DILocation(line: 348, column: 82, scope: !10109)
!10163 = distinct !{!10163, !10160, !10164}
!10164 = !DILocation(line: 348, column: 87, scope: !10109)
!10165 = !DILocation(line: 349, column: 28, scope: !10109)
!10166 = !DILocation(line: 351, column: 5, scope: !10109)
!10167 = !DILocation(line: 353, column: 5, scope: !10109)
!10168 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !1905, file: !1905, line: 358, type: !208, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!10169 = !DILocation(line: 361, column: 36, scope: !10168)
!10170 = !DILocation(line: 361, column: 50, scope: !10168)
!10171 = !DILocation(line: 361, column: 34, scope: !10168)
!10172 = !DILocation(line: 362, column: 50, scope: !10168)
!10173 = !DILocation(line: 362, column: 34, scope: !10168)
!10174 = !DILocation(line: 363, column: 50, scope: !10168)
!10175 = !DILocation(line: 363, column: 34, scope: !10168)
!10176 = !DILocation(line: 364, column: 50, scope: !10168)
!10177 = !DILocation(line: 364, column: 34, scope: !10168)
!10178 = !DILocation(line: 365, column: 50, scope: !10168)
!10179 = !DILocation(line: 365, column: 34, scope: !10168)
!10180 = !DILocation(line: 366, column: 50, scope: !10168)
!10181 = !DILocation(line: 366, column: 34, scope: !10168)
!10182 = !DILocation(line: 367, column: 50, scope: !10168)
!10183 = !DILocation(line: 367, column: 34, scope: !10168)
!10184 = !DILocation(line: 368, column: 50, scope: !10168)
!10185 = !DILocation(line: 368, column: 34, scope: !10168)
!10186 = !DILocation(line: 369, column: 50, scope: !10168)
!10187 = !DILocation(line: 369, column: 34, scope: !10168)
!10188 = !DILocation(line: 370, column: 50, scope: !10168)
!10189 = !DILocation(line: 370, column: 34, scope: !10168)
!10190 = !DILocation(line: 371, column: 50, scope: !10168)
!10191 = !DILocation(line: 371, column: 34, scope: !10168)
!10192 = !DILocation(line: 372, column: 50, scope: !10168)
!10193 = !DILocation(line: 372, column: 34, scope: !10168)
!10194 = !DILocation(line: 373, column: 51, scope: !10168)
!10195 = !DILocation(line: 373, column: 35, scope: !10168)
!10196 = !DILocation(line: 374, column: 51, scope: !10168)
!10197 = !DILocation(line: 374, column: 35, scope: !10168)
!10198 = !DILocation(line: 375, column: 50, scope: !10168)
!10199 = !DILocation(line: 375, column: 34, scope: !10168)
!10200 = !DILocation(line: 376, column: 50, scope: !10168)
!10201 = !DILocation(line: 376, column: 34, scope: !10168)
!10202 = !DILocation(line: 377, column: 50, scope: !10168)
!10203 = !DILocation(line: 377, column: 34, scope: !10168)
!10204 = !DILocation(line: 378, column: 50, scope: !10168)
!10205 = !DILocation(line: 378, column: 34, scope: !10168)
!10206 = !DILocation(line: 379, column: 50, scope: !10168)
!10207 = !DILocation(line: 379, column: 34, scope: !10168)
!10208 = !DILocation(line: 380, column: 50, scope: !10168)
!10209 = !DILocation(line: 380, column: 34, scope: !10168)
!10210 = !DILocation(line: 382, column: 1, scope: !10168)
!10211 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !1905, file: !1905, line: 384, type: !208, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!10212 = !DILocation(line: 387, column: 5, scope: !10211)
!10213 = !DILocation(line: 387, column: 27, scope: !10211)
!10214 = !DILocation(line: 387, column: 36, scope: !10211)
!10215 = !DILocation(line: 387, column: 76, scope: !10211)
!10216 = distinct !{!10216, !10212, !10217}
!10217 = !DILocation(line: 387, column: 84, scope: !10211)
!10218 = !DILocation(line: 388, column: 50, scope: !10211)
!10219 = !DILocation(line: 388, column: 19, scope: !10211)
!10220 = !DILocation(line: 388, column: 28, scope: !10211)
!10221 = !DILocation(line: 389, column: 50, scope: !10211)
!10222 = !DILocation(line: 389, column: 19, scope: !10211)
!10223 = !DILocation(line: 389, column: 28, scope: !10211)
!10224 = !DILocation(line: 390, column: 50, scope: !10211)
!10225 = !DILocation(line: 390, column: 19, scope: !10211)
!10226 = !DILocation(line: 390, column: 28, scope: !10211)
!10227 = !DILocation(line: 391, column: 50, scope: !10211)
!10228 = !DILocation(line: 391, column: 19, scope: !10211)
!10229 = !DILocation(line: 391, column: 28, scope: !10211)
!10230 = !DILocation(line: 392, column: 50, scope: !10211)
!10231 = !DILocation(line: 392, column: 19, scope: !10211)
!10232 = !DILocation(line: 392, column: 28, scope: !10211)
!10233 = !DILocation(line: 393, column: 50, scope: !10211)
!10234 = !DILocation(line: 393, column: 19, scope: !10211)
!10235 = !DILocation(line: 393, column: 28, scope: !10211)
!10236 = !DILocation(line: 394, column: 51, scope: !10211)
!10237 = !DILocation(line: 394, column: 19, scope: !10211)
!10238 = !DILocation(line: 394, column: 29, scope: !10211)
!10239 = !DILocation(line: 395, column: 51, scope: !10211)
!10240 = !DILocation(line: 395, column: 19, scope: !10211)
!10241 = !DILocation(line: 395, column: 29, scope: !10211)
!10242 = !DILocation(line: 396, column: 50, scope: !10211)
!10243 = !DILocation(line: 396, column: 19, scope: !10211)
!10244 = !DILocation(line: 396, column: 28, scope: !10211)
!10245 = !DILocation(line: 397, column: 50, scope: !10211)
!10246 = !DILocation(line: 397, column: 19, scope: !10211)
!10247 = !DILocation(line: 397, column: 28, scope: !10211)
!10248 = !DILocation(line: 398, column: 50, scope: !10211)
!10249 = !DILocation(line: 398, column: 19, scope: !10211)
!10250 = !DILocation(line: 398, column: 28, scope: !10211)
!10251 = !DILocation(line: 399, column: 50, scope: !10211)
!10252 = !DILocation(line: 399, column: 19, scope: !10211)
!10253 = !DILocation(line: 399, column: 28, scope: !10211)
!10254 = !DILocation(line: 400, column: 50, scope: !10211)
!10255 = !DILocation(line: 400, column: 19, scope: !10211)
!10256 = !DILocation(line: 400, column: 28, scope: !10211)
!10257 = !DILocation(line: 401, column: 50, scope: !10211)
!10258 = !DILocation(line: 401, column: 19, scope: !10211)
!10259 = !DILocation(line: 401, column: 28, scope: !10211)
!10260 = !DILocation(line: 402, column: 50, scope: !10211)
!10261 = !DILocation(line: 402, column: 19, scope: !10211)
!10262 = !DILocation(line: 402, column: 28, scope: !10211)
!10263 = !DILocation(line: 403, column: 50, scope: !10211)
!10264 = !DILocation(line: 403, column: 19, scope: !10211)
!10265 = !DILocation(line: 403, column: 28, scope: !10211)
!10266 = !DILocation(line: 404, column: 50, scope: !10211)
!10267 = !DILocation(line: 404, column: 19, scope: !10211)
!10268 = !DILocation(line: 404, column: 28, scope: !10211)
!10269 = !DILocation(line: 405, column: 50, scope: !10211)
!10270 = !DILocation(line: 405, column: 19, scope: !10211)
!10271 = !DILocation(line: 405, column: 28, scope: !10211)
!10272 = !DILocation(line: 406, column: 50, scope: !10211)
!10273 = !DILocation(line: 406, column: 19, scope: !10211)
!10274 = !DILocation(line: 406, column: 28, scope: !10211)
!10275 = !DILocation(line: 408, column: 1, scope: !10211)
!10276 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !1905, file: !1905, line: 410, type: !208, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!10277 = !DILocation(line: 413, column: 29, scope: !10276)
!10278 = !DILocation(line: 413, column: 43, scope: !10276)
!10279 = !DILocation(line: 413, column: 51, scope: !10276)
!10280 = !DILocation(line: 413, column: 27, scope: !10276)
!10281 = !DILocation(line: 416, column: 19, scope: !10276)
!10282 = !DILocation(line: 416, column: 29, scope: !10276)
!10283 = !DILocation(line: 417, column: 5, scope: !10276)
!10284 = !DILocation(line: 417, column: 27, scope: !10276)
!10285 = !DILocation(line: 417, column: 93, scope: !10276)
!10286 = distinct !{!10286, !10283, !10287}
!10287 = !DILocation(line: 417, column: 98, scope: !10276)
!10288 = !DILocation(line: 418, column: 29, scope: !10276)
!10289 = !DILocation(line: 419, column: 5, scope: !10276)
!10290 = !DILocation(line: 419, column: 27, scope: !10276)
!10291 = !DILocation(line: 419, column: 93, scope: !10276)
!10292 = distinct !{!10292, !10289, !10293}
!10293 = !DILocation(line: 419, column: 98, scope: !10276)
!10294 = !DILocation(line: 421, column: 5, scope: !10276)
!10295 = !DILocation(line: 422, column: 5, scope: !10276)
!10296 = !DILocation(line: 422, column: 19, scope: !10276)
!10297 = !DILocation(line: 422, column: 28, scope: !10276)
!10298 = !DILocation(line: 423, column: 5, scope: !10276)
!10299 = !DILocation(line: 423, column: 28, scope: !10276)
!10300 = !DILocation(line: 423, column: 82, scope: !10276)
!10301 = distinct !{!10301, !10298, !10302}
!10302 = !DILocation(line: 423, column: 87, scope: !10276)
!10303 = !DILocation(line: 424, column: 28, scope: !10276)
!10304 = !DILocation(line: 425, column: 5, scope: !10276)
!10305 = !DILocation(line: 425, column: 28, scope: !10276)
!10306 = !DILocation(line: 425, column: 82, scope: !10276)
!10307 = distinct !{!10307, !10304, !10308}
!10308 = !DILocation(line: 425, column: 87, scope: !10276)
!10309 = !DILocation(line: 426, column: 28, scope: !10276)
!10310 = !DILocation(line: 428, column: 50, scope: !10276)
!10311 = !DILocation(line: 428, column: 19, scope: !10276)
!10312 = !DILocation(line: 428, column: 28, scope: !10276)
!10313 = !DILocation(line: 432, column: 1, scope: !10276)
!10314 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !1905, file: !1905, line: 434, type: !208, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!10315 = !DILocation(line: 437, column: 5, scope: !10314)
!10316 = !DILocation(line: 440, column: 5, scope: !10314)
!10317 = !DILocation(line: 440, column: 27, scope: !10314)
!10318 = !DILocation(line: 440, column: 36, scope: !10314)
!10319 = !DILocation(line: 440, column: 76, scope: !10314)
!10320 = distinct !{!10320, !10316, !10321}
!10321 = !DILocation(line: 440, column: 84, scope: !10314)
!10322 = !DILocation(line: 441, column: 45, scope: !10314)
!10323 = !DILocation(line: 441, column: 54, scope: !10314)
!10324 = !DILocation(line: 441, column: 28, scope: !10314)
!10325 = !DILocation(line: 442, column: 19, scope: !10314)
!10326 = !DILocation(line: 442, column: 31, scope: !10314)
!10327 = !DILocation(line: 443, column: 5, scope: !10314)
!10328 = !DILocation(line: 443, column: 27, scope: !10314)
!10329 = !DILocation(line: 443, column: 39, scope: !10314)
!10330 = !DILocation(line: 443, column: 65, scope: !10314)
!10331 = distinct !{!10331, !10327, !10332}
!10332 = !DILocation(line: 443, column: 70, scope: !10314)
!10333 = !DILocation(line: 444, column: 19, scope: !10314)
!10334 = !DILocation(line: 444, column: 28, scope: !10314)
!10335 = !DILocation(line: 445, column: 5, scope: !10314)
!10336 = !DILocation(line: 445, column: 27, scope: !10314)
!10337 = !DILocation(line: 445, column: 91, scope: !10314)
!10338 = distinct !{!10338, !10335, !10339}
!10339 = !DILocation(line: 445, column: 96, scope: !10314)
!10340 = !DILocation(line: 447, column: 43, scope: !10314)
!10341 = !DILocation(line: 447, column: 51, scope: !10314)
!10342 = !DILocation(line: 447, column: 27, scope: !10314)
!10343 = !DILocation(line: 450, column: 1, scope: !10314)
!10344 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !1905, file: !1905, line: 452, type: !10345, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !10348)
!10345 = !DISubroutineType(types: !10346)
!10346 = !{!858, !10347}
!10347 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !1908, line: 43, baseType: !1907)
!10348 = !{!10349, !10350}
!10349 = !DILocalVariable(name: "clock", arg: 1, scope: !10344, file: !1905, line: 452, type: !10347)
!10350 = !DILocalVariable(name: "delay", scope: !10344, file: !1905, line: 457, type: !184)
!10351 = !DILocation(line: 0, scope: !10344)
!10352 = !DILocation(line: 457, column: 5, scope: !10344)
!10353 = !DILocation(line: 457, column: 23, scope: !10344)
!10354 = !DILocation(line: 458, column: 9, scope: !10344)
!10355 = !DILocation(line: 465, column: 9, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10357, file: !1905, line: 458, column: 39)
!10357 = distinct !DILexicalBlock(scope: !10344, file: !1905, line: 458, column: 9)
!10358 = !DILocation(line: 465, column: 23, scope: !10356)
!10359 = !DILocation(line: 465, column: 32, scope: !10356)
!10360 = !DILocation(line: 466, column: 32, scope: !10356)
!10361 = !DILocation(line: 467, column: 9, scope: !10356)
!10362 = !DILocation(line: 467, column: 32, scope: !10356)
!10363 = !DILocation(line: 467, column: 86, scope: !10356)
!10364 = distinct !{!10364, !10361, !10365}
!10365 = !DILocation(line: 467, column: 91, scope: !10356)
!10366 = !DILocation(line: 468, column: 32, scope: !10356)
!10367 = !DILocation(line: 469, column: 9, scope: !10356)
!10368 = !DILocation(line: 469, column: 32, scope: !10356)
!10369 = !DILocation(line: 469, column: 86, scope: !10356)
!10370 = distinct !{!10370, !10367, !10371}
!10371 = !DILocation(line: 469, column: 91, scope: !10356)
!10372 = !DILocation(line: 470, column: 32, scope: !10356)
!10373 = !DILocation(line: 472, column: 20, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10356, file: !1905, line: 472, column: 9)
!10375 = !DILocation(line: 472, column: 25, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10374, file: !1905, line: 472, column: 9)
!10377 = !DILocation(line: 472, column: 31, scope: !10376)
!10378 = !DILocation(line: 472, column: 9, scope: !10374)
!10379 = !DILocation(line: 472, column: 44, scope: !10376)
!10380 = distinct !{!10380, !10378, !10381}
!10381 = !DILocation(line: 472, column: 47, scope: !10374)
!10382 = !DILocation(line: 478, column: 9, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !10384, file: !1905, line: 477, column: 12)
!10384 = distinct !DILexicalBlock(scope: !10357, file: !1905, line: 475, column: 16)
!10385 = !DILocation(line: 483, column: 1, scope: !10344)
!10386 = distinct !DISubprogram(name: "emi_mask_master", scope: !1905, file: !1905, line: 487, type: !208, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!10387 = !DILocation(line: 490, column: 30, scope: !10386)
!10388 = !DILocation(line: 490, column: 44, scope: !10386)
!10389 = !DILocation(line: 490, column: 53, scope: !10386)
!10390 = !DILocation(line: 490, column: 28, scope: !10386)
!10391 = !DILocation(line: 492, column: 1, scope: !10386)
!10392 = distinct !DISubprogram(name: "emi_unmask_master", scope: !1905, file: !1905, line: 494, type: !208, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !210)
!10393 = !DILocation(line: 497, column: 30, scope: !10392)
!10394 = !DILocation(line: 497, column: 44, scope: !10392)
!10395 = !DILocation(line: 497, column: 53, scope: !10392)
!10396 = !DILocation(line: 497, column: 28, scope: !10392)
!10397 = !DILocation(line: 500, column: 1, scope: !10392)
!10398 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !2073, file: !2073, line: 56, type: !7208, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2072, retainedNodes: !210)
!10399 = !DILocation(line: 61, column: 5, scope: !10398)
!10400 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !2073, file: !2073, line: 65, type: !7208, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2072, retainedNodes: !210)
!10401 = !DILocation(line: 70, column: 5, scope: !10400)
!10402 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !2073, file: !2073, line: 74, type: !208, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2072, retainedNodes: !210)
!10403 = !DILocation(line: 79, column: 9, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10405, file: !2073, line: 78, column: 12)
!10405 = distinct !DILexicalBlock(scope: !10402, file: !2073, line: 76, column: 9)
!10406 = !DILocation(line: 81, column: 1, scope: !10402)
!10407 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !2073, file: !2073, line: 83, type: !208, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2072, retainedNodes: !210)
!10408 = !DILocation(line: 88, column: 9, scope: !10409)
!10409 = distinct !DILexicalBlock(scope: !10410, file: !2073, line: 87, column: 12)
!10410 = distinct !DILexicalBlock(scope: !10407, file: !2073, line: 85, column: 9)
!10411 = !DILocation(line: 90, column: 1, scope: !10407)
!10412 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !2073, file: !2073, line: 92, type: !208, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2072, retainedNodes: !210)
!10413 = !DILocation(line: 97, column: 9, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10415, file: !2073, line: 96, column: 12)
!10415 = distinct !DILexicalBlock(scope: !10412, file: !2073, line: 94, column: 9)
!10416 = !DILocation(line: 99, column: 1, scope: !10412)
!10417 = distinct !DISubprogram(name: "peri_clk_26m", scope: !2073, file: !2073, line: 101, type: !208, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2072, retainedNodes: !210)
!10418 = !DILocation(line: 106, column: 9, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10420, file: !2073, line: 105, column: 12)
!10420 = distinct !DILexicalBlock(scope: !10417, file: !2073, line: 103, column: 9)
!10421 = !DILocation(line: 108, column: 1, scope: !10417)
!10422 = distinct !DISubprogram(name: "__io_putchar", scope: !2085, file: !2085, line: 52, type: !10423, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !10425)
!10423 = !DISubroutineType(types: !10424)
!10424 = !{!79, !79}
!10425 = !{!10426}
!10426 = !DILocalVariable(name: "ch", arg: 1, scope: !10422, file: !2085, line: 52, type: !79)
!10427 = !DILocation(line: 0, scope: !10422)
!10428 = !DILocation(line: 59, column: 35, scope: !10422)
!10429 = !DILocation(line: 59, column: 5, scope: !10422)
!10430 = !DILocation(line: 60, column: 5, scope: !10422)
!10431 = distinct !DISubprogram(name: "main", scope: !2085, file: !2085, line: 216, type: !9926, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !210)
!10432 = !DILocation(line: 219, column: 5, scope: !10431)
!10433 = !DILocation(line: 221, column: 5, scope: !10431)
!10434 = !DILocation(line: 224, column: 5, scope: !10431)
!10435 = !DILocation(line: 319, column: 3, scope: !10436, inlinedAt: !10437)
!10436 = distinct !DISubprogram(name: "__enable_irq", scope: !5818, file: !5818, line: 317, type: !208, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !210)
!10437 = distinct !DILocation(line: 227, column: 5, scope: !10431)
!10438 = !{i64 648680}
!10439 = !DILocation(line: 496, column: 3, scope: !10440, inlinedAt: !10441)
!10440 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !5818, file: !5818, line: 494, type: !208, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !210)
!10441 = distinct !DILocation(line: 228, column: 5, scope: !10431)
!10442 = !{i64 652955}
!10443 = !DILocation(line: 231, column: 5, scope: !10431)
!10444 = !DILocation(line: 234, column: 5, scope: !10431)
!10445 = !DILocation(line: 235, column: 5, scope: !10431)
!10446 = !DILocation(line: 237, column: 5, scope: !10431)
!10447 = !DILocation(line: 239, column: 5, scope: !10431)
!10448 = distinct !{!10448, !10447, !10449}
!10449 = !DILocation(line: 239, column: 14, scope: !10431)
!10450 = distinct !DISubprogram(name: "SystemClock_Config", scope: !2085, file: !2085, line: 90, type: !208, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !210)
!10451 = !DILocation(line: 92, column: 5, scope: !10450)
!10452 = !DILocation(line: 93, column: 1, scope: !10450)
!10453 = distinct !DISubprogram(name: "prvSetupHardware", scope: !2085, file: !2085, line: 100, type: !208, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !210)
!10454 = !DILocation(line: 103, column: 5, scope: !10453)
!10455 = !DILocation(line: 104, column: 5, scope: !10453)
!10456 = !DILocation(line: 105, column: 5, scope: !10453)
!10457 = !DILocation(line: 106, column: 1, scope: !10453)
!10458 = distinct !DISubprogram(name: "hal_gpt_interrupt_repeat_mode_example", scope: !2085, file: !2085, line: 183, type: !208, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !10459)
!10459 = !{!10460, !10461, !10462}
!10460 = !DILocalVariable(name: "ret", scope: !10458, file: !2085, line: 185, type: !2100)
!10461 = !DILocalVariable(name: "time", scope: !10458, file: !2085, line: 186, type: !175)
!10462 = !DILocalVariable(name: "count", scope: !10458, file: !2085, line: 186, type: !175)
!10463 = !DILocation(line: 186, column: 5, scope: !10458)
!10464 = !DILocation(line: 188, column: 5, scope: !10458)
!10465 = !DILocation(line: 189, column: 14, scope: !10458)
!10466 = !DILocation(line: 0, scope: !10458)
!10467 = !DILocation(line: 193, column: 11, scope: !10458)
!10468 = !DILocation(line: 194, column: 13, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10458, file: !2085, line: 194, column: 9)
!10470 = !DILocation(line: 194, column: 9, scope: !10458)
!10471 = !DILocation(line: 195, column: 9, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10469, file: !2085, line: 194, column: 35)
!10473 = !DILocation(line: 196, column: 9, scope: !10472)
!10474 = !DILocation(line: 200, column: 37, scope: !10458)
!10475 = !DILocation(line: 200, column: 11, scope: !10458)
!10476 = !DILocation(line: 201, column: 13, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10458, file: !2085, line: 201, column: 9)
!10478 = !DILocation(line: 201, column: 9, scope: !10458)
!10479 = !DILocation(line: 202, column: 9, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10477, file: !2085, line: 201, column: 35)
!10481 = !DILocation(line: 203, column: 24, scope: !10480)
!10482 = !DILocation(line: 203, column: 9, scope: !10480)
!10483 = !DILocation(line: 204, column: 9, scope: !10480)
!10484 = !DILocation(line: 208, column: 34, scope: !10458)
!10485 = !DILocation(line: 208, column: 11, scope: !10458)
!10486 = !DILocation(line: 209, column: 13, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10458, file: !2085, line: 209, column: 9)
!10488 = !DILocation(line: 209, column: 9, scope: !10458)
!10489 = !DILocation(line: 210, column: 9, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10487, file: !2085, line: 209, column: 35)
!10491 = !DILocation(line: 211, column: 9, scope: !10490)
!10492 = !DILocation(line: 213, column: 5, scope: !10458)
!10493 = !DILocation(line: 214, column: 1, scope: !10458)
!10494 = !DILocation(line: 0, scope: !2095)
!10495 = !DILocation(line: 145, column: 19, scope: !2095)
!10496 = !DILocation(line: 146, column: 23, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !2095, file: !2085, line: 146, column: 9)
!10498 = !DILocation(line: 146, column: 9, scope: !2095)
!10499 = !DILocation(line: 147, column: 24, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10497, file: !2085, line: 146, column: 29)
!10501 = !DILocation(line: 148, column: 40, scope: !10500)
!10502 = !DILocation(line: 149, column: 19, scope: !10500)
!10503 = !DILocation(line: 148, column: 38, scope: !10500)
!10504 = !DILocation(line: 150, column: 34, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10500, file: !2085, line: 150, column: 13)
!10506 = !DILocation(line: 151, column: 32, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10505, file: !2085, line: 150, column: 58)
!10508 = !DILocation(line: 151, column: 13, scope: !10507)
!10509 = !DILocation(line: 152, column: 28, scope: !10507)
!10510 = !DILocation(line: 152, column: 13, scope: !10507)
!10511 = !DILocation(line: 153, column: 79, scope: !10507)
!10512 = !DILocation(line: 153, column: 99, scope: !10507)
!10513 = !{i32 0, i32 131072001}
!10514 = !DILocation(line: 153, column: 13, scope: !10507)
!10515 = !DILocation(line: 154, column: 13, scope: !10507)
!10516 = !DILocation(line: 156, column: 13, scope: !10507)
!10517 = !DILocation(line: 157, column: 13, scope: !10507)
!10518 = !DILocation(line: 160, column: 34, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10497, file: !2085, line: 159, column: 12)
!10520 = !DILocation(line: 160, column: 15, scope: !10519)
!10521 = !DILocation(line: 161, column: 17, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10519, file: !2085, line: 161, column: 13)
!10523 = !DILocation(line: 161, column: 13, scope: !10519)
!10524 = !DILocation(line: 162, column: 13, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10522, file: !2085, line: 161, column: 39)
!10526 = !DILocation(line: 163, column: 13, scope: !10525)
!10527 = !DILocation(line: 166, column: 30, scope: !10519)
!10528 = !DILocation(line: 166, column: 15, scope: !10519)
!10529 = !DILocation(line: 167, column: 17, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10519, file: !2085, line: 167, column: 13)
!10531 = !DILocation(line: 167, column: 13, scope: !10519)
!10532 = !DILocation(line: 168, column: 13, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10530, file: !2085, line: 167, column: 39)
!10534 = !DILocation(line: 169, column: 13, scope: !10533)
!10535 = !DILocation(line: 171, column: 9, scope: !10519)
!10536 = !DILocation(line: 173, column: 9, scope: !10519)
!10537 = !DILocation(line: 176, column: 1, scope: !2095)
!10538 = distinct !DISubprogram(name: "get_current_millisecond", scope: !2085, file: !2085, line: 113, type: !3362, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !10539)
!10539 = !{!10540, !10541, !10542, !10543, !10544}
!10540 = !DILocalVariable(name: "ret", scope: !10538, file: !2085, line: 115, type: !2100)
!10541 = !DILocalVariable(name: "count", scope: !10538, file: !2085, line: 116, type: !175)
!10542 = !DILocalVariable(name: "time", scope: !10538, file: !2085, line: 117, type: !175)
!10543 = !DILocalVariable(name: "time_s", scope: !10538, file: !2085, line: 117, type: !175)
!10544 = !DILocalVariable(name: "time_ms", scope: !10538, file: !2085, line: 117, type: !175)
!10545 = !DILocation(line: 116, column: 5, scope: !10538)
!10546 = !DILocation(line: 0, scope: !10538)
!10547 = !DILocation(line: 116, column: 14, scope: !10538)
!10548 = !DILocation(line: 118, column: 11, scope: !10538)
!10549 = !DILocation(line: 120, column: 13, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10538, file: !2085, line: 120, column: 9)
!10551 = !DILocation(line: 120, column: 9, scope: !10538)
!10552 = !DILocation(line: 121, column: 9, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10550, file: !2085, line: 120, column: 35)
!10554 = !DILocation(line: 122, column: 9, scope: !10553)
!10555 = !DILocation(line: 125, column: 14, scope: !10538)
!10556 = !DILocation(line: 125, column: 20, scope: !10538)
!10557 = !DILocation(line: 126, column: 23, scope: !10538)
!10558 = !DILocation(line: 126, column: 32, scope: !10538)
!10559 = !DILocation(line: 126, column: 39, scope: !10538)
!10560 = !DILocation(line: 126, column: 48, scope: !10538)
!10561 = !DILocation(line: 127, column: 19, scope: !10538)
!10562 = !DILocation(line: 127, column: 26, scope: !10538)
!10563 = !DILocation(line: 129, column: 5, scope: !10538)
!10564 = !DILocation(line: 130, column: 1, scope: !10538)
!10565 = distinct !DISubprogram(name: "log_uart_init", scope: !2085, file: !2085, line: 68, type: !208, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !10566)
!10566 = !{!10567}
!10567 = !DILocalVariable(name: "uart_config", scope: !10565, file: !2085, line: 70, type: !10568)
!10568 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !572, line: 378, baseType: !10569)
!10569 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 373, size: 128, elements: !10570)
!10570 = !{!10571, !10572, !10573, !10574}
!10571 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !10569, file: !572, line: 374, baseType: !4214, size: 32)
!10572 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !10569, file: !572, line: 375, baseType: !4264, size: 32, offset: 32)
!10573 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !10569, file: !572, line: 376, baseType: !4266, size: 32, offset: 64)
!10574 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !10569, file: !572, line: 377, baseType: !4268, size: 32, offset: 96)
!10575 = !DILocation(line: 70, column: 5, scope: !10565)
!10576 = !DILocation(line: 70, column: 23, scope: !10565)
!10577 = !DILocation(line: 72, column: 5, scope: !10565)
!10578 = !DILocation(line: 73, column: 5, scope: !10565)
!10579 = !DILocation(line: 74, column: 5, scope: !10565)
!10580 = !DILocation(line: 75, column: 5, scope: !10565)
!10581 = !DILocation(line: 78, column: 17, scope: !10565)
!10582 = !DILocation(line: 78, column: 26, scope: !10565)
!10583 = !DILocation(line: 79, column: 17, scope: !10565)
!10584 = !DILocation(line: 79, column: 29, scope: !10565)
!10585 = !DILocation(line: 80, column: 17, scope: !10565)
!10586 = !DILocation(line: 80, column: 26, scope: !10565)
!10587 = !DILocation(line: 81, column: 17, scope: !10565)
!10588 = !DILocation(line: 81, column: 24, scope: !10565)
!10589 = !DILocation(line: 82, column: 5, scope: !10565)
!10590 = !DILocation(line: 83, column: 1, scope: !10565)
!10591 = distinct !DISubprogram(name: "_close", scope: !2109, file: !2109, line: 5, type: !10423, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !10592)
!10592 = !{!10593}
!10593 = !DILocalVariable(name: "file", arg: 1, scope: !10591, file: !2109, line: 5, type: !79)
!10594 = !DILocation(line: 0, scope: !10591)
!10595 = !DILocation(line: 7, column: 5, scope: !10591)
!10596 = distinct !DISubprogram(name: "_fstat", scope: !2109, file: !2109, line: 10, type: !10597, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !10645)
!10597 = !DISubroutineType(types: !10598)
!10598 = !{!79, !79, !10599}
!10599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10600, size: 32)
!10600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !10601, line: 27, size: 704, elements: !10602)
!10601 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!10602 = !{!10603, !10606, !10609, !10612, !10615, !10618, !10621, !10622, !10625, !10635, !10636, !10637, !10640, !10643}
!10603 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10600, file: !10601, line: 29, baseType: !10604, size: 16)
!10604 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !2113, line: 161, baseType: !10605)
!10605 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2153, line: 56, baseType: !1358)
!10606 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10600, file: !10601, line: 30, baseType: !10607, size: 16, offset: 16)
!10607 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !2113, line: 139, baseType: !10608)
!10608 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2153, line: 75, baseType: !954)
!10609 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10600, file: !10601, line: 31, baseType: !10610, size: 32, offset: 32)
!10610 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !2113, line: 189, baseType: !10611)
!10611 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2153, line: 90, baseType: !177)
!10612 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10600, file: !10601, line: 32, baseType: !10613, size: 16, offset: 64)
!10613 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !2113, line: 194, baseType: !10614)
!10614 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2153, line: 209, baseType: !954)
!10615 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10600, file: !10601, line: 33, baseType: !10616, size: 16, offset: 80)
!10616 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !2113, line: 165, baseType: !10617)
!10617 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2153, line: 60, baseType: !954)
!10618 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10600, file: !10601, line: 34, baseType: !10619, size: 16, offset: 96)
!10619 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !2113, line: 169, baseType: !10620)
!10620 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2153, line: 63, baseType: !954)
!10621 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10600, file: !10601, line: 35, baseType: !10604, size: 16, offset: 112)
!10622 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10600, file: !10601, line: 36, baseType: !10623, size: 32, offset: 128)
!10623 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2113, line: 157, baseType: !10624)
!10624 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2153, line: 102, baseType: !2169)
!10625 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10600, file: !10601, line: 42, baseType: !10626, size: 128, offset: 192)
!10626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !10627, line: 47, size: 128, elements: !10628)
!10627 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!10628 = !{!10629, !10634}
!10629 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10626, file: !10627, line: 48, baseType: !10630, size: 64)
!10630 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !10631, line: 42, baseType: !10632)
!10631 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!10632 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !178, line: 200, baseType: !10633)
!10633 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!10634 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10626, file: !10627, line: 49, baseType: !2154, size: 32, offset: 64)
!10635 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10600, file: !10601, line: 43, baseType: !10626, size: 128, offset: 320)
!10636 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10600, file: !10601, line: 44, baseType: !10626, size: 128, offset: 448)
!10637 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10600, file: !10601, line: 45, baseType: !10638, size: 32, offset: 576)
!10638 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !2113, line: 102, baseType: !10639)
!10639 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2153, line: 34, baseType: !2154)
!10640 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10600, file: !10601, line: 46, baseType: !10641, size: 32, offset: 608)
!10641 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !2113, line: 97, baseType: !10642)
!10642 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2153, line: 30, baseType: !2154)
!10643 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !10600, file: !10601, line: 48, baseType: !10644, size: 64, offset: 640)
!10644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2154, size: 64, elements: !383)
!10645 = !{!10646, !10647}
!10646 = !DILocalVariable(name: "file", arg: 1, scope: !10596, file: !2109, line: 10, type: !79)
!10647 = !DILocalVariable(name: "st", arg: 2, scope: !10596, file: !2109, line: 10, type: !10599)
!10648 = !DILocation(line: 0, scope: !10596)
!10649 = !DILocation(line: 12, column: 5, scope: !10596)
!10650 = distinct !DISubprogram(name: "_isatty", scope: !2109, file: !2109, line: 15, type: !10423, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !10651)
!10651 = !{!10652}
!10652 = !DILocalVariable(name: "file", arg: 1, scope: !10650, file: !2109, line: 15, type: !79)
!10653 = !DILocation(line: 0, scope: !10650)
!10654 = !DILocation(line: 17, column: 5, scope: !10650)
!10655 = distinct !DISubprogram(name: "_lseek", scope: !2109, file: !2109, line: 20, type: !10656, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !10658)
!10656 = !DISubroutineType(types: !10657)
!10657 = !{!79, !79, !79, !79}
!10658 = !{!10659, !10660, !10661}
!10659 = !DILocalVariable(name: "file", arg: 1, scope: !10655, file: !2109, line: 20, type: !79)
!10660 = !DILocalVariable(name: "ptr", arg: 2, scope: !10655, file: !2109, line: 20, type: !79)
!10661 = !DILocalVariable(name: "dir", arg: 3, scope: !10655, file: !2109, line: 20, type: !79)
!10662 = !DILocation(line: 0, scope: !10655)
!10663 = !DILocation(line: 22, column: 5, scope: !10655)
!10664 = distinct !DISubprogram(name: "_open", scope: !2109, file: !2109, line: 25, type: !10665, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !10667)
!10665 = !DISubroutineType(types: !10666)
!10666 = !{!79, !2147, !79, !79}
!10667 = !{!10668, !10669, !10670}
!10668 = !DILocalVariable(name: "name", arg: 1, scope: !10664, file: !2109, line: 25, type: !2147)
!10669 = !DILocalVariable(name: "flags", arg: 2, scope: !10664, file: !2109, line: 25, type: !79)
!10670 = !DILocalVariable(name: "mode", arg: 3, scope: !10664, file: !2109, line: 25, type: !79)
!10671 = !DILocation(line: 0, scope: !10664)
!10672 = !DILocation(line: 27, column: 5, scope: !10664)
!10673 = distinct !DISubprogram(name: "_read", scope: !2109, file: !2109, line: 30, type: !10674, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !10676)
!10674 = !DISubroutineType(types: !10675)
!10675 = !{!79, !79, !2114, !79}
!10676 = !{!10677, !10678, !10679}
!10677 = !DILocalVariable(name: "file", arg: 1, scope: !10673, file: !2109, line: 30, type: !79)
!10678 = !DILocalVariable(name: "ptr", arg: 2, scope: !10673, file: !2109, line: 30, type: !2114)
!10679 = !DILocalVariable(name: "len", arg: 3, scope: !10673, file: !2109, line: 30, type: !79)
!10680 = !DILocation(line: 0, scope: !10673)
!10681 = !DILocation(line: 32, column: 5, scope: !10673)
!10682 = distinct !DISubprogram(name: "_getpid", scope: !2109, file: !2109, line: 48, type: !9926, scopeLine: 49, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !210)
!10683 = !DILocation(line: 50, column: 5, scope: !10682)
!10684 = distinct !DISubprogram(name: "_kill", scope: !2109, file: !2109, line: 56, type: !10685, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !10687)
!10685 = !DISubroutineType(types: !10686)
!10686 = !{!79, !79, !79}
!10687 = !{!10688, !10689}
!10688 = !DILocalVariable(name: "pid", arg: 1, scope: !10684, file: !2109, line: 56, type: !79)
!10689 = !DILocalVariable(name: "sig", arg: 2, scope: !10684, file: !2109, line: 56, type: !79)
!10690 = !DILocation(line: 0, scope: !10684)
!10691 = !DILocation(line: 58, column: 5, scope: !10684)
!10692 = distinct !DISubprogram(name: "_exit", scope: !2109, file: !2109, line: 61, type: !10423, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !10693)
!10693 = !{!10694}
!10694 = !DILocalVariable(name: "val", arg: 1, scope: !10692, file: !2109, line: 61, type: !79)
!10695 = !DILocation(line: 0, scope: !10692)
!10696 = !DILocation(line: 63, column: 5, scope: !10692)
!10697 = !DILocation(line: 0, scope: !2108)
!10698 = !DILocation(line: 73, column: 5, scope: !2108)
!10699 = !{i64 1127}
!10700 = !DILocation(line: 75, column: 14, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !2108, file: !2109, line: 75, column: 9)
!10702 = !DILocation(line: 75, column: 11, scope: !10701)
!10703 = !DILocation(line: 75, column: 9, scope: !2108)
!10704 = !DILocation(line: 81, column: 32, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !2108, file: !2109, line: 81, column: 9)
!10706 = !DILocation(line: 81, column: 15, scope: !10705)
!10707 = !DILocation(line: 92, column: 1, scope: !2108)
!10708 = !DILocation(line: 81, column: 9, scope: !2108)
!10709 = distinct !DISubprogram(name: "_write", scope: !2109, file: !2109, line: 94, type: !10674, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !10710)
!10710 = !{!10711, !10712, !10713, !10714}
!10711 = !DILocalVariable(name: "file", arg: 1, scope: !10709, file: !2109, line: 94, type: !79)
!10712 = !DILocalVariable(name: "ptr", arg: 2, scope: !10709, file: !2109, line: 94, type: !2114)
!10713 = !DILocalVariable(name: "len", arg: 3, scope: !10709, file: !2109, line: 94, type: !79)
!10714 = !DILocalVariable(name: "DataIdx", scope: !10709, file: !2109, line: 96, type: !79)
!10715 = !DILocation(line: 0, scope: !10709)
!10716 = !DILocation(line: 98, column: 31, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10718, file: !2109, line: 98, column: 5)
!10718 = distinct !DILexicalBlock(scope: !10709, file: !2109, line: 98, column: 5)
!10719 = !DILocation(line: 98, column: 5, scope: !10718)
!10720 = !DILocation(line: 99, column: 26, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10717, file: !2109, line: 98, column: 49)
!10722 = !DILocation(line: 99, column: 22, scope: !10721)
!10723 = !DILocation(line: 99, column: 9, scope: !10721)
!10724 = !DILocation(line: 98, column: 45, scope: !10717)
!10725 = distinct !{!10725, !10719, !10726}
!10726 = !DILocation(line: 100, column: 5, scope: !10718)
!10727 = !DILocation(line: 101, column: 5, scope: !10709)
!10728 = distinct !DISubprogram(name: "SysTick_Set", scope: !2313, file: !2313, line: 62, type: !3110, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !10729)
!10729 = !{!10730, !10731}
!10730 = !DILocalVariable(name: "ticks", arg: 1, scope: !10728, file: !2313, line: 62, type: !175)
!10731 = !DILocalVariable(name: "val", scope: !10728, file: !2313, line: 64, type: !175)
!10732 = !DILocation(line: 0, scope: !10728)
!10733 = !DILocation(line: 67, column: 16, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10728, file: !2313, line: 67, column: 9)
!10735 = !DILocation(line: 67, column: 21, scope: !10734)
!10736 = !DILocation(line: 67, column: 9, scope: !10728)
!10737 = !DILocation(line: 72, column: 20, scope: !10728)
!10738 = !DILocation(line: 75, column: 19, scope: !10728)
!10739 = !DILocation(line: 79, column: 20, scope: !10728)
!10740 = !DILocation(line: 80, column: 20, scope: !10728)
!10741 = !DILocation(line: 83, column: 19, scope: !10728)
!10742 = !DILocation(line: 85, column: 5, scope: !10728)
!10743 = !DILocation(line: 86, column: 1, scope: !10728)
!10744 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !2313, file: !2313, line: 95, type: !208, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !210)
!10745 = !DILocation(line: 97, column: 28, scope: !10744)
!10746 = !DILocation(line: 98, column: 1, scope: !10744)
!10747 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !2313, file: !2313, line: 107, type: !3362, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !210)
!10748 = !DILocation(line: 109, column: 12, scope: !10747)
!10749 = !DILocation(line: 109, column: 5, scope: !10747)
!10750 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2313, file: !2313, line: 119, type: !208, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !10751)
!10751 = !{!10752}
!10752 = !DILocalVariable(name: "cm_mux_sel", scope: !10750, file: !2313, line: 121, type: !378)
!10753 = !DILocation(line: 121, column: 38, scope: !10750)
!10754 = !DILocation(line: 121, column: 26, scope: !10750)
!10755 = !DILocation(line: 0, scope: !10750)
!10756 = !DILocation(line: 123, column: 5, scope: !10750)
!10757 = !DILocation(line: 132, column: 13, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10750, file: !2313, line: 123, column: 25)
!10759 = !DILocation(line: 140, column: 13, scope: !10758)
!10760 = !DILocation(line: 0, scope: !10758)
!10761 = !DILocation(line: 146, column: 26, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10750, file: !2313, line: 146, column: 9)
!10763 = !DILocation(line: 146, column: 50, scope: !10762)
!10764 = !DILocation(line: 146, column: 41, scope: !10762)
!10765 = !DILocation(line: 148, column: 25, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10762, file: !2313, line: 147, column: 52)
!10767 = !DILocation(line: 149, column: 5, scope: !10766)
!10768 = !DILocation(line: 150, column: 1, scope: !10750)
!10769 = distinct !DISubprogram(name: "SystemInit", scope: !2313, file: !2313, line: 158, type: !208, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !210)
!10770 = !DILocation(line: 162, column: 16, scope: !10769)
!10771 = !DILocation(line: 166, column: 16, scope: !10769)
!10772 = !DILocation(line: 169, column: 16, scope: !10769)
!10773 = !DILocation(line: 172, column: 1, scope: !10769)
!10774 = distinct !DISubprogram(name: "CachePreInit", scope: !2313, file: !2313, line: 180, type: !208, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !210)
!10775 = !DILocation(line: 183, column: 22, scope: !10774)
!10776 = !DILocation(line: 186, column: 21, scope: !10774)
!10777 = !DILocation(line: 189, column: 21, scope: !10774)
!10778 = !DILocation(line: 192, column: 29, scope: !10774)
!10779 = !DILocation(line: 193, column: 33, scope: !10774)
!10780 = !DILocation(line: 195, column: 28, scope: !10774)
!10781 = !DILocation(line: 200, column: 30, scope: !10774)
!10782 = !DILocation(line: 214, column: 1, scope: !10774)
