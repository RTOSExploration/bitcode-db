; ModuleID = './build/trng_generate_random_data.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.TRNG_REGISTER_T = type { i32, i32, i32, i32, i32, i32 }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.uart_callback_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %struct.anon, %struct.anon, %struct.anon, i32, %struct.anon, %struct.anon, i32, %struct.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon.9 = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon.9*, %struct.anon.9*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hal_cache_region_config_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.hal_cache_region_config_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon.9*, %struct.anon.9*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@g_cache_status = dso_local global i8 0, align 1, !dbg !0
@g_cache_con = external dso_local local_unnamed_addr global %union.CACHE_CON_Type, align 4
@g_cache_region_en = external dso_local local_unnamed_addr global i32, align 4
@g_cache_entry = external dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type], align 4
@.str = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt2523/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !92
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !279
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !342
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !339
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !294
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !316
@trng_init_status = internal global i8 0, align 1, !dbg !343
@trng = dso_local local_unnamed_addr global %struct.TRNG_REGISTER_T* inttoptr (i32 -1610547200 to %struct.TRNG_REGISTER_T*), align 4, !dbg !359
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !381
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !661
@.str.49 = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1.50 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.uart_callback_t] zeroinitializer, align 4, !dbg !772
@g_uart_dma_config = internal unnamed_addr global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !790
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !804
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !815
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !785
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !816
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !888
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !893
@.str.95 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.1.96 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.2 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !901
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !991
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !978
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.101 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !996
@.str.111 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.112 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !1075
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1077
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1079
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1081
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1083
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1085
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1087
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1089
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1091
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1093
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1095
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1408
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1410
@.str.115 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.116 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !1419
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !1412
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !1420
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1472
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1475
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !1508
@nor_egid = dso_local local_unnamed_addr global %struct.anon.9* null, align 4, !dbg !1519
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1835
@RegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1706
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1734
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !1837
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !1544
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1730
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !1732
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !1556
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !1817
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !1820
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }] } }, align 4, !dbg !1850
@BlockLayout = internal unnamed_addr global %struct.hal_cache_region_config_t* null, align 4, !dbg !1709
@BankInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1722
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1693
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1697
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1695
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !1546
@.str.131 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.132 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1822
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !1701
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1718
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1720
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !1877
@.str.137 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.138 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !1937
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !1824
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1938
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1952
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1954
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1956
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1958
@.str.153 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.154 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !1960
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !2014
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !2016
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !2018
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2030
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2032
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2034
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !2036
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2139
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2141
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2143
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2145
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2147
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2149
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2151
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2153
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2155
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2157
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2159
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2161
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2163
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !2165
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2137
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !2184
@.str.165 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.166 = private unnamed_addr constant [20 x i8] c"welcome to main()\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"\0D\0A ---trng_example begin---\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [43 x i8] c"\0D\0A --TRNG generates random data : %x ---\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"\0D\0A ---trng_example finished!!!---\0D\0A\00", align 1
@.str.5 = private unnamed_addr constant [31 x i8] c"example project test success.\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !2196
@end = external dso_local global i8, align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !2400
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2508
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 08:01:30 GMT +00:00\00", align 1, !dbg !2510
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2515
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !2521

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !2618 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2626
  call void @llvm.dbg.value(metadata i32 %1, metadata !2625, metadata !DIExpression()), !dbg !2627
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !2628, !range !2630
  %3 = icmp eq i8 %2, 0, !dbg !2628
  br i1 %3, label %5, label %4, !dbg !2631

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2632
  br label %15, !dbg !2634

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !2635
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2637
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2638
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2639
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2640
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2641
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2642
  call void @llvm.dbg.value(metadata i32 0, metadata !2623, metadata !DIExpression()), !dbg !2627
  br label %7, !dbg !2643

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !2623, metadata !DIExpression()), !dbg !2627
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %8, !dbg !2645
  store volatile i32 0, i32* %9, align 4, !dbg !2648
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %8, !dbg !2649
  store volatile i32 0, i32* %10, align 4, !dbg !2650
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !2651
  store i32 0, i32* %11, align 4, !dbg !2652
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !2653
  store i32 0, i32* %12, align 4, !dbg !2654
  %13 = add nuw nsw i32 %8, 1, !dbg !2655
  call void @llvm.dbg.value(metadata i32 %13, metadata !2623, metadata !DIExpression()), !dbg !2627
  %14 = icmp eq i32 %13, 16, !dbg !2656
  br i1 %14, label %15, label %7, !dbg !2643, !llvm.loop !2657

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !2627
  ret i32 %16, !dbg !2659
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !2660 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2663
  call void @llvm.dbg.value(metadata i32 %1, metadata !2662, metadata !DIExpression()), !dbg !2664
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2665
  %3 = and i32 %2, -31, !dbg !2665
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2665
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2666
  %5 = or i32 %4, 19, !dbg !2666
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2666
  %6 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2667
  %7 = and i32 %6, -31, !dbg !2667
  store volatile i32 %7, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2667
  %8 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2668
  %9 = or i32 %8, 3, !dbg !2668
  store volatile i32 %9, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2668
  tail call void asm sideeffect "isb", ""() #22, !dbg !2669, !srcloc !2673
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2674
  ret i32 0, !dbg !2675
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !2676 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2679
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2680
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2681
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2682
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2683
  call void @llvm.dbg.value(metadata i32 0, metadata !2678, metadata !DIExpression()), !dbg !2684
  br label %2, !dbg !2685

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !2678, metadata !DIExpression()), !dbg !2684
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %3, !dbg !2687
  store volatile i32 0, i32* %4, align 4, !dbg !2690
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %3, !dbg !2691
  store volatile i32 0, i32* %5, align 4, !dbg !2692
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !2693
  store i32 0, i32* %6, align 4, !dbg !2694
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !2695
  store i32 0, i32* %7, align 4, !dbg !2696
  %8 = add nuw nsw i32 %3, 1, !dbg !2697
  call void @llvm.dbg.value(metadata i32 %8, metadata !2678, metadata !DIExpression()), !dbg !2684
  %9 = icmp eq i32 %8, 16, !dbg !2698
  br i1 %9, label %10, label %2, !dbg !2685, !llvm.loop !2699

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !2701
  ret i32 0, !dbg !2702
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #2 !dbg !2703 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2704
  %2 = and i32 %1, 768, !dbg !2706
  %3 = icmp eq i32 %2, 0, !dbg !2706
  br i1 %3, label %8, label %4, !dbg !2707

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2708
  %6 = or i32 %5, 13, !dbg !2708
  store volatile i32 %6, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2708
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2709
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2710
  br label %8, !dbg !2711

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !2712
  ret i32 %9, !dbg !2713
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !2714 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2717
  call void @llvm.dbg.value(metadata i32 %1, metadata !2716, metadata !DIExpression()), !dbg !2718
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2719
  %3 = and i32 %2, 1, !dbg !2721
  %4 = icmp eq i32 %3, 0, !dbg !2721
  br i1 %4, label %7, label %5, !dbg !2722

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2723
  br label %7, !dbg !2725

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2726
  %9 = and i32 %8, -2, !dbg !2726
  store volatile i32 %9, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2726
  %10 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2727
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2728
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2729
  ret i32 0, !dbg !2730
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #2 !dbg !2731 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2735, metadata !DIExpression()), !dbg !2736
  %2 = icmp ugt i32 %0, 15, !dbg !2737
  br i1 %2, label %13, label %3, !dbg !2739

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2740
  %5 = load volatile i32, i32* %4, align 4, !dbg !2740
  %6 = and i32 %5, 256, !dbg !2742
  %7 = icmp eq i32 %6, 0, !dbg !2742
  br i1 %7, label %13, label %8, !dbg !2743

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !2744
  %10 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2746
  %11 = or i32 %10, %9, !dbg !2746
  store volatile i32 %11, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2746
  %12 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2747
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !2748
  br label %13, !dbg !2749

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !2736
  ret i32 %14, !dbg !2750
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #2 !dbg !2751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2753, metadata !DIExpression()), !dbg !2754
  %2 = icmp ugt i32 %0, 15, !dbg !2755
  br i1 %2, label %11, label %3, !dbg !2757

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !2758
  %5 = xor i32 %4, -1, !dbg !2759
  %6 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2760
  %7 = and i32 %6, %5, !dbg !2760
  store volatile i32 %7, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2760
  %8 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2761
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !2762
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2763
  store i32 0, i32* %9, align 4, !dbg !2764
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2765
  store i32 0, i32* %10, align 4, !dbg !2766
  br label %11, !dbg !2767

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !2754
  ret i32 %12, !dbg !2768
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #2 !dbg !2769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2774, metadata !DIExpression()), !dbg !2775
  %2 = icmp ugt i32 %0, 3, !dbg !2776
  br i1 %2, label %13, label %3, !dbg !2778

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2779
  %5 = and i32 %4, -769, !dbg !2779
  store volatile i32 %5, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2779
  %6 = shl nuw nsw i32 %0, 8, !dbg !2780
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2781
  %8 = or i32 %7, %6, !dbg !2781
  store volatile i32 %8, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2781
  %9 = icmp eq i32 %0, 0, !dbg !2782
  br i1 %9, label %10, label %11, !dbg !2784

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2785
  br label %11, !dbg !2787

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2788
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2789
  br label %13, !dbg !2790

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !2775
  ret i32 %14, !dbg !2791
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !2792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2803, metadata !DIExpression()), !dbg !2805
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !2804, metadata !DIExpression()), !dbg !2805
  %3 = icmp ugt i32 %0, 15, !dbg !2806
  br i1 %3, label %30, label %4, !dbg !2808

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !2809
  br i1 %5, label %30, label %6, !dbg !2811

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !2812
  %8 = load i32, i32* %7, align 4, !dbg !2812
  %9 = and i32 %8, 4095, !dbg !2814
  %10 = icmp eq i32 %9, 0, !dbg !2814
  br i1 %10, label %12, label %11, !dbg !2815

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !2816
  unreachable, !dbg !2816

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !2818
  %14 = load i32, i32* %13, align 4, !dbg !2818
  %15 = and i32 %14, 4095, !dbg !2820
  %16 = icmp eq i32 %15, 0, !dbg !2820
  br i1 %16, label %18, label %17, !dbg !2821

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !2822
  unreachable, !dbg !2822

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2824
  store volatile i32 %8, i32* %19, align 4, !dbg !2825
  %20 = load i32, i32* %7, align 4, !dbg !2826
  %21 = load i32, i32* %13, align 4, !dbg !2827
  %22 = add i32 %21, %20, !dbg !2828
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %0, !dbg !2829
  store volatile i32 %22, i32* %23, align 4, !dbg !2830
  %24 = load volatile i32, i32* %19, align 4, !dbg !2831
  %25 = or i32 %24, 256, !dbg !2831
  store volatile i32 %25, i32* %19, align 4, !dbg !2831
  %26 = load volatile i32, i32* %19, align 4, !dbg !2832
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2833
  store i32 %26, i32* %27, align 4, !dbg !2834
  %28 = load volatile i32, i32* %23, align 4, !dbg !2835
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2836
  store i32 %28, i32* %29, align 4, !dbg !2837
  br label %30, !dbg !2838

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !2805
  ret i32 %31, !dbg !2839
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2840 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2844, metadata !DIExpression()), !dbg !2846
  %2 = and i32 %0, 31, !dbg !2847
  %3 = icmp eq i32 %2, 0, !dbg !2847
  br i1 %3, label %4, label %9, !dbg !2849

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2850
  call void @llvm.dbg.value(metadata i32 %5, metadata !2845, metadata !DIExpression()), !dbg !2846
  %6 = and i32 %0, -32, !dbg !2851
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2852
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2853
  %8 = or i32 %7, 5, !dbg !2853
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2853
  tail call void asm sideeffect "isb", ""() #22, !dbg !2854, !srcloc !2673
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !2856
  br label %9, !dbg !2857

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !2846
  ret i32 %10, !dbg !2858
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !2859 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2863, metadata !DIExpression()), !dbg !2867
  call void @llvm.dbg.value(metadata i32 %1, metadata !2864, metadata !DIExpression()), !dbg !2867
  %3 = add i32 %1, %0, !dbg !2868
  call void @llvm.dbg.value(metadata i32 %3, metadata !2866, metadata !DIExpression()), !dbg !2867
  %4 = or i32 %1, %0, !dbg !2869
  %5 = and i32 %4, 31, !dbg !2869
  %6 = icmp eq i32 %5, 0, !dbg !2869
  br i1 %6, label %7, label %16, !dbg !2869

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2871
  call void @llvm.dbg.value(metadata i32 %8, metadata !2865, metadata !DIExpression()), !dbg !2867
  call void @llvm.dbg.value(metadata i32 %0, metadata !2863, metadata !DIExpression()), !dbg !2867
  %9 = icmp ugt i32 %3, %0, !dbg !2872
  br i1 %9, label %10, label %15, !dbg !2873

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !2863, metadata !DIExpression()), !dbg !2867
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #21, !dbg !2874
  %13 = add i32 %11, 32, !dbg !2876
  call void @llvm.dbg.value(metadata i32 %13, metadata !2863, metadata !DIExpression()), !dbg !2867
  %14 = icmp ult i32 %13, %3, !dbg !2872
  br i1 %14, label %10, label %15, !dbg !2873, !llvm.loop !2877

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !2879, !srcloc !2673
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !2881
  br label %16, !dbg !2882

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !2867
  ret i32 %17, !dbg !2883
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2884 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2886, metadata !DIExpression()), !dbg !2888
  %2 = and i32 %0, 31, !dbg !2889
  %3 = icmp eq i32 %2, 0, !dbg !2889
  br i1 %3, label %4, label %9, !dbg !2891

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2892
  call void @llvm.dbg.value(metadata i32 %5, metadata !2887, metadata !DIExpression()), !dbg !2888
  %6 = and i32 %0, -32, !dbg !2893
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2894
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2895
  %8 = or i32 %7, 21, !dbg !2895
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2895
  tail call void asm sideeffect "isb", ""() #22, !dbg !2896, !srcloc !2673
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !2898
  br label %9, !dbg !2899

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !2888
  ret i32 %10, !dbg !2900
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !2901 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2903, metadata !DIExpression()), !dbg !2907
  call void @llvm.dbg.value(metadata i32 %1, metadata !2904, metadata !DIExpression()), !dbg !2907
  %3 = add i32 %1, %0, !dbg !2908
  call void @llvm.dbg.value(metadata i32 %3, metadata !2906, metadata !DIExpression()), !dbg !2907
  %4 = or i32 %1, %0, !dbg !2909
  %5 = and i32 %4, 31, !dbg !2909
  %6 = icmp eq i32 %5, 0, !dbg !2909
  br i1 %6, label %7, label %16, !dbg !2909

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2911
  call void @llvm.dbg.value(metadata i32 %8, metadata !2905, metadata !DIExpression()), !dbg !2907
  call void @llvm.dbg.value(metadata i32 %0, metadata !2903, metadata !DIExpression()), !dbg !2907
  %9 = icmp ugt i32 %3, %0, !dbg !2912
  br i1 %9, label %10, label %15, !dbg !2913

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !2903, metadata !DIExpression()), !dbg !2907
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #21, !dbg !2914
  %13 = add i32 %11, 32, !dbg !2916
  call void @llvm.dbg.value(metadata i32 %13, metadata !2903, metadata !DIExpression()), !dbg !2907
  %14 = icmp ult i32 %13, %3, !dbg !2912
  br i1 %14, label %10, label %15, !dbg !2913, !llvm.loop !2917

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !2919, !srcloc !2673
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !2921
  br label %16, !dbg !2922

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !2907
  ret i32 %17, !dbg !2923
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !2924 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2927
  call void @llvm.dbg.value(metadata i32 %1, metadata !2926, metadata !DIExpression()), !dbg !2928
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2929
  %3 = and i32 %2, -31, !dbg !2929
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2929
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2930
  %5 = or i32 %4, 19, !dbg !2930
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2930
  tail call void asm sideeffect "isb", ""() #22, !dbg !2931, !srcloc !2673
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2933
  ret i32 0, !dbg !2934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #2 !dbg !2935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2939, metadata !DIExpression()), !dbg !2941
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2942
  %3 = and i32 %2, 8, !dbg !2944
  %4 = icmp eq i32 %3, 0, !dbg !2944
  br i1 %4, label %23, label %5, !dbg !2945

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !2940, metadata !DIExpression()), !dbg !2941
  %7 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2946
  %8 = shl nuw nsw i32 1, %6, !dbg !2951
  %9 = and i32 %7, %8, !dbg !2952
  %10 = icmp eq i32 %9, 0, !dbg !2952
  br i1 %10, label %20, label %11, !dbg !2953

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %6, !dbg !2954
  %13 = load volatile i32, i32* %12, align 4, !dbg !2954
  %14 = and i32 %13, -257, !dbg !2957
  %15 = icmp ugt i32 %14, %0, !dbg !2958
  br i1 %15, label %20, label %16, !dbg !2959

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %6, !dbg !2960
  %18 = load volatile i32, i32* %17, align 4, !dbg !2960
  %19 = icmp ugt i32 %18, %0, !dbg !2961
  br i1 %19, label %23, label %20, !dbg !2962

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !2963
  call void @llvm.dbg.value(metadata i32 %21, metadata !2940, metadata !DIExpression()), !dbg !2941
  %22 = icmp eq i32 %21, 16, !dbg !2964
  br i1 %22, label %23, label %5, !dbg !2965, !llvm.loop !2966

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !2941
  ret i1 %24, !dbg !2968
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !2969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2975, metadata !DIExpression()), !dbg !2976
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !2977
  br i1 %2, label %3, label %26, !dbg !2979

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !2980
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !2982
  %6 = load i32, i32* %5, align 4, !dbg !2982
  %7 = icmp eq i32 %6, 1, !dbg !2983
  br i1 %7, label %26, label %8, !dbg !2984

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !2985
  %10 = load i8, i8* %9, align 4, !dbg !2985, !range !2630
  %11 = icmp eq i8 %10, 0, !dbg !2985
  br i1 %11, label %12, label %26, !dbg !2986

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !2987
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #20, !dbg !2988
  tail call void @gpt_open_clock_source() #20, !dbg !2989
  store i8 1, i8* %9, align 4, !dbg !2990
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !2991
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !2991
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !2992
  %18 = load volatile i32, i32* %17, align 4, !dbg !2993
  %19 = and i32 %18, -2, !dbg !2993
  store volatile i32 %19, i32* %17, align 4, !dbg !2993
  %20 = shl nuw i32 1, %0, !dbg !2994
  %21 = xor i32 %20, -1, !dbg !2995
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !2996
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !2997
  %24 = load volatile i32, i32* %23, align 4, !dbg !2998
  %25 = and i32 %24, %21, !dbg !2998
  store volatile i32 %25, i32* %23, align 4, !dbg !2998
  br label %26, !dbg !2999

26:                                               ; preds = %3, %8, %1, %12
  %27 = phi i32 [ 0, %12 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], !dbg !2976
  ret i32 %27, !dbg !3000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #4 !dbg !3001 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3005, metadata !DIExpression()), !dbg !3006
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3007, !range !2630
  %3 = icmp ne i8 %2, 0, !dbg !3009
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !3010
  %7 = and i1 %5, %6, !dbg !3010
  ret i1 %7, !dbg !3011
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !3012 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3014, metadata !DIExpression()), !dbg !3015
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3016
  br i1 %2, label %3, label %14, !dbg !3018

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3019
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3021
  %6 = load i32, i32* %5, align 4, !dbg !3021
  %7 = icmp eq i32 %6, 1, !dbg !3022
  br i1 %7, label %14, label %8, !dbg !3023

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3024
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #20, !dbg !3025
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3026
  store i8 0, i8* %11, align 4, !dbg !3027
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3028
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !3028
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #20, !dbg !3029
  br label %14, !dbg !3030

14:                                               ; preds = %3, %1, %8
  %15 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !3015
  ret i32 %15, !dbg !3031
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3037, metadata !DIExpression()), !dbg !3039
  call void @llvm.dbg.value(metadata i32* %1, metadata !3038, metadata !DIExpression()), !dbg !3039
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !3040

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3041
  %5 = icmp eq i32 %4, 1, !dbg !3045
  br i1 %5, label %8, label %6, !dbg !3046

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3047
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #20, !dbg !3049
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3050
  br label %8, !dbg !3051

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3052
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #20, !dbg !3053
  br label %20, !dbg !3054

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3055
  %13 = icmp eq i32 %12, 1, !dbg !3059
  br i1 %13, label %16, label %14, !dbg !3060

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3061
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #20, !dbg !3063
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3064
  br label %16, !dbg !3065

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3066
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #20, !dbg !3067
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #20, !dbg !3068
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !3069
  store i32 %21, i32* %1, align 4, !dbg !3069
  br label %22, !dbg !3070

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !3039
  ret i32 %23, !dbg !3071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #6 section ".tcm_code" !dbg !3072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3076, metadata !DIExpression()), !dbg !3079
  call void @llvm.dbg.value(metadata i32 %1, metadata !3077, metadata !DIExpression()), !dbg !3079
  call void @llvm.dbg.value(metadata i32* %2, metadata !3078, metadata !DIExpression()), !dbg !3079
  %4 = icmp eq i32* %2, null, !dbg !3080
  br i1 %4, label %7, label %5, !dbg !3082

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !3083
  store i32 %6, i32* %2, align 4, !dbg !3083
  br label %7, !dbg !3085

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !3079
  ret i32 %8, !dbg !3086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !3087 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3092, metadata !DIExpression()), !dbg !3094
  call void @llvm.dbg.value(metadata i32* %1, metadata !3093, metadata !DIExpression()), !dbg !3094
  %3 = icmp ugt i32 %0, 5, !dbg !3095
  br i1 %3, label %7, label %4, !dbg !3097

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3098
  %6 = load i32, i32* %5, align 4, !dbg !3098
  store i32 %6, i32* %1, align 4, !dbg !3099
  br label %7, !dbg !3100

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !3094
  ret i32 %8, !dbg !3101
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !3102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3106, metadata !DIExpression()), !dbg !3109
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !3107, metadata !DIExpression()), !dbg !3109
  call void @llvm.dbg.value(metadata i8* %2, metadata !3108, metadata !DIExpression()), !dbg !3109
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3110
  br i1 %4, label %5, label %18, !dbg !3112

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3113
  %7 = load i32, i32* %6, align 4, !dbg !3113
  %8 = icmp eq i32 %7, 1, !dbg !3115
  br i1 %8, label %18, label %9, !dbg !3116

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3117
  %11 = load i8, i8* %10, align 4, !dbg !3117, !range !2630
  %12 = icmp eq i8 %11, 1, !dbg !3118
  br i1 %12, label %13, label %18, !dbg !3119

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !3120
  br i1 %14, label %18, label %15, !dbg !3122

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !3123
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !3124
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !3125
  store i8* %2, i8** %17, align 4, !dbg !3126
  tail call void @gpt_nvic_register() #20, !dbg !3127
  br label %18, !dbg !3128

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !3109
  ret i32 %19, !dbg !3129
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3130 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3135, metadata !DIExpression()), !dbg !3139
  call void @llvm.dbg.value(metadata i32 %1, metadata !3136, metadata !DIExpression()), !dbg !3139
  call void @llvm.dbg.value(metadata i32 %2, metadata !3137, metadata !DIExpression()), !dbg !3139
  %5 = bitcast i32* %4 to i8*, !dbg !3140
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3140
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3138, metadata !DIExpression()), !dbg !3141
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3142
  br i1 %6, label %7, label %51, !dbg !3144

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3145
  %9 = load i32, i32* %8, align 4, !dbg !3145
  %10 = icmp eq i32 %9, 1, !dbg !3147
  br i1 %10, label %51, label %11, !dbg !3148

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3149
  %13 = load i8, i8* %12, align 4, !dbg !3149, !range !2630
  %14 = icmp eq i8 %13, 1, !dbg !3150
  br i1 %14, label %15, label %51, !dbg !3151

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !3152
  br i1 %16, label %51, label %17, !dbg !3154

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3155
  store volatile i32 %18, i32* %4, align 4, !dbg !3156
  tail call void @gpt_open_clock_source() #20, !dbg !3157
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3158
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3158
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !3159
  %22 = load volatile i32, i32* %21, align 4, !dbg !3160
  %23 = and i32 %22, -2, !dbg !3160
  store volatile i32 %23, i32* %21, align 4, !dbg !3160
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3161
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !3162
  %26 = load volatile i32, i32* %25, align 4, !dbg !3163
  %27 = and i32 %26, -2, !dbg !3163
  store volatile i32 %27, i32* %25, align 4, !dbg !3163
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3164
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !3165
  store volatile i32 16, i32* %29, align 4, !dbg !3166
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #20, !dbg !3167
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3168
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !3169
  store volatile i32 %30, i32* %32, align 4, !dbg !3170
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3171
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !3172
  store volatile i32 1, i32* %34, align 4, !dbg !3173
  %35 = shl i32 %2, 4, !dbg !3174
  %36 = or i32 %35, 2, !dbg !3175
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3176
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !3177
  store volatile i32 %36, i32* %38, align 4, !dbg !3178
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !3179

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !3180
  %43 = icmp eq i32 %42, 0, !dbg !3179
  br i1 %43, label %44, label %41, !dbg !3179, !llvm.loop !3181

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3183
  %46 = load volatile i32, i32* %45, align 4, !dbg !3184
  %47 = or i32 %46, 1, !dbg !3184
  store volatile i32 %47, i32* %45, align 4, !dbg !3184
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3185
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !3186
  store volatile i32 1, i32* %49, align 4, !dbg !3187
  store i32 1, i32* %8, align 4, !dbg !3188
  %50 = load volatile i32, i32* %4, align 4, !dbg !3189
  tail call void @restore_interrupt_mask(i32 noundef %50) #20, !dbg !3190
  br label %51, !dbg !3191

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !3139
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3192
  ret i32 %52, !dbg !3192
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3193 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3197, metadata !DIExpression()), !dbg !3198
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3199
  %3 = icmp eq i32 %2, 1, !dbg !3201
  br i1 %3, label %6, label %4, !dbg !3202

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3203
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #20, !dbg !3205
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3206
  br label %6, !dbg !3207

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3208
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #20, !dbg !3209
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3210
  ret i32 0, !dbg !3211
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3212 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3214, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 %1, metadata !3215, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.value(metadata i32 %2, metadata !3216, metadata !DIExpression()), !dbg !3218
  %5 = bitcast i32* %4 to i8*, !dbg !3219
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3219
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3217, metadata !DIExpression()), !dbg !3220
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3221
  br i1 %6, label %7, label %50, !dbg !3223

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3224
  %9 = load i32, i32* %8, align 4, !dbg !3224
  %10 = icmp eq i32 %9, 1, !dbg !3226
  br i1 %10, label %50, label %11, !dbg !3227

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3228
  %13 = load i8, i8* %12, align 4, !dbg !3228, !range !2630
  %14 = icmp eq i8 %13, 1, !dbg !3229
  br i1 %14, label %15, label %50, !dbg !3230

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3231
  store i8 1, i8* %16, align 1, !dbg !3232
  %17 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3233
  store volatile i32 %17, i32* %4, align 4, !dbg !3234
  tail call void @gpt_open_clock_source() #20, !dbg !3235
  %18 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3236
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3236
  %20 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %19, i32 0, i32 2, !dbg !3237
  %21 = load volatile i32, i32* %20, align 4, !dbg !3238
  %22 = and i32 %21, -2, !dbg !3238
  store volatile i32 %22, i32* %20, align 4, !dbg !3238
  %23 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3239
  %24 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %23, i32 0, i32 0, !dbg !3240
  %25 = load volatile i32, i32* %24, align 4, !dbg !3241
  %26 = and i32 %25, -2, !dbg !3241
  store volatile i32 %26, i32* %24, align 4, !dbg !3241
  %27 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3242
  %28 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %27, i32 0, i32 1, !dbg !3243
  store volatile i32 12, i32* %28, align 4, !dbg !3244
  %29 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #20, !dbg !3245
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3246
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 6, !dbg !3247
  store volatile i32 %29, i32* %31, align 4, !dbg !3248
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3249
  %33 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %32, i32 0, i32 4, !dbg !3250
  store volatile i32 1, i32* %33, align 4, !dbg !3251
  %34 = shl i32 %2, 4, !dbg !3252
  %35 = or i32 %34, 2, !dbg !3253
  %36 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3254
  %37 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %36, i32 0, i32 0, !dbg !3255
  store volatile i32 %35, i32* %37, align 4, !dbg !3256
  %38 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4
  %39 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 5
  br label %40, !dbg !3257

40:                                               ; preds = %40, %15
  %41 = load volatile i32, i32* %39, align 4, !dbg !3258
  %42 = icmp eq i32 %41, 0, !dbg !3257
  br i1 %42, label %43, label %40, !dbg !3257, !llvm.loop !3259

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 0, !dbg !3261
  %45 = load volatile i32, i32* %44, align 4, !dbg !3262
  %46 = or i32 %45, 1, !dbg !3262
  store volatile i32 %46, i32* %44, align 4, !dbg !3262
  %47 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3263
  %48 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %47, i32 0, i32 2, !dbg !3264
  store volatile i32 1, i32* %48, align 4, !dbg !3265
  %49 = load volatile i32, i32* %4, align 4, !dbg !3266
  tail call void @restore_interrupt_mask(i32 noundef %49) #20, !dbg !3267
  store i32 1, i32* %8, align 4, !dbg !3268
  br label %50, !dbg !3269

50:                                               ; preds = %7, %11, %3, %43
  %51 = phi i32 [ 0, %43 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !3218
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3270
  ret i32 %51, !dbg !3270
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3271 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3273, metadata !DIExpression()), !dbg !3274
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3275
  %3 = icmp eq i32 %2, 1, !dbg !3277
  br i1 %3, label %6, label %4, !dbg !3278

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3279
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #20, !dbg !3281
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3282
  br label %6, !dbg !3283

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3284
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #20, !dbg !3285
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3286
  ret i32 0, !dbg !3287
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !3288 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3290, metadata !DIExpression()), !dbg !3292
  %3 = bitcast i32* %2 to i8*, !dbg !3293
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3293
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3291, metadata !DIExpression()), !dbg !3294
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3295
  br i1 %4, label %5, label %24, !dbg !3297

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3298
  store volatile i32 %6, i32* %2, align 4, !dbg !3299
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3300
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3300
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !3301
  %10 = load volatile i32, i32* %9, align 4, !dbg !3302
  %11 = and i32 %10, -2, !dbg !3302
  store volatile i32 %11, i32* %9, align 4, !dbg !3302
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3303
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3304
  %14 = load volatile i32, i32* %13, align 4, !dbg !3305
  %15 = and i32 %14, -2, !dbg !3305
  store volatile i32 %15, i32* %13, align 4, !dbg !3305
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3306
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !3307
  store volatile i32 1, i32* %17, align 4, !dbg !3308
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3309
  store i32 0, i32* %18, align 4, !dbg !3310
  %19 = load volatile i32, i32* %2, align 4, !dbg !3311
  tail call void @restore_interrupt_mask(i32 noundef %19) #20, !dbg !3312
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3313
  %21 = load i8, i8* %20, align 1, !dbg !3313, !range !2630
  %22 = icmp eq i8 %21, 0, !dbg !3313
  br i1 %22, label %24, label %23, !dbg !3315

23:                                               ; preds = %5
  store i8 0, i8* %20, align 1, !dbg !3316
  br label %24, !dbg !3318

24:                                               ; preds = %5, %23, %1
  %25 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !3292
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3319
  ret i32 %25, !dbg !3319
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !3320 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3324, metadata !DIExpression()), !dbg !3327
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3328
  %3 = icmp ugt i32 %2, 31, !dbg !3330
  br i1 %3, label %13, label %4, !dbg !3331

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !3332
  br i1 %5, label %13, label %6, !dbg !3334

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3335
  call void @llvm.dbg.value(metadata i32 %7, metadata !3326, metadata !DIExpression()), !dbg !3327
  %8 = tail call i32 @gpt_sw_get_free_timer() #20, !dbg !3336
  call void @llvm.dbg.value(metadata i32 %8, metadata !3325, metadata !DIExpression()), !dbg !3327
  %9 = or i32 %8, -559087616, !dbg !3337
  store i32 %9, i32* %0, align 4, !dbg !3338
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !3339
  store i8 1, i8* %10, align 4, !dbg !3340
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3341
  %12 = add i32 %11, 1, !dbg !3341
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3341
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !3342
  br label %13, !dbg !3343

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !3327
  ret i32 %14, !dbg !3344
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #9 !dbg !3345 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3347, metadata !DIExpression()), !dbg !3349
  %3 = bitcast i32* %2 to i8*, !dbg !3350
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3350
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3348, metadata !DIExpression()), !dbg !3351
  %4 = and i32 %0, -559087616, !dbg !3352
  %5 = icmp eq i32 %4, -559087616, !dbg !3354
  br i1 %5, label %6, label %24, !dbg !3355

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !3356
  store volatile i32 %7, i32* %2, align 4, !dbg !3357
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3358
  %9 = icmp eq i32 %8, 0, !dbg !3360
  br i1 %9, label %24, label %10, !dbg !3361

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !3362
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !3364
  %13 = load i8, i8* %12, align 1, !dbg !3364, !range !2630
  %14 = icmp eq i8 %13, 0, !dbg !3364
  br i1 %14, label %15, label %24, !dbg !3365

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !3366
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !3368
  %18 = load i8, i8* %17, align 4, !dbg !3368, !range !2630
  %19 = icmp eq i8 %18, 1, !dbg !3369
  br i1 %19, label %20, label %24, !dbg !3370

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !3371
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !3372
  store i8 0, i8* %22, align 4, !dbg !3373
  %23 = add i32 %8, -1, !dbg !3374
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3374
  br label %24, !dbg !3375

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !3349
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3376
  ret i32 %25, !dbg !3376
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !3377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3381, metadata !DIExpression()), !dbg !3388
  call void @llvm.dbg.value(metadata i32 %1, metadata !3382, metadata !DIExpression()), !dbg !3388
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !3383, metadata !DIExpression()), !dbg !3388
  call void @llvm.dbg.value(metadata i8* %3, metadata !3384, metadata !DIExpression()), !dbg !3388
  %5 = and i32 %0, -559087616, !dbg !3389
  %6 = icmp ne i32 %5, -559087616, !dbg !3391
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !3392
  call void @llvm.dbg.value(metadata i32 %0, metadata !3387, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !3388
  br i1 %8, label %44, label %9, !dbg !3392

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !3393
  call void @llvm.dbg.value(metadata i32 %10, metadata !3387, metadata !DIExpression()), !dbg !3388
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !3394
  %12 = load i8, i8* %11, align 1, !dbg !3394, !range !2630
  %13 = icmp eq i8 %12, 0, !dbg !3394
  br i1 %13, label %14, label %44, !dbg !3396

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !3397
  %16 = load i8, i8* %15, align 4, !dbg !3397, !range !2630
  %17 = icmp eq i8 %16, 1, !dbg !3399
  br i1 %17, label %18, label %44, !dbg !3400

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !3401
  br i1 %19, label %44, label %20, !dbg !3403

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3404
  call void @llvm.dbg.value(metadata i32 %21, metadata !3386, metadata !DIExpression()), !dbg !3388
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3405
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3406, !range !2630
  %23 = icmp eq i8 %22, 0, !dbg !3408
  br i1 %23, label %24, label %27, !dbg !3409

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #21, !dbg !3410
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #21, !dbg !3412
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3413
  br label %27, !dbg !3414

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3415
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3416, !range !2630
  %30 = icmp eq i8 %29, 0, !dbg !3418
  br i1 %30, label %31, label %34, !dbg !3419

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3420
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #20, !dbg !3422
  call void @llvm.dbg.value(metadata i32 %33, metadata !3385, metadata !DIExpression()), !dbg !3388
  br label %34, !dbg !3423

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !3424
  call void @llvm.dbg.value(metadata i32 %35, metadata !3385, metadata !DIExpression()), !dbg !3388
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3425
  %37 = add i32 %36, %35, !dbg !3425
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3425
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3426
  %39 = add i32 %38, 1, !dbg !3426
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3426
  store i8 1, i8* %11, align 1, !dbg !3427
  %40 = add i32 %37, %1, !dbg !3428
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !3429
  store i32 %40, i32* %41, align 4, !dbg !3430
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !3431
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !3432
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !3433
  store i8* %3, i8** %43, align 4, !dbg !3434
  tail call void @gpt_sw_start_timer() #20, !dbg !3435
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3436
  tail call void @restore_interrupt_mask(i32 noundef %21) #20, !dbg !3437
  br label %44, !dbg !3438

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !3388
  ret i32 %45, !dbg !3439
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !3440 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3442, metadata !DIExpression()), !dbg !3446
  %2 = and i32 %0, -559087616, !dbg !3447
  %3 = icmp eq i32 %2, -559087616, !dbg !3449
  br i1 %3, label %4, label %31, !dbg !3450

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !3451
  call void @llvm.dbg.value(metadata i32 %5, metadata !3445, metadata !DIExpression()), !dbg !3446
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !3452
  %7 = load i8, i8* %6, align 1, !dbg !3452, !range !2630
  %8 = icmp eq i8 %7, 1, !dbg !3454
  br i1 %8, label %9, label %31, !dbg !3455

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !3456
  %11 = load i8, i8* %10, align 4, !dbg !3456, !range !2630
  %12 = icmp eq i8 %11, 1, !dbg !3458
  br i1 %12, label %13, label %31, !dbg !3459

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3460
  call void @llvm.dbg.value(metadata i32 %14, metadata !3444, metadata !DIExpression()), !dbg !3446
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3461
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3462
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3463
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3464, !range !2630
  %17 = icmp eq i8 %16, 0, !dbg !3466
  br i1 %17, label %18, label %21, !dbg !3467

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3468
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #20, !dbg !3470
  call void @llvm.dbg.value(metadata i32 %20, metadata !3443, metadata !DIExpression()), !dbg !3446
  br label %21, !dbg !3471

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !3472
  call void @llvm.dbg.value(metadata i32 %22, metadata !3443, metadata !DIExpression()), !dbg !3446
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3473
  %24 = add i32 %23, %22, !dbg !3473
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3473
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3474
  %26 = add i32 %25, -1, !dbg !3474
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3474
  store i8 0, i8* %6, align 1, !dbg !3475
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3476
  %28 = icmp eq i32 %27, 0, !dbg !3478
  br i1 %28, label %30, label %29, !dbg !3479

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #20, !dbg !3480
  br label %30, !dbg !3482

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3483
  tail call void @restore_interrupt_mask(i32 noundef %14) #20, !dbg !3484
  br label %31, !dbg !3485

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !3446
  ret i32 %32, !dbg !3486
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !3487 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3491, metadata !DIExpression()), !dbg !3496
  call void @llvm.dbg.value(metadata i32* %1, metadata !3492, metadata !DIExpression()), !dbg !3496
  %3 = and i32 %0, -559087616, !dbg !3497
  %4 = icmp eq i32 %3, -559087616, !dbg !3499
  br i1 %4, label %5, label %20, !dbg !3500

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !3501
  call void @llvm.dbg.value(metadata i32 %6, metadata !3495, metadata !DIExpression()), !dbg !3496
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !3502
  %8 = load i8, i8* %7, align 4, !dbg !3502, !range !2630
  %9 = icmp eq i8 %8, 1, !dbg !3504
  br i1 %9, label %10, label %20, !dbg !3505

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3506
  call void @llvm.dbg.value(metadata i32 %11, metadata !3494, metadata !DIExpression()), !dbg !3496
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3507
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3508
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !3509
  %15 = load volatile i32, i32* %14, align 4, !dbg !3509
  %16 = add i32 %15, %12, !dbg !3510
  call void @llvm.dbg.value(metadata i32 %16, metadata !3493, metadata !DIExpression()), !dbg !3496
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !3511
  %18 = load i32, i32* %17, align 4, !dbg !3511
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !3513
  store i32 %19, i32* %1, align 4, !dbg !3514
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !3515
  br label %20, !dbg !3516

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !3496
  ret i32 %21, !dbg !3517
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 section ".tcm_code" !dbg !3518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3522, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %1, metadata !3523, metadata !DIExpression()), !dbg !3529
  call void @llvm.dbg.value(metadata i32 %2, metadata !3524, metadata !DIExpression()), !dbg !3529
  %4 = and i32 %0, 65535, !dbg !3530
  %5 = mul i32 %4, %1, !dbg !3531
  call void @llvm.dbg.value(metadata i32 %5, metadata !3525, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3529
  %6 = lshr i32 %0, 16, !dbg !3532
  %7 = mul i32 %6, %1, !dbg !3533
  call void @llvm.dbg.value(metadata i32 %7, metadata !3525, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3529
  %8 = and i32 %5, 65535, !dbg !3534
  call void @llvm.dbg.value(metadata i32 %8, metadata !3527, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3529
  %9 = lshr i32 %5, 16, !dbg !3535
  %10 = add i32 %9, %7, !dbg !3536
  call void @llvm.dbg.value(metadata i32 %10, metadata !3527, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3529
  %11 = udiv i32 %10, %2, !dbg !3537
  call void @llvm.dbg.value(metadata i32 %11, metadata !3528, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3529
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !3538
  %15 = or i32 %14, %8, !dbg !3539
  %16 = udiv i32 %15, %2, !dbg !3540
  call void @llvm.dbg.value(metadata i32 %16, metadata !3528, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3529
  %17 = shl i32 %11, 16, !dbg !3541
  %18 = add i32 %16, %17, !dbg !3542
  ret i32 %18, !dbg !3543
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #11 section ".tcm_code" !dbg !3544 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3548, metadata !DIExpression()), !dbg !3549
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !3550
  %3 = load volatile i32, i32* %2, align 4, !dbg !3550
  ret i32 %3, !dbg !3551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !3552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3556, metadata !DIExpression()), !dbg !3557
  %2 = shl i32 %0, 5, !dbg !3558
  %3 = mul i32 %0, 7, !dbg !3559
  %4 = udiv i32 %3, 10, !dbg !3560
  %5 = add i32 %4, %2, !dbg !3561
  %6 = mul i32 %0, 6, !dbg !3562
  %7 = udiv i32 %6, 100, !dbg !3563
  %8 = add i32 %5, %7, !dbg !3564
  %9 = shl i32 %0, 3, !dbg !3565
  %10 = udiv i32 %9, 1000, !dbg !3566
  %11 = add i32 %8, %10, !dbg !3567
  ret i32 %11, !dbg !3568
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !290 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3569
  br i1 %1, label %10, label %2, !dbg !3571

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3572
  br i1 %3, label %4, label %6, !dbg !3575

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !3576
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !3578
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !3579

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !3581
  br label %8, !dbg !3581

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3581
  br label %10, !dbg !3582

10:                                               ; preds = %8, %0
  ret void, !dbg !3582
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !3583 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #20, !dbg !3584
  br i1 %1, label %4, label %2, !dbg !3586

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #20, !dbg !3587
  br label %4, !dbg !3589

4:                                                ; preds = %2, %0
  ret void, !dbg !3590
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3593, metadata !DIExpression()), !dbg !3594
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3595
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3596
  br i1 %2, label %3, label %6, !dbg !3598

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3599
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #21, !dbg !3601
  br label %6, !dbg !3602

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3603
  ret i32 %7, !dbg !3604
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3605 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3607, metadata !DIExpression()), !dbg !3608
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3609
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3610
  br i1 %2, label %3, label %6, !dbg !3612

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3613
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #21, !dbg !3615
  br label %6, !dbg !3616

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3617
  ret i32 %7, !dbg !3618
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !3619 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3623, metadata !DIExpression()), !dbg !3626
  call void @llvm.dbg.value(metadata i32 %1, metadata !3624, metadata !DIExpression()), !dbg !3626
  call void @llvm.dbg.value(metadata i32 %2, metadata !3625, metadata !DIExpression()), !dbg !3626
  tail call void @gpt_open_clock_source() #21, !dbg !3627
  %4 = or i32 %2, %1, !dbg !3628
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3629
  store volatile i32 %4, i32* %5, align 4, !dbg !3630
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3631
  store volatile i32 49, i32* %6, align 4, !dbg !3632
  ret void, !dbg !3633
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !3634 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3638, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i32 %1, metadata !3639, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i32 0, metadata !3640, metadata !DIExpression()), !dbg !3642
  call void @llvm.dbg.value(metadata i32 0, metadata !3641, metadata !DIExpression()), !dbg !3642
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3643
  call void @llvm.dbg.value(metadata i32 %3, metadata !3641, metadata !DIExpression()), !dbg !3642
  %4 = add i32 %1, 1, !dbg !3644
  %5 = add i32 %4, %3, !dbg !3645
  call void @llvm.dbg.value(metadata i32 %5, metadata !3640, metadata !DIExpression()), !dbg !3642
  %6 = icmp ugt i32 %5, %3, !dbg !3646
  br i1 %6, label %7, label %10, !dbg !3648

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3649
  %9 = icmp ult i32 %8, %5, !dbg !3651
  br i1 %9, label %7, label %16, !dbg !3652, !llvm.loop !3653

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3655
  %12 = icmp ult i32 %11, %3, !dbg !3657
  br i1 %12, label %13, label %10, !dbg !3658, !llvm.loop !3659

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3661
  %15 = icmp ult i32 %14, %5, !dbg !3662
  br i1 %15, label %13, label %16, !dbg !3663, !llvm.loop !3664

16:                                               ; preds = %13, %7
  ret void, !dbg !3666
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !3667 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3671, metadata !DIExpression()), !dbg !3672
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3673
  store volatile i32 0, i32* %2, align 4, !dbg !3674
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3675
  store volatile i32 0, i32* %3, align 4, !dbg !3676
  %4 = load volatile i32, i32* %3, align 4, !dbg !3677
  %5 = or i32 %4, 2, !dbg !3677
  store volatile i32 %5, i32* %3, align 4, !dbg !3677
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !3678

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !3679
  %9 = icmp eq i32 %8, 0, !dbg !3678
  br i1 %9, label %10, label %7, !dbg !3678, !llvm.loop !3680

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3682
  store volatile i32 16, i32* %11, align 4, !dbg !3683
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !3684
  store volatile i32 1, i32* %12, align 4, !dbg !3685
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !3686
  store volatile i32 -1, i32* %13, align 4, !dbg !3687
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !3688
  br i1 %14, label %15, label %16, !dbg !3690

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !3691
  br label %16, !dbg !3693

16:                                               ; preds = %15, %10
  ret void, !dbg !3694
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3695 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3697, metadata !DIExpression()), !dbg !3699
  %3 = bitcast i32* %2 to i8*, !dbg !3700
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3700
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3698, metadata !DIExpression()), !dbg !3701
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3702
  %5 = load volatile i32, i32* %4, align 4, !dbg !3702
  store volatile i32 %5, i32* %2, align 4, !dbg !3703
  %6 = load volatile i32, i32* %4, align 4, !dbg !3704
  %7 = and i32 %6, -2, !dbg !3704
  store volatile i32 %7, i32* %4, align 4, !dbg !3704
  %8 = load volatile i32, i32* %2, align 4, !dbg !3705
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3706
  ret i32 %8, !dbg !3707
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !3708 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3712, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.value(metadata i32 %1, metadata !3713, metadata !DIExpression()), !dbg !3714
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3715
  store volatile i32 %1, i32* %3, align 4, !dbg !3716
  ret void, !dbg !3717
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !3718 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3720, metadata !DIExpression()), !dbg !3725
  %5 = bitcast i32* %2 to i8*, !dbg !3726
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3726
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3722, metadata !DIExpression()), !dbg !3727
  %6 = bitcast i32* %3 to i8*, !dbg !3728
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !3728
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3723, metadata !DIExpression()), !dbg !3729
  %7 = bitcast i32* %4 to i8*, !dbg !3730
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !3730
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3724, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.value(metadata i32 undef, metadata !3720, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.value(metadata i32 0, metadata !3721, metadata !DIExpression()), !dbg !3725
  br label %8, !dbg !3732

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3721, metadata !DIExpression()), !dbg !3725
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !3734
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3734
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !3737
  %13 = load volatile i32, i32* %12, align 4, !dbg !3737
  store volatile i32 %13, i32* %3, align 4, !dbg !3738
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !3739
  %15 = load volatile i32, i32* %14, align 4, !dbg !3739
  store volatile i32 %15, i32* %4, align 4, !dbg !3740
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #21, !dbg !3741
  store volatile i32 %16, i32* %2, align 4, !dbg !3742
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3743
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !3744
  store volatile i32 1, i32* %18, align 4, !dbg !3745
  %19 = load volatile i32, i32* %3, align 4, !dbg !3746
  %20 = and i32 %19, 1, !dbg !3748
  %21 = icmp eq i32 %20, 0, !dbg !3748
  br i1 %21, label %33, label %22, !dbg !3749

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !3750
  %24 = and i32 %23, 1, !dbg !3751
  %25 = icmp eq i32 %24, 0, !dbg !3751
  br i1 %25, label %33, label %26, !dbg !3752

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !3753
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3753
  %29 = icmp eq void (i8*)* %28, null, !dbg !3756
  br i1 %29, label %33, label %30, !dbg !3757

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !3758
  %32 = load i8*, i8** %31, align 4, !dbg !3758
  tail call void %28(i8* noundef %32) #20, !dbg !3760
  br label %33, !dbg !3761

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3762
  %35 = load volatile i32, i32* %2, align 4, !dbg !3763
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #21, !dbg !3764
  %36 = add nuw nsw i32 %9, 1, !dbg !3765
  call void @llvm.dbg.value(metadata i32 %36, metadata !3721, metadata !DIExpression()), !dbg !3725
  %37 = icmp eq i32 %36, 6, !dbg !3766
  br i1 %37, label %38, label %8, !dbg !3732, !llvm.loop !3767

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !3769
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !3769
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3769
  ret void, !dbg !3769
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !3770 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #20, !dbg !3771
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #20, !dbg !3772
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #20, !dbg !3773
  ret void, !dbg !3774
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3775 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3777, metadata !DIExpression()), !dbg !3782
  %3 = bitcast i32* %2 to i8*, !dbg !3783
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3783
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3778, metadata !DIExpression()), !dbg !3784
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3785
  call void @llvm.dbg.value(metadata i32 %4, metadata !3779, metadata !DIExpression()), !dbg !3782
  %5 = lshr i32 %4, 15, !dbg !3786
  call void @llvm.dbg.value(metadata i32 %5, metadata !3780, metadata !DIExpression()), !dbg !3782
  %6 = and i32 %4, 32767, !dbg !3787
  %7 = mul nuw nsw i32 %6, 1000, !dbg !3788
  %8 = add nuw nsw i32 %7, 16384, !dbg !3789
  %9 = lshr i32 %8, 15, !dbg !3790
  call void @llvm.dbg.value(metadata i32 %9, metadata !3781, metadata !DIExpression()), !dbg !3782
  %10 = mul nuw nsw i32 %5, 1000, !dbg !3791
  %11 = add nuw nsw i32 %9, %10, !dbg !3792
  store volatile i32 %11, i32* %2, align 4, !dbg !3793
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3794
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3795
  %14 = load volatile i32, i32* %13, align 4, !dbg !3796
  %15 = or i32 %14, 2, !dbg !3796
  store volatile i32 %15, i32* %13, align 4, !dbg !3796
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !3797

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !3798
  %20 = icmp eq i32 %19, 0, !dbg !3797
  br i1 %20, label %21, label %18, !dbg !3797, !llvm.loop !3799

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !3801
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3802
  ret i32 %22, !dbg !3803
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #12 !dbg !3804 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3808, metadata !DIExpression()), !dbg !3809
  br label %1, !dbg !3810

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3808, metadata !DIExpression()), !dbg !3809
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !3812
  %4 = load i8, i8* %3, align 4, !dbg !3812, !range !2630
  %5 = icmp eq i8 %4, 1, !dbg !3816
  br i1 %5, label %6, label %9, !dbg !3817

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !3818
  call void @llvm.dbg.value(metadata i32 %7, metadata !3808, metadata !DIExpression()), !dbg !3809
  %8 = icmp eq i32 %7, 32, !dbg !3819
  br i1 %8, label %9, label %1, !dbg !3810, !llvm.loop !3820

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !3809
  ret i32 %10, !dbg !3822
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !3823 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !3827
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3827
  %4 = bitcast i32* %2 to i8*, !dbg !3827
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !3827
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3828, !range !2630
  %6 = icmp eq i8 %5, 0, !dbg !3828
  br i1 %6, label %7, label %11, !dbg !3830

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !3825, metadata !DIExpression(DW_OP_deref)), !dbg !3831
  call void @llvm.dbg.value(metadata i32* %2, metadata !3826, metadata !DIExpression(DW_OP_deref)), !dbg !3831
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #21, !dbg !3832
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3833
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3834
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3835
  %9 = load i32, i32* %1, align 4, !dbg !3836
  call void @llvm.dbg.value(metadata i32 %9, metadata !3825, metadata !DIExpression()), !dbg !3831
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #20, !dbg !3837
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3838
  br label %11, !dbg !3839

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !3839
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3839
  ret void, !dbg !3839
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #13 !dbg !3840 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3844, metadata !DIExpression()), !dbg !3849
  call void @llvm.dbg.value(metadata i32* %1, metadata !3845, metadata !DIExpression()), !dbg !3849
  call void @llvm.dbg.value(metadata i32 -1, metadata !3847, metadata !DIExpression()), !dbg !3849
  call void @llvm.dbg.value(metadata i32 0, metadata !3846, metadata !DIExpression()), !dbg !3849
  br label %3, !dbg !3850

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !3846, metadata !DIExpression()), !dbg !3849
  call void @llvm.dbg.value(metadata i32 %5, metadata !3847, metadata !DIExpression()), !dbg !3849
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !3852
  %7 = load i8, i8* %6, align 1, !dbg !3852, !range !2630
  %8 = icmp eq i8 %7, 0, !dbg !3852
  br i1 %8, label %13, label %9, !dbg !3856

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #21, !dbg !3857
  call void @llvm.dbg.value(metadata i32 %10, metadata !3848, metadata !DIExpression()), !dbg !3849
  %11 = icmp ult i32 %10, %5, !dbg !3859
  br i1 %11, label %12, label %13, !dbg !3861

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !3847, metadata !DIExpression()), !dbg !3849
  store i32 %4, i32* %1, align 4, !dbg !3862
  br label %13, !dbg !3864

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !3849
  call void @llvm.dbg.value(metadata i32 %14, metadata !3847, metadata !DIExpression()), !dbg !3849
  %15 = add nuw nsw i32 %4, 1, !dbg !3865
  call void @llvm.dbg.value(metadata i32 %15, metadata !3846, metadata !DIExpression()), !dbg !3849
  %16 = icmp eq i32 %15, 32, !dbg !3866
  br i1 %16, label %17, label %3, !dbg !3850, !llvm.loop !3867

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !3869
  ret void, !dbg !3870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #4 !dbg !3871 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3873, metadata !DIExpression()), !dbg !3877
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !3878
  %3 = load i32, i32* %2, align 4, !dbg !3878
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3878
  %5 = sub i32 %3, %4, !dbg !3878
  call void @llvm.dbg.value(metadata i32 %5, metadata !3874, metadata !DIExpression()), !dbg !3877
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3879
  %7 = sub i32 %6, %4, !dbg !3879
  call void @llvm.dbg.value(metadata i32 %7, metadata !3875, metadata !DIExpression()), !dbg !3877
  %8 = icmp ugt i32 %5, %7, !dbg !3880
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !3882
  call void @llvm.dbg.value(metadata i32 %10, metadata !3876, metadata !DIExpression()), !dbg !3877
  ret i32 %10, !dbg !3883
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !3884 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3886, metadata !DIExpression()), !dbg !3890
  %4 = bitcast i32* %2 to i8*, !dbg !3891
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !3891
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3888, metadata !DIExpression()), !dbg !3892
  %5 = bitcast i32* %3 to i8*, !dbg !3893
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3893
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3889, metadata !DIExpression()), !dbg !3894
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3895
  %7 = icmp eq i32 %6, 0, !dbg !3897
  br i1 %7, label %38, label %8, !dbg !3898

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3899
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #20, !dbg !3901
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3902
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3903
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #21, !dbg !3904
  store volatile i32 %11, i32* %2, align 4, !dbg !3905
  %12 = load volatile i32, i32* %2, align 4, !dbg !3906
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3907
  %14 = add i32 %13, %12, !dbg !3907
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3907
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3908
  call void @llvm.dbg.value(metadata i32 0, metadata !3887, metadata !DIExpression()), !dbg !3890
  br label %15, !dbg !3909

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3887, metadata !DIExpression()), !dbg !3890
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !3911
  %18 = load i8, i8* %17, align 1, !dbg !3911, !range !2630
  %19 = icmp eq i8 %18, 0, !dbg !3911
  br i1 %19, label %31, label %20, !dbg !3915

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #21, !dbg !3916
  store volatile i32 %21, i32* %3, align 4, !dbg !3918
  %22 = load volatile i32, i32* %3, align 4, !dbg !3919
  %23 = icmp eq i32 %22, 0, !dbg !3921
  br i1 %23, label %24, label %31, !dbg !3922

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !3923
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3925
  %26 = add i32 %25, -1, !dbg !3925
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3925
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !3926
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3926
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !3927
  %30 = load i8*, i8** %29, align 4, !dbg !3927
  tail call void %28(i8* noundef %30) #20, !dbg !3928
  br label %31, !dbg !3929

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !3930
  call void @llvm.dbg.value(metadata i32 %32, metadata !3887, metadata !DIExpression()), !dbg !3890
  %33 = icmp eq i32 %32, 32, !dbg !3931
  br i1 %33, label %34, label %15, !dbg !3909, !llvm.loop !3932

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3934
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3935
  %36 = icmp eq i32 %35, 0, !dbg !3937
  br i1 %36, label %38, label %37, !dbg !3938

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #21, !dbg !3939
  br label %38, !dbg !3941

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3942
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !3942
  ret void, !dbg !3942
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_trng_init() local_unnamed_addr #0 !dbg !3943 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3951
  call void @llvm.dbg.value(metadata i32 %1, metadata !3949, metadata !DIExpression()), !dbg !3952
  %2 = load volatile i8, i8* @trng_init_status, align 1, !dbg !3953
  %3 = icmp eq i8 %2, 1, !dbg !3953
  br i1 %3, label %5, label %4, !dbg !3951

4:                                                ; preds = %0
  store volatile i8 1, i8* @trng_init_status, align 1, !dbg !3955
  call void @llvm.dbg.value(metadata i32 0, metadata !3948, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.value(metadata i32 undef, metadata !3948, metadata !DIExpression()), !dbg !3957
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !3951
  tail call void @trng_init() #20, !dbg !3958
  br label %6, !dbg !3959

5:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !3948, metadata !DIExpression()), !dbg !3957
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !3951
  br label %6, !dbg !3960

6:                                                ; preds = %5, %4
  %7 = phi i32 [ 0, %4 ], [ -2, %5 ], !dbg !3957
  ret i32 %7, !dbg !3961
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_trng_deinit() local_unnamed_addr #0 !dbg !3962 {
  tail call void @trng_deinit() #20, !dbg !3966
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3967
  call void @llvm.dbg.value(metadata i32 %1, metadata !3964, metadata !DIExpression()), !dbg !3968
  store volatile i8 0, i8* @trng_init_status, align 1, !dbg !3967
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !3967
  ret i32 0, !dbg !3969
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_trng_get_generated_random_number(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !3970 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3974, metadata !DIExpression()), !dbg !3976
  call void @llvm.dbg.value(metadata i32 0, metadata !3975, metadata !DIExpression()), !dbg !3976
  %2 = tail call i32 @trng_config_timeout_limit(i32 noundef 4095) #20, !dbg !3977
  %3 = tail call i32 @trng_enable_mode(i1 noundef zeroext true, i1 noundef zeroext true, i1 noundef zeroext true) #20, !dbg !3978
  tail call void @trng_start() #20, !dbg !3979
  %4 = tail call i32 @trng_get_random_data() #20, !dbg !3980
  call void @llvm.dbg.value(metadata i32 %4, metadata !3975, metadata !DIExpression()), !dbg !3976
  tail call void @trng_stop() #20, !dbg !3981
  %5 = icmp eq i32 %4, 0, !dbg !3982
  br i1 %5, label %7, label %6, !dbg !3984

6:                                                ; preds = %1
  store i32 %4, i32* %0, align 4, !dbg !3985
  br label %7, !dbg !3987

7:                                                ; preds = %1, %6
  %8 = phi i32 [ 0, %6 ], [ -2, %1 ], !dbg !3976
  ret i32 %8, !dbg !3988
}

; Function Attrs: noinline nounwind optsize
define dso_local void @trng_init() local_unnamed_addr #0 !dbg !3989 {
  %1 = tail call i32 @hal_clock_enable(i32 noundef 80) #20, !dbg !3990
  ret void, !dbg !3991
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @trng_config_timeout_limit(i32 noundef %0) local_unnamed_addr #2 !dbg !3992 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3997, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.value(metadata i32 %0, metadata !3998, metadata !DIExpression()), !dbg !3999
  %2 = icmp ugt i32 %0, 4096, !dbg !4000
  br i1 %2, label %11, label %3, !dbg !4002

3:                                                ; preds = %1
  %4 = load %struct.TRNG_REGISTER_T*, %struct.TRNG_REGISTER_T** @trng, align 4, !dbg !4003
  %5 = getelementptr inbounds %struct.TRNG_REGISTER_T, %struct.TRNG_REGISTER_T* %4, i32 0, i32 3, !dbg !4004
  %6 = load volatile i32, i32* %5, align 4, !dbg !4005
  %7 = and i32 %6, -262081, !dbg !4005
  store volatile i32 %7, i32* %5, align 4, !dbg !4005
  %8 = shl nuw nsw i32 %0, 6, !dbg !4006
  %9 = load volatile i32, i32* %5, align 4, !dbg !4007
  %10 = or i32 %9, %8, !dbg !4007
  store volatile i32 %10, i32* %5, align 4, !dbg !4007
  br label %11, !dbg !4008

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !3999
  ret i32 %12, !dbg !4009
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @trng_enable_mode(i1 noundef zeroext %0, i1 noundef zeroext %1, i1 noundef zeroext %2) local_unnamed_addr #2 !dbg !4010 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !4014, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4017
  call void @llvm.dbg.value(metadata i1 %1, metadata !4015, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4017
  call void @llvm.dbg.value(metadata i1 %2, metadata !4016, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4017
  %4 = load %struct.TRNG_REGISTER_T*, %struct.TRNG_REGISTER_T** @trng, align 4, !dbg !4018
  %5 = getelementptr inbounds %struct.TRNG_REGISTER_T, %struct.TRNG_REGISTER_T* %4, i32 0, i32 3, !dbg !4018
  %6 = load volatile i32, i32* %5, align 4, !dbg !4018
  %7 = and i32 %6, -5, !dbg !4020
  %8 = select i1 %0, i32 4, i32 0, !dbg !4020
  %9 = or i32 %7, %8, !dbg !4020
  store volatile i32 %9, i32* %5, align 4, !dbg !4018
  %10 = getelementptr inbounds %struct.TRNG_REGISTER_T, %struct.TRNG_REGISTER_T* %4, i32 0, i32 3, !dbg !4021
  %11 = load volatile i32, i32* %10, align 4, !dbg !4021
  %12 = and i32 %11, -9, !dbg !4023
  %13 = select i1 %1, i32 8, i32 0, !dbg !4023
  %14 = or i32 %12, %13, !dbg !4023
  store volatile i32 %14, i32* %10, align 4, !dbg !4021
  %15 = getelementptr inbounds %struct.TRNG_REGISTER_T, %struct.TRNG_REGISTER_T* %4, i32 0, i32 3, !dbg !4024
  %16 = load volatile i32, i32* %15, align 4, !dbg !4024
  %17 = and i32 %16, -17, !dbg !4026
  %18 = select i1 %2, i32 16, i32 0, !dbg !4026
  %19 = or i32 %17, %18, !dbg !4026
  store volatile i32 %19, i32* %15, align 4, !dbg !4024
  ret i32 0, !dbg !4027
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @trng_start() local_unnamed_addr #9 !dbg !4028 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4031
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4031
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4030, metadata !DIExpression()), !dbg !4032
  store volatile i32 0, i32* %1, align 4, !dbg !4032
  %3 = load %struct.TRNG_REGISTER_T*, %struct.TRNG_REGISTER_T** @trng, align 4, !dbg !4033
  %4 = getelementptr inbounds %struct.TRNG_REGISTER_T, %struct.TRNG_REGISTER_T* %3, i32 0, i32 2, !dbg !4034
  %5 = load volatile i32, i32* %4, align 4, !dbg !4034
  store volatile i32 %5, i32* %1, align 4, !dbg !4035
  %6 = load volatile i32, i32* %1, align 4, !dbg !4036
  %7 = add i32 %6, 1, !dbg !4036
  store volatile i32 %7, i32* %1, align 4, !dbg !4036
  %8 = getelementptr inbounds %struct.TRNG_REGISTER_T, %struct.TRNG_REGISTER_T* %3, i32 0, i32 0, !dbg !4037
  %9 = load volatile i32, i32* %8, align 4, !dbg !4038
  %10 = or i32 %9, 1, !dbg !4038
  store volatile i32 %10, i32* %8, align 4, !dbg !4038
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4039
  ret void, !dbg !4039
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @trng_stop() local_unnamed_addr #9 !dbg !4040 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4043
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4043
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4042, metadata !DIExpression()), !dbg !4044
  store volatile i32 0, i32* %1, align 4, !dbg !4044
  %3 = load %struct.TRNG_REGISTER_T*, %struct.TRNG_REGISTER_T** @trng, align 4, !dbg !4045
  %4 = getelementptr inbounds %struct.TRNG_REGISTER_T, %struct.TRNG_REGISTER_T* %3, i32 0, i32 2, !dbg !4046
  %5 = load volatile i32, i32* %4, align 4, !dbg !4046
  store volatile i32 %5, i32* %1, align 4, !dbg !4047
  %6 = load volatile i32, i32* %1, align 4, !dbg !4048
  %7 = add i32 %6, 1, !dbg !4048
  store volatile i32 %7, i32* %1, align 4, !dbg !4048
  %8 = getelementptr inbounds %struct.TRNG_REGISTER_T, %struct.TRNG_REGISTER_T* %3, i32 0, i32 0, !dbg !4049
  %9 = load volatile i32, i32* %8, align 4, !dbg !4050
  %10 = and i32 %9, -2, !dbg !4050
  store volatile i32 %10, i32* %8, align 4, !dbg !4050
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4051
  ret void, !dbg !4051
}

; Function Attrs: noinline nounwind optsize
define dso_local void @trng_deinit() local_unnamed_addr #0 !dbg !4052 {
  %1 = tail call i32 @hal_clock_disable(i32 noundef 80) #20, !dbg !4053
  ret void, !dbg !4054
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #5

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @trng_get_random_data() local_unnamed_addr #9 !dbg !4055 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !4059
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4059
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4057, metadata !DIExpression()), !dbg !4060
  store volatile i32 0, i32* %1, align 4, !dbg !4060
  %4 = bitcast i32* %2 to i8*, !dbg !4061
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4061
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4058, metadata !DIExpression()), !dbg !4062
  store volatile i32 0, i32* %2, align 4, !dbg !4062
  %5 = load %struct.TRNG_REGISTER_T*, %struct.TRNG_REGISTER_T** @trng, align 4, !dbg !4063
  %6 = getelementptr inbounds %struct.TRNG_REGISTER_T, %struct.TRNG_REGISTER_T* %5, i32 0, i32 4, !dbg !4064
  %7 = load volatile i32, i32* %6, align 4, !dbg !4064
  store volatile i32 %7, i32* %2, align 4, !dbg !4065
  %8 = load volatile i32, i32* %2, align 4, !dbg !4066
  %9 = and i32 %8, 1, !dbg !4066
  store volatile i32 %9, i32* %2, align 4, !dbg !4066
  %10 = load volatile i32, i32* %2, align 4, !dbg !4067
  %11 = icmp eq i32 %10, 1, !dbg !4068
  br i1 %11, label %21, label %12, !dbg !4069

12:                                               ; preds = %0, %16
  %13 = load volatile i32, i32* %6, align 4, !dbg !4070
  store volatile i32 %13, i32* %2, align 4, !dbg !4072
  %14 = load volatile i32, i32* %2, align 4, !dbg !4073
  %15 = icmp eq i32 %14, 2, !dbg !4075
  br i1 %15, label %28, label %16, !dbg !4076

16:                                               ; preds = %12
  %17 = load volatile i32, i32* %2, align 4, !dbg !4077
  %18 = and i32 %17, 1, !dbg !4077
  store volatile i32 %18, i32* %2, align 4, !dbg !4077
  %19 = load volatile i32, i32* %2, align 4, !dbg !4067
  %20 = icmp eq i32 %19, 1, !dbg !4068
  br i1 %20, label %21, label %12, !dbg !4069, !llvm.loop !4078

21:                                               ; preds = %16, %0
  %22 = getelementptr inbounds %struct.TRNG_REGISTER_T, %struct.TRNG_REGISTER_T* %5, i32 0, i32 5, !dbg !4080
  store volatile i32 1, i32* %22, align 4, !dbg !4081
  %23 = getelementptr inbounds %struct.TRNG_REGISTER_T, %struct.TRNG_REGISTER_T* %5, i32 0, i32 0, !dbg !4082
  store volatile i32 1, i32* %23, align 4, !dbg !4083
  %24 = load %struct.TRNG_REGISTER_T*, %struct.TRNG_REGISTER_T** @trng, align 4, !dbg !4084
  %25 = getelementptr inbounds %struct.TRNG_REGISTER_T, %struct.TRNG_REGISTER_T* %24, i32 0, i32 2, !dbg !4085
  %26 = load volatile i32, i32* %25, align 4, !dbg !4085
  store volatile i32 %26, i32* %1, align 4, !dbg !4086
  %27 = load volatile i32, i32* %1, align 4, !dbg !4087
  br label %28, !dbg !4088

28:                                               ; preds = %12, %21
  %29 = phi i32 [ %27, %21 ], [ 0, %12 ], !dbg !4089
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4090
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4090
  ret i32 %29, !dbg !4090
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #14 !dbg !4091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4096, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !4098, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 0, metadata !4097, metadata !DIExpression()), !dbg !4099
  br label %5, !dbg !4101

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !4103
  call void @llvm.dbg.value(metadata i32 %3, metadata !4097, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata i32 %6, metadata !4097, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4099
  %4 = icmp eq i32 %3, 5, !dbg !4105
  br i1 %4, label %10, label %5, !dbg !4101, !llvm.loop !4106

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4097, metadata !DIExpression()), !dbg !4099
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !4108
  %8 = load i32, i32* %7, align 4, !dbg !4108
  %9 = icmp eq i32 %8, %0, !dbg !4111
  call void @llvm.dbg.value(metadata i32 %6, metadata !4097, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4099
  br i1 %9, label %10, label %2, !dbg !4112

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !4099
  ret i32 %11, !dbg !4113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #10 !dbg !4114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4119, metadata !DIExpression()), !dbg !4120
  ret i32 0, !dbg !4121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #10 !dbg !4122 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4124, metadata !DIExpression()), !dbg !4125
  ret i32 0, !dbg !4126
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4131, metadata !DIExpression()), !dbg !4135
  call void @llvm.dbg.value(metadata i32 %1, metadata !4132, metadata !DIExpression()), !dbg !4135
  %3 = icmp ugt i32 %0, 48, !dbg !4136
  br i1 %3, label %13, label %4, !dbg !4138

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4139
  call void @llvm.dbg.value(metadata i32 %5, metadata !4133, metadata !DIExpression()), !dbg !4135
  %6 = and i32 %0, 31, !dbg !4140
  call void @llvm.dbg.value(metadata i32 %6, metadata !4134, metadata !DIExpression()), !dbg !4135
  %7 = icmp eq i32 %1, 0, !dbg !4141
  %8 = shl nuw i32 1, %6, !dbg !4143
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4143
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !4144
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !4144
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !4144
  store volatile i32 %8, i32* %12, align 4, !dbg !4143
  br label %13, !dbg !4145

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4135
  ret i32 %14, !dbg !4145
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4146 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4151, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.value(metadata i32* %1, metadata !4152, metadata !DIExpression()), !dbg !4156
  %3 = icmp ugt i32 %0, 48, !dbg !4157
  br i1 %3, label %15, label %4, !dbg !4159

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4160
  br i1 %5, label %15, label %6, !dbg !4162

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4163
  call void @llvm.dbg.value(metadata i32 %7, metadata !4153, metadata !DIExpression()), !dbg !4156
  %8 = and i32 %0, 31, !dbg !4164
  call void @llvm.dbg.value(metadata i32 %8, metadata !4154, metadata !DIExpression()), !dbg !4156
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4165
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !4166
  %11 = load volatile i32, i32* %10, align 4, !dbg !4166
  call void @llvm.dbg.value(metadata i32 %11, metadata !4155, metadata !DIExpression()), !dbg !4156
  %12 = shl nuw i32 1, %8, !dbg !4167
  %13 = and i32 %11, %12, !dbg !4168
  call void @llvm.dbg.value(metadata i32 %13, metadata !4155, metadata !DIExpression()), !dbg !4156
  %14 = lshr i32 %13, %8, !dbg !4169
  store i32 %14, i32* %1, align 4, !dbg !4170
  br label %15, !dbg !4171

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4156
  ret i32 %16, !dbg !4172
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !4173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4178, metadata !DIExpression()), !dbg !4183
  call void @llvm.dbg.value(metadata i8 %1, metadata !4179, metadata !DIExpression()), !dbg !4183
  %3 = icmp ugt i32 %0, 48, !dbg !4184
  br i1 %3, label %18, label %4, !dbg !4186

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !4187
  br i1 %5, label %18, label %6, !dbg !4189

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !4190
  %8 = lshr i32 %0, 3, !dbg !4191
  call void @llvm.dbg.value(metadata i32 %8, metadata !4180, metadata !DIExpression()), !dbg !4183
  call void @llvm.dbg.value(metadata i32 %0, metadata !4181, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4183
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4192
  call void @llvm.dbg.value(metadata i32 %9, metadata !4182, metadata !DIExpression()), !dbg !4183
  %10 = shl nuw nsw i32 %0, 2, !dbg !4193
  %11 = and i32 %10, 28, !dbg !4193
  %12 = shl nuw i32 15, %11, !dbg !4194
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4195
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !4196
  store volatile i32 %12, i32* %14, align 4, !dbg !4197
  %15 = shl nuw i32 %7, %11, !dbg !4198
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4199
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !4200
  store volatile i32 %15, i32* %17, align 4, !dbg !4201
  tail call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !4202
  br label %18, !dbg !4203

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4183
  ret i32 %19, !dbg !4204
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4210, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32* %1, metadata !4211, metadata !DIExpression()), !dbg !4215
  %3 = icmp ugt i32 %0, 48, !dbg !4216
  br i1 %3, label %15, label %4, !dbg !4218

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4219
  br i1 %5, label %15, label %6, !dbg !4221

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4222
  call void @llvm.dbg.value(metadata i32 %7, metadata !4212, metadata !DIExpression()), !dbg !4215
  %8 = and i32 %0, 31, !dbg !4223
  call void @llvm.dbg.value(metadata i32 %8, metadata !4213, metadata !DIExpression()), !dbg !4215
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4224
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !4225
  %11 = load volatile i32, i32* %10, align 4, !dbg !4225
  call void @llvm.dbg.value(metadata i32 %11, metadata !4214, metadata !DIExpression()), !dbg !4215
  %12 = shl nuw i32 1, %8, !dbg !4226
  %13 = and i32 %11, %12, !dbg !4227
  call void @llvm.dbg.value(metadata i32 %13, metadata !4214, metadata !DIExpression()), !dbg !4215
  %14 = lshr i32 %13, %8, !dbg !4228
  store i32 %14, i32* %1, align 4, !dbg !4229
  br label %15, !dbg !4230

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4215
  ret i32 %16, !dbg !4231
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4232 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4236, metadata !DIExpression()), !dbg !4240
  call void @llvm.dbg.value(metadata i32 %1, metadata !4237, metadata !DIExpression()), !dbg !4240
  %3 = icmp ugt i32 %0, 48, !dbg !4241
  br i1 %3, label %13, label %4, !dbg !4243

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4244
  call void @llvm.dbg.value(metadata i32 %5, metadata !4238, metadata !DIExpression()), !dbg !4240
  %6 = and i32 %0, 31, !dbg !4245
  call void @llvm.dbg.value(metadata i32 %6, metadata !4239, metadata !DIExpression()), !dbg !4240
  %7 = icmp eq i32 %1, 0, !dbg !4246
  %8 = shl nuw i32 1, %6, !dbg !4248
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4248
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !4249
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !4249
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !4249
  store volatile i32 %8, i32* %12, align 4, !dbg !4248
  br label %13, !dbg !4250

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4240
  ret i32 %14, !dbg !4250
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4251 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4253, metadata !DIExpression()), !dbg !4258
  call void @llvm.dbg.value(metadata i32* %1, metadata !4254, metadata !DIExpression()), !dbg !4258
  %3 = icmp ugt i32 %0, 48, !dbg !4259
  br i1 %3, label %15, label %4, !dbg !4261

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4262
  br i1 %5, label %15, label %6, !dbg !4264

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4265
  call void @llvm.dbg.value(metadata i32 %7, metadata !4255, metadata !DIExpression()), !dbg !4258
  %8 = and i32 %0, 31, !dbg !4266
  call void @llvm.dbg.value(metadata i32 %8, metadata !4256, metadata !DIExpression()), !dbg !4258
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4267
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !4268
  %11 = load volatile i32, i32* %10, align 4, !dbg !4268
  call void @llvm.dbg.value(metadata i32 %11, metadata !4257, metadata !DIExpression()), !dbg !4258
  %12 = shl nuw i32 1, %8, !dbg !4269
  %13 = and i32 %11, %12, !dbg !4270
  call void @llvm.dbg.value(metadata i32 %13, metadata !4257, metadata !DIExpression()), !dbg !4258
  %14 = lshr i32 %13, %8, !dbg !4271
  store i32 %14, i32* %1, align 4, !dbg !4272
  br label %15, !dbg !4273

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4258
  ret i32 %16, !dbg !4274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #2 !dbg !4275 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4277, metadata !DIExpression()), !dbg !4281
  %2 = icmp ugt i32 %0, 48, !dbg !4282
  br i1 %2, label %16, label %3, !dbg !4284

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4285
  call void @llvm.dbg.value(metadata i32 %4, metadata !4278, metadata !DIExpression()), !dbg !4281
  %5 = and i32 %0, 31, !dbg !4286
  call void @llvm.dbg.value(metadata i32 %5, metadata !4279, metadata !DIExpression()), !dbg !4281
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4287
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !4288
  %8 = load volatile i32, i32* %7, align 4, !dbg !4288
  call void @llvm.dbg.value(metadata i32 %8, metadata !4280, metadata !DIExpression()), !dbg !4281
  %9 = shl nuw i32 1, %5, !dbg !4289
  %10 = and i32 %8, %9, !dbg !4290
  call void @llvm.dbg.value(metadata i32 %10, metadata !4280, metadata !DIExpression()), !dbg !4281
  %11 = lshr i32 %10, %5, !dbg !4291
  %12 = icmp eq i32 %11, 0, !dbg !4291
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !4293
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !4293
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !4293
  store volatile i32 %9, i32* %15, align 4, !dbg !4294
  br label %16, !dbg !4295

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !4281
  ret i32 %17, !dbg !4295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4296 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4298, metadata !DIExpression()), !dbg !4301
  %2 = icmp ugt i32 %0, 48, !dbg !4302
  br i1 %2, label %9, label %3, !dbg !4304

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4305
  call void @llvm.dbg.value(metadata i32 %4, metadata !4299, metadata !DIExpression()), !dbg !4301
  %5 = and i32 %0, 31, !dbg !4306
  call void @llvm.dbg.value(metadata i32 %5, metadata !4300, metadata !DIExpression()), !dbg !4301
  %6 = shl nuw i32 1, %5, !dbg !4307
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4308
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !4309
  store volatile i32 %6, i32* %8, align 4, !dbg !4310
  br label %9, !dbg !4311

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4301
  ret i32 %10, !dbg !4312
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4315, metadata !DIExpression()), !dbg !4318
  %2 = icmp ugt i32 %0, 48, !dbg !4319
  br i1 %2, label %9, label %3, !dbg !4321

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4322
  call void @llvm.dbg.value(metadata i32 %4, metadata !4316, metadata !DIExpression()), !dbg !4318
  %5 = and i32 %0, 31, !dbg !4323
  call void @llvm.dbg.value(metadata i32 %5, metadata !4317, metadata !DIExpression()), !dbg !4318
  %6 = shl nuw i32 1, %5, !dbg !4324
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4325
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !4326
  store volatile i32 %6, i32* %8, align 4, !dbg !4327
  br label %9, !dbg !4328

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4318
  ret i32 %10, !dbg !4329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #2 !dbg !4330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4332, metadata !DIExpression()), !dbg !4335
  %2 = icmp ugt i32 %0, 48, !dbg !4336
  br i1 %2, label %14, label %3, !dbg !4338

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4339
  %5 = icmp eq i32 %4, 0, !dbg !4339
  br i1 %5, label %14, label %6, !dbg !4340

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4341
  call void @llvm.dbg.value(metadata i32 %7, metadata !4333, metadata !DIExpression()), !dbg !4335
  %8 = and i32 %0, 31, !dbg !4342
  call void @llvm.dbg.value(metadata i32 %8, metadata !4334, metadata !DIExpression()), !dbg !4335
  %9 = shl nuw i32 1, %8, !dbg !4343
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4344
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4345
  store volatile i32 %9, i32* %11, align 4, !dbg !4346
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4347
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !4348
  store volatile i32 %9, i32* %13, align 4, !dbg !4349
  br label %14, !dbg !4350

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4335
  ret i32 %15, !dbg !4351
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #2 !dbg !4352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4354, metadata !DIExpression()), !dbg !4357
  %2 = icmp ugt i32 %0, 48, !dbg !4358
  br i1 %2, label %14, label %3, !dbg !4360

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4361
  %5 = icmp eq i32 %4, 0, !dbg !4361
  br i1 %5, label %14, label %6, !dbg !4362

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4363
  call void @llvm.dbg.value(metadata i32 %7, metadata !4355, metadata !DIExpression()), !dbg !4357
  %8 = and i32 %0, 31, !dbg !4364
  call void @llvm.dbg.value(metadata i32 %8, metadata !4356, metadata !DIExpression()), !dbg !4357
  %9 = shl nuw i32 1, %8, !dbg !4365
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4366
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4367
  store volatile i32 %9, i32* %11, align 4, !dbg !4368
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4369
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !4370
  store volatile i32 %9, i32* %13, align 4, !dbg !4371
  br label %14, !dbg !4372

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4357
  ret i32 %15, !dbg !4373
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #2 !dbg !4374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4376, metadata !DIExpression()), !dbg !4379
  %2 = icmp ugt i32 %0, 48, !dbg !4380
  br i1 %2, label %12, label %3, !dbg !4382

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4383
  %5 = icmp eq i32 %4, 0, !dbg !4383
  br i1 %5, label %12, label %6, !dbg !4384

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4385
  call void @llvm.dbg.value(metadata i32 %7, metadata !4377, metadata !DIExpression()), !dbg !4379
  %8 = and i32 %0, 31, !dbg !4386
  call void @llvm.dbg.value(metadata i32 %8, metadata !4378, metadata !DIExpression()), !dbg !4379
  %9 = shl nuw i32 1, %8, !dbg !4387
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4388
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !4389
  store volatile i32 %9, i32* %11, align 4, !dbg !4390
  br label %12, !dbg !4391

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4379
  ret i32 %13, !dbg !4392
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4399, metadata !DIExpression()), !dbg !4401
  call void @llvm.dbg.value(metadata i32 %1, metadata !4400, metadata !DIExpression()), !dbg !4401
  %3 = icmp ugt i32 %0, 5, !dbg !4402
  br i1 %3, label %7, label %4, !dbg !4404

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4405
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !4406
  store volatile i32 %1, i32* %6, align 4, !dbg !4407
  br label %7, !dbg !4408

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !4401
  ret i32 %8, !dbg !4409
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !4410 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4414, metadata !DIExpression()), !dbg !4420
  call void @llvm.dbg.value(metadata i8 %1, metadata !4415, metadata !DIExpression()), !dbg !4420
  call void @llvm.dbg.value(metadata i8 %2, metadata !4416, metadata !DIExpression()), !dbg !4420
  call void @llvm.dbg.value(metadata i8 %3, metadata !4417, metadata !DIExpression()), !dbg !4420
  %5 = icmp ugt i32 %0, 48, !dbg !4421
  br i1 %5, label %30, label %6, !dbg !4423

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4424
  %8 = icmp eq i32 %7, 0, !dbg !4424
  br i1 %8, label %9, label %30, !dbg !4425

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !4426
  call void @llvm.dbg.value(metadata i32 %10, metadata !4418, metadata !DIExpression()), !dbg !4420
  %11 = and i32 %0, 31, !dbg !4427
  call void @llvm.dbg.value(metadata i32 %11, metadata !4419, metadata !DIExpression()), !dbg !4420
  %12 = icmp eq i8 %1, 0, !dbg !4428
  %13 = shl nuw i32 1, %11, !dbg !4430
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4430
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !4431
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !4431
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !4431
  store volatile i32 %13, i32* %17, align 4, !dbg !4430
  %18 = icmp eq i8 %2, 0, !dbg !4432
  %19 = shl nuw i32 1, %11, !dbg !4434
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4434
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !4435
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !4435
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !4435
  store volatile i32 %19, i32* %23, align 4, !dbg !4434
  %24 = icmp eq i8 %3, 0, !dbg !4436
  %25 = shl nuw i32 1, %11, !dbg !4438
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4438
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !4439
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !4439
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !4439
  store volatile i32 %25, i32* %29, align 4, !dbg !4438
  br label %30, !dbg !4440

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !4420
  ret i32 %31, !dbg !4440
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !4441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4443, metadata !DIExpression()), !dbg !4450
  %2 = icmp ugt i32 %0, 48, !dbg !4451
  br i1 %2, label %40, label %3, !dbg !4453

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4454
  call void @llvm.dbg.value(metadata i32 %4, metadata !4444, metadata !DIExpression()), !dbg !4450
  %5 = and i32 %0, 31, !dbg !4455
  call void @llvm.dbg.value(metadata i32 %5, metadata !4447, metadata !DIExpression()), !dbg !4450
  %6 = lshr i32 %0, 4, !dbg !4456
  call void @llvm.dbg.value(metadata i32 %6, metadata !4445, metadata !DIExpression()), !dbg !4450
  call void @llvm.dbg.value(metadata i32 %0, metadata !4448, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4450
  %7 = lshr i32 %0, 3, !dbg !4457
  call void @llvm.dbg.value(metadata i32 %7, metadata !4446, metadata !DIExpression()), !dbg !4450
  call void @llvm.dbg.value(metadata i32 %0, metadata !4449, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4450
  %8 = shl nuw nsw i32 %0, 2, !dbg !4458
  %9 = and i32 %8, 28, !dbg !4458
  %10 = shl nuw i32 15, %9, !dbg !4459
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4460
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !4461
  store volatile i32 %10, i32* %12, align 4, !dbg !4462
  %13 = shl nuw i32 1, %5, !dbg !4463
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4464
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !4465
  store volatile i32 %13, i32* %15, align 4, !dbg !4466
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4467
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !4468
  store volatile i32 %13, i32* %17, align 4, !dbg !4469
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4470
  %19 = icmp eq i32 %18, 0, !dbg !4470
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4472
  br i1 %19, label %23, label %21, !dbg !4473

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !4474
  br label %29, !dbg !4476

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !4477
  store volatile i32 %13, i32* %24, align 4, !dbg !4479
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4480
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !4481
  store volatile i32 %13, i32* %26, align 4, !dbg !4482
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4483
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !4484
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !4472
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4485
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !4486
  store volatile i32 %13, i32* %32, align 4, !dbg !4487
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4488
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !4489
  store volatile i32 %13, i32* %34, align 4, !dbg !4490
  %35 = shl nuw nsw i32 %0, 1, !dbg !4491
  %36 = and i32 %35, 30, !dbg !4491
  %37 = shl nuw i32 3, %36, !dbg !4492
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4493
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !4494
  store volatile i32 %37, i32* %39, align 4, !dbg !4495
  br label %40, !dbg !4496

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !4450
  ret i32 %41, !dbg !4497
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !4498 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4500, metadata !DIExpression()), !dbg !4505
  %2 = icmp ugt i32 %0, 48, !dbg !4506
  br i1 %2, label %34, label %3, !dbg !4508

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4509
  call void @llvm.dbg.value(metadata i32 %4, metadata !4501, metadata !DIExpression()), !dbg !4505
  %5 = and i32 %0, 31, !dbg !4510
  call void @llvm.dbg.value(metadata i32 %5, metadata !4503, metadata !DIExpression()), !dbg !4505
  %6 = lshr i32 %0, 3, !dbg !4511
  call void @llvm.dbg.value(metadata i32 %6, metadata !4502, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.value(metadata i32 %0, metadata !4504, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4505
  %7 = shl nuw nsw i32 %0, 2, !dbg !4512
  %8 = and i32 %7, 28, !dbg !4512
  %9 = shl nuw i32 15, %8, !dbg !4513
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4514
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !4515
  store volatile i32 %9, i32* %11, align 4, !dbg !4516
  %12 = shl nuw i32 1, %5, !dbg !4517
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4518
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !4519
  store volatile i32 %12, i32* %14, align 4, !dbg !4520
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4521
  %16 = icmp eq i32 %15, 0, !dbg !4521
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4523
  br i1 %16, label %22, label %18, !dbg !4524

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !4525
  store volatile i32 %12, i32* %19, align 4, !dbg !4527
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4528
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !4529
  br label %28, !dbg !4530

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !4531
  store volatile i32 %12, i32* %23, align 4, !dbg !4533
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4534
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !4535
  store volatile i32 %12, i32* %25, align 4, !dbg !4536
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4537
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !4538
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !4523
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4539
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !4540
  store volatile i32 %12, i32* %31, align 4, !dbg !4541
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4542
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !4543
  store volatile i32 %12, i32* %33, align 4, !dbg !4544
  br label %34, !dbg !4545

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !4505
  ret i32 %35, !dbg !4546
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4547 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4551, metadata !DIExpression()), !dbg !4555
  call void @llvm.dbg.value(metadata i32 %1, metadata !4552, metadata !DIExpression()), !dbg !4555
  %3 = icmp ugt i32 %0, 48, !dbg !4556
  br i1 %3, label %14, label %4, !dbg !4558

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !4559
  call void @llvm.dbg.value(metadata i32 %5, metadata !4553, metadata !DIExpression()), !dbg !4555
  call void @llvm.dbg.value(metadata i32 %0, metadata !4554, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4555
  %6 = shl nuw nsw i32 %0, 1, !dbg !4560
  %7 = and i32 %6, 30, !dbg !4560
  %8 = shl nuw i32 3, %7, !dbg !4561
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4562
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !4563
  store volatile i32 %8, i32* %10, align 4, !dbg !4564
  %11 = shl i32 %1, %7, !dbg !4565
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4566
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !4567
  store volatile i32 %11, i32* %13, align 4, !dbg !4568
  br label %14, !dbg !4569

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !4555
  ret i32 %15, !dbg !4570
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4571 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4576, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.value(metadata i32* %1, metadata !4577, metadata !DIExpression()), !dbg !4581
  %3 = icmp ugt i32 %0, 48, !dbg !4582
  br i1 %3, label %18, label %4, !dbg !4584

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4585
  br i1 %5, label %18, label %6, !dbg !4587

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !4588
  call void @llvm.dbg.value(metadata i32 %7, metadata !4578, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.value(metadata i32 %0, metadata !4579, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4581
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4589
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !4590
  %10 = load volatile i32, i32* %9, align 4, !dbg !4590
  call void @llvm.dbg.value(metadata i32 %10, metadata !4580, metadata !DIExpression()), !dbg !4581
  %11 = shl nuw nsw i32 %0, 1, !dbg !4591
  %12 = and i32 %11, 30, !dbg !4591
  %13 = shl nuw i32 3, %12, !dbg !4592
  %14 = and i32 %10, %13, !dbg !4593
  call void @llvm.dbg.value(metadata i32 %14, metadata !4580, metadata !DIExpression()), !dbg !4581
  %15 = lshr i32 %14, %12, !dbg !4594
  call void @llvm.dbg.value(metadata i32 %15, metadata !4580, metadata !DIExpression()), !dbg !4581
  %16 = shl i32 %15, 2, !dbg !4595
  %17 = add i32 %16, 4, !dbg !4595
  store i32 %17, i32* %1, align 4, !dbg !4596
  br label %18, !dbg !4597

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4581
  ret i32 %19, !dbg !4598
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4599 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4603, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i1 %1, metadata !4604, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4668
  %4 = bitcast i32* %3 to i8*, !dbg !4669
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4669
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4670
  %6 = load volatile i32, i32* %5, align 4, !dbg !4670
  %7 = icmp eq i32 %6, 2, !dbg !4672
  br i1 %7, label %9, label %8, !dbg !4673

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !4674
  unreachable, !dbg !4674

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4676
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !4676
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !4610, metadata !DIExpression()), !dbg !4668
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !4677
  call void @llvm.dbg.value(metadata i32 %12, metadata !4605, metadata !DIExpression()), !dbg !4668
  br i1 %1, label %13, label %14, !dbg !4678

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #20, !dbg !4679
  br label %14, !dbg !4682

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !4607, metadata !DIExpression(DW_OP_deref)), !dbg !4668
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !4683
  call void @llvm.dbg.value(metadata i32 %15, metadata !4666, metadata !DIExpression()), !dbg !4668
  %16 = icmp eq i32 %15, 0, !dbg !4684
  br i1 %16, label %18, label %17, !dbg !4686

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !4687
  unreachable, !dbg !4687

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !4689
  call void @llvm.dbg.value(metadata i32 %19, metadata !4607, metadata !DIExpression()), !dbg !4668
  %20 = icmp eq i32 %19, 0, !dbg !4691
  br i1 %20, label %43, label %21, !dbg !4692

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4693
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !4693
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !4608, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.value(metadata i8* undef, metadata !4609, metadata !DIExpression()), !dbg !4668
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !4694
  br i1 %24, label %25, label %26, !dbg !4696

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !4697
  unreachable, !dbg !4697

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4699
  %28 = load i8*, i8** %27, align 4, !dbg !4699
  call void @llvm.dbg.value(metadata i8* %28, metadata !4609, metadata !DIExpression()), !dbg !4668
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !4700
  call void %23(i32 noundef 1, i8* noundef %28) #20, !dbg !4701
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #20, !dbg !4702
  call void @llvm.dbg.value(metadata i32* %3, metadata !4607, metadata !DIExpression(DW_OP_deref)), !dbg !4668
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !4703
  call void @llvm.dbg.value(metadata i32 %31, metadata !4666, metadata !DIExpression()), !dbg !4668
  %32 = icmp eq i32 %31, 0, !dbg !4704
  br i1 %32, label %34, label %33, !dbg !4706

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !4707
  unreachable, !dbg !4707

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !4709
  call void @llvm.dbg.value(metadata i32 %35, metadata !4607, metadata !DIExpression()), !dbg !4668
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !4711
  %37 = load i32, i32* %36, align 4, !dbg !4711
  %38 = icmp ult i32 %35, %37, !dbg !4712
  br i1 %38, label %43, label %39, !dbg !4713

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !4714
  call void @llvm.dbg.value(metadata i32 %40, metadata !4666, metadata !DIExpression()), !dbg !4668
  %41 = icmp eq i32 %40, 0, !dbg !4716
  br i1 %41, label %43, label %42, !dbg !4718

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !4719
  unreachable, !dbg !4719

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4721
  ret void, !dbg !4721
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_receive_bytes(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_disable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_enable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4722 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4724, metadata !DIExpression()), !dbg !4732
  call void @llvm.dbg.value(metadata i1 %1, metadata !4725, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4732
  %4 = bitcast i32* %3 to i8*, !dbg !4733
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4733
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4734
  %6 = load volatile i32, i32* %5, align 4, !dbg !4734
  %7 = icmp eq i32 %6, 2, !dbg !4736
  br i1 %7, label %9, label %8, !dbg !4737

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !4738
  unreachable, !dbg !4738

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !4740
  call void @llvm.dbg.value(metadata i32 %10, metadata !4726, metadata !DIExpression()), !dbg !4732
  br i1 %1, label %36, label %11, !dbg !4741

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4742
  %13 = load void (i32, i8*)*, void (i32, i8*)** %12, align 4, !dbg !4742
  call void @llvm.dbg.value(metadata void (i32, i8*)* %13, metadata !4730, metadata !DIExpression()), !dbg !4732
  call void @llvm.dbg.value(metadata i8* undef, metadata !4731, metadata !DIExpression()), !dbg !4732
  %14 = icmp eq void (i32, i8*)* %13, null, !dbg !4745
  br i1 %14, label %15, label %16, !dbg !4747

15:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !4748
  unreachable, !dbg !4748

16:                                               ; preds = %11
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4750
  %18 = load i8*, i8** %17, align 4, !dbg !4750
  call void @llvm.dbg.value(metadata i8* %18, metadata !4731, metadata !DIExpression()), !dbg !4732
  %19 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !4751
  tail call void %13(i32 noundef 2, i8* noundef %18) #20, !dbg !4752
  %20 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #20, !dbg !4753
  call void @llvm.dbg.value(metadata i32* %3, metadata !4729, metadata !DIExpression(DW_OP_deref)), !dbg !4732
  %21 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #20, !dbg !4754
  call void @llvm.dbg.value(metadata i32 %21, metadata !4727, metadata !DIExpression()), !dbg !4732
  %22 = icmp eq i32 %21, 0, !dbg !4755
  br i1 %22, label %24, label %23, !dbg !4757

23:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !4758
  unreachable, !dbg !4758

24:                                               ; preds = %16
  %25 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !4760
  %26 = load i32, i32* %25, align 4, !dbg !4760
  %27 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !4761
  %28 = load i32, i32* %27, align 4, !dbg !4761
  %29 = sub i32 %26, %28, !dbg !4762
  call void @llvm.dbg.value(metadata i32 %29, metadata !4728, metadata !DIExpression()), !dbg !4732
  %30 = load i32, i32* %3, align 4, !dbg !4763
  call void @llvm.dbg.value(metadata i32 %30, metadata !4729, metadata !DIExpression()), !dbg !4732
  %31 = icmp ult i32 %30, %29, !dbg !4765
  br i1 %31, label %36, label %32, !dbg !4766

32:                                               ; preds = %24
  %33 = call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !4767
  call void @llvm.dbg.value(metadata i32 %33, metadata !4727, metadata !DIExpression()), !dbg !4732
  %34 = icmp eq i32 %33, 0, !dbg !4769
  br i1 %34, label %36, label %35, !dbg !4771

35:                                               ; preds = %32
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !4772
  unreachable, !dbg !4772

36:                                               ; preds = %24, %32, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4774
  ret void, !dbg !4774
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_send_space(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !4775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4779, metadata !DIExpression()), !dbg !4783
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4784
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !4784
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !4780, metadata !DIExpression()), !dbg !4783
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !4785
  %5 = icmp eq i32 %4, 0, !dbg !4785
  br i1 %5, label %6, label %14, !dbg !4787

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #20, !dbg !4788
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #20, !dbg !4790
  %7 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4791
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !4791
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !4781, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i8* undef, metadata !4782, metadata !DIExpression()), !dbg !4783
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !4792
  br i1 %9, label %10, label %11, !dbg !4794

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !4795
  unreachable, !dbg !4795

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4797
  %13 = load i8*, i8** %12, align 4, !dbg !4797
  call void @llvm.dbg.value(metadata i8* %13, metadata !4782, metadata !DIExpression()), !dbg !4783
  tail call void %8(i32 noundef -1, i8* noundef %13) #20, !dbg !4798
  br label %14, !dbg !4799

14:                                               ; preds = %11, %1
  ret void, !dbg !4800
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4807, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %1, metadata !4808, metadata !DIExpression()), !dbg !4812
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4813
  br i1 %3, label %4, label %16, !dbg !4815

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #21, !dbg !4816
  br i1 %5, label %6, label %16, !dbg !4817

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4818
  %8 = load volatile i32, i32* %7, align 4, !dbg !4818
  %9 = icmp eq i32 %8, 0, !dbg !4820
  br i1 %9, label %16, label %10, !dbg !4821

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4822
  call void @llvm.dbg.value(metadata i32 %11, metadata !4810, metadata !DIExpression()), !dbg !4812
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !4823
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4824
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4824
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4811, metadata !DIExpression()), !dbg !4812
  %14 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !4825
  %15 = load i32, i32* %14, align 4, !dbg !4825
  call void @llvm.dbg.value(metadata i32 %15, metadata !4809, metadata !DIExpression()), !dbg !4812
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %13, i32 noundef %15) #20, !dbg !4826
  br label %16, !dbg !4827

16:                                               ; preds = %6, %2, %4, %10
  %17 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4812
  ret i32 %17, !dbg !4828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !4829 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4833, metadata !DIExpression()), !dbg !4834
  %2 = icmp ult i32 %0, 4, !dbg !4835
  ret i1 %2, !dbg !4836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !4837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4841, metadata !DIExpression()), !dbg !4842
  %2 = icmp ult i32 %0, 13, !dbg !4843
  ret i1 %2, !dbg !4844
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4845 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4861, metadata !DIExpression()), !dbg !4865
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4862, metadata !DIExpression()), !dbg !4865
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4866
  br i1 %3, label %4, label %23, !dbg !4868

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !4869
  br i1 %5, label %6, label %23, !dbg !4870

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4871
  %8 = load volatile i32, i32* %7, align 4, !dbg !4871
  %9 = icmp eq i32 %8, 0, !dbg !4873
  br i1 %9, label %23, label %10, !dbg !4874

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4875
  call void @llvm.dbg.value(metadata i32 %11, metadata !4863, metadata !DIExpression()), !dbg !4865
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !4876
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4877
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4877
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4864, metadata !DIExpression()), !dbg !4865
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4878
  %15 = load i32, i32* %14, align 4, !dbg !4878
  %16 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %15) #21, !dbg !4879
  %17 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4880
  %18 = load i32, i32* %17, align 4, !dbg !4880
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4881
  %20 = load i32, i32* %19, align 4, !dbg !4881
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4882
  %22 = load i32, i32* %21, align 4, !dbg !4882
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %13, i32 noundef %18, i32 noundef %20, i32 noundef %22) #20, !dbg !4883
  br label %23, !dbg !4884

23:                                               ; preds = %6, %2, %4, %10
  %24 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4865
  ret i32 %24, !dbg !4885
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !4886 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !4890, metadata !DIExpression()), !dbg !4891
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !4892
  %3 = load i32, i32* %2, align 4, !dbg !4892
  %4 = icmp ult i32 %3, 13, !dbg !4893
  br i1 %4, label %5, label %17, !dbg !4894

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !4895
  %7 = load i32, i32* %6, align 4, !dbg !4895
  %8 = icmp ult i32 %7, 4, !dbg !4896
  br i1 %8, label %9, label %17, !dbg !4897

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !4898
  %11 = load i32, i32* %10, align 4, !dbg !4898
  %12 = icmp ult i32 %11, 2, !dbg !4899
  br i1 %12, label %13, label %17, !dbg !4900

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !4901
  %15 = load i32, i32* %14, align 4, !dbg !4901
  %16 = icmp ult i32 %15, 3, !dbg !4902
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !4891
  ret i1 %18, !dbg !4903
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4909, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4910, metadata !DIExpression()), !dbg !4917
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4918
  br i1 %3, label %4, label %41, !dbg !4920

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !4921
  br i1 %5, label %6, label %41, !dbg !4922

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4923
  call void @llvm.dbg.value(metadata i32 %7, metadata !4914, metadata !DIExpression()), !dbg !4917
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4924
  %9 = load volatile i32, i32* %8, align 4, !dbg !4924
  %10 = icmp eq i32 %9, 0, !dbg !4926
  br i1 %10, label %12, label %11, !dbg !4927

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4928
  br label %41, !dbg !4930

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !4931
  br i1 %13, label %22, label %14, !dbg !4933

14:                                               ; preds = %12, %14
  %15 = phi i32 [ %19, %14 ], [ 0, %12 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !4912, metadata !DIExpression()), !dbg !4917
  %16 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %15, !dbg !4934
  store volatile i32 0, i32* %16, align 4, !dbg !4939
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 1, !dbg !4940
  store i8* null, i8** %17, align 4, !dbg !4941
  %18 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 0, !dbg !4942
  store void (i32, i8*)* null, void (i32, i8*)** %18, align 4, !dbg !4943
  %19 = add nuw nsw i32 %15, 1, !dbg !4944
  call void @llvm.dbg.value(metadata i32 %19, metadata !4912, metadata !DIExpression()), !dbg !4917
  %20 = icmp eq i32 %19, 4, !dbg !4945
  br i1 %20, label %21, label %14, !dbg !4946, !llvm.loop !4947

21:                                               ; preds = %14
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !4949
  br label %22, !dbg !4950

22:                                               ; preds = %21, %12
  store volatile i32 1, i32* %8, align 4, !dbg !4951
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4952
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !4953
  %24 = load i32, i32* %23, align 4, !dbg !4953
  %25 = tail call i32 @hal_clock_enable(i32 noundef %24) #20, !dbg !4954
  call void @llvm.dbg.value(metadata i32 %25, metadata !4915, metadata !DIExpression()), !dbg !4917
  %26 = icmp eq i32 %25, 0, !dbg !4955
  br i1 %26, label %28, label %27, !dbg !4957

27:                                               ; preds = %22
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !4958
  unreachable, !dbg !4958

28:                                               ; preds = %22
  %29 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4960
  %30 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %29, align 4, !dbg !4960
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %30, metadata !4911, metadata !DIExpression()), !dbg !4917
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !4961
  %31 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4962
  %32 = load i32, i32* %31, align 4, !dbg !4962
  %33 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %32, !dbg !4963
  %34 = load i32, i32* %33, align 4, !dbg !4963
  call void @llvm.dbg.value(metadata i32 %34, metadata !4913, metadata !DIExpression()), !dbg !4917
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %30, i32 noundef %34) #20, !dbg !4964
  %35 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4965
  %36 = load i32, i32* %35, align 4, !dbg !4965
  %37 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4966
  %38 = load i32, i32* %37, align 4, !dbg !4966
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4967
  %40 = load i32, i32* %39, align 4, !dbg !4967
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %30, i32 noundef %36, i32 noundef %38, i32 noundef %40) #20, !dbg !4968
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !4969
  br label %41, !dbg !4970

41:                                               ; preds = %2, %4, %28, %11
  %42 = phi i32 [ -3, %11 ], [ 0, %28 ], [ -4, %4 ], [ -4, %2 ], !dbg !4917
  ret i32 %42, !dbg !4971
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !4972 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4976, metadata !DIExpression()), !dbg !4983
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4984
  br i1 %2, label %3, label %54, !dbg !4986

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4987
  call void @llvm.dbg.value(metadata i32 %4, metadata !4980, metadata !DIExpression()), !dbg !4983
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4988
  %6 = load volatile i32, i32* %5, align 4, !dbg !4988
  %7 = icmp eq i32 %6, 0, !dbg !4990
  br i1 %7, label %52, label %8, !dbg !4991

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4992
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !4992
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !4977, metadata !DIExpression()), !dbg !4983
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !4993
  %11 = load volatile i32, i32* %5, align 4, !dbg !4994
  %12 = icmp eq i32 %11, 2, !dbg !4996
  br i1 %12, label %13, label %43, !dbg !4997

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !4998
  call void @llvm.dbg.value(metadata i32 %14, metadata !4978, metadata !DIExpression()), !dbg !4983
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5000
  call void @llvm.dbg.value(metadata i32 %15, metadata !4979, metadata !DIExpression()), !dbg !4983
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #20, !dbg !5001
  call void @llvm.dbg.value(metadata i32 %16, metadata !4981, metadata !DIExpression()), !dbg !4983
  %17 = icmp eq i32 %16, 0, !dbg !5002
  br i1 %17, label %19, label %18, !dbg !5004

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5005
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5007
  unreachable, !dbg !5007

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #20, !dbg !5008
  call void @llvm.dbg.value(metadata i32 %20, metadata !4981, metadata !DIExpression()), !dbg !4983
  %21 = icmp eq i32 %20, 0, !dbg !5009
  br i1 %21, label %23, label %22, !dbg !5011

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5012
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5014
  unreachable, !dbg !5014

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #20, !dbg !5015
  call void @llvm.dbg.value(metadata i32 %24, metadata !4981, metadata !DIExpression()), !dbg !4983
  %25 = icmp eq i32 %24, 0, !dbg !5016
  br i1 %25, label %27, label %26, !dbg !5018

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5019
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5021
  unreachable, !dbg !5021

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #20, !dbg !5022
  call void @llvm.dbg.value(metadata i32 %28, metadata !4981, metadata !DIExpression()), !dbg !4983
  %29 = icmp eq i32 %28, 0, !dbg !5023
  br i1 %29, label %31, label %30, !dbg !5025

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5026
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5028
  unreachable, !dbg !5028

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #20, !dbg !5029
  call void @llvm.dbg.value(metadata i32 %32, metadata !4981, metadata !DIExpression()), !dbg !4983
  %33 = icmp eq i32 %32, 0, !dbg !5030
  br i1 %33, label %35, label %34, !dbg !5032

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5033
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5035
  unreachable, !dbg !5035

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #20, !dbg !5036
  call void @llvm.dbg.value(metadata i32 %36, metadata !4981, metadata !DIExpression()), !dbg !4983
  %37 = icmp eq i32 %36, 0, !dbg !5037
  br i1 %37, label %39, label %38, !dbg !5039

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5040
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5042
  unreachable, !dbg !5042

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5043
  %41 = load i32, i32* %40, align 4, !dbg !5043
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #20, !dbg !5044
  br label %43, !dbg !5045

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !5046
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !5047
  %45 = load i32, i32* %44, align 4, !dbg !5047
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #20, !dbg !5048
  call void @llvm.dbg.value(metadata i32 %46, metadata !4982, metadata !DIExpression()), !dbg !4983
  %47 = icmp eq i32 %46, 0, !dbg !5049
  br i1 %47, label %49, label %48, !dbg !5051

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5052
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5054
  unreachable, !dbg !5054

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5055
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !5056
  %51 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5057
  store i8* null, i8** %51, align 4, !dbg !5058
  store volatile i32 0, i32* %5, align 4, !dbg !5059
  br label %52, !dbg !5060

52:                                               ; preds = %3, %49
  %53 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4983
  br label %54, !dbg !5061

54:                                               ; preds = %52, %1
  %55 = phi i32 [ -4, %1 ], [ %53, %52 ], !dbg !4983
  ret i32 %55, !dbg !5061
}

; Function Attrs: optsize
declare dso_local i32 @vdma_stop(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_deinit(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !5062 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5066, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata i8 %1, metadata !5067, metadata !DIExpression()), !dbg !5069
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5070
  br i1 %3, label %4, label %11, !dbg !5072

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5073
  %6 = load volatile i32, i32* %5, align 4, !dbg !5073
  %7 = icmp eq i32 %6, 1, !dbg !5075
  br i1 %7, label %8, label %11, !dbg !5076

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5077
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !5077
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !5068, metadata !DIExpression()), !dbg !5069
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #20, !dbg !5078
  br label %11, !dbg !5079

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !5079
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5086, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i8* %1, metadata !5087, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i32 %2, metadata !5088, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i32 0, metadata !5089, metadata !DIExpression()), !dbg !5090
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5091
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !5093
  br i1 %6, label %7, label %20, !dbg !5093

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5094
  %9 = load volatile i32, i32* %8, align 4, !dbg !5094
  %10 = icmp ne i32 %9, 1, !dbg !5096
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !5097
  call void @llvm.dbg.value(metadata i32 0, metadata !5089, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i8* %1, metadata !5087, metadata !DIExpression()), !dbg !5090
  br i1 %12, label %20, label %13, !dbg !5097

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5089, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata i8* %15, metadata !5087, metadata !DIExpression()), !dbg !5090
  %16 = load i8, i8* %15, align 1, !dbg !5098
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #21, !dbg !5102
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !5103
  call void @llvm.dbg.value(metadata i8* %17, metadata !5087, metadata !DIExpression()), !dbg !5090
  %18 = add nuw i32 %14, 1, !dbg !5104
  call void @llvm.dbg.value(metadata i32 %18, metadata !5089, metadata !DIExpression()), !dbg !5090
  %19 = icmp eq i32 %18, %2, !dbg !5105
  br i1 %19, label %20, label %13, !dbg !5106, !llvm.loop !5107

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !5090
  ret i32 %21, !dbg !5109
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5110 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5112, metadata !DIExpression()), !dbg !5120
  call void @llvm.dbg.value(metadata i8* %1, metadata !5113, metadata !DIExpression()), !dbg !5120
  call void @llvm.dbg.value(metadata i32 %2, metadata !5114, metadata !DIExpression()), !dbg !5120
  %5 = bitcast i32* %4 to i8*, !dbg !5121
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5121
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5122
  %7 = xor i1 %6, true, !dbg !5124
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5124
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5124
  br i1 %11, label %45, label %12, !dbg !5124

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5125
  %14 = load volatile i32, i32* %13, align 4, !dbg !5125
  %15 = icmp eq i32 %14, 2, !dbg !5127
  br i1 %15, label %16, label %45, !dbg !5128

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5129
  call void @llvm.dbg.value(metadata i32 %17, metadata !5115, metadata !DIExpression()), !dbg !5120
  call void @llvm.dbg.value(metadata i32* %4, metadata !5118, metadata !DIExpression(DW_OP_deref)), !dbg !5120
  %18 = call i32 @vdma_get_available_send_space(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !5130
  call void @llvm.dbg.value(metadata i32 %18, metadata !5119, metadata !DIExpression()), !dbg !5120
  %19 = icmp eq i32 %18, 0, !dbg !5131
  br i1 %19, label %21, label %20, !dbg !5133

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5134
  unreachable, !dbg !5134

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !5136
  call void @llvm.dbg.value(metadata i32 %22, metadata !5118, metadata !DIExpression()), !dbg !5120
  %23 = icmp ult i32 %22, %2, !dbg !5138
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !5117, metadata !DIExpression()), !dbg !5120
  call void @llvm.dbg.value(metadata i32 0, metadata !5116, metadata !DIExpression()), !dbg !5120
  %25 = icmp eq i32 %24, 0, !dbg !5139
  br i1 %25, label %38, label %28, !dbg !5142

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !5116, metadata !DIExpression()), !dbg !5120
  %27 = icmp eq i32 %34, %24, !dbg !5139
  br i1 %27, label %36, label %28, !dbg !5142, !llvm.loop !5143

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %34, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !5116, metadata !DIExpression()), !dbg !5120
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5145
  %31 = load i8, i8* %30, align 1, !dbg !5145
  %32 = call i32 @vdma_push_data(i32 noundef %17, i8 noundef zeroext %31) #20, !dbg !5147
  call void @llvm.dbg.value(metadata i32 %32, metadata !5119, metadata !DIExpression()), !dbg !5120
  %33 = icmp eq i32 %32, 0, !dbg !5148
  %34 = add nuw i32 %29, 1, !dbg !5150
  call void @llvm.dbg.value(metadata i32 %34, metadata !5116, metadata !DIExpression()), !dbg !5120
  br i1 %33, label %26, label %35, !dbg !5151

35:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5152
  unreachable, !dbg !5152

36:                                               ; preds = %26
  %37 = load i32, i32* %4, align 4, !dbg !5154
  br label %38, !dbg !5154

38:                                               ; preds = %36, %21
  %39 = phi i32 [ %37, %36 ], [ %22, %21 ], !dbg !5154
  call void @llvm.dbg.value(metadata i32 %39, metadata !5118, metadata !DIExpression()), !dbg !5120
  %40 = icmp eq i32 %24, %39, !dbg !5156
  br i1 %40, label %41, label %45, !dbg !5157

41:                                               ; preds = %38
  %42 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !5158
  call void @llvm.dbg.value(metadata i32 %42, metadata !5119, metadata !DIExpression()), !dbg !5120
  %43 = icmp eq i32 %42, 0, !dbg !5160
  br i1 %43, label %45, label %44, !dbg !5162

44:                                               ; preds = %41
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5163
  unreachable, !dbg !5163

45:                                               ; preds = %38, %41, %12, %3
  %46 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %41 ], [ %24, %38 ], !dbg !5120
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5165
  ret i32 %46, !dbg !5165
}

; Function Attrs: optsize
declare dso_local i32 @vdma_push_data(i32 noundef, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !5166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5170, metadata !DIExpression()), !dbg !5173
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5174
  br i1 %2, label %3, label %11, !dbg !5176

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5177
  %5 = load volatile i32, i32* %4, align 4, !dbg !5177
  %6 = icmp eq i32 %5, 1, !dbg !5179
  br i1 %6, label %7, label %11, !dbg !5180

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5181
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5181
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5172, metadata !DIExpression()), !dbg !5173
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5182
  call void @llvm.dbg.value(metadata i8 %10, metadata !5171, metadata !DIExpression()), !dbg !5173
  br label %11, !dbg !5183

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5173
  ret i8 %12, !dbg !5184
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !5185 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5189, metadata !DIExpression()), !dbg !5192
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5193
  br i1 %2, label %3, label %11, !dbg !5195

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5196
  %5 = load volatile i32, i32* %4, align 4, !dbg !5196
  %6 = icmp eq i32 %5, 1, !dbg !5198
  br i1 %6, label %7, label %11, !dbg !5199

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5200
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5200
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5191, metadata !DIExpression()), !dbg !5192
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5201
  call void @llvm.dbg.value(metadata i32 %10, metadata !5190, metadata !DIExpression()), !dbg !5192
  br label %11, !dbg !5202

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5192
  ret i32 %12, !dbg !5203
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5208, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.value(metadata i8* %1, metadata !5209, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.value(metadata i32 %2, metadata !5210, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.value(metadata i8* %1, metadata !5212, metadata !DIExpression()), !dbg !5213
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5214
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !5216
  br i1 %6, label %7, label %19, !dbg !5216

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5217
  %9 = load volatile i32, i32* %8, align 4, !dbg !5217
  %10 = icmp ne i32 %9, 1, !dbg !5219
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !5220
  call void @llvm.dbg.value(metadata i32 0, metadata !5211, metadata !DIExpression()), !dbg !5213
  br i1 %12, label %19, label %13, !dbg !5220

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5211, metadata !DIExpression()), !dbg !5213
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #21, !dbg !5221
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !5225
  store i8 %15, i8* %16, align 1, !dbg !5226
  %17 = add nuw i32 %14, 1, !dbg !5227
  call void @llvm.dbg.value(metadata i32 %17, metadata !5211, metadata !DIExpression()), !dbg !5213
  %18 = icmp eq i32 %17, %2, !dbg !5228
  br i1 %18, label %19, label %13, !dbg !5229, !llvm.loop !5230

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !5213
  ret i32 %20, !dbg !5232
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5233 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5235, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.value(metadata i8* %1, metadata !5236, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.value(metadata i32 %2, metadata !5237, metadata !DIExpression()), !dbg !5243
  %5 = bitcast i32* %4 to i8*, !dbg !5244
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5244
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5245
  %7 = xor i1 %6, true, !dbg !5247
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5247
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5247
  br i1 %11, label %44, label %12, !dbg !5247

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5248
  %14 = load volatile i32, i32* %13, align 4, !dbg !5248
  %15 = icmp eq i32 %14, 2, !dbg !5250
  br i1 %15, label %16, label %44, !dbg !5251

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5252
  call void @llvm.dbg.value(metadata i32 %17, metadata !5238, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.value(metadata i32* %4, metadata !5240, metadata !DIExpression(DW_OP_deref)), !dbg !5243
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !5253
  call void @llvm.dbg.value(metadata i32 %18, metadata !5242, metadata !DIExpression()), !dbg !5243
  %19 = icmp eq i32 %18, 0, !dbg !5254
  br i1 %19, label %21, label %20, !dbg !5256

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5257
  unreachable, !dbg !5257

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !5259
  call void @llvm.dbg.value(metadata i32 %22, metadata !5240, metadata !DIExpression()), !dbg !5243
  %23 = icmp ult i32 %22, %2, !dbg !5261
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !5239, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.value(metadata i32 0, metadata !5241, metadata !DIExpression()), !dbg !5243
  %25 = icmp eq i32 %24, 0, !dbg !5262
  br i1 %25, label %37, label %28, !dbg !5265

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !5241, metadata !DIExpression()), !dbg !5243
  %27 = icmp eq i32 %33, %24, !dbg !5262
  br i1 %27, label %35, label %28, !dbg !5265, !llvm.loop !5266

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !5241, metadata !DIExpression()), !dbg !5243
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5268
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #20, !dbg !5270
  call void @llvm.dbg.value(metadata i32 %31, metadata !5242, metadata !DIExpression()), !dbg !5243
  %32 = icmp eq i32 %31, 0, !dbg !5271
  %33 = add nuw i32 %29, 1, !dbg !5273
  call void @llvm.dbg.value(metadata i32 %33, metadata !5241, metadata !DIExpression()), !dbg !5243
  br i1 %32, label %26, label %34, !dbg !5274

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5275
  unreachable, !dbg !5275

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !5277
  br label %37, !dbg !5277

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !5277
  call void @llvm.dbg.value(metadata i32 %38, metadata !5240, metadata !DIExpression()), !dbg !5243
  %39 = icmp eq i32 %24, %38, !dbg !5279
  br i1 %39, label %40, label %44, !dbg !5280

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !5281
  call void @llvm.dbg.value(metadata i32 %41, metadata !5242, metadata !DIExpression()), !dbg !5243
  %42 = icmp eq i32 %41, 0, !dbg !5283
  br i1 %42, label %44, label %43, !dbg !5285

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5286
  unreachable, !dbg !5286

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !5243
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5288
  ret i32 %45, !dbg !5288
}

; Function Attrs: optsize
declare dso_local i32 @vdma_pop_data(i32 noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !5289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5293, metadata !DIExpression()), !dbg !5301
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !5294, metadata !DIExpression()), !dbg !5301
  call void @llvm.dbg.value(metadata i8* %2, metadata !5295, metadata !DIExpression()), !dbg !5301
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5302
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !5304
  br i1 %6, label %7, label %39, !dbg !5304

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5305
  call void @llvm.dbg.value(metadata i32 %8, metadata !5298, metadata !DIExpression()), !dbg !5301
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5306
  %10 = load volatile i32, i32* %9, align 4, !dbg !5306
  %11 = icmp eq i32 %10, 1, !dbg !5308
  br i1 %11, label %12, label %37, !dbg !5309

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5310
  call void @llvm.dbg.value(metadata i32 %13, metadata !5296, metadata !DIExpression()), !dbg !5301
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5311
  call void @llvm.dbg.value(metadata i32 %14, metadata !5297, metadata !DIExpression()), !dbg !5301
  %15 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5312
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !5313
  %16 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5314
  store i8* %2, i8** %16, align 4, !dbg !5315
  %17 = shl i32 %0, 1, !dbg !5316
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !5317
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #20, !dbg !5318
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !5319
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #20, !dbg !5320
  call void @llvm.dbg.value(metadata i32 %20, metadata !5299, metadata !DIExpression()), !dbg !5301
  %21 = icmp eq i32 %20, 0, !dbg !5321
  br i1 %21, label %23, label %22, !dbg !5323

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5324
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5326
  unreachable, !dbg !5326

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !5327
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !5328
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #20, !dbg !5329
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !5330
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #20, !dbg !5331
  call void @llvm.dbg.value(metadata i32 %27, metadata !5299, metadata !DIExpression()), !dbg !5301
  %28 = icmp eq i32 %27, 0, !dbg !5332
  br i1 %28, label %30, label %29, !dbg !5334

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5335
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5337
  unreachable, !dbg !5337

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5338
  %32 = load i32, i32* %31, align 4, !dbg !5338
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #20, !dbg !5339
  call void @llvm.dbg.value(metadata i32 %33, metadata !5300, metadata !DIExpression()), !dbg !5301
  %34 = icmp eq i32 %33, 0, !dbg !5340
  br i1 %34, label %36, label %35, !dbg !5342

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5343
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5345
  unreachable, !dbg !5345

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #21, !dbg !5346
  store volatile i32 2, i32* %9, align 4, !dbg !5347
  br label %37, !dbg !5348

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5301
  br label %39, !dbg !5349

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !5301
  ret i32 %40, !dbg !5349
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !5350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5355, metadata !DIExpression()), !dbg !5358
  call void @llvm.dbg.value(metadata i8* %1, metadata !5356, metadata !DIExpression()), !dbg !5358
  call void @llvm.dbg.value(metadata i8* %1, metadata !5357, metadata !DIExpression()), !dbg !5358
  %3 = load i8, i8* %1, align 4, !dbg !5359, !range !2630
  %4 = icmp eq i8 %3, 0, !dbg !5359
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !5361
  %6 = bitcast i8* %5 to i32*, !dbg !5361
  %7 = load i32, i32* %6, align 4, !dbg !5361
  br i1 %4, label %9, label %8, !dbg !5362

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5357, metadata !DIExpression()), !dbg !5358
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !5363
  br label %10, !dbg !5365

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !5366
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !5368
}

; Function Attrs: optsize
declare dso_local i32 @vdma_register_callback(i32 noundef, void (i32, i8*)* noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !5369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5371, metadata !DIExpression()), !dbg !5376
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5377
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !5377
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !5372, metadata !DIExpression()), !dbg !5376
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5378
  call void @llvm.dbg.value(metadata i32 %4, metadata !5373, metadata !DIExpression()), !dbg !5376
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5379
  call void @llvm.dbg.value(metadata i32 %5, metadata !5374, metadata !DIExpression()), !dbg !5376
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5380
  %6 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5381
  %7 = load i32, i32* %6, align 4, !dbg !5381
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef %7) #20, !dbg !5382
  %9 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #20, !dbg !5383
  call void @llvm.dbg.value(metadata i32 %9, metadata !5375, metadata !DIExpression()), !dbg !5376
  %10 = icmp eq i32 %9, 0, !dbg !5384
  br i1 %10, label %12, label %11, !dbg !5386

11:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5387
  unreachable, !dbg !5387

12:                                               ; preds = %1
  %13 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #20, !dbg !5389
  call void @llvm.dbg.value(metadata i32 %13, metadata !5375, metadata !DIExpression()), !dbg !5376
  %14 = icmp eq i32 %13, 0, !dbg !5390
  br i1 %14, label %16, label %15, !dbg !5392

15:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5393
  unreachable, !dbg !5393

16:                                               ; preds = %12
  %17 = tail call i32 @vdma_start(i32 noundef %4) #20, !dbg !5395
  call void @llvm.dbg.value(metadata i32 %17, metadata !5375, metadata !DIExpression()), !dbg !5376
  %18 = icmp eq i32 %17, 0, !dbg !5396
  br i1 %18, label %20, label %19, !dbg !5398

19:                                               ; preds = %16
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5399
  unreachable, !dbg !5399

20:                                               ; preds = %16
  %21 = tail call i32 @vdma_start(i32 noundef %5) #20, !dbg !5401
  call void @llvm.dbg.value(metadata i32 %21, metadata !5375, metadata !DIExpression()), !dbg !5376
  %22 = icmp eq i32 %21, 0, !dbg !5402
  br i1 %22, label %24, label %23, !dbg !5404

23:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5405
  unreachable, !dbg !5405

24:                                               ; preds = %20
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5407
  ret void, !dbg !5408
}

; Function Attrs: optsize
declare dso_local i32 @vdma_start(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !5409 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5411, metadata !DIExpression()), !dbg !5415
  %3 = bitcast i32* %2 to i8*, !dbg !5416
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5416
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5417
  br i1 %4, label %5, label %16, !dbg !5419

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5420
  %7 = load volatile i32, i32* %6, align 4, !dbg !5420
  %8 = icmp eq i32 %7, 2, !dbg !5422
  br i1 %8, label %9, label %16, !dbg !5423

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5424
  call void @llvm.dbg.value(metadata i32 %10, metadata !5412, metadata !DIExpression()), !dbg !5415
  call void @llvm.dbg.value(metadata i32* %2, metadata !5413, metadata !DIExpression(DW_OP_deref)), !dbg !5415
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !5425
  call void @llvm.dbg.value(metadata i32 %11, metadata !5414, metadata !DIExpression()), !dbg !5415
  %12 = icmp eq i32 %11, 0, !dbg !5426
  br i1 %12, label %14, label %13, !dbg !5428

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5429
  unreachable, !dbg !5429

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5431
  call void @llvm.dbg.value(metadata i32 %15, metadata !5413, metadata !DIExpression()), !dbg !5415
  br label %16, !dbg !5432

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5415
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5433
  ret i32 %17, !dbg !5433
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !5434 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5436, metadata !DIExpression()), !dbg !5440
  %3 = bitcast i32* %2 to i8*, !dbg !5441
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5441
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5442
  br i1 %4, label %5, label %16, !dbg !5444

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5445
  %7 = load volatile i32, i32* %6, align 4, !dbg !5445
  %8 = icmp eq i32 %7, 2, !dbg !5447
  br i1 %8, label %9, label %16, !dbg !5448

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5449
  call void @llvm.dbg.value(metadata i32 %10, metadata !5437, metadata !DIExpression()), !dbg !5440
  call void @llvm.dbg.value(metadata i32* %2, metadata !5438, metadata !DIExpression(DW_OP_deref)), !dbg !5440
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !5450
  call void @llvm.dbg.value(metadata i32 %11, metadata !5439, metadata !DIExpression()), !dbg !5440
  %12 = icmp eq i32 %11, 0, !dbg !5451
  br i1 %12, label %14, label %13, !dbg !5453

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5454
  unreachable, !dbg !5454

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5456
  call void @llvm.dbg.value(metadata i32 %15, metadata !5438, metadata !DIExpression()), !dbg !5440
  br label %16, !dbg !5457

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5440
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5458
  ret i32 %17, !dbg !5458
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5461, metadata !DIExpression()), !dbg !5463
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5464
  br i1 %2, label %3, label %10, !dbg !5466

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5467
  %5 = load volatile i32, i32* %4, align 4, !dbg !5467
  %6 = icmp eq i32 %5, 0, !dbg !5469
  br i1 %6, label %10, label %7, !dbg !5470

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5471
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5471
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5462, metadata !DIExpression()), !dbg !5463
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5472
  br label %10, !dbg !5473

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5463
  ret i32 %11, !dbg !5474
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !5475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5479, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.value(metadata i8 %1, metadata !5480, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.value(metadata i8 %2, metadata !5481, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.value(metadata i8 %3, metadata !5482, metadata !DIExpression()), !dbg !5484
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5485
  br i1 %5, label %6, label %13, !dbg !5487

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5488
  %8 = load volatile i32, i32* %7, align 4, !dbg !5488
  %9 = icmp eq i32 %8, 0, !dbg !5490
  br i1 %9, label %13, label %10, !dbg !5491

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5492
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !5492
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !5483, metadata !DIExpression()), !dbg !5484
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #20, !dbg !5493
  br label %13, !dbg !5494

13:                                               ; preds = %6, %4, %10
  %14 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !5484
  ret i32 %14, !dbg !5495
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5498, metadata !DIExpression()), !dbg !5500
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5501
  br i1 %2, label %3, label %10, !dbg !5503

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5504
  %5 = load volatile i32, i32* %4, align 4, !dbg !5504
  %6 = icmp eq i32 %5, 0, !dbg !5506
  br i1 %6, label %10, label %7, !dbg !5507

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5508
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5508
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5499, metadata !DIExpression()), !dbg !5500
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5509
  br label %10, !dbg !5510

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5500
  ret i32 %11, !dbg !5511
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5512 {
  %3 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5518, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !5519, metadata !DIExpression()), !dbg !5530
  %4 = bitcast %struct.hal_cache_region_config_t* %3 to i8*, !dbg !5531
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5531
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %3, metadata !5521, metadata !DIExpression()), !dbg !5532
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5533
  br i1 %5, label %6, label %101, !dbg !5535

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !5536
  %8 = load i8*, i8** %7, align 4, !dbg !5536
  %9 = icmp eq i8* %8, null, !dbg !5538
  br i1 %9, label %101, label %10, !dbg !5539

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !5540
  %12 = load i8*, i8** %11, align 4, !dbg !5540
  %13 = icmp eq i8* %12, null, !dbg !5541
  br i1 %13, label %101, label %14, !dbg !5542

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !5543
  %16 = load i32, i32* %15, align 4, !dbg !5543
  %17 = icmp ugt i32 %16, 131071, !dbg !5545
  br i1 %17, label %101, label %18, !dbg !5546

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !5547
  %20 = load i32, i32* %19, align 4, !dbg !5547
  %21 = icmp ugt i32 %20, 131071, !dbg !5548
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !5549
  br i1 %23, label %101, label %24, !dbg !5549

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !5550
  %26 = load i32, i32* %25, align 4, !dbg !5550
  %27 = icmp ugt i32 %26, 131071, !dbg !5552
  br i1 %27, label %101, label %28, !dbg !5553

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !5554
  %30 = load i32, i32* %29, align 4, !dbg !5554
  %31 = icmp ugt i32 %30, 131071, !dbg !5555
  br i1 %31, label %101, label %32, !dbg !5556

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !5557
  %34 = load i32, i32* %33, align 4, !dbg !5557
  %35 = icmp ugt i32 %34, 131071, !dbg !5558
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !5559
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !5559
  br i1 %39, label %101, label %40, !dbg !5559

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5560
  %42 = load volatile i32, i32* %41, align 4, !dbg !5560
  %43 = icmp eq i32 %42, 1, !dbg !5562
  br i1 %43, label %44, label %101, !dbg !5563

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5564
  call void @llvm.dbg.value(metadata i32 %45, metadata !5527, metadata !DIExpression()), !dbg !5530
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5565
  call void @llvm.dbg.value(metadata i32 %46, metadata !5528, metadata !DIExpression()), !dbg !5530
  %47 = tail call i32 @vdma_init(i32 noundef %45) #20, !dbg !5566
  call void @llvm.dbg.value(metadata i32 %47, metadata !5529, metadata !DIExpression()), !dbg !5530
  %48 = icmp eq i32 %47, 0, !dbg !5567
  br i1 %48, label %50, label %49, !dbg !5569

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5570
  unreachable, !dbg !5570

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !5572
  %52 = ptrtoint i8* %51 to i32, !dbg !5573
  %53 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 0, !dbg !5574
  store i32 %52, i32* %53, align 4, !dbg !5575
  %54 = load i32, i32* %15, align 4, !dbg !5576
  %55 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 1, !dbg !5577
  store i32 %54, i32* %55, align 4, !dbg !5578
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !5579
  call void @llvm.dbg.value(metadata i32 %56, metadata !5529, metadata !DIExpression()), !dbg !5530
  %57 = icmp eq i32 %56, 0, !dbg !5580
  br i1 %57, label %59, label %58, !dbg !5582

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5583
  unreachable, !dbg !5583

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !5585
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #20, !dbg !5586
  call void @llvm.dbg.value(metadata i32 %61, metadata !5529, metadata !DIExpression()), !dbg !5530
  %62 = icmp eq i32 %61, 0, !dbg !5587
  br i1 %62, label %64, label %63, !dbg !5589

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5590
  unreachable, !dbg !5590

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #20, !dbg !5592
  call void @llvm.dbg.value(metadata i32 %65, metadata !5529, metadata !DIExpression()), !dbg !5530
  %66 = icmp eq i32 %65, 0, !dbg !5593
  br i1 %66, label %68, label %67, !dbg !5595

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5596
  unreachable, !dbg !5596

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !5598
  %70 = ptrtoint i8* %69 to i32, !dbg !5599
  store i32 %70, i32* %53, align 4, !dbg !5600
  %71 = load i32, i32* %25, align 4, !dbg !5601
  store i32 %71, i32* %55, align 4, !dbg !5602
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !5603
  call void @llvm.dbg.value(metadata i32 %72, metadata !5529, metadata !DIExpression()), !dbg !5530
  %73 = icmp eq i32 %72, 0, !dbg !5604
  br i1 %73, label %75, label %74, !dbg !5606

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5607
  unreachable, !dbg !5607

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !5609
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #20, !dbg !5610
  call void @llvm.dbg.value(metadata i32 %77, metadata !5529, metadata !DIExpression()), !dbg !5530
  %78 = icmp eq i32 %77, 0, !dbg !5611
  br i1 %78, label %80, label %79, !dbg !5613

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5614
  unreachable, !dbg !5614

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !5616
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #20, !dbg !5617
  call void @llvm.dbg.value(metadata i32 %82, metadata !5529, metadata !DIExpression()), !dbg !5530
  %83 = icmp eq i32 %82, 0, !dbg !5618
  br i1 %83, label %85, label %84, !dbg !5620

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.49, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.50, i32 0, i32 0)) #23, !dbg !5621
  unreachable, !dbg !5621

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #20, !dbg !5623
  call void @llvm.dbg.value(metadata i32 %86, metadata !5520, metadata !DIExpression()), !dbg !5530
  %87 = load i8*, i8** %7, align 4, !dbg !5624
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !5625
  store i8* %87, i8** %88, align 4, !dbg !5626
  %89 = load i32, i32* %15, align 4, !dbg !5627
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5628
  store i32 %89, i32* %90, align 4, !dbg !5629
  %91 = load i32, i32* %19, align 4, !dbg !5630
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !5631
  store i32 %91, i32* %92, align 4, !dbg !5632
  %93 = load i32, i32* %33, align 4, !dbg !5633
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !5634
  store i32 %93, i32* %94, align 4, !dbg !5635
  %95 = load i8*, i8** %11, align 4, !dbg !5636
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !5637
  store i8* %95, i8** %96, align 4, !dbg !5638
  %97 = load i32, i32* %25, align 4, !dbg !5639
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !5640
  store i32 %97, i32* %98, align 4, !dbg !5641
  %99 = load i32, i32* %29, align 4, !dbg !5642
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !5643
  store i32 %99, i32* %100, align 4, !dbg !5644
  call void @restore_interrupt_mask(i32 noundef %86) #20, !dbg !5645
  br label %101, !dbg !5646

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !5530
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5647
  ret i32 %102, !dbg !5647
}

; Function Attrs: optsize
declare dso_local i32 @vdma_init(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_configure(i32 noundef, %struct.hal_cache_region_config_t* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_threshold(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_alert_length(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5648 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5707, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i32 %1, metadata !5708, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !5717, metadata !DIExpression()), !dbg !5723
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !5724
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5724
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !5721, metadata !DIExpression()), !dbg !5725
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !5725
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !5725
  store i32 1, i32* %5, align 4, !dbg !5725
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !5725
  store i32 1, i32* %6, align 4, !dbg !5725
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !5725
  store i32 1, i32* %7, align 4, !dbg !5725
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !5725
  store i32 1, i32* %8, align 4, !dbg !5725
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !5725
  store i32 1, i32* %9, align 4, !dbg !5725
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !5726
  store volatile i32 0, i32* %10, align 4, !dbg !5727
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !5728
  store volatile i32 0, i32* %11, align 4, !dbg !5729
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !5730
  store volatile i32 0, i32* %12, align 4, !dbg !5731
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !5732
  br i1 %13, label %14, label %17, !dbg !5734

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !5735
  %16 = mul i32 %15, 1000, !dbg !5737
  call void @llvm.dbg.value(metadata i32 %16, metadata !5709, metadata !DIExpression()), !dbg !5722
  br label %17, !dbg !5738

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !5739
  call void @llvm.dbg.value(metadata i32 %18, metadata !5709, metadata !DIExpression()), !dbg !5722
  %19 = shl i32 %1, 8, !dbg !5740
  %20 = udiv i32 %18, %19, !dbg !5741
  call void @llvm.dbg.value(metadata i32 %20, metadata !5710, metadata !DIExpression()), !dbg !5722
  %21 = mul i32 %18, 10, !dbg !5742
  %22 = udiv i32 %21, %19, !dbg !5743
  %23 = urem i32 %22, 10, !dbg !5744
  call void @llvm.dbg.value(metadata i32 %23, metadata !5711, metadata !DIExpression()), !dbg !5722
  %24 = icmp ne i32 %23, 0, !dbg !5745
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !5747
  %27 = zext i1 %26 to i32, !dbg !5747
  %28 = add i32 %20, %27, !dbg !5747
  call void @llvm.dbg.value(metadata i32 %28, metadata !5710, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i32 %28, metadata !5713, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i32 undef, metadata !5714, metadata !DIExpression()), !dbg !5722
  br label %29, !dbg !5748

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !5722
  %31 = mul i32 %30, %1, !dbg !5722
  %32 = udiv i32 %18, %31, !dbg !5722
  call void @llvm.dbg.value(metadata i32 %32, metadata !5714, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i32 %30, metadata !5713, metadata !DIExpression()), !dbg !5722
  %33 = icmp ugt i32 %32, 256, !dbg !5749
  %34 = add i32 %30, 1, !dbg !5750
  call void @llvm.dbg.value(metadata i32 %34, metadata !5713, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.value(metadata i32 undef, metadata !5714, metadata !DIExpression()), !dbg !5722
  br i1 %33, label %29, label %35, !dbg !5748, !llvm.loop !5752

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !5754
  %37 = urem i32 %36, 10, !dbg !5755
  call void @llvm.dbg.value(metadata i32 %37, metadata !5712, metadata !DIExpression()), !dbg !5722
  %38 = add nsw i32 %32, -1, !dbg !5756
  call void @llvm.dbg.value(metadata i32 %38, metadata !5714, metadata !DIExpression()), !dbg !5722
  %39 = add nsw i32 %32, -2, !dbg !5757
  %40 = lshr i32 %39, 1, !dbg !5758
  call void @llvm.dbg.value(metadata i32 %40, metadata !5715, metadata !DIExpression()), !dbg !5722
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !5759
  store volatile i32 3, i32* %41, align 4, !dbg !5760
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5761
  %43 = load volatile i32, i32* %42, align 4, !dbg !5761
  call void @llvm.dbg.value(metadata i32 %43, metadata !5716, metadata !DIExpression()), !dbg !5722
  %44 = or i32 %43, 128, !dbg !5762
  store volatile i32 %44, i32* %42, align 4, !dbg !5763
  %45 = and i32 %30, 255, !dbg !5764
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5765
  store volatile i32 %45, i32* %46, align 4, !dbg !5766
  %47 = lshr i32 %30, 8, !dbg !5767
  %48 = and i32 %47, 255, !dbg !5768
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5769
  store volatile i32 %48, i32* %49, align 4, !dbg !5770
  store volatile i32 %43, i32* %42, align 4, !dbg !5771
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !5772
  store volatile i32 %38, i32* %50, align 4, !dbg !5773
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !5774
  store volatile i32 %40, i32* %51, align 4, !dbg !5775
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !5776
  %53 = load i32, i32* %52, align 4, !dbg !5776
  store volatile i32 %53, i32* %11, align 4, !dbg !5777
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !5778
  %55 = load i32, i32* %54, align 4, !dbg !5778
  store volatile i32 %55, i32* %12, align 4, !dbg !5779
  %56 = icmp ugt i32 %1, 2999999, !dbg !5780
  br i1 %56, label %57, label %59, !dbg !5782

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !5783
  store volatile i32 18, i32* %58, align 4, !dbg !5785
  br label %59, !dbg !5786

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5787
  ret void, !dbg !5787
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !5788 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5792, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i32 %1, metadata !5793, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i32 %2, metadata !5794, metadata !DIExpression()), !dbg !5797
  call void @llvm.dbg.value(metadata i32 %3, metadata !5795, metadata !DIExpression()), !dbg !5797
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5798
  %6 = load volatile i32, i32* %5, align 4, !dbg !5798
  call void @llvm.dbg.value(metadata i32 %6, metadata !5796, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5797
  store volatile i32 128, i32* %5, align 4, !dbg !5799
  %7 = trunc i32 %6 to i16, !dbg !5800
  %8 = and i16 %7, -4, !dbg !5800
  call void @llvm.dbg.value(metadata i16 %7, metadata !5796, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !5797
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !5801

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !5802
  call void @llvm.dbg.value(metadata i16 %10, metadata !5796, metadata !DIExpression()), !dbg !5797
  br label %15, !dbg !5804

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !5805
  call void @llvm.dbg.value(metadata i16 %12, metadata !5796, metadata !DIExpression()), !dbg !5797
  br label %15, !dbg !5806

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !5807
  call void @llvm.dbg.value(metadata i16 %14, metadata !5796, metadata !DIExpression()), !dbg !5797
  br label %15, !dbg !5808

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !5797
  call void @llvm.dbg.value(metadata i16 %16, metadata !5796, metadata !DIExpression()), !dbg !5797
  %17 = and i16 %16, -61, !dbg !5809
  call void @llvm.dbg.value(metadata i16 %16, metadata !5796, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !5797
  %18 = icmp eq i32 %2, 1, !dbg !5810
  %19 = select i1 %18, i16 4, i16 0, !dbg !5810
  %20 = or i16 %17, %19, !dbg !5810
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !5796, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !5797
  call void @llvm.dbg.value(metadata i16 %20, metadata !5796, metadata !DIExpression()), !dbg !5797
  %21 = icmp eq i32 %3, 2, !dbg !5811
  %22 = or i16 %20, 16, !dbg !5811
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !5811
  call void @llvm.dbg.value(metadata i16 %23, metadata !5796, metadata !DIExpression()), !dbg !5797
  %24 = zext i16 %23 to i32, !dbg !5812
  store volatile i32 %24, i32* %5, align 4, !dbg !5813
  ret void, !dbg !5814
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !5815 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5819, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.value(metadata i8 %1, metadata !5820, metadata !DIExpression()), !dbg !5822
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !5823

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !5824
  call void @llvm.dbg.value(metadata i32 %5, metadata !5821, metadata !DIExpression()), !dbg !5822
  %6 = and i32 %5, 32, !dbg !5826
  %7 = icmp eq i32 %6, 0, !dbg !5826
  br i1 %7, label %4, label %8, !dbg !5828, !llvm.loop !5829

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !5831
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5833
  store volatile i32 %9, i32* %10, align 4, !dbg !5834
  ret void, !dbg !5835
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5836 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5840, metadata !DIExpression()), !dbg !5843
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !5844

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !5845
  call void @llvm.dbg.value(metadata i32 %4, metadata !5841, metadata !DIExpression()), !dbg !5843
  %5 = and i32 %4, 1, !dbg !5847
  %6 = icmp eq i32 %5, 0, !dbg !5847
  br i1 %6, label %3, label %7, !dbg !5849, !llvm.loop !5850

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5852
  %9 = load volatile i32, i32* %8, align 4, !dbg !5852
  %10 = trunc i32 %9 to i8, !dbg !5854
  call void @llvm.dbg.value(metadata i8 %10, metadata !5842, metadata !DIExpression()), !dbg !5843
  ret i8 %10, !dbg !5855
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5856 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5860, metadata !DIExpression()), !dbg !5863
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5864
  %3 = load volatile i32, i32* %2, align 4, !dbg !5864
  call void @llvm.dbg.value(metadata i32 %3, metadata !5861, metadata !DIExpression()), !dbg !5863
  %4 = and i32 %3, 1, !dbg !5865
  %5 = icmp eq i32 %4, 0, !dbg !5865
  br i1 %5, label %9, label %6, !dbg !5867

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5868
  %8 = load volatile i32, i32* %7, align 4, !dbg !5868
  call void @llvm.dbg.value(metadata i32 %8, metadata !5862, metadata !DIExpression()), !dbg !5863
  br label %9, !dbg !5870

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !5871
  call void @llvm.dbg.value(metadata i32 %10, metadata !5862, metadata !DIExpression()), !dbg !5863
  ret i32 %10, !dbg !5872
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5873 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5877, metadata !DIExpression()), !dbg !5880
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5881
  %3 = load volatile i32, i32* %2, align 4, !dbg !5881
  call void @llvm.dbg.value(metadata i32 %3, metadata !5879, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5880
  store volatile i32 191, i32* %2, align 4, !dbg !5882
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5883
  %5 = load volatile i32, i32* %4, align 4, !dbg !5883
  call void @llvm.dbg.value(metadata i32 %5, metadata !5878, metadata !DIExpression()), !dbg !5880
  %6 = and i32 %5, 65343, !dbg !5884
  %7 = or i32 %6, 192, !dbg !5884
  call void @llvm.dbg.value(metadata i32 %5, metadata !5878, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !5880
  store volatile i32 %7, i32* %4, align 4, !dbg !5885
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5886
  store volatile i32 0, i32* %8, align 4, !dbg !5887
  store volatile i32 0, i32* %2, align 4, !dbg !5888
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5889
  store volatile i32 2, i32* %9, align 4, !dbg !5890
  %10 = and i32 %3, 65535, !dbg !5891
  store volatile i32 %10, i32* %2, align 4, !dbg !5892
  ret void, !dbg !5893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !5894 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5898, metadata !DIExpression()), !dbg !5904
  call void @llvm.dbg.value(metadata i8 %1, metadata !5899, metadata !DIExpression()), !dbg !5904
  call void @llvm.dbg.value(metadata i8 %2, metadata !5900, metadata !DIExpression()), !dbg !5904
  call void @llvm.dbg.value(metadata i8 %3, metadata !5901, metadata !DIExpression()), !dbg !5904
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5905
  %6 = load volatile i32, i32* %5, align 4, !dbg !5905
  call void @llvm.dbg.value(metadata i32 %6, metadata !5903, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5904
  store volatile i32 191, i32* %5, align 4, !dbg !5906
  %7 = zext i8 %1 to i32, !dbg !5907
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5908
  store volatile i32 %7, i32* %8, align 4, !dbg !5909
  %9 = zext i8 %2 to i32, !dbg !5910
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !5911
  store volatile i32 %9, i32* %10, align 4, !dbg !5912
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5913
  %12 = load volatile i32, i32* %11, align 4, !dbg !5913
  call void @llvm.dbg.value(metadata i32 %12, metadata !5902, metadata !DIExpression()), !dbg !5904
  %13 = and i32 %12, 65509, !dbg !5914
  %14 = or i32 %13, 26, !dbg !5914
  call void @llvm.dbg.value(metadata i32 %12, metadata !5902, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !5904
  store volatile i32 %14, i32* %11, align 4, !dbg !5915
  %15 = zext i8 %3 to i32, !dbg !5916
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !5917
  store volatile i32 %15, i32* %16, align 4, !dbg !5918
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5919
  store volatile i32 1, i32* %17, align 4, !dbg !5920
  %18 = and i32 %6, 65535, !dbg !5921
  store volatile i32 %18, i32* %5, align 4, !dbg !5922
  ret void, !dbg !5923
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5924 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5926, metadata !DIExpression()), !dbg !5928
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5929
  %3 = load volatile i32, i32* %2, align 4, !dbg !5929
  call void @llvm.dbg.value(metadata i32 %3, metadata !5927, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5928
  store volatile i32 191, i32* %2, align 4, !dbg !5930
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5931
  store volatile i32 0, i32* %4, align 4, !dbg !5932
  store volatile i32 0, i32* %2, align 4, !dbg !5933
  %5 = and i32 %3, 65535, !dbg !5934
  store volatile i32 %5, i32* %2, align 4, !dbg !5935
  ret void, !dbg !5936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5937 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5939, metadata !DIExpression()), !dbg !5942
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5943
  %3 = load volatile i32, i32* %2, align 4, !dbg !5943
  call void @llvm.dbg.value(metadata i32 %3, metadata !5941, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5942
  store volatile i32 191, i32* %2, align 4, !dbg !5944
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5945
  %5 = load volatile i32, i32* %4, align 4, !dbg !5945
  call void @llvm.dbg.value(metadata i32 %5, metadata !5940, metadata !DIExpression()), !dbg !5942
  %6 = and i32 %5, 65519, !dbg !5946
  %7 = or i32 %6, 16, !dbg !5946
  call void @llvm.dbg.value(metadata i32 %5, metadata !5940, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !5942
  store volatile i32 %7, i32* %4, align 4, !dbg !5947
  store volatile i32 0, i32* %2, align 4, !dbg !5948
  store volatile i32 135, i32* %4, align 4, !dbg !5949
  %8 = and i32 %3, 65535, !dbg !5950
  store volatile i32 %8, i32* %2, align 4, !dbg !5951
  ret void, !dbg !5952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5953 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5955, metadata !DIExpression()), !dbg !5958
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5959
  %3 = load volatile i32, i32* %2, align 4, !dbg !5959
  call void @llvm.dbg.value(metadata i32 %3, metadata !5957, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5958
  %4 = load volatile i32, i32* %2, align 4, !dbg !5960
  %5 = and i32 %4, -129, !dbg !5960
  store volatile i32 %5, i32* %2, align 4, !dbg !5960
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5961
  %7 = load volatile i32, i32* %6, align 4, !dbg !5961
  call void @llvm.dbg.value(metadata i32 %7, metadata !5956, metadata !DIExpression()), !dbg !5958
  %8 = and i32 %7, 65530, !dbg !5962
  %9 = or i32 %8, 5, !dbg !5962
  call void @llvm.dbg.value(metadata i32 %7, metadata !5956, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !5958
  store volatile i32 %9, i32* %6, align 4, !dbg !5963
  %10 = and i32 %3, 65535, !dbg !5964
  %11 = load volatile i32, i32* %2, align 4, !dbg !5965
  %12 = and i32 %10, %11, !dbg !5965
  store volatile i32 %12, i32* %2, align 4, !dbg !5965
  ret void, !dbg !5966
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5967 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5971, metadata !DIExpression()), !dbg !5974
  call void @llvm.dbg.value(metadata i32 %1, metadata !5972, metadata !DIExpression()), !dbg !5974
  call void @llvm.dbg.value(metadata i16 145, metadata !5973, metadata !DIExpression()), !dbg !5974
  %3 = icmp eq i32 %1, 0, !dbg !5975
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !5973, metadata !DIExpression()), !dbg !5974
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5977
  store volatile i32 %4, i32* %5, align 4, !dbg !5978
  ret void, !dbg !5979
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5980 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5985, metadata !DIExpression()), !dbg !5989
  call void @llvm.dbg.value(metadata i32 0, metadata !5988, metadata !DIExpression()), !dbg !5989
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5990
  %3 = load volatile i32, i32* %2, align 4, !dbg !5990
  call void @llvm.dbg.value(metadata i32 %3, metadata !5986, metadata !DIExpression()), !dbg !5989
  %4 = and i32 %3, 1, !dbg !5991
  %5 = icmp eq i32 %4, 0, !dbg !5991
  br i1 %5, label %6, label %16, !dbg !5993

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !5994
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !5995

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !5988, metadata !DIExpression()), !dbg !5989
  br label %16, !dbg !5996

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5998
  %11 = load volatile i32, i32* %10, align 4, !dbg !5998
  call void @llvm.dbg.value(metadata i32 %11, metadata !5987, metadata !DIExpression()), !dbg !5989
  %12 = and i32 %11, 16, !dbg !5999
  %13 = icmp eq i32 %12, 0, !dbg !5999
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !5988, metadata !DIExpression()), !dbg !5989
  br label %16, !dbg !6001

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !5989
  ret i32 %17, !dbg !6002
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !6003 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6007, metadata !DIExpression()), !dbg !6010
  call void @llvm.dbg.value(metadata i32 0, metadata !6009, metadata !DIExpression()), !dbg !6010
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !6011
  %3 = load volatile i32, i32* %2, align 4, !dbg !6011
  call void @llvm.dbg.value(metadata i32 %3, metadata !6008, metadata !DIExpression()), !dbg !6010
  %4 = and i32 %3, 14, !dbg !6012
  %5 = icmp eq i32 %4, 0, !dbg !6012
  %6 = sext i1 %5 to i32, !dbg !6014
  call void @llvm.dbg.value(metadata i32 %6, metadata !6009, metadata !DIExpression()), !dbg !6010
  ret i32 %6, !dbg !6015
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !6016 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6018, metadata !DIExpression()), !dbg !6020
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6021
  %3 = load volatile i32, i32* %2, align 4, !dbg !6021
  call void @llvm.dbg.value(metadata i32 %3, metadata !6019, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6020
  call void @llvm.dbg.value(metadata i32 %3, metadata !6019, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6020
  ret void, !dbg !6022
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6023 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6025, metadata !DIExpression()), !dbg !6026
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6027
  store volatile i32 191, i32* %2, align 4, !dbg !6028
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6029
  store volatile i32 16, i32* %3, align 4, !dbg !6030
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !6031
  store volatile i32 0, i32* %4, align 4, !dbg !6032
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !6033
  store volatile i32 0, i32* %5, align 4, !dbg !6034
  store volatile i32 128, i32* %2, align 4, !dbg !6035
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6036
  store volatile i32 0, i32* %6, align 4, !dbg !6037
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6038
  store volatile i32 0, i32* %7, align 4, !dbg !6039
  store volatile i32 0, i32* %2, align 4, !dbg !6040
  store volatile i32 0, i32* %7, align 4, !dbg !6041
  store volatile i32 0, i32* %3, align 4, !dbg !6042
  store volatile i32 191, i32* %2, align 4, !dbg !6043
  store volatile i32 0, i32* %3, align 4, !dbg !6044
  store volatile i32 0, i32* %2, align 4, !dbg !6045
  store volatile i32 0, i32* %4, align 4, !dbg !6046
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !6047
  store volatile i32 0, i32* %8, align 4, !dbg !6048
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !6049
  store volatile i32 0, i32* %9, align 4, !dbg !6050
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !6051
  store volatile i32 0, i32* %10, align 4, !dbg !6052
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !6053
  store volatile i32 0, i32* %11, align 4, !dbg !6054
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !6055
  store volatile i32 0, i32* %12, align 4, !dbg !6056
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !6057
  store volatile i32 0, i32* %13, align 4, !dbg !6058
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !6059
  store volatile i32 0, i32* %14, align 4, !dbg !6060
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !6061
  store volatile i32 0, i32* %15, align 4, !dbg !6062
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !6063
  store volatile i32 0, i32* %16, align 4, !dbg !6064
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6065
  store volatile i32 0, i32* %17, align 4, !dbg !6066
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !6067
  store volatile i32 0, i32* %18, align 4, !dbg !6068
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6069
  store volatile i32 0, i32* %19, align 4, !dbg !6070
  store volatile i32 0, i32* %13, align 4, !dbg !6071
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !6072
  store volatile i32 0, i32* %20, align 4, !dbg !6073
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !6074
  store volatile i32 0, i32* %21, align 4, !dbg !6075
  ret void, !dbg !6076
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6077 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6079, metadata !DIExpression()), !dbg !6080
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !6081

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !6082
  %5 = and i32 %4, 64, !dbg !6083
  %6 = icmp eq i32 %5, 0, !dbg !6084
  br i1 %6, label %3, label %7, !dbg !6081, !llvm.loop !6085

7:                                                ; preds = %3
  ret void, !dbg !6087
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !6088 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6092, metadata !DIExpression()), !dbg !6095
  call void @llvm.dbg.value(metadata i32 %1, metadata !6093, metadata !DIExpression()), !dbg !6095
  call void @llvm.dbg.value(metadata i32 15, metadata !6094, metadata !DIExpression()), !dbg !6095
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !6096

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !6097
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !6100
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !6102
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !6104
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !6095
  call void @llvm.dbg.value(metadata i32 %16, metadata !6094, metadata !DIExpression()), !dbg !6095
  ret i32 %16, !dbg !6106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #6 !dbg !6107 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6117, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !6118, metadata !DIExpression()), !dbg !6119
  %3 = add i32 %0, -8, !dbg !6120
  %4 = icmp ult i32 %3, 8, !dbg !6120
  br i1 %4, label %5, label %12, !dbg !6120

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !6120
  %7 = load i8, i8* %6, align 1, !dbg !6120
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.2, i32 0, i32 %3, !dbg !6120
  %9 = load i32, i32* %8, align 4, !dbg !6120
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !6121
  store i8 %7, i8* %10, align 4, !dbg !6121
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !6121
  store i32 %9, i32* %11, align 4, !dbg !6121
  br label %12, !dbg !6123

12:                                               ; preds = %2, %5
  ret void, !dbg !6123
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6124 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6128, metadata !DIExpression()), !dbg !6129
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6130
  store volatile i32 3, i32* %2, align 4, !dbg !6131
  ret void, !dbg !6132
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !6133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6135, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !6138, metadata !DIExpression()), !dbg !6139
  %2 = add i32 %0, -30, !dbg !6140
  %3 = icmp ult i32 %2, 3, !dbg !6140
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !6140
  call void @llvm.dbg.value(metadata i32 %5, metadata !6136, metadata !DIExpression()), !dbg !6139
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !6141
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !6141
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !6138, metadata !DIExpression()), !dbg !6139
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #20, !dbg !6142
  call void @llvm.dbg.value(metadata i32 %8, metadata !6137, metadata !DIExpression()), !dbg !6139
  switch i32 %8, label %12 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %13
    i32 0, label %13
    i32 3, label %11
  ], !dbg !6143

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #20, !dbg !6144
  br label %13, !dbg !6146

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #20, !dbg !6147
  br label %13, !dbg !6148

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #20, !dbg !6149
  br label %13, !dbg !6150

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.95, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.96, i32 0, i32 0)) #23, !dbg !6151
  unreachable, !dbg !6151

13:                                               ; preds = %11, %1, %1, %10, %9
  ret void, !dbg !6152
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #2 !dbg !903 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !6153
  br i1 %1, label %9, label %2, !dbg !6155

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !995, metadata !DIExpression()), !dbg !6156
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !6157
  %5 = load i32, i32* %4, align 4, !dbg !6157
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #21, !dbg !6162
  %6 = add nuw nsw i32 %3, 1, !dbg !6163
  call void @llvm.dbg.value(metadata i32 %6, metadata !995, metadata !DIExpression()), !dbg !6156
  %7 = icmp eq i32 %6, 64, !dbg !6164
  br i1 %7, label %8, label %2, !dbg !6165, !llvm.loop !6166

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !6168
  br label %9, !dbg !6169

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !6170
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !6171 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6175, metadata !DIExpression()), !dbg !6177
  call void @llvm.dbg.value(metadata i32 %1, metadata !6176, metadata !DIExpression()), !dbg !6177
  %3 = trunc i32 %1 to i8, !dbg !6178
  %4 = shl i8 %3, 2, !dbg !6178
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6181
  store volatile i8 %4, i8* %5, align 1, !dbg !6182
  ret void, !dbg !6183
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6188, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.value(metadata i32 -1, metadata !6189, metadata !DIExpression()), !dbg !6190
  %2 = icmp ugt i32 %0, 63, !dbg !6191
  br i1 %2, label %4, label %3, !dbg !6191

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #21, !dbg !6193
  call void @llvm.dbg.value(metadata i32 0, metadata !6189, metadata !DIExpression()), !dbg !6190
  br label %4, !dbg !6195

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6190
  ret i32 %5, !dbg !6196
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6197 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6201, metadata !DIExpression()), !dbg !6202
  %2 = and i32 %0, 31, !dbg !6203
  %3 = shl nuw i32 1, %2, !dbg !6204
  %4 = lshr i32 %0, 5, !dbg !6205
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !6206
  store volatile i32 %3, i32* %5, align 4, !dbg !6207
  ret void, !dbg !6208
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6209 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6211, metadata !DIExpression()), !dbg !6213
  call void @llvm.dbg.value(metadata i32 -1, metadata !6212, metadata !DIExpression()), !dbg !6213
  %2 = icmp ugt i32 %0, 63, !dbg !6214
  br i1 %2, label %4, label %3, !dbg !6214

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #21, !dbg !6216
  call void @llvm.dbg.value(metadata i32 0, metadata !6212, metadata !DIExpression()), !dbg !6213
  br label %4, !dbg !6218

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6213
  ret i32 %5, !dbg !6219
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6222, metadata !DIExpression()), !dbg !6223
  %2 = and i32 %0, 31, !dbg !6224
  %3 = shl nuw i32 1, %2, !dbg !6225
  %4 = lshr i32 %0, 5, !dbg !6226
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !6227
  store volatile i32 %3, i32* %5, align 4, !dbg !6228
  ret void, !dbg !6229
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #11 !dbg !6230 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6234, metadata !DIExpression()), !dbg !6236
  call void @llvm.dbg.value(metadata i32 255, metadata !6235, metadata !DIExpression()), !dbg !6236
  %2 = icmp ugt i32 %0, 63, !dbg !6237
  br i1 %2, label %5, label %3, !dbg !6237

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #21, !dbg !6239
  call void @llvm.dbg.value(metadata i32 %4, metadata !6235, metadata !DIExpression()), !dbg !6236
  br label %5, !dbg !6241

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !6236
  ret i32 %6, !dbg !6242
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #11 !dbg !6243 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6247, metadata !DIExpression()), !dbg !6248
  %2 = lshr i32 %0, 5, !dbg !6249
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !6250
  %4 = load volatile i32, i32* %3, align 4, !dbg !6250
  %5 = and i32 %0, 31, !dbg !6251
  %6 = lshr i32 %4, %5, !dbg !6252
  %7 = and i32 %6, 1, !dbg !6252
  ret i32 %7, !dbg !6253
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6254 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6256, metadata !DIExpression()), !dbg !6258
  call void @llvm.dbg.value(metadata i32 -1, metadata !6257, metadata !DIExpression()), !dbg !6258
  %2 = icmp ugt i32 %0, 63, !dbg !6259
  br i1 %2, label %4, label %3, !dbg !6259

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #21, !dbg !6261
  call void @llvm.dbg.value(metadata i32 0, metadata !6257, metadata !DIExpression()), !dbg !6258
  br label %4, !dbg !6263

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6258
  ret i32 %5, !dbg !6264
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6267, metadata !DIExpression()), !dbg !6268
  %2 = and i32 %0, 31, !dbg !6269
  %3 = shl nuw i32 1, %2, !dbg !6270
  %4 = lshr i32 %0, 5, !dbg !6271
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !6272
  store volatile i32 %3, i32* %5, align 4, !dbg !6273
  ret void, !dbg !6274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6275 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6277, metadata !DIExpression()), !dbg !6279
  call void @llvm.dbg.value(metadata i32 -1, metadata !6278, metadata !DIExpression()), !dbg !6279
  %2 = icmp ugt i32 %0, 63, !dbg !6280
  br i1 %2, label %4, label %3, !dbg !6280

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !6282
  call void @llvm.dbg.value(metadata i32 0, metadata !6278, metadata !DIExpression()), !dbg !6279
  br label %4, !dbg !6284

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6279
  ret i32 %5, !dbg !6285
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6288, metadata !DIExpression()), !dbg !6289
  %2 = and i32 %0, 31, !dbg !6290
  %3 = shl nuw i32 1, %2, !dbg !6291
  %4 = lshr i32 %0, 5, !dbg !6292
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !6293
  store volatile i32 %3, i32* %5, align 4, !dbg !6294
  ret void, !dbg !6295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6296 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6300, metadata !DIExpression()), !dbg !6303
  call void @llvm.dbg.value(metadata i32 %1, metadata !6301, metadata !DIExpression()), !dbg !6303
  call void @llvm.dbg.value(metadata i32 -1, metadata !6302, metadata !DIExpression()), !dbg !6303
  %3 = icmp ugt i32 %0, 63, !dbg !6304
  br i1 %3, label %5, label %4, !dbg !6304

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #21, !dbg !6306
  call void @llvm.dbg.value(metadata i32 0, metadata !6302, metadata !DIExpression()), !dbg !6303
  br label %5, !dbg !6308

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !6303
  ret i32 %6, !dbg !6309
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #11 !dbg !6310 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6312, metadata !DIExpression()), !dbg !6314
  call void @llvm.dbg.value(metadata i32 68, metadata !6313, metadata !DIExpression()), !dbg !6314
  %2 = icmp ugt i32 %0, 63, !dbg !6315
  br i1 %2, label %5, label %3, !dbg !6315

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #21, !dbg !6317
  call void @llvm.dbg.value(metadata i32 %4, metadata !6313, metadata !DIExpression()), !dbg !6314
  br label %5, !dbg !6319

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !6314
  ret i32 %6, !dbg !6320
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #11 !dbg !6321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6323, metadata !DIExpression()), !dbg !6324
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6325
  %3 = load volatile i8, i8* %2, align 1, !dbg !6325
  %4 = lshr i8 %3, 2, !dbg !6328
  %5 = zext i8 %4 to i32, !dbg !6328
  ret i32 %5, !dbg !6329
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !6330 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !6332, metadata !DIExpression()), !dbg !6334
  tail call void @Flash_ReturnReady() #20, !dbg !6335
  %1 = tail call fastcc i32 @get_current_irq() #21, !dbg !6336
  call void @llvm.dbg.value(metadata i32 %1, metadata !6333, metadata !DIExpression()), !dbg !6334
  %2 = icmp ugt i32 %1, 63, !dbg !6337
  br i1 %2, label %12, label %3, !dbg !6337

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !6339
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !6339
  %6 = icmp eq void (i32)* %5, null, !dbg !6341
  br i1 %6, label %7, label %8, !dbg !6342

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !6332, metadata !DIExpression()), !dbg !6334
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.101, i32 0, i32 0)) #20, !dbg !6343
  br label %12, !dbg !6345

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #21, !dbg !6346
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !6348
  store i32 %9, i32* %10, align 4, !dbg !6349
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !6350
  tail call void %11(i32 noundef %1) #20, !dbg !6351
  call void @llvm.dbg.value(metadata i32 0, metadata !6332, metadata !DIExpression()), !dbg !6334
  br label %12, !dbg !6352

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !6334
  ret i32 %13, !dbg !6353
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #11 !dbg !6354 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6357
  %2 = and i32 %1, 511, !dbg !6358
  call void @llvm.dbg.value(metadata i32 %2, metadata !6356, metadata !DIExpression()), !dbg !6359
  %3 = add nsw i32 %2, -16, !dbg !6360
  ret i32 %3, !dbg !6361
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #11 !dbg !6362 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6363
  %2 = lshr i32 %1, 22, !dbg !6364
  %3 = and i32 %2, 1, !dbg !6364
  ret i32 %3, !dbg !6365
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !6366 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6371, metadata !DIExpression()), !dbg !6374
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !6372, metadata !DIExpression()), !dbg !6374
  %3 = icmp ugt i32 %0, 63, !dbg !6375
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !6375
  br i1 %5, label %10, label %6, !dbg !6375

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6377
  call void @llvm.dbg.value(metadata i32 %7, metadata !6373, metadata !DIExpression()), !dbg !6374
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !6378
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !6379
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !6380
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !6381
  store i32 0, i32* %9, align 4, !dbg !6382
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !6383
  br label %10, !dbg !6384

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !6374
  ret i32 %11, !dbg !6385
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !6386 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !6390, metadata !DIExpression()), !dbg !6391
  %2 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6392
  store i32 %2, i32* %0, align 4, !dbg !6393
  ret i32 0, !dbg !6394
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !6395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6399, metadata !DIExpression()), !dbg !6400
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !6401
  ret i32 0, !dbg !6402
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !6403 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #22, !dbg !6407, !srcloc !6413
  call void @llvm.dbg.value(metadata i32 %1, metadata !6411, metadata !DIExpression()) #22, !dbg !6414
  call void @llvm.dbg.value(metadata i32 %1, metadata !6405, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.value(metadata i32 1, metadata !6406, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.value(metadata i32 4, metadata !6416, metadata !DIExpression()) #22, !dbg !6421
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #22, !dbg !6423, !srcloc !6424
  tail call void asm sideeffect "dmb", ""() #22, !dbg !6425, !srcloc !6428
  tail call void asm sideeffect "isb", ""() #22, !dbg !6429, !srcloc !6432
  ret i32 %1, !dbg !6433
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !6434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6436, metadata !DIExpression()), !dbg !6437
  call void @llvm.dbg.value(metadata i32 %0, metadata !6416, metadata !DIExpression()) #22, !dbg !6438
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #22, !dbg !6440, !srcloc !6424
  tail call void asm sideeffect "dmb", ""() #22, !dbg !6441, !srcloc !6428
  tail call void asm sideeffect "isb", ""() #22, !dbg !6443, !srcloc !6432
  ret void, !dbg !6445
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !6446 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6450
  call void @llvm.dbg.value(metadata i32 %1, metadata !6449, metadata !DIExpression()), !dbg !6451
  call void @llvm.dbg.value(metadata i32 0, metadata !6448, metadata !DIExpression()), !dbg !6451
  br label %2, !dbg !6452

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6448, metadata !DIExpression()), !dbg !6451
  tail call fastcc void @NVIC_DisableIRQ.108(i32 noundef %3) #21, !dbg !6454
  %4 = add nuw nsw i32 %3, 1, !dbg !6457
  call void @llvm.dbg.value(metadata i32 %4, metadata !6448, metadata !DIExpression()), !dbg !6451
  %5 = icmp eq i32 %4, 64, !dbg !6458
  br i1 %5, label %6, label %2, !dbg !6452, !llvm.loop !6459

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !6461
  ret void, !dbg !6462
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.108(i32 noundef %0) unnamed_addr #2 !dbg !6463 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6465, metadata !DIExpression()), !dbg !6466
  %2 = and i32 %0, 31, !dbg !6467
  %3 = shl nuw i32 1, %2, !dbg !6468
  %4 = lshr i32 %0, 5, !dbg !6469
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !6470
  store volatile i32 %3, i32* %5, align 4, !dbg !6471
  ret void, !dbg !6472
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !6473 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6477
  call void @llvm.dbg.value(metadata i32 %1, metadata !6476, metadata !DIExpression()), !dbg !6478
  call void @llvm.dbg.value(metadata i32 0, metadata !6475, metadata !DIExpression()), !dbg !6478
  br label %2, !dbg !6479

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6475, metadata !DIExpression()), !dbg !6478
  tail call fastcc void @NVIC_EnableIRQ.109(i32 noundef %3) #21, !dbg !6481
  %4 = add nuw nsw i32 %3, 1, !dbg !6484
  call void @llvm.dbg.value(metadata i32 %4, metadata !6475, metadata !DIExpression()), !dbg !6478
  %5 = icmp eq i32 %4, 64, !dbg !6485
  br i1 %5, label %6, label %2, !dbg !6479, !llvm.loop !6486

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !6488
  ret void, !dbg !6489
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.109(i32 noundef %0) unnamed_addr #2 !dbg !6490 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6492, metadata !DIExpression()), !dbg !6493
  %2 = and i32 %0, 31, !dbg !6494
  %3 = shl nuw i32 1, %2, !dbg !6495
  %4 = lshr i32 %0, 5, !dbg !6496
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !6497
  store volatile i32 %3, i32* %5, align 4, !dbg !6498
  ret void, !dbg !6499
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #2 !dbg !6500 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6502, metadata !DIExpression()), !dbg !6503
  br label %1, !dbg !6504

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6502, metadata !DIExpression()), !dbg !6503
  tail call fastcc void @NVIC_ClearPendingIRQ.110(i32 noundef %2) #21, !dbg !6506
  %3 = add nuw nsw i32 %2, 1, !dbg !6509
  call void @llvm.dbg.value(metadata i32 %3, metadata !6502, metadata !DIExpression()), !dbg !6503
  %4 = icmp eq i32 %3, 64, !dbg !6510
  br i1 %4, label %5, label %1, !dbg !6504, !llvm.loop !6511

5:                                                ; preds = %1
  ret void, !dbg !6513
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.110(i32 noundef %0) unnamed_addr #2 !dbg !6514 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6516, metadata !DIExpression()), !dbg !6517
  %2 = and i32 %0, 31, !dbg !6518
  %3 = shl nuw i32 1, %2, !dbg !6519
  %4 = lshr i32 %0, 5, !dbg !6520
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !6521
  store volatile i32 %3, i32* %5, align 4, !dbg !6522
  ret void, !dbg !6523
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !6524 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6526, metadata !DIExpression()), !dbg !6527
  %2 = icmp ugt i32 %0, 63, !dbg !6528
  br i1 %2, label %4, label %3, !dbg !6528

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #21, !dbg !6530
  br label %4, !dbg !6531

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !6527
  ret i32 %5, !dbg !6532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !6533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6535, metadata !DIExpression()), !dbg !6536
  %2 = and i32 %0, 511, !dbg !6537
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !6538
  tail call void asm sideeffect "dsb", ""() #22, !dbg !6539, !srcloc !6542
  ret void, !dbg !6543
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #11 !dbg !6544 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6545
  %2 = and i32 %1, 511, !dbg !6546
  ret i32 %2, !dbg !6547
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !6548 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6552, metadata !DIExpression()), !dbg !6651
  call void @llvm.dbg.value(metadata i32 %1, metadata !6553, metadata !DIExpression()), !dbg !6651
  call void @llvm.dbg.value(metadata i8* %0, metadata !6554, metadata !DIExpression()), !dbg !6651
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #20, !dbg !6652
  call void @llvm.dbg.value(metadata i32 %3, metadata !6649, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !6651
  call void @llvm.dbg.value(metadata i32 0, metadata !6648, metadata !DIExpression()), !dbg !6651
  call void @llvm.dbg.value(metadata i32* undef, metadata !6650, metadata !DIExpression()), !dbg !6651
  call void @llvm.dbg.value(metadata i32 0, metadata !6648, metadata !DIExpression()), !dbg !6651
  %4 = icmp ult i32 %3, 4, !dbg !6653
  br i1 %4, label %20, label %5, !dbg !6656

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !6657
  %7 = bitcast i8* %6 to i32**, !dbg !6657
  %8 = load i32*, i32** %7, align 4, !dbg !6657
  call void @llvm.dbg.value(metadata i32* %8, metadata !6650, metadata !DIExpression()), !dbg !6651
  %9 = lshr i32 %3, 2, !dbg !6658
  call void @llvm.dbg.value(metadata i32 %9, metadata !6649, metadata !DIExpression()), !dbg !6651
  br label %10, !dbg !6656

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !6650, metadata !DIExpression()), !dbg !6651
  call void @llvm.dbg.value(metadata i32 %12, metadata !6648, metadata !DIExpression()), !dbg !6651
  %13 = load i32, i32* %11, align 4, !dbg !6659
  %14 = icmp eq i32 %13, -1, !dbg !6662
  br i1 %14, label %16, label %15, !dbg !6663

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #20, !dbg !6664
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.111, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.112, i32 0, i32 0)) #23, !dbg !6664
  unreachable, !dbg !6664

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !6669
  call void @llvm.dbg.value(metadata i32 %17, metadata !6648, metadata !DIExpression()), !dbg !6651
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !6670
  call void @llvm.dbg.value(metadata i32* %18, metadata !6650, metadata !DIExpression()), !dbg !6651
  %19 = icmp eq i32 %17, %9, !dbg !6653
  br i1 %19, label %20, label %10, !dbg !6656, !llvm.loop !6671

20:                                               ; preds = %16, %2
  ret void, !dbg !6673
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #16 section ".ram_code" !dbg !6674 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6676, metadata !DIExpression()), !dbg !6678
  call void @llvm.dbg.value(metadata i32 0, metadata !6677, metadata !DIExpression()), !dbg !6678
  call void @llvm.dbg.value(metadata i32 %0, metadata !6677, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !6678
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !6677, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6678
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !6677, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6678
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !6679
  call void @llvm.dbg.value(metadata i32 %2, metadata !6677, metadata !DIExpression()), !dbg !6678
  ret i32 %2, !dbg !6680
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !6681 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6686, metadata !DIExpression()), !dbg !6688
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6689
  %3 = or i32 %2, 512, !dbg !6689
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6689
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6692
  call void @llvm.dbg.value(metadata i32 %4, metadata !6687, metadata !DIExpression()), !dbg !6688
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !6693

5:                                                ; preds = %1
  br label %7, !dbg !6694

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !6698
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.111, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.112, i32 0, i32 0)) #23, !dbg !6698
  unreachable, !dbg !6698

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !6703
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !6687, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6688
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !6687, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6688
  br label %10, !dbg !6704

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6705
  %12 = and i32 %11, 8192, !dbg !6706
  %13 = icmp eq i32 %12, 0, !dbg !6707
  br i1 %13, label %10, label %14, !dbg !6704, !llvm.loop !6708

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6710
  %16 = and i32 %15, 256, !dbg !6711
  %17 = icmp eq i32 %16, 0, !dbg !6712
  br i1 %17, label %14, label %18, !dbg !6713, !llvm.loop !6714

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !6703
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !6687, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6688
  %20 = and i32 %19, 16, !dbg !6703
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !6687, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6688
  call void @llvm.dbg.value(metadata i32 undef, metadata !6687, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6688
  %21 = or i32 %4, %20, !dbg !6716
  %22 = or i32 %21, 8, !dbg !6716
  call void @llvm.dbg.value(metadata i32 %22, metadata !6687, metadata !DIExpression()), !dbg !6688
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6717
  ret void, !dbg !6718
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !6719 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !6721, metadata !DIExpression()), !dbg !6723
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6724
  call void @llvm.dbg.value(metadata i32 %2, metadata !6722, metadata !DIExpression()), !dbg !6723
  %3 = and i32 %2, -268435477, !dbg !6725
  call void @llvm.dbg.value(metadata i32 %3, metadata !6722, metadata !DIExpression()), !dbg !6723
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6726
  br label %4, !dbg !6727

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6728
  %6 = and i32 %5, 2, !dbg !6729
  %7 = icmp eq i32 %6, 0, !dbg !6727
  br i1 %7, label %8, label %4, !dbg !6727, !llvm.loop !6730

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6732
  call void @llvm.dbg.value(metadata i32 %9, metadata !6722, metadata !DIExpression()), !dbg !6723
  %10 = and i32 %9, -9, !dbg !6733
  call void @llvm.dbg.value(metadata i32 %10, metadata !6722, metadata !DIExpression()), !dbg !6723
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6734
  br label %11, !dbg !6735

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6736
  %13 = and i32 %12, 8, !dbg !6737
  %14 = icmp eq i32 %13, 0, !dbg !6735
  br i1 %14, label %15, label %11, !dbg !6735, !llvm.loop !6738

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !6740, !range !2630
  %17 = icmp eq i8 %16, 0, !dbg !6742
  br i1 %17, label %18, label %21, !dbg !6743

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6744
  %20 = and i32 %19, -513, !dbg !6744
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6744
  br label %21, !dbg !6748

21:                                               ; preds = %18, %15
  ret void, !dbg !6749
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !6750 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6754, metadata !DIExpression()), !dbg !6757
  call void @llvm.dbg.value(metadata i32 0, metadata !6755, metadata !DIExpression()), !dbg !6757
  call void @llvm.dbg.value(metadata i32 0, metadata !6756, metadata !DIExpression()), !dbg !6757
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6758
  call void @llvm.dbg.value(metadata i32 %2, metadata !6755, metadata !DIExpression()), !dbg !6757
  call void @llvm.dbg.value(metadata i32 %2, metadata !6755, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !6757
  %3 = icmp eq i16 %0, 1, !dbg !6759
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !6761
  %5 = or i32 %2, %4, !dbg !6761
  call void @llvm.dbg.value(metadata i32 %5, metadata !6755, metadata !DIExpression()), !dbg !6757
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6762
  br label %6, !dbg !6763

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6764
  %8 = and i32 %7, 2, !dbg !6765
  %9 = icmp eq i32 %8, 0, !dbg !6766
  br i1 %9, label %6, label %10, !dbg !6763, !llvm.loop !6767

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6769
  %12 = and i32 %11, 1, !dbg !6770
  %13 = icmp eq i32 %12, 0, !dbg !6771
  br i1 %13, label %14, label %10, !dbg !6771, !llvm.loop !6772

14:                                               ; preds = %10
  ret i32 0, !dbg !6774
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !6775 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6777, metadata !DIExpression()), !dbg !6778
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #21, !dbg !6779
  tail call void @SFI_MacLeave(i16 zeroext undef) #21, !dbg !6780
  ret void, !dbg !6781
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !6782 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6786, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.value(metadata i32 %1, metadata !6787, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.value(metadata i32 %1, metadata !6788, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.value(metadata i8 0, metadata !6790, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.value(metadata i32 0, metadata !6789, metadata !DIExpression()), !dbg !6791
  %3 = icmp eq i32 %1, 0, !dbg !6792
  br i1 %3, label %16, label %4, !dbg !6795

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !6790, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.value(metadata i32 %6, metadata !6789, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.value(metadata i32 %7, metadata !6788, metadata !DIExpression()), !dbg !6791
  %8 = shl i32 %6, 8, !dbg !6796
  %9 = and i32 %7, 255, !dbg !6798
  %10 = or i32 %8, %9, !dbg !6799
  call void @llvm.dbg.value(metadata i32 %10, metadata !6789, metadata !DIExpression()), !dbg !6791
  %11 = lshr i32 %7, 8, !dbg !6800
  call void @llvm.dbg.value(metadata i32 %11, metadata !6788, metadata !DIExpression()), !dbg !6791
  %12 = add nuw nsw i8 %5, 1, !dbg !6801
  call void @llvm.dbg.value(metadata i8 %12, metadata !6790, metadata !DIExpression()), !dbg !6791
  %13 = icmp ult i32 %7, 256, !dbg !6792
  br i1 %13, label %14, label %4, !dbg !6795, !llvm.loop !6802

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !6804
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !6806
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6807
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6808
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6809
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !6810
  br label %16, !dbg !6811

16:                                               ; preds = %2, %14
  ret void, !dbg !6812
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !6813 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6817, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i8 %1, metadata !6818, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i32 %2, metadata !6819, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i32 %3, metadata !6820, metadata !DIExpression()), !dbg !6823
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #21, !dbg !6824
  call void @llvm.dbg.value(metadata i32 %5, metadata !6822, metadata !DIExpression()), !dbg !6823
  %6 = icmp eq i32 %3, 3, !dbg !6825
  br i1 %6, label %7, label %11, !dbg !6827

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !6828
  %9 = zext i8 %1 to i32, !dbg !6830
  %10 = or i32 %8, %9, !dbg !6831
  call void @llvm.dbg.value(metadata i32 %10, metadata !6821, metadata !DIExpression()), !dbg !6823
  br label %16, !dbg !6832

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !6833
  %13 = zext i8 %1 to i32, !dbg !6835
  %14 = or i32 %12, %13, !dbg !6836
  call void @llvm.dbg.value(metadata i32 %14, metadata !6821, metadata !DIExpression()), !dbg !6823
  %15 = lshr i32 %5, 24, !dbg !6837
  call void @llvm.dbg.value(metadata i32 %15, metadata !6822, metadata !DIExpression()), !dbg !6823
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !6838
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !6823
  call void @llvm.dbg.value(metadata i32 %18, metadata !6822, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i32 %17, metadata !6821, metadata !DIExpression()), !dbg !6823
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6839
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !6840
  %19 = add i32 %3, 1, !dbg !6841
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6842
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6843
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !6844
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !6845
  ret void, !dbg !6846
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 section ".ram_code" !dbg !6847 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6851, metadata !DIExpression()), !dbg !6853
  call void @llvm.dbg.value(metadata i32 %1, metadata !6852, metadata !DIExpression()), !dbg !6853
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !6854
  %4 = and i32 %3, -256, !dbg !6855
  %5 = and i32 %0, 255, !dbg !6856
  %6 = or i32 %4, %5, !dbg !6857
  ret i32 %6, !dbg !6858
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #9 section ".ram_code" !dbg !6859 {
  %5 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6864, metadata !DIExpression()), !dbg !6879
  call void @llvm.dbg.value(metadata i32 %1, metadata !6865, metadata !DIExpression()), !dbg !6879
  call void @llvm.dbg.value(metadata i8** %2, metadata !6866, metadata !DIExpression()), !dbg !6879
  call void @llvm.dbg.value(metadata i32* %3, metadata !6867, metadata !DIExpression()), !dbg !6879
  %6 = bitcast %struct.anon* %5 to i8*, !dbg !6880
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !6880
  call void @llvm.dbg.declare(metadata %struct.anon* %5, metadata !6868, metadata !DIExpression()), !dbg !6881
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !6882
  call void @llvm.dbg.value(metadata i32 %7, metadata !6877, metadata !DIExpression()), !dbg !6879
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !6876, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6879
  %8 = lshr i32 %7, 24, !dbg !6883
  call void @llvm.dbg.value(metadata i32 %8, metadata !6877, metadata !DIExpression()), !dbg !6879
  %9 = trunc i32 %8 to i8, !dbg !6884
  %10 = bitcast %struct.anon* %5 to [4 x i8]*, !dbg !6885
  store i8 %9, i8* %6, align 4, !dbg !6886
  call void @llvm.dbg.value(metadata i32 1, metadata !6878, metadata !DIExpression()), !dbg !6879
  %11 = load i8*, i8** %2, align 4, !dbg !6887
  br label %12, !dbg !6891

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !6887
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6878, metadata !DIExpression()), !dbg !6879
  %15 = load i8, i8* %13, align 1, !dbg !6892
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !6893
  store i8 %15, i8* %16, align 1, !dbg !6894
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6895
  store i8* %17, i8** %2, align 4, !dbg !6895
  %18 = add nuw nsw i32 %14, 1, !dbg !6896
  call void @llvm.dbg.value(metadata i32 %18, metadata !6878, metadata !DIExpression()), !dbg !6879
  %19 = icmp eq i32 %18, 4, !dbg !6897
  br i1 %19, label %20, label %12, !dbg !6891, !llvm.loop !6898

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %5, i32 0, i32 0, !dbg !6900
  %22 = load i32, i32* %21, align 4, !dbg !6900
  call void @llvm.dbg.value(metadata i32 %22, metadata !6877, metadata !DIExpression()), !dbg !6879
  %23 = load i32, i32* %3, align 4, !dbg !6901
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !6902
  %25 = shl i32 %7, 8, !dbg !6903
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !6876, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6879
  %26 = and i32 %0, 255, !dbg !6904
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !6876, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6879
  %27 = or i32 %25, %26, !dbg !6905
  call void @llvm.dbg.value(metadata i32 %27, metadata !6876, metadata !DIExpression()), !dbg !6879
  store i32 %24, i32* %3, align 4, !dbg !6906
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !6907
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !6908
  ret i32 %27, !dbg !6909
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #9 section ".ram_code" !dbg !6910 {
  %4 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6914, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i8* %1, metadata !6915, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i32 %2, metadata !6916, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i8* %1, metadata !6918, metadata !DIExpression()), !dbg !6920
  %5 = bitcast %struct.anon* %4 to i8*, !dbg !6921
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6921
  call void @llvm.dbg.declare(metadata %struct.anon* %4, metadata !6919, metadata !DIExpression()), !dbg !6922
  %6 = add i32 %0, -1610348544, !dbg !6923
  call void @llvm.dbg.value(metadata i32 %6, metadata !6914, metadata !DIExpression()), !dbg !6920
  %7 = ptrtoint i8* %1 to i32, !dbg !6924
  %8 = and i32 %7, 3, !dbg !6926
  %9 = icmp eq i32 %8, 0, !dbg !6927
  br i1 %9, label %10, label %23, !dbg !6928

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6918, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i32 %2, metadata !6916, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i32 %6, metadata !6914, metadata !DIExpression()), !dbg !6920
  %11 = icmp sgt i32 %2, 0, !dbg !6929
  br i1 %11, label %12, label %72, !dbg !6933

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6918, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i32 %14, metadata !6916, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i32 %15, metadata !6914, metadata !DIExpression()), !dbg !6920
  %16 = bitcast i8* %13 to i32*, !dbg !6934
  %17 = load i32, i32* %16, align 4, !dbg !6934
  %18 = inttoptr i32 %15 to i32*, !dbg !6934
  store volatile i32 %17, i32* %18, align 4, !dbg !6934
  %19 = add i32 %15, 4, !dbg !6936
  call void @llvm.dbg.value(metadata i32 %19, metadata !6914, metadata !DIExpression()), !dbg !6920
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !6937
  call void @llvm.dbg.value(metadata i8* %20, metadata !6918, metadata !DIExpression()), !dbg !6920
  %21 = add nsw i32 %14, -4, !dbg !6938
  call void @llvm.dbg.value(metadata i32 %21, metadata !6916, metadata !DIExpression()), !dbg !6920
  %22 = icmp ugt i32 %14, 4, !dbg !6929
  br i1 %22, label %12, label %72, !dbg !6933, !llvm.loop !6939

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !6941
  %25 = icmp eq i32 %24, 0, !dbg !6943
  call void @llvm.dbg.value(metadata i8* %1, metadata !6918, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i8* %1, metadata !6918, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i32 %2, metadata !6916, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i32 %2, metadata !6916, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i32 %6, metadata !6914, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i32 %6, metadata !6914, metadata !DIExpression()), !dbg !6920
  %26 = icmp sgt i32 %2, 0, !dbg !6944
  br i1 %25, label %31, label %27, !dbg !6945

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !6946

28:                                               ; preds = %27
  %29 = bitcast %struct.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %52, !dbg !6946

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !6949

32:                                               ; preds = %31
  %33 = bitcast %struct.anon* %4 to [2 x i16]*
  %34 = bitcast %struct.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %37, !dbg !6949

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !6918, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i32 %39, metadata !6916, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i32 %40, metadata !6914, metadata !DIExpression()), !dbg !6920
  %41 = bitcast i8* %38 to i16*, !dbg !6952
  %42 = load i16, i16* %41, align 2, !dbg !6952
  store i16 %42, i16* %34, align 4, !dbg !6955
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !6956
  %44 = bitcast i8* %43 to i16*, !dbg !6956
  %45 = load i16, i16* %44, align 2, !dbg !6957
  store i16 %45, i16* %35, align 2, !dbg !6958
  %46 = load i32, i32* %36, align 4, !dbg !6959
  %47 = inttoptr i32 %40 to i32*, !dbg !6959
  store volatile i32 %46, i32* %47, align 4, !dbg !6959
  %48 = add i32 %40, 4, !dbg !6960
  call void @llvm.dbg.value(metadata i32 %48, metadata !6914, metadata !DIExpression()), !dbg !6920
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !6961
  call void @llvm.dbg.value(metadata i8* %49, metadata !6918, metadata !DIExpression()), !dbg !6920
  %50 = add nsw i32 %39, -4, !dbg !6962
  call void @llvm.dbg.value(metadata i32 %50, metadata !6916, metadata !DIExpression()), !dbg !6920
  %51 = icmp ugt i32 %39, 4, !dbg !6963
  br i1 %51, label %37, label %72, !dbg !6949, !llvm.loop !6964

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !6918, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i32 %54, metadata !6916, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i32 %55, metadata !6914, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i8* %53, metadata !6918, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i32 0, metadata !6917, metadata !DIExpression()), !dbg !6920
  br label %56, !dbg !6966

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6918, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i32 %58, metadata !6917, metadata !DIExpression()), !dbg !6920
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !6970
  call void @llvm.dbg.value(metadata i8* %59, metadata !6918, metadata !DIExpression()), !dbg !6920
  %60 = load i8, i8* %57, align 1, !dbg !6973
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !6974
  store i8 %60, i8* %61, align 1, !dbg !6975
  %62 = add nuw nsw i32 %58, 1, !dbg !6976
  call void @llvm.dbg.value(metadata i32 %62, metadata !6917, metadata !DIExpression()), !dbg !6920
  %63 = icmp ult i32 %58, 3, !dbg !6977
  %64 = icmp ult i32 %62, %54, !dbg !6978
  %65 = select i1 %63, i1 %64, i1 false, !dbg !6978
  br i1 %65, label %56, label %66, !dbg !6966, !llvm.loop !6979

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !6981
  %68 = inttoptr i32 %55 to i32*, !dbg !6981
  store volatile i32 %67, i32* %68, align 4, !dbg !6981
  %69 = add i32 %55, 4, !dbg !6982
  call void @llvm.dbg.value(metadata i32 %69, metadata !6914, metadata !DIExpression()), !dbg !6920
  %70 = add nsw i32 %54, -4, !dbg !6983
  call void @llvm.dbg.value(metadata i8* %59, metadata !6918, metadata !DIExpression()), !dbg !6920
  call void @llvm.dbg.value(metadata i32 %70, metadata !6916, metadata !DIExpression()), !dbg !6920
  %71 = icmp sgt i32 %54, 4, !dbg !6984
  br i1 %71, label %52, label %72, !dbg !6946, !llvm.loop !6985

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6987
  ret void, !dbg !6987
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !6988 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !6992, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i8* %1, metadata !6993, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i8* %2, metadata !6994, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i16 %3, metadata !6995, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i16 %4, metadata !6996, metadata !DIExpression()), !dbg !7002
  %7 = bitcast i32* %6 to i8*, !dbg !7003
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7003
  call void @llvm.dbg.value(metadata i8* %7, metadata !7001, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i32 0, metadata !6998, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !7000, metadata !DIExpression()), !dbg !7002
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !7000, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i32 0, metadata !6998, metadata !DIExpression()), !dbg !7002
  %9 = icmp eq i16 %3, 0, !dbg !7004
  br i1 %9, label %33, label %10, !dbg !7007

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !7000, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i32 %12, metadata !6998, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i32 0, metadata !6999, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i32 0, metadata !6997, metadata !DIExpression()), !dbg !7002
  store i32 0, i32* %6, align 4, !dbg !7008
  call void @llvm.dbg.value(metadata i32 0, metadata !6999, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i32 %12, metadata !6998, metadata !DIExpression()), !dbg !7002
  %13 = icmp ult i32 %12, %8, !dbg !7011
  br i1 %13, label %14, label %27, !dbg !7013

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !6999, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i32 %16, metadata !6998, metadata !DIExpression()), !dbg !7002
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !7014
  %18 = load i8, i8* %17, align 1, !dbg !7014
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !7016
  store i8 %18, i8* %19, align 1, !dbg !7017
  %20 = add nuw nsw i32 %16, 1, !dbg !7018
  call void @llvm.dbg.value(metadata i32 %20, metadata !6998, metadata !DIExpression()), !dbg !7002
  %21 = add nuw nsw i32 %15, 1, !dbg !7019
  call void @llvm.dbg.value(metadata i32 %21, metadata !6999, metadata !DIExpression()), !dbg !7002
  %22 = icmp ult i32 %20, %8, !dbg !7011
  %23 = icmp ult i32 %15, 3, !dbg !7020
  %24 = select i1 %22, i1 %23, i1 false, !dbg !7020
  br i1 %24, label %14, label %25, !dbg !7013, !llvm.loop !7021

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !7023
  br label %27, !dbg !7023

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !7023
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !7024
  call void @llvm.dbg.value(metadata i32 %28, metadata !6997, metadata !DIExpression()), !dbg !7002
  %30 = bitcast i8* %11 to i32*, !dbg !7023
  store volatile i32 %28, i32* %30, align 4, !dbg !7023
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !7025
  call void @llvm.dbg.value(metadata i8* %31, metadata !7000, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i32 %29, metadata !6998, metadata !DIExpression()), !dbg !7002
  %32 = icmp ult i32 %29, %8, !dbg !7004
  br i1 %32, label %10, label %33, !dbg !7007, !llvm.loop !7026

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7028
  %34 = zext i16 %4 to i32, !dbg !7029
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7030
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !7031
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !7032
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !7000, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !7002
  call void @llvm.dbg.value(metadata i8* %2, metadata !6994, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i32 0, metadata !6998, metadata !DIExpression()), !dbg !7002
  %35 = icmp eq i16 %4, 0, !dbg !7033
  br i1 %35, label %47, label %36, !dbg !7036

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !7037
  call void @llvm.dbg.value(metadata i8* %37, metadata !7000, metadata !DIExpression()), !dbg !7002
  br label %38, !dbg !7036

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !6994, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i8* %40, metadata !7000, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.value(metadata i32 %41, metadata !6998, metadata !DIExpression()), !dbg !7002
  %42 = load volatile i8, i8* %40, align 1, !dbg !7038
  store i8 %42, i8* %39, align 1, !dbg !7040
  %43 = add nuw nsw i32 %41, 1, !dbg !7041
  call void @llvm.dbg.value(metadata i32 %43, metadata !6998, metadata !DIExpression()), !dbg !7002
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !7042
  call void @llvm.dbg.value(metadata i8* %44, metadata !6994, metadata !DIExpression()), !dbg !7002
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !7043
  call void @llvm.dbg.value(metadata i8* %45, metadata !7000, metadata !DIExpression()), !dbg !7002
  %46 = icmp eq i32 %43, %34, !dbg !7033
  br i1 %46, label %47, label %38, !dbg !7036, !llvm.loop !7044

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7046
  ret void, !dbg !7046
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !7047 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !7051, metadata !DIExpression()), !dbg !7059
  call void @llvm.dbg.value(metadata i8* %1, metadata !7052, metadata !DIExpression()), !dbg !7059
  call void @llvm.dbg.value(metadata i32 0, metadata !7053, metadata !DIExpression()), !dbg !7059
  %4 = icmp eq i8* %1, null, !dbg !7060
  br i1 %4, label %67, label %5, !dbg !7062

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7063
  call void @llvm.dbg.value(metadata i32 %27, metadata !7054, metadata !DIExpression()), !dbg !7059
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !7064

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !7059
  call void @llvm.dbg.value(metadata i32 %9, metadata !7053, metadata !DIExpression()), !dbg !7059
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !7065
  %11 = load i8, i8* %10, align 1, !dbg !7065
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !7066

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !7067

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7070
  %15 = and i32 %14, -2, !dbg !7070
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7070
  br label %41, !dbg !7074

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7075
  %18 = and i32 %17, -2, !dbg !7075
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7075
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !7078

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7080
  %22 = or i32 %21, 1, !dbg !7080
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7080
  br label %41, !dbg !7084

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7085
  %25 = or i32 %24, 1, !dbg !7085
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7085
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !7063
  %28 = icmp eq i32 %27, 0, !dbg !7088
  br i1 %7, label %29, label %35, !dbg !7091

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7092
  br i1 %28, label %33, label %31, !dbg !7095

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !7092
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7092
  br label %67, !dbg !7092

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !7092
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7092
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7096
  br i1 %28, label %39, label %37, !dbg !7099

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !7096
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7096
  br label %67, !dbg !7096

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !7096
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7096
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !7100
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !7101
  %44 = load i8, i8* %43, align 1, !dbg !7101
  %45 = icmp eq i8 %44, 5, !dbg !7102
  br i1 %45, label %46, label %56, !dbg !7103

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !7104
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !7105

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !7055, metadata !DIExpression(DW_OP_deref)), !dbg !7106
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !7107
  %50 = load i8, i8* %3, align 1, !dbg !7109
  call void @llvm.dbg.value(metadata i8 %50, metadata !7055, metadata !DIExpression()), !dbg !7106
  %51 = load i8, i8* %48, align 1, !dbg !7110
  %52 = and i8 %51, %50, !dbg !7111
  %53 = icmp eq i8 %52, 0, !dbg !7112
  br i1 %53, label %54, label %49, !dbg !7112, !llvm.loop !7113

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !7115
  %55 = add i32 %9, 1, !dbg !7116
  br label %61, !dbg !7117

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !7118
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !7120
  %59 = load i8, i8* %58, align 1, !dbg !7120
  %60 = zext i8 %59 to i16, !dbg !7120
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #21, !dbg !7121
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !7116
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !7122
  %64 = load i8, i8* %63, align 1, !dbg !7122
  %65 = zext i8 %64 to i32, !dbg !7122
  %66 = add i32 %42, %65, !dbg !7123
  call void @llvm.dbg.value(metadata i32 %66, metadata !7053, metadata !DIExpression()), !dbg !7059
  br label %8, !dbg !7064, !llvm.loop !7124

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !7126
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !7127 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !7131, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.value(metadata i8* %1, metadata !7132, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.value(metadata i8 %2, metadata !7133, metadata !DIExpression()), !dbg !7134
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !7133, metadata !DIExpression(DW_OP_deref)), !dbg !7134
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !7135
  ret void, !dbg !7136
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !7137 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7141, metadata !DIExpression()), !dbg !7143
  call void @llvm.dbg.value(metadata i8* %1, metadata !7142, metadata !DIExpression()), !dbg !7143
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #21, !dbg !7144
  ret void, !dbg !7145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #10 section ".ram_code" !dbg !7146 {
  ret i32 78, !dbg !7150
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #11 section ".ram_code" !dbg !7151 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7155
  %2 = and i32 %1, 7340032, !dbg !7157
  %3 = icmp ult i32 %2, 2097153, !dbg !7158
  %4 = select i1 %3, i32 30, i32 18, !dbg !7159
  ret i32 %4, !dbg !7160
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #17 section ".ram_code" !dbg !7161 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7165, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i32 0, metadata !7166, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i32 0, metadata !7166, metadata !DIExpression()), !dbg !7167
  br label %2, !dbg !7168

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7166, metadata !DIExpression()), !dbg !7167
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7170
  store i8 -1, i8* %4, align 1, !dbg !7173
  %5 = add nuw nsw i32 %3, 1, !dbg !7174
  call void @llvm.dbg.value(metadata i32 %5, metadata !7166, metadata !DIExpression()), !dbg !7167
  %6 = icmp eq i32 %5, 8, !dbg !7175
  br i1 %6, label %7, label %2, !dbg !7168, !llvm.loop !7176

7:                                                ; preds = %2
  ret i1 true, !dbg !7178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !7179 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !7181, metadata !DIExpression()), !dbg !7182
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !7183
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !7184
  %3 = load i8, i8* %2, align 1, !dbg !7184
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !7185
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !7186
  %5 = ptrtoint i8* %4 to i32, !dbg !7187
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !7188
  %6 = bitcast i8* %4 to i32*, !dbg !7189
  %7 = load volatile i32, i32* %6, align 4, !dbg !7190
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !7191
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7192
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !7193
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7194
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !7195
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7196
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !7197
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !7198
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !7199
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7200
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !7201
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7202
  %14 = or i32 %13, 986880, !dbg !7203
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7204
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7205
  %16 = or i32 %15, 252645135, !dbg !7206
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7207
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !7208
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !7209
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !7210
  %20 = load i8, i8* %19, align 1, !dbg !7210
  %21 = zext i8 %20 to i32, !dbg !7211
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #21, !dbg !7212
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !7213
  ret void, !dbg !7214
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !7215 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !7216
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7217
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !7218
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7219
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !7220
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7221
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !7222
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !7223
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !7224
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7225
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7226
  %7 = and i32 %6, -252645136, !dbg !7227
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7228
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !7229
  %9 = zext i8 %8 to i32, !dbg !7229
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #21, !dbg !7230
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !7231
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !7232
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !7234
  %13 = inttoptr i32 %12 to i32*, !dbg !7235
  %14 = load volatile i32, i32* %13, align 4, !dbg !7236
  %15 = icmp eq i32 %11, %14, !dbg !7237
  br i1 %15, label %17, label %16, !dbg !7238

16:                                               ; preds = %0, %16
  br label %16, !dbg !7239, !llvm.loop !7240

17:                                               ; preds = %0
  ret void, !dbg !7242
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !7243 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7244
  %2 = icmp eq i32 %1, 0, !dbg !7246
  br i1 %2, label %3, label %5, !dbg !7247

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7248
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7250
  br label %5, !dbg !7251

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7252
  %7 = icmp eq i32 %6, 0, !dbg !7254
  br i1 %7, label %8, label %10, !dbg !7255

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7256
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7258
  br label %10, !dbg !7259

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7260
  %12 = and i32 %11, -256, !dbg !7261
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7262
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7263
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #20, !dbg !7264
  ret void, !dbg !7265
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !7266 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7267
  %2 = icmp eq i32 %1, 0, !dbg !7269
  br i1 %2, label %4, label %3, !dbg !7270

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7271
  br label %4, !dbg !7273

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7274
  %6 = icmp eq i32 %5, 0, !dbg !7276
  br i1 %6, label %8, label %7, !dbg !7277

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7278
  br label %8, !dbg !7280

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #20, !dbg !7281
  ret void, !dbg !7282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #10 section ".tcm_code" !dbg !7283 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7285, metadata !DIExpression()), !dbg !7286
  ret i32 0, !dbg !7287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #10 section ".ram_code" !dbg !7288 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7290, metadata !DIExpression()), !dbg !7291
  ret i32 0, !dbg !7292
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !7293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7295, metadata !DIExpression()), !dbg !7296
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !7297
  ret void, !dbg !7298
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !7299 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7302
  call void @llvm.dbg.value(metadata i32 %1, metadata !7301, metadata !DIExpression()), !dbg !7303
  ret i32 %1, !dbg !7304
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !7305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7307, metadata !DIExpression()), !dbg !7308
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !7309
  ret void, !dbg !7310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #10 section ".ram_code" !dbg !7311 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !7313, metadata !DIExpression()), !dbg !7314
  ret i32 0, !dbg !7315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #10 section ".ram_code" !dbg !7316 {
  ret i32 0, !dbg !7319
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 section ".ram_code" !dbg !7320 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7324, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.value(metadata i8* %1, metadata !7325, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.value(metadata i32 %2, metadata !7326, metadata !DIExpression()), !dbg !7339
  %4 = ptrtoint i8* %0 to i32, !dbg !7340
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !7341
  %7 = and i32 %6, 3, !dbg !7341
  %8 = icmp eq i32 %7, 0, !dbg !7341
  br i1 %8, label %9, label %26, !dbg !7341

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !7342
  call void @llvm.dbg.value(metadata i32* %10, metadata !7328, metadata !DIExpression()), !dbg !7343
  %11 = bitcast i8* %1 to i32*, !dbg !7344
  call void @llvm.dbg.value(metadata i32* %11, metadata !7331, metadata !DIExpression()), !dbg !7343
  call void @llvm.dbg.value(metadata i32 0, metadata !7327, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.value(metadata i32 0, metadata !7327, metadata !DIExpression()), !dbg !7339
  %12 = icmp ult i32 %2, 4, !dbg !7345
  br i1 %12, label %65, label %13, !dbg !7348

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !7348

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7327, metadata !DIExpression()), !dbg !7339
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !7349
  %18 = load i32, i32* %17, align 4, !dbg !7349
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !7352
  %20 = load i32, i32* %19, align 4, !dbg !7352
  %21 = icmp eq i32 %18, %20, !dbg !7353
  %22 = add nuw nsw i32 %16, 1, !dbg !7354
  call void @llvm.dbg.value(metadata i32 %22, metadata !7327, metadata !DIExpression()), !dbg !7339
  %23 = xor i1 %21, true, !dbg !7355
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !7355
  call void @llvm.dbg.value(metadata i32 %22, metadata !7327, metadata !DIExpression()), !dbg !7339
  br i1 %25, label %59, label %15, !dbg !7355, !llvm.loop !7356

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !7358
  %28 = icmp eq i32 %27, 0, !dbg !7358
  br i1 %28, label %31, label %29, !dbg !7358

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !7327, metadata !DIExpression()), !dbg !7339
  %30 = icmp eq i32 %2, 0, !dbg !7359
  br i1 %30, label %65, label %48, !dbg !7362

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !7363
  call void @llvm.dbg.value(metadata i16* %32, metadata !7332, metadata !DIExpression()), !dbg !7364
  %33 = bitcast i8* %1 to i16*, !dbg !7365
  call void @llvm.dbg.value(metadata i16* %33, metadata !7335, metadata !DIExpression()), !dbg !7364
  call void @llvm.dbg.value(metadata i32 0, metadata !7327, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.value(metadata i32 0, metadata !7327, metadata !DIExpression()), !dbg !7339
  %34 = icmp ult i32 %2, 2, !dbg !7366
  br i1 %34, label %65, label %35, !dbg !7369

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !7369

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !7327, metadata !DIExpression()), !dbg !7339
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !7370
  %40 = load i16, i16* %39, align 2, !dbg !7370
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !7373
  %42 = load i16, i16* %41, align 2, !dbg !7373
  %43 = icmp eq i16 %40, %42, !dbg !7374
  %44 = add nuw nsw i32 %38, 1, !dbg !7375
  call void @llvm.dbg.value(metadata i32 %44, metadata !7327, metadata !DIExpression()), !dbg !7339
  %45 = xor i1 %43, true, !dbg !7376
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !7376
  call void @llvm.dbg.value(metadata i32 %44, metadata !7327, metadata !DIExpression()), !dbg !7339
  br i1 %47, label %61, label %37, !dbg !7376, !llvm.loop !7377

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !7327, metadata !DIExpression()), !dbg !7339
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !7379
  %51 = load i8, i8* %50, align 1, !dbg !7379
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !7382
  %53 = load i8, i8* %52, align 1, !dbg !7382
  %54 = icmp eq i8 %51, %53, !dbg !7383
  %55 = add nuw i32 %49, 1, !dbg !7384
  call void @llvm.dbg.value(metadata i32 %55, metadata !7327, metadata !DIExpression()), !dbg !7339
  %56 = xor i1 %54, true, !dbg !7385
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !7385
  call void @llvm.dbg.value(metadata i32 %55, metadata !7327, metadata !DIExpression()), !dbg !7339
  br i1 %58, label %63, label %48, !dbg !7385, !llvm.loop !7386

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !7388
  br label %65, !dbg !7388

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !7388
  br label %65, !dbg !7388

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !7388
  br label %65, !dbg !7388

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !7339
  ret i1 %66, !dbg !7388
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !7389 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7393, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i8* %1, metadata !7394, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i32 %2, metadata !7395, metadata !DIExpression()), !dbg !7404
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7405
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !7396, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i8* %0, metadata !7397, metadata !DIExpression()), !dbg !7404
  %7 = bitcast i8** %4 to i8*, !dbg !7406
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7406
  call void @llvm.dbg.value(metadata i8* %1, metadata !7398, metadata !DIExpression()), !dbg !7404
  store i8* %1, i8** %4, align 4, !dbg !7407
  call void @llvm.dbg.value(metadata i32 0, metadata !7399, metadata !DIExpression()), !dbg !7404
  %8 = bitcast i32* %5 to i8*, !dbg !7408
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22, !dbg !7408
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7409
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !7410
  store i8 1, i8* %9, align 4, !dbg !7411
  call void @llvm.dbg.value(metadata i32 %2, metadata !7395, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i8* %0, metadata !7397, metadata !DIExpression()), !dbg !7404
  %10 = icmp eq i32 %2, 0, !dbg !7412
  br i1 %10, label %73, label %11, !dbg !7413

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !7414
  call void @llvm.dbg.value(metadata i32 %12, metadata !7397, metadata !DIExpression()), !dbg !7404
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !7413

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !7395, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i32 %20, metadata !7397, metadata !DIExpression()), !dbg !7404
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !7415
  %22 = shl i32 %21, 1, !dbg !7417
  %23 = add i32 %22, -1, !dbg !7418
  %24 = and i32 %23, %20, !dbg !7419
  %25 = sub i32 %22, %24, !dbg !7420
  %26 = icmp ugt i32 %19, %25, !dbg !7421
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !7422
  call void @llvm.dbg.value(metadata i32 %27, metadata !7401, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.value(metadata i32 %27, metadata !7400, metadata !DIExpression()), !dbg !7404
  store i32 %27, i32* %5, align 4, !dbg !7423
  %28 = load i32, i32* %13, align 4, !dbg !7424
  %29 = and i32 %28, 16, !dbg !7426
  %30 = icmp eq i32 %29, 0, !dbg !7426
  br i1 %30, label %31, label %32, !dbg !7427

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #21, !dbg !7428
  br label %32, !dbg !7430

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !7431
  %34 = icmp eq i8 %33, 4, !dbg !7433
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !7434
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !7434
  %37 = load i8, i8* %36, align 1, !dbg !7434
  %38 = zext i8 %37 to i32, !dbg !7434
  br i1 %34, label %39, label %43, !dbg !7435

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !7398, metadata !DIExpression(DW_OP_deref)), !dbg !7404
  call void @llvm.dbg.value(metadata i32* %5, metadata !7400, metadata !DIExpression(DW_OP_deref)), !dbg !7404
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #20, !dbg !7436
  call void @llvm.dbg.value(metadata i32 %40, metadata !7399, metadata !DIExpression()), !dbg !7404
  %41 = load i8*, i8** %4, align 4, !dbg !7438
  call void @llvm.dbg.value(metadata i8* %41, metadata !7398, metadata !DIExpression()), !dbg !7404
  %42 = load i32, i32* %5, align 4, !dbg !7439
  call void @llvm.dbg.value(metadata i32 %42, metadata !7400, metadata !DIExpression()), !dbg !7404
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #20, !dbg !7440
  br label %47, !dbg !7441

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #20, !dbg !7442
  call void @llvm.dbg.value(metadata i32 %44, metadata !7399, metadata !DIExpression()), !dbg !7404
  %45 = load i8*, i8** %4, align 4, !dbg !7444
  call void @llvm.dbg.value(metadata i8* %45, metadata !7398, metadata !DIExpression()), !dbg !7404
  %46 = load i32, i32* %5, align 4, !dbg !7445
  call void @llvm.dbg.value(metadata i32 %46, metadata !7400, metadata !DIExpression()), !dbg !7404
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #20, !dbg !7446
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !7434
  call void @llvm.dbg.value(metadata i32 %48, metadata !7399, metadata !DIExpression()), !dbg !7404
  %49 = call i32 @SaveAndSetIRQMask() #21, !dbg !7447
  call void @llvm.dbg.value(metadata i32 %49, metadata !7403, metadata !DIExpression()), !dbg !7404
  %50 = load i8, i8* %14, align 1, !dbg !7448
  %51 = zext i8 %50 to i32, !dbg !7449
  %52 = add i32 %27, 1, !dbg !7450
  %53 = add i32 %52, %51, !dbg !7451
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7452
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7453
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7454
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !7455
  %54 = load i16, i16* %16, align 2, !dbg !7456
  call void @SFI_MacEnable(i16 noundef zeroext %54) #20, !dbg !7457
  %55 = load i16, i16* %16, align 2, !dbg !7458
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #20, !dbg !7459
  call void @RestoreIRQMask(i32 noundef %49) #21, !dbg !7460
  br label %56, !dbg !7461

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !7462
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !7464
  %59 = load i8, i8* %58, align 1, !dbg !7464
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #21, !dbg !7465
  call void @llvm.dbg.value(metadata i32 %60, metadata !7402, metadata !DIExpression()), !dbg !7404
  %61 = load i8*, i8** %17, align 4, !dbg !7466
  %62 = load i8, i8* %61, align 1, !dbg !7468
  %63 = zext i8 %62 to i32, !dbg !7468
  %64 = and i32 %60, %63, !dbg !7469
  %65 = icmp eq i32 %64, 0, !dbg !7470
  br i1 %65, label %66, label %56, !dbg !7471, !llvm.loop !7472

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !7474
  %67 = load i32, i32* %5, align 4, !dbg !7475
  call void @llvm.dbg.value(metadata i32 %67, metadata !7400, metadata !DIExpression()), !dbg !7404
  %68 = load i8*, i8** %4, align 4, !dbg !7476
  call void @llvm.dbg.value(metadata i8* %68, metadata !7398, metadata !DIExpression()), !dbg !7404
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !7476
  call void @llvm.dbg.value(metadata i8* %69, metadata !7398, metadata !DIExpression()), !dbg !7404
  store i8* %69, i8** %4, align 4, !dbg !7476
  %70 = sub i32 %19, %27, !dbg !7477
  call void @llvm.dbg.value(metadata i32 %70, metadata !7395, metadata !DIExpression()), !dbg !7404
  %71 = add i32 %27, %20, !dbg !7478
  call void @llvm.dbg.value(metadata i32 %71, metadata !7397, metadata !DIExpression()), !dbg !7404
  %72 = icmp eq i32 %70, 0, !dbg !7412
  br i1 %72, label %73, label %18, !dbg !7413, !llvm.loop !7479

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !7481
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7482
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22, !dbg !7483
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7483
  ret void, !dbg !7483
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !7484 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7488, metadata !DIExpression()), !dbg !7490
  br label %2, !dbg !7491

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #21, !dbg !7492
  call void @llvm.dbg.value(metadata i32 %3, metadata !7489, metadata !DIExpression()), !dbg !7490
  %4 = icmp eq i32 %3, 0, !dbg !7494
  br i1 %4, label %5, label %2, !dbg !7495, !llvm.loop !7496

5:                                                ; preds = %2
  ret void, !dbg !7498
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7499 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7501, metadata !DIExpression()), !dbg !7502
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7503
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !7503
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !7504
  %5 = load i8, i8* %4, align 1, !dbg !7504
  %6 = zext i8 %5 to i32, !dbg !7505
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #21, !dbg !7506
  ret void, !dbg !7507
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !7508 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7511
  call void @llvm.dbg.value(metadata i32 %1, metadata !7510, metadata !DIExpression()), !dbg !7512
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !7513
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7514
  ret void, !dbg !7515
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !7516 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7520, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.value(metadata i8 %1, metadata !7521, metadata !DIExpression()), !dbg !7524
  %3 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7525
  call void @llvm.dbg.value(metadata i32 %3, metadata !7522, metadata !DIExpression()), !dbg !7524
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7526
  %5 = load i16, i16* %4, align 2, !dbg !7526
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #20, !dbg !7527
  %6 = zext i8 %1 to i32, !dbg !7528
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7529
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7530
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7531
  %7 = load i16, i16* %4, align 2, !dbg !7532
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #20, !dbg !7533
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7534
  %9 = lshr i32 %8, 8, !dbg !7535
  %10 = and i32 %9, 255, !dbg !7536
  call void @llvm.dbg.value(metadata i32 %10, metadata !7523, metadata !DIExpression()), !dbg !7524
  tail call void @RestoreIRQMask(i32 noundef %3) #21, !dbg !7537
  ret i32 %10, !dbg !7538
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !7539 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7542
  call void @llvm.dbg.value(metadata i32 %1, metadata !7541, metadata !DIExpression()), !dbg !7543
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !7544
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7545
  %3 = and i32 %2, -513, !dbg !7545
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7545
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7548
  ret void, !dbg !7549
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !7550 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7552, metadata !DIExpression()), !dbg !7554
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7555
  call void @llvm.dbg.value(metadata i32 %2, metadata !7553, metadata !DIExpression()), !dbg !7554
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !7556
  br i1 %3, label %4, label %5, !dbg !7558

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !7559
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !7561
  ret void, !dbg !7562

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !7563
  tail call void @Flash_ReturnReady() #21, !dbg !7565
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.115, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0)) #23, !dbg !7565
  unreachable, !dbg !7565
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !7569 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !7571, metadata !DIExpression()), !dbg !7576
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7577
  call void @llvm.dbg.value(metadata i32 %1, metadata !7573, metadata !DIExpression()), !dbg !7576
  %2 = tail call i32 @get_NOR_init_status() #20, !dbg !7578
  %3 = icmp eq i32 %2, 0, !dbg !7580
  br i1 %3, label %4, label %125, !dbg !7581

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !7582
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7583
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !7571, metadata !DIExpression()), !dbg !7576
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !7585
  %7 = load i32, i32* %6, align 4, !dbg !7585
  %8 = xor i32 %7, -1, !dbg !7585
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !7585
  %10 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %9, align 4, !dbg !7585
  %11 = ptrtoint %struct.hal_cache_region_config_t* %10 to i32, !dbg !7585
  %12 = icmp eq i32 %8, %11, !dbg !7585
  br i1 %12, label %14, label %13, !dbg !7588

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !7589
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.115, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0)) #23, !dbg !7589
  unreachable, !dbg !7589

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !7591
  %16 = icmp ult i32 %15, 16, !dbg !7593
  br i1 %16, label %17, label %34, !dbg !7594

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !7595
  %19 = load i8, i8* %18, align 4, !dbg !7595
  %20 = icmp eq i8 %19, 1, !dbg !7596
  br i1 %20, label %21, label %34, !dbg !7597

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !7598

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7600
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !7602
  %27 = load i8, i8* %26, align 1, !dbg !7602
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #21, !dbg !7603
  call void @llvm.dbg.value(metadata i32 %28, metadata !7572, metadata !DIExpression()), !dbg !7576
  %29 = load i8*, i8** %23, align 4, !dbg !7604
  %30 = load i8, i8* %29, align 1, !dbg !7606
  %31 = zext i8 %30 to i32, !dbg !7606
  %32 = and i32 %28, %31, !dbg !7607
  %33 = icmp eq i32 %32, 0, !dbg !7608
  br i1 %33, label %34, label %24, !dbg !7609, !llvm.loop !7610

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7612, !range !2630
  %36 = icmp ne i8 %35, 0, !dbg !7612
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !7614
  br i1 %39, label %116, label %40, !dbg !7614

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !7615
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7615
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !7617
  %44 = load i8, i8* %43, align 1, !dbg !7617
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #21, !dbg !7618
  call void @llvm.dbg.value(metadata i32 %45, metadata !7572, metadata !DIExpression()), !dbg !7576
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !7619
  %47 = load i8*, i8** %46, align 4, !dbg !7619
  %48 = load i8, i8* %47, align 1, !dbg !7621
  %49 = zext i8 %48 to i32, !dbg !7621
  %50 = and i32 %45, %49, !dbg !7622
  %51 = icmp eq i32 %50, 0, !dbg !7623
  br i1 %51, label %85, label %52, !dbg !7624

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #21, !dbg !7625
  br label %53, !dbg !7627

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7628
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !7630
  %56 = load i8, i8* %55, align 1, !dbg !7630
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #21, !dbg !7631
  call void @llvm.dbg.value(metadata i32 %57, metadata !7572, metadata !DIExpression()), !dbg !7576
  %58 = load i8*, i8** %46, align 4, !dbg !7632
  %59 = load i8, i8* %58, align 1, !dbg !7634
  %60 = zext i8 %59 to i32, !dbg !7634
  %61 = and i32 %57, %60, !dbg !7635
  %62 = icmp eq i32 %61, 0, !dbg !7636
  br i1 %62, label %63, label %53, !dbg !7637, !llvm.loop !7638

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !7640
  %65 = load i32, i32* %64, align 4, !dbg !7640
  %66 = and i32 %65, 4, !dbg !7642
  %67 = icmp eq i32 %66, 0, !dbg !7642
  br i1 %67, label %84, label %68, !dbg !7643

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !7644
  %70 = load i8, i8* %69, align 4, !dbg !7644
  %71 = icmp eq i8 %70, 2, !dbg !7645
  br i1 %71, label %72, label %84, !dbg !7646

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7647
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7649
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7650
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !7651
  %74 = load i16, i16* %73, align 2, !dbg !7651
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #20, !dbg !7652
  %75 = load i16, i16* %73, align 2, !dbg !7653
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #20, !dbg !7654
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !7655
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7656
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7657
  %76 = load i16, i16* %73, align 2, !dbg !7658
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #20, !dbg !7659
  %77 = load i16, i16* %73, align 2, !dbg !7660
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #20, !dbg !7661
  br label %78, !dbg !7662

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7663
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7665
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7666
  %79 = load i16, i16* %73, align 2, !dbg !7667
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #20, !dbg !7668
  %80 = load i16, i16* %73, align 2, !dbg !7669
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #20, !dbg !7670
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7671
  call void @llvm.dbg.value(metadata i32 %81, metadata !7572, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !7576
  %82 = and i32 %81, 256, !dbg !7672
  %83 = icmp eq i32 %82, 0, !dbg !7672
  br i1 %83, label %84, label %78, !dbg !7672, !llvm.loop !7673

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !7675
  br label %116, !dbg !7676

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !7677
  %87 = load i32, i32* %86, align 4, !dbg !7677
  %88 = and i32 %87, 2, !dbg !7680
  %89 = icmp eq i32 %88, 0, !dbg !7680
  br i1 %89, label %115, label %90, !dbg !7681

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !7682
  %92 = load %struct.anon.9*, %struct.anon.9** %91, align 4, !dbg !7682
  %93 = icmp eq %struct.anon.9* %92, null, !dbg !7683
  br i1 %93, label %94, label %115, !dbg !7684

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7685
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !7687
  %97 = load i8, i8* %96, align 1, !dbg !7687
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #21, !dbg !7688
  call void @llvm.dbg.value(metadata i32 %98, metadata !7572, metadata !DIExpression()), !dbg !7576
  %99 = load i8*, i8** %46, align 4, !dbg !7689
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !7691
  %101 = load i8, i8* %100, align 1, !dbg !7691
  %102 = zext i8 %101 to i32, !dbg !7691
  %103 = and i32 %98, %102, !dbg !7692
  %104 = icmp eq i32 %103, 0, !dbg !7693
  br i1 %104, label %105, label %115, !dbg !7694

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !7695
  %107 = load i8, i8* %106, align 1, !dbg !7695
  %108 = zext i8 %107 to i32, !dbg !7695
  %109 = and i32 %98, %108, !dbg !7696
  %110 = icmp eq i32 %109, 0, !dbg !7697
  br i1 %110, label %111, label %115, !dbg !7698

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !7699
  %113 = load i16, i16* %112, align 2, !dbg !7699
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #20, !dbg !7701
  %114 = load i16, i16* %112, align 2, !dbg !7702
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #20, !dbg !7703
  br label %115, !dbg !7704

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !7705
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !7706
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !7707
  %118 = sub i32 0, %117, !dbg !7707
  call void @llvm.dbg.value(metadata i32 %118, metadata !7574, metadata !DIExpression()), !dbg !7708
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !7709
  %120 = icmp ult i32 %119, %118, !dbg !7711
  br i1 %120, label %121, label %122, !dbg !7712

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !7713
  br label %122, !dbg !7715

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7716
  %124 = and i32 %123, -513, !dbg !7716
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7716
  br label %125, !dbg !7719

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7576
  ret void, !dbg !7720
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7721 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7723, metadata !DIExpression()), !dbg !7727
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !7728
  %3 = icmp eq i32 %2, -1, !dbg !7730
  br i1 %3, label %12, label %4, !dbg !7731

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !7725, metadata !DIExpression()), !dbg !7727
  %5 = sub i32 0, %2, !dbg !7732
  call void @llvm.dbg.value(metadata i32 %5, metadata !7726, metadata !DIExpression()), !dbg !7727
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !7734
  %7 = load i8, i8* %6, align 4, !dbg !7734
  %8 = zext i8 %7 to i32, !dbg !7736
  %9 = icmp ugt i32 %8, %5, !dbg !7737
  br i1 %9, label %10, label %12, !dbg !7738

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !7739
  tail call void @DelayAWhile_UST(i32 noundef %11) #20, !dbg !7741
  br label %12, !dbg !7742

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7743
  call void @llvm.dbg.value(metadata i32 %13, metadata !7724, metadata !DIExpression()), !dbg !7727
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7744
  %15 = load i16, i16* %14, align 2, !dbg !7744
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7745
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !7745
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !7746
  %19 = load i8, i8* %18, align 1, !dbg !7746
  %20 = zext i8 %19 to i32, !dbg !7747
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #20, !dbg !7748
  tail call void @RestoreIRQMask(i32 noundef %13) #21, !dbg !7749
  ret void, !dbg !7750
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !7751 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7754
  call void @llvm.dbg.value(metadata i32 %1, metadata !7753, metadata !DIExpression()), !dbg !7755
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7756
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7757
  %3 = and i32 %2, -513, !dbg !7757
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7757
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7760
  ret void, !dbg !7761
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !7762 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7766, metadata !DIExpression()), !dbg !7770
  call void @llvm.dbg.value(metadata i32 %1, metadata !7767, metadata !DIExpression()), !dbg !7770
  call void @llvm.dbg.value(metadata i8 %2, metadata !7768, metadata !DIExpression()), !dbg !7770
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7771
  call void @llvm.dbg.value(metadata i32 %4, metadata !7769, metadata !DIExpression()), !dbg !7770
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7772
  %6 = load i16, i16* %5, align 2, !dbg !7772
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #20, !dbg !7773
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7774
  %7 = zext i8 %2 to i32, !dbg !7775
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7776
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7777
  %8 = load i16, i16* %5, align 2, !dbg !7778
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #20, !dbg !7779
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !7780
  ret void, !dbg !7781
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !7782 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7787
  call void @llvm.dbg.value(metadata i32 %1, metadata !7786, metadata !DIExpression()), !dbg !7788
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !7789
  br i1 %2, label %4, label %3, !dbg !7791

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !7792
  br label %4, !dbg !7794

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !7795
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7795
  ret i32 %5, !dbg !7796
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !7797 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7804
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7801, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i8 0, metadata !7803, metadata !DIExpression()), !dbg !7805
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !7806
  %3 = load i32, i32* %2, align 4, !dbg !7806
  %4 = xor i32 %3, -1, !dbg !7806
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !7806
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %5, align 4, !dbg !7806
  %7 = ptrtoint %struct.hal_cache_region_config_t* %6 to i32, !dbg !7806
  %8 = icmp eq i32 %4, %7, !dbg !7806
  br i1 %8, label %10, label %9, !dbg !7809

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !7810
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.115, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0)) #23, !dbg !7810
  unreachable, !dbg !7810

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7812
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7813
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7813
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !7814
  %14 = load i8, i8* %13, align 1, !dbg !7814
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #21, !dbg !7815
  call void @llvm.dbg.value(metadata i32 %15, metadata !7802, metadata !DIExpression()), !dbg !7805
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !7816
  %17 = load i8*, i8** %16, align 4, !dbg !7816
  %18 = load i8, i8* %17, align 1, !dbg !7818
  %19 = zext i8 %18 to i32, !dbg !7818
  %20 = and i32 %15, %19, !dbg !7819
  %21 = icmp eq i32 %20, 0, !dbg !7820
  br i1 %21, label %22, label %23, !dbg !7821

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !7822
  call void @llvm.dbg.value(metadata i8 1, metadata !7803, metadata !DIExpression()), !dbg !7805
  br label %23, !dbg !7824

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !7803, metadata !DIExpression()), !dbg !7805
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7825
  ret i1 %21, !dbg !7826
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !7827 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7829, metadata !DIExpression()), !dbg !7830
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !7831, !range !2630
  %2 = icmp eq i8 %1, 0, !dbg !7831
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7831
  %4 = icmp eq i8 %3, 0, !dbg !7831
  %5 = select i1 %2, i1 true, i1 %4, !dbg !7831
  br i1 %5, label %6, label %7, !dbg !7831

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !7834
  tail call void @Flash_ReturnReady() #21, !dbg !7836
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.115, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0)) #23, !dbg !7836
  unreachable, !dbg !7836

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7840
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !7829, metadata !DIExpression()), !dbg !7830
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #21, !dbg !7841
  ret void, !dbg !7842
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7843 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7845, metadata !DIExpression()), !dbg !7847
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7848
  call void @llvm.dbg.value(metadata i32 %2, metadata !7846, metadata !DIExpression()), !dbg !7847
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7849
  %4 = load i16, i16* %3, align 2, !dbg !7849
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7850
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !7850
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !7851
  %8 = load i8, i8* %7, align 1, !dbg !7851
  %9 = zext i8 %8 to i32, !dbg !7852
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #20, !dbg !7853
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !7854
  %11 = load i8, i8* %10, align 4, !dbg !7854
  %12 = icmp eq i8 %11, 0, !dbg !7856
  br i1 %12, label %14, label %13, !dbg !7857

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !7858
  br label %14, !dbg !7860

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !7861
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !7862
  ret void, !dbg !7863
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !7864 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7867
  call void @llvm.dbg.value(metadata i32 %1, metadata !7866, metadata !DIExpression()), !dbg !7868
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7869
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7870
  ret void, !dbg !7871
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !7872 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7876
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7874, metadata !DIExpression()), !dbg !7877
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !7878, !range !2630
  %3 = icmp ne i8 %2, 0, !dbg !7878
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7878
  %5 = icmp eq i8 %4, 0, !dbg !7878
  %6 = select i1 %3, i1 %5, i1 false, !dbg !7878
  br i1 %6, label %8, label %7, !dbg !7878

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !7881
  tail call void @Flash_ReturnReady() #21, !dbg !7883
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.115, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0)) #23, !dbg !7883
  unreachable, !dbg !7883

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !7887
  %10 = load i32, i32* %9, align 4, !dbg !7887
  %11 = xor i32 %10, -1, !dbg !7887
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !7887
  %13 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %12, align 4, !dbg !7887
  %14 = ptrtoint %struct.hal_cache_region_config_t* %13 to i32, !dbg !7887
  %15 = icmp eq i32 %11, %14, !dbg !7887
  br i1 %15, label %17, label %16, !dbg !7890

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #21, !dbg !7891
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.115, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0)) #23, !dbg !7891
  unreachable, !dbg !7891

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !7893
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !7894

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !7895
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !7897
  %23 = load i8, i8* %22, align 1, !dbg !7897
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #21, !dbg !7898
  call void @llvm.dbg.value(metadata i32 %24, metadata !7875, metadata !DIExpression()), !dbg !7877
  %25 = load i8*, i8** %19, align 4, !dbg !7899
  %26 = load i8, i8* %25, align 1, !dbg !7901
  %27 = zext i8 %26 to i32, !dbg !7901
  %28 = and i32 %24, %27, !dbg !7902
  %29 = icmp eq i32 %28, 0, !dbg !7903
  br i1 %29, label %30, label %20, !dbg !7904, !llvm.loop !7905

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !7907
  ret void, !dbg !7908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #10 section ".ram_code" !dbg !7909 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7911, metadata !DIExpression()), !dbg !7912
  ret void, !dbg !7913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !7914 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !7937, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7938, metadata !DIExpression()), !dbg !7940
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !7941
  %4 = load i8*, i8** %3, align 4, !dbg !7941
  call void @llvm.dbg.value(metadata i8* %4, metadata !7939, metadata !DIExpression()), !dbg !7940
  store i8 1, i8* %4, align 1, !dbg !7942
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !7943
  store i8 2, i8* %5, align 1, !dbg !7944
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !7945
  store i8 8, i8* %6, align 1, !dbg !7946
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !7947
  store i8 4, i8* %7, align 1, !dbg !7948
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !7949
  store i8 60, i8* %8, align 1, !dbg !7950
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !7951
  store i8 -128, i8* %9, align 1, !dbg !7952
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !7953
  store i8 96, i8* %10, align 1, !dbg !7954
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7955
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7955
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !7956
  store i8 43, i8* %13, align 1, !dbg !7957
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7958
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !7959
  store i8 43, i8* %15, align 1, !dbg !7960
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7961
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !7962
  store i8 47, i8* %17, align 1, !dbg !7963
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7964
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !7965
  store i8 5, i8* %19, align 1, !dbg !7966
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7967
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !7968
  store i8 1, i8* %21, align 1, !dbg !7969
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7970
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !7971
  store i8 43, i8* %23, align 1, !dbg !7972
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !7973
  store i8 22, i8* %24, align 4, !dbg !7974
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !7975
  %26 = load i8, i8* %25, align 1, !dbg !7975
  %27 = icmp eq i8 %26, 32, !dbg !7977
  br i1 %27, label %28, label %49, !dbg !7978

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !7979
  %30 = load i8, i8* %29, align 1, !dbg !7979
  %31 = icmp eq i8 %30, 24, !dbg !7980
  br i1 %31, label %32, label %41, !dbg !7981

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7982
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !7984
  store i8 117, i8* %34, align 1, !dbg !7985
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7986
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !7987
  store i8 122, i8* %36, align 1, !dbg !7988
  %37 = load i8, i8* %25, align 1, !dbg !7989
  %38 = icmp eq i8 %37, 32, !dbg !7991
  br i1 %38, label %39, label %49, !dbg !7992

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !7994
  br label %41, !dbg !7994

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !7994
  %43 = icmp eq i8 %42, 22, !dbg !7995
  br i1 %43, label %44, label %49, !dbg !7996

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7997
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !7999
  store i8 117, i8* %46, align 1, !dbg !8000
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8001
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !8002
  store i8 122, i8* %48, align 1, !dbg !8003
  br label %49, !dbg !8004

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !8005
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !8006
  ret i32 0, !dbg !8007
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !8008 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8010, metadata !DIExpression()), !dbg !8014
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8015
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8011, metadata !DIExpression()), !dbg !8014
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8016
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !8017
  %5 = load i8, i8* %4, align 1, !dbg !8019
  %6 = icmp eq i8 %5, -62, !dbg !8020
  br i1 %6, label %7, label %15, !dbg !8021

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !8022
  %9 = load i8, i8* %8, align 1, !dbg !8022
  %10 = icmp eq i8 %9, 32, !dbg !8023
  br i1 %10, label %11, label %15, !dbg !8024

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !8025
  %13 = load i8, i8* %12, align 1, !dbg !8025
  %14 = icmp eq i8 %13, 22, !dbg !8026
  br i1 %14, label %48, label %15, !dbg !8027

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !8028
  %17 = bitcast i8* %16 to i16*, !dbg !8028
  %18 = load i16, i16* %17, align 2, !dbg !8028
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8029
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !8029
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8029
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !8030
  %23 = load i8, i8* %22, align 1, !dbg !8030
  %24 = zext i8 %23 to i32, !dbg !8031
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #20, !dbg !8032
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8033
  %25 = load i16, i16* %17, align 2, !dbg !8034
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8035
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !8036
  call void @llvm.dbg.value(metadata i8* %2, metadata !8013, metadata !DIExpression(DW_OP_deref)), !dbg !8014
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !8037
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8038
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !8039
  %30 = load i8, i8* %29, align 1, !dbg !8039
  %31 = zext i8 %30 to i32, !dbg !8040
  call void @llvm.dbg.value(metadata i32 %31, metadata !8012, metadata !DIExpression()), !dbg !8014
  %32 = shl nuw nsw i32 %31, 8, !dbg !8041
  %33 = load i8, i8* %2, align 1, !dbg !8042
  call void @llvm.dbg.value(metadata i8 %33, metadata !8013, metadata !DIExpression()), !dbg !8014
  %34 = zext i8 %33 to i32, !dbg !8042
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8043
  %36 = bitcast i8* %35 to i8**, !dbg !8043
  %37 = load i8*, i8** %36, align 4, !dbg !8043
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !8044
  %39 = load i8, i8* %38, align 1, !dbg !8044
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !8045
  %41 = load i8, i8* %40, align 1, !dbg !8045
  %42 = or i8 %41, %39, !dbg !8046
  %43 = zext i8 %42 to i32, !dbg !8046
  %44 = xor i32 %43, -1, !dbg !8047
  %45 = and i32 %44, %34, !dbg !8048
  %46 = or i32 %45, %32, !dbg !8049
  call void @llvm.dbg.value(metadata i32 %46, metadata !8012, metadata !DIExpression()), !dbg !8014
  %47 = load i16, i16* %17, align 2, !dbg !8050
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #20, !dbg !8051
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8052
  br label %48, !dbg !8053

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8054
  ret i32 0, !dbg !8054
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8055 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8057, metadata !DIExpression()), !dbg !8059
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8060
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !8061

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !8062
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !8064
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !8065
  call void @llvm.dbg.value(metadata i8* %2, metadata !8058, metadata !DIExpression(DW_OP_deref)), !dbg !8059
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !8066
  %10 = load i8, i8* %2, align 1, !dbg !8067
  call void @llvm.dbg.value(metadata i8 %10, metadata !8058, metadata !DIExpression()), !dbg !8059
  %11 = load i8*, i8** %5, align 4, !dbg !8068
  %12 = load i8, i8* %11, align 1, !dbg !8069
  %13 = and i8 %12, %10, !dbg !8070
  %14 = icmp eq i8 %13, 0, !dbg !8071
  br i1 %14, label %15, label %6, !dbg !8072, !llvm.loop !8073

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8075
  ret void, !dbg !8075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !8076 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8078, metadata !DIExpression()), !dbg !8081
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8079, metadata !DIExpression()), !dbg !8081
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8082
  %4 = load i8*, i8** %3, align 4, !dbg !8082
  call void @llvm.dbg.value(metadata i8* %4, metadata !8080, metadata !DIExpression()), !dbg !8081
  store i8 1, i8* %4, align 1, !dbg !8083
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !8084
  store i8 2, i8* %5, align 1, !dbg !8085
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !8086
  store i8 -128, i8* %6, align 1, !dbg !8087
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !8088
  store i8 -128, i8* %7, align 1, !dbg !8089
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !8090
  store i8 60, i8* %8, align 1, !dbg !8091
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !8092
  store i8 -128, i8* %9, align 1, !dbg !8093
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8094
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8094
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !8095
  store i8 -97, i8* %12, align 1, !dbg !8096
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8097
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !8098
  store i8 53, i8* %14, align 1, !dbg !8099
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8100
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !8101
  store i8 53, i8* %16, align 1, !dbg !8102
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8103
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !8104
  store i8 5, i8* %18, align 1, !dbg !8105
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8106
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !8107
  store i8 1, i8* %20, align 1, !dbg !8108
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8109
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !8110
  store i8 117, i8* %22, align 1, !dbg !8111
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8112
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !8113
  store i8 122, i8* %24, align 1, !dbg !8114
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8115
  store i8 22, i8* %25, align 4, !dbg !8116
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !8117
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !8118
  ret i32 0, !dbg !8119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #10 !dbg !8120 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8122, metadata !DIExpression()), !dbg !8124
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8123, metadata !DIExpression()), !dbg !8124
  ret i32 0, !dbg !8125
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !8126 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !8128, metadata !DIExpression()), !dbg !8130
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8129, metadata !DIExpression()), !dbg !8130
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !8131
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !8132
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !8133
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !8134
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !8135
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !8136
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !8137
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !8138
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !8139
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !8140
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !8141
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !8142
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !8143
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !8144
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !8145
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !8146
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !8147
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !8148
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !8149
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !8150
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !8151
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !8152
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !8153
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !8154
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !8155
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !8156
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !8157
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !8158
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !8159
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !8160
  %18 = tail call i32 @custom_get_NORFLASH_Size() #20, !dbg !8161
  %19 = icmp ugt i32 %18, 16777216, !dbg !8163
  %20 = select i1 %19, i8 4, i8 3, !dbg !8164
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !8165
  store i8 %20, i8* %21, align 1, !dbg !8167
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8168
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8168
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !8169
  store i8 0, i8* %24, align 1, !dbg !8170
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8171
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !8172
  store i8 -81, i8* %26, align 1, !dbg !8173
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8174
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !8175
  store i8 -97, i8* %28, align 1, !dbg !8176
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8177
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !8178
  store i8 2, i8* %30, align 1, !dbg !8179
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8180
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !8181
  store i8 32, i8* %32, align 1, !dbg !8182
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8183
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !8184
  store i8 82, i8* %34, align 1, !dbg !8185
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8186
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !8187
  store i8 -40, i8* %36, align 1, !dbg !8188
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8189
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !8190
  store i8 -80, i8* %38, align 1, !dbg !8191
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8192
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !8193
  store i8 48, i8* %40, align 1, !dbg !8194
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8195
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !8196
  store i8 6, i8* %42, align 1, !dbg !8197
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8198
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !8199
  store i8 -71, i8* %44, align 1, !dbg !8200
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8201
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !8202
  store i8 -85, i8* %46, align 1, !dbg !8203
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8204
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !8205
  store i8 5, i8* %48, align 1, !dbg !8206
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !8207
  store i16 0, i16* %49, align 4, !dbg !8208
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !8209
  store %struct.anon.9* null, %struct.anon.9** %50, align 4, !dbg !8210
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !8211
  store %struct.anon.9* null, %struct.anon.9** %51, align 4, !dbg !8212
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !8213
  store i8 0, i8* %52, align 4, !dbg !8214
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8215
  store i8 5, i8* %53, align 4, !dbg !8216
  ret i32 0, !dbg !8217
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !8218 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8220, metadata !DIExpression()), !dbg !8238
  call void @llvm.dbg.value(metadata i8* %1, metadata !8221, metadata !DIExpression()), !dbg !8238
  call void @llvm.dbg.value(metadata i8* %1, metadata !8222, metadata !DIExpression()), !dbg !8238
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8239
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8235, metadata !DIExpression()), !dbg !8238
  call void @llvm.dbg.value(metadata i32 0, metadata !8236, metadata !DIExpression()), !dbg !8238
  %4 = bitcast i8* %1 to i32*, !dbg !8240
  store i32 0, i32* %4, align 4, !dbg !8241
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.hal_cache_region_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !8236, metadata !DIExpression()), !dbg !8238
  %7 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8242
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %7, i32 0, i32 0, !dbg !8243
  %9 = load i32, i32* %8, align 4, !dbg !8243
  %10 = icmp eq i32 %9, 0, !dbg !8244
  br i1 %10, label %34, label %11, !dbg !8245

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !8245

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !8236, metadata !DIExpression()), !dbg !8238
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !8246
  store i32 %17, i32* %19, align 4, !dbg !8248
  %20 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8249
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %20, i32 %18, i32 1, !dbg !8250
  %22 = load i32, i32* %21, align 4, !dbg !8250
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !8251
  store i32 %22, i32* %23, align 4, !dbg !8252
  %24 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8253
  %25 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %24, i32 %18, i32 1, !dbg !8254
  %26 = load i32, i32* %25, align 4, !dbg !8254
  %27 = load i32, i32* %4, align 4, !dbg !8255
  %28 = add i32 %27, %26, !dbg !8255
  store i32 %28, i32* %4, align 4, !dbg !8255
  %29 = add i32 %18, 1, !dbg !8256
  call void @llvm.dbg.value(metadata i32 %29, metadata !8236, metadata !DIExpression()), !dbg !8238
  %30 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8242
  %31 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %30, i32 %29, i32 0, !dbg !8243
  %32 = load i32, i32* %31, align 4, !dbg !8243
  %33 = icmp eq i32 %32, 0, !dbg !8244
  br i1 %33, label %34, label %16, !dbg !8245, !llvm.loop !8257

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !8238
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !8259
  %37 = bitcast i8* %36 to i32*, !dbg !8259
  store i32 %35, i32* %37, align 4, !dbg !8260
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !8261
  %39 = bitcast i8* %38 to i16*, !dbg !8261
  store i16 512, i16* %39, align 4, !dbg !8262
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8263
  br label %40, !dbg !8264

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8265
  call void @llvm.dbg.value(metadata i32 %41, metadata !8237, metadata !DIExpression()), !dbg !8238
  %42 = icmp eq i32 %41, -121, !dbg !8267
  br i1 %42, label %40, label %43, !dbg !8268, !llvm.loop !8269

43:                                               ; preds = %40
  ret i32 0, !dbg !8271
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !8272 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8274, metadata !DIExpression()), !dbg !8278
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8279
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !8275, metadata !DIExpression()), !dbg !8278
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8280
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !8281

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8282
  call void @llvm.dbg.value(metadata i32 %8, metadata !8277, metadata !DIExpression()), !dbg !8278
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8284, !range !2630
  %10 = icmp eq i8 %9, 0, !dbg !8284
  br i1 %10, label %12, label %11, !dbg !8286

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #21, !dbg !8287
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8289
  br label %12, !dbg !8290

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !8291
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !8292
  %15 = load i8, i8* %14, align 1, !dbg !8292
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #21, !dbg !8293
  call void @llvm.dbg.value(metadata i32 %16, metadata !8276, metadata !DIExpression()), !dbg !8278
  %17 = load i8*, i8** %6, align 4, !dbg !8294
  %18 = load i8, i8* %17, align 1, !dbg !8296
  %19 = zext i8 %18 to i32, !dbg !8296
  %20 = and i32 %16, %19, !dbg !8297
  %21 = icmp eq i32 %20, 0, !dbg !8298
  br i1 %21, label %22, label %25, !dbg !8299

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8300
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !8302
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8303
  %24 = bitcast i8* %23 to i8**, !dbg !8303
  store i8* null, i8** %24, align 4, !dbg !8304
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8305
  ret i32 0, !dbg !8306

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !8307
  br label %7, !dbg !8281, !llvm.loop !8309
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !8311 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8313, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32 %1, metadata !8314, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32 0, metadata !8315, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32 1, metadata !8319, metadata !DIExpression()), !dbg !8327
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8328
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8320, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32 0, metadata !8321, metadata !DIExpression()), !dbg !8327
  %4 = bitcast i8* %0 to i32*, !dbg !8329
  %5 = load i32, i32* %4, align 4, !dbg !8329
  %6 = xor i32 %5, -1, !dbg !8329
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8329
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !8329
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !8329
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !8329
  %11 = icmp eq i32 %6, %10, !dbg !8329
  br i1 %11, label %13, label %12, !dbg !8332

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !8333
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.115, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0)) #23, !dbg !8333
  unreachable, !dbg !8333

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8335
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !8336
  store i8 2, i8* %14, align 4, !dbg !8337
  call void @llvm.dbg.value(metadata i32 %19, metadata !8321, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32 %1, metadata !8314, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !8327
  br label %15, !dbg !8338

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8339
  call void @llvm.dbg.value(metadata i32 %16, metadata !8315, metadata !DIExpression()), !dbg !8327
  %17 = icmp eq i32 %16, -121, !dbg !8341
  br i1 %17, label %15, label %18, !dbg !8342, !llvm.loop !8343

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !8345
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8346
  %21 = bitcast i8* %20 to i8**, !dbg !8346
  %22 = load i8*, i8** %21, align 4, !dbg !8346
  %23 = ptrtoint i8* %22 to i32, !dbg !8347
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #20, !dbg !8348
  call void @llvm.dbg.value(metadata i32 %24, metadata !8316, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32 %24, metadata !8317, metadata !DIExpression()), !dbg !8327
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !8349
  %26 = bitcast i8* %25 to i16*, !dbg !8349
  %27 = load i16, i16* %26, align 2, !dbg !8349
  %28 = zext i16 %27 to i32, !dbg !8350
  call void @llvm.dbg.value(metadata i32 %28, metadata !8322, metadata !DIExpression()), !dbg !8351
  %29 = lshr i32 %24, 10, !dbg !8352
  call void @llvm.dbg.value(metadata i32 %29, metadata !8325, metadata !DIExpression()), !dbg !8351
  %30 = and i32 %29, %28, !dbg !8353
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !8355
  %33 = icmp eq i32 %32, 0, !dbg !8355
  call void @llvm.dbg.value(metadata i32 0, metadata !8326, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 %29, metadata !8325, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 %28, metadata !8322, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 1, metadata !8319, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32 %24, metadata !8317, metadata !DIExpression()), !dbg !8327
  br i1 %33, label %34, label %51, !dbg !8355

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !8326, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 %36, metadata !8325, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 %37, metadata !8322, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.value(metadata i32 %38, metadata !8319, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32 %39, metadata !8317, metadata !DIExpression()), !dbg !8327
  %40 = and i32 %37, 1, !dbg !8356
  %41 = icmp eq i32 %40, 0, !dbg !8356
  %42 = add i32 %35, 10, !dbg !8362
  %43 = shl nuw i32 1, %42, !dbg !8362
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !8362
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !8362
  call void @llvm.dbg.value(metadata i32 %45, metadata !8319, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32 %44, metadata !8317, metadata !DIExpression()), !dbg !8327
  %46 = lshr i32 %37, 1, !dbg !8363
  call void @llvm.dbg.value(metadata i32 %46, metadata !8322, metadata !DIExpression()), !dbg !8351
  %47 = lshr i32 %36, 1, !dbg !8364
  call void @llvm.dbg.value(metadata i32 %47, metadata !8325, metadata !DIExpression()), !dbg !8351
  %48 = add i32 %35, 1, !dbg !8365
  call void @llvm.dbg.value(metadata i32 %48, metadata !8326, metadata !DIExpression()), !dbg !8351
  %49 = and i32 %36, 2, !dbg !8366
  %50 = icmp eq i32 %49, 0, !dbg !8366
  br i1 %50, label %34, label %51, !dbg !8367, !llvm.loop !8368

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !8370
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !8371
  call void @llvm.dbg.value(metadata i32 %53, metadata !8319, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32 %52, metadata !8317, metadata !DIExpression()), !dbg !8327
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !8372

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8373
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !8373
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !8373
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !8375
  br label %70, !dbg !8376

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8377
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !8377
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !8377
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !8378
  br label %70, !dbg !8379

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8380
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !8380
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !8380
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !8381
  br label %70, !dbg !8382

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #21, !dbg !8383
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.115, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0)) #23, !dbg !8383
  unreachable, !dbg !8383

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !8387
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !8387
  store i8 %73, i8* %74, align 1, !dbg !8387
  call void @llvm.dbg.value(metadata i32 %53, metadata !8319, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32 %52, metadata !8317, metadata !DIExpression()), !dbg !8327
  %75 = trunc i32 %19 to i8, !dbg !8388
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !8388

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8389
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !8389
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !8389
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !8391
  br label %91, !dbg !8392

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8393
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !8393
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !8393
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !8394
  br label %91, !dbg !8395

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8396
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !8396
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !8396
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !8397
  br label %91, !dbg !8398

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !8399
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !8399
  store i8 %94, i8* %95, align 1, !dbg !8399
  br label %96, !dbg !8400

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !8318, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32 %53, metadata !8319, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32 %16, metadata !8315, metadata !DIExpression()), !dbg !8327
  %97 = icmp eq i32 %53, 0, !dbg !8400
  br i1 %97, label %111, label %98, !dbg !8403

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !8404
  call void @llvm.dbg.value(metadata i8* %99, metadata !8318, metadata !DIExpression()), !dbg !8327
  %100 = ptrtoint i8* %99 to i32, !dbg !8405
  call void @llvm.dbg.value(metadata i32 %100, metadata !8318, metadata !DIExpression()), !dbg !8327
  br label %101, !dbg !8403

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !8319, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32 %103, metadata !8318, metadata !DIExpression()), !dbg !8327
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #21, !dbg !8406
  br label %104, !dbg !8408

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8409
  call void @llvm.dbg.value(metadata i32 %105, metadata !8315, metadata !DIExpression()), !dbg !8327
  %106 = icmp eq i32 %105, -121, !dbg !8411
  br i1 %106, label %104, label %107, !dbg !8413, !llvm.loop !8414

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !8416
  call void @llvm.dbg.value(metadata i32 %108, metadata !8319, metadata !DIExpression()), !dbg !8327
  %109 = add i32 %103, %52, !dbg !8417
  call void @llvm.dbg.value(metadata i32 %109, metadata !8318, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.value(metadata i32 %105, metadata !8315, metadata !DIExpression()), !dbg !8327
  %110 = icmp eq i32 %108, 0, !dbg !8400
  br i1 %110, label %111, label %101, !dbg !8403, !llvm.loop !8418

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !8327
  store i8 0, i8* %14, align 4, !dbg !8420
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8421
  ret i32 %112, !dbg !8422
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !8423 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8425, metadata !DIExpression()), !dbg !8442
  call void @llvm.dbg.value(metadata i8* %1, metadata !8426, metadata !DIExpression()), !dbg !8442
  call void @llvm.dbg.value(metadata i8* %2, metadata !8427, metadata !DIExpression()), !dbg !8442
  call void @llvm.dbg.value(metadata i32 %3, metadata !8428, metadata !DIExpression()), !dbg !8442
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8443
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !8429, metadata !DIExpression()), !dbg !8442
  %8 = ptrtoint i8* %1 to i32, !dbg !8444
  call void @llvm.dbg.value(metadata i32 %8, metadata !8431, metadata !DIExpression()), !dbg !8442
  %9 = bitcast i8** %5 to i8*, !dbg !8445
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #22, !dbg !8445
  call void @llvm.dbg.value(metadata i8* %2, metadata !8432, metadata !DIExpression()), !dbg !8442
  store i8* %2, i8** %5, align 4, !dbg !8446
  call void @llvm.dbg.value(metadata i32 0, metadata !8434, metadata !DIExpression()), !dbg !8442
  %10 = bitcast i32* %6 to i8*, !dbg !8447
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #22, !dbg !8447
  %11 = bitcast i8* %0 to i32*, !dbg !8448
  %12 = load i32, i32* %11, align 4, !dbg !8448
  %13 = xor i32 %12, -1, !dbg !8448
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8448
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !8448
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !8448
  %17 = ptrtoint %struct.hal_cache_region_config_t* %16 to i32, !dbg !8448
  %18 = icmp eq i32 %13, %17, !dbg !8448
  br i1 %18, label %20, label %19, !dbg !8451

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !8452
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.115, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0)) #23, !dbg !8452
  unreachable, !dbg !8452

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8454
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !8455
  store i8 1, i8* %21, align 4, !dbg !8456
  br label %22, !dbg !8457

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8458
  call void @llvm.dbg.value(metadata i32 %23, metadata !8434, metadata !DIExpression()), !dbg !8442
  %24 = icmp eq i32 %23, -121, !dbg !8460
  br i1 %24, label %22, label %25, !dbg !8461, !llvm.loop !8462

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !8464
  br i1 %26, label %104, label %27, !dbg !8465

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !8465

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !8466
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !8442
  call void @llvm.dbg.value(metadata i32 %38, metadata !8431, metadata !DIExpression()), !dbg !8442
  call void @llvm.dbg.value(metadata i32 %37, metadata !8428, metadata !DIExpression()), !dbg !8442
  call void @llvm.dbg.value(metadata i8* %36, metadata !8432, metadata !DIExpression()), !dbg !8442
  call void @llvm.dbg.value(metadata i8* %36, metadata !8433, metadata !DIExpression()), !dbg !8442
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8467
  %40 = shl i32 %39, 1, !dbg !8468
  %41 = add i32 %40, -1, !dbg !8469
  %42 = and i32 %41, %38, !dbg !8470
  %43 = sub i32 %40, %42, !dbg !8471
  %44 = icmp ugt i32 %37, %43, !dbg !8472
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !8473
  call void @llvm.dbg.value(metadata i32 %45, metadata !8435, metadata !DIExpression()), !dbg !8442
  call void @llvm.dbg.value(metadata i32 %45, metadata !8436, metadata !DIExpression()), !dbg !8442
  store i32 %45, i32* %6, align 4, !dbg !8474
  call void @llvm.dbg.value(metadata i8* %36, metadata !8432, metadata !DIExpression()), !dbg !8442
  %46 = ptrtoint i8* %36 to i32, !dbg !8475
  %47 = and i32 %46, 134217728, !dbg !8476
  %48 = icmp eq i32 %47, 0, !dbg !8476
  br i1 %48, label %58, label %49, !dbg !8477

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !8438, metadata !DIExpression()), !dbg !8478
  call void @llvm.dbg.value(metadata i32 %45, metadata !8436, metadata !DIExpression()), !dbg !8442
  %50 = icmp eq i32 %45, 0, !dbg !8479
  br i1 %50, label %58, label %51, !dbg !8482

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !8438, metadata !DIExpression()), !dbg !8478
  call void @llvm.dbg.value(metadata i8* %36, metadata !8432, metadata !DIExpression()), !dbg !8442
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !8483
  %54 = load i8, i8* %53, align 1, !dbg !8483
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !8485
  store i8 %54, i8* %55, align 1, !dbg !8486
  %56 = add nuw i32 %52, 1, !dbg !8487
  call void @llvm.dbg.value(metadata i32 %56, metadata !8438, metadata !DIExpression()), !dbg !8478
  call void @llvm.dbg.value(metadata i32 %45, metadata !8436, metadata !DIExpression()), !dbg !8442
  %57 = icmp eq i32 %56, %45, !dbg !8479
  br i1 %57, label %58, label %51, !dbg !8482, !llvm.loop !8488

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !8490
  call void @llvm.dbg.value(metadata i8* %59, metadata !8433, metadata !DIExpression()), !dbg !8442
  %60 = load i32, i32* %29, align 4, !dbg !8491
  %61 = and i32 %60, 16, !dbg !8493
  %62 = icmp eq i32 %61, 0, !dbg !8493
  br i1 %62, label %63, label %64, !dbg !8494

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #21, !dbg !8495
  br label %64, !dbg !8497

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !8498
  %66 = icmp eq i8 %65, 4, !dbg !8500
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !8501
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !8501
  %69 = load i8, i8* %68, align 1, !dbg !8501
  %70 = zext i8 %69 to i32, !dbg !8501
  br i1 %66, label %71, label %75, !dbg !8502

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !8432, metadata !DIExpression(DW_OP_deref)), !dbg !8442
  call void @llvm.dbg.value(metadata i32* %6, metadata !8436, metadata !DIExpression(DW_OP_deref)), !dbg !8442
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #20, !dbg !8503
  call void @llvm.dbg.value(metadata i32 %72, metadata !8437, metadata !DIExpression()), !dbg !8442
  %73 = load i8*, i8** %5, align 4, !dbg !8505
  call void @llvm.dbg.value(metadata i8* %73, metadata !8432, metadata !DIExpression()), !dbg !8442
  %74 = load i32, i32* %6, align 4, !dbg !8506
  call void @llvm.dbg.value(metadata i32 %74, metadata !8436, metadata !DIExpression()), !dbg !8442
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #20, !dbg !8507
  br label %79, !dbg !8508

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #20, !dbg !8509
  call void @llvm.dbg.value(metadata i32 %76, metadata !8437, metadata !DIExpression()), !dbg !8442
  %77 = load i8*, i8** %5, align 4, !dbg !8511
  call void @llvm.dbg.value(metadata i8* %77, metadata !8432, metadata !DIExpression()), !dbg !8442
  %78 = load i32, i32* %6, align 4, !dbg !8512
  call void @llvm.dbg.value(metadata i32 %78, metadata !8436, metadata !DIExpression()), !dbg !8442
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #20, !dbg !8513
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !8501
  call void @llvm.dbg.value(metadata i32 %80, metadata !8437, metadata !DIExpression()), !dbg !8442
  %81 = call i32 @SaveAndSetIRQMask() #21, !dbg !8514
  call void @llvm.dbg.value(metadata i32 %81, metadata !8430, metadata !DIExpression()), !dbg !8442
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8515
  %82 = load i8, i8* %30, align 1, !dbg !8516
  %83 = zext i8 %82 to i32, !dbg !8517
  %84 = add i32 %45, 1, !dbg !8518
  %85 = add i32 %84, %83, !dbg !8519
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8520
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8521
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !8522
  %86 = load i16, i16* %34, align 2, !dbg !8523
  call void @SFI_MacEnable(i16 noundef zeroext %86) #20, !dbg !8524
  %87 = load i16, i16* %34, align 2, !dbg !8525
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #20, !dbg !8526
  call void @RestoreIRQMask(i32 noundef %81) #21, !dbg !8527
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !8528

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !8529
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #21, !dbg !8531
  call void @llvm.dbg.value(metadata i32 %94, metadata !8434, metadata !DIExpression()), !dbg !8442
  %95 = icmp eq i32 %94, 0, !dbg !8532
  br i1 %95, label %92, label %96, !dbg !8533, !llvm.loop !8534

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !8536
  call void @llvm.dbg.value(metadata i32 %97, metadata !8436, metadata !DIExpression()), !dbg !8442
  %98 = load i8*, i8** %5, align 4, !dbg !8537
  call void @llvm.dbg.value(metadata i8* %98, metadata !8432, metadata !DIExpression()), !dbg !8442
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !8537
  call void @llvm.dbg.value(metadata i8* %99, metadata !8432, metadata !DIExpression()), !dbg !8442
  store i8* %99, i8** %5, align 4, !dbg !8537
  %100 = sub i32 %37, %45, !dbg !8538
  call void @llvm.dbg.value(metadata i32 %100, metadata !8428, metadata !DIExpression()), !dbg !8442
  call void @llvm.dbg.value(metadata i32 undef, metadata !8431, metadata !DIExpression()), !dbg !8442
  %101 = icmp eq i32 %94, 1, !dbg !8539
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !8541
  br i1 %103, label %35, label %104, !dbg !8541, !llvm.loop !8542

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !8442
  call void @llvm.dbg.value(metadata i32 %105, metadata !8434, metadata !DIExpression()), !dbg !8442
  store i8 0, i8* %21, align 4, !dbg !8544
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8545
  %106 = icmp eq i32 %105, 1, !dbg !8546
  %107 = select i1 %106, i32 0, i32 %105, !dbg !8442
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #22, !dbg !8548
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #22, !dbg !8548
  ret i32 %107, !dbg !8548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #10 section ".ram_code" !dbg !8549 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8551, metadata !DIExpression()), !dbg !8553
  call void @llvm.dbg.value(metadata i32 undef, metadata !8552, metadata !DIExpression()), !dbg !8553
  ret i32 -12, !dbg !8554
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8555 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8557, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata i32 undef, metadata !8558, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.value(metadata i32 0, metadata !8560, metadata !DIExpression()), !dbg !8567
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8568
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8561, metadata !DIExpression()), !dbg !8567
  %4 = bitcast i8* %0 to i32*, !dbg !8569
  %5 = load i32, i32* %4, align 4, !dbg !8569
  %6 = xor i32 %5, -1, !dbg !8569
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8569
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !8569
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !8569
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !8569
  %11 = icmp eq i32 %6, %10, !dbg !8569
  br i1 %11, label %13, label %12, !dbg !8572

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !8573
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.115, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0)) #23, !dbg !8573
  unreachable, !dbg !8573

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8575
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !8575
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8575
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !8576
  %18 = load i8, i8* %17, align 1, !dbg !8576
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #21, !dbg !8577
  call void @llvm.dbg.value(metadata i32 %19, metadata !8562, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8567
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8578
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !8579
  %22 = load i8, i8* %21, align 1, !dbg !8579
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #21, !dbg !8580
  call void @llvm.dbg.value(metadata i32 %23, metadata !8563, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8567
  %24 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8581
  call void @llvm.dbg.value(metadata i32 %24, metadata !8560, metadata !DIExpression()), !dbg !8567
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8582
  %26 = bitcast i8* %25 to i8**, !dbg !8582
  %27 = load i8*, i8** %26, align 4, !dbg !8582
  %28 = load i8, i8* %27, align 1, !dbg !8583
  %29 = zext i8 %28 to i32, !dbg !8583
  %30 = and i32 %19, %29, !dbg !8584
  %31 = icmp eq i32 %30, 0, !dbg !8585
  br i1 %31, label %32, label %62, !dbg !8586

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !8563, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8567
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !8587
  %34 = load i8, i8* %33, align 1, !dbg !8587
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !8588
  %36 = load i8, i8* %35, align 1, !dbg !8588
  %37 = or i8 %36, %34, !dbg !8589
  call void @llvm.dbg.value(metadata i8 %37, metadata !8564, metadata !DIExpression()), !dbg !8590
  %38 = zext i8 %37 to i32, !dbg !8591
  %39 = and i32 %23, %38, !dbg !8593
  %40 = icmp eq i32 %39, 0, !dbg !8594
  br i1 %40, label %41, label %46, !dbg !8595

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !8596
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !8597
  br i1 %45, label %51, label %46, !dbg !8597

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8598, !range !2630
  %48 = icmp eq i8 %47, 0, !dbg !8598
  br i1 %48, label %49, label %50, !dbg !8602

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #21, !dbg !8603
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.115, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0)) #23, !dbg !8603
  unreachable, !dbg !8603

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8605
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8606
  call void @llvm.dbg.value(metadata i32 -121, metadata !8559, metadata !DIExpression()), !dbg !8567
  br label %62, !dbg !8607

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !8608
  %53 = bitcast i8* %52 to i32*, !dbg !8608
  %54 = load i32, i32* %53, align 4, !dbg !8608
  %55 = and i32 %54, 2, !dbg !8611
  %56 = icmp eq i32 %55, 0, !dbg !8611
  br i1 %56, label %63, label %57, !dbg !8612

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !8613
  %59 = bitcast i8* %58 to i16*, !dbg !8613
  %60 = load i16, i16* %59, align 2, !dbg !8613
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #20, !dbg !8615
  %61 = load i16, i16* %59, align 2, !dbg !8616
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #20, !dbg !8617
  br label %63, !dbg !8618

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !8559, metadata !DIExpression()), !dbg !8567
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !8619
  br label %65, !dbg !8620

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8621
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !8622
  call void @llvm.dbg.value(metadata i32 0, metadata !8559, metadata !DIExpression()), !dbg !8567
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !8619
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !8623
  call void @llvm.dbg.value(metadata i32 %64, metadata !8559, metadata !DIExpression()), !dbg !8567
  br label %65, !dbg !8626

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !8567
  call void @llvm.dbg.value(metadata i32 %66, metadata !8559, metadata !DIExpression()), !dbg !8567
  ret i32 %66, !dbg !8627
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8628 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8630, metadata !DIExpression()), !dbg !8635
  call void @llvm.dbg.value(metadata i32 undef, metadata !8631, metadata !DIExpression()), !dbg !8635
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8636
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8632, metadata !DIExpression()), !dbg !8635
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8637
  call void @llvm.dbg.value(metadata i32 %4, metadata !8634, metadata !DIExpression()), !dbg !8635
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #21, !dbg !8638
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !8639

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !8640
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !8642
  %12 = load i8, i8* %11, align 1, !dbg !8642
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #21, !dbg !8643
  call void @llvm.dbg.value(metadata i32 %13, metadata !8633, metadata !DIExpression()), !dbg !8635
  %14 = load i8*, i8** %8, align 4, !dbg !8644
  %15 = load i8, i8* %14, align 1, !dbg !8646
  %16 = zext i8 %15 to i32, !dbg !8646
  %17 = and i32 %13, %16, !dbg !8647
  %18 = icmp eq i32 %17, 0, !dbg !8648
  br i1 %18, label %19, label %9, !dbg !8649, !llvm.loop !8650

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !8652
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !8653
  ret i32 0, !dbg !8654
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8655 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8657, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i32 undef, metadata !8658, metadata !DIExpression()), !dbg !8660
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8661
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8659, metadata !DIExpression()), !dbg !8660
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8662
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #21, !dbg !8663
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8664
  ret i32 0, !dbg !8665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #10 section ".ram_code" !dbg !8666 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8668, metadata !DIExpression()), !dbg !8671
  call void @llvm.dbg.value(metadata i8* undef, metadata !8669, metadata !DIExpression()), !dbg !8671
  call void @llvm.dbg.value(metadata i32 undef, metadata !8670, metadata !DIExpression()), !dbg !8671
  ret i32 0, !dbg !8672
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !8673 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8675, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i32 %1, metadata !8676, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i8* undef, metadata !8677, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i8* %0, metadata !8678, metadata !DIExpression()), !dbg !8679
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !8680

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !8678, metadata !DIExpression()), !dbg !8679
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !8681
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !8681
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !8681
  %8 = tail call i32 %7(i8* noundef %0) #20, !dbg !8684
  br label %21, !dbg !8685

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !8686
  %11 = load i8, i8* %10, align 1, !dbg !8690
  %12 = icmp eq i8 %11, -62, !dbg !8691
  br i1 %12, label %13, label %21, !dbg !8692

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8693
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !8693
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !8693
  %17 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %16, i32 0, i32 0, !dbg !8694
  %18 = load i32, i32* %17, align 4, !dbg !8694
  %19 = icmp eq i32 %18, 262144, !dbg !8695
  br i1 %19, label %22, label %21, !dbg !8696

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !8697
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.115, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0)) #23, !dbg !8697
  unreachable, !dbg !8697

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !8702

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !8679
  ret i32 %23, !dbg !8703
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8704 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8706, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i8* %0, metadata !8707, metadata !DIExpression()), !dbg !8709
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8710
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !8710
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !8710
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !8712
  %6 = load i8, i8* %5, align 1, !dbg !8712
  %7 = icmp eq i8 %6, 0, !dbg !8713
  br i1 %7, label %19, label %8, !dbg !8714

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8715
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !8707, metadata !DIExpression()), !dbg !8709
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #21, !dbg !8716
  call void @llvm.dbg.value(metadata i32 %10, metadata !8708, metadata !DIExpression()), !dbg !8709
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8718
  %12 = bitcast i8* %11 to i8**, !dbg !8718
  %13 = load i8*, i8** %12, align 4, !dbg !8718
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !8720
  %15 = load i8, i8* %14, align 1, !dbg !8720
  %16 = zext i8 %15 to i32, !dbg !8720
  %17 = and i32 %10, %16, !dbg !8721
  %18 = icmp eq i32 %17, 0, !dbg !8721
  br i1 %18, label %19, label %20, !dbg !8722

19:                                               ; preds = %8, %1
  br label %20, !dbg !8723

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !8709
  ret i32 %21, !dbg !8724
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !8725 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8729, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i32 %1, metadata !8730, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i8 %2, metadata !8731, metadata !DIExpression()), !dbg !8737
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8738
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !8733, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i32 0, metadata !8734, metadata !DIExpression()), !dbg !8737
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8739
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !8739
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !8739
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !8740
  %9 = load i8, i8* %8, align 1, !dbg !8740
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #21, !dbg !8741
  call void @llvm.dbg.value(metadata i32 %10, metadata !8736, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8737
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8742, !range !2630
  %12 = icmp eq i8 %11, 0, !dbg !8742
  br i1 %12, label %18, label %13, !dbg !8744

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8745, !range !2630
  %15 = icmp eq i8 %14, 0, !dbg !8745
  br i1 %15, label %16, label %17, !dbg !8749

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #21, !dbg !8750
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.115, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0)) #23, !dbg !8750
  unreachable, !dbg !8750

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #21, !dbg !8752
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8753
  br label %42, !dbg !8754

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !8736, metadata !DIExpression()), !dbg !8737
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8755
  %20 = bitcast i8* %19 to i8**, !dbg !8755
  %21 = load i8*, i8** %20, align 4, !dbg !8755
  %22 = load i8, i8* %21, align 1, !dbg !8757
  %23 = zext i8 %22 to i32, !dbg !8757
  %24 = and i32 %10, %23, !dbg !8758
  %25 = icmp eq i32 %24, 0, !dbg !8759
  br i1 %25, label %26, label %42, !dbg !8760

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8761
  call void @llvm.dbg.value(metadata i32 %27, metadata !8732, metadata !DIExpression()), !dbg !8737
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8763
  %28 = inttoptr i32 %1 to i8*, !dbg !8764
  %29 = load volatile i8, i8* %28, align 1, !dbg !8765
  call void @llvm.dbg.value(metadata i8 %29, metadata !8735, metadata !DIExpression()), !dbg !8737
  %30 = icmp eq i8 %29, %2, !dbg !8766
  br i1 %30, label %39, label %31, !dbg !8768

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !8734, metadata !DIExpression()), !dbg !8737
  %32 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !8769
  br i1 %32, label %33, label %38, !dbg !8772

33:                                               ; preds = %31
  %34 = and i32 %1, -32, !dbg !8773
  %35 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %34) #20, !dbg !8775
  %36 = load volatile i8, i8* %28, align 1, !dbg !8776
  %37 = icmp eq i8 %36, %2, !dbg !8778
  br i1 %37, label %39, label %38, !dbg !8779

38:                                               ; preds = %33, %31
  call void @llvm.dbg.value(metadata i32 -1, metadata !8734, metadata !DIExpression()), !dbg !8737
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !8780
  br label %42, !dbg !8781

39:                                               ; preds = %33, %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !8734, metadata !DIExpression()), !dbg !8737
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !8780
  %40 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !8782
  %41 = icmp eq i32 %40, 0, !dbg !8785
  br i1 %41, label %42, label %44, !dbg !8786

42:                                               ; preds = %18, %17, %38, %39
  %43 = phi i32 [ 1, %39 ], [ -1, %38 ], [ 0, %17 ], [ 0, %18 ]
  br label %44, !dbg !8787

44:                                               ; preds = %39, %42
  %45 = phi i32 [ %43, %42 ], [ -1, %39 ], !dbg !8737
  ret i32 %45, !dbg !8788
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !8789 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8793, metadata !DIExpression()), !dbg !8796
  call void @llvm.dbg.value(metadata i32 %1, metadata !8794, metadata !DIExpression()), !dbg !8796
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !8797
  %4 = load i32, i32* %3, align 4, !dbg !8797
  %5 = and i32 %4, 16, !dbg !8799
  %6 = icmp eq i32 %5, 0, !dbg !8799
  br i1 %6, label %7, label %8, !dbg !8800

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #21, !dbg !8801
  br label %8, !dbg !8803

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8804
  call void @llvm.dbg.value(metadata i32 %9, metadata !8795, metadata !DIExpression()), !dbg !8796
  tail call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !8805
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8806
  %11 = load i16, i16* %10, align 2, !dbg !8806
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8807
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !8807
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !8808
  %15 = load i8, i8* %14, align 1, !dbg !8808
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !8809
  %17 = load i8, i8* %16, align 1, !dbg !8809
  %18 = zext i8 %17 to i32, !dbg !8810
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #20, !dbg !8811
  tail call void @RestoreIRQMask(i32 noundef %9) #21, !dbg !8812
  ret void, !dbg !8813
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !8814 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8816, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8817, metadata !DIExpression()), !dbg !8819
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !8820
  %4 = load i8, i8* %3, align 1, !dbg !8820
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !8821

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !8822
  %7 = load i32, i32* %6, align 4, !dbg !8824
  %8 = or i32 %7, 4, !dbg !8824
  store i32 %8, i32* %6, align 4, !dbg !8824
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8825
  call void @llvm.dbg.value(metadata i32 0, metadata !8818, metadata !DIExpression()), !dbg !8819
  br label %18, !dbg !8826

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !8827
  %12 = load i32, i32* %11, align 4, !dbg !8828
  %13 = or i32 %12, 2, !dbg !8828
  store i32 %13, i32* %11, align 4, !dbg !8828
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8829
  call void @llvm.dbg.value(metadata i32 0, metadata !8818, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.value(metadata i32 0, metadata !8818, metadata !DIExpression()), !dbg !8819
  br label %18, !dbg !8830

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8831
  call void @llvm.dbg.value(metadata i32 0, metadata !8818, metadata !DIExpression()), !dbg !8819
  br label %18, !dbg !8832

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !8818, metadata !DIExpression()), !dbg !8819
  tail call void @Flash_ReturnReady() #21, !dbg !8833
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.115, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0)) #23, !dbg !8833
  unreachable, !dbg !8833

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !8818, metadata !DIExpression()), !dbg !8819
  ret i32 0, !dbg !8837
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !8838 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !8842, metadata !DIExpression()), !dbg !8847
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8843, metadata !DIExpression()), !dbg !8847
  call void @llvm.dbg.value(metadata i32 %2, metadata !8844, metadata !DIExpression()), !dbg !8847
  call void @llvm.dbg.value(metadata i32 %3, metadata !8845, metadata !DIExpression()), !dbg !8847
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !8848
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !8850
  br i1 %7, label %33, label %8, !dbg !8850

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8851
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8851
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !8853
  br i1 %11, label %33, label %12, !dbg !8854

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8855
  %14 = load i8*, i8** %13, align 4, !dbg !8855
  %15 = icmp eq i8* %14, null, !dbg !8856
  br i1 %15, label %33, label %16, !dbg !8857

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !8858
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !8859
  store i8* %17, i8** %18, align 4, !dbg !8860
  %19 = trunc i32 %3 to i16, !dbg !8861
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !8862
  store i16 %19, i16* %20, align 2, !dbg !8863
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8864
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8865
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !8866
  store i8 -81, i8* %23, align 1, !dbg !8867
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !8868
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !8869
  %25 = load i8, i8* %24, align 1, !dbg !8870
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !8872

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #20, !dbg !8873
  br i1 %27, label %31, label %28, !dbg !8874

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8875
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !8877
  store i8 -97, i8* %30, align 1, !dbg !8878
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !8879
  br label %31, !dbg !8880

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8881
  call void @llvm.dbg.value(metadata i32 0, metadata !8846, metadata !DIExpression()), !dbg !8847
  br label %33, !dbg !8882

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !8847
  ret i32 %34, !dbg !8883
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !8884 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8888, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata i8* %1, metadata !8889, metadata !DIExpression()), !dbg !8891
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !8892
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8893
  %5 = and i32 %4, 1, !dbg !8893
  %6 = icmp eq i32 %5, 0, !dbg !8895
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8896
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !8896
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !8897
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !8897
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !8897
  %12 = load i8, i8* %11, align 1, !dbg !8896
  store i8 %12, i8* %3, align 1, !dbg !8896
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8898
  %14 = load i16, i16* %13, align 2, !dbg !8898
  call void @llvm.dbg.value(metadata i8* %3, metadata !8890, metadata !DIExpression(DW_OP_deref)), !dbg !8891
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8899
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !8900
  ret void, !dbg !8900
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !8901 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8905, metadata !DIExpression()), !dbg !8911
  call void @llvm.dbg.value(metadata i8* %1, metadata !8906, metadata !DIExpression()), !dbg !8911
  call void @llvm.dbg.value(metadata i8* %2, metadata !8907, metadata !DIExpression()), !dbg !8911
  call void @llvm.dbg.value(metadata i16 %3, metadata !8908, metadata !DIExpression()), !dbg !8911
  call void @llvm.dbg.value(metadata i16 %4, metadata !8909, metadata !DIExpression()), !dbg !8911
  %6 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8912
  call void @llvm.dbg.value(metadata i32 %6, metadata !8910, metadata !DIExpression()), !dbg !8911
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #20, !dbg !8913
  tail call void @RestoreIRQMask(i32 noundef %6) #21, !dbg !8914
  ret void, !dbg !8915
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !8916 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8918, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8921, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 0, metadata !8919, metadata !DIExpression()), !dbg !8924
  br label %6, !dbg !8925

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !8927
  call void @llvm.dbg.value(metadata i32 %3, metadata !8919, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 %8, metadata !8919, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8924
  %4 = icmp ult i32 %8, 4, !dbg !8929
  %5 = icmp eq i32 %3, 5, !dbg !8929
  br i1 %5, label %26, label %6, !dbg !8925, !llvm.loop !8930

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8919, metadata !DIExpression()), !dbg !8924
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8920, metadata !DIExpression()), !dbg !8924
  %12 = icmp eq i8 %10, 0, !dbg !8932
  br i1 %12, label %23, label %13, !dbg !8936

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8920, metadata !DIExpression()), !dbg !8924
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8937
  %16 = load i8, i8* %15, align 1, !dbg !8937
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !8940
  %18 = load i8, i8* %17, align 1, !dbg !8940
  %19 = icmp eq i8 %16, %18, !dbg !8941
  br i1 %19, label %20, label %23, !dbg !8942

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !8943
  call void @llvm.dbg.value(metadata i32 %21, metadata !8920, metadata !DIExpression()), !dbg !8924
  %22 = icmp eq i32 %21, %11, !dbg !8932
  br i1 %22, label %26, label %13, !dbg !8936, !llvm.loop !8944

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !8946
  %25 = icmp eq i32 %24, %11, !dbg !8947
  call void @llvm.dbg.value(metadata i32 %8, metadata !8919, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8924
  br i1 %25, label %26, label %2, !dbg !8949

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !8929
  ret i1 %27, !dbg !8950
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !8951 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !8963
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !8963
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !8955, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8962, metadata !DIExpression()), !dbg !8965
  %3 = load i16, i16* @cmem_index, align 2, !dbg !8966
  %4 = icmp sgt i16 %3, -1, !dbg !8968
  br i1 %4, label %34, label %5, !dbg !8969

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !8970
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #20, !dbg !8971
  call void @llvm.dbg.value(metadata i32 0, metadata !8953, metadata !DIExpression()), !dbg !8965
  br label %7, !dbg !8972

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8953, metadata !DIExpression()), !dbg !8965
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8954, metadata !DIExpression()), !dbg !8965
  %12 = icmp eq i8 %10, 0, !dbg !8974
  br i1 %12, label %24, label %13, !dbg !8979

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8954, metadata !DIExpression()), !dbg !8965
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8980
  %16 = load i8, i8* %15, align 1, !dbg !8980
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !8983
  %18 = load i16, i16* %17, align 2, !dbg !8983
  %19 = zext i8 %16 to i16, !dbg !8984
  %20 = icmp eq i16 %18, %19, !dbg !8984
  br i1 %20, label %21, label %24, !dbg !8985

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !8986
  call void @llvm.dbg.value(metadata i32 %22, metadata !8954, metadata !DIExpression()), !dbg !8965
  %23 = icmp eq i32 %22, %11, !dbg !8974
  br i1 %23, label %27, label %13, !dbg !8979, !llvm.loop !8987

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !8989
  %26 = icmp eq i32 %25, %11, !dbg !8990
  br i1 %26, label %27, label %29, !dbg !8992

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !8993
  store i16 %28, i16* @cmem_index, align 2, !dbg !8995
  br label %34, !dbg !8996

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !8997
  call void @llvm.dbg.value(metadata i32 %30, metadata !8953, metadata !DIExpression()), !dbg !8965
  %31 = icmp eq i32 %30, 5, !dbg !8998
  br i1 %31, label %32, label %7, !dbg !8972, !llvm.loop !8999

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !9001
  br label %34, !dbg !9001

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !8965
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9002
  ret i32 %36, !dbg !9002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #10 !dbg !9003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9007, metadata !DIExpression()), !dbg !9008
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !9009
  ret %struct.CMEMEntryID* %2, !dbg !9010
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !9011 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !9015, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.value(metadata i8* undef, metadata !9016, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.value(metadata i16* %2, metadata !9017, metadata !DIExpression()), !dbg !9022
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9023
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !9023
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9023
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !9020, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.value(metadata i8 -81, metadata !9018, metadata !DIExpression()), !dbg !9025
  store i8 -81, i8* %4, align 1, !dbg !9026
  call void @llvm.dbg.value(metadata i8* %4, metadata !9018, metadata !DIExpression(DW_OP_deref)), !dbg !9025
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9027
  %7 = load i8, i8* %6, align 1, !dbg !9028
  %8 = add i8 %7, 1, !dbg !9030
  %9 = icmp ult i8 %8, 2, !dbg !9030
  br i1 %9, label %12, label %10, !dbg !9030

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #21, !dbg !9031
  br i1 %11, label %13, label %12, !dbg !9032

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !9018, metadata !DIExpression()), !dbg !9025
  store i8 -97, i8* %4, align 1, !dbg !9033
  call void @llvm.dbg.value(metadata i8* %4, metadata !9018, metadata !DIExpression(DW_OP_deref)), !dbg !9025
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9035
  br label %13, !dbg !9036

13:                                               ; preds = %12, %10
  br label %14, !dbg !9037

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !9021, metadata !DIExpression()), !dbg !9025
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !9039
  %17 = load i8, i8* %16, align 1, !dbg !9039
  %18 = zext i8 %17 to i16, !dbg !9039
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !9042
  store i16 %18, i16* %19, align 2, !dbg !9043
  %20 = add nuw nsw i32 %15, 1, !dbg !9044
  call void @llvm.dbg.value(metadata i32 %20, metadata !9021, metadata !DIExpression()), !dbg !9025
  %21 = icmp eq i32 %20, 3, !dbg !9045
  br i1 %21, label %22, label %14, !dbg !9037, !llvm.loop !9046

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9048
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9048
  ret void, !dbg !9049
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 section ".ram_code" !dbg !9050 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9052, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9055, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i32 0, metadata !9053, metadata !DIExpression()), !dbg !9056
  br label %6, !dbg !9057

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !9059
  call void @llvm.dbg.value(metadata i32 %3, metadata !9053, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i32 %8, metadata !9053, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9056
  %4 = icmp ult i32 %8, 4, !dbg !9061
  %5 = icmp eq i32 %3, 5, !dbg !9061
  br i1 %5, label %26, label %6, !dbg !9057, !llvm.loop !9062

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9053, metadata !DIExpression()), !dbg !9056
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9054, metadata !DIExpression()), !dbg !9056
  %12 = icmp eq i8 %10, 0, !dbg !9064
  br i1 %12, label %23, label %13, !dbg !9068

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9054, metadata !DIExpression()), !dbg !9056
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9069
  %16 = load i8, i8* %15, align 1, !dbg !9069
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !9072
  %18 = load i8, i8* %17, align 1, !dbg !9072
  %19 = icmp eq i8 %16, %18, !dbg !9073
  br i1 %19, label %20, label %23, !dbg !9074

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !9075
  call void @llvm.dbg.value(metadata i32 %21, metadata !9054, metadata !DIExpression()), !dbg !9056
  %22 = icmp eq i32 %21, %11, !dbg !9064
  br i1 %22, label %26, label %13, !dbg !9068, !llvm.loop !9076

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !9078
  %25 = icmp eq i32 %24, %11, !dbg !9079
  call void @llvm.dbg.value(metadata i32 %8, metadata !9053, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9056
  br i1 %25, label %26, label %2, !dbg !9081

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !9061
  ret i1 %27, !dbg !9082
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !9083 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !9089
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9089
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !9087, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9088, metadata !DIExpression()), !dbg !9091
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !9092
  %4 = icmp sgt i16 %3, -1, !dbg !9094
  br i1 %4, label %34, label %5, !dbg !9095

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !9096
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #21, !dbg !9097
  call void @llvm.dbg.value(metadata i32 0, metadata !9085, metadata !DIExpression()), !dbg !9091
  br label %7, !dbg !9098

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9085, metadata !DIExpression()), !dbg !9091
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9086, metadata !DIExpression()), !dbg !9091
  %12 = icmp eq i8 %10, 0, !dbg !9100
  br i1 %12, label %24, label %13, !dbg !9105

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9086, metadata !DIExpression()), !dbg !9091
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9106
  %16 = load i8, i8* %15, align 1, !dbg !9106
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !9109
  %18 = load i16, i16* %17, align 2, !dbg !9109
  %19 = zext i8 %16 to i16, !dbg !9110
  %20 = icmp eq i16 %18, %19, !dbg !9110
  br i1 %20, label %21, label %24, !dbg !9111

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !9112
  call void @llvm.dbg.value(metadata i32 %22, metadata !9086, metadata !DIExpression()), !dbg !9091
  %23 = icmp eq i32 %22, %11, !dbg !9100
  br i1 %23, label %27, label %13, !dbg !9105, !llvm.loop !9113

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !9115
  %26 = icmp eq i32 %25, %11, !dbg !9116
  br i1 %26, label %27, label %29, !dbg !9118

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !9119
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !9121
  br label %34, !dbg !9122

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !9123
  call void @llvm.dbg.value(metadata i32 %30, metadata !9085, metadata !DIExpression()), !dbg !9091
  %31 = icmp eq i32 %30, 5, !dbg !9124
  br i1 %31, label %32, label %7, !dbg !9098, !llvm.loop !9125

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !9127
  br label %34, !dbg !9127

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !9091
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9128
  ret i32 %36, !dbg !9128
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !9129 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !9137, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i16* %1, metadata !9138, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i16* %2, metadata !9139, metadata !DIExpression()), !dbg !9145
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9146
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !9146
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9146
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !9143, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.value(metadata i8 -81, metadata !9141, metadata !DIExpression()), !dbg !9148
  store i8 -81, i8* %4, align 1, !dbg !9149
  %7 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9150
  call void @llvm.dbg.value(metadata i32 %7, metadata !9140, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i8* %4, metadata !9141, metadata !DIExpression(DW_OP_deref)), !dbg !9148
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9151
  call void @RestoreIRQMask(i32 noundef %7) #20, !dbg !9152
  %8 = load i8, i8* %6, align 1, !dbg !9153
  %9 = add i8 %8, 1, !dbg !9155
  %10 = icmp ult i8 %9, 2, !dbg !9155
  br i1 %10, label %13, label %11, !dbg !9155

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #20, !dbg !9156
  br i1 %12, label %15, label %13, !dbg !9157

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !9141, metadata !DIExpression()), !dbg !9148
  store i8 -97, i8* %4, align 1, !dbg !9158
  %14 = call i32 @SaveAndSetIRQMask() #20, !dbg !9160
  call void @llvm.dbg.value(metadata i32 %14, metadata !9140, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i8* %4, metadata !9141, metadata !DIExpression(DW_OP_deref)), !dbg !9148
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9161
  call void @RestoreIRQMask(i32 noundef %14) #20, !dbg !9162
  br label %15, !dbg !9163

15:                                               ; preds = %13, %11
  br label %16, !dbg !9164

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !9144, metadata !DIExpression()), !dbg !9148
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !9166
  %19 = load i8, i8* %18, align 1, !dbg !9166
  %20 = zext i8 %19 to i16, !dbg !9166
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !9169
  store i16 %20, i16* %21, align 2, !dbg !9170
  %22 = add nuw nsw i32 %17, 1, !dbg !9171
  call void @llvm.dbg.value(metadata i32 %22, metadata !9144, metadata !DIExpression()), !dbg !9148
  %23 = icmp eq i32 %22, 3, !dbg !9172
  br i1 %23, label %24, label %16, !dbg !9164, !llvm.loop !9173

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9175
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9175
  ret void, !dbg !9176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #10 !dbg !9177 {
  ret i32 3932160, !dbg !9178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #10 !dbg !9179 {
  ret i32 4194304, !dbg !9180
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !9181 {
  %1 = tail call i32 @ComboMem_Initialize() #20, !dbg !9182
  ret void, !dbg !9183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #10 !dbg !9184 {
  ret void, !dbg !9185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #10 !dbg !9186 {
  ret void, !dbg !9187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #10 !dbg !9188 {
  ret i32 3932160, !dbg !9189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #10 !dbg !9190 {
  ret i32 262144, !dbg !9191
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !9192 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #20, !dbg !9193
  ret void, !dbg !9194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #10 !dbg !9195 {
  ret i32 134217728, !dbg !9196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #10 !dbg !9197 {
  ret i32 4194304, !dbg !9198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #6 !dbg !9199 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !9200
  ret i32 134217728, !dbg !9201
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !9202 {
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !9203
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9204
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9205
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !9206
  %4 = load i16, i16* %3, align 2, !dbg !9206
  %5 = zext i16 %4 to i32, !dbg !9204
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9207
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.hal_cache_region_config_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #20, !dbg !9208
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !9209
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !9210
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !9211
  ret i32 0, !dbg !9212
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !9213 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !9216
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !9217
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !9218
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !9219
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !9220
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9221
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !9222
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !9223
  %5 = load i32, i32* %4, align 4, !dbg !9223
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #20, !dbg !9224
  call void @llvm.dbg.value(metadata i32 %6, metadata !9215, metadata !DIExpression()), !dbg !9225
  %7 = icmp eq i32 %6, -120, !dbg !9226
  %8 = select i1 %7, i32 5, i32 0, !dbg !9225
  ret i32 %8, !dbg !9228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #10 !dbg !9229 {
  ret i8 1, !dbg !9231
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !9232 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9236, metadata !DIExpression()), !dbg !9239
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9238, metadata !DIExpression()), !dbg !9239
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9240
  call void @llvm.dbg.value(metadata i32 %2, metadata !9237, metadata !DIExpression()), !dbg !9239
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9238, metadata !DIExpression()), !dbg !9239
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !9241
  %4 = load i32, i32* %3, align 4, !dbg !9241
  ret i32 %4, !dbg !9242
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !9243 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9247, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !9248, metadata !DIExpression()), !dbg !9250
  %3 = and i32 %0, 134217727, !dbg !9251
  call void @llvm.dbg.value(metadata i32 %3, metadata !9247, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata i16 0, metadata !9249, metadata !DIExpression()), !dbg !9250
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 1, i32 1, !dbg !9252
  %5 = load i32, i32* %4, align 4, !dbg !9252
  %6 = icmp eq i32 %5, 0, !dbg !9255
  br i1 %6, label %25, label %7, !dbg !9256

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !9249, metadata !DIExpression()), !dbg !9250
  %11 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %9, i32 0, !dbg !9257
  %12 = load i32, i32* %11, align 4, !dbg !9257
  %13 = icmp ult i32 %3, %12, !dbg !9260
  br i1 %13, label %18, label %14, !dbg !9261

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %8, i32 0, !dbg !9262
  %16 = load i32, i32* %15, align 4, !dbg !9262
  %17 = icmp ult i32 %3, %16, !dbg !9263
  br i1 %17, label %25, label %18, !dbg !9264

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !9265
  call void @llvm.dbg.value(metadata i16 %19, metadata !9249, metadata !DIExpression()), !dbg !9250
  %20 = zext i16 %19 to i32, !dbg !9266
  %21 = add nuw nsw i32 %20, 1, !dbg !9267
  %22 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %21, i32 1, !dbg !9252
  %23 = load i32, i32* %22, align 4, !dbg !9252
  %24 = icmp eq i32 %23, 0, !dbg !9255
  br i1 %24, label %25, label %7, !dbg !9256, !llvm.loop !9268

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !9266
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %26, i32 1, !dbg !9270
  %28 = load i32, i32* %27, align 4, !dbg !9270
  ret i32 %28, !dbg !9271
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #12 !dbg !9272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9274, metadata !DIExpression()), !dbg !9275
  %2 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9276
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef %2) #21, !dbg !9277
  ret i32 %3, !dbg !9278
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !9279 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9281, metadata !DIExpression()), !dbg !9284
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9285
  call void @llvm.dbg.value(metadata i32 %2, metadata !9282, metadata !DIExpression()), !dbg !9284
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9283, metadata !DIExpression()), !dbg !9284
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9283, metadata !DIExpression()), !dbg !9284
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !9286
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef nonnull %3) #21, !dbg !9287
  ret i32 %4, !dbg !9288
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !9289 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !9295, metadata !DIExpression()), !dbg !9298
  call void @llvm.dbg.value(metadata i32 0, metadata !9296, metadata !DIExpression()), !dbg !9298
  call void @llvm.dbg.value(metadata i32 0, metadata !9297, metadata !DIExpression()), !dbg !9298
  %2 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !9299
  %3 = load i32, i32* %2, align 4, !dbg !9299
  %4 = icmp eq i32 %3, 0, !dbg !9302
  br i1 %4, label %17, label %5, !dbg !9303

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9297, metadata !DIExpression()), !dbg !9298
  call void @llvm.dbg.value(metadata i32 %8, metadata !9296, metadata !DIExpression()), !dbg !9298
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %7, i32 1, !dbg !9304
  %10 = load i32, i32* %9, align 4, !dbg !9304
  %11 = mul i32 %10, %6, !dbg !9306
  %12 = add i32 %11, %8, !dbg !9307
  call void @llvm.dbg.value(metadata i32 %12, metadata !9296, metadata !DIExpression()), !dbg !9298
  %13 = add i32 %7, 1, !dbg !9308
  call void @llvm.dbg.value(metadata i32 %13, metadata !9297, metadata !DIExpression()), !dbg !9298
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 0, !dbg !9299
  %15 = load i32, i32* %14, align 4, !dbg !9299
  %16 = icmp eq i32 %15, 0, !dbg !9302
  br i1 %16, label %17, label %5, !dbg !9303, !llvm.loop !9309

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !9298
  ret i32 %18, !dbg !9311
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !9312 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9316, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.value(metadata i32 %1, metadata !9317, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9318, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !9319, metadata !DIExpression()), !dbg !9325
  %5 = add i32 %1, %0, !dbg !9326
  call void @llvm.dbg.value(metadata i32 %5, metadata !9324, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.value(metadata i32 %0, metadata !9320, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.value(metadata i32 0, metadata !9321, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.value(metadata i32 0, metadata !9323, metadata !DIExpression()), !dbg !9325
  %6 = icmp ugt i32 %5, %0, !dbg !9327
  br i1 %6, label %7, label %34, !dbg !9330

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9323, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.value(metadata i32 %9, metadata !9320, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.value(metadata i32 %10, metadata !9321, metadata !DIExpression()), !dbg !9325
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.hal_cache_region_config_t* noundef %3) #21, !dbg !9331
  call void @llvm.dbg.value(metadata i32 %11, metadata !9322, metadata !DIExpression()), !dbg !9325
  %12 = icmp eq i32 %8, 0, !dbg !9333
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 0, !dbg !9335
  br i1 %12, label %14, label %16, !dbg !9336

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !9337
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !9339
  store i32 1, i32* %15, align 4, !dbg !9340
  br label %29, !dbg !9341

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !9342
  %18 = icmp eq i32 %11, %17, !dbg !9344
  br i1 %18, label %19, label %23, !dbg !9345

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !9346
  %21 = load i32, i32* %20, align 4, !dbg !9348
  %22 = add i32 %21, 1, !dbg !9348
  store i32 %22, i32* %20, align 4, !dbg !9348
  br label %29, !dbg !9349

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !9350
  call void @llvm.dbg.value(metadata i32 %24, metadata !9321, metadata !DIExpression()), !dbg !9325
  %25 = icmp eq i32 %24, 9, !dbg !9352
  br i1 %25, label %34, label %26, !dbg !9354

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 0, !dbg !9355
  store i32 %11, i32* %27, align 4, !dbg !9356
  %28 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 1, !dbg !9357
  store i32 1, i32* %28, align 4, !dbg !9358
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !9359
  call void @llvm.dbg.value(metadata i32 %30, metadata !9321, metadata !DIExpression()), !dbg !9325
  %31 = add i32 %11, %9, !dbg !9360
  call void @llvm.dbg.value(metadata i32 %31, metadata !9320, metadata !DIExpression()), !dbg !9325
  %32 = add i32 %8, 1, !dbg !9361
  call void @llvm.dbg.value(metadata i32 %32, metadata !9323, metadata !DIExpression()), !dbg !9325
  %33 = icmp ult i32 %31, %5, !dbg !9327
  br i1 %33, label %7, label %34, !dbg !9330, !llvm.loop !9362

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !9325
  ret i32 %35, !dbg !9364
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2) local_unnamed_addr #0 !dbg !9365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9369, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.value(metadata i32 %1, metadata !9370, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9371, metadata !DIExpression()), !dbg !9372
  %4 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !9373
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #20, !dbg !9374
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9375
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef %6) #21, !dbg !9376
  ret i32 %7, !dbg !9377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !9378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9380, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.value(metadata i32 %1, metadata !9381, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9382, metadata !DIExpression()), !dbg !9383
  ret i32 0, !dbg !9384
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !9385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9387, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata i32 %1, metadata !9388, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9389, metadata !DIExpression()), !dbg !9392
  %4 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9393
  call void @llvm.dbg.value(metadata i32 %4, metadata !9390, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9391, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9391, metadata !DIExpression()), !dbg !9392
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !9394
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef nonnull %5) #21, !dbg !9395
  ret i32 %6, !dbg !9396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !9397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9399, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i32 %1, metadata !9400, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9401, metadata !DIExpression()), !dbg !9402
  ret i32 0, !dbg !9403
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !9404 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9406, metadata !DIExpression()), !dbg !9409
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9410
  call void @llvm.dbg.value(metadata i32 %2, metadata !9407, metadata !DIExpression()), !dbg !9409
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9408, metadata !DIExpression()), !dbg !9409
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9408, metadata !DIExpression()), !dbg !9409
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !9411
  %4 = load i32, i32* %3, align 4, !dbg !9411
  ret i32 %4, !dbg !9412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.hal_cache_region_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !9413 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !9417, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.value(metadata i32* %1, metadata !9418, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.value(metadata i32 %2, metadata !9419, metadata !DIExpression()), !dbg !9420
  %4 = load i32, i32* %1, align 4, !dbg !9421
  %5 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 0, !dbg !9423
  %6 = load i32, i32* %5, align 4, !dbg !9423
  %7 = icmp eq i32 %6, %2, !dbg !9424
  br i1 %7, label %8, label %12, !dbg !9425

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 1, !dbg !9426
  %10 = load i32, i32* %9, align 4, !dbg !9428
  %11 = add i32 %10, 1, !dbg !9428
  store i32 %11, i32* %9, align 4, !dbg !9428
  br label %17, !dbg !9429

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !9430
  store i32 %13, i32* %1, align 4, !dbg !9430
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 1, !dbg !9432
  store i32 1, i32* %14, align 4, !dbg !9433
  %15 = load i32, i32* %1, align 4, !dbg !9434
  %16 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %15, i32 0, !dbg !9435
  store i32 %2, i32* %16, align 4, !dbg !9436
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !9437
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !9438 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9442, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 %1, metadata !9443, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9444, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !9445, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 0, metadata !9446, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 0, metadata !9447, metadata !DIExpression()), !dbg !9451
  %5 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !9452
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #20, !dbg !9453
  call void @llvm.dbg.value(metadata i32 0, metadata !9450, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 0, metadata !9449, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 0, metadata !9447, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 0, metadata !9446, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 %0, metadata !9442, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 %1, metadata !9443, metadata !DIExpression()), !dbg !9451
  %7 = icmp eq i32 %1, 0, !dbg !9454
  br i1 %7, label %53, label %8, !dbg !9457

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9450, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 %10, metadata !9449, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 %11, metadata !9447, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 %12, metadata !9446, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 %13, metadata !9442, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 %14, metadata !9443, metadata !DIExpression()), !dbg !9451
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %12, i32 1, !dbg !9458
  %16 = load i32, i32* %15, align 4, !dbg !9458
  %17 = icmp ult i32 %9, %16, !dbg !9461
  %18 = xor i1 %17, true, !dbg !9462
  %19 = zext i1 %18 to i32, !dbg !9462
  %20 = add i32 %12, %19, !dbg !9462
  call void @llvm.dbg.value(metadata i32 undef, metadata !9450, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 %20, metadata !9446, metadata !DIExpression()), !dbg !9451
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %20, i32 0, !dbg !9463
  %22 = load i32, i32* %21, align 4, !dbg !9463
  %23 = add i32 %22, %10, !dbg !9464
  call void @llvm.dbg.value(metadata i32 %23, metadata !9449, metadata !DIExpression()), !dbg !9451
  %24 = icmp ult i32 %23, %13, !dbg !9465
  br i1 %24, label %46, label %25, !dbg !9467

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !9468
  call void @llvm.dbg.value(metadata i32 %26, metadata !9448, metadata !DIExpression()), !dbg !9451
  %27 = icmp ult i32 %14, %26, !dbg !9470
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !9472
  call void @llvm.dbg.value(metadata i32 %28, metadata !9448, metadata !DIExpression()), !dbg !9451
  %29 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 0, !dbg !9473
  %30 = load i32, i32* %29, align 4, !dbg !9473
  %31 = icmp eq i32 %30, %28, !dbg !9475
  br i1 %31, label %32, label %36, !dbg !9476

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 1, !dbg !9477
  %34 = load i32, i32* %33, align 4, !dbg !9479
  %35 = add i32 %34, 1, !dbg !9479
  store i32 %35, i32* %33, align 4, !dbg !9479
  br label %42, !dbg !9480

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !9481
  %38 = zext i1 %37 to i32, !dbg !9484
  %39 = add nsw i32 %11, %38, !dbg !9484
  call void @llvm.dbg.value(metadata i32 %39, metadata !9447, metadata !DIExpression()), !dbg !9451
  %40 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 1, !dbg !9485
  store i32 1, i32* %40, align 4, !dbg !9486
  %41 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 0, !dbg !9487
  store i32 %28, i32* %41, align 4, !dbg !9488
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !9451
  call void @llvm.dbg.value(metadata i32 %43, metadata !9447, metadata !DIExpression()), !dbg !9451
  %44 = add i32 %28, %13, !dbg !9489
  call void @llvm.dbg.value(metadata i32 %44, metadata !9442, metadata !DIExpression()), !dbg !9451
  %45 = sub i32 %14, %28, !dbg !9490
  call void @llvm.dbg.value(metadata i32 %45, metadata !9443, metadata !DIExpression()), !dbg !9451
  br label %46, !dbg !9491

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !9492
  call void @llvm.dbg.value(metadata i32 %49, metadata !9447, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 %48, metadata !9442, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 %47, metadata !9443, metadata !DIExpression()), !dbg !9451
  %50 = add nuw i32 %9, 1, !dbg !9493
  %51 = select i1 %17, i32 %50, i32 1, !dbg !9493
  call void @llvm.dbg.value(metadata i32 %51, metadata !9450, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 %23, metadata !9449, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.value(metadata i32 %20, metadata !9446, metadata !DIExpression()), !dbg !9451
  %52 = icmp eq i32 %47, 0, !dbg !9454
  br i1 %52, label %53, label %8, !dbg !9457, !llvm.loop !9494

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !9496
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !9497 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9501
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9502
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !9501
  store %struct.hal_cache_region_config_t* %3, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9503
  %4 = tail call i32 @custom_get_fat_addr() #20, !dbg !9504
  %5 = tail call i32 @custom_get_fat_len() #20, !dbg !9505
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9506
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !9507
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !9506
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0), %struct.hal_cache_region_config_t* noundef nonnull %8) #21, !dbg !9508
  %10 = tail call i32 @custom_get_fat_addr() #20, !dbg !9509
  %11 = tail call i32 @custom_get_fat_len() #20, !dbg !9510
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0)) #21, !dbg !9511
  call void @llvm.dbg.value(metadata i32 %12, metadata !9499, metadata !DIExpression()), !dbg !9512
  %13 = icmp eq i32 %12, 0, !dbg !9513
  br i1 %13, label %14, label %46, !dbg !9515

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !9500, metadata !DIExpression()), !dbg !9512
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !9516
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !9518
  call void @llvm.dbg.value(metadata i32 0, metadata !9500, metadata !DIExpression()), !dbg !9512
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !9519
  %16 = icmp eq i32 %15, 0, !dbg !9521
  br i1 %16, label %34, label %17, !dbg !9522

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !9500, metadata !DIExpression()), !dbg !9512
  %22 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !9523
  %23 = load i32, i32* %22, align 4, !dbg !9523
  %24 = add i32 %20, %23, !dbg !9525
  %25 = icmp ugt i32 %18, %21, !dbg !9526
  br i1 %25, label %26, label %27, !dbg !9528

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !9529
  br label %27, !dbg !9531

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !9532
  call void @llvm.dbg.value(metadata i32 %29, metadata !9500, metadata !DIExpression()), !dbg !9512
  %30 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !9519
  %31 = load i32, i32* %30, align 4, !dbg !9519
  %32 = icmp eq i32 %31, 0, !dbg !9521
  br i1 %32, label %33, label %17, !dbg !9522, !llvm.loop !9533

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !9525
  br label %34, !dbg !9522

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !9535
  %36 = mul i32 %35, -5, !dbg !9536
  %37 = add i32 %36, 262144, !dbg !9537
  %38 = lshr i32 %37, 9, !dbg !9538
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !9539
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #21, !dbg !9540
  call void @llvm.dbg.value(metadata i32 0, metadata !9499, metadata !DIExpression()), !dbg !9512
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !9541
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !9542
  %42 = load i8, i8* %41, align 1, !dbg !9542
  %43 = icmp eq i8 %42, 3, !dbg !9543
  br i1 %43, label %44, label %46, !dbg !9543

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #21, !dbg !9544
  call void @llvm.dbg.value(metadata i32 %45, metadata !9499, metadata !DIExpression()), !dbg !9512
  br label %46, !dbg !9546

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !9512
  ret i32 %47, !dbg !9547
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !9548 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9552, metadata !DIExpression()), !dbg !9553
  %2 = icmp eq i32 %0, 0, !dbg !9554
  br i1 %2, label %3, label %9, !dbg !9556

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #20, !dbg !9557
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !9559
  %5 = icmp slt i32 %4, 0, !dbg !9560
  br i1 %5, label %6, label %7, !dbg !9562

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !9563
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.131, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.132, i32 0, i32 0)) #23, !dbg !9563
  unreachable, !dbg !9563

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #20, !dbg !9568
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !9569
  br label %9, !dbg !9570

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9571
  ret void, !dbg !9572
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !9573 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !9574
  %1 = tail call i32 @CMEM_Init_NOR() #21, !dbg !9575
  ret i32 %1, !dbg !9576
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !9577 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !9580
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9581
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9582
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !9583
  %4 = load i16, i16* %3, align 2, !dbg !9583
  %5 = zext i16 %4 to i32, !dbg !9581
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9584
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !9585
  store %struct.hal_cache_region_config_t* %6, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9586
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !9587
  %8 = bitcast %struct.hal_cache_region_config_t* %7 to i8*, !dbg !9587
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.hal_cache_region_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #20, !dbg !9588
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !9589
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !9590
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !9591
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !9592
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !9593
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9594
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !9595
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !9596
  %13 = load i32, i32* %12, align 4, !dbg !9596
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #20, !dbg !9597
  call void @llvm.dbg.value(metadata i32 %14, metadata !9579, metadata !DIExpression()), !dbg !9598
  %15 = icmp eq i32 %14, -120, !dbg !9599
  br i1 %15, label %16, label %17, !dbg !9602

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !9603
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.131, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.132, i32 0, i32 0)) #23, !dbg !9603
  unreachable, !dbg !9603

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0)) #21, !dbg !9605
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !9606
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #21, !dbg !9607
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !9608
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !9609
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9610
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !9611
  ret i32 0, !dbg !9612
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #10 !dbg !9613 {
  ret void, !dbg !9614
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !9615 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9618
  call void @llvm.dbg.value(metadata i32 %1, metadata !9617, metadata !DIExpression()), !dbg !9619
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !9620
  br i1 %2, label %4, label %3, !dbg !9622

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !9623
  br label %4, !dbg !9625

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !9626
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !9626
  ret i32 %5, !dbg !9627
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !9628 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9631
  call void @llvm.dbg.value(metadata i32 %1, metadata !9630, metadata !DIExpression()), !dbg !9632
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !9633
  br i1 %2, label %3, label %4, !dbg !9635

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !9636
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !9638
  ret void, !dbg !9639

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !9640
  tail call void @Flash_ReturnReady() #20, !dbg !9642
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.137, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.138, i32 0, i32 0)) #23, !dbg !9642
  unreachable, !dbg !9642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #10 !dbg !9646 {
  ret void, !dbg !9647
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !9648 {
  br label %1, !dbg !9651

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #21, !dbg !9652
  call void @llvm.dbg.value(metadata i32 %2, metadata !9650, metadata !DIExpression()), !dbg !9654
  %3 = icmp eq i32 %2, 0, !dbg !9655
  br i1 %3, label %4, label %1, !dbg !9656, !llvm.loop !9657

4:                                                ; preds = %1
  ret void, !dbg !9659
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !9660 {
  tail call void @FreeFDMLock() #21, !dbg !9661
  ret void, !dbg !9662
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9663 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9706, metadata !DIExpression()), !dbg !9712
  call void @llvm.dbg.value(metadata i32 %1, metadata !9707, metadata !DIExpression()), !dbg !9712
  call void @llvm.dbg.value(metadata i8* %2, metadata !9708, metadata !DIExpression()), !dbg !9712
  call void @llvm.dbg.value(metadata i32 %3, metadata !9709, metadata !DIExpression()), !dbg !9712
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !9713
  %6 = load i32, i32* %5, align 4, !dbg !9713
  call void @llvm.dbg.value(metadata i32 %6, metadata !9711, metadata !DIExpression()), !dbg !9712
  %7 = icmp ule i32 %6, %1, !dbg !9714
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !9716
  br i1 %10, label %26, label %11, !dbg !9716

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9717
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !9717
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !9717
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !9718
  %16 = load i8*, i8** %15, align 4, !dbg !9718
  %17 = ptrtoint i8* %16 to i32, !dbg !9719
  %18 = add i32 %17, %1, !dbg !9720
  call void @llvm.dbg.value(metadata i32 %18, metadata !9710, metadata !DIExpression()), !dbg !9712
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9721
  %20 = load i8, i8* %19, align 4, !dbg !9721, !range !2630
  %21 = icmp eq i8 %20, 0, !dbg !9721
  br i1 %21, label %22, label %23, !dbg !9723

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !9724
  br label %23, !dbg !9726

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #21, !dbg !9727
  %24 = inttoptr i32 %18 to i8*, !dbg !9728
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #20, !dbg !9729
  tail call void @release_FDM_lock() #21, !dbg !9730
  br label %26, !dbg !9731

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !9712
  ret i32 %27, !dbg !9732
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !9733 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9737, metadata !DIExpression()), !dbg !9739
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9740
  %3 = load i8, i8* %2, align 4, !dbg !9740, !range !2630
  %4 = icmp eq i8 %3, 0, !dbg !9740
  br i1 %4, label %5, label %18, !dbg !9742

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #21, !dbg !9743
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !9744
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !9744
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !9745
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !9745
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9746
  %11 = load i8*, i8** %10, align 4, !dbg !9746
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !9747
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !9748
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #20, !dbg !9749
  call void @llvm.dbg.value(metadata i32 %14, metadata !9738, metadata !DIExpression()), !dbg !9739
  tail call void @release_FDM_lock() #21, !dbg !9750
  %15 = icmp slt i32 %14, 0, !dbg !9751
  br i1 %15, label %16, label %17, !dbg !9753

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !9754
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.137, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.138, i32 0, i32 0)) #23, !dbg !9754
  unreachable, !dbg !9754

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !9759
  br label %18, !dbg !9760

18:                                               ; preds = %1, %17
  ret void, !dbg !9760
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9761 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9763, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.value(metadata i32 %1, metadata !9764, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.value(metadata i8* %2, metadata !9765, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.value(metadata i32 %3, metadata !9766, metadata !DIExpression()), !dbg !9784
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !9785
  %7 = load i32, i32* %6, align 4, !dbg !9785
  call void @llvm.dbg.value(metadata i32 %7, metadata !9769, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.value(metadata i32 0, metadata !9770, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.value(metadata i32 0, metadata !9771, metadata !DIExpression()), !dbg !9784
  %8 = icmp ugt i32 %7, %1, !dbg !9786
  br i1 %8, label %9, label %101, !dbg !9788

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !9789
  %11 = icmp ugt i32 %10, %7, !dbg !9791
  br i1 %11, label %101, label %12, !dbg !9792

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9793
  %14 = load i8, i8* %13, align 4, !dbg !9793, !range !2630
  %15 = icmp eq i8 %14, 0, !dbg !9793
  br i1 %15, label %16, label %17, !dbg !9795

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !9796
  br label %17, !dbg !9798

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #21, !dbg !9799
  %18 = bitcast i16* %5 to i8*, !dbg !9800
  call void @llvm.dbg.value(metadata i32 0, metadata !9770, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.value(metadata i32 0, metadata !9771, metadata !DIExpression()), !dbg !9784
  %19 = icmp eq i32 %3, 0, !dbg !9801
  br i1 %19, label %99, label %20, !dbg !9802

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !9802

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !9771, metadata !DIExpression()), !dbg !9784
  %27 = load i8*, i8** %21, align 4, !dbg !9803
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !9804
  %29 = bitcast i8* %28 to i8**, !dbg !9804
  %30 = load i8*, i8** %29, align 4, !dbg !9804
  %31 = ptrtoint i8* %30 to i32, !dbg !9805
  %32 = add i32 %31, %1, !dbg !9806
  %33 = add i32 %32, %26, !dbg !9807
  call void @llvm.dbg.value(metadata i32 %33, metadata !9767, metadata !DIExpression()), !dbg !9784
  %34 = add i32 %26, %22, !dbg !9808
  call void @llvm.dbg.value(metadata i32 %34, metadata !9768, metadata !DIExpression()), !dbg !9784
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9809
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !9810
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !9810
  %38 = add i32 %26, %1, !dbg !9811
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #20, !dbg !9812
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #20, !dbg !9813
  %41 = and i32 %33, 1, !dbg !9814
  %42 = icmp eq i32 %41, 0, !dbg !9814
  br i1 %42, label %43, label %46, !dbg !9815

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !9816
  %45 = icmp eq i32 %44, 1, !dbg !9817
  br i1 %45, label %46, label %57, !dbg !9818

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9819
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !9821
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !9821
  %50 = load i8*, i8** %21, align 4, !dbg !9822
  %51 = inttoptr i32 %33 to i8*, !dbg !9823
  %52 = inttoptr i32 %34 to i8*, !dbg !9824
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #20, !dbg !9825
  call void @llvm.dbg.value(metadata i32 %53, metadata !9770, metadata !DIExpression()), !dbg !9784
  %54 = icmp eq i32 %53, 0, !dbg !9826
  br i1 %54, label %55, label %99, !dbg !9828

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !9829
  call void @llvm.dbg.value(metadata i32 %56, metadata !9771, metadata !DIExpression()), !dbg !9784
  br label %96, !dbg !9830

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !9831
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #20, !dbg !9832
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #20, !dbg !9833
  call void @llvm.dbg.value(metadata i32 %60, metadata !9772, metadata !DIExpression()), !dbg !9834
  call void @llvm.dbg.value(metadata i32 %44, metadata !9776, metadata !DIExpression()), !dbg !9834
  %61 = add i32 %60, %33, !dbg !9835
  %62 = sub i32 0, %60, !dbg !9836
  %63 = and i32 %61, %62, !dbg !9837
  call void @llvm.dbg.value(metadata i32 %63, metadata !9777, metadata !DIExpression()), !dbg !9834
  %64 = add i32 %32, %3, !dbg !9838
  %65 = icmp ugt i32 %64, %63, !dbg !9840
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !9841
  call void @llvm.dbg.value(metadata i32 %67, metadata !9776, metadata !DIExpression()), !dbg !9834
  %68 = and i32 %67, -2, !dbg !9842
  call void @llvm.dbg.value(metadata i32 %68, metadata !9776, metadata !DIExpression()), !dbg !9834
  %69 = icmp ne i32 %68, 2, !dbg !9843
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !9844
  br i1 %72, label %85, label %73, !dbg !9844

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #22, !dbg !9800
  call void @llvm.dbg.value(metadata i8* %18, metadata !9783, metadata !DIExpression()), !dbg !9845
  %74 = inttoptr i32 %34 to i8*, !dbg !9846
  %75 = load i8, i8* %74, align 1, !dbg !9847
  call void @llvm.dbg.value(metadata i8 undef, metadata !9778, metadata !DIExpression()), !dbg !9845
  store i8 %75, i8* %18, align 2, !dbg !9848
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !9849
  %77 = load i8, i8* %76, align 1, !dbg !9850
  store i8 %77, i8* %24, align 1, !dbg !9851
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9852
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !9853
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !9853
  %81 = load i8*, i8** %21, align 4, !dbg !9854
  %82 = inttoptr i32 %33 to i8*, !dbg !9855
  call void @llvm.dbg.value(metadata i16* %5, metadata !9778, metadata !DIExpression(DW_OP_deref)), !dbg !9845
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #20, !dbg !9856
  call void @llvm.dbg.value(metadata i32 %83, metadata !9770, metadata !DIExpression()), !dbg !9784
  %84 = icmp eq i32 %83, 0, !dbg !9857
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #22, !dbg !9859
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9860
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !9864
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !9864
  %89 = load i8*, i8** %21, align 4, !dbg !9865
  %90 = inttoptr i32 %33 to i8*, !dbg !9866
  %91 = inttoptr i32 %34 to i8*, !dbg !9867
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #20, !dbg !9868
  call void @llvm.dbg.value(metadata i32 %92, metadata !9770, metadata !DIExpression()), !dbg !9784
  %93 = icmp eq i32 %92, 0, !dbg !9869
  br i1 %93, label %94, label %99, !dbg !9871

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !9770, metadata !DIExpression()), !dbg !9784
  %95 = add i32 %68, %26, !dbg !9872
  call void @llvm.dbg.value(metadata i32 %83, metadata !9770, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.value(metadata i32 %26, metadata !9771, metadata !DIExpression()), !dbg !9784
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !9873
  call void @llvm.dbg.value(metadata i32 0, metadata !9770, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.value(metadata i32 %97, metadata !9771, metadata !DIExpression()), !dbg !9784
  %98 = icmp ult i32 %97, %3, !dbg !9801
  br i1 %98, label %25, label %99, !dbg !9802, !llvm.loop !9874

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #21, !dbg !9876
  br label %101, !dbg !9877

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !9784
  ret i32 %102, !dbg !9877
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9878 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9882, metadata !DIExpression()), !dbg !9886
  call void @llvm.dbg.value(metadata i32 %1, metadata !9883, metadata !DIExpression()), !dbg !9886
  %3 = and i32 %1, 16777215, !dbg !9887
  call void @llvm.dbg.value(metadata i32 %3, metadata !9885, metadata !DIExpression()), !dbg !9886
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9888
  %5 = load i8, i8* %4, align 4, !dbg !9888, !range !2630
  %6 = icmp eq i8 %5, 0, !dbg !9888
  br i1 %6, label %7, label %8, !dbg !9890

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !9891
  br label %8, !dbg !9893

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !9894
  %10 = load i32, i32* %9, align 4, !dbg !9894
  %11 = icmp ult i32 %3, %10, !dbg !9896
  br i1 %11, label %12, label %27, !dbg !9897

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #21, !dbg !9898
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !9899
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !9899
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !9900
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !9900
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9901
  %18 = load i8*, i8** %17, align 4, !dbg !9901
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #20, !dbg !9902
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !9903
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !9904
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !9904
  %23 = load i8*, i8** %17, align 4, !dbg !9905
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #20, !dbg !9906
  call void @llvm.dbg.value(metadata i32 %24, metadata !9884, metadata !DIExpression()), !dbg !9886
  tail call void @release_FDM_lock() #21, !dbg !9907
  %25 = icmp eq i32 %24, 0, !dbg !9908
  %26 = select i1 %25, i32 0, i32 6, !dbg !9886
  br label %27, !dbg !9886

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !9886
  ret i32 %28, !dbg !9910
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !9911 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !9912
  br i1 %1, label %3, label %2, !dbg !9914

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #20, !dbg !9915
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #21, !dbg !9917
  store i1 true, i1* @flash_init_status, align 4, !dbg !9918
  br label %3, !dbg !9919

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !9920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #4 section ".ram_code" !dbg !9921 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !9922
  %2 = select i1 %1, i32 0, i32 -5, !dbg !9922
  ret i32 %2, !dbg !9923
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !9924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9928, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.value(metadata i32 %1, metadata !9929, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.value(metadata i8* %2, metadata !9930, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9931, metadata !DIExpression()), !dbg !9935
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9936
  call void @llvm.dbg.value(metadata i8* %4, metadata !9932, metadata !DIExpression()), !dbg !9935
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !9937
  %6 = ptrtoint i8* %5 to i32, !dbg !9938
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9939
  %8 = bitcast i8* %7 to i8**, !dbg !9939
  %9 = load i8*, i8** %8, align 4, !dbg !9939
  %10 = ptrtoint i8* %9 to i32, !dbg !9940
  %11 = shl i32 %1, 9, !dbg !9941
  %12 = add i32 %11, %6, !dbg !9942
  %13 = sub i32 %12, %10, !dbg !9943
  call void @llvm.dbg.value(metadata i32 %13, metadata !9934, metadata !DIExpression()), !dbg !9935
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !9944
  call void @llvm.dbg.value(metadata i32 %14, metadata !9933, metadata !DIExpression()), !dbg !9935
  %15 = icmp eq i32 %14, 0, !dbg !9945
  %16 = select i1 %15, i32 0, i32 -13, !dbg !9935
  ret i32 %16, !dbg !9947
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !9948 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9950, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.value(metadata i32 %1, metadata !9951, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.value(metadata i8* %2, metadata !9952, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9953, metadata !DIExpression()), !dbg !9957
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9958
  call void @llvm.dbg.value(metadata i8* %4, metadata !9954, metadata !DIExpression()), !dbg !9957
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !9959
  %6 = ptrtoint i8* %5 to i32, !dbg !9960
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9961
  %8 = bitcast i8* %7 to i8**, !dbg !9961
  %9 = load i8*, i8** %8, align 4, !dbg !9961
  %10 = ptrtoint i8* %9 to i32, !dbg !9962
  %11 = shl i32 %1, 9, !dbg !9963
  %12 = add i32 %11, %6, !dbg !9964
  %13 = sub i32 %12, %10, !dbg !9965
  call void @llvm.dbg.value(metadata i32 %13, metadata !9956, metadata !DIExpression()), !dbg !9957
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !9966
  call void @llvm.dbg.value(metadata i32 %14, metadata !9955, metadata !DIExpression()), !dbg !9957
  %15 = icmp eq i32 %14, 0, !dbg !9967
  %16 = select i1 %15, i32 0, i32 -14, !dbg !9957
  ret i32 %16, !dbg !9969
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !9970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9974, metadata !DIExpression()), !dbg !9976
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #21, !dbg !9977
  call void @llvm.dbg.value(metadata i32 %2, metadata !9975, metadata !DIExpression()), !dbg !9976
  %3 = icmp eq i32 %2, 0, !dbg !9978
  %4 = select i1 %3, i32 0, i32 -15, !dbg !9976
  ret i32 %4, !dbg !9980
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !9981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9983, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9984, metadata !DIExpression()), !dbg !9986
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9987
  call void @llvm.dbg.value(metadata i8* %2, metadata !9985, metadata !DIExpression()), !dbg !9986
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #20, !dbg !9988
  ret i32 %3, !dbg !9989
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !9990 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9992, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9993, metadata !DIExpression()), !dbg !9995
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9996
  call void @llvm.dbg.value(metadata i8* %2, metadata !9994, metadata !DIExpression()), !dbg !9995
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #20, !dbg !9997
  ret i32 %3, !dbg !9998
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !9999 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10003, metadata !DIExpression()), !dbg !10008
  call void @llvm.dbg.value(metadata i32* %1, metadata !10004, metadata !DIExpression()), !dbg !10008
  call void @llvm.dbg.value(metadata i32* %2, metadata !10005, metadata !DIExpression()), !dbg !10008
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10006, metadata !DIExpression()), !dbg !10008
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10009
  call void @llvm.dbg.value(metadata i8* %4, metadata !10007, metadata !DIExpression()), !dbg !10008
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #20, !dbg !10010
  store i32 %5, i32* %1, align 4, !dbg !10011
  %6 = icmp eq i32 %5, -1, !dbg !10012
  br i1 %6, label %10, label %7, !dbg !10014

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #20, !dbg !10015
  %9 = urem i32 %0, %8, !dbg !10016
  store i32 %9, i32* %2, align 4, !dbg !10017
  br label %10, !dbg !10018

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !10008
  ret i32 %11, !dbg !10019
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !10020 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10024, metadata !DIExpression()), !dbg !10029
  call void @llvm.dbg.value(metadata i32 %1, metadata !10025, metadata !DIExpression()), !dbg !10029
  call void @llvm.dbg.value(metadata i32* %2, metadata !10026, metadata !DIExpression()), !dbg !10029
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10027, metadata !DIExpression()), !dbg !10029
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10030
  call void @llvm.dbg.value(metadata i8* %4, metadata !10028, metadata !DIExpression()), !dbg !10029
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !10031
  %6 = ptrtoint i8* %5 to i32, !dbg !10032
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10033
  %8 = bitcast i8* %7 to i8**, !dbg !10033
  %9 = load i8*, i8** %8, align 4, !dbg !10033
  %10 = ptrtoint i8* %9 to i32, !dbg !10034
  %11 = add i32 %6, %1, !dbg !10035
  %12 = sub i32 %11, %10, !dbg !10036
  store i32 %12, i32* %2, align 4, !dbg !10037
  ret i32 0, !dbg !10038
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !10039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10043, metadata !DIExpression()), !dbg !10044
  %2 = add i32 %0, 2, !dbg !10045
  %3 = icmp ult i32 %2, 9, !dbg !10045
  br i1 %3, label %5, label %4, !dbg !10045

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #20, !dbg !10046
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.137, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.138, i32 0, i32 0)) #23, !dbg !10046
  unreachable, !dbg !10046

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !10045
  %7 = lshr i16 433, %6, !dbg !10045
  %8 = and i16 %7, 1, !dbg !10045
  %9 = icmp eq i16 %8, 0, !dbg !10045
  br i1 %9, label %4, label %10, !dbg !10045

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !10045
  %12 = load i32, i32* %11, align 4, !dbg !10045
  ret i32 %12, !dbg !10056
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !10057 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10062, metadata !DIExpression()), !dbg !10065
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !10066
  call void @llvm.dbg.value(metadata i32 %2, metadata !10064, metadata !DIExpression()), !dbg !10065
  %3 = icmp eq i32 %2, -1, !dbg !10067
  br i1 %3, label %4, label %5, !dbg !10069

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !10070
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.137, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.138, i32 0, i32 0)) #23, !dbg !10070
  unreachable, !dbg !10070

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #21, !dbg !10075
  call void @llvm.dbg.value(metadata i32 %6, metadata !10063, metadata !DIExpression()), !dbg !10065
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !10076

7:                                                ; preds = %5
  br label %10, !dbg !10077

8:                                                ; preds = %5
  br label %10, !dbg !10081

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !10084
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.137, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.138, i32 0, i32 0)) #23, !dbg !10084
  unreachable, !dbg !10084

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !10089
  ret i32 %11, !dbg !10090
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !10091 {
  %1 = tail call i32 @NOR_init() #21, !dbg !10092
  ret i32 0, !dbg !10093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #10 !dbg !10094 {
  ret i32 0, !dbg !10095
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10100, metadata !DIExpression()), !dbg !10105
  call void @llvm.dbg.value(metadata i32 %1, metadata !10101, metadata !DIExpression()), !dbg !10105
  call void @llvm.dbg.value(metadata i32 0, metadata !10104, metadata !DIExpression()), !dbg !10105
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !10106

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !10107
  %5 = icmp eq i32 %4, 0, !dbg !10111
  br i1 %5, label %12, label %22, !dbg !10112

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !10113
  %8 = icmp eq i32 %7, 0, !dbg !10117
  br i1 %8, label %12, label %22, !dbg !10118

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !10119
  %11 = icmp eq i32 %10, 0, !dbg !10123
  br i1 %11, label %12, label %22, !dbg !10124

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !10125
  call void @llvm.dbg.value(metadata i32 %13, metadata !10104, metadata !DIExpression()), !dbg !10105
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !10126
  call void @llvm.dbg.value(metadata i32 %14, metadata !10103, metadata !DIExpression()), !dbg !10105
  %15 = icmp eq i32 %14, -1, !dbg !10127
  br i1 %15, label %22, label %16, !dbg !10129

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !10130
  call void @llvm.dbg.value(metadata i32 %17, metadata !10103, metadata !DIExpression()), !dbg !10105
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #21, !dbg !10131
  call void @llvm.dbg.value(metadata i32 %18, metadata !10102, metadata !DIExpression()), !dbg !10105
  %19 = icmp eq i32 %18, 0, !dbg !10132
  br i1 %19, label %22, label %20, !dbg !10134

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #21, !dbg !10135
  br label %22, !dbg !10137

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !10105
  ret i32 %23, !dbg !10138
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !10139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10143, metadata !DIExpression()), !dbg !10148
  call void @llvm.dbg.value(metadata i8* %1, metadata !10144, metadata !DIExpression()), !dbg !10148
  call void @llvm.dbg.value(metadata i32 %2, metadata !10145, metadata !DIExpression()), !dbg !10148
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10146, metadata !DIExpression()), !dbg !10148
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !10149
  call void @llvm.dbg.value(metadata i32 %4, metadata !10147, metadata !DIExpression()), !dbg !10148
  %5 = icmp eq i32 %4, 0, !dbg !10150
  br i1 %5, label %8, label %6, !dbg !10152

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !10153
  br label %8, !dbg !10155

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !10148
  ret i32 %9, !dbg !10156
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !10157 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10161, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata i8* %1, metadata !10162, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata i32 %2, metadata !10163, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10164, metadata !DIExpression()), !dbg !10169
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !10170
  call void @llvm.dbg.value(metadata i32 %4, metadata !10165, metadata !DIExpression()), !dbg !10169
  %5 = icmp eq i32 %4, 0, !dbg !10171
  br i1 %5, label %8, label %6, !dbg !10173

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !10174
  br label %21, !dbg !10176

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) #20, !dbg !10177
  br i1 %9, label %10, label %21, !dbg !10178

10:                                               ; preds = %8
  %11 = and i32 %0, -32, !dbg !10179
  call void @llvm.dbg.value(metadata i32 %11, metadata !10166, metadata !DIExpression()), !dbg !10181
  %12 = add i32 %0, 32
  %13 = add i32 %12, %2
  %14 = and i32 %13, -32
  call void @llvm.dbg.value(metadata i32 %11, metadata !10166, metadata !DIExpression()), !dbg !10181
  %15 = icmp ugt i32 %11, %14, !dbg !10182
  br i1 %15, label %21, label %16, !dbg !10184

16:                                               ; preds = %10, %16
  %17 = phi i32 [ %19, %16 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !10166, metadata !DIExpression()), !dbg !10181
  %18 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %17) #20, !dbg !10185
  %19 = add i32 %17, 32, !dbg !10187
  call void @llvm.dbg.value(metadata i32 %19, metadata !10166, metadata !DIExpression()), !dbg !10181
  %20 = icmp ugt i32 %19, %14, !dbg !10182
  br i1 %20, label %21, label %16, !dbg !10184, !llvm.loop !10188

21:                                               ; preds = %16, %10, %8, %6
  %22 = phi i32 [ %7, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %16 ], !dbg !10169
  ret i32 %22, !dbg !10190
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !10191 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10195, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata i32 %1, metadata !10196, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata i8* %0, metadata !10197, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata i32 0, metadata !10198, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata i32 0, metadata !10199, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata i32 0, metadata !10200, metadata !DIExpression()), !dbg !10201
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10202
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !10202
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !10202
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !10203
  %7 = load i32, i32* %6, align 4, !dbg !10203
  call void @llvm.dbg.value(metadata i32 %7, metadata !10200, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata i32 0, metadata !10199, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata i32 0, metadata !10198, metadata !DIExpression()), !dbg !10201
  %8 = icmp ugt i32 %7, %1, !dbg !10204
  br i1 %8, label %23, label %9, !dbg !10205

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !10206
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10200, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata i32 %12, metadata !10199, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata i32 %13, metadata !10198, metadata !DIExpression()), !dbg !10201
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 0, !dbg !10208
  %15 = load i32, i32* %14, align 4, !dbg !10208
  %16 = mul i32 %15, %10, !dbg !10209
  %17 = add i32 %16, %13, !dbg !10210
  call void @llvm.dbg.value(metadata i32 %17, metadata !10198, metadata !DIExpression()), !dbg !10201
  %18 = add i32 %12, 1, !dbg !10211
  call void @llvm.dbg.value(metadata i32 %18, metadata !10199, metadata !DIExpression()), !dbg !10201
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 1, !dbg !10212
  %20 = load i32, i32* %19, align 4, !dbg !10212
  %21 = add i32 %20, %11, !dbg !10213
  call void @llvm.dbg.value(metadata i32 %21, metadata !10200, metadata !DIExpression()), !dbg !10201
  %22 = icmp ugt i32 %21, %1, !dbg !10204
  br i1 %22, label %23, label %9, !dbg !10205, !llvm.loop !10214

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !10216
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !10201
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !10201
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !10201
  call void @llvm.dbg.value(metadata i8* %0, metadata !10197, metadata !DIExpression()), !dbg !10201
  %28 = sub i32 %1, %27, !dbg !10217
  %29 = add i32 %28, %24, !dbg !10218
  %30 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %26, i32 0, !dbg !10219
  %31 = load i32, i32* %30, align 4, !dbg !10219
  %32 = mul i32 %29, %31, !dbg !10220
  %33 = add i32 %32, %25, !dbg !10221
  call void @llvm.dbg.value(metadata i32 %33, metadata !10198, metadata !DIExpression()), !dbg !10201
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !10222
  %35 = bitcast i8* %34 to i8**, !dbg !10222
  %36 = load i8*, i8** %35, align 4, !dbg !10222
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !10223
  ret i8* %37, !dbg !10224
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !10225 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10227, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.value(metadata i32 %1, metadata !10228, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.value(metadata i32 %2, metadata !10229, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.value(metadata i8* %0, metadata !10230, metadata !DIExpression()), !dbg !10231
  %4 = icmp eq i32 %2, 0, !dbg !10232
  br i1 %4, label %6, label %5, !dbg !10235

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !10236
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.153, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.154, i32 0, i32 0)) #23, !dbg !10236
  unreachable, !dbg !10236

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !10230, metadata !DIExpression()), !dbg !10231
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #21, !dbg !10238
  %8 = inttoptr i32 %7 to i8*, !dbg !10239
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !10240
  %10 = bitcast i8* %9 to i8**, !dbg !10240
  store i8* %8, i8** %10, align 4, !dbg !10241
  ret i8* %8, !dbg !10242
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #13 section ".ram_code" !dbg !1962 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1966, metadata !DIExpression()), !dbg !10243
  call void @llvm.dbg.value(metadata i32 %1, metadata !1967, metadata !DIExpression()), !dbg !10243
  call void @llvm.dbg.value(metadata i8* %0, metadata !1968, metadata !DIExpression()), !dbg !10243
  call void @llvm.dbg.value(metadata i32 0, metadata !2013, metadata !DIExpression()), !dbg !10243
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !10244
  %4 = bitcast i8* %3 to [8 x [2 x %struct.hal_cache_region_config_t]]*, !dbg !10244
  %5 = and i32 %1, 7, !dbg !10246
  %6 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !10247
  %7 = load i32, i32* %6, align 4, !dbg !10247
  %8 = icmp eq i32 %7, -1, !dbg !10248
  br i1 %8, label %62, label %9, !dbg !10249

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !10250
  br i1 %10, label %54, label %11, !dbg !10253

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !10254
  %13 = load i32, i32* %12, align 4, !dbg !10254
  %14 = icmp eq i32 %13, -1, !dbg !10257
  br i1 %14, label %44, label %15, !dbg !10258

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !10259
  br i1 %16, label %35, label %17, !dbg !10262

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10263
  %19 = add i32 %18, 1, !dbg !10263
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !10263
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10265
  %21 = shl nuw nsw i32 1, %5, !dbg !10267
  %22 = and i32 %20, %21, !dbg !10268
  %23 = icmp eq i32 %22, 0, !dbg !10268
  br i1 %23, label %30, label %24, !dbg !10269

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !10270
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10272
  %26 = ptrtoint i8* %25 to i32, !dbg !10273
  %27 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10274
  store i32 %26, i32* %27, align 4, !dbg !10275
  call void @llvm.dbg.value(metadata i32 %26, metadata !2013, metadata !DIExpression()), !dbg !10243
  %28 = xor i32 %21, -1, !dbg !10276
  %29 = and i32 %20, %28, !dbg !10277
  br label %71, !dbg !10278

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !10279
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10281
  %32 = ptrtoint i8* %31 to i32, !dbg !10282
  %33 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10283
  store i32 %32, i32* %33, align 4, !dbg !10284
  call void @llvm.dbg.value(metadata i32 %32, metadata !2013, metadata !DIExpression()), !dbg !10243
  %34 = or i32 %20, %21, !dbg !10285
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !10286
  %37 = add i32 %36, 1, !dbg !10286
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !10286
  %38 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10288
  %39 = load i32, i32* %38, align 4, !dbg !10288
  call void @llvm.dbg.value(metadata i32 %39, metadata !2013, metadata !DIExpression()), !dbg !10243
  %40 = shl nuw nsw i32 1, %5, !dbg !10289
  %41 = xor i32 %40, -1, !dbg !10290
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10291
  %43 = and i32 %42, %41, !dbg !10291
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10292
  %46 = add i32 %45, 1, !dbg !10292
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !10292
  store i32 %1, i32* %12, align 4, !dbg !10294
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10295
  %48 = ptrtoint i8* %47 to i32, !dbg !10296
  %49 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10297
  store i32 %48, i32* %49, align 4, !dbg !10298
  call void @llvm.dbg.value(metadata i32 %48, metadata !2013, metadata !DIExpression()), !dbg !10243
  %50 = shl nuw nsw i32 1, %5, !dbg !10299
  %51 = xor i32 %50, -1, !dbg !10300
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10301
  %53 = and i32 %52, %51, !dbg !10301
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !10302
  %56 = add i32 %55, 1, !dbg !10302
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !10302
  %57 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10304
  %58 = load i32, i32* %57, align 4, !dbg !10304
  call void @llvm.dbg.value(metadata i32 %58, metadata !2013, metadata !DIExpression()), !dbg !10243
  %59 = shl nuw nsw i32 1, %5, !dbg !10305
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10306
  %61 = or i32 %60, %59, !dbg !10306
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10307
  %64 = add i32 %63, 1, !dbg !10307
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !10307
  store i32 %1, i32* %6, align 4, !dbg !10309
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10310
  %66 = ptrtoint i8* %65 to i32, !dbg !10311
  %67 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10312
  store i32 %66, i32* %67, align 4, !dbg !10313
  call void @llvm.dbg.value(metadata i32 %66, metadata !2013, metadata !DIExpression()), !dbg !10243
  %68 = shl nuw nsw i32 1, %5, !dbg !10314
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10315
  %70 = or i32 %69, %68, !dbg !10315
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !10316
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !10316
  call void @llvm.dbg.value(metadata i32 %73, metadata !2013, metadata !DIExpression()), !dbg !10243
  ret i32 %73, !dbg !10317
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !10318 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10320, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.value(metadata i32 %1, metadata !10321, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.value(metadata i8* %0, metadata !10322, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.value(metadata i32 0, metadata !10323, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.value(metadata i32 0, metadata !10324, metadata !DIExpression()), !dbg !10325
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10326
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !10326
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !10326
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !10327
  %7 = load i32, i32* %6, align 4, !dbg !10327
  call void @llvm.dbg.value(metadata i32 %7, metadata !10324, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.value(metadata i32 0, metadata !10323, metadata !DIExpression()), !dbg !10325
  %8 = icmp ugt i32 %7, %1, !dbg !10328
  br i1 %8, label %17, label %9, !dbg !10329

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10324, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.value(metadata i32 %11, metadata !10323, metadata !DIExpression()), !dbg !10325
  %12 = add i32 %11, 1, !dbg !10330
  call void @llvm.dbg.value(metadata i32 %12, metadata !10323, metadata !DIExpression()), !dbg !10325
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 1, !dbg !10332
  %14 = load i32, i32* %13, align 4, !dbg !10332
  %15 = add i32 %14, %10, !dbg !10333
  call void @llvm.dbg.value(metadata i32 %15, metadata !10324, metadata !DIExpression()), !dbg !10325
  %16 = icmp ugt i32 %15, %1, !dbg !10328
  br i1 %16, label %17, label %9, !dbg !10329, !llvm.loop !10334

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !10325
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 0, !dbg !10336
  %20 = load i32, i32* %19, align 4, !dbg !10336
  ret i32 %20, !dbg !10337
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !10338 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10340, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 %1, metadata !10341, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i8* %0, metadata !10342, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 0, metadata !10343, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 0, metadata !10344, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 0, metadata !10345, metadata !DIExpression()), !dbg !10346
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10347
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !10347
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !10347
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !10348
  %7 = load i32, i32* %6, align 4, !dbg !10348
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 0, !dbg !10349
  %9 = load i32, i32* %8, align 4, !dbg !10349
  %10 = mul i32 %9, %7, !dbg !10350
  call void @llvm.dbg.value(metadata i32 %10, metadata !10344, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 0, metadata !10345, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 0, metadata !10343, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 %1, metadata !10341, metadata !DIExpression()), !dbg !10346
  %11 = icmp ult i32 %10, %1, !dbg !10351
  br i1 %11, label %12, label %30, !dbg !10352

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !10353
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !10345, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 %16, metadata !10344, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 %17, metadata !10343, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 %18, metadata !10341, metadata !DIExpression()), !dbg !10346
  %19 = icmp eq i32 %14, 0, !dbg !10352
  br i1 %19, label %36, label %20, !dbg !10354

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !10355
  call void @llvm.dbg.value(metadata i32 %21, metadata !10345, metadata !DIExpression()), !dbg !10346
  %22 = sub i32 %18, %16, !dbg !10357
  call void @llvm.dbg.value(metadata i32 %22, metadata !10341, metadata !DIExpression()), !dbg !10346
  %23 = add i32 %17, 1, !dbg !10358
  call void @llvm.dbg.value(metadata i32 %23, metadata !10343, metadata !DIExpression()), !dbg !10346
  %24 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 1, !dbg !10359
  %25 = load i32, i32* %24, align 4, !dbg !10359
  %26 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 0, !dbg !10360
  %27 = load i32, i32* %26, align 4, !dbg !10360
  %28 = mul i32 %27, %25, !dbg !10361
  call void @llvm.dbg.value(metadata i32 %28, metadata !10344, metadata !DIExpression()), !dbg !10346
  %29 = icmp ugt i32 %22, %28, !dbg !10351
  br i1 %29, label %12, label %30, !dbg !10352, !llvm.loop !10362

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !10364
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !10346
  %34 = udiv i32 %32, %31, !dbg !10367
  %35 = add i32 %34, %33, !dbg !10368
  call void @llvm.dbg.value(metadata i32 %35, metadata !10345, metadata !DIExpression()), !dbg !10346
  br label %36, !dbg !10369

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !10370
  call void @llvm.dbg.value(metadata i32 %37, metadata !10345, metadata !DIExpression()), !dbg !10346
  ret i32 %37, !dbg !10371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #10 !dbg !10372 {
  ret i32 134217728, !dbg !10373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #10 !dbg !10374 {
  ret i32 3932160, !dbg !10375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #10 !dbg !10376 {
  ret i32 0, !dbg !10377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #10 !dbg !10378 {
  ret i32 262144, !dbg !10379
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !10380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10382, metadata !DIExpression()), !dbg !10384
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !10385
  call void @llvm.dbg.value(metadata i32 %2, metadata !10383, metadata !DIExpression()), !dbg !10384
  %3 = icmp eq i32 %2, 0, !dbg !10386
  br i1 %3, label %5, label %4, !dbg !10388

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !10389
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.153, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.154, i32 0, i32 0)) #23, !dbg !10389
  unreachable, !dbg !10389

5:                                                ; preds = %1
  ret void, !dbg !10394
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10395 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10399, metadata !DIExpression()), !dbg !10412
  call void @llvm.dbg.value(metadata i32 %1, metadata !10400, metadata !DIExpression()), !dbg !10412
  call void @llvm.dbg.value(metadata i8* %2, metadata !10401, metadata !DIExpression()), !dbg !10412
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10413
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10413
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10402, metadata !DIExpression()), !dbg !10414
  %7 = bitcast i32* %5 to i8*, !dbg !10415
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10415
  call void @llvm.dbg.value(metadata i32* %5, metadata !10411, metadata !DIExpression(DW_OP_deref)), !dbg !10412
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !10416
  call void @llvm.va_start(i8* nonnull %6), !dbg !10417
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10418
  %10 = load i32, i32* %9, align 4, !dbg !10418
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10418
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !10418
  call void @llvm.va_end(i8* nonnull %6), !dbg !10419
  %13 = load i32, i32* %5, align 4, !dbg !10420
  call void @llvm.dbg.value(metadata i32 %13, metadata !10411, metadata !DIExpression()), !dbg !10412
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !10421
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10422
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10422
  ret void, !dbg !10422
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #18

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #18

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10423 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10425, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.value(metadata i32 %1, metadata !10426, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.value(metadata i8* %2, metadata !10427, metadata !DIExpression()), !dbg !10430
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10431
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10431
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10428, metadata !DIExpression()), !dbg !10432
  %7 = bitcast i32* %5 to i8*, !dbg !10433
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10433
  call void @llvm.dbg.value(metadata i32* %5, metadata !10429, metadata !DIExpression(DW_OP_deref)), !dbg !10430
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !10434
  call void @llvm.va_start(i8* nonnull %6), !dbg !10435
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10436
  %10 = load i32, i32* %9, align 4, !dbg !10436
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10436
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !10436
  call void @llvm.va_end(i8* nonnull %6), !dbg !10437
  %13 = load i32, i32* %5, align 4, !dbg !10438
  call void @llvm.dbg.value(metadata i32 %13, metadata !10429, metadata !DIExpression()), !dbg !10430
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !10439
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10440
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10440
  ret void, !dbg !10440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10441 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10443, metadata !DIExpression()), !dbg !10448
  call void @llvm.dbg.value(metadata i32 %1, metadata !10444, metadata !DIExpression()), !dbg !10448
  call void @llvm.dbg.value(metadata i8* %2, metadata !10445, metadata !DIExpression()), !dbg !10448
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10449
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10449
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10446, metadata !DIExpression()), !dbg !10450
  %7 = bitcast i32* %5 to i8*, !dbg !10451
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10451
  call void @llvm.dbg.value(metadata i32* %5, metadata !10447, metadata !DIExpression(DW_OP_deref)), !dbg !10448
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !10452
  call void @llvm.va_start(i8* nonnull %6), !dbg !10453
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10454
  %10 = load i32, i32* %9, align 4, !dbg !10454
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10454
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !10454
  call void @llvm.va_end(i8* nonnull %6), !dbg !10455
  %13 = load i32, i32* %5, align 4, !dbg !10456
  call void @llvm.dbg.value(metadata i32 %13, metadata !10447, metadata !DIExpression()), !dbg !10448
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !10457
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10458
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10458
  ret void, !dbg !10458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #10 !dbg !10459 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10465, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %1, metadata !10466, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i8* %2, metadata !10467, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i8* %3, metadata !10468, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %4, metadata !10469, metadata !DIExpression()), !dbg !10470
  ret void, !dbg !10471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #2 section ".tcm_code" !dbg !10472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10474, metadata !DIExpression()), !dbg !10476
  %2 = shl i32 %0, 20, !dbg !10477
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10478
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !10479
  store volatile i32 %2, i32* %4, align 4, !dbg !10480
  %5 = load volatile i32, i32* %4, align 4, !dbg !10481
  %6 = or i32 %5, 65536, !dbg !10482
  store volatile i32 %6, i32* %4, align 4, !dbg !10483
  br label %7, !dbg !10484

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !10485
  %9 = and i32 %8, 1, !dbg !10486
  %10 = icmp eq i32 %9, 0, !dbg !10487
  br i1 %10, label %7, label %11, !dbg !10484, !llvm.loop !10488

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !10490
  %13 = lshr i32 %12, 8, !dbg !10491
  %14 = and i32 %13, 255, !dbg !10491
  call void @llvm.dbg.value(metadata i32 %14, metadata !10475, metadata !DIExpression()), !dbg !10476
  ret i32 %14, !dbg !10492
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !10493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10497, metadata !DIExpression()), !dbg !10499
  call void @llvm.dbg.value(metadata i32 %1, metadata !10498, metadata !DIExpression()), !dbg !10499
  call void @llvm.dbg.value(metadata i32 %1, metadata !10498, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !10499
  %3 = shl i32 %1, 24, !dbg !10500
  %4 = shl i32 %0, 20, !dbg !10501
  %5 = or i32 %4, %3, !dbg !10502
  %6 = or i32 %5, 131072, !dbg !10502
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10503
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !10504
  store volatile i32 %6, i32* %8, align 4, !dbg !10505
  %9 = load volatile i32, i32* %8, align 4, !dbg !10506
  %10 = or i32 %9, 65536, !dbg !10507
  store volatile i32 %10, i32* %8, align 4, !dbg !10508
  br label %11, !dbg !10509

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !10510
  %13 = and i32 %12, 1, !dbg !10511
  %14 = icmp eq i32 %13, 0, !dbg !10512
  br i1 %14, label %11, label %15, !dbg !10509, !llvm.loop !10513

15:                                               ; preds = %11
  ret void, !dbg !10515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #7 section ".tcm_code" !dbg !10516 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !10517
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !10518
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !10519
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !10520
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !10521
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !10522
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !10523
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !10524
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !10525
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !10526
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !10527
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !10528
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !10529
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !10530
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !10531
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !10532
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !10533
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !10534
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !10535
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !10536
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !10537
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !10538
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !10539
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !10540
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !10541
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !10542
  ret void, !dbg !10543
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #2 section ".tcm_code" !dbg !10544 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10547
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10548
  store volatile i32 21553, i32* %2, align 4, !dbg !10549
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10550
  store volatile i32 20489, i32* %3, align 4, !dbg !10551
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10552
  store volatile i32 20550, i32* %4, align 4, !dbg !10553
  ret i32 0, !dbg !10554
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #2 section ".tcm_code" !dbg !10555 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !10559, metadata !DIExpression()), !dbg !10563
  call void @llvm.dbg.value(metadata i32 0, metadata !10557, metadata !DIExpression()), !dbg !10564
  call void @llvm.dbg.value(metadata i32 16384, metadata !10558, metadata !DIExpression()), !dbg !10564
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10565
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !10566
  store volatile i32 0, i32* %2, align 4, !dbg !10567
  call void @llvm.dbg.value(metadata i32 0, metadata !10561, metadata !DIExpression()), !dbg !10564
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !10561, metadata !DIExpression()), !dbg !10564
  br label %5, !dbg !10568

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !10561, metadata !DIExpression()), !dbg !10564
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !10560, metadata !DIExpression()), !dbg !10564
  br label %8, !dbg !10570

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10560, metadata !DIExpression()), !dbg !10564
  call void @llvm.dbg.value(metadata i32 0, metadata !10562, metadata !DIExpression()), !dbg !10564
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !10574

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !10562, metadata !DIExpression()), !dbg !10564
  %12 = icmp eq i32 %30, 2, !dbg !10578
  br i1 %12, label %31, label %13, !dbg !10574, !llvm.loop !10580

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10562, metadata !DIExpression()), !dbg !10564
  store volatile i32 0, i32* %2, align 4, !dbg !10582
  store volatile i32 63, i32* %3, align 4, !dbg !10584
  %15 = load i32, i32* %10, align 4, !dbg !10585
  %16 = shl i32 %15, 16, !dbg !10586
  %17 = shl nuw nsw i32 %14, 13, !dbg !10587
  %18 = or i32 %17, %7, !dbg !10588
  %19 = or i32 %18, %16, !dbg !10589
  store volatile i32 %19, i32* %2, align 4, !dbg !10590
  %20 = load volatile i32, i32* %2, align 4, !dbg !10591
  %21 = or i32 %20, 805, !dbg !10591
  store volatile i32 %21, i32* %2, align 4, !dbg !10591
  br label %22, !dbg !10592

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !10593
  %24 = and i32 %23, 2, !dbg !10594
  %25 = icmp eq i32 %24, 0, !dbg !10595
  br i1 %25, label %22, label %26, !dbg !10592, !llvm.loop !10596

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !10598
  %28 = and i32 %27, 1, !dbg !10600
  %29 = icmp eq i32 %28, 0, !dbg !10601
  %30 = add nuw nsw i32 %14, 1, !dbg !10602
  call void @llvm.dbg.value(metadata i32 %30, metadata !10562, metadata !DIExpression()), !dbg !10564
  br i1 %29, label %11, label %37, !dbg !10603

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !10604
  call void @llvm.dbg.value(metadata i32 %32, metadata !10560, metadata !DIExpression()), !dbg !10564
  %33 = icmp eq i32 %32, 2, !dbg !10605
  br i1 %33, label %34, label %8, !dbg !10570, !llvm.loop !10606

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !10608
  call void @llvm.dbg.value(metadata i32 %35, metadata !10561, metadata !DIExpression()), !dbg !10564
  %36 = icmp eq i32 %35, 2, !dbg !10609
  br i1 %36, label %37, label %5, !dbg !10568, !llvm.loop !10610

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !10564
  store volatile i32 0, i32* %2, align 4, !dbg !10564
  ret i32 %38, !dbg !10612
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #2 section ".tcm_code" !dbg !10613 {
  %1 = tail call i32 @TestCase_MBIST() #21, !dbg !10614
  %2 = icmp ne i32 %1, 0, !dbg !10616
  %3 = sext i1 %2 to i32, !dbg !10617
  ret i32 %3, !dbg !10618
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #2 section ".tcm_code" !dbg !10619 {
  call void @llvm.dbg.value(metadata i32 31, metadata !10621, metadata !DIExpression()), !dbg !10623
  call void @llvm.dbg.value(metadata i32 0, metadata !10622, metadata !DIExpression()), !dbg !10623
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10624
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !10625
  store volatile i32 0, i32* %2, align 4, !dbg !10626
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10627
  store volatile i32 0, i32* %3, align 4, !dbg !10628
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10629
  store volatile i32 0, i32* %4, align 4, !dbg !10630
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10631
  store volatile i32 0, i32* %5, align 4, !dbg !10632
  call void @llvm.dbg.value(metadata i32 31, metadata !10621, metadata !DIExpression()), !dbg !10623
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10633
  store volatile i32 522133279, i32* %6, align 4, !dbg !10637
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10638
  store volatile i32 522133279, i32* %7, align 4, !dbg !10639
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !10640
  %9 = icmp eq i32 %8, 0, !dbg !10642
  call void @llvm.dbg.value(metadata i32 31, metadata !10621, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10623
  br i1 %9, label %36, label %10, !dbg !10643

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10621, metadata !DIExpression()), !dbg !10623
  call void @llvm.dbg.value(metadata i32 %11, metadata !10621, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10623
  call void @llvm.dbg.value(metadata i32 %11, metadata !10621, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10623
  %12 = icmp eq i32 %11, 0, !dbg !10644
  br i1 %12, label %26, label %13, !dbg !10645, !llvm.loop !10646

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !10648
  call void @llvm.dbg.value(metadata i32 %14, metadata !10621, metadata !DIExpression()), !dbg !10623
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10649
  %16 = shl i32 %14, 24, !dbg !10650
  %17 = shl i32 %14, 16, !dbg !10651
  %18 = shl i32 %14, 8, !dbg !10652
  %19 = or i32 %17, %14, !dbg !10653
  %20 = or i32 %19, %16, !dbg !10654
  %21 = or i32 %20, %18, !dbg !10655
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !10633
  store volatile i32 %21, i32* %22, align 4, !dbg !10637
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !10638
  store volatile i32 %21, i32* %23, align 4, !dbg !10639
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !10640
  %25 = icmp eq i32 %24, 0, !dbg !10642
  call void @llvm.dbg.value(metadata i32 %14, metadata !10621, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10623
  br i1 %25, label %36, label %10, !dbg !10643

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !10622, metadata !DIExpression()), !dbg !10623
  %28 = shl nuw nsw i32 %27, 16, !dbg !10656
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10662
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !10663
  store volatile i32 %28, i32* %30, align 4, !dbg !10664
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !10665
  %32 = icmp eq i32 %31, 0, !dbg !10667
  call void @llvm.dbg.value(metadata i32 %27, metadata !10622, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10623
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !10668
  call void @llvm.dbg.value(metadata i32 %33, metadata !10622, metadata !DIExpression()), !dbg !10623
  call void @llvm.dbg.value(metadata i32 %27, metadata !10622, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10623
  br i1 %35, label %36, label %26, !dbg !10668, !llvm.loop !10669

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !10672
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #2 section ".tcm_code" !dbg !10673 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !10674
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10675
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !10676
  store volatile i32 1, i32* %2, align 4, !dbg !10677
  br label %3, !dbg !10678

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10679
  %5 = and i32 %4, 2, !dbg !10680
  %6 = icmp eq i32 %5, 0, !dbg !10680
  br i1 %6, label %3, label %7, !dbg !10678, !llvm.loop !10681

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !10683
  br label %8, !dbg !10684

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !10685
  %10 = and i32 %9, 2, !dbg !10686
  %11 = icmp eq i32 %10, 0, !dbg !10686
  br i1 %11, label %12, label %8, !dbg !10684, !llvm.loop !10687

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !10689
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !10690
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !10691

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !10692
  %17 = and i32 %16, 1, !dbg !10693
  %18 = icmp eq i32 %17, 0, !dbg !10694
  br i1 %18, label %15, label %19, !dbg !10691, !llvm.loop !10695

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #21, !dbg !10697
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #21, !dbg !10698
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !10699

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !10700
  %24 = and i32 %23, 1, !dbg !10701
  %25 = icmp eq i32 %24, 0, !dbg !10702
  br i1 %25, label %22, label %26, !dbg !10699, !llvm.loop !10703

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !10705
  %28 = icmp eq i32 %27, 9507, !dbg !10707
  br i1 %28, label %29, label %37, !dbg !10708

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !10709
  %31 = and i32 %30, 15, !dbg !10712
  %32 = icmp eq i32 %31, 2, !dbg !10713
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !10714
  %34 = and i32 %33, -128, !dbg !10714
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !10714
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !10714
  br label %37, !dbg !10715

37:                                               ; preds = %29, %26
  ret void, !dbg !10715
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !10716 {
  tail call void @EMI_PowerOn_Init() #21, !dbg !10719
  tail call void @__EMI_SetRegValfromCMCP() #21, !dbg !10720
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #21, !dbg !10721
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !10722
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #21, !dbg !10723
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !10724
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #21, !dbg !10725
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !10726
  ret i8 0, !dbg !10727
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !10728 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !10729
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10730
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !10731
  store volatile i32 %1, i32* %3, align 4, !dbg !10732
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !10733
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !10734
  store volatile i32 %4, i32* %5, align 4, !dbg !10735
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !10736
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !10737
  store volatile i32 %6, i32* %7, align 4, !dbg !10738
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !10739
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !10740
  store volatile i32 %8, i32* %9, align 4, !dbg !10741
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !10742
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !10743
  store volatile i32 %10, i32* %11, align 4, !dbg !10744
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !10745
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !10746
  store volatile i32 %12, i32* %13, align 4, !dbg !10747
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !10748
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !10749
  store volatile i32 %14, i32* %15, align 4, !dbg !10750
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !10751
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !10752
  store volatile i32 %16, i32* %17, align 4, !dbg !10753
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !10754
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !10755
  store volatile i32 %18, i32* %19, align 4, !dbg !10756
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !10757
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !10758
  store volatile i32 %20, i32* %21, align 4, !dbg !10759
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !10760
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !10761
  store volatile i32 %22, i32* %23, align 4, !dbg !10762
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !10763
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !10764
  store volatile i32 %24, i32* %25, align 4, !dbg !10765
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !10766
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !10767
  store volatile i32 %26, i32* %27, align 4, !dbg !10768
  tail call void @__EMI_EnableDataAutoTracking() #21, !dbg !10769
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10770
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !10771
  store volatile i32 806289408, i32* %29, align 4, !dbg !10772
  br label %30, !dbg !10773

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !10774
  %32 = and i32 %31, 128, !dbg !10775
  %33 = icmp eq i32 %32, 0, !dbg !10775
  br i1 %33, label %30, label %34, !dbg !10773, !llvm.loop !10776

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !10778
  br label %35, !dbg !10779

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !10780
  %37 = and i32 %36, 128, !dbg !10781
  %38 = icmp eq i32 %37, 0, !dbg !10781
  br i1 %38, label %39, label %35, !dbg !10779, !llvm.loop !10782

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !10784
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #21, !dbg !10785
  ret i8 0, !dbg !10786
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #2 section ".tcm_code" !dbg !10787 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10788
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !10789
  %3 = load volatile i32, i32* %2, align 4, !dbg !10789
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !10790
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !10791
  %5 = load volatile i32, i32* %4, align 4, !dbg !10791
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !10792
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !10793
  %7 = load volatile i32, i32* %6, align 4, !dbg !10793
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !10794
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10795
  %9 = load volatile i32, i32* %8, align 4, !dbg !10795
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !10796
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10797
  %11 = load volatile i32, i32* %10, align 4, !dbg !10797
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !10798
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10799
  %13 = load volatile i32, i32* %12, align 4, !dbg !10799
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !10800
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !10801
  %15 = load volatile i32, i32* %14, align 4, !dbg !10801
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !10802
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !10803
  %17 = load volatile i32, i32* %16, align 4, !dbg !10803
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !10804
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !10805
  %19 = load volatile i32, i32* %18, align 4, !dbg !10805
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !10806
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !10807
  %21 = load volatile i32, i32* %20, align 4, !dbg !10807
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !10808
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !10809
  %23 = load volatile i32, i32* %22, align 4, !dbg !10809
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !10810
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10811
  %25 = load volatile i32, i32* %24, align 4, !dbg !10811
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !10812
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !10813
  %27 = load volatile i32, i32* %26, align 4, !dbg !10813
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !10814
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !10815
  %29 = load volatile i32, i32* %28, align 4, !dbg !10815
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !10816
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10817
  %31 = load volatile i32, i32* %30, align 4, !dbg !10817
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !10818
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10819
  %33 = load volatile i32, i32* %32, align 4, !dbg !10819
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !10820
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10821
  %35 = load volatile i32, i32* %34, align 4, !dbg !10821
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !10822
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !10823
  %37 = load volatile i32, i32* %36, align 4, !dbg !10823
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !10824
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !10825
  %39 = load volatile i32, i32* %38, align 4, !dbg !10825
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !10826
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !10827
  %41 = load volatile i32, i32* %40, align 4, !dbg !10827
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !10828
  ret void, !dbg !10829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #2 section ".tcm_code" !dbg !10830 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !10831

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10832
  %5 = and i32 %4, 17, !dbg !10833
  %6 = icmp eq i32 %5, 17, !dbg !10834
  br i1 %6, label %7, label %3, !dbg !10831, !llvm.loop !10835

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !10837
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !10838
  store volatile i32 %8, i32* %9, align 4, !dbg !10839
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !10840
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !10841
  store volatile i32 %10, i32* %11, align 4, !dbg !10842
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !10843
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !10844
  store volatile i32 %12, i32* %13, align 4, !dbg !10845
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !10846
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10847
  store volatile i32 %14, i32* %15, align 4, !dbg !10848
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !10849
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10850
  store volatile i32 %16, i32* %17, align 4, !dbg !10851
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !10852
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10853
  store volatile i32 %18, i32* %19, align 4, !dbg !10854
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !10855
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !10856
  store volatile i32 %20, i32* %21, align 4, !dbg !10857
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !10858
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !10859
  store volatile i32 %22, i32* %23, align 4, !dbg !10860
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !10861
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10862
  store volatile i32 %24, i32* %25, align 4, !dbg !10863
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !10864
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !10865
  store volatile i32 %26, i32* %27, align 4, !dbg !10866
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !10867
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !10868
  store volatile i32 %28, i32* %29, align 4, !dbg !10869
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !10870
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !10871
  store volatile i32 %30, i32* %31, align 4, !dbg !10872
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !10873
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !10874
  store volatile i32 %32, i32* %33, align 4, !dbg !10875
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !10876
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !10877
  store volatile i32 %34, i32* %35, align 4, !dbg !10878
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !10879
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10880
  store volatile i32 %36, i32* %37, align 4, !dbg !10881
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !10882
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10883
  store volatile i32 %38, i32* %39, align 4, !dbg !10884
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !10885
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10886
  store volatile i32 %40, i32* %41, align 4, !dbg !10887
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !10888
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !10889
  store volatile i32 %42, i32* %43, align 4, !dbg !10890
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !10891
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !10892
  store volatile i32 %44, i32* %45, align 4, !dbg !10893
  ret void, !dbg !10894
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #2 section ".tcm_code" !dbg !10895 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10896
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10897
  %3 = load volatile i32, i32* %2, align 4, !dbg !10897
  %4 = and i32 %3, -2097185, !dbg !10898
  store volatile i32 %4, i32* %2, align 4, !dbg !10899
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !10900
  store volatile i32 1, i32* %5, align 4, !dbg !10901
  br label %6, !dbg !10902

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !10903
  %8 = and i32 %7, 2, !dbg !10904
  %9 = icmp eq i32 %8, 0, !dbg !10904
  br i1 %9, label %6, label %10, !dbg !10902, !llvm.loop !10905

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !10907
  br label %11, !dbg !10908

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !10909
  %13 = and i32 %12, 2, !dbg !10910
  %14 = icmp eq i32 %13, 0, !dbg !10910
  br i1 %14, label %15, label %11, !dbg !10908, !llvm.loop !10911

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #21, !dbg !10913
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10914
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !10915
  store volatile i32 806289408, i32* %17, align 4, !dbg !10916
  br label %18, !dbg !10917

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !10918
  %20 = and i32 %19, 128, !dbg !10919
  %21 = icmp eq i32 %20, 0, !dbg !10919
  br i1 %21, label %18, label %22, !dbg !10917, !llvm.loop !10920

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !10922
  br label %23, !dbg !10923

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !10924
  %25 = and i32 %24, 128, !dbg !10925
  %26 = icmp eq i32 %25, 0, !dbg !10925
  br i1 %26, label %27, label %23, !dbg !10923, !llvm.loop !10926

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !10928
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !10929
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !10930
  store volatile i32 %28, i32* %29, align 4, !dbg !10931
  ret void, !dbg !10932
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #2 section ".tcm_code" !dbg !10933 {
  tail call void @EMI_Setting_Save() #21, !dbg !10934
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !10935

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10936
  %5 = and i32 %4, 17, !dbg !10937
  %6 = icmp eq i32 %5, 17, !dbg !10938
  br i1 %6, label %7, label %3, !dbg !10935, !llvm.loop !10939

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !10941
  %9 = or i32 %8, 1792, !dbg !10942
  store volatile i32 %9, i32* %2, align 4, !dbg !10943
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !10944
  store volatile i32 -261685248, i32* %10, align 4, !dbg !10945
  br label %11, !dbg !10946

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !10947
  %13 = and i32 %12, 1, !dbg !10948
  %14 = icmp eq i32 %13, 0, !dbg !10949
  br i1 %14, label %11, label %15, !dbg !10946, !llvm.loop !10950

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !10952
  store volatile i32 0, i32* %16, align 4, !dbg !10953
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !10954

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !10955
  %20 = and i32 %19, 16, !dbg !10956
  %21 = icmp eq i32 %20, 0, !dbg !10956
  br i1 %21, label %18, label %22, !dbg !10954, !llvm.loop !10957

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10959
  %24 = load volatile i32, i32* %23, align 4, !dbg !10959
  %25 = or i32 %24, 2097184, !dbg !10960
  store volatile i32 %25, i32* %23, align 4, !dbg !10961
  ret void, !dbg !10962
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !10963 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10968, metadata !DIExpression()), !dbg !10970
  %3 = bitcast i32* %2 to i8*, !dbg !10971
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10971
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10969, metadata !DIExpression()), !dbg !10972
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !10973

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10974
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !10977
  store volatile i32 0, i32* %6, align 4, !dbg !10978
  store volatile i32 806289408, i32* %6, align 4, !dbg !10979
  br label %7, !dbg !10980

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !10981
  %9 = and i32 %8, 128, !dbg !10982
  %10 = icmp eq i32 %9, 0, !dbg !10982
  br i1 %10, label %7, label %11, !dbg !10980, !llvm.loop !10983

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !10985
  br label %12, !dbg !10986

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !10987
  %14 = and i32 %13, 128, !dbg !10988
  %15 = icmp eq i32 %14, 0, !dbg !10988
  br i1 %15, label %16, label %12, !dbg !10986, !llvm.loop !10989

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !10991
  store volatile i32 0, i32* %2, align 4, !dbg !10992
  %17 = load volatile i32, i32* %2, align 4, !dbg !10994
  %18 = icmp ult i32 %17, 255, !dbg !10996
  br i1 %18, label %19, label %25, !dbg !10997

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !10998
  %21 = add i32 %20, 1, !dbg !10998
  store volatile i32 %21, i32* %2, align 4, !dbg !10998
  %22 = load volatile i32, i32* %2, align 4, !dbg !10994
  %23 = icmp ult i32 %22, 255, !dbg !10996
  br i1 %23, label %19, label %25, !dbg !10997, !llvm.loop !10999

24:                                               ; preds = %1
  br label %25, !dbg !11001

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !10970
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11004
  ret i32 %26, !dbg !11004
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !11005 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11006
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !11007
  %3 = load volatile i32, i32* %2, align 4, !dbg !11007
  %4 = or i32 %3, 1792, !dbg !11008
  store volatile i32 %4, i32* %2, align 4, !dbg !11009
  ret void, !dbg !11010
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !11011 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11012
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !11013
  %3 = load volatile i32, i32* %2, align 4, !dbg !11013
  %4 = and i32 %3, -1793, !dbg !11014
  store volatile i32 %4, i32* %2, align 4, !dbg !11015
  ret void, !dbg !11016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #10 section ".tcm_code" !dbg !11017 {
  ret i1 false, !dbg !11018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #10 section ".tcm_code" !dbg !11019 {
  ret i1 false, !dbg !11020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !11021 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #20, !dbg !11022
  ret void, !dbg !11025
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !11026 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #20, !dbg !11027
  ret void, !dbg !11030
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !11031 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #20, !dbg !11032
  ret void, !dbg !11035
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !11036 {
  tail call void @peri_26m_dcxo() #20, !dbg !11037
  ret void, !dbg !11040
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !11041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11045, metadata !DIExpression()), !dbg !11046
  %2 = trunc i32 %0 to i8, !dbg !11047
  tail call void @hal_uart_put_char(i32 noundef 2, i8 noundef zeroext %2) #20, !dbg !11048
  ret i32 %0, !dbg !11049
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #19 !dbg !11050 {
  tail call fastcc void @SystemClock_Config() #21, !dbg !11051
  tail call void @SystemCoreClockUpdate() #20, !dbg !11052
  tail call fastcc void @prvSetupHardware() #21, !dbg !11053
  tail call void asm sideeffect "cpsie i", "~{memory}"() #22, !dbg !11054, !srcloc !11057
  tail call void asm sideeffect "cpsie f", "~{memory}"() #22, !dbg !11058, !srcloc !11061
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.165, i32 0, i32 0)) #20, !dbg !11062
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.166, i32 0, i32 0)) #20, !dbg !11063
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.165, i32 0, i32 0)) #20, !dbg !11064
  tail call fastcc void @trng_generate_random_data() #21, !dbg !11065
  br label %4, !dbg !11066

4:                                                ; preds = %0, %4
  br label %4, !dbg !11066, !llvm.loop !11067
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !11069 {
  %1 = tail call i32 @hal_clock_init() #20, !dbg !11070
  ret void, !dbg !11071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !11072 {
  tail call fastcc void @plain_log_uart_init() #21, !dbg !11073
  %1 = tail call i32 @hal_flash_init() #20, !dbg !11074
  %2 = tail call i32 @hal_nvic_init() #20, !dbg !11075
  ret void, !dbg !11076
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @trng_generate_random_data() unnamed_addr #0 !dbg !11077 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !11079, metadata !DIExpression()), !dbg !11081
  %2 = bitcast i32* %1 to i8*, !dbg !11082
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #22, !dbg !11082
  call void @llvm.dbg.value(metadata i32 0, metadata !11080, metadata !DIExpression()), !dbg !11081
  store i32 0, i32* %1, align 4, !dbg !11083
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i32 0, i32 0)) #20, !dbg !11084
  %4 = tail call i32 @hal_trng_init() #20, !dbg !11085
  call void @llvm.dbg.value(metadata i32 0, metadata !11079, metadata !DIExpression()), !dbg !11081
  br label %5, !dbg !11086

5:                                                ; preds = %0, %5
  %6 = phi i32 [ 0, %0 ], [ %10, %5 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !11079, metadata !DIExpression()), !dbg !11081
  call void @llvm.dbg.value(metadata i32* %1, metadata !11080, metadata !DIExpression(DW_OP_deref)), !dbg !11081
  %7 = call i32 @hal_trng_get_generated_random_number(i32* noundef nonnull %1) #20, !dbg !11088
  %8 = load i32, i32* %1, align 4, !dbg !11091
  call void @llvm.dbg.value(metadata i32 %8, metadata !11080, metadata !DIExpression()), !dbg !11081
  %9 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i32 0, i32 0), i32 noundef %8) #20, !dbg !11092
  %10 = add nuw nsw i32 %6, 1, !dbg !11093
  call void @llvm.dbg.value(metadata i32 %10, metadata !11079, metadata !DIExpression()), !dbg !11081
  %11 = icmp eq i32 %10, 20, !dbg !11094
  br i1 %11, label %12, label %5, !dbg !11086, !llvm.loop !11095

12:                                               ; preds = %5
  %13 = call i32 @hal_trng_deinit() #20, !dbg !11097
  %14 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i32 0, i32 0)) #20, !dbg !11098
  %15 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5, i32 0, i32 0)) #20, !dbg !11099
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #22, !dbg !11100
  ret void, !dbg !11100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @plain_log_uart_init() unnamed_addr #0 !dbg !11101 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !11111
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #22, !dbg !11111
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !11103, metadata !DIExpression()), !dbg !11112
  %3 = tail call i32 @hal_gpio_init(i32 noundef 0) #20, !dbg !11113
  %4 = tail call i32 @hal_gpio_init(i32 noundef 1) #20, !dbg !11114
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #20, !dbg !11115
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #20, !dbg !11116
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !11117
  store i32 9, i32* %7, align 4, !dbg !11118
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !11119
  store i32 3, i32* %8, align 4, !dbg !11120
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !11121
  store i32 0, i32* %9, align 4, !dbg !11122
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !11123
  store i32 0, i32* %10, align 4, !dbg !11124
  %11 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #20, !dbg !11125
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #22, !dbg !11126
  ret void, !dbg !11126
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #10 !dbg !11127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11129, metadata !DIExpression()), !dbg !11130
  ret i32 0, !dbg !11131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #10 !dbg !11132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11182, metadata !DIExpression()), !dbg !11184
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !11183, metadata !DIExpression()), !dbg !11184
  ret i32 0, !dbg !11185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #10 !dbg !11186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11188, metadata !DIExpression()), !dbg !11189
  ret i32 1, !dbg !11190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !11191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11195, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata i32 %1, metadata !11196, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata i32 %2, metadata !11197, metadata !DIExpression()), !dbg !11198
  ret i32 0, !dbg !11199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !11200 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11204, metadata !DIExpression()), !dbg !11207
  call void @llvm.dbg.value(metadata i32 %1, metadata !11205, metadata !DIExpression()), !dbg !11207
  call void @llvm.dbg.value(metadata i32 %2, metadata !11206, metadata !DIExpression()), !dbg !11207
  ret i32 -1, !dbg !11208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #10 !dbg !11209 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11213, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i8* %1, metadata !11214, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.value(metadata i32 %2, metadata !11215, metadata !DIExpression()), !dbg !11216
  ret i32 0, !dbg !11217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_getpid() local_unnamed_addr #10 !dbg !11218 {
  ret i32 1, !dbg !11219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !11220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11224, metadata !DIExpression()), !dbg !11226
  call void @llvm.dbg.value(metadata i32 %1, metadata !11225, metadata !DIExpression()), !dbg !11226
  ret i32 -1, !dbg !11227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #10 !dbg !11228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11230, metadata !DIExpression()), !dbg !11231
  ret i32 -1, !dbg !11232
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2198 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !2396, metadata !DIExpression()), !dbg !11233
  call void @llvm.dbg.value(metadata i32 %1, metadata !2397, metadata !DIExpression()), !dbg !11233
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #22, !dbg !11234, !srcloc !11235
  call void @llvm.dbg.value(metadata i8* %3, metadata !2399, metadata !DIExpression()), !dbg !11233
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !11236
  %5 = icmp eq i8* %4, null, !dbg !11238
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !11239
  call void @llvm.dbg.value(metadata i8* %6, metadata !2398, metadata !DIExpression()), !dbg !11233
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !11240
  %8 = icmp ult i8* %3, %7, !dbg !11242
  %9 = xor i1 %8, true, !dbg !11243
  %10 = or i1 %5, %9, !dbg !11243
  br i1 %10, label %11, label %13, !dbg !11243

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !11244
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !11243
  br label %13, !dbg !11243

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !11244
  ret i8* %14, !dbg !11243
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !11245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11247, metadata !DIExpression()), !dbg !11251
  call void @llvm.dbg.value(metadata i8* %1, metadata !11248, metadata !DIExpression()), !dbg !11251
  call void @llvm.dbg.value(metadata i32 %2, metadata !11249, metadata !DIExpression()), !dbg !11251
  call void @llvm.dbg.value(metadata i32 0, metadata !11250, metadata !DIExpression()), !dbg !11251
  %4 = icmp sgt i32 %2, 0, !dbg !11252
  br i1 %4, label %5, label %14, !dbg !11255

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !11250, metadata !DIExpression()), !dbg !11251
  call void @llvm.dbg.value(metadata i8* %7, metadata !11248, metadata !DIExpression()), !dbg !11251
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !11256
  call void @llvm.dbg.value(metadata i8* %8, metadata !11248, metadata !DIExpression()), !dbg !11251
  %9 = load i8, i8* %7, align 1, !dbg !11258
  %10 = zext i8 %9 to i32, !dbg !11258
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #20, !dbg !11259
  %12 = add nuw nsw i32 %6, 1, !dbg !11260
  call void @llvm.dbg.value(metadata i32 %12, metadata !11250, metadata !DIExpression()), !dbg !11251
  %13 = icmp eq i32 %12, %2, !dbg !11252
  br i1 %13, label %14, label %5, !dbg !11255, !llvm.loop !11261

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !11263
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #2 !dbg !11264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11266, metadata !DIExpression()), !dbg !11268
  %2 = add i32 %0, -1, !dbg !11269
  %3 = icmp ugt i32 %2, 16777215, !dbg !11271
  br i1 %3, label %8, label %4, !dbg !11272

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11273
  call void @llvm.dbg.value(metadata i32 %5, metadata !11267, metadata !DIExpression()), !dbg !11268
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11274
  %7 = and i32 %6, -4, !dbg !11274
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11274
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11275
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11276
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11277
  br label %8, !dbg !11278

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !11268
  ret i32 %9, !dbg !11279
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #2 !dbg !11280 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !11281
  ret void, !dbg !11282
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #11 !dbg !11283 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !11284
  ret i32 %1, !dbg !11285
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #11 !dbg !11286 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !11289
  %2 = lshr i32 %1, 3, !dbg !11290
  %3 = and i32 %2, 15, !dbg !11290
  call void @llvm.dbg.value(metadata i32 %3, metadata !11288, metadata !DIExpression()), !dbg !11291
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !11292

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !11293

5:                                                ; preds = %0, %0
  br label %9, !dbg !11295

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !11296
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !11297
  br label %15, !dbg !11299

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !11296
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !11297
  %12 = and i32 %11, 1024, !dbg !11300
  %13 = icmp eq i32 %12, 0, !dbg !11300
  br i1 %13, label %15, label %14, !dbg !11299

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !11301
  br label %15, !dbg !11303

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !11304
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !11305 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !11306
  %2 = or i32 %1, 15728640, !dbg !11306
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !11306
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !11307
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11308
  %4 = or i32 %3, 458752, !dbg !11308
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11308
  ret void, !dbg !11309
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #2 !dbg !11310 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11311
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11312
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11313
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !11314
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !11315
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !11316
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11317
  ret void, !dbg !11318
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { argmemonly nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { nofree nosync nounwind willreturn }
attributes #19 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { nobuiltin nounwind optsize "no-builtins" }
attributes #21 = { nobuiltin optsize "no-builtins" }
attributes #22 = { nounwind }
attributes #23 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !2524, !94, !345, !361, !383, !663, !2550, !818, !908, !2554, !998, !1097, !1422, !2600, !1510, !1521, !1879, !1940, !2602, !2020, !2186, !2604, !2391, !2402, !2512}
!llvm.ident = !{!2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608, !2608}
!llvm.module.flags = !{!2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !2, file: !3, line: 51, type: !90, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !53, globals: !89, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!4 = !{!5, !17, !37, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 163, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!10 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!11 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!12 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!13 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!14 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!15 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!16 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 186, baseType: !18, size: 32, elements: !19)
!18 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36}
!20 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!21 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!22 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!23 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!24 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!25 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!26 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!27 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!28 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!29 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!30 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!31 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!32 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!33 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!34 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!35 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!36 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 176, baseType: !18, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!40 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!41 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!42 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!43 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 98, baseType: !18, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!46 = !{!47, !48, !49, !50, !51, !52}
!47 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!48 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!49 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!50 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!51 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!52 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!53 = !{!54, !88}
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 32)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !57)
!56 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!57 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !58)
!58 = !{!59, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !78, !79, !83, !87}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !57, file: !56, line: 261, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !62, line: 48, baseType: !63)
!62 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !64, line: 79, baseType: !18)
!64 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!65 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !57, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !57, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !57, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !57, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !57, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !57, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !57, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !57, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !57, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !57, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !76)
!76 = !{!77}
!77 = !DISubrange(count: 1)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !57, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !57, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 16372)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !57, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !85)
!85 = !{!86}
!86 = !DISubrange(count: 16)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !57, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!89 = !{!0}
!90 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !91)
!91 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!92 = !DIGlobalVariableExpression(var: !93, expr: !DIExpression())
!93 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !94, file: !95, line: 48, type: !341, isLocal: false, isDefinition: true)
!94 = distinct !DICompileUnit(language: DW_LANG_C99, file: !95, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !96, retainedTypes: !263, globals: !278, splitDebugInlining: false, nameTableKind: None)
!95 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!96 = !{!97, !157, !162, !168, !245, !254, !259}
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 1170, baseType: !18, size: 32, elements: !99)
!98 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!99 = !{!100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156}
!100 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!101 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!102 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!103 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!104 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!105 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!106 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!107 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!108 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!109 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!110 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!111 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!112 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!113 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!114 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!115 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!116 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!117 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!118 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!119 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!120 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!121 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!122 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!123 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!124 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!125 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!126 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!127 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!128 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!129 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!130 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!131 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!132 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!133 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!134 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!135 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!136 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!137 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!138 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!139 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!140 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!141 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!142 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!143 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!144 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!145 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!146 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!147 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!148 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!149 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!150 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!151 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!152 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!153 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!154 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!155 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!156 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 82, baseType: !18, size: 32, elements: !159)
!158 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!159 = !{!160, !161}
!160 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!161 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!162 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 75, baseType: !18, size: 32, elements: !163)
!163 = !{!164, !165, !166, !167}
!164 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!165 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!166 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!167 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !56, line: 44, baseType: !7, size: 32, elements: !169)
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244}
!170 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!171 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!172 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!173 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!174 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!175 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!176 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!177 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!178 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!179 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!180 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!181 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!182 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!183 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!184 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!185 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!186 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!187 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!188 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!189 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!190 = !DIEnumerator(name: "KP_IRQn", value: 10)
!191 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!192 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!193 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!194 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!195 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!196 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!197 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!198 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!199 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!200 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!201 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!202 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!203 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!204 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!205 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!206 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!207 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!208 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!209 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!210 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!211 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!212 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!213 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!214 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!215 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!216 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!217 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!218 = !DIEnumerator(name: "SF_IRQn", value: 38)
!219 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!220 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!221 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!222 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!223 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!224 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!225 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!226 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!227 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!228 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!229 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!230 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!231 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!232 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!233 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!234 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!235 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!236 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!237 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!238 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!239 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!240 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!241 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!242 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!243 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!244 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!245 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 846, baseType: !18, size: 32, elements: !246)
!246 = !{!247, !248, !249, !250, !251, !252, !253}
!247 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!248 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!249 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!250 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!251 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!252 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!253 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 380, baseType: !18, size: 32, elements: !256)
!255 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!256 = !{!257, !258}
!257 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!258 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 397, baseType: !18, size: 32, elements: !260)
!260 = !{!261, !262}
!261 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!262 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!263 = !{!61, !264, !88}
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !56, line: 1272, baseType: !266)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1262, size: 288, elements: !267)
!267 = !{!268, !269, !270, !271, !273, !274, !275, !276, !277}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !266, file: !56, line: 1263, baseType: !60, size: 32)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !266, file: !56, line: 1264, baseType: !60, size: 32, offset: 32)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !266, file: !56, line: 1265, baseType: !60, size: 32, offset: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !266, file: !56, line: 1266, baseType: !272, size: 32, offset: 96)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !266, file: !56, line: 1267, baseType: !60, size: 32, offset: 128)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !266, file: !56, line: 1268, baseType: !60, size: 32, offset: 160)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !266, file: !56, line: 1269, baseType: !60, size: 32, offset: 192)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !266, file: !56, line: 1270, baseType: !60, size: 32, offset: 224)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !266, file: !56, line: 1271, baseType: !60, size: 32, offset: 256)
!278 = !{!92, !279, !288, !294, !316, !339}
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !94, file: !95, line: 49, type: !281, isLocal: false, isDefinition: true)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !56, line: 1260, baseType: !283)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1256, size: 96, elements: !284)
!284 = !{!285, !286, !287}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !283, file: !56, line: 1257, baseType: !272, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !283, file: !56, line: 1258, baseType: !60, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !283, file: !56, line: 1259, baseType: !60, size: 32, offset: 64)
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "flag", scope: !290, file: !95, line: 88, type: !91, isLocal: true, isDefinition: true)
!290 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !95, file: !95, line: 86, type: !291, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!291 = !DISubroutineType(types: !292)
!292 = !{null}
!293 = !{}
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !94, file: !95, line: 51, type: !296, isLocal: false, isDefinition: true)
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 768, elements: !314)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !158, line: 116, baseType: !298)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 111, size: 128, elements: !299)
!299 = !{!300, !302, !312, !313}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !298, file: !158, line: 112, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !255, line: 400, baseType: !259)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !298, file: !158, line: 113, baseType: !303, size: 64, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !158, line: 109, baseType: !304)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 106, size: 64, elements: !305)
!305 = !{!306, !311}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !304, file: !158, line: 107, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !255, line: 371, baseType: !308)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DISubroutineType(types: !310)
!310 = !{null, !88}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !304, file: !158, line: 108, baseType: !88, size: 32, offset: 32)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !298, file: !158, line: 114, baseType: !91, size: 8, offset: 96)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !298, file: !158, line: 115, baseType: !91, size: 8, offset: 104)
!314 = !{!315}
!315 = !DISubrange(count: 6)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !94, file: !95, line: 52, type: !318, isLocal: false, isDefinition: true)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !158, line: 134, baseType: !319)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 125, size: 4256, elements: !320)
!320 = !{!321, !332, !333, !334, !335, !336, !337, !338}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !319, file: !158, line: 126, baseType: !322, size: 4096)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 4096, elements: !330)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !158, line: 123, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 118, size: 128, elements: !325)
!325 = !{!326, !327, !328, !329}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !324, file: !158, line: 119, baseType: !303, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !324, file: !158, line: 120, baseType: !61, size: 32, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !324, file: !158, line: 121, baseType: !91, size: 8, offset: 96)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !324, file: !158, line: 122, baseType: !91, size: 8, offset: 104)
!330 = !{!331}
!331 = !DISubrange(count: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !319, file: !158, line: 127, baseType: !61, size: 32, offset: 4096)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !319, file: !158, line: 128, baseType: !61, size: 32, offset: 4128)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !319, file: !158, line: 129, baseType: !61, size: 32, offset: 4160)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !319, file: !158, line: 130, baseType: !61, size: 32, offset: 4192)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !319, file: !158, line: 131, baseType: !91, size: 8, offset: 4224)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !319, file: !158, line: 132, baseType: !91, size: 8, offset: 4232)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !319, file: !158, line: 133, baseType: !91, size: 8, offset: 4240)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !94, file: !95, line: 53, type: !61, isLocal: false, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 192, elements: !314)
!342 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "trng_init_status", scope: !345, file: !346, line: 41, type: !355, isLocal: true, isDefinition: true)
!345 = distinct !DICompileUnit(language: DW_LANG_C99, file: !346, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !347, globals: !354, splitDebugInlining: false, nameTableKind: None)
!346 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_trng.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!347 = !{!348}
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !349, line: 92, baseType: !7, size: 32, elements: !350)
!349 = !DIFile(filename: "../../../../../driver/chip/inc/hal_trng.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!350 = !{!351, !352, !353}
!351 = !DIEnumerator(name: "HAL_TRNG_STATUS_ERROR", value: -2)
!352 = !DIEnumerator(name: "HAL_TRNG_STATUS_INVALID_PARAMETER", value: -1)
!353 = !DIEnumerator(name: "HAL_TRNG_STATUS_OK", value: 0)
!354 = !{!343}
!355 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !356)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !62, line: 24, baseType: !357)
!357 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !64, line: 43, baseType: !358)
!358 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!359 = !DIGlobalVariableExpression(var: !360, expr: !DIExpression())
!360 = distinct !DIGlobalVariable(name: "trng", scope: !361, file: !362, line: 41, type: !371, isLocal: false, isDefinition: true)
!361 = distinct !DICompileUnit(language: DW_LANG_C99, file: !362, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !363, globals: !370, splitDebugInlining: false, nameTableKind: None)
!362 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_trng_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!363 = !{!97, !364}
!364 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !365, line: 49, baseType: !7, size: 32, elements: !366)
!365 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_trng_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!366 = !{!367, !368, !369}
!367 = !DIEnumerator(name: "TRNG_GEN_TIMEOUT", value: -1)
!368 = !DIEnumerator(name: "TRNG_GEN_FAIL", value: -2)
!369 = !DIEnumerator(name: "TRNG_GEN_SUCCESS", value: 0)
!370 = !{!359}
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "TRNG_REGISTER_T", file: !56, line: 1206, baseType: !373)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1199, size: 192, elements: !374)
!374 = !{!375, !376, !377, !378, !379, !380}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "TRNG_CTRL", scope: !373, file: !56, line: 1200, baseType: !60, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "TRNG_TIME", scope: !373, file: !56, line: 1201, baseType: !60, size: 32, offset: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "TRNG_DATA", scope: !373, file: !56, line: 1202, baseType: !272, size: 32, offset: 64)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "TRNG_CONF", scope: !373, file: !56, line: 1203, baseType: !60, size: 32, offset: 96)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "TRNG_INT_SET", scope: !373, file: !56, line: 1204, baseType: !272, size: 32, offset: 128)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "TRNG_INT_CLR", scope: !373, file: !56, line: 1205, baseType: !60, size: 32, offset: 160)
!381 = !DIGlobalVariableExpression(var: !382, expr: !DIExpression())
!382 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !383, file: !384, line: 64, type: !484, isLocal: false, isDefinition: true)
!383 = distinct !DICompileUnit(language: DW_LANG_C99, file: !384, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !385, retainedTypes: !479, globals: !483, splitDebugInlining: false, nameTableKind: None)
!384 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!385 = !{!386, !438, !445, !449, !455, !459, !468, !473}
!386 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 339, baseType: !18, size: 32, elements: !387)
!387 = !{!388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437}
!388 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!389 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!390 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!391 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!392 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!393 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!394 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!395 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!396 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!397 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!398 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!399 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!400 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!401 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!402 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!403 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!404 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!405 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!406 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!407 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!408 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!409 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!410 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!411 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!412 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!413 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!414 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!415 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!416 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!417 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!418 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!419 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!420 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!421 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!422 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!423 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!424 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!425 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!426 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!427 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!428 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!429 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!430 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!431 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!432 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!433 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!434 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!435 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!436 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!437 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!438 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !439, line: 224, baseType: !7, size: 32, elements: !440)
!439 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!440 = !{!441, !442, !443, !444}
!441 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!442 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!443 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!444 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!445 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !439, line: 210, baseType: !18, size: 32, elements: !446)
!446 = !{!447, !448}
!447 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!448 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!449 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !439, line: 233, baseType: !7, size: 32, elements: !450)
!450 = !{!451, !452, !453, !454}
!451 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!452 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!453 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!454 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!455 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !439, line: 217, baseType: !18, size: 32, elements: !456)
!456 = !{!457, !458}
!457 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!458 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!459 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 415, baseType: !18, size: 32, elements: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467}
!461 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!462 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!463 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!464 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!465 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!466 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!467 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!468 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 427, baseType: !18, size: 32, elements: !469)
!469 = !{!470, !471, !472}
!470 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!471 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!472 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !439, line: 242, baseType: !18, size: 32, elements: !474)
!474 = !{!475, !476, !477, !478}
!475 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!476 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!477 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!478 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!479 = !{!88, !480, !481, !482}
!480 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !439, line: 213, baseType: !445)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !439, line: 220, baseType: !455)
!482 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !439, line: 247, baseType: !473)
!483 = !{!381}
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 32)
!485 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !56, line: 1554, baseType: !486)
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1522, size: 29440, elements: !487)
!487 = !{!488, !502, !506, !515, !516, !525, !526, !535, !536, !546, !547, !556, !557, !566, !567, !576, !577, !586, !590, !599, !600, !609, !610, !619, !628, !629, !640, !644, !653, !654}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !486, file: !56, line: 1523, baseType: !489, size: 256)
!489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !490, size: 256, elements: !500)
!490 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !56, line: 1400, baseType: !491)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1395, size: 128, elements: !492)
!492 = !{!493, !494, !495, !496}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !491, file: !56, line: 1396, baseType: !60, size: 32)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !491, file: !56, line: 1397, baseType: !60, size: 32, offset: 32)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !491, file: !56, line: 1398, baseType: !60, size: 32, offset: 64)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !491, file: !56, line: 1399, baseType: !497, size: 32, offset: 96)
!497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 32, elements: !498)
!498 = !{!499}
!499 = !DISubrange(count: 4)
!500 = !{!501}
!501 = !DISubrange(count: 2)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !486, file: !56, line: 1524, baseType: !503, size: 1792, offset: 256)
!503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 1792, elements: !504)
!504 = !{!505}
!505 = !DISubrange(count: 224)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !486, file: !56, line: 1525, baseType: !507, size: 256, offset: 2048)
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !508, size: 256, elements: !500)
!508 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !56, line: 1409, baseType: !509)
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1404, size: 128, elements: !510)
!510 = !{!511, !512, !513, !514}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !509, file: !56, line: 1405, baseType: !60, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !509, file: !56, line: 1406, baseType: !60, size: 32, offset: 32)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !509, file: !56, line: 1407, baseType: !60, size: 32, offset: 64)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !509, file: !56, line: 1408, baseType: !497, size: 32, offset: 96)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !486, file: !56, line: 1526, baseType: !503, size: 1792, offset: 2304)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !486, file: !56, line: 1527, baseType: !517, size: 256, offset: 4096)
!517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !518, size: 256, elements: !500)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !56, line: 1417, baseType: !519)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1412, size: 128, elements: !520)
!520 = !{!521, !522, !523, !524}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !519, file: !56, line: 1413, baseType: !60, size: 32)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !519, file: !56, line: 1414, baseType: !60, size: 32, offset: 32)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !519, file: !56, line: 1415, baseType: !60, size: 32, offset: 64)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !519, file: !56, line: 1416, baseType: !497, size: 32, offset: 96)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !486, file: !56, line: 1528, baseType: !503, size: 1792, offset: 4352)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !486, file: !56, line: 1529, baseType: !527, size: 256, offset: 6144)
!527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !528, size: 256, elements: !500)
!528 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !56, line: 1426, baseType: !529)
!529 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1421, size: 128, elements: !530)
!530 = !{!531, !532, !533, !534}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !529, file: !56, line: 1422, baseType: !60, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !529, file: !56, line: 1423, baseType: !60, size: 32, offset: 32)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !529, file: !56, line: 1424, baseType: !60, size: 32, offset: 64)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !529, file: !56, line: 1425, baseType: !497, size: 32, offset: 96)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !486, file: !56, line: 1530, baseType: !503, size: 1792, offset: 6400)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !486, file: !56, line: 1531, baseType: !537, size: 256, offset: 8192)
!537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !538, size: 256, elements: !500)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !56, line: 1432, baseType: !539)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1429, size: 128, elements: !540)
!540 = !{!541, !542}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !539, file: !56, line: 1430, baseType: !60, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !539, file: !56, line: 1431, baseType: !543, size: 96, offset: 32)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 96, elements: !544)
!544 = !{!545}
!545 = !DISubrange(count: 12)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !486, file: !56, line: 1532, baseType: !503, size: 1792, offset: 8448)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !486, file: !56, line: 1533, baseType: !548, size: 256, offset: 10240)
!548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !549, size: 256, elements: !500)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !56, line: 1440, baseType: !550)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1435, size: 128, elements: !551)
!551 = !{!552, !553, !554, !555}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !550, file: !56, line: 1436, baseType: !60, size: 32)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !550, file: !56, line: 1437, baseType: !60, size: 32, offset: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !550, file: !56, line: 1438, baseType: !60, size: 32, offset: 64)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !550, file: !56, line: 1439, baseType: !497, size: 32, offset: 96)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !486, file: !56, line: 1534, baseType: !503, size: 1792, offset: 10496)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !486, file: !56, line: 1535, baseType: !558, size: 256, offset: 12288)
!558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !559, size: 256, elements: !500)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !56, line: 1448, baseType: !560)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1443, size: 128, elements: !561)
!561 = !{!562, !563, !564, !565}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !560, file: !56, line: 1444, baseType: !60, size: 32)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !560, file: !56, line: 1445, baseType: !60, size: 32, offset: 32)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !560, file: !56, line: 1446, baseType: !60, size: 32, offset: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !560, file: !56, line: 1447, baseType: !497, size: 32, offset: 96)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !486, file: !56, line: 1536, baseType: !503, size: 1792, offset: 12544)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !486, file: !56, line: 1537, baseType: !568, size: 256, offset: 14336)
!568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 256, elements: !500)
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !56, line: 1455, baseType: !570)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1450, size: 128, elements: !571)
!571 = !{!572, !573, !574, !575}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !570, file: !56, line: 1451, baseType: !60, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !570, file: !56, line: 1452, baseType: !60, size: 32, offset: 32)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !570, file: !56, line: 1453, baseType: !60, size: 32, offset: 64)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !570, file: !56, line: 1454, baseType: !497, size: 32, offset: 96)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !486, file: !56, line: 1538, baseType: !503, size: 1792, offset: 14592)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !486, file: !56, line: 1539, baseType: !578, size: 512, offset: 16384)
!578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !579, size: 512, elements: !498)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !56, line: 1463, baseType: !580)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1458, size: 128, elements: !581)
!581 = !{!582, !583, !584, !585}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !580, file: !56, line: 1459, baseType: !60, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !580, file: !56, line: 1460, baseType: !60, size: 32, offset: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !580, file: !56, line: 1461, baseType: !60, size: 32, offset: 64)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !580, file: !56, line: 1462, baseType: !497, size: 32, offset: 96)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !486, file: !56, line: 1540, baseType: !587, size: 1536, offset: 16896)
!587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 1536, elements: !588)
!588 = !{!589}
!589 = !DISubrange(count: 192)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !486, file: !56, line: 1541, baseType: !591, size: 256, offset: 18432)
!591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !592, size: 256, elements: !500)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !56, line: 1471, baseType: !593)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1466, size: 128, elements: !594)
!594 = !{!595, !596, !597, !598}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !593, file: !56, line: 1467, baseType: !60, size: 32)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !593, file: !56, line: 1468, baseType: !60, size: 32, offset: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !593, file: !56, line: 1469, baseType: !60, size: 32, offset: 64)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !593, file: !56, line: 1470, baseType: !497, size: 32, offset: 96)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !486, file: !56, line: 1542, baseType: !503, size: 1792, offset: 18688)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !486, file: !56, line: 1543, baseType: !601, size: 256, offset: 20480)
!601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !602, size: 256, elements: !500)
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !56, line: 1480, baseType: !603)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1475, size: 128, elements: !604)
!604 = !{!605, !606, !607, !608}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !603, file: !56, line: 1476, baseType: !60, size: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !603, file: !56, line: 1477, baseType: !60, size: 32, offset: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !603, file: !56, line: 1478, baseType: !60, size: 32, offset: 64)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !603, file: !56, line: 1479, baseType: !497, size: 32, offset: 96)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !486, file: !56, line: 1544, baseType: !503, size: 1792, offset: 20736)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !486, file: !56, line: 1545, baseType: !611, size: 256, offset: 22528)
!611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 256, elements: !500)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !56, line: 1489, baseType: !613)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1484, size: 128, elements: !614)
!614 = !{!615, !616, !617, !618}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !613, file: !56, line: 1485, baseType: !60, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !613, file: !56, line: 1486, baseType: !60, size: 32, offset: 32)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !613, file: !56, line: 1487, baseType: !60, size: 32, offset: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !613, file: !56, line: 1488, baseType: !497, size: 32, offset: 96)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !486, file: !56, line: 1546, baseType: !620, size: 256, offset: 22784)
!620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !621, size: 256, elements: !500)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !56, line: 1497, baseType: !622)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1492, size: 128, elements: !623)
!623 = !{!624, !625, !626, !627}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !622, file: !56, line: 1493, baseType: !60, size: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !622, file: !56, line: 1494, baseType: !60, size: 32, offset: 32)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !622, file: !56, line: 1495, baseType: !60, size: 32, offset: 64)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !622, file: !56, line: 1496, baseType: !497, size: 32, offset: 96)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !486, file: !56, line: 1547, baseType: !587, size: 1536, offset: 23040)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !486, file: !56, line: 1548, baseType: !630, size: 896, offset: 24576)
!630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 896, elements: !638)
!631 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !56, line: 1505, baseType: !632)
!632 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1500, size: 128, elements: !633)
!633 = !{!634, !635, !636, !637}
!634 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !632, file: !56, line: 1501, baseType: !60, size: 32)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !632, file: !56, line: 1502, baseType: !60, size: 32, offset: 32)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !632, file: !56, line: 1503, baseType: !60, size: 32, offset: 64)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !632, file: !56, line: 1504, baseType: !497, size: 32, offset: 96)
!638 = !{!639}
!639 = !DISubrange(count: 7)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !486, file: !56, line: 1549, baseType: !641, size: 1152, offset: 25472)
!641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 1152, elements: !642)
!642 = !{!643}
!643 = !DISubrange(count: 144)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !486, file: !56, line: 1550, baseType: !645, size: 512, offset: 26624)
!645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !646, size: 512, elements: !498)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !56, line: 1513, baseType: !647)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1508, size: 128, elements: !648)
!648 = !{!649, !650, !651, !652}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !647, file: !56, line: 1509, baseType: !60, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !647, file: !56, line: 1510, baseType: !60, size: 32, offset: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !647, file: !56, line: 1511, baseType: !60, size: 32, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !647, file: !56, line: 1512, baseType: !497, size: 32, offset: 96)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !486, file: !56, line: 1551, baseType: !587, size: 1536, offset: 27136)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !486, file: !56, line: 1552, baseType: !655, size: 768, offset: 28672)
!655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !656, size: 768, elements: !314)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !56, line: 1519, baseType: !657)
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1516, size: 128, elements: !658)
!658 = !{!659, !660}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !657, file: !56, line: 1517, baseType: !60, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !657, file: !56, line: 1518, baseType: !543, size: 96, offset: 32)
!661 = !DIGlobalVariableExpression(var: !662, expr: !DIExpression())
!662 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !663, file: !664, line: 101, type: !812, isLocal: true, isDefinition: true)
!663 = distinct !DICompileUnit(language: DW_LANG_C99, file: !664, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !665, retainedTypes: !762, globals: !771, splitDebugInlining: false, nameTableKind: None)
!664 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!665 = !{!666, !673, !688, !694, !700, !705, !712, !728, !734, !738, !743, !750, !758}
!666 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 180, baseType: !18, size: 32, elements: !667)
!667 = !{!668, !669, !670, !671, !672}
!668 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!669 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!670 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!671 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!672 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !674, line: 189, baseType: !18, size: 32, elements: !675)
!674 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687}
!676 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!677 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!678 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!679 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!680 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!681 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!682 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!683 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!684 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!685 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!686 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!687 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!688 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !689, line: 355, baseType: !7, size: 32, elements: !690)
!689 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!690 = !{!691, !692, !693}
!691 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!692 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!693 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !674, line: 206, baseType: !7, size: 32, elements: !695)
!695 = !{!696, !697, !698, !699}
!696 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!697 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!698 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!699 = !DIEnumerator(name: "VDMA_OK", value: 0)
!700 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !664, line: 65, baseType: !18, size: 32, elements: !701)
!701 = !{!702, !703, !704}
!702 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!703 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!704 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!705 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !689, line: 345, baseType: !7, size: 32, elements: !706)
!706 = !{!707, !708, !709, !710, !711}
!707 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!708 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!709 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!710 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!711 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!712 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !689, line: 302, baseType: !18, size: 32, elements: !713)
!713 = !{!714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727}
!714 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!715 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!716 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!717 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!718 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!719 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!720 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!721 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!722 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!723 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!724 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!725 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!726 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!727 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!728 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !689, line: 321, baseType: !18, size: 32, elements: !729)
!729 = !{!730, !731, !732, !733}
!730 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!731 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!732 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!733 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!734 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !689, line: 330, baseType: !18, size: 32, elements: !735)
!735 = !{!736, !737}
!736 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!737 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!738 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !689, line: 337, baseType: !18, size: 32, elements: !739)
!739 = !{!740, !741, !742}
!740 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!741 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!742 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!743 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !744, line: 101, baseType: !7, size: 32, elements: !745)
!744 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!745 = !{!746, !747, !748, !749}
!746 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!747 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!748 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!749 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!750 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !751, line: 152, baseType: !7, size: 32, elements: !752)
!751 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!752 = !{!753, !754, !755, !756, !757}
!753 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!754 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!755 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!756 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!757 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!758 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !674, line: 222, baseType: !7, size: 32, elements: !759)
!759 = !{!760, !761}
!760 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!761 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!762 = !{!88, !61, !763}
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 32)
!764 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !765, line: 96, baseType: !766)
!765 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !765, line: 93, size: 64, elements: !767)
!767 = !{!768, !769}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !766, file: !765, line: 94, baseType: !91, size: 8)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !766, file: !765, line: 95, baseType: !770, size: 32, offset: 32)
!770 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !98, line: 186, baseType: !666)
!771 = !{!661, !772, !785, !790, !804, !810}
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !663, file: !664, line: 102, type: !774, isLocal: true, isDefinition: true)
!774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !775, size: 256, elements: !498)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !664, line: 74, baseType: !776)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !664, line: 71, size: 64, elements: !777)
!777 = !{!778, !784}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !776, file: !664, line: 72, baseType: !779, size: 32)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !689, line: 410, baseType: !780)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 32)
!781 = !DISubroutineType(types: !782)
!782 = !{null, !783, !88}
!783 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !689, line: 359, baseType: !688)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !776, file: !664, line: 73, baseType: !88, size: 32, offset: 32)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !663, file: !664, line: 103, type: !787, isLocal: true, isDefinition: true)
!787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !764, size: 512, elements: !788)
!788 = !{!789}
!789 = !DISubrange(count: 8)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !663, file: !664, line: 104, type: !792, isLocal: true, isDefinition: true)
!792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !793, size: 896, elements: !498)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !689, line: 390, baseType: !794)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !689, line: 382, size: 224, elements: !795)
!795 = !{!796, !798, !799, !800, !801, !802, !803}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !794, file: !689, line: 383, baseType: !797, size: 32)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !794, file: !689, line: 384, baseType: !61, size: 32, offset: 32)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !794, file: !689, line: 385, baseType: !61, size: 32, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !794, file: !689, line: 386, baseType: !797, size: 32, offset: 96)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !794, file: !689, line: 387, baseType: !61, size: 32, offset: 128)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !794, file: !689, line: 388, baseType: !61, size: 32, offset: 160)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !794, file: !689, line: 389, baseType: !61, size: 32, offset: 192)
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !663, file: !664, line: 105, type: !806, isLocal: true, isDefinition: true)
!806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 416, elements: !808)
!807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !61)
!808 = !{!809}
!809 = !DISubrange(count: 13)
!810 = !DIGlobalVariableExpression(var: !811, expr: !DIExpression())
!811 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !663, file: !664, line: 90, type: !91, isLocal: true, isDefinition: true)
!812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !813, size: 128, elements: !498)
!813 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !814)
!814 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !664, line: 69, baseType: !700)
!815 = !DIGlobalVariableExpression(var: !811, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !818, file: !819, line: 53, type: !899, isLocal: false, isDefinition: true)
!818 = distinct !DICompileUnit(language: DW_LANG_C99, file: !819, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !820, retainedTypes: !831, globals: !887, splitDebugInlining: false, nameTableKind: None)
!819 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!820 = !{!97, !168, !673, !666, !821}
!821 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !765, line: 46, baseType: !18, size: 32, elements: !822)
!822 = !{!823, !824, !825, !826, !827, !828, !829, !830}
!823 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!824 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!825 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!826 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!827 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!828 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!829 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!830 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!831 = !{!832}
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 32)
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !834)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !835)
!835 = !{!836, !842, !847, !853, !854, !859, !864, !865, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !834, file: !56, line: 547, baseType: !837, size: 32)
!837 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !834, file: !56, line: 543, size: 32, elements: !838)
!838 = !{!839, !840, !841}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !837, file: !56, line: 544, baseType: !272, size: 32)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !837, file: !56, line: 545, baseType: !60, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !837, file: !56, line: 546, baseType: !60, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !834, file: !56, line: 551, baseType: !843, size: 32, offset: 32)
!843 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !834, file: !56, line: 548, size: 32, elements: !844)
!844 = !{!845, !846}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !843, file: !56, line: 549, baseType: !60, size: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !843, file: !56, line: 550, baseType: !60, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !834, file: !56, line: 556, baseType: !848, size: 32, offset: 64)
!848 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !834, file: !56, line: 552, size: 32, elements: !849)
!849 = !{!850, !851, !852}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !848, file: !56, line: 553, baseType: !272, size: 32)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !848, file: !56, line: 554, baseType: !60, size: 32)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !848, file: !56, line: 555, baseType: !60, size: 32)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !834, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !834, file: !56, line: 561, baseType: !855, size: 32, offset: 128)
!855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !834, file: !56, line: 558, size: 32, elements: !856)
!856 = !{!857, !858}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !855, file: !56, line: 559, baseType: !60, size: 32)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !855, file: !56, line: 560, baseType: !60, size: 32)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !834, file: !56, line: 565, baseType: !860, size: 32, offset: 160)
!860 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !834, file: !56, line: 562, size: 32, elements: !861)
!861 = !{!862, !863}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !860, file: !56, line: 563, baseType: !272, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !860, file: !56, line: 564, baseType: !60, size: 32)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !834, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !834, file: !56, line: 570, baseType: !866, size: 32, offset: 224)
!866 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !834, file: !56, line: 567, size: 32, elements: !867)
!867 = !{!868, !869}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !866, file: !56, line: 568, baseType: !60, size: 32)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !866, file: !56, line: 569, baseType: !60, size: 32)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !834, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !834, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !834, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !834, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !834, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !834, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !834, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !834, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !834, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !834, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !834, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !834, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !834, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !834, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !834, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !834, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !834, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!887 = !{!816, !888, !893}
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !818, file: !819, line: 54, type: !890, isLocal: false, isDefinition: true)
!890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 128, elements: !498)
!891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !892)
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !98, line: 1237, baseType: !97)
!893 = !DIGlobalVariableExpression(var: !894, expr: !DIExpression())
!894 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !818, file: !819, line: 55, type: !895, isLocal: false, isDefinition: true)
!895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !896, size: 128, elements: !498)
!896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !897)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !56, line: 125, baseType: !898)
!898 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !56, line: 123, baseType: !168)
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !900, size: 128, elements: !498)
!900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !832)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!902 = distinct !DIGlobalVariable(name: "priority_set", scope: !903, file: !904, line: 128, type: !61, isLocal: true, isDefinition: true)
!903 = distinct !DISubprogram(name: "hal_nvic_init", scope: !904, file: !904, line: 126, type: !905, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !994)
!904 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!905 = !DISubroutineType(types: !906)
!906 = !{!907}
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !751, line: 158, baseType: !750)
!908 = distinct !DICompileUnit(language: DW_LANG_C99, file: !904, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !909, retainedTypes: !910, globals: !976, splitDebugInlining: false, nameTableKind: None)
!909 = !{!750, !168}
!910 = !{!897, !911, !61, !944, !974}
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 32)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !913, line: 418, baseType: !914)
!913 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !913, line: 395, size: 1120, elements: !915)
!915 = !{!916, !917, !918, !919, !920, !921, !922, !924, !925, !926, !927, !928, !929, !930, !931, !933, !934, !935, !937, !941, !943}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !914, file: !913, line: 397, baseType: !272, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !914, file: !913, line: 398, baseType: !60, size: 32, offset: 32)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !914, file: !913, line: 399, baseType: !60, size: 32, offset: 64)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !914, file: !913, line: 400, baseType: !60, size: 32, offset: 96)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !914, file: !913, line: 401, baseType: !60, size: 32, offset: 128)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !914, file: !913, line: 402, baseType: !60, size: 32, offset: 160)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !914, file: !913, line: 403, baseType: !923, size: 96, offset: 192)
!923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 96, elements: !544)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !914, file: !913, line: 404, baseType: !60, size: 32, offset: 288)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !914, file: !913, line: 405, baseType: !60, size: 32, offset: 320)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !914, file: !913, line: 406, baseType: !60, size: 32, offset: 352)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !914, file: !913, line: 407, baseType: !60, size: 32, offset: 384)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !914, file: !913, line: 408, baseType: !60, size: 32, offset: 416)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !914, file: !913, line: 409, baseType: !60, size: 32, offset: 448)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !914, file: !913, line: 410, baseType: !60, size: 32, offset: 480)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !914, file: !913, line: 411, baseType: !932, size: 64, offset: 512)
!932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 64, elements: !500)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !914, file: !913, line: 412, baseType: !272, size: 32, offset: 576)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !914, file: !913, line: 413, baseType: !272, size: 32, offset: 608)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !914, file: !913, line: 414, baseType: !936, size: 128, offset: 640)
!936 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 128, elements: !498)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !914, file: !913, line: 415, baseType: !938, size: 160, offset: 768)
!938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 160, elements: !939)
!939 = !{!940}
!940 = !DISubrange(count: 5)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !914, file: !913, line: 416, baseType: !942, size: 160, offset: 928)
!942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !939)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !914, file: !913, line: 417, baseType: !60, size: 32, offset: 1088)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !913, line: 378, baseType: !946)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !913, line: 363, size: 28704, elements: !947)
!947 = !{!948, !950, !954, !955, !956, !957, !958, !959, !960, !961, !965, !969, !973}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !946, file: !913, line: 365, baseType: !949, size: 256)
!949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !788)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !946, file: !913, line: 366, baseType: !951, size: 768, offset: 256)
!951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !952)
!952 = !{!953}
!953 = !DISubrange(count: 24)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !946, file: !913, line: 367, baseType: !949, size: 256, offset: 1024)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !946, file: !913, line: 368, baseType: !951, size: 768, offset: 1280)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !946, file: !913, line: 369, baseType: !949, size: 256, offset: 2048)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !946, file: !913, line: 370, baseType: !951, size: 768, offset: 2304)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !946, file: !913, line: 371, baseType: !949, size: 256, offset: 3072)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !946, file: !913, line: 372, baseType: !951, size: 768, offset: 3328)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !946, file: !913, line: 373, baseType: !949, size: 256, offset: 4096)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !946, file: !913, line: 374, baseType: !962, size: 1792, offset: 4352)
!962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !963)
!963 = !{!964}
!964 = !DISubrange(count: 56)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !946, file: !913, line: 375, baseType: !966, size: 1920, offset: 6144)
!966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 1920, elements: !967)
!967 = !{!968}
!968 = !DISubrange(count: 240)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !946, file: !913, line: 376, baseType: !970, size: 20608, offset: 8064)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !971)
!971 = !{!972}
!972 = !DISubrange(count: 644)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !946, file: !913, line: 377, baseType: !60, size: 32, offset: 28672)
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !62, line: 44, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !64, line: 77, baseType: !7)
!976 = !{!977, !978, !991}
!977 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!978 = !DIGlobalVariableExpression(var: !979, expr: !DIExpression())
!979 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !908, file: !904, line: 119, type: !980, isLocal: false, isDefinition: true)
!980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !981, size: 4096, elements: !989)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !904, line: 50, baseType: !982)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !904, line: 47, size: 64, elements: !983)
!983 = !{!984, !988}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !982, file: !904, line: 48, baseType: !985, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = !DISubroutineType(types: !987)
!987 = !{null, !897}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !982, file: !904, line: 49, baseType: !61, size: 32, offset: 32)
!989 = !{!990}
!990 = !DISubrange(count: 64)
!991 = !DIGlobalVariableExpression(var: !992, expr: !DIExpression())
!992 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !908, file: !904, line: 52, type: !993, isLocal: true, isDefinition: true)
!993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 2048, elements: !989)
!994 = !{!995}
!995 = !DILocalVariable(name: "i", scope: !903, file: !904, line: 129, type: !61)
!996 = !DIGlobalVariableExpression(var: !997, expr: !DIExpression())
!997 = distinct !DIGlobalVariable(name: "DelayResume", scope: !998, file: !999, line: 55, type: !91, isLocal: false, isDefinition: true)
!998 = distinct !DICompileUnit(language: DW_LANG_C99, file: !999, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1000, retainedTypes: !1035, globals: !1074, splitDebugInlining: false, nameTableKind: None)
!999 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1000 = !{!1001, !1009, !1014}
!1001 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !1002, line: 51, baseType: !18, size: 32, elements: !1003)
!1002 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1003 = !{!1004, !1005, !1006, !1007, !1008}
!1004 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!1005 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!1006 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!1007 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!1008 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!1009 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !1002, line: 62, baseType: !18, size: 32, elements: !1010)
!1010 = !{!1011, !1012, !1013}
!1011 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!1012 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!1013 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!1014 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1015, line: 228, baseType: !18, size: 32, elements: !1016)
!1015 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1016 = !{!1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034}
!1017 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!1018 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!1019 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!1020 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!1021 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!1022 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!1023 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!1024 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!1025 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!1026 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!1027 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!1028 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!1029 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!1030 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!1031 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!1032 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!1033 = !DIEnumerator(name: "NR_MUXS", value: 16)
!1034 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!1035 = !{!1036, !1037, !1059, !797, !61, !18, !1065, !1067, !1071, !1073}
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1039)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1040)
!1040 = !{!1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1039, file: !56, line: 2759, baseType: !60, size: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1039, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1039, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1039, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1039, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1039, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1039, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1039, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1039, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1039, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1039, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1039, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1039, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1039, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1039, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1039, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1039, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1039, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 32)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1061)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1062)
!1062 = !{!1063, !1064}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1061, file: !56, line: 2799, baseType: !60, size: 32)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1061, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 32)
!1066 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !18)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !62, line: 36, baseType: !1069)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !64, line: 57, baseType: !1070)
!1070 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 32)
!1072 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !358)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!1074 = !{!996, !1075, !1077, !1079, !1081, !1083, !1085, !1087, !1089, !1091, !1093}
!1075 = !DIGlobalVariableExpression(var: !1076, expr: !DIExpression())
!1076 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !998, file: !999, line: 604, type: !356, isLocal: false, isDefinition: true)
!1077 = !DIGlobalVariableExpression(var: !1078, expr: !DIExpression())
!1078 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !998, file: !999, line: 605, type: !61, isLocal: false, isDefinition: true)
!1079 = !DIGlobalVariableExpression(var: !1080, expr: !DIExpression())
!1080 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !998, file: !999, line: 606, type: !61, isLocal: false, isDefinition: true)
!1081 = !DIGlobalVariableExpression(var: !1082, expr: !DIExpression())
!1082 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !998, file: !999, line: 607, type: !61, isLocal: false, isDefinition: true)
!1083 = !DIGlobalVariableExpression(var: !1084, expr: !DIExpression())
!1084 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !998, file: !999, line: 608, type: !61, isLocal: false, isDefinition: true)
!1085 = !DIGlobalVariableExpression(var: !1086, expr: !DIExpression())
!1086 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !998, file: !999, line: 609, type: !61, isLocal: false, isDefinition: true)
!1087 = !DIGlobalVariableExpression(var: !1088, expr: !DIExpression())
!1088 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !998, file: !999, line: 610, type: !61, isLocal: false, isDefinition: true)
!1089 = !DIGlobalVariableExpression(var: !1090, expr: !DIExpression())
!1090 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !998, file: !999, line: 611, type: !61, isLocal: false, isDefinition: true)
!1091 = !DIGlobalVariableExpression(var: !1092, expr: !DIExpression())
!1092 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !998, file: !999, line: 665, type: !61, isLocal: false, isDefinition: true)
!1093 = !DIGlobalVariableExpression(var: !1094, expr: !DIExpression())
!1094 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !998, file: !999, line: 666, type: !61, isLocal: false, isDefinition: true)
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !1097, file: !1098, line: 334, type: !91, isLocal: false, isDefinition: true)
!1097 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1098, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1099, retainedTypes: !1267, globals: !1407, splitDebugInlining: false, nameTableKind: None)
!1098 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1099 = !{!1100, !1191, !1197, !1204, !1216, !1227, !1236, !1245, !1249, !1253}
!1100 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1101, line: 58, baseType: !7, size: 32, elements: !1102)
!1101 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1102 = !{!1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190}
!1103 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!1104 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!1105 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!1106 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!1107 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!1108 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!1109 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!1110 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!1111 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!1112 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!1113 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!1114 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!1115 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!1116 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!1117 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!1118 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!1119 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!1120 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!1121 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!1122 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!1123 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!1124 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!1125 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!1126 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!1127 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!1128 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!1129 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!1130 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!1131 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!1132 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!1133 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!1134 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!1135 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!1136 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!1137 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!1138 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!1139 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!1140 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!1141 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!1142 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!1143 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!1144 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!1145 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!1146 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!1147 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!1148 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!1149 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!1150 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!1151 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!1152 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!1153 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!1154 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!1155 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!1156 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!1157 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!1158 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!1159 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!1160 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!1161 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!1162 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!1163 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!1164 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!1165 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!1166 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!1167 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!1168 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!1169 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!1170 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!1171 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!1172 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!1173 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!1174 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!1175 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!1176 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!1177 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!1178 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!1179 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!1180 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!1181 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!1182 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!1183 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!1184 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!1185 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!1186 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!1187 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!1188 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!1189 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!1190 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!1191 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1192, line: 81, baseType: !18, size: 32, elements: !1193)
!1192 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1193 = !{!1194, !1195, !1196}
!1194 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!1195 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!1196 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!1197 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1098, line: 298, baseType: !18, size: 32, elements: !1198)
!1198 = !{!1199, !1200, !1201, !1202, !1203}
!1199 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!1200 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!1201 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!1202 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!1203 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!1204 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1205, line: 51, baseType: !18, size: 32, elements: !1206)
!1205 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1206 = !{!1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215}
!1207 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!1208 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!1209 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!1210 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!1211 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!1212 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!1213 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!1214 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!1215 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!1216 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1217, line: 110, baseType: !7, size: 32, elements: !1218)
!1217 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1218 = !{!1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226}
!1219 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1220 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1221 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1222 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1223 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1224 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1225 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1226 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1227 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1205, line: 73, baseType: !18, size: 32, elements: !1228)
!1228 = !{!1229, !1230, !1231, !1232, !1233, !1234, !1235}
!1229 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!1230 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!1231 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!1232 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!1233 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!1234 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!1235 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!1236 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1205, line: 83, baseType: !18, size: 32, elements: !1237)
!1237 = !{!1238, !1239, !1240, !1241, !1242, !1243, !1244}
!1238 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!1239 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!1240 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!1241 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!1242 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!1243 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!1244 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!1245 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1205, line: 98, baseType: !18, size: 32, elements: !1246)
!1246 = !{!1247, !1248}
!1247 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!1248 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!1249 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1192, line: 76, baseType: !18, size: 32, elements: !1250)
!1250 = !{!1251, !1252}
!1251 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!1252 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!1253 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1192, line: 208, baseType: !18, size: 32, elements: !1254)
!1254 = !{!1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266}
!1255 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!1256 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!1257 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!1258 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!1259 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!1260 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!1261 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!1262 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!1263 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!1264 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!1265 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!1266 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!1267 = !{!61, !1036, !1067, !797, !1268, !1378, !1400, !88, !1406, !358}
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1192, line: 193, baseType: !1270)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1192, line: 134, size: 1824, elements: !1271)
!1271 = !{!1272, !1273, !1274, !1281, !1287, !1291, !1299, !1300, !1307, !1308, !1309, !1310, !1318, !1321, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1372, !1373, !1377}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1270, file: !1192, line: 136, baseType: !61, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1270, file: !1192, line: 137, baseType: !797, size: 32, offset: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1270, file: !1192, line: 138, baseType: !1275, size: 32, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1276, line: 56, baseType: !1277)
!1276 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 32)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1276, line: 54, size: 8, elements: !1279)
!1279 = !{!1280}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1278, file: !1276, line: 55, baseType: !356, size: 8)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1270, file: !1192, line: 139, baseType: !1282, size: 32, offset: 96)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1276, line: 46, baseType: !1283)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1276, line: 44, size: 8, elements: !1285)
!1285 = !{!1286}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1284, file: !1276, line: 45, baseType: !356, size: 8)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1270, file: !1192, line: 140, baseType: !1288, size: 8, offset: 128)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !62, line: 20, baseType: !1289)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !64, line: 41, baseType: !1290)
!1290 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1270, file: !1192, line: 143, baseType: !1292, size: 32, offset: 160)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 32)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1294, line: 146, baseType: !1295)
!1294 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 143, size: 64, elements: !1296)
!1296 = !{!1297, !1298}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1295, file: !1294, line: 144, baseType: !61, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1295, file: !1294, line: 145, baseType: !61, size: 32, offset: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1270, file: !1192, line: 144, baseType: !797, size: 32, offset: 192)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1270, file: !1192, line: 145, baseType: !1301, size: 32, offset: 224)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1294, line: 152, baseType: !1303)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 149, size: 64, elements: !1304)
!1304 = !{!1305, !1306}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1303, file: !1294, line: 150, baseType: !61, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1303, file: !1294, line: 151, baseType: !61, size: 32, offset: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1270, file: !1192, line: 146, baseType: !797, size: 32, offset: 256)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1270, file: !1192, line: 147, baseType: !61, size: 32, offset: 288)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1270, file: !1192, line: 148, baseType: !797, size: 32, offset: 320)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1270, file: !1192, line: 151, baseType: !1311, size: 1024, offset: 352)
!1311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1312, size: 1024, elements: !1317)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1294, line: 170, baseType: !1313)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 167, size: 64, elements: !1314)
!1314 = !{!1315, !1316}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1313, file: !1294, line: 168, baseType: !61, size: 32)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1313, file: !1294, line: 169, baseType: !61, size: 32, offset: 32)
!1317 = !{!789, !501}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1270, file: !1192, line: 155, baseType: !1319, size: 32, offset: 1376)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 32)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !1205, line: 120, baseType: !356)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1270, file: !1192, line: 156, baseType: !1322, size: 32, offset: 1408)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 32)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1192, line: 124, baseType: !1324)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1192, line: 90, size: 200, elements: !1325)
!1325 = !{!1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1324, file: !1192, line: 91, baseType: !356, size: 8)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1324, file: !1192, line: 92, baseType: !356, size: 8, offset: 8)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1324, file: !1192, line: 94, baseType: !356, size: 8, offset: 16)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1324, file: !1192, line: 95, baseType: !356, size: 8, offset: 24)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1324, file: !1192, line: 96, baseType: !356, size: 8, offset: 32)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1324, file: !1192, line: 98, baseType: !356, size: 8, offset: 40)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1324, file: !1192, line: 99, baseType: !356, size: 8, offset: 48)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1324, file: !1192, line: 100, baseType: !356, size: 8, offset: 56)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1324, file: !1192, line: 101, baseType: !356, size: 8, offset: 64)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1324, file: !1192, line: 103, baseType: !356, size: 8, offset: 72)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1324, file: !1192, line: 104, baseType: !356, size: 8, offset: 80)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1324, file: !1192, line: 106, baseType: !356, size: 8, offset: 88)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1324, file: !1192, line: 107, baseType: !356, size: 8, offset: 96)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1324, file: !1192, line: 108, baseType: !356, size: 8, offset: 104)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1324, file: !1192, line: 109, baseType: !356, size: 8, offset: 112)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1324, file: !1192, line: 110, baseType: !356, size: 8, offset: 120)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1324, file: !1192, line: 111, baseType: !356, size: 8, offset: 128)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1324, file: !1192, line: 112, baseType: !356, size: 8, offset: 136)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1324, file: !1192, line: 114, baseType: !356, size: 8, offset: 144)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1324, file: !1192, line: 115, baseType: !356, size: 8, offset: 152)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1324, file: !1192, line: 118, baseType: !356, size: 8, offset: 160)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1324, file: !1192, line: 119, baseType: !356, size: 8, offset: 168)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1324, file: !1192, line: 120, baseType: !356, size: 8, offset: 176)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1324, file: !1192, line: 121, baseType: !356, size: 8, offset: 184)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1324, file: !1192, line: 122, baseType: !356, size: 8, offset: 192)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1270, file: !1192, line: 157, baseType: !61, size: 32, offset: 1440)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1270, file: !1192, line: 158, baseType: !1068, size: 16, offset: 1472)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1270, file: !1192, line: 159, baseType: !1068, size: 16, offset: 1488)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1270, file: !1192, line: 163, baseType: !1068, size: 16, offset: 1504)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1270, file: !1192, line: 164, baseType: !1068, size: 16, offset: 1520)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1270, file: !1192, line: 167, baseType: !356, size: 8, offset: 1536)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1270, file: !1192, line: 168, baseType: !1358, size: 24, offset: 1544)
!1358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 24, elements: !1359)
!1359 = !{!1360}
!1360 = !DISubrange(count: 3)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1270, file: !1192, line: 169, baseType: !356, size: 8, offset: 1568)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1270, file: !1192, line: 170, baseType: !356, size: 8, offset: 1576)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1270, file: !1192, line: 173, baseType: !1068, size: 16, offset: 1584)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1270, file: !1192, line: 174, baseType: !61, size: 32, offset: 1600)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1270, file: !1192, line: 175, baseType: !61, size: 32, offset: 1632)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1270, file: !1192, line: 178, baseType: !91, size: 8, offset: 1664)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1270, file: !1192, line: 179, baseType: !91, size: 8, offset: 1672)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1270, file: !1192, line: 182, baseType: !1369, size: 32, offset: 1696)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 32)
!1370 = !DISubroutineType(types: !1371)
!1371 = !{!7, !88}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1270, file: !1192, line: 186, baseType: !1369, size: 32, offset: 1728)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1270, file: !1192, line: 187, baseType: !1374, size: 32, offset: 1760)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 32)
!1375 = !DISubroutineType(types: !1376)
!1376 = !{!7, !88, !61, !88, !61}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1270, file: !1192, line: 188, baseType: !1374, size: 32, offset: 1792)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1380)
!1380 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1381)
!1381 = !{!1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1380, file: !56, line: 2759, baseType: !60, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1380, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1380, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1380, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1380, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1380, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1380, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1380, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1380, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1380, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1380, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1380, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1380, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1380, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1380, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1380, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1380, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1380, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 32)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1402)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1403)
!1403 = !{!1404, !1405}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1402, file: !56, line: 2799, baseType: !60, size: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1402, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 32)
!1407 = !{!1095, !1408, !1410, !1412, !1417}
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !1097, file: !1098, line: 382, type: !61, isLocal: false, isDefinition: true)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !1097, file: !1098, line: 383, type: !61, isLocal: false, isDefinition: true)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !1097, file: !1098, line: 369, type: !1414, isLocal: true, isDefinition: true)
!1414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 1024, elements: !1415)
!1415 = !{!1416}
!1416 = !DISubrange(count: 128)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !1097, file: !1098, line: 1409, type: !7, isLocal: true, isDefinition: true)
!1419 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !1422, file: !1477, line: 35, type: !1478, isLocal: false, isDefinition: true)
!1422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1423, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1424, retainedTypes: !1470, globals: !1471, splitDebugInlining: false, nameTableKind: None)
!1423 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1424 = !{!1425}
!1425 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1426, line: 77, baseType: !18, size: 32, elements: !1427)
!1426 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1427 = !{!1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469}
!1428 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!1429 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!1430 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!1431 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!1432 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!1433 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!1434 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!1435 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!1436 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!1437 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!1438 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1439 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1440 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1441 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1442 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1443 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1444 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1445 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1446 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1447 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1448 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1449 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1450 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1451 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1452 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1453 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1454 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1455 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1456 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1457 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1458 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1459 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1460 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1461 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1462 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1463 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1464 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1465 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1466 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1467 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1468 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1469 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1470 = !{!88}
!1471 = !{!1420, !1472, !1475}
!1472 = !DIGlobalVariableExpression(var: !1473, expr: !DIExpression())
!1473 = distinct !DIGlobalVariable(name: "cmem_index", scope: !1422, file: !1423, line: 96, type: !1474, isLocal: true, isDefinition: true)
!1474 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1475 = !DIGlobalVariableExpression(var: !1476, expr: !DIExpression())
!1476 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !1422, file: !1423, line: 94, type: !1474, isLocal: true, isDefinition: true)
!1477 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1479)
!1479 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !1423, line: 54, baseType: !1480)
!1480 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1423, line: 51, size: 576, elements: !1481)
!1481 = !{!1482, !1492}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1480, file: !1423, line: 52, baseType: !1483, size: 96)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1426, line: 152, baseType: !1484)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1426, line: 144, size: 96, elements: !1485)
!1485 = !{!1486, !1488, !1490}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1484, file: !1426, line: 145, baseType: !1487, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !1426, line: 61, baseType: !18)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1484, file: !1426, line: 146, baseType: !1489, size: 16, offset: 32)
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !1426, line: 62, baseType: !1070)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1484, file: !1426, line: 150, baseType: !1491, size: 32, offset: 64)
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !1426, line: 127, baseType: !1425)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1480, file: !1423, line: 53, baseType: !1493, size: 480, offset: 96)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1494, line: 107, baseType: !1495)
!1494 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1494, line: 103, size: 480, elements: !1496)
!1496 = !{!1497, !1498, !1499}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1495, file: !1494, line: 104, baseType: !18, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1495, file: !1494, line: 105, baseType: !18, size: 32, offset: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1495, file: !1494, line: 106, baseType: !1500, size: 400, offset: 64)
!1500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1501, size: 400, elements: !939)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1494, line: 100, baseType: !1502)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1494, line: 92, size: 80, elements: !1503)
!1503 = !{!1504, !1505, !1506}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1502, file: !1494, line: 93, baseType: !356, size: 8)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1502, file: !1494, line: 94, baseType: !356, size: 8, offset: 8)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1502, file: !1494, line: 96, baseType: !1507, size: 64, offset: 16)
!1507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 64, elements: !788)
!1508 = !DIGlobalVariableExpression(var: !1509, expr: !DIExpression())
!1509 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !1510, file: !1513, line: 96, type: !1514, isLocal: false, isDefinition: true)
!1510 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1511, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1512, splitDebugInlining: false, nameTableKind: None)
!1511 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1512 = !{!1508}
!1513 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1515, size: 152, elements: !1517)
!1515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1516)
!1516 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1517 = !{!1518}
!1518 = !DISubrange(count: 19)
!1519 = !DIGlobalVariableExpression(var: !1520, expr: !DIExpression())
!1520 = distinct !DIGlobalVariable(name: "nor_egid", scope: !1521, file: !1522, line: 168, type: !1872, isLocal: false, isDefinition: true)
!1521 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1522, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1523, retainedTypes: !1534, globals: !1543, splitDebugInlining: false, nameTableKind: None)
!1522 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1523 = !{!1524, !1100, !1425}
!1524 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1525, line: 49, baseType: !18, size: 32, elements: !1526)
!1525 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1526 = !{!1527, !1528, !1529, !1530, !1531, !1532, !1533}
!1527 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!1528 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!1529 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!1530 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!1531 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!1532 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!1533 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!1534 = !{!1535, !61, !1537}
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !1101, line: 47, baseType: !358)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1294, line: 146, baseType: !1539)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 143, size: 64, elements: !1540)
!1540 = !{!1541, !1542}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1539, file: !1294, line: 144, baseType: !61, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1539, file: !1294, line: 145, baseType: !61, size: 32, offset: 32)
!1543 = !{!1519, !1544, !1546, !1556, !1693, !1695, !1697, !1699, !1701, !1706, !1709, !1718, !1720, !1722, !1730, !1732, !1734, !1817, !1820, !1822, !1824, !1835, !1837, !1850}
!1544 = !DIGlobalVariableExpression(var: !1545, expr: !DIExpression())
!1545 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !1521, file: !1522, line: 94, type: !974, isLocal: true, isDefinition: true)
!1546 = !DIGlobalVariableExpression(var: !1547, expr: !DIExpression())
!1547 = distinct !DIGlobalVariable(name: "cmem_id", scope: !1521, file: !1522, line: 95, type: !1548, isLocal: false, isDefinition: true)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 32)
!1549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1550)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1494, line: 100, baseType: !1551)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1494, line: 92, size: 80, elements: !1552)
!1552 = !{!1553, !1554, !1555}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1551, file: !1494, line: 93, baseType: !356, size: 8)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1551, file: !1494, line: 94, baseType: !356, size: 8, offset: 8)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1551, file: !1494, line: 96, baseType: !1507, size: 64, offset: 16)
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !1521, file: !1522, line: 127, type: !1558, isLocal: false, isDefinition: true)
!1558 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !1294, line: 317, baseType: !1559)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !1294, line: 237, size: 2720, elements: !1560)
!1560 = !{!1561, !1562, !1614, !1615, !1618, !1619, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1660, !1661, !1662, !1667, !1668, !1669, !1670, !1671, !1675, !1679, !1686, !1687, !1688, !1689, !1690, !1691, !1692}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !1559, file: !1294, line: 238, baseType: !61, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1559, file: !1294, line: 239, baseType: !1563, size: 32, offset: 32)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1294, line: 121, baseType: !1565)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 105, size: 480, elements: !1566)
!1566 = !{!1567, !1571, !1572, !1576, !1580, !1584, !1585, !1589, !1590, !1591, !1592, !1597, !1602, !1606, !1610}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !1565, file: !1294, line: 106, baseType: !1568, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 32)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{!7, !88, !88}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !1565, file: !1294, line: 107, baseType: !1369, size: 32, offset: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !1565, file: !1294, line: 108, baseType: !1573, size: 32, offset: 64)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 32)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{!88, !88, !61, !61}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !1565, file: !1294, line: 109, baseType: !1577, size: 32, offset: 96)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!7, !88, !61}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !1565, file: !1294, line: 110, baseType: !1581, size: 32, offset: 128)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{!7, !88, !88, !88, !61}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !1565, file: !1294, line: 111, baseType: !1577, size: 32, offset: 160)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !1565, file: !1294, line: 112, baseType: !1586, size: 32, offset: 192)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 32)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{!974, !88, !61}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !1565, file: !1294, line: 113, baseType: !1577, size: 32, offset: 224)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !1565, file: !1294, line: 114, baseType: !1577, size: 32, offset: 256)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !1565, file: !1294, line: 115, baseType: !1577, size: 32, offset: 288)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !1565, file: !1294, line: 116, baseType: !1593, size: 32, offset: 320)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{!7, !88, !7, !1596, !88, !1596}
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !1101, line: 50, baseType: !18)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !1565, file: !1294, line: 117, baseType: !1598, size: 32, offset: 352)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{!7, !88, !1601}
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !1565, file: !1294, line: 118, baseType: !1603, size: 32, offset: 384)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!7, !88, !88, !61}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1565, file: !1294, line: 119, baseType: !1607, size: 32, offset: 416)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 32)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!91, !88, !61}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !1565, file: !1294, line: 120, baseType: !1611, size: 32, offset: 448)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 32)
!1612 = !DISubroutineType(types: !1613)
!1613 = !{!7, !88, !61, !88}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1559, file: !1294, line: 240, baseType: !88, size: 32, offset: 64)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !1559, file: !1294, line: 241, baseType: !1616, size: 32, offset: 96)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 32)
!1617 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !1101, line: 46, baseType: !1070)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !1559, file: !1294, line: 242, baseType: !1616, size: 32, offset: 128)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1559, file: !1294, line: 243, baseType: !1620, size: 928, offset: 160)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1294, line: 99, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 90, size: 928, elements: !1622)
!1622 = !{!1623, !1624, !1626, !1627, !1628, !1629, !1630, !1631}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !1621, file: !1294, line: 91, baseType: !61, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1621, file: !1294, line: 92, baseType: !1625, size: 256, offset: 32)
!1625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 256, elements: !788)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !1621, file: !1294, line: 93, baseType: !1625, size: 256, offset: 288)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1621, file: !1294, line: 94, baseType: !1625, size: 256, offset: 544)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !1621, file: !1294, line: 95, baseType: !61, size: 32, offset: 800)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !1621, file: !1294, line: 96, baseType: !1617, size: 16, offset: 832)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !1621, file: !1294, line: 97, baseType: !61, size: 32, offset: 864)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !1621, file: !1294, line: 98, baseType: !61, size: 32, offset: 896)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1559, file: !1294, line: 244, baseType: !1625, size: 256, offset: 1088)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !1559, file: !1294, line: 245, baseType: !1625, size: 256, offset: 1344)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !1559, file: !1294, line: 246, baseType: !61, size: 32, offset: 1600)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !1559, file: !1294, line: 247, baseType: !61, size: 32, offset: 1632)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !1559, file: !1294, line: 248, baseType: !61, size: 32, offset: 1664)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !1559, file: !1294, line: 249, baseType: !61, size: 32, offset: 1696)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !1559, file: !1294, line: 250, baseType: !61, size: 32, offset: 1728)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !1559, file: !1294, line: 252, baseType: !61, size: 32, offset: 1760)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !1559, file: !1294, line: 255, baseType: !61, size: 32, offset: 1792)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !1559, file: !1294, line: 256, baseType: !61, size: 32, offset: 1824)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !1559, file: !1294, line: 257, baseType: !61, size: 32, offset: 1856)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !1559, file: !1294, line: 261, baseType: !61, size: 32, offset: 1888)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !1559, file: !1294, line: 262, baseType: !61, size: 32, offset: 1920)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !1559, file: !1294, line: 263, baseType: !61, size: 32, offset: 1952)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !1559, file: !1294, line: 264, baseType: !61, size: 32, offset: 1984)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !1559, file: !1294, line: 265, baseType: !61, size: 32, offset: 2016)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !1559, file: !1294, line: 266, baseType: !61, size: 32, offset: 2048)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !1559, file: !1294, line: 267, baseType: !61, size: 32, offset: 2080)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !1559, file: !1294, line: 268, baseType: !61, size: 32, offset: 2112)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !1559, file: !1294, line: 270, baseType: !61, size: 32, offset: 2144)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !1559, file: !1294, line: 271, baseType: !61, size: 32, offset: 2176)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !1559, file: !1294, line: 272, baseType: !1654, size: 32, offset: 2208)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 32)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !1294, line: 229, baseType: !1656)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 226, size: 64, elements: !1657)
!1657 = !{!1658, !1659}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !1656, file: !1294, line: 227, baseType: !61, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !1656, file: !1294, line: 228, baseType: !61, size: 32, offset: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !1559, file: !1294, line: 273, baseType: !1535, size: 32, offset: 2240)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !1559, file: !1294, line: 274, baseType: !1535, size: 32, offset: 2272)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !1559, file: !1294, line: 276, baseType: !1663, size: 32, offset: 2304)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 32)
!1664 = !DISubroutineType(types: !1665)
!1665 = !{null, !1666}
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !1559, file: !1294, line: 278, baseType: !61, size: 32, offset: 2336)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !1559, file: !1294, line: 280, baseType: !1663, size: 32, offset: 2368)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !1559, file: !1294, line: 281, baseType: !1663, size: 32, offset: 2400)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !1559, file: !1294, line: 283, baseType: !61, size: 32, offset: 2432)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !1559, file: !1294, line: 284, baseType: !1672, size: 32, offset: 2464)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 32)
!1673 = !DISubroutineType(types: !1674)
!1674 = !{!61, !1666}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !1559, file: !1294, line: 285, baseType: !1676, size: 32, offset: 2496)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 32)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{!61, !1666, !61, !61}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !1559, file: !1294, line: 293, baseType: !1680, size: 32, offset: 2528)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !1294, line: 162, baseType: !1682)
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 159, size: 64, elements: !1683)
!1683 = !{!1684, !1685}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1682, file: !1294, line: 160, baseType: !61, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !1682, file: !1294, line: 161, baseType: !61, size: 32, offset: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !1559, file: !1294, line: 295, baseType: !61, size: 32, offset: 2560)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !1559, file: !1294, line: 296, baseType: !61, size: 32, offset: 2592)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !1559, file: !1294, line: 297, baseType: !61, size: 32, offset: 2624)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !1559, file: !1294, line: 298, baseType: !1617, size: 16, offset: 2656)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !1559, file: !1294, line: 302, baseType: !1617, size: 16, offset: 2672)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !1559, file: !1294, line: 310, baseType: !91, size: 8, offset: 2688)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1559, file: !1294, line: 313, baseType: !91, size: 8, offset: 2696)
!1693 = !DIGlobalVariableExpression(var: !1694, expr: !DIExpression())
!1694 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !1521, file: !1522, line: 129, type: !61, isLocal: false, isDefinition: true)
!1695 = !DIGlobalVariableExpression(var: !1696, expr: !DIExpression())
!1696 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !1521, file: !1522, line: 130, type: !61, isLocal: false, isDefinition: true)
!1697 = !DIGlobalVariableExpression(var: !1698, expr: !DIExpression())
!1698 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !1521, file: !1522, line: 131, type: !61, isLocal: false, isDefinition: true)
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !1521, file: !1522, line: 132, type: !1068, isLocal: true, isDefinition: true)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !1521, file: !1522, line: 136, type: !1703, isLocal: false, isDefinition: true)
!1703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 4096, elements: !1704)
!1704 = !{!1705}
!1705 = !DISubrange(count: 512)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !1521, file: !1522, line: 146, type: !1708, isLocal: true, isDefinition: true)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1538, size: 512, elements: !788)
!1709 = !DIGlobalVariableExpression(var: !1710, expr: !DIExpression())
!1710 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !1521, file: !1522, line: 152, type: !1711, isLocal: true, isDefinition: true)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 32)
!1712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1713)
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1494, line: 116, baseType: !1714)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1494, line: 113, size: 64, elements: !1715)
!1715 = !{!1716, !1717}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !1714, file: !1494, line: 114, baseType: !61, size: 32)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !1714, file: !1494, line: 115, baseType: !61, size: 32, offset: 32)
!1718 = !DIGlobalVariableExpression(var: !1719, expr: !DIExpression())
!1719 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !1521, file: !1522, line: 156, type: !61, isLocal: false, isDefinition: true)
!1720 = !DIGlobalVariableExpression(var: !1721, expr: !DIExpression())
!1721 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !1521, file: !1522, line: 157, type: !61, isLocal: false, isDefinition: true)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "BankInfo", scope: !1521, file: !1522, line: 160, type: !1724, isLocal: true, isDefinition: true)
!1724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1725, size: 512, elements: !788)
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1294, line: 152, baseType: !1726)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 149, size: 64, elements: !1727)
!1727 = !{!1728, !1729}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1726, file: !1294, line: 150, baseType: !61, size: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1726, file: !1294, line: 151, baseType: !61, size: 32, offset: 32)
!1730 = !DIGlobalVariableExpression(var: !1731, expr: !DIExpression())
!1731 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !1521, file: !1522, line: 173, type: !61, isLocal: false, isDefinition: true)
!1732 = !DIGlobalVariableExpression(var: !1733, expr: !DIExpression())
!1733 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !1521, file: !1522, line: 176, type: !1564, isLocal: false, isDefinition: true)
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "mtdflash", scope: !1521, file: !1522, line: 177, type: !1736, isLocal: false, isDefinition: true)
!1736 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1192, line: 193, baseType: !1737)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1192, line: 134, size: 1824, elements: !1738)
!1738 = !{!1739, !1740, !1741, !1747, !1753, !1754, !1755, !1756, !1758, !1759, !1760, !1761, !1768, !1769, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1737, file: !1192, line: 136, baseType: !61, size: 32)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1737, file: !1192, line: 137, baseType: !797, size: 32, offset: 32)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1737, file: !1192, line: 138, baseType: !1742, size: 32, offset: 64)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1276, line: 56, baseType: !1743)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 32)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1276, line: 54, size: 8, elements: !1745)
!1745 = !{!1746}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1744, file: !1276, line: 55, baseType: !356, size: 8)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1737, file: !1192, line: 139, baseType: !1748, size: 32, offset: 96)
!1748 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1276, line: 46, baseType: !1749)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 32)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1276, line: 44, size: 8, elements: !1751)
!1751 = !{!1752}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1750, file: !1276, line: 45, baseType: !356, size: 8)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1737, file: !1192, line: 140, baseType: !1288, size: 8, offset: 128)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1737, file: !1192, line: 143, baseType: !1537, size: 32, offset: 160)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1737, file: !1192, line: 144, baseType: !797, size: 32, offset: 192)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1737, file: !1192, line: 145, baseType: !1757, size: 32, offset: 224)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1737, file: !1192, line: 146, baseType: !797, size: 32, offset: 256)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1737, file: !1192, line: 147, baseType: !61, size: 32, offset: 288)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1737, file: !1192, line: 148, baseType: !797, size: 32, offset: 320)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1737, file: !1192, line: 151, baseType: !1762, size: 1024, offset: 352)
!1762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1763, size: 1024, elements: !1317)
!1763 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1294, line: 170, baseType: !1764)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 167, size: 64, elements: !1765)
!1765 = !{!1766, !1767}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1764, file: !1294, line: 168, baseType: !61, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1764, file: !1294, line: 169, baseType: !61, size: 32, offset: 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1737, file: !1192, line: 155, baseType: !1319, size: 32, offset: 1376)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1737, file: !1192, line: 156, baseType: !1770, size: 32, offset: 1408)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1192, line: 124, baseType: !1772)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1192, line: 90, size: 200, elements: !1773)
!1773 = !{!1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1772, file: !1192, line: 91, baseType: !356, size: 8)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1772, file: !1192, line: 92, baseType: !356, size: 8, offset: 8)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1772, file: !1192, line: 94, baseType: !356, size: 8, offset: 16)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1772, file: !1192, line: 95, baseType: !356, size: 8, offset: 24)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1772, file: !1192, line: 96, baseType: !356, size: 8, offset: 32)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1772, file: !1192, line: 98, baseType: !356, size: 8, offset: 40)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1772, file: !1192, line: 99, baseType: !356, size: 8, offset: 48)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1772, file: !1192, line: 100, baseType: !356, size: 8, offset: 56)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1772, file: !1192, line: 101, baseType: !356, size: 8, offset: 64)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1772, file: !1192, line: 103, baseType: !356, size: 8, offset: 72)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1772, file: !1192, line: 104, baseType: !356, size: 8, offset: 80)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1772, file: !1192, line: 106, baseType: !356, size: 8, offset: 88)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1772, file: !1192, line: 107, baseType: !356, size: 8, offset: 96)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1772, file: !1192, line: 108, baseType: !356, size: 8, offset: 104)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1772, file: !1192, line: 109, baseType: !356, size: 8, offset: 112)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1772, file: !1192, line: 110, baseType: !356, size: 8, offset: 120)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1772, file: !1192, line: 111, baseType: !356, size: 8, offset: 128)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1772, file: !1192, line: 112, baseType: !356, size: 8, offset: 136)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1772, file: !1192, line: 114, baseType: !356, size: 8, offset: 144)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1772, file: !1192, line: 115, baseType: !356, size: 8, offset: 152)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1772, file: !1192, line: 118, baseType: !356, size: 8, offset: 160)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1772, file: !1192, line: 119, baseType: !356, size: 8, offset: 168)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1772, file: !1192, line: 120, baseType: !356, size: 8, offset: 176)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1772, file: !1192, line: 121, baseType: !356, size: 8, offset: 184)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1772, file: !1192, line: 122, baseType: !356, size: 8, offset: 192)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1737, file: !1192, line: 157, baseType: !61, size: 32, offset: 1440)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1737, file: !1192, line: 158, baseType: !1068, size: 16, offset: 1472)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1737, file: !1192, line: 159, baseType: !1068, size: 16, offset: 1488)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1737, file: !1192, line: 163, baseType: !1068, size: 16, offset: 1504)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1737, file: !1192, line: 164, baseType: !1068, size: 16, offset: 1520)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1737, file: !1192, line: 167, baseType: !356, size: 8, offset: 1536)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1737, file: !1192, line: 168, baseType: !1358, size: 24, offset: 1544)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1737, file: !1192, line: 169, baseType: !356, size: 8, offset: 1568)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1737, file: !1192, line: 170, baseType: !356, size: 8, offset: 1576)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1737, file: !1192, line: 173, baseType: !1068, size: 16, offset: 1584)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1737, file: !1192, line: 174, baseType: !61, size: 32, offset: 1600)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1737, file: !1192, line: 175, baseType: !61, size: 32, offset: 1632)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1737, file: !1192, line: 178, baseType: !91, size: 8, offset: 1664)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1737, file: !1192, line: 179, baseType: !91, size: 8, offset: 1672)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1737, file: !1192, line: 182, baseType: !1369, size: 32, offset: 1696)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1737, file: !1192, line: 186, baseType: !1369, size: 32, offset: 1728)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1737, file: !1192, line: 187, baseType: !1374, size: 32, offset: 1760)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1737, file: !1192, line: 188, baseType: !1374, size: 32, offset: 1792)
!1817 = !DIGlobalVariableExpression(var: !1818, expr: !DIExpression())
!1818 = distinct !DIGlobalVariable(name: "StatusMap", scope: !1521, file: !1522, line: 178, type: !1819, isLocal: false, isDefinition: true)
!1819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1320, size: 64, elements: !788)
!1820 = !DIGlobalVariableExpression(var: !1821, expr: !DIExpression())
!1821 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !1521, file: !1522, line: 179, type: !1771, isLocal: false, isDefinition: true)
!1822 = !DIGlobalVariableExpression(var: !1823, expr: !DIExpression())
!1823 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !1521, file: !1522, line: 204, type: !1708, isLocal: true, isDefinition: true)
!1824 = !DIGlobalVariableExpression(var: !1825, expr: !DIExpression())
!1825 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !1521, file: !1522, line: 205, type: !1826, isLocal: false, isDefinition: true)
!1826 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1827, line: 93, baseType: !1828)
!1827 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1827, line: 83, size: 1056, elements: !1829)
!1829 = !{!1830, !1831, !1832, !1833, !1834}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !1828, file: !1827, line: 84, baseType: !61, size: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1828, file: !1827, line: 85, baseType: !1563, size: 32, offset: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1828, file: !1827, line: 86, baseType: !88, size: 32, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1828, file: !1827, line: 87, baseType: !1620, size: 928, offset: 96)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !1828, file: !1827, line: 92, baseType: !91, size: 8, offset: 1024)
!1835 = !DIGlobalVariableExpression(var: !1836, expr: !DIExpression())
!1836 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !1521, file: !1522, line: 208, type: !1736, isLocal: false, isDefinition: true)
!1837 = !DIGlobalVariableExpression(var: !1838, expr: !DIExpression())
!1838 = distinct !DIGlobalVariable(name: "nor_list", scope: !1521, file: !1522, line: 114, type: !1839, isLocal: true, isDefinition: true)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1841)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1494, line: 125, baseType: !1842)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1494, line: 119, size: 1088, elements: !1843)
!1843 = !{!1844, !1845, !1846, !1847, !1849}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !1842, file: !1494, line: 120, baseType: !1068, size: 16)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !1842, file: !1494, line: 121, baseType: !1068, size: 16, offset: 16)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !1842, file: !1494, line: 122, baseType: !61, size: 32, offset: 32)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !1842, file: !1494, line: 123, baseType: !1848, size: 512, offset: 64)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1713, size: 512, elements: !788)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1842, file: !1494, line: 124, baseType: !1724, size: 512, offset: 576)
!1850 = !DIGlobalVariableExpression(var: !1851, expr: !DIExpression())
!1851 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !1521, file: !1852, line: 42, type: !1853, isLocal: true, isDefinition: true)
!1852 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1854)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !1522, line: 66, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1522, line: 63, size: 5600, elements: !1856)
!1856 = !{!1857, !1864}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1855, file: !1522, line: 64, baseType: !1858, size: 96)
!1858 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1426, line: 152, baseType: !1859)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1426, line: 144, size: 96, elements: !1860)
!1860 = !{!1861, !1862, !1863}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1859, file: !1426, line: 145, baseType: !1487, size: 32)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1859, file: !1426, line: 146, baseType: !1489, size: 16, offset: 32)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1859, file: !1426, line: 150, baseType: !1491, size: 32, offset: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1855, file: !1522, line: 65, baseType: !1865, size: 5504, offset: 96)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1494, line: 132, baseType: !1866)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1494, line: 128, size: 5504, elements: !1867)
!1867 = !{!1868, !1869, !1870}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1866, file: !1494, line: 129, baseType: !18, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1866, file: !1494, line: 130, baseType: !18, size: 32, offset: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1866, file: !1494, line: 131, baseType: !1871, size: 5440, offset: 64)
!1871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1841, size: 5440, elements: !939)
!1872 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !1276, line: 79, baseType: !1873)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1276, line: 77, size: 8, elements: !1875)
!1875 = !{!1876}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1874, file: !1276, line: 78, baseType: !356, size: 8)
!1877 = !DIGlobalVariableExpression(var: !1878, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1878 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !1879, file: !1880, line: 82, type: !7, isLocal: true, isDefinition: true)
!1879 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1880, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1881, retainedTypes: !1887, globals: !1932, splitDebugInlining: false, nameTableKind: None)
!1880 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1881 = !{!1216, !1100, !1882}
!1882 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1217, line: 123, baseType: !18, size: 32, elements: !1883)
!1883 = !{!1884, !1885, !1886}
!1884 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!1885 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!1886 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!1887 = !{!61, !1888, !88, !797}
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1294, line: 190, baseType: !1890)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 173, size: 1376, elements: !1891)
!1891 = !{!1892, !1893, !1894, !1900, !1906, !1907, !1914, !1915, !1922, !1923, !1924, !1925}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1890, file: !1294, line: 174, baseType: !61, size: 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1890, file: !1294, line: 175, baseType: !1535, size: 32, offset: 32)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1890, file: !1294, line: 176, baseType: !1895, size: 32, offset: 64)
!1895 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1276, line: 56, baseType: !1896)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1276, line: 54, size: 8, elements: !1898)
!1898 = !{!1899}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1897, file: !1276, line: 55, baseType: !356, size: 8)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1890, file: !1294, line: 177, baseType: !1901, size: 32, offset: 96)
!1901 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1276, line: 46, baseType: !1902)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 32)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1276, line: 44, size: 8, elements: !1904)
!1904 = !{!1905}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1903, file: !1276, line: 45, baseType: !356, size: 8)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1890, file: !1294, line: 178, baseType: !1288, size: 8, offset: 128)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1890, file: !1294, line: 180, baseType: !1908, size: 32, offset: 160)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1294, line: 146, baseType: !1910)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 143, size: 64, elements: !1911)
!1911 = !{!1912, !1913}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1910, file: !1294, line: 144, baseType: !61, size: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1910, file: !1294, line: 145, baseType: !61, size: 32, offset: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1890, file: !1294, line: 181, baseType: !1535, size: 32, offset: 192)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1890, file: !1294, line: 182, baseType: !1916, size: 32, offset: 224)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1294, line: 152, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 149, size: 64, elements: !1919)
!1919 = !{!1920, !1921}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1918, file: !1294, line: 150, baseType: !61, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1918, file: !1294, line: 151, baseType: !61, size: 32, offset: 32)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1890, file: !1294, line: 183, baseType: !1535, size: 32, offset: 256)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1890, file: !1294, line: 184, baseType: !61, size: 32, offset: 288)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1890, file: !1294, line: 185, baseType: !1535, size: 32, offset: 320)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1890, file: !1294, line: 188, baseType: !1926, size: 1024, offset: 352)
!1926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1927, size: 1024, elements: !1317)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1294, line: 170, baseType: !1928)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 167, size: 64, elements: !1929)
!1929 = !{!1930, !1931}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1928, file: !1294, line: 168, baseType: !61, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1928, file: !1294, line: 169, baseType: !61, size: 32, offset: 32)
!1932 = !{!1933, !1934}
!1933 = !DIGlobalVariableExpression(var: !1878, expr: !DIExpression())
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !1879, file: !1880, line: 432, type: !1936, isLocal: true, isDefinition: true)
!1936 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !1217, line: 119, baseType: !1216)
!1937 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!1938 = !DIGlobalVariableExpression(var: !1939, expr: !DIExpression())
!1939 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !1940, file: !1941, line: 60, type: !61, isLocal: false, isDefinition: true)
!1940 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1941, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1942, retainedTypes: !1950, globals: !1951, splitDebugInlining: false, nameTableKind: None)
!1941 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!1942 = !{!1943}
!1943 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 387, baseType: !7, size: 32, elements: !1944)
!1944 = !{!1945, !1946, !1947, !1948, !1949}
!1945 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!1946 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!1947 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!1948 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!1949 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!1950 = !{!88, !61}
!1951 = !{!1938, !1952, !1954, !1956, !1958, !1960, !2014, !2016}
!1952 = !DIGlobalVariableExpression(var: !1953, expr: !DIExpression())
!1953 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !1940, file: !1941, line: 61, type: !61, isLocal: false, isDefinition: true)
!1954 = !DIGlobalVariableExpression(var: !1955, expr: !DIExpression())
!1955 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !1940, file: !1941, line: 107, type: !61, isLocal: false, isDefinition: true)
!1956 = !DIGlobalVariableExpression(var: !1957, expr: !DIExpression())
!1957 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !1940, file: !1941, line: 132, type: !91, isLocal: false, isDefinition: true)
!1958 = !DIGlobalVariableExpression(var: !1959, expr: !DIExpression())
!1959 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !1940, file: !1941, line: 133, type: !91, isLocal: false, isDefinition: true)
!1960 = !DIGlobalVariableExpression(var: !1961, expr: !DIExpression())
!1961 = distinct !DIGlobalVariable(name: "replaced", scope: !1962, file: !1941, line: 139, type: !61, isLocal: true, isDefinition: true)
!1962 = distinct !DISubprogram(name: "LookupAddress", scope: !1941, file: !1941, line: 135, type: !1963, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !1965)
!1963 = !DISubroutineType(types: !1964)
!1964 = !{!61, !88, !61}
!1965 = !{!1966, !1967, !1968, !2013}
!1966 = !DILocalVariable(name: "DriveData", arg: 1, scope: !1962, file: !1941, line: 135, type: !88)
!1967 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !1962, file: !1941, line: 135, type: !61)
!1968 = !DILocalVariable(name: "D", scope: !1962, file: !1941, line: 137, type: !1969)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1294, line: 190, baseType: !1971)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 173, size: 1376, elements: !1972)
!1972 = !{!1973, !1974, !1975, !1981, !1987, !1988, !1995, !1996, !2003, !2004, !2005, !2006}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1971, file: !1294, line: 174, baseType: !61, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1971, file: !1294, line: 175, baseType: !1535, size: 32, offset: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1971, file: !1294, line: 176, baseType: !1976, size: 32, offset: 64)
!1976 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1276, line: 56, baseType: !1977)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 32)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1276, line: 54, size: 8, elements: !1979)
!1979 = !{!1980}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1978, file: !1276, line: 55, baseType: !356, size: 8)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1971, file: !1294, line: 177, baseType: !1982, size: 32, offset: 96)
!1982 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1276, line: 46, baseType: !1983)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 32)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1276, line: 44, size: 8, elements: !1985)
!1985 = !{!1986}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1984, file: !1276, line: 45, baseType: !356, size: 8)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1971, file: !1294, line: 178, baseType: !1288, size: 8, offset: 128)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1971, file: !1294, line: 180, baseType: !1989, size: 32, offset: 160)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1294, line: 146, baseType: !1991)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 143, size: 64, elements: !1992)
!1992 = !{!1993, !1994}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1991, file: !1294, line: 144, baseType: !61, size: 32)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1991, file: !1294, line: 145, baseType: !61, size: 32, offset: 32)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1971, file: !1294, line: 181, baseType: !1535, size: 32, offset: 192)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1971, file: !1294, line: 182, baseType: !1997, size: 32, offset: 224)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1294, line: 152, baseType: !1999)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 149, size: 64, elements: !2000)
!2000 = !{!2001, !2002}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1999, file: !1294, line: 150, baseType: !61, size: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1999, file: !1294, line: 151, baseType: !61, size: 32, offset: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1971, file: !1294, line: 183, baseType: !1535, size: 32, offset: 256)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1971, file: !1294, line: 184, baseType: !61, size: 32, offset: 288)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1971, file: !1294, line: 185, baseType: !1535, size: 32, offset: 320)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1971, file: !1294, line: 188, baseType: !2007, size: 1024, offset: 352)
!2007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2008, size: 1024, elements: !1317)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1294, line: 170, baseType: !2009)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 167, size: 64, elements: !2010)
!2010 = !{!2011, !2012}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2009, file: !1294, line: 168, baseType: !61, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2009, file: !1294, line: 169, baseType: !61, size: 32, offset: 32)
!2013 = !DILocalVariable(name: "addr", scope: !1962, file: !1941, line: 138, type: !61)
!2014 = !DIGlobalVariableExpression(var: !2015, expr: !DIExpression())
!2015 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !1962, file: !1941, line: 140, type: !61, isLocal: true, isDefinition: true)
!2016 = !DIGlobalVariableExpression(var: !2017, expr: !DIExpression())
!2017 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !1962, file: !1941, line: 141, type: !61, isLocal: true, isDefinition: true)
!2018 = !DIGlobalVariableExpression(var: !2019, expr: !DIExpression())
!2019 = distinct !DIGlobalVariable(name: "emi_settings", scope: !2020, file: !2021, line: 44, type: !2167, isLocal: false, isDefinition: true)
!2020 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2021, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2022, retainedTypes: !2028, globals: !2029, splitDebugInlining: false, nameTableKind: None)
!2021 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!2022 = !{!2023}
!2023 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !2024, line: 40, baseType: !18, size: 32, elements: !2025)
!2024 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!2025 = !{!2026, !2027}
!2026 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!2027 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!2028 = !{!1073}
!2029 = !{!2018, !2030, !2032, !2034, !2036, !2137, !2139, !2141, !2143, !2145, !2147, !2149, !2151, !2153, !2155, !2157, !2159, !2161, !2163, !2165}
!2030 = !DIGlobalVariableExpression(var: !2031, expr: !DIExpression())
!2031 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !2020, file: !2021, line: 65, type: !61, isLocal: false, isDefinition: true)
!2032 = !DIGlobalVariableExpression(var: !2033, expr: !DIExpression())
!2033 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !2020, file: !2021, line: 66, type: !61, isLocal: false, isDefinition: true)
!2034 = !DIGlobalVariableExpression(var: !2035, expr: !DIExpression())
!2035 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !2020, file: !2021, line: 67, type: !61, isLocal: false, isDefinition: true)
!2036 = !DIGlobalVariableExpression(var: !2037, expr: !DIExpression())
!2037 = distinct !DIGlobalVariable(name: "emi_register", scope: !2020, file: !2021, line: 83, type: !2038, isLocal: false, isDefinition: true)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 32)
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !56, line: 2524, baseType: !2040)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2447, size: 6752, elements: !2041)
!2041 = !{!2042, !2046, !2047, !2048, !2049, !2053, !2054, !2056, !2057, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2040, file: !56, line: 2448, baseType: !2043, size: 768)
!2043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 768, elements: !2044)
!2044 = !{!2045}
!2045 = !DISubrange(count: 96)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !2040, file: !56, line: 2449, baseType: !60, size: 32, offset: 768)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2040, file: !56, line: 2450, baseType: !923, size: 96, offset: 800)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !2040, file: !56, line: 2451, baseType: !60, size: 32, offset: 896)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2040, file: !56, line: 2452, baseType: !2050, size: 160, offset: 928)
!2050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 160, elements: !2051)
!2051 = !{!2052}
!2052 = !DISubrange(count: 20)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !2040, file: !56, line: 2453, baseType: !60, size: 32, offset: 1088)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2040, file: !56, line: 2454, baseType: !2055, size: 32, offset: 1120)
!2055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 32, elements: !498)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !2040, file: !56, line: 2455, baseType: !60, size: 32, offset: 1152)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2040, file: !56, line: 2456, baseType: !2058, size: 480, offset: 1184)
!2058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 480, elements: !2059)
!2059 = !{!2060}
!2060 = !DISubrange(count: 60)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !2040, file: !56, line: 2457, baseType: !60, size: 32, offset: 1664)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2040, file: !56, line: 2458, baseType: !2055, size: 32, offset: 1696)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !2040, file: !56, line: 2459, baseType: !60, size: 32, offset: 1728)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2040, file: !56, line: 2460, baseType: !2055, size: 32, offset: 1760)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !2040, file: !56, line: 2461, baseType: !60, size: 32, offset: 1792)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2040, file: !56, line: 2462, baseType: !2050, size: 160, offset: 1824)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !2040, file: !56, line: 2463, baseType: !60, size: 32, offset: 1984)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2040, file: !56, line: 2464, baseType: !2055, size: 32, offset: 2016)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !2040, file: !56, line: 2465, baseType: !60, size: 32, offset: 2048)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2040, file: !56, line: 2466, baseType: !2055, size: 32, offset: 2080)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !2040, file: !56, line: 2467, baseType: !60, size: 32, offset: 2112)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2040, file: !56, line: 2468, baseType: !2055, size: 32, offset: 2144)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !2040, file: !56, line: 2469, baseType: !60, size: 32, offset: 2176)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2040, file: !56, line: 2470, baseType: !2075, size: 224, offset: 2208)
!2075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 224, elements: !2076)
!2076 = !{!2077}
!2077 = !DISubrange(count: 28)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !2040, file: !56, line: 2471, baseType: !60, size: 32, offset: 2432)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !2040, file: !56, line: 2472, baseType: !2055, size: 32, offset: 2464)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !2040, file: !56, line: 2473, baseType: !60, size: 32, offset: 2496)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !2040, file: !56, line: 2474, baseType: !923, size: 96, offset: 2528)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !2040, file: !56, line: 2475, baseType: !60, size: 32, offset: 2624)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !2040, file: !56, line: 2476, baseType: !2055, size: 32, offset: 2656)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !2040, file: !56, line: 2477, baseType: !60, size: 32, offset: 2688)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !2040, file: !56, line: 2478, baseType: !2055, size: 32, offset: 2720)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !2040, file: !56, line: 2479, baseType: !60, size: 32, offset: 2752)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !2040, file: !56, line: 2480, baseType: !2055, size: 32, offset: 2784)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !2040, file: !56, line: 2481, baseType: !60, size: 32, offset: 2816)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !2040, file: !56, line: 2482, baseType: !923, size: 96, offset: 2848)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !2040, file: !56, line: 2483, baseType: !60, size: 32, offset: 2944)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !2040, file: !56, line: 2484, baseType: !2055, size: 32, offset: 2976)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !2040, file: !56, line: 2485, baseType: !60, size: 32, offset: 3008)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !2040, file: !56, line: 2486, baseType: !2055, size: 32, offset: 3040)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !2040, file: !56, line: 2487, baseType: !60, size: 32, offset: 3072)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !2040, file: !56, line: 2488, baseType: !2050, size: 160, offset: 3104)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !2040, file: !56, line: 2489, baseType: !60, size: 32, offset: 3264)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !2040, file: !56, line: 2490, baseType: !2055, size: 32, offset: 3296)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !2040, file: !56, line: 2491, baseType: !60, size: 32, offset: 3328)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !2040, file: !56, line: 2492, baseType: !2100, size: 736, offset: 3360)
!2100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 736, elements: !2101)
!2101 = !{!2102}
!2102 = !DISubrange(count: 92)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !2040, file: !56, line: 2493, baseType: !60, size: 32, offset: 4096)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !2040, file: !56, line: 2494, baseType: !2055, size: 32, offset: 4128)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !2040, file: !56, line: 2495, baseType: !60, size: 32, offset: 4160)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !2040, file: !56, line: 2496, baseType: !2055, size: 32, offset: 4192)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !2040, file: !56, line: 2497, baseType: !60, size: 32, offset: 4224)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !2040, file: !56, line: 2498, baseType: !2055, size: 32, offset: 4256)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !2040, file: !56, line: 2499, baseType: !60, size: 32, offset: 4288)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !2040, file: !56, line: 2500, baseType: !2055, size: 32, offset: 4320)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !2040, file: !56, line: 2501, baseType: !60, size: 32, offset: 4352)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !2040, file: !56, line: 2502, baseType: !2055, size: 32, offset: 4384)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !2040, file: !56, line: 2503, baseType: !60, size: 32, offset: 4416)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !2040, file: !56, line: 2504, baseType: !2055, size: 32, offset: 4448)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !2040, file: !56, line: 2505, baseType: !60, size: 32, offset: 4480)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !2040, file: !56, line: 2506, baseType: !2055, size: 32, offset: 4512)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !2040, file: !56, line: 2507, baseType: !60, size: 32, offset: 4544)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !2040, file: !56, line: 2508, baseType: !2055, size: 32, offset: 4576)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !2040, file: !56, line: 2509, baseType: !60, size: 32, offset: 4608)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !2040, file: !56, line: 2510, baseType: !2058, size: 480, offset: 4640)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !2040, file: !56, line: 2511, baseType: !60, size: 32, offset: 5120)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !2040, file: !56, line: 2512, baseType: !2123, size: 992, offset: 5152)
!2123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !355, size: 992, elements: !2124)
!2124 = !{!2125}
!2125 = !DISubrange(count: 124)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !2040, file: !56, line: 2513, baseType: !60, size: 32, offset: 6144)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !2040, file: !56, line: 2514, baseType: !2055, size: 32, offset: 6176)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !2040, file: !56, line: 2515, baseType: !60, size: 32, offset: 6208)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !2040, file: !56, line: 2516, baseType: !2055, size: 32, offset: 6240)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !2040, file: !56, line: 2517, baseType: !60, size: 32, offset: 6272)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !2040, file: !56, line: 2518, baseType: !2055, size: 32, offset: 6304)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !2040, file: !56, line: 2519, baseType: !60, size: 32, offset: 6336)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !2040, file: !56, line: 2520, baseType: !2050, size: 160, offset: 6368)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !2040, file: !56, line: 2521, baseType: !60, size: 32, offset: 6528)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !2040, file: !56, line: 2522, baseType: !2050, size: 160, offset: 6560)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !2040, file: !56, line: 2523, baseType: !60, size: 32, offset: 6720)
!2137 = !DIGlobalVariableExpression(var: !2138, expr: !DIExpression())
!2138 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !2020, file: !2021, line: 485, type: !60, isLocal: false, isDefinition: true)
!2139 = !DIGlobalVariableExpression(var: !2140, expr: !DIExpression())
!2140 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !2020, file: !2021, line: 68, type: !61, isLocal: false, isDefinition: true)
!2141 = !DIGlobalVariableExpression(var: !2142, expr: !DIExpression())
!2142 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !2020, file: !2021, line: 69, type: !61, isLocal: false, isDefinition: true)
!2143 = !DIGlobalVariableExpression(var: !2144, expr: !DIExpression())
!2144 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !2020, file: !2021, line: 70, type: !61, isLocal: false, isDefinition: true)
!2145 = !DIGlobalVariableExpression(var: !2146, expr: !DIExpression())
!2146 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !2020, file: !2021, line: 71, type: !61, isLocal: false, isDefinition: true)
!2147 = !DIGlobalVariableExpression(var: !2148, expr: !DIExpression())
!2148 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !2020, file: !2021, line: 72, type: !61, isLocal: false, isDefinition: true)
!2149 = !DIGlobalVariableExpression(var: !2150, expr: !DIExpression())
!2150 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !2020, file: !2021, line: 73, type: !61, isLocal: false, isDefinition: true)
!2151 = !DIGlobalVariableExpression(var: !2152, expr: !DIExpression())
!2152 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !2020, file: !2021, line: 74, type: !61, isLocal: false, isDefinition: true)
!2153 = !DIGlobalVariableExpression(var: !2154, expr: !DIExpression())
!2154 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !2020, file: !2021, line: 75, type: !61, isLocal: false, isDefinition: true)
!2155 = !DIGlobalVariableExpression(var: !2156, expr: !DIExpression())
!2156 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !2020, file: !2021, line: 76, type: !61, isLocal: false, isDefinition: true)
!2157 = !DIGlobalVariableExpression(var: !2158, expr: !DIExpression())
!2158 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !2020, file: !2021, line: 77, type: !61, isLocal: false, isDefinition: true)
!2159 = !DIGlobalVariableExpression(var: !2160, expr: !DIExpression())
!2160 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !2020, file: !2021, line: 78, type: !61, isLocal: false, isDefinition: true)
!2161 = !DIGlobalVariableExpression(var: !2162, expr: !DIExpression())
!2162 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !2020, file: !2021, line: 79, type: !61, isLocal: false, isDefinition: true)
!2163 = !DIGlobalVariableExpression(var: !2164, expr: !DIExpression())
!2164 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !2020, file: !2021, line: 80, type: !61, isLocal: false, isDefinition: true)
!2165 = !DIGlobalVariableExpression(var: !2166, expr: !DIExpression())
!2166 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !2020, file: !2021, line: 84, type: !2039, isLocal: false, isDefinition: true)
!2167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2168, size: 416, elements: !76)
!2168 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !2024, line: 60, baseType: !2169)
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2024, line: 45, size: 416, elements: !2170)
!2170 = !{!2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !2169, file: !2024, line: 46, baseType: !61, size: 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !2169, file: !2024, line: 47, baseType: !61, size: 32, offset: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !2169, file: !2024, line: 48, baseType: !61, size: 32, offset: 64)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !2169, file: !2024, line: 49, baseType: !61, size: 32, offset: 96)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !2169, file: !2024, line: 50, baseType: !61, size: 32, offset: 128)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !2169, file: !2024, line: 51, baseType: !61, size: 32, offset: 160)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !2169, file: !2024, line: 52, baseType: !61, size: 32, offset: 192)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !2169, file: !2024, line: 53, baseType: !61, size: 32, offset: 224)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !2169, file: !2024, line: 54, baseType: !61, size: 32, offset: 256)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !2169, file: !2024, line: 55, baseType: !61, size: 32, offset: 288)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !2169, file: !2024, line: 56, baseType: !61, size: 32, offset: 320)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !2169, file: !2024, line: 57, baseType: !61, size: 32, offset: 352)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !2169, file: !2024, line: 58, baseType: !61, size: 32, offset: 384)
!2184 = !DIGlobalVariableExpression(var: !2185, expr: !DIExpression())
!2185 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !2186, file: !2187, line: 48, type: !2195, isLocal: false, isDefinition: true)
!2186 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2187, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2188, globals: !2194, splitDebugInlining: false, nameTableKind: None)
!2187 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!2188 = !{!2189}
!2189 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1015, line: 100, baseType: !18, size: 32, elements: !2190)
!2190 = !{!2191, !2192, !2193}
!2191 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!2192 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!2193 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!2194 = !{!2184}
!2195 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !1015, line: 104, baseType: !2189)
!2196 = !DIGlobalVariableExpression(var: !2197, expr: !DIExpression())
!2197 = distinct !DIGlobalVariable(name: "heap_end", scope: !2198, file: !2199, line: 69, type: !2204, isLocal: true, isDefinition: true)
!2198 = distinct !DISubprogram(name: "_sbrk_r", scope: !2199, file: !2199, line: 66, type: !2200, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2391, retainedNodes: !2395)
!2199 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!2200 = !DISubroutineType(types: !2201)
!2201 = !{!2202, !2205, !2390}
!2202 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !2203, line: 123, baseType: !2204)
!2203 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 32)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !2207, line: 377, size: 1920, elements: !2208)
!2207 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!2208 = !{!2209, !2210, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2289, !2310, !2314, !2315, !2316, !2317, !2327, !2340, !2341, !2346, !2364, !2365, !2372, !2373, !2389}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !2206, file: !2207, line: 381, baseType: !7, size: 32)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !2206, file: !2207, line: 386, baseType: !2211, size: 32, offset: 32)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !2207, line: 292, baseType: !2213)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !2207, line: 186, size: 832, elements: !2214)
!2214 = !{!2215, !2217, !2218, !2219, !2220, !2221, !2226, !2227, !2228, !2229, !2233, !2238, !2245, !2249, !2250, !2251, !2252, !2254, !2256, !2257, !2258, !2260, !2266, !2279}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !2213, file: !2207, line: 187, baseType: !2216, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !2213, file: !2207, line: 188, baseType: !7, size: 32, offset: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !2213, file: !2207, line: 189, baseType: !7, size: 32, offset: 64)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2213, file: !2207, line: 190, baseType: !1474, size: 16, offset: 96)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !2213, file: !2207, line: 191, baseType: !1474, size: 16, offset: 112)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !2213, file: !2207, line: 192, baseType: !2222, size: 64, offset: 128)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !2207, line: 122, size: 64, elements: !2223)
!2223 = !{!2224, !2225}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !2222, file: !2207, line: 123, baseType: !2216, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !2222, file: !2207, line: 124, baseType: !7, size: 32, offset: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !2213, file: !2207, line: 193, baseType: !7, size: 32, offset: 192)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !2213, file: !2207, line: 196, baseType: !2205, size: 32, offset: 224)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !2213, file: !2207, line: 200, baseType: !88, size: 32, offset: 256)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !2213, file: !2207, line: 202, baseType: !2230, size: 32, offset: 288)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!2231 = !DISubroutineType(types: !2232)
!2232 = !{!7, !2205, !88, !2204, !7}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !2213, file: !2207, line: 204, baseType: !2234, size: 32, offset: 320)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 32)
!2235 = !DISubroutineType(types: !2236)
!2236 = !{!7, !2205, !88, !2237, !7}
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !2213, file: !2207, line: 207, baseType: !2239, size: 32, offset: 352)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 32)
!2240 = !DISubroutineType(types: !2241)
!2241 = !{!2242, !2205, !88, !2242, !7}
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !2243, line: 116, baseType: !2244)
!2243 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!2244 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !2213, file: !2207, line: 208, baseType: !2246, size: 32, offset: 384)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2247 = !DISubroutineType(types: !2248)
!2248 = !{!7, !2205, !88}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !2213, file: !2207, line: 211, baseType: !2222, size: 64, offset: 416)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !2213, file: !2207, line: 212, baseType: !2216, size: 32, offset: 480)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !2213, file: !2207, line: 213, baseType: !7, size: 32, offset: 512)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !2213, file: !2207, line: 216, baseType: !2253, size: 24, offset: 544)
!2253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 24, elements: !1359)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !2213, file: !2207, line: 217, baseType: !2255, size: 8, offset: 568)
!2255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 8, elements: !76)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !2213, file: !2207, line: 220, baseType: !2222, size: 64, offset: 576)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !2213, file: !2207, line: 223, baseType: !7, size: 32, offset: 640)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2213, file: !2207, line: 224, baseType: !2259, size: 32, offset: 672)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !2243, line: 46, baseType: !2244)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2213, file: !2207, line: 231, baseType: !2261, size: 32, offset: 704)
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !2207, line: 35, baseType: !2262)
!2262 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !2263, line: 34, baseType: !2264)
!2263 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 32)
!2265 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !2263, line: 33, flags: DIFlagFwdDecl)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !2213, file: !2207, line: 233, baseType: !2267, size: 64, offset: 736)
!2267 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !2243, line: 170, baseType: !2268)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2243, line: 162, size: 64, elements: !2269)
!2269 = !{!2270, !2271}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2268, file: !2243, line: 164, baseType: !7, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2268, file: !2243, line: 169, baseType: !2272, size: 32, offset: 32)
!2272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2268, file: !2243, line: 165, size: 32, elements: !2273)
!2273 = !{!2274, !2277}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2272, file: !2243, line: 167, baseType: !2275, size: 32)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2276, line: 116, baseType: !7)
!2276 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2272, file: !2243, line: 168, baseType: !2278, size: 32)
!2278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 32, elements: !498)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2213, file: !2207, line: 234, baseType: !7, size: 32, offset: 800)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !2206, file: !2207, line: 386, baseType: !2211, size: 32, offset: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !2206, file: !2207, line: 386, baseType: !2211, size: 32, offset: 96)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !2206, file: !2207, line: 388, baseType: !7, size: 32, offset: 128)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !2206, file: !2207, line: 390, baseType: !2204, size: 32, offset: 160)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !2206, file: !2207, line: 392, baseType: !7, size: 32, offset: 192)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !2206, file: !2207, line: 394, baseType: !7, size: 32, offset: 224)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !2206, file: !2207, line: 395, baseType: !2287, size: 32, offset: 256)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 32)
!2288 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !2207, line: 45, flags: DIFlagFwdDecl)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !2206, file: !2207, line: 397, baseType: !2290, size: 32, offset: 288)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 32)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !2207, line: 349, size: 128, elements: !2292)
!2292 = !{!2293, !2306, !2307, !2308}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !2291, file: !2207, line: 352, baseType: !2294, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 32)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !2207, line: 52, size: 192, elements: !2296)
!2296 = !{!2297, !2298, !2299, !2300, !2301, !2302}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2295, file: !2207, line: 54, baseType: !2294, size: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !2295, file: !2207, line: 55, baseType: !7, size: 32, offset: 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !2295, file: !2207, line: 55, baseType: !7, size: 32, offset: 64)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !2295, file: !2207, line: 55, baseType: !7, size: 32, offset: 96)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !2295, file: !2207, line: 55, baseType: !7, size: 32, offset: 128)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !2295, file: !2207, line: 56, baseType: !2303, size: 32, offset: 160)
!2303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2304, size: 32, elements: !76)
!2304 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !2207, line: 22, baseType: !2305)
!2305 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !2291, file: !2207, line: 353, baseType: !7, size: 32, offset: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !2291, file: !2207, line: 354, baseType: !2294, size: 32, offset: 64)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !2291, file: !2207, line: 355, baseType: !2309, size: 32, offset: 96)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 32)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !2206, file: !2207, line: 399, baseType: !2311, size: 32, offset: 320)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 32)
!2312 = !DISubroutineType(types: !2313)
!2313 = !{null, !2205}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !2206, file: !2207, line: 401, baseType: !7, size: 32, offset: 352)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !2206, file: !2207, line: 404, baseType: !7, size: 32, offset: 384)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !2206, file: !2207, line: 405, baseType: !2204, size: 32, offset: 416)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !2206, file: !2207, line: 407, baseType: !2318, size: 32, offset: 448)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 32)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !2207, line: 324, size: 192, elements: !2320)
!2320 = !{!2321, !2323, !2324, !2325}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !2319, file: !2207, line: 325, baseType: !2322, size: 48)
!2322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1070, size: 48, elements: !1359)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !2319, file: !2207, line: 326, baseType: !2322, size: 48, offset: 48)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !2319, file: !2207, line: 327, baseType: !1070, size: 16, offset: 96)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !2319, file: !2207, line: 330, baseType: !2326, size: 64, offset: 128)
!2326 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !2206, file: !2207, line: 408, baseType: !2328, size: 32, offset: 480)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 32)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !2207, line: 60, size: 288, elements: !2330)
!2330 = !{!2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !2329, file: !2207, line: 62, baseType: !7, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !2329, file: !2207, line: 63, baseType: !7, size: 32, offset: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !2329, file: !2207, line: 64, baseType: !7, size: 32, offset: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !2329, file: !2207, line: 65, baseType: !7, size: 32, offset: 96)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !2329, file: !2207, line: 66, baseType: !7, size: 32, offset: 128)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !2329, file: !2207, line: 67, baseType: !7, size: 32, offset: 160)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !2329, file: !2207, line: 68, baseType: !7, size: 32, offset: 192)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !2329, file: !2207, line: 69, baseType: !7, size: 32, offset: 224)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !2329, file: !2207, line: 70, baseType: !7, size: 32, offset: 256)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !2206, file: !2207, line: 409, baseType: !2204, size: 32, offset: 512)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !2206, file: !2207, line: 412, baseType: !2342, size: 32, offset: 544)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 32)
!2344 = !DISubroutineType(types: !2345)
!2345 = !{null, !7}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !2206, file: !2207, line: 416, baseType: !2347, size: 32, offset: 576)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 32)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !2207, line: 90, size: 1120, elements: !2349)
!2349 = !{!2350, !2351, !2352, !2355}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2348, file: !2207, line: 91, baseType: !2347, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !2348, file: !2207, line: 92, baseType: !7, size: 32, offset: 32)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !2348, file: !2207, line: 93, baseType: !2353, size: 1024, offset: 64)
!2353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2354, size: 1024, elements: !330)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !2348, file: !2207, line: 94, baseType: !2356, size: 32, offset: 1088)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 32)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !2207, line: 79, size: 2112, elements: !2358)
!2358 = !{!2359, !2361, !2362, !2363}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !2357, file: !2207, line: 80, baseType: !2360, size: 1024)
!2360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 1024, elements: !330)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !2357, file: !2207, line: 81, baseType: !2360, size: 1024, offset: 1024)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !2357, file: !2207, line: 83, baseType: !2304, size: 32, offset: 2048)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !2357, file: !2207, line: 86, baseType: !2304, size: 32, offset: 2080)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !2206, file: !2207, line: 417, baseType: !2348, size: 1120, offset: 608)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !2206, file: !2207, line: 420, baseType: !2366, size: 96, offset: 1728)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !2207, line: 296, size: 96, elements: !2367)
!2367 = !{!2368, !2370, !2371}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2366, file: !2207, line: 298, baseType: !2369, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !2366, file: !2207, line: 299, baseType: !7, size: 32, offset: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !2366, file: !2207, line: 300, baseType: !2211, size: 32, offset: 64)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !2206, file: !2207, line: 421, baseType: !2211, size: 32, offset: 1824)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !2206, file: !2207, line: 422, baseType: !2374, size: 32, offset: 1856)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 32)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !2207, line: 359, size: 640, elements: !2376)
!2376 = !{!2377, !2378, !2379, !2380, !2381, !2383, !2384, !2385, !2386, !2387, !2388}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !2375, file: !2207, line: 362, baseType: !2204, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !2375, file: !2207, line: 363, baseType: !2267, size: 64, offset: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !2375, file: !2207, line: 364, baseType: !2267, size: 64, offset: 96)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !2375, file: !2207, line: 365, baseType: !2267, size: 64, offset: 160)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !2375, file: !2207, line: 366, baseType: !2382, size: 64, offset: 224)
!2382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1516, size: 64, elements: !788)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !2375, file: !2207, line: 367, baseType: !7, size: 32, offset: 288)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !2375, file: !2207, line: 368, baseType: !2267, size: 64, offset: 320)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !2375, file: !2207, line: 369, baseType: !2267, size: 64, offset: 384)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !2375, file: !2207, line: 370, baseType: !2267, size: 64, offset: 448)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !2375, file: !2207, line: 371, baseType: !2267, size: 64, offset: 512)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !2375, file: !2207, line: 372, baseType: !2267, size: 64, offset: 576)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !2206, file: !2207, line: 423, baseType: !2204, size: 32, offset: 1888)
!2390 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2276, line: 46, baseType: !18)
!2391 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2392, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2393, globals: !2394, splitDebugInlining: false, nameTableKind: None)
!2392 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!2393 = !{!2204, !2202}
!2394 = !{!2196}
!2395 = !{!2396, !2397, !2398, !2399}
!2396 = !DILocalVariable(name: "r", arg: 1, scope: !2198, file: !2199, line: 66, type: !2205)
!2397 = !DILocalVariable(name: "nbytes", arg: 2, scope: !2198, file: !2199, line: 66, type: !2390)
!2398 = !DILocalVariable(name: "prev_heap_end", scope: !2198, file: !2199, line: 70, type: !2204)
!2399 = !DILocalVariable(name: "stack", scope: !2198, file: !2199, line: 71, type: !2204)
!2400 = !DIGlobalVariableExpression(var: !2401, expr: !DIExpression())
!2401 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !2402, file: !2403, line: 52, type: !60, isLocal: true, isDefinition: true)
!2402 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2403, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2404, globals: !2507, splitDebugInlining: false, nameTableKind: None)
!2403 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/trng_generate_random_data/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!2404 = !{!2405, !2413, !61, !2458, !2463, !2488}
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !913, line: 656, baseType: !2407)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !913, line: 650, size: 128, elements: !2408)
!2408 = !{!2409, !2410, !2411, !2412}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2407, file: !913, line: 652, baseType: !60, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2407, file: !913, line: 653, baseType: !60, size: 32, offset: 32)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2407, file: !913, line: 654, baseType: !60, size: 32, offset: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2407, file: !913, line: 655, baseType: !272, size: 32, offset: 96)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 32)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !56, line: 1952, baseType: !2415)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1921, size: 8288, elements: !2416)
!2416 = !{!2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2427, !2428, !2432, !2433, !2435, !2436, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2455, !2456, !2457}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !2415, file: !56, line: 1922, baseType: !60, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !2415, file: !56, line: 1923, baseType: !60, size: 32, offset: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !2415, file: !56, line: 1924, baseType: !60, size: 32, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !2415, file: !56, line: 1925, baseType: !60, size: 32, offset: 96)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !2415, file: !56, line: 1926, baseType: !60, size: 32, offset: 128)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !2415, file: !56, line: 1927, baseType: !60, size: 32, offset: 160)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !2415, file: !56, line: 1928, baseType: !60, size: 32, offset: 192)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !2415, file: !56, line: 1929, baseType: !60, size: 32, offset: 224)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !2415, file: !56, line: 1930, baseType: !2426, size: 768, offset: 256)
!2426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 768, elements: !952)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !2415, file: !56, line: 1931, baseType: !60, size: 32, offset: 1024)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !2415, file: !56, line: 1932, baseType: !2429, size: 992, offset: 1056)
!2429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 992, elements: !2430)
!2430 = !{!2431}
!2431 = !DISubrange(count: 31)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !2415, file: !56, line: 1933, baseType: !60, size: 32, offset: 2048)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !2415, file: !56, line: 1934, baseType: !2434, size: 416, offset: 2080)
!2434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 416, elements: !808)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !2415, file: !56, line: 1935, baseType: !60, size: 32, offset: 2496)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !2415, file: !56, line: 1936, baseType: !2437, size: 1568, offset: 2528)
!2437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 1568, elements: !2438)
!2438 = !{!2439}
!2439 = !DISubrange(count: 49)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !2415, file: !56, line: 1937, baseType: !272, size: 32, offset: 4096)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !2415, file: !56, line: 1938, baseType: !272, size: 32, offset: 4128)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !2415, file: !56, line: 1939, baseType: !272, size: 32, offset: 4160)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !2415, file: !56, line: 1940, baseType: !60, size: 32, offset: 4192)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !2415, file: !56, line: 1941, baseType: !60, size: 32, offset: 4224)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !2415, file: !56, line: 1942, baseType: !60, size: 32, offset: 4256)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !2415, file: !56, line: 1943, baseType: !60, size: 32, offset: 4288)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !2415, file: !56, line: 1944, baseType: !60, size: 32, offset: 4320)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !2415, file: !56, line: 1945, baseType: !60, size: 32, offset: 4352)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !2415, file: !56, line: 1946, baseType: !60, size: 32, offset: 4384)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !2415, file: !56, line: 1947, baseType: !60, size: 32, offset: 4416)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !2415, file: !56, line: 1948, baseType: !2452, size: 3744, offset: 4448)
!2452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 3744, elements: !2453)
!2453 = !{!2454}
!2454 = !DISubrange(count: 117)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !2415, file: !56, line: 1949, baseType: !60, size: 32, offset: 8192)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !2415, file: !56, line: 1950, baseType: !60, size: 32, offset: 8224)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !2415, file: !56, line: 1951, baseType: !272, size: 32, offset: 8256)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !56, line: 2158, baseType: !2460)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2156, size: 32, elements: !2461)
!2461 = !{!2462}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !2460, file: !56, line: 2157, baseType: !60, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !913, line: 418, baseType: !2465)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !913, line: 395, size: 1120, elements: !2466)
!2466 = !{!2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2465, file: !913, line: 397, baseType: !272, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2465, file: !913, line: 398, baseType: !60, size: 32, offset: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2465, file: !913, line: 399, baseType: !60, size: 32, offset: 64)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2465, file: !913, line: 400, baseType: !60, size: 32, offset: 96)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2465, file: !913, line: 401, baseType: !60, size: 32, offset: 128)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2465, file: !913, line: 402, baseType: !60, size: 32, offset: 160)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2465, file: !913, line: 403, baseType: !923, size: 96, offset: 192)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2465, file: !913, line: 404, baseType: !60, size: 32, offset: 288)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2465, file: !913, line: 405, baseType: !60, size: 32, offset: 320)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2465, file: !913, line: 406, baseType: !60, size: 32, offset: 352)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2465, file: !913, line: 407, baseType: !60, size: 32, offset: 384)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2465, file: !913, line: 408, baseType: !60, size: 32, offset: 416)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2465, file: !913, line: 409, baseType: !60, size: 32, offset: 448)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2465, file: !913, line: 410, baseType: !60, size: 32, offset: 480)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2465, file: !913, line: 411, baseType: !932, size: 64, offset: 512)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2465, file: !913, line: 412, baseType: !272, size: 32, offset: 576)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2465, file: !913, line: 413, baseType: !272, size: 32, offset: 608)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2465, file: !913, line: 414, baseType: !936, size: 128, offset: 640)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2465, file: !913, line: 415, baseType: !938, size: 160, offset: 768)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2465, file: !913, line: 416, baseType: !942, size: 160, offset: 928)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2465, file: !913, line: 417, baseType: !60, size: 32, offset: 1088)
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 32)
!2489 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !2490)
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !2491)
!2491 = !{!2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !2490, file: !56, line: 261, baseType: !60, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !2490, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !2490, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !2490, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !2490, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !2490, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !2490, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !2490, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !2490, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !2490, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2490, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !2490, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2490, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !2490, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !2490, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!2507 = !{!2508, !2400}
!2508 = !DIGlobalVariableExpression(var: !2509, expr: !DIExpression())
!2509 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2402, file: !2403, line: 50, type: !61, isLocal: false, isDefinition: true)
!2510 = !DIGlobalVariableExpression(var: !2511, expr: !DIExpression())
!2511 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2512, file: !2517, line: 4, type: !2523, isLocal: false, isDefinition: true)
!2512 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2513, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2514, splitDebugInlining: false, nameTableKind: None)
!2513 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!2514 = !{!2510, !2515, !2521}
!2515 = !DIGlobalVariableExpression(var: !2516, expr: !DIExpression())
!2516 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2512, file: !2517, line: 5, type: !2518, isLocal: false, isDefinition: true)
!2517 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!2518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1516, size: 88, elements: !2519)
!2519 = !{!2520}
!2520 = !DISubrange(count: 11)
!2521 = !DIGlobalVariableExpression(var: !2522, expr: !DIExpression())
!2522 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2512, file: !2517, line: 6, type: !2518, isLocal: false, isDefinition: true)
!2523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1516, size: 248, elements: !2430)
!2524 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2525, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2526, retainedTypes: !2549, splitDebugInlining: false, nameTableKind: None)
!2525 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!2526 = !{!1943, !245, !259, !2527, !2531, !254, !157}
!2527 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 857, baseType: !18, size: 32, elements: !2528)
!2528 = !{!2529, !2530}
!2529 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!2530 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!2531 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 87, baseType: !18, size: 32, elements: !2532)
!2532 = !{!2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548}
!2533 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!2534 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!2535 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!2536 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!2537 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!2538 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!2539 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!2540 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!2541 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!2542 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!2543 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!2544 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!2545 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!2546 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!2547 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!2548 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!2549 = !{!61, !88, !307}
!2550 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2551, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2552, retainedTypes: !2553, splitDebugInlining: false, nameTableKind: None)
!2551 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!2552 = !{!728, !734, !738, !821}
!2553 = !{!356}
!2554 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2555, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2556, retainedTypes: !2557, splitDebugInlining: false, nameTableKind: None)
!2555 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!2556 = !{!168, !750}
!2557 = !{!897, !2558, !61, !2583, !974}
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !913, line: 418, baseType: !2560)
!2560 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !913, line: 395, size: 1120, elements: !2561)
!2561 = !{!2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2560, file: !913, line: 397, baseType: !272, size: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2560, file: !913, line: 398, baseType: !60, size: 32, offset: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2560, file: !913, line: 399, baseType: !60, size: 32, offset: 64)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2560, file: !913, line: 400, baseType: !60, size: 32, offset: 96)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2560, file: !913, line: 401, baseType: !60, size: 32, offset: 128)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2560, file: !913, line: 402, baseType: !60, size: 32, offset: 160)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2560, file: !913, line: 403, baseType: !923, size: 96, offset: 192)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2560, file: !913, line: 404, baseType: !60, size: 32, offset: 288)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2560, file: !913, line: 405, baseType: !60, size: 32, offset: 320)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2560, file: !913, line: 406, baseType: !60, size: 32, offset: 352)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2560, file: !913, line: 407, baseType: !60, size: 32, offset: 384)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2560, file: !913, line: 408, baseType: !60, size: 32, offset: 416)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2560, file: !913, line: 409, baseType: !60, size: 32, offset: 448)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2560, file: !913, line: 410, baseType: !60, size: 32, offset: 480)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2560, file: !913, line: 411, baseType: !932, size: 64, offset: 512)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2560, file: !913, line: 412, baseType: !272, size: 32, offset: 576)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2560, file: !913, line: 413, baseType: !272, size: 32, offset: 608)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2560, file: !913, line: 414, baseType: !936, size: 128, offset: 640)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2560, file: !913, line: 415, baseType: !938, size: 160, offset: 768)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2560, file: !913, line: 416, baseType: !942, size: 160, offset: 928)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2560, file: !913, line: 417, baseType: !60, size: 32, offset: 1088)
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 32)
!2584 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !913, line: 378, baseType: !2585)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !913, line: 363, size: 28704, elements: !2586)
!2586 = !{!2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2585, file: !913, line: 365, baseType: !949, size: 256)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2585, file: !913, line: 366, baseType: !951, size: 768, offset: 256)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2585, file: !913, line: 367, baseType: !949, size: 256, offset: 1024)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !2585, file: !913, line: 368, baseType: !951, size: 768, offset: 1280)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2585, file: !913, line: 369, baseType: !949, size: 256, offset: 2048)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2585, file: !913, line: 370, baseType: !951, size: 768, offset: 2304)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2585, file: !913, line: 371, baseType: !949, size: 256, offset: 3072)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2585, file: !913, line: 372, baseType: !951, size: 768, offset: 3328)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2585, file: !913, line: 373, baseType: !949, size: 256, offset: 4096)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2585, file: !913, line: 374, baseType: !962, size: 1792, offset: 4352)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2585, file: !913, line: 375, baseType: !966, size: 1920, offset: 6144)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2585, file: !913, line: 376, baseType: !970, size: 20608, offset: 8064)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2585, file: !913, line: 377, baseType: !60, size: 32, offset: 28672)
!2600 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2601, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2601 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!2602 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2603, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2603 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!2604 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2605, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2606, retainedTypes: !2607, splitDebugInlining: false, nameTableKind: None)
!2605 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/trng_generate_random_data/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!2606 = !{!666, !712, !728, !734, !738, !386}
!2607 = !{!18}
!2608 = !{!"Ubuntu clang version 14.0.6"}
!2609 = !{i32 7, !"Dwarf Version", i32 2}
!2610 = !{i32 2, !"Debug Info Version", i32 3}
!2611 = !{i32 1, !"wchar_size", i32 4}
!2612 = !{i32 1, !"min_enum_size", i32 4}
!2613 = !{i32 1, !"branch-target-enforcement", i32 0}
!2614 = !{i32 1, !"sign-return-address", i32 0}
!2615 = !{i32 1, !"sign-return-address-all", i32 0}
!2616 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2617 = !{i32 7, !"frame-pointer", i32 2}
!2618 = distinct !DISubprogram(name: "hal_cache_init", scope: !3, file: !3, line: 53, type: !2619, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2622)
!2619 = !DISubroutineType(types: !2620)
!2620 = !{!2621}
!2621 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !6, line: 172, baseType: !5)
!2622 = !{!2623, !2625}
!2623 = !DILocalVariable(name: "region", scope: !2618, file: !3, line: 55, type: !2624)
!2624 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !6, line: 204, baseType: !17)
!2625 = !DILocalVariable(name: "irq_flag", scope: !2618, file: !3, line: 56, type: !61)
!2626 = !DILocation(line: 59, column: 16, scope: !2618)
!2627 = !DILocation(line: 0, scope: !2618)
!2628 = !DILocation(line: 62, column: 9, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2618, file: !3, line: 62, column: 9)
!2630 = !{i8 0, i8 2}
!2631 = !DILocation(line: 62, column: 9, scope: !2618)
!2632 = !DILocation(line: 64, column: 9, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 62, column: 39)
!2634 = !DILocation(line: 66, column: 9, scope: !2633)
!2635 = !DILocation(line: 69, column: 24, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 67, column: 12)
!2637 = !DILocation(line: 72, column: 9, scope: !2636)
!2638 = !DILocation(line: 77, column: 5, scope: !2618)
!2639 = !DILocation(line: 80, column: 22, scope: !2618)
!2640 = !DILocation(line: 81, column: 28, scope: !2618)
!2641 = !DILocation(line: 84, column: 19, scope: !2618)
!2642 = !DILocation(line: 85, column: 23, scope: !2618)
!2643 = !DILocation(line: 88, column: 5, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2618, file: !3, line: 88, column: 5)
!2645 = !DILocation(line: 90, column: 9, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2647, file: !3, line: 88, column: 81)
!2647 = distinct !DILexicalBlock(scope: !2644, file: !3, line: 88, column: 5)
!2648 = !DILocation(line: 90, column: 38, scope: !2646)
!2649 = !DILocation(line: 91, column: 9, scope: !2646)
!2650 = !DILocation(line: 91, column: 42, scope: !2646)
!2651 = !DILocation(line: 94, column: 45, scope: !2646)
!2652 = !DILocation(line: 94, column: 47, scope: !2646)
!2653 = !DILocation(line: 95, column: 49, scope: !2646)
!2654 = !DILocation(line: 95, column: 51, scope: !2646)
!2655 = !DILocation(line: 88, column: 77, scope: !2647)
!2656 = !DILocation(line: 88, column: 46, scope: !2647)
!2657 = distinct !{!2657, !2643, !2658}
!2658 = !DILocation(line: 96, column: 5, scope: !2644)
!2659 = !DILocation(line: 99, column: 1, scope: !2618)
!2660 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !3, file: !3, line: 327, type: !2619, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2661)
!2661 = !{!2662}
!2662 = !DILocalVariable(name: "irq_flag", scope: !2660, file: !3, line: 329, type: !61)
!2663 = !DILocation(line: 332, column: 16, scope: !2660)
!2664 = !DILocation(line: 0, scope: !2660)
!2665 = !DILocation(line: 335, column: 21, scope: !2660)
!2666 = !DILocation(line: 336, column: 21, scope: !2660)
!2667 = !DILocation(line: 339, column: 21, scope: !2660)
!2668 = !DILocation(line: 340, column: 21, scope: !2660)
!2669 = !DILocation(line: 434, column: 3, scope: !2670, inlinedAt: !2672)
!2670 = distinct !DISubprogram(name: "__ISB", scope: !2671, file: !2671, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2671 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!2672 = distinct !DILocation(line: 343, column: 5, scope: !2660)
!2673 = !{i64 442812}
!2674 = !DILocation(line: 346, column: 5, scope: !2660)
!2675 = !DILocation(line: 348, column: 5, scope: !2660)
!2676 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !3, file: !3, line: 101, type: !2619, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2677)
!2677 = !{!2678}
!2678 = !DILocalVariable(name: "region", scope: !2676, file: !3, line: 103, type: !2624)
!2679 = !DILocation(line: 107, column: 5, scope: !2676)
!2680 = !DILocation(line: 110, column: 22, scope: !2676)
!2681 = !DILocation(line: 111, column: 28, scope: !2676)
!2682 = !DILocation(line: 114, column: 19, scope: !2676)
!2683 = !DILocation(line: 115, column: 23, scope: !2676)
!2684 = !DILocation(line: 0, scope: !2676)
!2685 = !DILocation(line: 118, column: 5, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2676, file: !3, line: 118, column: 5)
!2687 = !DILocation(line: 120, column: 9, scope: !2688)
!2688 = distinct !DILexicalBlock(scope: !2689, file: !3, line: 118, column: 81)
!2689 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 118, column: 5)
!2690 = !DILocation(line: 120, column: 38, scope: !2688)
!2691 = !DILocation(line: 121, column: 9, scope: !2688)
!2692 = !DILocation(line: 121, column: 42, scope: !2688)
!2693 = !DILocation(line: 124, column: 45, scope: !2688)
!2694 = !DILocation(line: 124, column: 47, scope: !2688)
!2695 = !DILocation(line: 125, column: 49, scope: !2688)
!2696 = !DILocation(line: 125, column: 51, scope: !2688)
!2697 = !DILocation(line: 118, column: 77, scope: !2689)
!2698 = !DILocation(line: 118, column: 46, scope: !2689)
!2699 = distinct !{!2699, !2685, !2700}
!2700 = !DILocation(line: 126, column: 5, scope: !2686)
!2701 = !DILocation(line: 129, column: 20, scope: !2676)
!2702 = !DILocation(line: 131, column: 5, scope: !2676)
!2703 = distinct !DISubprogram(name: "hal_cache_enable", scope: !3, file: !3, line: 134, type: !2619, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2704 = !DILocation(line: 137, column: 45, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2703, file: !3, line: 137, column: 9)
!2706 = !DILocation(line: 137, column: 28, scope: !2705)
!2707 = !DILocation(line: 137, column: 9, scope: !2703)
!2708 = !DILocation(line: 142, column: 22, scope: !2703)
!2709 = !DILocation(line: 145, column: 28, scope: !2703)
!2710 = !DILocation(line: 145, column: 19, scope: !2703)
!2711 = !DILocation(line: 147, column: 5, scope: !2703)
!2712 = !DILocation(line: 0, scope: !2703)
!2713 = !DILocation(line: 148, column: 1, scope: !2703)
!2714 = distinct !DISubprogram(name: "hal_cache_disable", scope: !3, file: !3, line: 150, type: !2619, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2715)
!2715 = !{!2716}
!2716 = !DILocalVariable(name: "irq_flag", scope: !2714, file: !3, line: 152, type: !61)
!2717 = !DILocation(line: 155, column: 16, scope: !2714)
!2718 = !DILocation(line: 0, scope: !2714)
!2719 = !DILocation(line: 158, column: 16, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2714, file: !3, line: 158, column: 9)
!2721 = !DILocation(line: 158, column: 26, scope: !2720)
!2722 = !DILocation(line: 158, column: 9, scope: !2714)
!2723 = !DILocation(line: 160, column: 9, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2720, file: !3, line: 158, column: 49)
!2725 = !DILocation(line: 161, column: 5, scope: !2724)
!2726 = !DILocation(line: 164, column: 22, scope: !2714)
!2727 = !DILocation(line: 167, column: 28, scope: !2714)
!2728 = !DILocation(line: 167, column: 19, scope: !2714)
!2729 = !DILocation(line: 170, column: 5, scope: !2714)
!2730 = !DILocation(line: 172, column: 5, scope: !2714)
!2731 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !3, file: !3, line: 175, type: !2732, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2734)
!2732 = !DISubroutineType(types: !2733)
!2733 = !{!2621, !2624}
!2734 = !{!2735}
!2735 = !DILocalVariable(name: "region", arg: 1, scope: !2731, file: !3, line: 175, type: !2624)
!2736 = !DILocation(line: 0, scope: !2731)
!2737 = !DILocation(line: 178, column: 16, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2731, file: !3, line: 178, column: 9)
!2739 = !DILocation(line: 178, column: 9, scope: !2731)
!2740 = !DILocation(line: 183, column: 9, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2731, file: !3, line: 183, column: 9)
!2742 = !DILocation(line: 183, column: 38, scope: !2741)
!2743 = !DILocation(line: 183, column: 9, scope: !2731)
!2744 = !DILocation(line: 184, column: 38, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2741, file: !3, line: 183, column: 62)
!2746 = !DILocation(line: 184, column: 32, scope: !2745)
!2747 = !DILocation(line: 190, column: 32, scope: !2731)
!2748 = !DILocation(line: 190, column: 23, scope: !2731)
!2749 = !DILocation(line: 192, column: 5, scope: !2731)
!2750 = !DILocation(line: 193, column: 1, scope: !2731)
!2751 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !3, file: !3, line: 195, type: !2732, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2752)
!2752 = !{!2753}
!2753 = !DILocalVariable(name: "region", arg: 1, scope: !2751, file: !3, line: 195, type: !2624)
!2754 = !DILocation(line: 0, scope: !2751)
!2755 = !DILocation(line: 198, column: 16, scope: !2756)
!2756 = distinct !DILexicalBlock(scope: !2751, file: !3, line: 198, column: 9)
!2757 = !DILocation(line: 198, column: 9, scope: !2751)
!2758 = !DILocation(line: 203, column: 35, scope: !2751)
!2759 = !DILocation(line: 203, column: 31, scope: !2751)
!2760 = !DILocation(line: 203, column: 28, scope: !2751)
!2761 = !DILocation(line: 206, column: 32, scope: !2751)
!2762 = !DILocation(line: 206, column: 23, scope: !2751)
!2763 = !DILocation(line: 209, column: 41, scope: !2751)
!2764 = !DILocation(line: 209, column: 43, scope: !2751)
!2765 = !DILocation(line: 210, column: 45, scope: !2751)
!2766 = !DILocation(line: 210, column: 47, scope: !2751)
!2767 = !DILocation(line: 212, column: 5, scope: !2751)
!2768 = !DILocation(line: 213, column: 1, scope: !2751)
!2769 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !3, file: !3, line: 215, type: !2770, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2773)
!2770 = !DISubroutineType(types: !2771)
!2771 = !{!2621, !2772}
!2772 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !6, line: 182, baseType: !37)
!2773 = !{!2774}
!2774 = !DILocalVariable(name: "cache_size", arg: 1, scope: !2769, file: !3, line: 215, type: !2772)
!2775 = !DILocation(line: 0, scope: !2769)
!2776 = !DILocation(line: 218, column: 20, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2769, file: !3, line: 218, column: 9)
!2778 = !DILocation(line: 218, column: 9, scope: !2769)
!2779 = !DILocation(line: 223, column: 22, scope: !2769)
!2780 = !DILocation(line: 224, column: 37, scope: !2769)
!2781 = !DILocation(line: 224, column: 22, scope: !2769)
!2782 = !DILocation(line: 227, column: 20, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2769, file: !3, line: 227, column: 9)
!2784 = !DILocation(line: 227, column: 9, scope: !2769)
!2785 = !DILocation(line: 228, column: 26, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2783, file: !3, line: 227, column: 43)
!2787 = !DILocation(line: 229, column: 5, scope: !2786)
!2788 = !DILocation(line: 232, column: 28, scope: !2769)
!2789 = !DILocation(line: 232, column: 19, scope: !2769)
!2790 = !DILocation(line: 234, column: 5, scope: !2769)
!2791 = !DILocation(line: 235, column: 1, scope: !2769)
!2792 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !3, file: !3, line: 237, type: !2793, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2802)
!2793 = !DISubroutineType(types: !2794)
!2794 = !{!2621, !2624, !2795}
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2797)
!2797 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !6, line: 222, baseType: !2798)
!2798 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 219, size: 64, elements: !2799)
!2799 = !{!2800, !2801}
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !2798, file: !6, line: 220, baseType: !61, size: 32)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !2798, file: !6, line: 221, baseType: !61, size: 32, offset: 32)
!2802 = !{!2803, !2804}
!2803 = !DILocalVariable(name: "region", arg: 1, scope: !2792, file: !3, line: 237, type: !2624)
!2804 = !DILocalVariable(name: "region_config", arg: 2, scope: !2792, file: !3, line: 237, type: !2795)
!2805 = !DILocation(line: 0, scope: !2792)
!2806 = !DILocation(line: 240, column: 16, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2792, file: !3, line: 240, column: 9)
!2808 = !DILocation(line: 240, column: 9, scope: !2792)
!2809 = !DILocation(line: 245, column: 23, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2792, file: !3, line: 245, column: 9)
!2811 = !DILocation(line: 245, column: 9, scope: !2792)
!2812 = !DILocation(line: 250, column: 24, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2792, file: !3, line: 250, column: 9)
!2814 = !DILocation(line: 250, column: 45, scope: !2813)
!2815 = !DILocation(line: 250, column: 9, scope: !2792)
!2816 = !DILocation(line: 251, column: 9, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2813, file: !3, line: 250, column: 81)
!2818 = !DILocation(line: 256, column: 24, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2792, file: !3, line: 256, column: 9)
!2820 = !DILocation(line: 256, column: 42, scope: !2819)
!2821 = !DILocation(line: 256, column: 9, scope: !2792)
!2822 = !DILocation(line: 257, column: 9, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2819, file: !3, line: 256, column: 78)
!2824 = !DILocation(line: 262, column: 5, scope: !2792)
!2825 = !DILocation(line: 262, column: 34, scope: !2792)
!2826 = !DILocation(line: 263, column: 55, scope: !2792)
!2827 = !DILocation(line: 263, column: 93, scope: !2792)
!2828 = !DILocation(line: 263, column: 76, scope: !2792)
!2829 = !DILocation(line: 263, column: 5, scope: !2792)
!2830 = !DILocation(line: 263, column: 38, scope: !2792)
!2831 = !DILocation(line: 266, column: 34, scope: !2792)
!2832 = !DILocation(line: 269, column: 45, scope: !2792)
!2833 = !DILocation(line: 269, column: 41, scope: !2792)
!2834 = !DILocation(line: 269, column: 43, scope: !2792)
!2835 = !DILocation(line: 270, column: 49, scope: !2792)
!2836 = !DILocation(line: 270, column: 45, scope: !2792)
!2837 = !DILocation(line: 270, column: 47, scope: !2792)
!2838 = !DILocation(line: 272, column: 5, scope: !2792)
!2839 = !DILocation(line: 273, column: 1, scope: !2792)
!2840 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !3, file: !3, line: 275, type: !2841, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2843)
!2841 = !DISubroutineType(types: !2842)
!2842 = !{!2621, !61}
!2843 = !{!2844, !2845}
!2844 = !DILocalVariable(name: "address", arg: 1, scope: !2840, file: !3, line: 275, type: !61)
!2845 = !DILocalVariable(name: "irq_flag", scope: !2840, file: !3, line: 277, type: !61)
!2846 = !DILocation(line: 0, scope: !2840)
!2847 = !DILocation(line: 280, column: 17, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2840, file: !3, line: 280, column: 9)
!2849 = !DILocation(line: 280, column: 9, scope: !2840)
!2850 = !DILocation(line: 284, column: 16, scope: !2840)
!2851 = !DILocation(line: 287, column: 32, scope: !2840)
!2852 = !DILocation(line: 287, column: 21, scope: !2840)
!2853 = !DILocation(line: 288, column: 21, scope: !2840)
!2854 = !DILocation(line: 434, column: 3, scope: !2670, inlinedAt: !2855)
!2855 = distinct !DILocation(line: 291, column: 5, scope: !2840)
!2856 = !DILocation(line: 294, column: 5, scope: !2840)
!2857 = !DILocation(line: 296, column: 5, scope: !2840)
!2858 = !DILocation(line: 297, column: 1, scope: !2840)
!2859 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !3, file: !3, line: 299, type: !2860, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2862)
!2860 = !DISubroutineType(types: !2861)
!2861 = !{!2621, !61, !61}
!2862 = !{!2863, !2864, !2865, !2866}
!2863 = !DILocalVariable(name: "address", arg: 1, scope: !2859, file: !3, line: 299, type: !61)
!2864 = !DILocalVariable(name: "length", arg: 2, scope: !2859, file: !3, line: 299, type: !61)
!2865 = !DILocalVariable(name: "irq_flag", scope: !2859, file: !3, line: 301, type: !61)
!2866 = !DILocalVariable(name: "end_address", scope: !2859, file: !3, line: 302, type: !61)
!2867 = !DILocation(line: 0, scope: !2859)
!2868 = !DILocation(line: 302, column: 36, scope: !2859)
!2869 = !DILocation(line: 305, column: 47, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2859, file: !3, line: 305, column: 9)
!2871 = !DILocation(line: 310, column: 16, scope: !2859)
!2872 = !DILocation(line: 313, column: 20, scope: !2859)
!2873 = !DILocation(line: 313, column: 5, scope: !2859)
!2874 = !DILocation(line: 314, column: 9, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2859, file: !3, line: 313, column: 35)
!2876 = !DILocation(line: 315, column: 17, scope: !2875)
!2877 = distinct !{!2877, !2873, !2878}
!2878 = !DILocation(line: 316, column: 5, scope: !2859)
!2879 = !DILocation(line: 434, column: 3, scope: !2670, inlinedAt: !2880)
!2880 = distinct !DILocation(line: 319, column: 5, scope: !2859)
!2881 = !DILocation(line: 322, column: 5, scope: !2859)
!2882 = !DILocation(line: 324, column: 5, scope: !2859)
!2883 = !DILocation(line: 325, column: 1, scope: !2859)
!2884 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !3, file: !3, line: 351, type: !2841, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2885)
!2885 = !{!2886, !2887}
!2886 = !DILocalVariable(name: "address", arg: 1, scope: !2884, file: !3, line: 351, type: !61)
!2887 = !DILocalVariable(name: "irq_flag", scope: !2884, file: !3, line: 353, type: !61)
!2888 = !DILocation(line: 0, scope: !2884)
!2889 = !DILocation(line: 356, column: 17, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2884, file: !3, line: 356, column: 9)
!2891 = !DILocation(line: 356, column: 9, scope: !2884)
!2892 = !DILocation(line: 361, column: 16, scope: !2884)
!2893 = !DILocation(line: 364, column: 32, scope: !2884)
!2894 = !DILocation(line: 364, column: 21, scope: !2884)
!2895 = !DILocation(line: 365, column: 21, scope: !2884)
!2896 = !DILocation(line: 434, column: 3, scope: !2670, inlinedAt: !2897)
!2897 = distinct !DILocation(line: 368, column: 5, scope: !2884)
!2898 = !DILocation(line: 371, column: 5, scope: !2884)
!2899 = !DILocation(line: 373, column: 5, scope: !2884)
!2900 = !DILocation(line: 374, column: 1, scope: !2884)
!2901 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !3, file: !3, line: 376, type: !2860, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2902)
!2902 = !{!2903, !2904, !2905, !2906}
!2903 = !DILocalVariable(name: "address", arg: 1, scope: !2901, file: !3, line: 376, type: !61)
!2904 = !DILocalVariable(name: "length", arg: 2, scope: !2901, file: !3, line: 376, type: !61)
!2905 = !DILocalVariable(name: "irq_flag", scope: !2901, file: !3, line: 378, type: !61)
!2906 = !DILocalVariable(name: "end_address", scope: !2901, file: !3, line: 379, type: !61)
!2907 = !DILocation(line: 0, scope: !2901)
!2908 = !DILocation(line: 379, column: 36, scope: !2901)
!2909 = !DILocation(line: 382, column: 47, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 382, column: 9)
!2911 = !DILocation(line: 387, column: 16, scope: !2901)
!2912 = !DILocation(line: 390, column: 20, scope: !2901)
!2913 = !DILocation(line: 390, column: 5, scope: !2901)
!2914 = !DILocation(line: 391, column: 9, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 390, column: 35)
!2916 = !DILocation(line: 392, column: 17, scope: !2915)
!2917 = distinct !{!2917, !2913, !2918}
!2918 = !DILocation(line: 393, column: 5, scope: !2901)
!2919 = !DILocation(line: 434, column: 3, scope: !2670, inlinedAt: !2920)
!2920 = distinct !DILocation(line: 396, column: 5, scope: !2901)
!2921 = !DILocation(line: 399, column: 5, scope: !2901)
!2922 = !DILocation(line: 401, column: 5, scope: !2901)
!2923 = !DILocation(line: 402, column: 1, scope: !2901)
!2924 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !3, file: !3, line: 404, type: !2619, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2925)
!2925 = !{!2926}
!2926 = !DILocalVariable(name: "irq_flag", scope: !2924, file: !3, line: 406, type: !61)
!2927 = !DILocation(line: 409, column: 16, scope: !2924)
!2928 = !DILocation(line: 0, scope: !2924)
!2929 = !DILocation(line: 412, column: 21, scope: !2924)
!2930 = !DILocation(line: 413, column: 21, scope: !2924)
!2931 = !DILocation(line: 434, column: 3, scope: !2670, inlinedAt: !2932)
!2932 = distinct !DILocation(line: 416, column: 5, scope: !2924)
!2933 = !DILocation(line: 419, column: 5, scope: !2924)
!2934 = !DILocation(line: 421, column: 5, scope: !2924)
!2935 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !3, file: !3, line: 424, type: !2936, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2938)
!2936 = !DISubroutineType(types: !2937)
!2937 = !{!91, !61}
!2938 = !{!2939, !2940}
!2939 = !DILocalVariable(name: "address", arg: 1, scope: !2935, file: !3, line: 424, type: !61)
!2940 = !DILocalVariable(name: "region", scope: !2935, file: !3, line: 426, type: !2624)
!2941 = !DILocation(line: 0, scope: !2935)
!2942 = !DILocation(line: 429, column: 18, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 429, column: 9)
!2944 = !DILocation(line: 429, column: 28, scope: !2943)
!2945 = !DILocation(line: 429, column: 9, scope: !2935)
!2946 = !DILocation(line: 435, column: 20, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 435, column: 13)
!2948 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 433, column: 81)
!2949 = distinct !DILexicalBlock(scope: !2950, file: !3, line: 433, column: 5)
!2950 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 433, column: 5)
!2951 = !DILocation(line: 435, column: 41, scope: !2947)
!2952 = !DILocation(line: 435, column: 36, scope: !2947)
!2953 = !DILocation(line: 435, column: 13, scope: !2948)
!2954 = !DILocation(line: 436, column: 30, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 436, column: 17)
!2956 = distinct !DILexicalBlock(scope: !2947, file: !3, line: 435, column: 53)
!2957 = !DILocation(line: 436, column: 59, scope: !2955)
!2958 = !DILocation(line: 436, column: 26, scope: !2955)
!2959 = !DILocation(line: 436, column: 85, scope: !2955)
!2960 = !DILocation(line: 436, column: 99, scope: !2955)
!2961 = !DILocation(line: 436, column: 97, scope: !2955)
!2962 = !DILocation(line: 436, column: 17, scope: !2956)
!2963 = !DILocation(line: 433, column: 77, scope: !2949)
!2964 = !DILocation(line: 433, column: 46, scope: !2949)
!2965 = !DILocation(line: 433, column: 5, scope: !2950)
!2966 = distinct !{!2966, !2965, !2967}
!2967 = !DILocation(line: 440, column: 5, scope: !2950)
!2968 = !DILocation(line: 442, column: 1, scope: !2935)
!2969 = distinct !DISubprogram(name: "hal_gpt_init", scope: !2525, file: !2525, line: 95, type: !2970, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !2974)
!2970 = !DISubroutineType(types: !2971)
!2971 = !{!2972, !2973}
!2972 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !255, line: 393, baseType: !1943)
!2973 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !98, line: 854, baseType: !245)
!2974 = !{!2975}
!2975 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2969, file: !2525, line: 95, type: !2973)
!2976 = !DILocation(line: 0, scope: !2969)
!2977 = !DILocation(line: 98, column: 9, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2969, file: !2525, line: 98, column: 9)
!2979 = !DILocation(line: 98, column: 9, scope: !2969)
!2980 = !DILocation(line: 102, column: 10, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2969, file: !2525, line: 102, column: 9)
!2982 = !DILocation(line: 102, column: 34, scope: !2981)
!2983 = !DILocation(line: 102, column: 49, scope: !2981)
!2984 = !DILocation(line: 102, column: 69, scope: !2981)
!2985 = !DILocation(line: 103, column: 38, scope: !2981)
!2986 = !DILocation(line: 102, column: 9, scope: !2969)
!2987 = !DILocation(line: 109, column: 12, scope: !2969)
!2988 = !DILocation(line: 109, column: 5, scope: !2969)
!2989 = !DILocation(line: 112, column: 5, scope: !2969)
!2990 = !DILocation(line: 115, column: 44, scope: !2969)
!2991 = !DILocation(line: 118, column: 5, scope: !2969)
!2992 = !DILocation(line: 118, column: 23, scope: !2969)
!2993 = !DILocation(line: 118, column: 35, scope: !2969)
!2994 = !DILocation(line: 121, column: 42, scope: !2969)
!2995 = !DILocation(line: 121, column: 38, scope: !2969)
!2996 = !DILocation(line: 121, column: 5, scope: !2969)
!2997 = !DILocation(line: 121, column: 17, scope: !2969)
!2998 = !DILocation(line: 121, column: 35, scope: !2969)
!2999 = !DILocation(line: 129, column: 5, scope: !2969)
!3000 = !DILocation(line: 131, column: 1, scope: !2969)
!3001 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !2525, file: !2525, line: 81, type: !3002, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !3004)
!3002 = !DISubroutineType(types: !3003)
!3003 = !{!91, !2973}
!3004 = !{!3005}
!3005 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3001, file: !2525, line: 81, type: !2973)
!3006 = !DILocation(line: 0, scope: !3001)
!3007 = !DILocation(line: 84, column: 25, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !3001, file: !2525, line: 84, column: 9)
!3009 = !DILocation(line: 84, column: 35, scope: !3008)
!3010 = !DILocation(line: 84, column: 45, scope: !3008)
!3011 = !DILocation(line: 93, column: 1, scope: !3001)
!3012 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !2525, file: !2525, line: 133, type: !2970, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !3013)
!3013 = !{!3014}
!3014 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3012, file: !2525, line: 133, type: !2973)
!3015 = !DILocation(line: 0, scope: !3012)
!3016 = !DILocation(line: 136, column: 9, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3012, file: !2525, line: 136, column: 9)
!3018 = !DILocation(line: 136, column: 9, scope: !3012)
!3019 = !DILocation(line: 140, column: 9, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !3012, file: !2525, line: 140, column: 9)
!3021 = !DILocation(line: 140, column: 33, scope: !3020)
!3022 = !DILocation(line: 140, column: 48, scope: !3020)
!3023 = !DILocation(line: 140, column: 9, scope: !3012)
!3024 = !DILocation(line: 146, column: 12, scope: !3012)
!3025 = !DILocation(line: 146, column: 5, scope: !3012)
!3026 = !DILocation(line: 149, column: 29, scope: !3012)
!3027 = !DILocation(line: 149, column: 44, scope: !3012)
!3028 = !DILocation(line: 151, column: 29, scope: !3012)
!3029 = !DILocation(line: 151, column: 5, scope: !3012)
!3030 = !DILocation(line: 159, column: 5, scope: !3012)
!3031 = !DILocation(line: 160, column: 1, scope: !3012)
!3032 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !2525, file: !2525, line: 163, type: !3033, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !3036)
!3033 = !DISubroutineType(types: !3034)
!3034 = !{!2972, !3035, !1036}
!3035 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !98, line: 860, baseType: !2527)
!3036 = !{!3037, !3038}
!3037 = !DILocalVariable(name: "clock_source", arg: 1, scope: !3032, file: !2525, line: 163, type: !3035)
!3038 = !DILocalVariable(name: "count", arg: 2, scope: !3032, file: !2525, line: 163, type: !1036)
!3039 = !DILocation(line: 0, scope: !3032)
!3040 = !DILocation(line: 166, column: 9, scope: !3032)
!3041 = !DILocation(line: 167, column: 44, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3043, file: !2525, line: 167, column: 13)
!3043 = distinct !DILexicalBlock(scope: !3044, file: !2525, line: 166, column: 51)
!3044 = distinct !DILexicalBlock(scope: !3032, file: !2525, line: 166, column: 9)
!3045 = !DILocation(line: 167, column: 59, scope: !3042)
!3046 = !DILocation(line: 167, column: 13, scope: !3043)
!3047 = !DILocation(line: 170, column: 38, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3042, file: !2525, line: 167, column: 79)
!3049 = !DILocation(line: 170, column: 13, scope: !3048)
!3050 = !DILocation(line: 172, column: 59, scope: !3048)
!3051 = !DILocation(line: 173, column: 9, scope: !3048)
!3052 = !DILocation(line: 175, column: 36, scope: !3043)
!3053 = !DILocation(line: 175, column: 18, scope: !3043)
!3054 = !DILocation(line: 177, column: 5, scope: !3043)
!3055 = !DILocation(line: 179, column: 44, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3057, file: !2525, line: 179, column: 13)
!3057 = distinct !DILexicalBlock(scope: !3058, file: !2525, line: 178, column: 55)
!3058 = distinct !DILexicalBlock(scope: !3044, file: !2525, line: 178, column: 14)
!3059 = !DILocation(line: 179, column: 59, scope: !3056)
!3060 = !DILocation(line: 179, column: 13, scope: !3057)
!3061 = !DILocation(line: 182, column: 38, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3056, file: !2525, line: 179, column: 79)
!3063 = !DILocation(line: 182, column: 13, scope: !3062)
!3064 = !DILocation(line: 184, column: 59, scope: !3062)
!3065 = !DILocation(line: 186, column: 9, scope: !3062)
!3066 = !DILocation(line: 188, column: 68, scope: !3057)
!3067 = !DILocation(line: 188, column: 50, scope: !3057)
!3068 = !DILocation(line: 188, column: 18, scope: !3057)
!3069 = !DILocation(line: 0, scope: !3044)
!3070 = !DILocation(line: 193, column: 5, scope: !3032)
!3071 = !DILocation(line: 194, column: 1, scope: !3032)
!3072 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !2525, file: !2525, line: 196, type: !3073, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !3075)
!3073 = !DISubroutineType(types: !3074)
!3074 = !{!2972, !61, !61, !1036}
!3075 = !{!3076, !3077, !3078}
!3076 = !DILocalVariable(name: "start_count", arg: 1, scope: !3072, file: !2525, line: 196, type: !61)
!3077 = !DILocalVariable(name: "end_count", arg: 2, scope: !3072, file: !2525, line: 196, type: !61)
!3078 = !DILocalVariable(name: "duration_count", arg: 3, scope: !3072, file: !2525, line: 196, type: !1036)
!3079 = !DILocation(line: 0, scope: !3072)
!3080 = !DILocation(line: 198, column: 24, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3072, file: !2525, line: 198, column: 9)
!3082 = !DILocation(line: 198, column: 9, scope: !3072)
!3083 = !DILocation(line: 0, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3072, file: !2525, line: 202, column: 9)
!3085 = !DILocation(line: 208, column: 5, scope: !3072)
!3086 = !DILocation(line: 209, column: 1, scope: !3072)
!3087 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !2525, file: !2525, line: 211, type: !3088, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !3091)
!3088 = !DISubroutineType(types: !3089)
!3089 = !{!2972, !2973, !3090}
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!3091 = !{!3092, !3093}
!3092 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3087, file: !2525, line: 211, type: !2973)
!3093 = !DILocalVariable(name: "running_status", arg: 2, scope: !3087, file: !2525, line: 211, type: !3090)
!3094 = !DILocation(line: 0, scope: !3087)
!3095 = !DILocation(line: 213, column: 18, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3087, file: !2525, line: 213, column: 9)
!3097 = !DILocation(line: 213, column: 9, scope: !3087)
!3098 = !DILocation(line: 217, column: 47, scope: !3087)
!3099 = !DILocation(line: 217, column: 21, scope: !3087)
!3100 = !DILocation(line: 219, column: 5, scope: !3087)
!3101 = !DILocation(line: 220, column: 1, scope: !3087)
!3102 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !2525, file: !2525, line: 222, type: !3103, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !3105)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{!2972, !2973, !307, !88}
!3105 = !{!3106, !3107, !3108}
!3106 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3102, file: !2525, line: 222, type: !2973)
!3107 = !DILocalVariable(name: "callback", arg: 2, scope: !3102, file: !2525, line: 223, type: !307)
!3108 = !DILocalVariable(name: "user_data", arg: 3, scope: !3102, file: !2525, line: 224, type: !88)
!3109 = !DILocation(line: 0, scope: !3102)
!3110 = !DILocation(line: 227, column: 9, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3102, file: !2525, line: 227, column: 9)
!3112 = !DILocation(line: 227, column: 9, scope: !3102)
!3113 = !DILocation(line: 231, column: 34, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3102, file: !2525, line: 231, column: 9)
!3115 = !DILocation(line: 231, column: 49, scope: !3114)
!3116 = !DILocation(line: 231, column: 69, scope: !3114)
!3117 = !DILocation(line: 232, column: 38, scope: !3114)
!3118 = !DILocation(line: 232, column: 53, scope: !3114)
!3119 = !DILocation(line: 231, column: 9, scope: !3102)
!3120 = !DILocation(line: 237, column: 18, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3102, file: !2525, line: 237, column: 9)
!3122 = !DILocation(line: 237, column: 9, scope: !3102)
!3123 = !DILocation(line: 245, column: 46, scope: !3102)
!3124 = !DILocation(line: 245, column: 56, scope: !3102)
!3125 = !DILocation(line: 246, column: 46, scope: !3102)
!3126 = !DILocation(line: 246, column: 56, scope: !3102)
!3127 = !DILocation(line: 248, column: 5, scope: !3102)
!3128 = !DILocation(line: 250, column: 5, scope: !3102)
!3129 = !DILocation(line: 252, column: 1, scope: !3102)
!3130 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !2525, file: !2525, line: 256, type: !3131, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !3134)
!3131 = !DISubroutineType(types: !3132)
!3132 = !{!2972, !2973, !61, !3133}
!3133 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !255, line: 383, baseType: !254)
!3134 = !{!3135, !3136, !3137, !3138}
!3135 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3130, file: !2525, line: 256, type: !2973)
!3136 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3130, file: !2525, line: 256, type: !61)
!3137 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3130, file: !2525, line: 256, type: !3133)
!3138 = !DILocalVariable(name: "mask", scope: !3130, file: !2525, line: 259, type: !60)
!3139 = !DILocation(line: 0, scope: !3130)
!3140 = !DILocation(line: 259, column: 5, scope: !3130)
!3141 = !DILocation(line: 259, column: 23, scope: !3130)
!3142 = !DILocation(line: 261, column: 9, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !3130, file: !2525, line: 261, column: 9)
!3144 = !DILocation(line: 261, column: 9, scope: !3130)
!3145 = !DILocation(line: 265, column: 34, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3130, file: !2525, line: 265, column: 9)
!3147 = !DILocation(line: 265, column: 49, scope: !3146)
!3148 = !DILocation(line: 266, column: 13, scope: !3146)
!3149 = !DILocation(line: 266, column: 41, scope: !3146)
!3150 = !DILocation(line: 266, column: 56, scope: !3146)
!3151 = !DILocation(line: 265, column: 9, scope: !3130)
!3152 = !DILocation(line: 271, column: 25, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3130, file: !2525, line: 271, column: 9)
!3154 = !DILocation(line: 271, column: 9, scope: !3130)
!3155 = !DILocation(line: 282, column: 12, scope: !3130)
!3156 = !DILocation(line: 282, column: 10, scope: !3130)
!3157 = !DILocation(line: 284, column: 5, scope: !3130)
!3158 = !DILocation(line: 286, column: 5, scope: !3130)
!3159 = !DILocation(line: 286, column: 23, scope: !3130)
!3160 = !DILocation(line: 286, column: 34, scope: !3130)
!3161 = !DILocation(line: 287, column: 5, scope: !3130)
!3162 = !DILocation(line: 287, column: 23, scope: !3130)
!3163 = !DILocation(line: 287, column: 34, scope: !3130)
!3164 = !DILocation(line: 290, column: 5, scope: !3130)
!3165 = !DILocation(line: 290, column: 23, scope: !3130)
!3166 = !DILocation(line: 290, column: 37, scope: !3130)
!3167 = !DILocation(line: 291, column: 39, scope: !3130)
!3168 = !DILocation(line: 291, column: 5, scope: !3130)
!3169 = !DILocation(line: 291, column: 23, scope: !3130)
!3170 = !DILocation(line: 291, column: 37, scope: !3130)
!3171 = !DILocation(line: 292, column: 5, scope: !3130)
!3172 = !DILocation(line: 292, column: 23, scope: !3130)
!3173 = !DILocation(line: 292, column: 37, scope: !3130)
!3174 = !DILocation(line: 297, column: 47, scope: !3130)
!3175 = !DILocation(line: 298, column: 33, scope: !3130)
!3176 = !DILocation(line: 296, column: 5, scope: !3130)
!3177 = !DILocation(line: 296, column: 23, scope: !3130)
!3178 = !DILocation(line: 296, column: 31, scope: !3130)
!3179 = !DILocation(line: 300, column: 5, scope: !3130)
!3180 = !DILocation(line: 300, column: 29, scope: !3130)
!3181 = distinct !{!3181, !3179, !3182}
!3182 = !DILocation(line: 300, column: 39, scope: !3130)
!3183 = !DILocation(line: 301, column: 23, scope: !3130)
!3184 = !DILocation(line: 301, column: 33, scope: !3130)
!3185 = !DILocation(line: 302, column: 5, scope: !3130)
!3186 = !DILocation(line: 302, column: 23, scope: !3130)
!3187 = !DILocation(line: 302, column: 34, scope: !3130)
!3188 = !DILocation(line: 303, column: 44, scope: !3130)
!3189 = !DILocation(line: 305, column: 28, scope: !3130)
!3190 = !DILocation(line: 305, column: 5, scope: !3130)
!3191 = !DILocation(line: 306, column: 5, scope: !3130)
!3192 = !DILocation(line: 307, column: 1, scope: !3130)
!3193 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !2525, file: !2525, line: 310, type: !3194, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !3196)
!3194 = !DISubroutineType(types: !3195)
!3195 = !{!2972, !61}
!3196 = !{!3197}
!3197 = !DILocalVariable(name: "ms", arg: 1, scope: !3193, file: !2525, line: 310, type: !61)
!3198 = !DILocation(line: 0, scope: !3193)
!3199 = !DILocation(line: 313, column: 40, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3193, file: !2525, line: 313, column: 9)
!3201 = !DILocation(line: 313, column: 55, scope: !3200)
!3202 = !DILocation(line: 313, column: 9, scope: !3193)
!3203 = !DILocation(line: 316, column: 34, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3200, file: !2525, line: 313, column: 75)
!3205 = !DILocation(line: 316, column: 9, scope: !3204)
!3206 = !DILocation(line: 317, column: 55, scope: !3204)
!3207 = !DILocation(line: 318, column: 5, scope: !3204)
!3208 = !DILocation(line: 320, column: 20, scope: !3193)
!3209 = !DILocation(line: 320, column: 45, scope: !3193)
!3210 = !DILocation(line: 320, column: 5, scope: !3193)
!3211 = !DILocation(line: 322, column: 5, scope: !3193)
!3212 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !2525, file: !2525, line: 327, type: !3131, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !3213)
!3213 = !{!3214, !3215, !3216, !3217}
!3214 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3212, file: !2525, line: 327, type: !2973)
!3215 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !3212, file: !2525, line: 327, type: !61)
!3216 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3212, file: !2525, line: 327, type: !3133)
!3217 = !DILocalVariable(name: "mask", scope: !3212, file: !2525, line: 329, type: !60)
!3218 = !DILocation(line: 0, scope: !3212)
!3219 = !DILocation(line: 329, column: 5, scope: !3212)
!3220 = !DILocation(line: 329, column: 23, scope: !3212)
!3221 = !DILocation(line: 331, column: 9, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3212, file: !2525, line: 331, column: 9)
!3223 = !DILocation(line: 331, column: 9, scope: !3212)
!3224 = !DILocation(line: 336, column: 34, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3212, file: !2525, line: 336, column: 9)
!3226 = !DILocation(line: 336, column: 49, scope: !3225)
!3227 = !DILocation(line: 337, column: 13, scope: !3225)
!3228 = !DILocation(line: 337, column: 41, scope: !3225)
!3229 = !DILocation(line: 337, column: 56, scope: !3225)
!3230 = !DILocation(line: 336, column: 9, scope: !3212)
!3231 = !DILocation(line: 349, column: 29, scope: !3212)
!3232 = !DILocation(line: 349, column: 49, scope: !3212)
!3233 = !DILocation(line: 351, column: 12, scope: !3212)
!3234 = !DILocation(line: 351, column: 10, scope: !3212)
!3235 = !DILocation(line: 353, column: 5, scope: !3212)
!3236 = !DILocation(line: 355, column: 5, scope: !3212)
!3237 = !DILocation(line: 355, column: 23, scope: !3212)
!3238 = !DILocation(line: 355, column: 34, scope: !3212)
!3239 = !DILocation(line: 356, column: 5, scope: !3212)
!3240 = !DILocation(line: 356, column: 23, scope: !3212)
!3241 = !DILocation(line: 356, column: 34, scope: !3212)
!3242 = !DILocation(line: 359, column: 5, scope: !3212)
!3243 = !DILocation(line: 359, column: 23, scope: !3212)
!3244 = !DILocation(line: 359, column: 37, scope: !3212)
!3245 = !DILocation(line: 360, column: 39, scope: !3212)
!3246 = !DILocation(line: 360, column: 5, scope: !3212)
!3247 = !DILocation(line: 360, column: 23, scope: !3212)
!3248 = !DILocation(line: 360, column: 37, scope: !3212)
!3249 = !DILocation(line: 361, column: 5, scope: !3212)
!3250 = !DILocation(line: 361, column: 23, scope: !3212)
!3251 = !DILocation(line: 361, column: 37, scope: !3212)
!3252 = !DILocation(line: 366, column: 47, scope: !3212)
!3253 = !DILocation(line: 367, column: 33, scope: !3212)
!3254 = !DILocation(line: 365, column: 5, scope: !3212)
!3255 = !DILocation(line: 365, column: 23, scope: !3212)
!3256 = !DILocation(line: 365, column: 31, scope: !3212)
!3257 = !DILocation(line: 369, column: 5, scope: !3212)
!3258 = !DILocation(line: 369, column: 29, scope: !3212)
!3259 = distinct !{!3259, !3257, !3260}
!3260 = !DILocation(line: 369, column: 39, scope: !3212)
!3261 = !DILocation(line: 370, column: 23, scope: !3212)
!3262 = !DILocation(line: 370, column: 33, scope: !3212)
!3263 = !DILocation(line: 371, column: 5, scope: !3212)
!3264 = !DILocation(line: 371, column: 23, scope: !3212)
!3265 = !DILocation(line: 371, column: 34, scope: !3212)
!3266 = !DILocation(line: 373, column: 28, scope: !3212)
!3267 = !DILocation(line: 373, column: 5, scope: !3212)
!3268 = !DILocation(line: 375, column: 44, scope: !3212)
!3269 = !DILocation(line: 377, column: 5, scope: !3212)
!3270 = !DILocation(line: 378, column: 1, scope: !3212)
!3271 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !2525, file: !2525, line: 382, type: !3194, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !3272)
!3272 = !{!3273}
!3273 = !DILocalVariable(name: "us", arg: 1, scope: !3271, file: !2525, line: 382, type: !61)
!3274 = !DILocation(line: 0, scope: !3271)
!3275 = !DILocation(line: 385, column: 40, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3271, file: !2525, line: 385, column: 9)
!3277 = !DILocation(line: 385, column: 55, scope: !3276)
!3278 = !DILocation(line: 385, column: 9, scope: !3271)
!3279 = !DILocation(line: 388, column: 34, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3276, file: !2525, line: 385, column: 75)
!3281 = !DILocation(line: 388, column: 9, scope: !3280)
!3282 = !DILocation(line: 390, column: 55, scope: !3280)
!3283 = !DILocation(line: 391, column: 5, scope: !3280)
!3284 = !DILocation(line: 392, column: 20, scope: !3271)
!3285 = !DILocation(line: 392, column: 45, scope: !3271)
!3286 = !DILocation(line: 392, column: 5, scope: !3271)
!3287 = !DILocation(line: 394, column: 5, scope: !3271)
!3288 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !2525, file: !2525, line: 398, type: !2970, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !3289)
!3289 = !{!3290, !3291}
!3290 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3288, file: !2525, line: 398, type: !2973)
!3291 = !DILocalVariable(name: "mask", scope: !3288, file: !2525, line: 400, type: !60)
!3292 = !DILocation(line: 0, scope: !3288)
!3293 = !DILocation(line: 400, column: 5, scope: !3288)
!3294 = !DILocation(line: 400, column: 23, scope: !3288)
!3295 = !DILocation(line: 402, column: 9, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3288, file: !2525, line: 402, column: 9)
!3297 = !DILocation(line: 402, column: 9, scope: !3288)
!3298 = !DILocation(line: 413, column: 12, scope: !3288)
!3299 = !DILocation(line: 413, column: 10, scope: !3288)
!3300 = !DILocation(line: 415, column: 5, scope: !3288)
!3301 = !DILocation(line: 415, column: 23, scope: !3288)
!3302 = !DILocation(line: 415, column: 34, scope: !3288)
!3303 = !DILocation(line: 418, column: 5, scope: !3288)
!3304 = !DILocation(line: 418, column: 23, scope: !3288)
!3305 = !DILocation(line: 418, column: 34, scope: !3288)
!3306 = !DILocation(line: 420, column: 5, scope: !3288)
!3307 = !DILocation(line: 420, column: 23, scope: !3288)
!3308 = !DILocation(line: 420, column: 35, scope: !3288)
!3309 = !DILocation(line: 422, column: 29, scope: !3288)
!3310 = !DILocation(line: 422, column: 44, scope: !3288)
!3311 = !DILocation(line: 423, column: 28, scope: !3288)
!3312 = !DILocation(line: 423, column: 5, scope: !3288)
!3313 = !DILocation(line: 425, column: 33, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3288, file: !2525, line: 425, column: 9)
!3315 = !DILocation(line: 425, column: 9, scope: !3288)
!3316 = !DILocation(line: 427, column: 53, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3314, file: !2525, line: 425, column: 62)
!3318 = !DILocation(line: 428, column: 5, scope: !3317)
!3319 = !DILocation(line: 430, column: 1, scope: !3288)
!3320 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !2525, file: !2525, line: 434, type: !3321, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !3323)
!3321 = !DISubroutineType(types: !3322)
!3322 = !{!2972, !1036}
!3323 = !{!3324, !3325, !3326}
!3324 = !DILocalVariable(name: "handle", arg: 1, scope: !3320, file: !2525, line: 434, type: !1036)
!3325 = !DILocalVariable(name: "timer", scope: !3320, file: !2525, line: 436, type: !61)
!3326 = !DILocalVariable(name: "mask", scope: !3320, file: !2525, line: 437, type: !61)
!3327 = !DILocation(line: 0, scope: !3320)
!3328 = !DILocation(line: 439, column: 24, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3320, file: !2525, line: 439, column: 9)
!3330 = !DILocation(line: 439, column: 41, scope: !3329)
!3331 = !DILocation(line: 439, column: 9, scope: !3320)
!3332 = !DILocation(line: 443, column: 16, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3320, file: !2525, line: 443, column: 9)
!3334 = !DILocation(line: 443, column: 9, scope: !3320)
!3335 = !DILocation(line: 448, column: 12, scope: !3320)
!3336 = !DILocation(line: 450, column: 15, scope: !3320)
!3337 = !DILocation(line: 451, column: 21, scope: !3320)
!3338 = !DILocation(line: 451, column: 13, scope: !3320)
!3339 = !DILocation(line: 452, column: 33, scope: !3320)
!3340 = !DILocation(line: 452, column: 41, scope: !3320)
!3341 = !DILocation(line: 453, column: 36, scope: !3320)
!3342 = !DILocation(line: 455, column: 5, scope: !3320)
!3343 = !DILocation(line: 456, column: 5, scope: !3320)
!3344 = !DILocation(line: 457, column: 1, scope: !3320)
!3345 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !2525, file: !2525, line: 459, type: !3194, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !3346)
!3346 = !{!3347, !3348}
!3347 = !DILocalVariable(name: "handle", arg: 1, scope: !3345, file: !2525, line: 459, type: !61)
!3348 = !DILocalVariable(name: "timer", scope: !3345, file: !2525, line: 461, type: !60)
!3349 = !DILocation(line: 0, scope: !3345)
!3350 = !DILocation(line: 461, column: 5, scope: !3345)
!3351 = !DILocation(line: 461, column: 23, scope: !3345)
!3352 = !DILocation(line: 463, column: 17, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3345, file: !2525, line: 463, column: 9)
!3354 = !DILocation(line: 463, column: 37, scope: !3353)
!3355 = !DILocation(line: 463, column: 9, scope: !3345)
!3356 = !DILocation(line: 467, column: 20, scope: !3345)
!3357 = !DILocation(line: 467, column: 11, scope: !3345)
!3358 = !DILocation(line: 469, column: 24, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3345, file: !2525, line: 469, column: 9)
!3360 = !DILocation(line: 469, column: 41, scope: !3359)
!3361 = !DILocation(line: 469, column: 9, scope: !3345)
!3362 = !DILocation(line: 473, column: 30, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3345, file: !2525, line: 473, column: 9)
!3364 = !DILocation(line: 473, column: 37, scope: !3363)
!3365 = !DILocation(line: 473, column: 9, scope: !3345)
!3366 = !DILocation(line: 477, column: 30, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3345, file: !2525, line: 477, column: 9)
!3368 = !DILocation(line: 477, column: 37, scope: !3367)
!3369 = !DILocation(line: 477, column: 45, scope: !3367)
!3370 = !DILocation(line: 477, column: 9, scope: !3345)
!3371 = !DILocation(line: 481, column: 26, scope: !3345)
!3372 = !DILocation(line: 481, column: 33, scope: !3345)
!3373 = !DILocation(line: 481, column: 41, scope: !3345)
!3374 = !DILocation(line: 482, column: 36, scope: !3345)
!3375 = !DILocation(line: 484, column: 5, scope: !3345)
!3376 = !DILocation(line: 485, column: 1, scope: !3345)
!3377 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !2525, file: !2525, line: 487, type: !3378, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !3380)
!3378 = !DISubroutineType(types: !3379)
!3379 = !{!2972, !61, !61, !307, !88}
!3380 = !{!3381, !3382, !3383, !3384, !3385, !3386, !3387}
!3381 = !DILocalVariable(name: "handle", arg: 1, scope: !3377, file: !2525, line: 487, type: !61)
!3382 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3377, file: !2525, line: 487, type: !61)
!3383 = !DILocalVariable(name: "callback", arg: 3, scope: !3377, file: !2525, line: 487, type: !307)
!3384 = !DILocalVariable(name: "user_data", arg: 4, scope: !3377, file: !2525, line: 487, type: !88)
!3385 = !DILocalVariable(name: "current_time", scope: !3377, file: !2525, line: 489, type: !61)
!3386 = !DILocalVariable(name: "mask", scope: !3377, file: !2525, line: 490, type: !61)
!3387 = !DILocalVariable(name: "timer", scope: !3377, file: !2525, line: 491, type: !61)
!3388 = !DILocation(line: 0, scope: !3377)
!3389 = !DILocation(line: 493, column: 17, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3377, file: !2525, line: 493, column: 9)
!3391 = !DILocation(line: 493, column: 37, scope: !3390)
!3392 = !DILocation(line: 493, column: 9, scope: !3377)
!3393 = !DILocation(line: 497, column: 20, scope: !3377)
!3394 = !DILocation(line: 503, column: 37, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3377, file: !2525, line: 503, column: 9)
!3396 = !DILocation(line: 503, column: 9, scope: !3377)
!3397 = !DILocation(line: 507, column: 37, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3377, file: !2525, line: 507, column: 9)
!3399 = !DILocation(line: 507, column: 45, scope: !3398)
!3400 = !DILocation(line: 507, column: 9, scope: !3377)
!3401 = !DILocation(line: 511, column: 25, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3377, file: !2525, line: 511, column: 9)
!3403 = !DILocation(line: 511, column: 9, scope: !3377)
!3404 = !DILocation(line: 516, column: 12, scope: !3377)
!3405 = !DILocation(line: 519, column: 30, scope: !3377)
!3406 = !DILocation(line: 521, column: 24, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3377, file: !2525, line: 521, column: 9)
!3408 = !DILocation(line: 521, column: 38, scope: !3407)
!3409 = !DILocation(line: 521, column: 9, scope: !3377)
!3410 = !DILocation(line: 522, column: 9, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3407, file: !2525, line: 521, column: 48)
!3412 = !DILocation(line: 523, column: 9, scope: !3411)
!3413 = !DILocation(line: 524, column: 38, scope: !3411)
!3414 = !DILocation(line: 525, column: 5, scope: !3411)
!3415 = !DILocation(line: 526, column: 5, scope: !3377)
!3416 = !DILocation(line: 528, column: 23, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3377, file: !2525, line: 528, column: 8)
!3418 = !DILocation(line: 528, column: 41, scope: !3417)
!3419 = !DILocation(line: 528, column: 8, scope: !3377)
!3420 = !DILocation(line: 529, column: 51, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3417, file: !2525, line: 528, column: 51)
!3422 = !DILocation(line: 529, column: 24, scope: !3421)
!3423 = !DILocation(line: 530, column: 5, scope: !3421)
!3424 = !DILocation(line: 0, scope: !3417)
!3425 = !DILocation(line: 534, column: 34, scope: !3377)
!3426 = !DILocation(line: 535, column: 39, scope: !3377)
!3427 = !DILocation(line: 537, column: 49, scope: !3377)
!3428 = !DILocation(line: 538, column: 80, scope: !3377)
!3429 = !DILocation(line: 538, column: 33, scope: !3377)
!3430 = !DILocation(line: 538, column: 49, scope: !3377)
!3431 = !DILocation(line: 539, column: 50, scope: !3377)
!3432 = !DILocation(line: 539, column: 61, scope: !3377)
!3433 = !DILocation(line: 540, column: 50, scope: !3377)
!3434 = !DILocation(line: 540, column: 61, scope: !3377)
!3435 = !DILocation(line: 542, column: 5, scope: !3377)
!3436 = !DILocation(line: 546, column: 30, scope: !3377)
!3437 = !DILocation(line: 548, column: 5, scope: !3377)
!3438 = !DILocation(line: 550, column: 5, scope: !3377)
!3439 = !DILocation(line: 551, column: 1, scope: !3377)
!3440 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !2525, file: !2525, line: 553, type: !3194, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !3441)
!3441 = !{!3442, !3443, !3444, !3445}
!3442 = !DILocalVariable(name: "handle", arg: 1, scope: !3440, file: !2525, line: 553, type: !61)
!3443 = !DILocalVariable(name: "current_time", scope: !3440, file: !2525, line: 555, type: !61)
!3444 = !DILocalVariable(name: "mask", scope: !3440, file: !2525, line: 556, type: !61)
!3445 = !DILocalVariable(name: "timer", scope: !3440, file: !2525, line: 557, type: !61)
!3446 = !DILocation(line: 0, scope: !3440)
!3447 = !DILocation(line: 559, column: 17, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3440, file: !2525, line: 559, column: 9)
!3449 = !DILocation(line: 559, column: 37, scope: !3448)
!3450 = !DILocation(line: 559, column: 9, scope: !3440)
!3451 = !DILocation(line: 563, column: 20, scope: !3440)
!3452 = !DILocation(line: 565, column: 37, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3440, file: !2525, line: 565, column: 9)
!3454 = !DILocation(line: 565, column: 48, scope: !3453)
!3455 = !DILocation(line: 565, column: 9, scope: !3440)
!3456 = !DILocation(line: 569, column: 37, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3440, file: !2525, line: 569, column: 9)
!3458 = !DILocation(line: 569, column: 45, scope: !3457)
!3459 = !DILocation(line: 569, column: 9, scope: !3440)
!3460 = !DILocation(line: 574, column: 12, scope: !3440)
!3461 = !DILocation(line: 577, column: 30, scope: !3440)
!3462 = !DILocation(line: 578, column: 5, scope: !3440)
!3463 = !DILocation(line: 579, column: 30, scope: !3440)
!3464 = !DILocation(line: 581, column: 23, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3440, file: !2525, line: 581, column: 8)
!3466 = !DILocation(line: 581, column: 41, scope: !3465)
!3467 = !DILocation(line: 581, column: 8, scope: !3440)
!3468 = !DILocation(line: 582, column: 51, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3465, file: !2525, line: 581, column: 51)
!3470 = !DILocation(line: 582, column: 24, scope: !3469)
!3471 = !DILocation(line: 583, column: 5, scope: !3469)
!3472 = !DILocation(line: 0, scope: !3465)
!3473 = !DILocation(line: 587, column: 34, scope: !3440)
!3474 = !DILocation(line: 588, column: 39, scope: !3440)
!3475 = !DILocation(line: 590, column: 44, scope: !3440)
!3476 = !DILocation(line: 592, column: 24, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3440, file: !2525, line: 592, column: 9)
!3478 = !DILocation(line: 592, column: 44, scope: !3477)
!3479 = !DILocation(line: 592, column: 9, scope: !3440)
!3480 = !DILocation(line: 593, column: 9, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3477, file: !2525, line: 592, column: 50)
!3482 = !DILocation(line: 594, column: 5, scope: !3481)
!3483 = !DILocation(line: 598, column: 30, scope: !3440)
!3484 = !DILocation(line: 599, column: 5, scope: !3440)
!3485 = !DILocation(line: 601, column: 5, scope: !3440)
!3486 = !DILocation(line: 603, column: 1, scope: !3440)
!3487 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !2525, file: !2525, line: 605, type: !3488, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !3490)
!3488 = !DISubroutineType(types: !3489)
!3489 = !{!2972, !61, !1036}
!3490 = !{!3491, !3492, !3493, !3494, !3495}
!3491 = !DILocalVariable(name: "handle", arg: 1, scope: !3487, file: !2525, line: 605, type: !61)
!3492 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !3487, file: !2525, line: 605, type: !1036)
!3493 = !DILocalVariable(name: "current_time", scope: !3487, file: !2525, line: 607, type: !61)
!3494 = !DILocalVariable(name: "mask", scope: !3487, file: !2525, line: 608, type: !61)
!3495 = !DILocalVariable(name: "timer", scope: !3487, file: !2525, line: 609, type: !61)
!3496 = !DILocation(line: 0, scope: !3487)
!3497 = !DILocation(line: 611, column: 17, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3487, file: !2525, line: 611, column: 9)
!3499 = !DILocation(line: 611, column: 37, scope: !3498)
!3500 = !DILocation(line: 611, column: 9, scope: !3487)
!3501 = !DILocation(line: 615, column: 20, scope: !3487)
!3502 = !DILocation(line: 617, column: 37, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3487, file: !2525, line: 617, column: 9)
!3504 = !DILocation(line: 617, column: 45, scope: !3503)
!3505 = !DILocation(line: 617, column: 9, scope: !3487)
!3506 = !DILocation(line: 622, column: 12, scope: !3487)
!3507 = !DILocation(line: 624, column: 35, scope: !3487)
!3508 = !DILocation(line: 624, column: 51, scope: !3487)
!3509 = !DILocation(line: 624, column: 76, scope: !3487)
!3510 = !DILocation(line: 624, column: 49, scope: !3487)
!3511 = !DILocation(line: 626, column: 37, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3487, file: !2525, line: 626, column: 9)
!3513 = !DILocation(line: 626, column: 9, scope: !3487)
!3514 = !DILocation(line: 0, scope: !3512)
!3515 = !DILocation(line: 632, column: 5, scope: !3487)
!3516 = !DILocation(line: 634, column: 5, scope: !3487)
!3517 = !DILocation(line: 636, column: 1, scope: !3487)
!3518 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !95, file: !95, line: 56, type: !3519, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3521)
!3519 = !DISubroutineType(types: !3520)
!3520 = !{!61, !61, !61, !61}
!3521 = !{!3522, !3523, !3524, !3525, !3527, !3528}
!3522 = !DILocalVariable(name: "mul1", arg: 1, scope: !3518, file: !95, line: 56, type: !61)
!3523 = !DILocalVariable(name: "mul2", arg: 2, scope: !3518, file: !95, line: 56, type: !61)
!3524 = !DILocalVariable(name: "div", arg: 3, scope: !3518, file: !95, line: 56, type: !61)
!3525 = !DILocalVariable(name: "data1", scope: !3518, file: !95, line: 58, type: !3526)
!3526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 64, elements: !500)
!3527 = !DILocalVariable(name: "data2", scope: !3518, file: !95, line: 59, type: !3526)
!3528 = !DILocalVariable(name: "result", scope: !3518, file: !95, line: 60, type: !3526)
!3529 = !DILocation(line: 0, scope: !3518)
!3530 = !DILocation(line: 63, column: 22, scope: !3518)
!3531 = !DILocation(line: 63, column: 32, scope: !3518)
!3532 = !DILocation(line: 64, column: 23, scope: !3518)
!3533 = !DILocation(line: 64, column: 40, scope: !3518)
!3534 = !DILocation(line: 66, column: 27, scope: !3518)
!3535 = !DILocation(line: 67, column: 27, scope: !3518)
!3536 = !DILocation(line: 67, column: 44, scope: !3518)
!3537 = !DILocation(line: 69, column: 26, scope: !3518)
!3538 = !DILocation(line: 70, column: 36, scope: !3518)
!3539 = !DILocation(line: 70, column: 43, scope: !3518)
!3540 = !DILocation(line: 70, column: 55, scope: !3518)
!3541 = !DILocation(line: 72, column: 34, scope: !3518)
!3542 = !DILocation(line: 72, column: 41, scope: !3518)
!3543 = !DILocation(line: 72, column: 5, scope: !3518)
!3544 = distinct !DISubprogram(name: "gpt_current_count", scope: !95, file: !95, line: 75, type: !3545, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3547)
!3545 = !DISubroutineType(types: !3546)
!3546 = !{!61, !264}
!3547 = !{!3548}
!3548 = !DILocalVariable(name: "gpt", arg: 1, scope: !3544, file: !95, line: 75, type: !264)
!3549 = !DILocation(line: 0, scope: !3544)
!3550 = !DILocation(line: 77, column: 17, scope: !3544)
!3551 = !DILocation(line: 77, column: 5, scope: !3544)
!3552 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !95, file: !95, line: 81, type: !3553, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3555)
!3553 = !DISubroutineType(types: !3554)
!3554 = !{!61, !61}
!3555 = !{!3556}
!3556 = !DILocalVariable(name: "ms", arg: 1, scope: !3552, file: !95, line: 81, type: !61)
!3557 = !DILocation(line: 0, scope: !3552)
!3558 = !DILocation(line: 83, column: 27, scope: !3552)
!3559 = !DILocation(line: 83, column: 37, scope: !3552)
!3560 = !DILocation(line: 83, column: 43, scope: !3552)
!3561 = !DILocation(line: 83, column: 32, scope: !3552)
!3562 = !DILocation(line: 83, column: 53, scope: !3552)
!3563 = !DILocation(line: 83, column: 59, scope: !3552)
!3564 = !DILocation(line: 83, column: 48, scope: !3552)
!3565 = !DILocation(line: 83, column: 70, scope: !3552)
!3566 = !DILocation(line: 83, column: 76, scope: !3552)
!3567 = !DILocation(line: 83, column: 65, scope: !3552)
!3568 = !DILocation(line: 83, column: 5, scope: !3552)
!3569 = !DILocation(line: 90, column: 9, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !290, file: !95, line: 90, column: 9)
!3571 = !DILocation(line: 90, column: 9, scope: !290)
!3572 = !DILocation(line: 91, column: 13, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !95, line: 91, column: 13)
!3574 = distinct !DILexicalBlock(scope: !3570, file: !95, line: 90, column: 24)
!3575 = !DILocation(line: 91, column: 13, scope: !3574)
!3576 = !DILocation(line: 92, column: 32, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3573, file: !95, line: 91, column: 41)
!3578 = !DILocation(line: 92, column: 30, scope: !3577)
!3579 = !DILocation(line: 93, column: 41, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3577, file: !95, line: 93, column: 17)
!3581 = !DILocation(line: 0, scope: !3573)
!3582 = !DILocation(line: 105, column: 1, scope: !290)
!3583 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !95, file: !95, line: 107, type: !291, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3584 = !DILocation(line: 109, column: 9, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3583, file: !95, line: 109, column: 9)
!3586 = !DILocation(line: 109, column: 9, scope: !3583)
!3587 = !DILocation(line: 110, column: 9, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3585, file: !95, line: 109, column: 61)
!3589 = !DILocation(line: 111, column: 5, scope: !3588)
!3590 = !DILocation(line: 112, column: 1, scope: !3583)
!3591 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !95, file: !95, line: 114, type: !3553, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3592)
!3592 = !{!3593}
!3593 = !DILocalVariable(name: "time_us", arg: 1, scope: !3591, file: !95, line: 114, type: !61)
!3594 = !DILocation(line: 0, scope: !3591)
!3595 = !DILocation(line: 116, column: 5, scope: !3591)
!3596 = !DILocation(line: 118, column: 9, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3591, file: !95, line: 118, column: 9)
!3598 = !DILocation(line: 118, column: 9, scope: !3591)
!3599 = !DILocation(line: 120, column: 49, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3597, file: !95, line: 118, column: 37)
!3601 = !DILocation(line: 120, column: 16, scope: !3600)
!3602 = !DILocation(line: 120, column: 9, scope: !3600)
!3603 = !DILocation(line: 0, scope: !3597)
!3604 = !DILocation(line: 125, column: 1, scope: !3591)
!3605 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !95, file: !95, line: 127, type: !3553, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3606)
!3606 = !{!3607}
!3607 = !DILocalVariable(name: "count", arg: 1, scope: !3605, file: !95, line: 127, type: !61)
!3608 = !DILocation(line: 0, scope: !3605)
!3609 = !DILocation(line: 129, column: 5, scope: !3605)
!3610 = !DILocation(line: 131, column: 9, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3605, file: !95, line: 131, column: 9)
!3612 = !DILocation(line: 131, column: 9, scope: !3605)
!3613 = !DILocation(line: 133, column: 69, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3611, file: !95, line: 131, column: 37)
!3615 = !DILocation(line: 133, column: 16, scope: !3614)
!3616 = !DILocation(line: 133, column: 9, scope: !3614)
!3617 = !DILocation(line: 0, scope: !3611)
!3618 = !DILocation(line: 138, column: 1, scope: !3605)
!3619 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !95, file: !95, line: 141, type: !3620, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3622)
!3620 = !DISubroutineType(types: !3621)
!3621 = !{null, !264, !61, !61}
!3622 = !{!3623, !3624, !3625}
!3623 = !DILocalVariable(name: "gpt", arg: 1, scope: !3619, file: !95, line: 141, type: !264)
!3624 = !DILocalVariable(name: "clock_source", arg: 2, scope: !3619, file: !95, line: 141, type: !61)
!3625 = !DILocalVariable(name: "divide", arg: 3, scope: !3619, file: !95, line: 141, type: !61)
!3626 = !DILocation(line: 0, scope: !3619)
!3627 = !DILocation(line: 143, column: 5, scope: !3619)
!3628 = !DILocation(line: 145, column: 33, scope: !3619)
!3629 = !DILocation(line: 145, column: 10, scope: !3619)
!3630 = !DILocation(line: 145, column: 18, scope: !3619)
!3631 = !DILocation(line: 148, column: 10, scope: !3619)
!3632 = !DILocation(line: 148, column: 18, scope: !3619)
!3633 = !DILocation(line: 149, column: 1, scope: !3619)
!3634 = distinct !DISubprogram(name: "gpt_delay_time", scope: !95, file: !95, line: 151, type: !3635, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3637)
!3635 = !DISubroutineType(types: !3636)
!3636 = !{null, !264, !807}
!3637 = !{!3638, !3639, !3640, !3641}
!3638 = !DILocalVariable(name: "gpt", arg: 1, scope: !3634, file: !95, line: 151, type: !264)
!3639 = !DILocalVariable(name: "count", arg: 2, scope: !3634, file: !95, line: 151, type: !807)
!3640 = !DILocalVariable(name: "end_count", scope: !3634, file: !95, line: 153, type: !61)
!3641 = !DILocalVariable(name: "current", scope: !3634, file: !95, line: 153, type: !61)
!3642 = !DILocation(line: 0, scope: !3634)
!3643 = !DILocation(line: 155, column: 17, scope: !3634)
!3644 = !DILocation(line: 156, column: 25, scope: !3634)
!3645 = !DILocation(line: 156, column: 33, scope: !3634)
!3646 = !DILocation(line: 159, column: 19, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3634, file: !95, line: 159, column: 9)
!3648 = !DILocation(line: 159, column: 9, scope: !3634)
!3649 = !DILocation(line: 160, column: 16, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3647, file: !95, line: 159, column: 30)
!3651 = !DILocation(line: 160, column: 39, scope: !3650)
!3652 = !DILocation(line: 160, column: 9, scope: !3650)
!3653 = distinct !{!3653, !3652, !3654}
!3654 = !DILocation(line: 160, column: 51, scope: !3650)
!3655 = !DILocation(line: 162, column: 16, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3647, file: !95, line: 161, column: 12)
!3657 = !DILocation(line: 162, column: 39, scope: !3656)
!3658 = !DILocation(line: 162, column: 9, scope: !3656)
!3659 = distinct !{!3659, !3658, !3660}
!3660 = !DILocation(line: 162, column: 50, scope: !3656)
!3661 = !DILocation(line: 163, column: 16, scope: !3656)
!3662 = !DILocation(line: 163, column: 39, scope: !3656)
!3663 = !DILocation(line: 163, column: 9, scope: !3656)
!3664 = distinct !{!3664, !3663, !3665}
!3665 = !DILocation(line: 163, column: 51, scope: !3656)
!3666 = !DILocation(line: 165, column: 1, scope: !3634)
!3667 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !95, file: !95, line: 166, type: !3668, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3670)
!3668 = !DISubroutineType(types: !3669)
!3669 = !{null, !264}
!3670 = !{!3671}
!3671 = !DILocalVariable(name: "gpt", arg: 1, scope: !3667, file: !95, line: 166, type: !264)
!3672 = !DILocation(line: 0, scope: !3667)
!3673 = !DILocation(line: 168, column: 10, scope: !3667)
!3674 = !DILocation(line: 168, column: 22, scope: !3667)
!3675 = !DILocation(line: 169, column: 10, scope: !3667)
!3676 = !DILocation(line: 169, column: 22, scope: !3667)
!3677 = !DILocation(line: 170, column: 21, scope: !3667)
!3678 = !DILocation(line: 171, column: 5, scope: !3667)
!3679 = !DILocation(line: 171, column: 16, scope: !3667)
!3680 = distinct !{!3680, !3678, !3681}
!3681 = !DILocation(line: 171, column: 26, scope: !3667)
!3682 = !DILocation(line: 172, column: 10, scope: !3667)
!3683 = !DILocation(line: 172, column: 22, scope: !3667)
!3684 = !DILocation(line: 173, column: 10, scope: !3667)
!3685 = !DILocation(line: 173, column: 22, scope: !3667)
!3686 = !DILocation(line: 174, column: 10, scope: !3667)
!3687 = !DILocation(line: 174, column: 22, scope: !3667)
!3688 = !DILocation(line: 176, column: 13, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3667, file: !95, line: 176, column: 9)
!3690 = !DILocation(line: 176, column: 9, scope: !3667)
!3691 = !DILocation(line: 177, column: 27, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3689, file: !95, line: 176, column: 22)
!3693 = !DILocation(line: 178, column: 5, scope: !3692)
!3694 = !DILocation(line: 179, column: 1, scope: !3667)
!3695 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !95, file: !95, line: 181, type: !3545, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3696)
!3696 = !{!3697, !3698}
!3697 = !DILocalVariable(name: "gpt", arg: 1, scope: !3695, file: !95, line: 181, type: !264)
!3698 = !DILocalVariable(name: "mask", scope: !3695, file: !95, line: 183, type: !60)
!3699 = !DILocation(line: 0, scope: !3695)
!3700 = !DILocation(line: 183, column: 5, scope: !3695)
!3701 = !DILocation(line: 183, column: 23, scope: !3695)
!3702 = !DILocation(line: 185, column: 17, scope: !3695)
!3703 = !DILocation(line: 185, column: 10, scope: !3695)
!3704 = !DILocation(line: 187, column: 22, scope: !3695)
!3705 = !DILocation(line: 189, column: 12, scope: !3695)
!3706 = !DILocation(line: 190, column: 1, scope: !3695)
!3707 = !DILocation(line: 189, column: 5, scope: !3695)
!3708 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !95, file: !95, line: 192, type: !3709, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3711)
!3709 = !DISubroutineType(types: !3710)
!3710 = !{null, !264, !61}
!3711 = !{!3712, !3713}
!3712 = !DILocalVariable(name: "gpt", arg: 1, scope: !3708, file: !95, line: 192, type: !264)
!3713 = !DILocalVariable(name: "mask", arg: 2, scope: !3708, file: !95, line: 192, type: !61)
!3714 = !DILocation(line: 0, scope: !3708)
!3715 = !DILocation(line: 194, column: 10, scope: !3708)
!3716 = !DILocation(line: 194, column: 21, scope: !3708)
!3717 = !DILocation(line: 195, column: 1, scope: !3708)
!3718 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !95, file: !95, line: 197, type: !986, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3719)
!3719 = !{!3720, !3721, !3722, !3723, !3724}
!3720 = !DILocalVariable(name: "irq_number", arg: 1, scope: !3718, file: !95, line: 197, type: !897)
!3721 = !DILocalVariable(name: "i", scope: !3718, file: !95, line: 199, type: !61)
!3722 = !DILocalVariable(name: "mask", scope: !3718, file: !95, line: 200, type: !60)
!3723 = !DILocalVariable(name: "state", scope: !3718, file: !95, line: 201, type: !60)
!3724 = !DILocalVariable(name: "enable", scope: !3718, file: !95, line: 202, type: !60)
!3725 = !DILocation(line: 0, scope: !3718)
!3726 = !DILocation(line: 200, column: 5, scope: !3718)
!3727 = !DILocation(line: 200, column: 23, scope: !3718)
!3728 = !DILocation(line: 201, column: 5, scope: !3718)
!3729 = !DILocation(line: 201, column: 23, scope: !3718)
!3730 = !DILocation(line: 202, column: 5, scope: !3718)
!3731 = !DILocation(line: 202, column: 23, scope: !3718)
!3732 = !DILocation(line: 207, column: 5, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3718, file: !95, line: 207, column: 5)
!3734 = !DILocation(line: 209, column: 18, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3736, file: !95, line: 207, column: 44)
!3736 = distinct !DILexicalBlock(scope: !3733, file: !95, line: 207, column: 5)
!3737 = !DILocation(line: 209, column: 29, scope: !3735)
!3738 = !DILocation(line: 209, column: 16, scope: !3735)
!3739 = !DILocation(line: 210, column: 29, scope: !3735)
!3740 = !DILocation(line: 210, column: 16, scope: !3735)
!3741 = !DILocation(line: 212, column: 16, scope: !3735)
!3742 = !DILocation(line: 212, column: 14, scope: !3735)
!3743 = !DILocation(line: 214, column: 9, scope: !3735)
!3744 = !DILocation(line: 214, column: 20, scope: !3735)
!3745 = !DILocation(line: 214, column: 32, scope: !3735)
!3746 = !DILocation(line: 216, column: 14, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3735, file: !95, line: 216, column: 13)
!3748 = !DILocation(line: 216, column: 20, scope: !3747)
!3749 = !DILocation(line: 216, column: 40, scope: !3747)
!3750 = !DILocation(line: 216, column: 44, scope: !3747)
!3751 = !DILocation(line: 216, column: 51, scope: !3747)
!3752 = !DILocation(line: 216, column: 13, scope: !3735)
!3753 = !DILocation(line: 224, column: 51, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3755, file: !95, line: 224, column: 17)
!3755 = distinct !DILexicalBlock(scope: !3747, file: !95, line: 216, column: 70)
!3756 = !DILocation(line: 224, column: 60, scope: !3754)
!3757 = !DILocation(line: 224, column: 17, scope: !3755)
!3758 = !DILocation(line: 225, column: 94, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3754, file: !95, line: 224, column: 69)
!3760 = !DILocation(line: 225, column: 17, scope: !3759)
!3761 = !DILocation(line: 226, column: 13, scope: !3759)
!3762 = !DILocation(line: 229, column: 31, scope: !3735)
!3763 = !DILocation(line: 229, column: 42, scope: !3735)
!3764 = !DILocation(line: 229, column: 9, scope: !3735)
!3765 = !DILocation(line: 207, column: 40, scope: !3736)
!3766 = !DILocation(line: 207, column: 19, scope: !3736)
!3767 = distinct !{!3767, !3732, !3768}
!3768 = !DILocation(line: 231, column: 5, scope: !3733)
!3769 = !DILocation(line: 233, column: 1, scope: !3718)
!3770 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !95, file: !95, line: 236, type: !291, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3771 = !DILocation(line: 238, column: 5, scope: !3770)
!3772 = !DILocation(line: 239, column: 5, scope: !3770)
!3773 = !DILocation(line: 240, column: 5, scope: !3770)
!3774 = !DILocation(line: 241, column: 1, scope: !3770)
!3775 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !95, file: !95, line: 242, type: !3545, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3776)
!3776 = !{!3777, !3778, !3779, !3780, !3781}
!3777 = !DILocalVariable(name: "gpt", arg: 1, scope: !3775, file: !95, line: 242, type: !264)
!3778 = !DILocalVariable(name: "time", scope: !3775, file: !95, line: 244, type: !60)
!3779 = !DILocalVariable(name: "count", scope: !3775, file: !95, line: 245, type: !61)
!3780 = !DILocalVariable(name: "time_s", scope: !3775, file: !95, line: 245, type: !61)
!3781 = !DILocalVariable(name: "time_ms", scope: !3775, file: !95, line: 245, type: !61)
!3782 = !DILocation(line: 0, scope: !3775)
!3783 = !DILocation(line: 244, column: 5, scope: !3775)
!3784 = !DILocation(line: 244, column: 23, scope: !3775)
!3785 = !DILocation(line: 247, column: 13, scope: !3775)
!3786 = !DILocation(line: 248, column: 20, scope: !3775)
!3787 = !DILocation(line: 249, column: 23, scope: !3775)
!3788 = !DILocation(line: 249, column: 32, scope: !3775)
!3789 = !DILocation(line: 249, column: 39, scope: !3775)
!3790 = !DILocation(line: 249, column: 48, scope: !3775)
!3791 = !DILocation(line: 250, column: 19, scope: !3775)
!3792 = !DILocation(line: 250, column: 26, scope: !3775)
!3793 = !DILocation(line: 250, column: 10, scope: !3775)
!3794 = !DILocation(line: 253, column: 5, scope: !3775)
!3795 = !DILocation(line: 253, column: 30, scope: !3775)
!3796 = !DILocation(line: 253, column: 38, scope: !3775)
!3797 = !DILocation(line: 254, column: 5, scope: !3775)
!3798 = !DILocation(line: 254, column: 36, scope: !3775)
!3799 = distinct !{!3799, !3797, !3800}
!3800 = !DILocation(line: 254, column: 46, scope: !3775)
!3801 = !DILocation(line: 255, column: 12, scope: !3775)
!3802 = !DILocation(line: 256, column: 1, scope: !3775)
!3803 = !DILocation(line: 255, column: 5, scope: !3775)
!3804 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !95, file: !95, line: 258, type: !3805, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3807)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{!61}
!3807 = !{!3808}
!3808 = !DILocalVariable(name: "i", scope: !3804, file: !95, line: 260, type: !61)
!3809 = !DILocation(line: 0, scope: !3804)
!3810 = !DILocation(line: 262, column: 5, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3804, file: !95, line: 262, column: 5)
!3812 = !DILocation(line: 263, column: 37, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3814, file: !95, line: 263, column: 13)
!3814 = distinct !DILexicalBlock(scope: !3815, file: !95, line: 262, column: 45)
!3815 = distinct !DILexicalBlock(scope: !3811, file: !95, line: 262, column: 5)
!3816 = !DILocation(line: 263, column: 45, scope: !3813)
!3817 = !DILocation(line: 263, column: 13, scope: !3814)
!3818 = !DILocation(line: 262, column: 41, scope: !3815)
!3819 = !DILocation(line: 262, column: 19, scope: !3815)
!3820 = distinct !{!3820, !3810, !3821}
!3821 = !DILocation(line: 266, column: 5, scope: !3811)
!3822 = !DILocation(line: 269, column: 1, scope: !3804)
!3823 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !95, file: !95, line: 271, type: !291, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3824)
!3824 = !{!3825, !3826}
!3825 = !DILocalVariable(name: "minimum_time", scope: !3823, file: !95, line: 273, type: !61)
!3826 = !DILocalVariable(name: "current_timer", scope: !3823, file: !95, line: 273, type: !61)
!3827 = !DILocation(line: 273, column: 5, scope: !3823)
!3828 = !DILocation(line: 275, column: 24, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3823, file: !95, line: 275, column: 9)
!3830 = !DILocation(line: 275, column: 9, scope: !3823)
!3831 = !DILocation(line: 0, scope: !3823)
!3832 = !DILocation(line: 279, column: 5, scope: !3823)
!3833 = !DILocation(line: 282, column: 56, scope: !3823)
!3834 = !DILocation(line: 282, column: 39, scope: !3823)
!3835 = !DILocation(line: 284, column: 30, scope: !3823)
!3836 = !DILocation(line: 285, column: 45, scope: !3823)
!3837 = !DILocation(line: 285, column: 5, scope: !3823)
!3838 = !DILocation(line: 286, column: 30, scope: !3823)
!3839 = !DILocation(line: 287, column: 1, scope: !3823)
!3840 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !95, file: !95, line: 308, type: !3841, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3843)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{null, !1036, !1036}
!3843 = !{!3844, !3845, !3846, !3847, !3848}
!3844 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !3840, file: !95, line: 308, type: !1036)
!3845 = !DILocalVariable(name: "number", arg: 2, scope: !3840, file: !95, line: 308, type: !1036)
!3846 = !DILocalVariable(name: "i", scope: !3840, file: !95, line: 310, type: !61)
!3847 = !DILocalVariable(name: "minimum", scope: !3840, file: !95, line: 311, type: !61)
!3848 = !DILocalVariable(name: "data", scope: !3840, file: !95, line: 312, type: !61)
!3849 = !DILocation(line: 0, scope: !3840)
!3850 = !DILocation(line: 314, column: 5, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3840, file: !95, line: 314, column: 5)
!3852 = !DILocation(line: 315, column: 37, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3854, file: !95, line: 315, column: 13)
!3854 = distinct !DILexicalBlock(scope: !3855, file: !95, line: 314, column: 45)
!3855 = distinct !DILexicalBlock(scope: !3851, file: !95, line: 314, column: 5)
!3856 = !DILocation(line: 315, column: 13, scope: !3854)
!3857 = !DILocation(line: 316, column: 20, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3853, file: !95, line: 315, column: 57)
!3859 = !DILocation(line: 318, column: 22, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3858, file: !95, line: 318, column: 17)
!3861 = !DILocation(line: 318, column: 17, scope: !3858)
!3862 = !DILocation(line: 320, column: 25, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3860, file: !95, line: 318, column: 33)
!3864 = !DILocation(line: 321, column: 13, scope: !3863)
!3865 = !DILocation(line: 314, column: 41, scope: !3855)
!3866 = !DILocation(line: 314, column: 19, scope: !3855)
!3867 = distinct !{!3867, !3850, !3868}
!3868 = !DILocation(line: 323, column: 5, scope: !3851)
!3869 = !DILocation(line: 325, column: 19, scope: !3840)
!3870 = !DILocation(line: 326, column: 1, scope: !3840)
!3871 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !95, file: !95, line: 289, type: !3553, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3872)
!3872 = !{!3873, !3874, !3875, !3876}
!3873 = !DILocalVariable(name: "timer_number", arg: 1, scope: !3871, file: !95, line: 289, type: !61)
!3874 = !DILocalVariable(name: "time_out_delta", scope: !3871, file: !95, line: 291, type: !61)
!3875 = !DILocalVariable(name: "current_delta", scope: !3871, file: !95, line: 292, type: !61)
!3876 = !DILocalVariable(name: "ret_value", scope: !3871, file: !95, line: 293, type: !61)
!3877 = !DILocation(line: 0, scope: !3871)
!3878 = !DILocation(line: 295, column: 22, scope: !3871)
!3879 = !DILocation(line: 296, column: 22, scope: !3871)
!3880 = !DILocation(line: 298, column: 24, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3871, file: !95, line: 298, column: 9)
!3882 = !DILocation(line: 298, column: 9, scope: !3871)
!3883 = !DILocation(line: 306, column: 5, scope: !3871)
!3884 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !95, file: !95, line: 329, type: !309, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3885)
!3885 = !{!3886, !3887, !3888, !3889}
!3886 = !DILocalVariable(name: "parameter", arg: 1, scope: !3884, file: !95, line: 329, type: !88)
!3887 = !DILocalVariable(name: "i", scope: !3884, file: !95, line: 331, type: !61)
!3888 = !DILocalVariable(name: "time_ms", scope: !3884, file: !95, line: 332, type: !60)
!3889 = !DILocalVariable(name: "data", scope: !3884, file: !95, line: 333, type: !60)
!3890 = !DILocation(line: 0, scope: !3884)
!3891 = !DILocation(line: 332, column: 5, scope: !3884)
!3892 = !DILocation(line: 332, column: 23, scope: !3884)
!3893 = !DILocation(line: 333, column: 5, scope: !3884)
!3894 = !DILocation(line: 333, column: 23, scope: !3884)
!3895 = !DILocation(line: 336, column: 24, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3884, file: !95, line: 336, column: 9)
!3897 = !DILocation(line: 336, column: 41, scope: !3896)
!3898 = !DILocation(line: 336, column: 9, scope: !3884)
!3899 = !DILocation(line: 338, column: 34, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3896, file: !95, line: 336, column: 47)
!3901 = !DILocation(line: 339, column: 9, scope: !3900)
!3902 = !DILocation(line: 340, column: 34, scope: !3900)
!3903 = !DILocation(line: 342, column: 46, scope: !3900)
!3904 = !DILocation(line: 342, column: 19, scope: !3900)
!3905 = !DILocation(line: 342, column: 17, scope: !3900)
!3906 = !DILocation(line: 344, column: 41, scope: !3900)
!3907 = !DILocation(line: 344, column: 38, scope: !3900)
!3908 = !DILocation(line: 345, column: 42, scope: !3900)
!3909 = !DILocation(line: 347, column: 9, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3900, file: !95, line: 347, column: 9)
!3911 = !DILocation(line: 348, column: 41, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3913, file: !95, line: 348, column: 17)
!3913 = distinct !DILexicalBlock(scope: !3914, file: !95, line: 347, column: 49)
!3914 = distinct !DILexicalBlock(scope: !3910, file: !95, line: 347, column: 9)
!3915 = !DILocation(line: 348, column: 17, scope: !3913)
!3916 = !DILocation(line: 350, column: 24, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3912, file: !95, line: 348, column: 61)
!3918 = !DILocation(line: 350, column: 22, scope: !3917)
!3919 = !DILocation(line: 352, column: 21, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3917, file: !95, line: 352, column: 21)
!3921 = !DILocation(line: 352, column: 26, scope: !3920)
!3922 = !DILocation(line: 352, column: 21, scope: !3917)
!3923 = !DILocation(line: 353, column: 56, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3920, file: !95, line: 352, column: 32)
!3925 = !DILocation(line: 354, column: 55, scope: !3924)
!3926 = !DILocation(line: 356, column: 62, scope: !3924)
!3927 = !DILocation(line: 356, column: 112, scope: !3924)
!3928 = !DILocation(line: 356, column: 21, scope: !3924)
!3929 = !DILocation(line: 357, column: 17, scope: !3924)
!3930 = !DILocation(line: 347, column: 45, scope: !3914)
!3931 = !DILocation(line: 347, column: 23, scope: !3914)
!3932 = distinct !{!3932, !3909, !3933}
!3933 = !DILocation(line: 360, column: 9, scope: !3910)
!3934 = !DILocation(line: 362, column: 42, scope: !3900)
!3935 = !DILocation(line: 364, column: 28, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3900, file: !95, line: 364, column: 13)
!3937 = !DILocation(line: 364, column: 48, scope: !3936)
!3938 = !DILocation(line: 364, column: 13, scope: !3900)
!3939 = !DILocation(line: 365, column: 13, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3936, file: !95, line: 364, column: 54)
!3941 = !DILocation(line: 366, column: 9, scope: !3940)
!3942 = !DILocation(line: 369, column: 1, scope: !3884)
!3943 = distinct !DISubprogram(name: "hal_trng_init", scope: !346, file: !346, line: 44, type: !3944, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !3947)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{!3946}
!3946 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_trng_status_t", file: !349, line: 96, baseType: !348)
!3947 = !{!3948, !3949}
!3948 = !DILocalVariable(name: "busy_status", scope: !3943, file: !346, line: 46, type: !3946)
!3949 = !DILocalVariable(name: "saved_mask", scope: !3950, file: !346, line: 47, type: !61)
!3950 = distinct !DILexicalBlock(scope: !3943, file: !346, line: 47, column: 2)
!3951 = !DILocation(line: 47, column: 2, scope: !3950)
!3952 = !DILocation(line: 0, scope: !3950)
!3953 = !DILocation(line: 47, column: 2, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3950, file: !346, line: 47, column: 2)
!3955 = !DILocation(line: 47, column: 2, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3954, file: !346, line: 47, column: 2)
!3957 = !DILocation(line: 0, scope: !3943)
!3958 = !DILocation(line: 52, column: 5, scope: !3943)
!3959 = !DILocation(line: 53, column: 5, scope: !3943)
!3960 = !DILocation(line: 48, column: 9, scope: !3943)
!3961 = !DILocation(line: 54, column: 1, scope: !3943)
!3962 = distinct !DISubprogram(name: "hal_trng_deinit", scope: !346, file: !346, line: 56, type: !3944, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !3963)
!3963 = !{!3964}
!3964 = !DILocalVariable(name: "saved_mask", scope: !3965, file: !346, line: 59, type: !61)
!3965 = distinct !DILexicalBlock(scope: !3962, file: !346, line: 59, column: 5)
!3966 = !DILocation(line: 58, column: 5, scope: !3962)
!3967 = !DILocation(line: 59, column: 5, scope: !3965)
!3968 = !DILocation(line: 0, scope: !3965)
!3969 = !DILocation(line: 60, column: 5, scope: !3962)
!3970 = distinct !DISubprogram(name: "hal_trng_get_generated_random_number", scope: !346, file: !346, line: 63, type: !3971, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !3973)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!3946, !1036}
!3973 = !{!3974, !3975}
!3974 = !DILocalVariable(name: "random_number", arg: 1, scope: !3970, file: !346, line: 63, type: !1036)
!3975 = !DILocalVariable(name: "generate_data", scope: !3970, file: !346, line: 65, type: !61)
!3976 = !DILocation(line: 0, scope: !3970)
!3977 = !DILocation(line: 66, column: 5, scope: !3970)
!3978 = !DILocation(line: 67, column: 5, scope: !3970)
!3979 = !DILocation(line: 68, column: 5, scope: !3970)
!3980 = !DILocation(line: 69, column: 21, scope: !3970)
!3981 = !DILocation(line: 70, column: 5, scope: !3970)
!3982 = !DILocation(line: 71, column: 23, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3970, file: !346, line: 71, column: 9)
!3984 = !DILocation(line: 71, column: 9, scope: !3970)
!3985 = !DILocation(line: 74, column: 24, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3983, file: !346, line: 73, column: 12)
!3987 = !DILocation(line: 77, column: 5, scope: !3970)
!3988 = !DILocation(line: 78, column: 1, scope: !3970)
!3989 = distinct !DISubprogram(name: "trng_init", scope: !362, file: !362, line: 44, type: !291, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !361, retainedNodes: !293)
!3990 = !DILocation(line: 48, column: 5, scope: !3989)
!3991 = !DILocation(line: 50, column: 1, scope: !3989)
!3992 = distinct !DISubprogram(name: "trng_config_timeout_limit", scope: !362, file: !362, line: 52, type: !3993, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !361, retainedNodes: !3996)
!3993 = !DISubroutineType(types: !3994)
!3994 = !{!3995, !61}
!3995 = !DIDerivedType(tag: DW_TAG_typedef, name: "Trng_Result", file: !365, line: 55, baseType: !364)
!3996 = !{!3997, !3998}
!3997 = !DILocalVariable(name: "timeout_value", arg: 1, scope: !3992, file: !362, line: 52, type: !61)
!3998 = !DILocalVariable(name: "timeout_limit", scope: !3992, file: !362, line: 57, type: !61)
!3999 = !DILocation(line: 0, scope: !3992)
!4000 = !DILocation(line: 59, column: 23, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3992, file: !362, line: 59, column: 9)
!4002 = !DILocation(line: 59, column: 9, scope: !3992)
!4003 = !DILocation(line: 63, column: 5, scope: !3992)
!4004 = !DILocation(line: 63, column: 11, scope: !3992)
!4005 = !DILocation(line: 63, column: 21, scope: !3992)
!4006 = !DILocation(line: 64, column: 39, scope: !3992)
!4007 = !DILocation(line: 64, column: 21, scope: !3992)
!4008 = !DILocation(line: 66, column: 5, scope: !3992)
!4009 = !DILocation(line: 67, column: 1, scope: !3992)
!4010 = distinct !DISubprogram(name: "trng_enable_mode", scope: !362, file: !362, line: 70, type: !4011, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !361, retainedNodes: !4013)
!4011 = !DISubroutineType(types: !4012)
!4012 = !{!3995, !91, !91, !91}
!4013 = !{!4014, !4015, !4016}
!4014 = !DILocalVariable(name: "H_FIRO", arg: 1, scope: !4010, file: !362, line: 70, type: !91)
!4015 = !DILocalVariable(name: "H_RO", arg: 2, scope: !4010, file: !362, line: 70, type: !91)
!4016 = !DILocalVariable(name: "H_GARO", arg: 3, scope: !4010, file: !362, line: 70, type: !91)
!4017 = !DILocation(line: 0, scope: !4010)
!4018 = !DILocation(line: 0, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !4010, file: !362, line: 73, column: 9)
!4020 = !DILocation(line: 73, column: 9, scope: !4010)
!4021 = !DILocation(line: 0, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4010, file: !362, line: 78, column: 9)
!4023 = !DILocation(line: 78, column: 9, scope: !4010)
!4024 = !DILocation(line: 0, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !4010, file: !362, line: 84, column: 9)
!4026 = !DILocation(line: 84, column: 9, scope: !4010)
!4027 = !DILocation(line: 90, column: 5, scope: !4010)
!4028 = distinct !DISubprogram(name: "trng_start", scope: !362, file: !362, line: 94, type: !291, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !361, retainedNodes: !4029)
!4029 = !{!4030}
!4030 = !DILocalVariable(name: "temp_random", scope: !4028, file: !362, line: 96, type: !60)
!4031 = !DILocation(line: 96, column: 5, scope: !4028)
!4032 = !DILocation(line: 96, column: 23, scope: !4028)
!4033 = !DILocation(line: 97, column: 19, scope: !4028)
!4034 = !DILocation(line: 97, column: 25, scope: !4028)
!4035 = !DILocation(line: 97, column: 17, scope: !4028)
!4036 = !DILocation(line: 98, column: 17, scope: !4028)
!4037 = !DILocation(line: 99, column: 11, scope: !4028)
!4038 = !DILocation(line: 99, column: 21, scope: !4028)
!4039 = !DILocation(line: 101, column: 1, scope: !4028)
!4040 = distinct !DISubprogram(name: "trng_stop", scope: !362, file: !362, line: 103, type: !291, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !361, retainedNodes: !4041)
!4041 = !{!4042}
!4042 = !DILocalVariable(name: "temp_random", scope: !4040, file: !362, line: 105, type: !60)
!4043 = !DILocation(line: 105, column: 5, scope: !4040)
!4044 = !DILocation(line: 105, column: 23, scope: !4040)
!4045 = !DILocation(line: 106, column: 19, scope: !4040)
!4046 = !DILocation(line: 106, column: 25, scope: !4040)
!4047 = !DILocation(line: 106, column: 17, scope: !4040)
!4048 = !DILocation(line: 107, column: 17, scope: !4040)
!4049 = !DILocation(line: 109, column: 11, scope: !4040)
!4050 = !DILocation(line: 109, column: 21, scope: !4040)
!4051 = !DILocation(line: 112, column: 1, scope: !4040)
!4052 = distinct !DISubprogram(name: "trng_deinit", scope: !362, file: !362, line: 115, type: !291, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !361, retainedNodes: !293)
!4053 = !DILocation(line: 119, column: 5, scope: !4052)
!4054 = !DILocation(line: 121, column: 1, scope: !4052)
!4055 = distinct !DISubprogram(name: "trng_get_random_data", scope: !362, file: !362, line: 124, type: !3805, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !361, retainedNodes: !4056)
!4056 = !{!4057, !4058}
!4057 = !DILocalVariable(name: "random_data", scope: !4055, file: !362, line: 127, type: !60)
!4058 = !DILocalVariable(name: "ready_data", scope: !4055, file: !362, line: 128, type: !60)
!4059 = !DILocation(line: 127, column: 5, scope: !4055)
!4060 = !DILocation(line: 127, column: 23, scope: !4055)
!4061 = !DILocation(line: 128, column: 5, scope: !4055)
!4062 = !DILocation(line: 128, column: 23, scope: !4055)
!4063 = !DILocation(line: 131, column: 18, scope: !4055)
!4064 = !DILocation(line: 131, column: 24, scope: !4055)
!4065 = !DILocation(line: 131, column: 16, scope: !4055)
!4066 = !DILocation(line: 132, column: 16, scope: !4055)
!4067 = !DILocation(line: 133, column: 12, scope: !4055)
!4068 = !DILocation(line: 133, column: 23, scope: !4055)
!4069 = !DILocation(line: 133, column: 5, scope: !4055)
!4070 = !DILocation(line: 134, column: 28, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4055, file: !362, line: 133, column: 41)
!4072 = !DILocation(line: 134, column: 20, scope: !4071)
!4073 = !DILocation(line: 135, column: 8, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4071, file: !362, line: 135, column: 8)
!4075 = !DILocation(line: 135, column: 19, scope: !4074)
!4076 = !DILocation(line: 135, column: 8, scope: !4071)
!4077 = !DILocation(line: 138, column: 20, scope: !4071)
!4078 = distinct !{!4078, !4069, !4079}
!4079 = !DILocation(line: 139, column: 5, scope: !4055)
!4080 = !DILocation(line: 140, column: 11, scope: !4055)
!4081 = !DILocation(line: 140, column: 24, scope: !4055)
!4082 = !DILocation(line: 141, column: 11, scope: !4055)
!4083 = !DILocation(line: 141, column: 21, scope: !4055)
!4084 = !DILocation(line: 142, column: 19, scope: !4055)
!4085 = !DILocation(line: 142, column: 25, scope: !4055)
!4086 = !DILocation(line: 142, column: 17, scope: !4055)
!4087 = !DILocation(line: 144, column: 12, scope: !4055)
!4088 = !DILocation(line: 144, column: 5, scope: !4055)
!4089 = !DILocation(line: 0, scope: !4055)
!4090 = !DILocation(line: 145, column: 1, scope: !4055)
!4091 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !384, file: !384, line: 50, type: !4092, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4095)
!4092 = !DISubroutineType(types: !4093)
!4093 = !{!61, !4094}
!4094 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !98, line: 390, baseType: !386)
!4095 = !{!4096, !4097, !4098}
!4096 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4091, file: !384, line: 50, type: !4094)
!4097 = !DILocalVariable(name: "i", scope: !4091, file: !384, line: 52, type: !61)
!4098 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !4091, file: !384, line: 53, type: !942)
!4099 = !DILocation(line: 0, scope: !4091)
!4100 = !DILocation(line: 53, column: 14, scope: !4091)
!4101 = !DILocation(line: 55, column: 5, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4091, file: !384, line: 55, column: 5)
!4103 = !DILocation(line: 55, column: 25, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4102, file: !384, line: 55, column: 5)
!4105 = !DILocation(line: 55, column: 19, scope: !4104)
!4106 = distinct !{!4106, !4101, !4107}
!4107 = !DILocation(line: 59, column: 5, scope: !4102)
!4108 = !DILocation(line: 56, column: 13, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !384, line: 56, column: 13)
!4110 = distinct !DILexicalBlock(scope: !4104, file: !384, line: 55, column: 29)
!4111 = !DILocation(line: 56, column: 40, scope: !4109)
!4112 = !DILocation(line: 56, column: 13, scope: !4110)
!4113 = !DILocation(line: 61, column: 1, scope: !4091)
!4114 = distinct !DISubprogram(name: "hal_gpio_init", scope: !384, file: !384, line: 66, type: !4115, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4118)
!4115 = !DISubroutineType(types: !4116)
!4116 = !{!4117, !4094}
!4117 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !439, line: 229, baseType: !438)
!4118 = !{!4119}
!4119 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4114, file: !384, line: 66, type: !4094)
!4120 = !DILocation(line: 0, scope: !4114)
!4121 = !DILocation(line: 68, column: 5, scope: !4114)
!4122 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !384, file: !384, line: 72, type: !4115, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4123)
!4123 = !{!4124}
!4124 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4122, file: !384, line: 72, type: !4094)
!4125 = !DILocation(line: 0, scope: !4122)
!4126 = !DILocation(line: 74, column: 5, scope: !4122)
!4127 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !384, file: !384, line: 79, type: !4128, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4130)
!4128 = !DISubroutineType(types: !4129)
!4129 = !{!4117, !4094, !480}
!4130 = !{!4131, !4132, !4133, !4134}
!4131 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4127, file: !384, line: 79, type: !4094)
!4132 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4127, file: !384, line: 79, type: !480)
!4133 = !DILocalVariable(name: "no", scope: !4127, file: !384, line: 81, type: !61)
!4134 = !DILocalVariable(name: "remainder", scope: !4127, file: !384, line: 82, type: !61)
!4135 = !DILocation(line: 0, scope: !4127)
!4136 = !DILocation(line: 84, column: 18, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4127, file: !384, line: 84, column: 9)
!4138 = !DILocation(line: 84, column: 9, scope: !4127)
!4139 = !DILocation(line: 89, column: 19, scope: !4127)
!4140 = !DILocation(line: 92, column: 26, scope: !4127)
!4141 = !DILocation(line: 94, column: 24, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4127, file: !384, line: 94, column: 9)
!4143 = !DILocation(line: 0, scope: !4142)
!4144 = !DILocation(line: 94, column: 9, scope: !4127)
!4145 = !DILocation(line: 101, column: 1, scope: !4127)
!4146 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !384, file: !384, line: 105, type: !4147, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4150)
!4147 = !DISubroutineType(types: !4148)
!4148 = !{!4117, !4094, !4149}
!4149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!4150 = !{!4151, !4152, !4153, !4154, !4155}
!4151 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4146, file: !384, line: 105, type: !4094)
!4152 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4146, file: !384, line: 105, type: !4149)
!4153 = !DILocalVariable(name: "no", scope: !4146, file: !384, line: 107, type: !61)
!4154 = !DILocalVariable(name: "remainder", scope: !4146, file: !384, line: 108, type: !61)
!4155 = !DILocalVariable(name: "temp", scope: !4146, file: !384, line: 109, type: !61)
!4156 = !DILocation(line: 0, scope: !4146)
!4157 = !DILocation(line: 111, column: 18, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4146, file: !384, line: 111, column: 9)
!4159 = !DILocation(line: 111, column: 9, scope: !4146)
!4160 = !DILocation(line: 115, column: 14, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4146, file: !384, line: 115, column: 9)
!4162 = !DILocation(line: 115, column: 9, scope: !4146)
!4163 = !DILocation(line: 120, column: 19, scope: !4146)
!4164 = !DILocation(line: 123, column: 26, scope: !4146)
!4165 = !DILocation(line: 125, column: 12, scope: !4146)
!4166 = !DILocation(line: 125, column: 54, scope: !4146)
!4167 = !DILocation(line: 126, column: 45, scope: !4146)
!4168 = !DILocation(line: 126, column: 17, scope: !4146)
!4169 = !DILocation(line: 127, column: 51, scope: !4146)
!4170 = !DILocation(line: 127, column: 21, scope: !4146)
!4171 = !DILocation(line: 128, column: 5, scope: !4146)
!4172 = !DILocation(line: 130, column: 1, scope: !4146)
!4173 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !384, file: !384, line: 134, type: !4174, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4177)
!4174 = !DISubroutineType(types: !4175)
!4175 = !{!4176, !4094, !356}
!4176 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !439, line: 238, baseType: !449)
!4177 = !{!4178, !4179, !4180, !4181, !4182}
!4178 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4173, file: !384, line: 134, type: !4094)
!4179 = !DILocalVariable(name: "function_index", arg: 2, scope: !4173, file: !384, line: 134, type: !356)
!4180 = !DILocalVariable(name: "no", scope: !4173, file: !384, line: 136, type: !61)
!4181 = !DILocalVariable(name: "remainder", scope: !4173, file: !384, line: 137, type: !61)
!4182 = !DILocalVariable(name: "irq_status", scope: !4173, file: !384, line: 138, type: !61)
!4183 = !DILocation(line: 0, scope: !4173)
!4184 = !DILocation(line: 140, column: 18, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4173, file: !384, line: 140, column: 9)
!4186 = !DILocation(line: 140, column: 9, scope: !4173)
!4187 = !DILocation(line: 145, column: 24, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4173, file: !384, line: 145, column: 9)
!4189 = !DILocation(line: 145, column: 9, scope: !4173)
!4190 = !DILocation(line: 145, column: 9, scope: !4188)
!4191 = !DILocation(line: 150, column: 19, scope: !4173)
!4192 = !DILocation(line: 156, column: 18, scope: !4173)
!4193 = !DILocation(line: 157, column: 105, scope: !4173)
!4194 = !DILocation(line: 157, column: 91, scope: !4173)
!4195 = !DILocation(line: 157, column: 5, scope: !4173)
!4196 = !DILocation(line: 157, column: 48, scope: !4173)
!4197 = !DILocation(line: 157, column: 62, scope: !4173)
!4198 = !DILocation(line: 158, column: 80, scope: !4173)
!4199 = !DILocation(line: 158, column: 5, scope: !4173)
!4200 = !DILocation(line: 158, column: 48, scope: !4173)
!4201 = !DILocation(line: 158, column: 62, scope: !4173)
!4202 = !DILocation(line: 159, column: 5, scope: !4173)
!4203 = !DILocation(line: 160, column: 5, scope: !4173)
!4204 = !DILocation(line: 162, column: 1, scope: !4173)
!4205 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !384, file: !384, line: 166, type: !4206, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4209)
!4206 = !DISubroutineType(types: !4207)
!4207 = !{!4117, !4094, !4208}
!4208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 32)
!4209 = !{!4210, !4211, !4212, !4213, !4214}
!4210 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4205, file: !384, line: 166, type: !4094)
!4211 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4205, file: !384, line: 166, type: !4208)
!4212 = !DILocalVariable(name: "no", scope: !4205, file: !384, line: 168, type: !61)
!4213 = !DILocalVariable(name: "remainder", scope: !4205, file: !384, line: 169, type: !61)
!4214 = !DILocalVariable(name: "temp", scope: !4205, file: !384, line: 170, type: !61)
!4215 = !DILocation(line: 0, scope: !4205)
!4216 = !DILocation(line: 172, column: 18, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4205, file: !384, line: 172, column: 9)
!4218 = !DILocation(line: 172, column: 9, scope: !4205)
!4219 = !DILocation(line: 176, column: 14, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4205, file: !384, line: 176, column: 9)
!4221 = !DILocation(line: 176, column: 9, scope: !4205)
!4222 = !DILocation(line: 181, column: 19, scope: !4205)
!4223 = !DILocation(line: 184, column: 26, scope: !4205)
!4224 = !DILocation(line: 186, column: 12, scope: !4205)
!4225 = !DILocation(line: 186, column: 54, scope: !4205)
!4226 = !DILocation(line: 187, column: 45, scope: !4205)
!4227 = !DILocation(line: 187, column: 17, scope: !4205)
!4228 = !DILocation(line: 188, column: 41, scope: !4205)
!4229 = !DILocation(line: 188, column: 16, scope: !4205)
!4230 = !DILocation(line: 189, column: 5, scope: !4205)
!4231 = !DILocation(line: 191, column: 1, scope: !4205)
!4232 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !384, file: !384, line: 195, type: !4233, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4235)
!4233 = !DISubroutineType(types: !4234)
!4234 = !{!4117, !4094, !481}
!4235 = !{!4236, !4237, !4238, !4239}
!4236 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4232, file: !384, line: 195, type: !4094)
!4237 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4232, file: !384, line: 195, type: !481)
!4238 = !DILocalVariable(name: "no", scope: !4232, file: !384, line: 197, type: !61)
!4239 = !DILocalVariable(name: "remainder", scope: !4232, file: !384, line: 198, type: !61)
!4240 = !DILocation(line: 0, scope: !4232)
!4241 = !DILocation(line: 200, column: 18, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4232, file: !384, line: 200, column: 9)
!4243 = !DILocation(line: 200, column: 9, scope: !4232)
!4244 = !DILocation(line: 205, column: 19, scope: !4232)
!4245 = !DILocation(line: 208, column: 26, scope: !4232)
!4246 = !DILocation(line: 210, column: 9, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4232, file: !384, line: 210, column: 9)
!4248 = !DILocation(line: 0, scope: !4247)
!4249 = !DILocation(line: 210, column: 9, scope: !4232)
!4250 = !DILocation(line: 216, column: 1, scope: !4232)
!4251 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !384, file: !384, line: 220, type: !4206, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4252)
!4252 = !{!4253, !4254, !4255, !4256, !4257}
!4253 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4251, file: !384, line: 220, type: !4094)
!4254 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4251, file: !384, line: 220, type: !4208)
!4255 = !DILocalVariable(name: "no", scope: !4251, file: !384, line: 222, type: !61)
!4256 = !DILocalVariable(name: "remainder", scope: !4251, file: !384, line: 223, type: !61)
!4257 = !DILocalVariable(name: "temp", scope: !4251, file: !384, line: 224, type: !61)
!4258 = !DILocation(line: 0, scope: !4251)
!4259 = !DILocation(line: 226, column: 18, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4251, file: !384, line: 226, column: 9)
!4261 = !DILocation(line: 226, column: 9, scope: !4251)
!4262 = !DILocation(line: 230, column: 14, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4251, file: !384, line: 230, column: 9)
!4264 = !DILocation(line: 230, column: 9, scope: !4251)
!4265 = !DILocation(line: 235, column: 19, scope: !4251)
!4266 = !DILocation(line: 238, column: 26, scope: !4251)
!4267 = !DILocation(line: 240, column: 12, scope: !4251)
!4268 = !DILocation(line: 240, column: 55, scope: !4251)
!4269 = !DILocation(line: 241, column: 45, scope: !4251)
!4270 = !DILocation(line: 241, column: 17, scope: !4251)
!4271 = !DILocation(line: 242, column: 41, scope: !4251)
!4272 = !DILocation(line: 242, column: 16, scope: !4251)
!4273 = !DILocation(line: 243, column: 5, scope: !4251)
!4274 = !DILocation(line: 245, column: 1, scope: !4251)
!4275 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !384, file: !384, line: 249, type: !4115, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4276)
!4276 = !{!4277, !4278, !4279, !4280}
!4277 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4275, file: !384, line: 249, type: !4094)
!4278 = !DILocalVariable(name: "no", scope: !4275, file: !384, line: 251, type: !61)
!4279 = !DILocalVariable(name: "remainder", scope: !4275, file: !384, line: 252, type: !61)
!4280 = !DILocalVariable(name: "temp", scope: !4275, file: !384, line: 253, type: !61)
!4281 = !DILocation(line: 0, scope: !4275)
!4282 = !DILocation(line: 255, column: 18, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4275, file: !384, line: 255, column: 9)
!4284 = !DILocation(line: 255, column: 9, scope: !4275)
!4285 = !DILocation(line: 260, column: 19, scope: !4275)
!4286 = !DILocation(line: 263, column: 26, scope: !4275)
!4287 = !DILocation(line: 265, column: 12, scope: !4275)
!4288 = !DILocation(line: 265, column: 55, scope: !4275)
!4289 = !DILocation(line: 266, column: 45, scope: !4275)
!4290 = !DILocation(line: 266, column: 17, scope: !4275)
!4291 = !DILocation(line: 267, column: 15, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4275, file: !384, line: 267, column: 9)
!4293 = !DILocation(line: 267, column: 9, scope: !4275)
!4294 = !DILocation(line: 0, scope: !4292)
!4295 = !DILocation(line: 273, column: 1, scope: !4275)
!4296 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !384, file: !384, line: 278, type: !4115, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4297)
!4297 = !{!4298, !4299, !4300}
!4298 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4296, file: !384, line: 278, type: !4094)
!4299 = !DILocalVariable(name: "no", scope: !4296, file: !384, line: 280, type: !61)
!4300 = !DILocalVariable(name: "remainder", scope: !4296, file: !384, line: 281, type: !61)
!4301 = !DILocation(line: 0, scope: !4296)
!4302 = !DILocation(line: 283, column: 18, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4296, file: !384, line: 283, column: 9)
!4304 = !DILocation(line: 283, column: 9, scope: !4296)
!4305 = !DILocation(line: 288, column: 19, scope: !4296)
!4306 = !DILocation(line: 291, column: 26, scope: !4296)
!4307 = !DILocation(line: 293, column: 90, scope: !4296)
!4308 = !DILocation(line: 293, column: 5, scope: !4296)
!4309 = !DILocation(line: 293, column: 48, scope: !4296)
!4310 = !DILocation(line: 293, column: 62, scope: !4296)
!4311 = !DILocation(line: 294, column: 5, scope: !4296)
!4312 = !DILocation(line: 295, column: 1, scope: !4296)
!4313 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !384, file: !384, line: 299, type: !4115, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4314)
!4314 = !{!4315, !4316, !4317}
!4315 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4313, file: !384, line: 299, type: !4094)
!4316 = !DILocalVariable(name: "no", scope: !4313, file: !384, line: 301, type: !61)
!4317 = !DILocalVariable(name: "remainder", scope: !4313, file: !384, line: 302, type: !61)
!4318 = !DILocation(line: 0, scope: !4313)
!4319 = !DILocation(line: 304, column: 18, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4313, file: !384, line: 304, column: 9)
!4321 = !DILocation(line: 304, column: 9, scope: !4313)
!4322 = !DILocation(line: 309, column: 19, scope: !4313)
!4323 = !DILocation(line: 312, column: 26, scope: !4313)
!4324 = !DILocation(line: 314, column: 90, scope: !4313)
!4325 = !DILocation(line: 314, column: 5, scope: !4313)
!4326 = !DILocation(line: 314, column: 48, scope: !4313)
!4327 = !DILocation(line: 314, column: 62, scope: !4313)
!4328 = !DILocation(line: 315, column: 5, scope: !4313)
!4329 = !DILocation(line: 316, column: 1, scope: !4313)
!4330 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !384, file: !384, line: 321, type: !4115, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4331)
!4331 = !{!4332, !4333, !4334}
!4332 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4330, file: !384, line: 321, type: !4094)
!4333 = !DILocalVariable(name: "no", scope: !4330, file: !384, line: 323, type: !61)
!4334 = !DILocalVariable(name: "remainder", scope: !4330, file: !384, line: 324, type: !61)
!4335 = !DILocation(line: 0, scope: !4330)
!4336 = !DILocation(line: 326, column: 19, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4330, file: !384, line: 326, column: 9)
!4338 = !DILocation(line: 326, column: 36, scope: !4337)
!4339 = !DILocation(line: 326, column: 41, scope: !4337)
!4340 = !DILocation(line: 326, column: 9, scope: !4330)
!4341 = !DILocation(line: 331, column: 19, scope: !4330)
!4342 = !DILocation(line: 334, column: 26, scope: !4330)
!4343 = !DILocation(line: 336, column: 94, scope: !4330)
!4344 = !DILocation(line: 336, column: 5, scope: !4330)
!4345 = !DILocation(line: 336, column: 50, scope: !4330)
!4346 = !DILocation(line: 336, column: 66, scope: !4330)
!4347 = !DILocation(line: 337, column: 5, scope: !4330)
!4348 = !DILocation(line: 337, column: 51, scope: !4330)
!4349 = !DILocation(line: 337, column: 68, scope: !4330)
!4350 = !DILocation(line: 338, column: 5, scope: !4330)
!4351 = !DILocation(line: 339, column: 1, scope: !4330)
!4352 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !384, file: !384, line: 343, type: !4115, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4353)
!4353 = !{!4354, !4355, !4356}
!4354 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4352, file: !384, line: 343, type: !4094)
!4355 = !DILocalVariable(name: "no", scope: !4352, file: !384, line: 345, type: !61)
!4356 = !DILocalVariable(name: "remainder", scope: !4352, file: !384, line: 346, type: !61)
!4357 = !DILocation(line: 0, scope: !4352)
!4358 = !DILocation(line: 348, column: 19, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4352, file: !384, line: 348, column: 9)
!4360 = !DILocation(line: 348, column: 36, scope: !4359)
!4361 = !DILocation(line: 348, column: 41, scope: !4359)
!4362 = !DILocation(line: 348, column: 9, scope: !4352)
!4363 = !DILocation(line: 353, column: 19, scope: !4352)
!4364 = !DILocation(line: 356, column: 26, scope: !4352)
!4365 = !DILocation(line: 358, column: 94, scope: !4352)
!4366 = !DILocation(line: 358, column: 5, scope: !4352)
!4367 = !DILocation(line: 358, column: 50, scope: !4352)
!4368 = !DILocation(line: 358, column: 66, scope: !4352)
!4369 = !DILocation(line: 359, column: 5, scope: !4352)
!4370 = !DILocation(line: 359, column: 51, scope: !4352)
!4371 = !DILocation(line: 359, column: 68, scope: !4352)
!4372 = !DILocation(line: 360, column: 5, scope: !4352)
!4373 = !DILocation(line: 361, column: 1, scope: !4352)
!4374 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !384, file: !384, line: 365, type: !4115, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4375)
!4375 = !{!4376, !4377, !4378}
!4376 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4374, file: !384, line: 365, type: !4094)
!4377 = !DILocalVariable(name: "no", scope: !4374, file: !384, line: 367, type: !61)
!4378 = !DILocalVariable(name: "remainder", scope: !4374, file: !384, line: 368, type: !61)
!4379 = !DILocation(line: 0, scope: !4374)
!4380 = !DILocation(line: 370, column: 19, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4374, file: !384, line: 370, column: 9)
!4382 = !DILocation(line: 370, column: 36, scope: !4381)
!4383 = !DILocation(line: 370, column: 41, scope: !4381)
!4384 = !DILocation(line: 370, column: 9, scope: !4374)
!4385 = !DILocation(line: 375, column: 19, scope: !4374)
!4386 = !DILocation(line: 378, column: 26, scope: !4374)
!4387 = !DILocation(line: 380, column: 94, scope: !4374)
!4388 = !DILocation(line: 380, column: 5, scope: !4374)
!4389 = !DILocation(line: 380, column: 50, scope: !4374)
!4390 = !DILocation(line: 380, column: 66, scope: !4374)
!4391 = !DILocation(line: 381, column: 5, scope: !4374)
!4392 = !DILocation(line: 382, column: 1, scope: !4374)
!4393 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !384, file: !384, line: 387, type: !4394, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4398)
!4394 = !DISubroutineType(types: !4395)
!4395 = !{!4117, !4396, !4397}
!4396 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !98, line: 423, baseType: !459)
!4397 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !98, line: 431, baseType: !468)
!4398 = !{!4399, !4400}
!4399 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !4393, file: !384, line: 387, type: !4396)
!4400 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !4393, file: !384, line: 387, type: !4397)
!4401 = !DILocation(line: 0, scope: !4393)
!4402 = !DILocation(line: 390, column: 24, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4393, file: !384, line: 390, column: 9)
!4404 = !DILocation(line: 390, column: 9, scope: !4393)
!4405 = !DILocation(line: 394, column: 5, scope: !4393)
!4406 = !DILocation(line: 394, column: 62, scope: !4393)
!4407 = !DILocation(line: 394, column: 74, scope: !4393)
!4408 = !DILocation(line: 395, column: 5, scope: !4393)
!4409 = !DILocation(line: 396, column: 1, scope: !4393)
!4410 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !384, file: !384, line: 403, type: !4411, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4413)
!4411 = !DISubroutineType(types: !4412)
!4412 = !{!4117, !4094, !356, !356, !356}
!4413 = !{!4414, !4415, !4416, !4417, !4418, !4419}
!4414 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4410, file: !384, line: 403, type: !4094)
!4415 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !4410, file: !384, line: 403, type: !356)
!4416 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !4410, file: !384, line: 403, type: !356)
!4417 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !4410, file: !384, line: 403, type: !356)
!4418 = !DILocalVariable(name: "no", scope: !4410, file: !384, line: 405, type: !61)
!4419 = !DILocalVariable(name: "remainder", scope: !4410, file: !384, line: 406, type: !61)
!4420 = !DILocation(line: 0, scope: !4410)
!4421 = !DILocation(line: 408, column: 19, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4410, file: !384, line: 408, column: 9)
!4423 = !DILocation(line: 408, column: 36, scope: !4422)
!4424 = !DILocation(line: 408, column: 40, scope: !4422)
!4425 = !DILocation(line: 408, column: 9, scope: !4410)
!4426 = !DILocation(line: 413, column: 19, scope: !4410)
!4427 = !DILocation(line: 416, column: 26, scope: !4410)
!4428 = !DILocation(line: 418, column: 9, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4410, file: !384, line: 418, column: 9)
!4430 = !DILocation(line: 0, scope: !4429)
!4431 = !DILocation(line: 418, column: 9, scope: !4410)
!4432 = !DILocation(line: 424, column: 9, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4410, file: !384, line: 424, column: 9)
!4434 = !DILocation(line: 0, scope: !4433)
!4435 = !DILocation(line: 424, column: 9, scope: !4410)
!4436 = !DILocation(line: 430, column: 9, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4410, file: !384, line: 430, column: 9)
!4438 = !DILocation(line: 0, scope: !4437)
!4439 = !DILocation(line: 430, column: 9, scope: !4410)
!4440 = !DILocation(line: 436, column: 1, scope: !4410)
!4441 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !384, file: !384, line: 441, type: !4115, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4442)
!4442 = !{!4443, !4444, !4445, !4446, !4447, !4448, !4449}
!4443 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4441, file: !384, line: 441, type: !4094)
!4444 = !DILocalVariable(name: "no1", scope: !4441, file: !384, line: 443, type: !61)
!4445 = !DILocalVariable(name: "no2", scope: !4441, file: !384, line: 443, type: !61)
!4446 = !DILocalVariable(name: "no3", scope: !4441, file: !384, line: 443, type: !61)
!4447 = !DILocalVariable(name: "remainder1", scope: !4441, file: !384, line: 444, type: !61)
!4448 = !DILocalVariable(name: "remainder2", scope: !4441, file: !384, line: 444, type: !61)
!4449 = !DILocalVariable(name: "remainder3", scope: !4441, file: !384, line: 444, type: !61)
!4450 = !DILocation(line: 0, scope: !4441)
!4451 = !DILocation(line: 446, column: 18, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4441, file: !384, line: 446, column: 9)
!4453 = !DILocation(line: 446, column: 9, scope: !4441)
!4454 = !DILocation(line: 451, column: 20, scope: !4441)
!4455 = !DILocation(line: 454, column: 27, scope: !4441)
!4456 = !DILocation(line: 457, column: 20, scope: !4441)
!4457 = !DILocation(line: 463, column: 20, scope: !4441)
!4458 = !DILocation(line: 469, column: 107, scope: !4441)
!4459 = !DILocation(line: 469, column: 92, scope: !4441)
!4460 = !DILocation(line: 469, column: 5, scope: !4441)
!4461 = !DILocation(line: 469, column: 49, scope: !4441)
!4462 = !DILocation(line: 469, column: 63, scope: !4441)
!4463 = !DILocation(line: 472, column: 89, scope: !4441)
!4464 = !DILocation(line: 472, column: 5, scope: !4441)
!4465 = !DILocation(line: 472, column: 48, scope: !4441)
!4466 = !DILocation(line: 472, column: 61, scope: !4441)
!4467 = !DILocation(line: 475, column: 5, scope: !4441)
!4468 = !DILocation(line: 475, column: 48, scope: !4441)
!4469 = !DILocation(line: 475, column: 61, scope: !4441)
!4470 = !DILocation(line: 478, column: 9, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4441, file: !384, line: 478, column: 9)
!4472 = !DILocation(line: 0, scope: !4471)
!4473 = !DILocation(line: 478, column: 9, scope: !4441)
!4474 = !DILocation(line: 479, column: 55, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4471, file: !384, line: 478, column: 40)
!4476 = !DILocation(line: 480, column: 5, scope: !4475)
!4477 = !DILocation(line: 483, column: 53, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4471, file: !384, line: 482, column: 10)
!4479 = !DILocation(line: 483, column: 67, scope: !4478)
!4480 = !DILocation(line: 484, column: 9, scope: !4478)
!4481 = !DILocation(line: 484, column: 55, scope: !4478)
!4482 = !DILocation(line: 484, column: 71, scope: !4478)
!4483 = !DILocation(line: 485, column: 9, scope: !4478)
!4484 = !DILocation(line: 485, column: 55, scope: !4478)
!4485 = !DILocation(line: 490, column: 5, scope: !4441)
!4486 = !DILocation(line: 490, column: 48, scope: !4441)
!4487 = !DILocation(line: 490, column: 61, scope: !4441)
!4488 = !DILocation(line: 493, column: 5, scope: !4441)
!4489 = !DILocation(line: 493, column: 47, scope: !4441)
!4490 = !DILocation(line: 493, column: 59, scope: !4441)
!4491 = !DILocation(line: 496, column: 108, scope: !4441)
!4492 = !DILocation(line: 496, column: 93, scope: !4441)
!4493 = !DILocation(line: 496, column: 5, scope: !4441)
!4494 = !DILocation(line: 496, column: 50, scope: !4441)
!4495 = !DILocation(line: 496, column: 65, scope: !4441)
!4496 = !DILocation(line: 498, column: 5, scope: !4441)
!4497 = !DILocation(line: 499, column: 1, scope: !4441)
!4498 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !384, file: !384, line: 502, type: !4115, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4499)
!4499 = !{!4500, !4501, !4502, !4503, !4504}
!4500 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4498, file: !384, line: 502, type: !4094)
!4501 = !DILocalVariable(name: "no1", scope: !4498, file: !384, line: 504, type: !61)
!4502 = !DILocalVariable(name: "no2", scope: !4498, file: !384, line: 504, type: !61)
!4503 = !DILocalVariable(name: "remainder1", scope: !4498, file: !384, line: 505, type: !61)
!4504 = !DILocalVariable(name: "remainder2", scope: !4498, file: !384, line: 505, type: !61)
!4505 = !DILocation(line: 0, scope: !4498)
!4506 = !DILocation(line: 507, column: 18, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4498, file: !384, line: 507, column: 9)
!4508 = !DILocation(line: 507, column: 9, scope: !4498)
!4509 = !DILocation(line: 512, column: 20, scope: !4498)
!4510 = !DILocation(line: 515, column: 27, scope: !4498)
!4511 = !DILocation(line: 518, column: 20, scope: !4498)
!4512 = !DILocation(line: 524, column: 107, scope: !4498)
!4513 = !DILocation(line: 524, column: 92, scope: !4498)
!4514 = !DILocation(line: 524, column: 5, scope: !4498)
!4515 = !DILocation(line: 524, column: 49, scope: !4498)
!4516 = !DILocation(line: 524, column: 63, scope: !4498)
!4517 = !DILocation(line: 527, column: 89, scope: !4498)
!4518 = !DILocation(line: 527, column: 5, scope: !4498)
!4519 = !DILocation(line: 527, column: 48, scope: !4498)
!4520 = !DILocation(line: 527, column: 61, scope: !4498)
!4521 = !DILocation(line: 530, column: 9, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4498, file: !384, line: 530, column: 9)
!4523 = !DILocation(line: 0, scope: !4522)
!4524 = !DILocation(line: 530, column: 9, scope: !4498)
!4525 = !DILocation(line: 531, column: 55, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4522, file: !384, line: 530, column: 40)
!4527 = !DILocation(line: 531, column: 71, scope: !4526)
!4528 = !DILocation(line: 532, column: 9, scope: !4526)
!4529 = !DILocation(line: 532, column: 56, scope: !4526)
!4530 = !DILocation(line: 533, column: 5, scope: !4526)
!4531 = !DILocation(line: 536, column: 53, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4522, file: !384, line: 535, column: 10)
!4533 = !DILocation(line: 536, column: 67, scope: !4532)
!4534 = !DILocation(line: 537, column: 9, scope: !4532)
!4535 = !DILocation(line: 537, column: 55, scope: !4532)
!4536 = !DILocation(line: 537, column: 71, scope: !4532)
!4537 = !DILocation(line: 538, column: 9, scope: !4532)
!4538 = !DILocation(line: 538, column: 55, scope: !4532)
!4539 = !DILocation(line: 543, column: 5, scope: !4498)
!4540 = !DILocation(line: 543, column: 48, scope: !4498)
!4541 = !DILocation(line: 543, column: 61, scope: !4498)
!4542 = !DILocation(line: 546, column: 5, scope: !4498)
!4543 = !DILocation(line: 546, column: 47, scope: !4498)
!4544 = !DILocation(line: 546, column: 59, scope: !4498)
!4545 = !DILocation(line: 549, column: 5, scope: !4498)
!4546 = !DILocation(line: 550, column: 1, scope: !4498)
!4547 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !384, file: !384, line: 554, type: !4548, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4550)
!4548 = !DISubroutineType(types: !4549)
!4549 = !{!4117, !4094, !482}
!4550 = !{!4551, !4552, !4553, !4554}
!4551 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4547, file: !384, line: 554, type: !4094)
!4552 = !DILocalVariable(name: "driving", arg: 2, scope: !4547, file: !384, line: 554, type: !482)
!4553 = !DILocalVariable(name: "no", scope: !4547, file: !384, line: 556, type: !61)
!4554 = !DILocalVariable(name: "remainder", scope: !4547, file: !384, line: 557, type: !61)
!4555 = !DILocation(line: 0, scope: !4547)
!4556 = !DILocation(line: 559, column: 19, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4547, file: !384, line: 559, column: 9)
!4558 = !DILocation(line: 559, column: 9, scope: !4547)
!4559 = !DILocation(line: 564, column: 19, scope: !4547)
!4560 = !DILocation(line: 569, column: 102, scope: !4547)
!4561 = !DILocation(line: 569, column: 88, scope: !4547)
!4562 = !DILocation(line: 569, column: 5, scope: !4547)
!4563 = !DILocation(line: 569, column: 47, scope: !4547)
!4564 = !DILocation(line: 569, column: 60, scope: !4547)
!4565 = !DILocation(line: 570, column: 71, scope: !4547)
!4566 = !DILocation(line: 570, column: 5, scope: !4547)
!4567 = !DILocation(line: 570, column: 47, scope: !4547)
!4568 = !DILocation(line: 570, column: 60, scope: !4547)
!4569 = !DILocation(line: 571, column: 5, scope: !4547)
!4570 = !DILocation(line: 572, column: 1, scope: !4547)
!4571 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !384, file: !384, line: 575, type: !4572, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !383, retainedNodes: !4575)
!4572 = !DISubroutineType(types: !4573)
!4573 = !{!4117, !4094, !4574}
!4574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 32)
!4575 = !{!4576, !4577, !4578, !4579, !4580}
!4576 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4571, file: !384, line: 575, type: !4094)
!4577 = !DILocalVariable(name: "driving", arg: 2, scope: !4571, file: !384, line: 575, type: !4574)
!4578 = !DILocalVariable(name: "no", scope: !4571, file: !384, line: 577, type: !61)
!4579 = !DILocalVariable(name: "remainder", scope: !4571, file: !384, line: 578, type: !61)
!4580 = !DILocalVariable(name: "temp", scope: !4571, file: !384, line: 579, type: !61)
!4581 = !DILocation(line: 0, scope: !4571)
!4582 = !DILocation(line: 581, column: 19, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4571, file: !384, line: 581, column: 9)
!4584 = !DILocation(line: 581, column: 9, scope: !4571)
!4585 = !DILocation(line: 585, column: 14, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4571, file: !384, line: 585, column: 9)
!4587 = !DILocation(line: 585, column: 9, scope: !4571)
!4588 = !DILocation(line: 590, column: 19, scope: !4571)
!4589 = !DILocation(line: 595, column: 12, scope: !4571)
!4590 = !DILocation(line: 595, column: 54, scope: !4571)
!4591 = !DILocation(line: 596, column: 59, scope: !4571)
!4592 = !DILocation(line: 596, column: 45, scope: !4571)
!4593 = !DILocation(line: 596, column: 17, scope: !4571)
!4594 = !DILocation(line: 597, column: 18, scope: !4571)
!4595 = !DILocation(line: 600, column: 56, scope: !4571)
!4596 = !DILocation(line: 600, column: 14, scope: !4571)
!4597 = !DILocation(line: 602, column: 5, scope: !4571)
!4598 = !DILocation(line: 603, column: 1, scope: !4571)
!4599 = distinct !DISubprogram(name: "uart_receive_handler", scope: !664, file: !664, line: 146, type: !4600, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !4602)
!4600 = !DISubroutineType(types: !4601)
!4601 = !{null, !770, !91}
!4602 = !{!4603, !4604, !4605, !4607, !4608, !4609, !4610, !4666}
!4603 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4599, file: !664, line: 146, type: !770)
!4604 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !4599, file: !664, line: 146, type: !91)
!4605 = !DILocalVariable(name: "channel", scope: !4599, file: !664, line: 148, type: !4606)
!4606 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !674, line: 203, baseType: !673)
!4607 = !DILocalVariable(name: "avail_bytes", scope: !4599, file: !664, line: 149, type: !61)
!4608 = !DILocalVariable(name: "callback", scope: !4599, file: !664, line: 150, type: !779)
!4609 = !DILocalVariable(name: "arg", scope: !4599, file: !664, line: 151, type: !88)
!4610 = !DILocalVariable(name: "uartx", scope: !4599, file: !664, line: 152, type: !4611)
!4611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4612, size: 32)
!4612 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !4613)
!4613 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !4614)
!4614 = !{!4615, !4621, !4626, !4632, !4633, !4638, !4643, !4644, !4649, !4650, !4651, !4652, !4653, !4654, !4655, !4656, !4657, !4658, !4659, !4660, !4661, !4662, !4663, !4664, !4665}
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !4613, file: !56, line: 547, baseType: !4616, size: 32)
!4616 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4613, file: !56, line: 543, size: 32, elements: !4617)
!4617 = !{!4618, !4619, !4620}
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !4616, file: !56, line: 544, baseType: !272, size: 32)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !4616, file: !56, line: 545, baseType: !60, size: 32)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !4616, file: !56, line: 546, baseType: !60, size: 32)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !4613, file: !56, line: 551, baseType: !4622, size: 32, offset: 32)
!4622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4613, file: !56, line: 548, size: 32, elements: !4623)
!4623 = !{!4624, !4625}
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !4622, file: !56, line: 549, baseType: !60, size: 32)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !4622, file: !56, line: 550, baseType: !60, size: 32)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !4613, file: !56, line: 556, baseType: !4627, size: 32, offset: 64)
!4627 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4613, file: !56, line: 552, size: 32, elements: !4628)
!4628 = !{!4629, !4630, !4631}
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !4627, file: !56, line: 553, baseType: !272, size: 32)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !4627, file: !56, line: 554, baseType: !60, size: 32)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !4627, file: !56, line: 555, baseType: !60, size: 32)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !4613, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !4613, file: !56, line: 561, baseType: !4634, size: 32, offset: 128)
!4634 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4613, file: !56, line: 558, size: 32, elements: !4635)
!4635 = !{!4636, !4637}
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !4634, file: !56, line: 559, baseType: !60, size: 32)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !4634, file: !56, line: 560, baseType: !60, size: 32)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !4613, file: !56, line: 565, baseType: !4639, size: 32, offset: 160)
!4639 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4613, file: !56, line: 562, size: 32, elements: !4640)
!4640 = !{!4641, !4642}
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !4639, file: !56, line: 563, baseType: !272, size: 32)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !4639, file: !56, line: 564, baseType: !60, size: 32)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !4613, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !4613, file: !56, line: 570, baseType: !4645, size: 32, offset: 224)
!4645 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4613, file: !56, line: 567, size: 32, elements: !4646)
!4646 = !{!4647, !4648}
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !4645, file: !56, line: 568, baseType: !60, size: 32)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !4645, file: !56, line: 569, baseType: !60, size: 32)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !4613, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !4613, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !4613, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !4613, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !4613, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !4613, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !4613, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !4613, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !4613, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !4613, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !4613, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !4613, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !4613, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !4613, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !4613, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !4613, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !4613, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!4666 = !DILocalVariable(name: "status", scope: !4599, file: !664, line: 153, type: !4667)
!4667 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !674, line: 211, baseType: !694)
!4668 = !DILocation(line: 0, scope: !4599)
!4669 = !DILocation(line: 149, column: 5, scope: !4599)
!4670 = !DILocation(line: 155, column: 9, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4599, file: !664, line: 155, column: 9)
!4672 = !DILocation(line: 155, column: 36, scope: !4671)
!4673 = !DILocation(line: 155, column: 9, scope: !4599)
!4674 = !DILocation(line: 156, column: 9, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4671, file: !664, line: 155, column: 70)
!4676 = !DILocation(line: 160, column: 13, scope: !4599)
!4677 = !DILocation(line: 161, column: 15, scope: !4599)
!4678 = !DILocation(line: 163, column: 9, scope: !4599)
!4679 = !DILocation(line: 164, column: 9, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4681, file: !664, line: 163, column: 29)
!4681 = distinct !DILexicalBlock(scope: !4599, file: !664, line: 163, column: 9)
!4682 = !DILocation(line: 165, column: 5, scope: !4680)
!4683 = !DILocation(line: 167, column: 14, scope: !4599)
!4684 = !DILocation(line: 168, column: 16, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4599, file: !664, line: 168, column: 9)
!4686 = !DILocation(line: 168, column: 9, scope: !4599)
!4687 = !DILocation(line: 169, column: 9, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4685, file: !664, line: 168, column: 28)
!4689 = !DILocation(line: 172, column: 9, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4599, file: !664, line: 172, column: 9)
!4691 = !DILocation(line: 172, column: 21, scope: !4690)
!4692 = !DILocation(line: 172, column: 9, scope: !4599)
!4693 = !DILocation(line: 176, column: 43, scope: !4599)
!4694 = !DILocation(line: 178, column: 18, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4599, file: !664, line: 178, column: 9)
!4696 = !DILocation(line: 178, column: 9, scope: !4599)
!4697 = !DILocation(line: 179, column: 9, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4695, file: !664, line: 178, column: 27)
!4699 = !DILocation(line: 177, column: 38, scope: !4599)
!4700 = !DILocation(line: 183, column: 5, scope: !4599)
!4701 = !DILocation(line: 184, column: 5, scope: !4599)
!4702 = !DILocation(line: 185, column: 5, scope: !4599)
!4703 = !DILocation(line: 187, column: 14, scope: !4599)
!4704 = !DILocation(line: 188, column: 16, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4599, file: !664, line: 188, column: 9)
!4706 = !DILocation(line: 188, column: 9, scope: !4599)
!4707 = !DILocation(line: 189, column: 9, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4705, file: !664, line: 188, column: 28)
!4709 = !DILocation(line: 192, column: 9, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4599, file: !664, line: 192, column: 9)
!4711 = !DILocation(line: 192, column: 53, scope: !4710)
!4712 = !DILocation(line: 192, column: 21, scope: !4710)
!4713 = !DILocation(line: 192, column: 9, scope: !4599)
!4714 = !DILocation(line: 193, column: 18, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4710, file: !664, line: 192, column: 83)
!4716 = !DILocation(line: 194, column: 20, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4715, file: !664, line: 194, column: 13)
!4718 = !DILocation(line: 194, column: 13, scope: !4715)
!4719 = !DILocation(line: 195, column: 13, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4717, file: !664, line: 194, column: 32)
!4721 = !DILocation(line: 199, column: 1, scope: !4599)
!4722 = distinct !DISubprogram(name: "uart_send_handler", scope: !664, file: !664, line: 210, type: !4600, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !4723)
!4723 = !{!4724, !4725, !4726, !4727, !4728, !4729, !4730, !4731}
!4724 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4722, file: !664, line: 210, type: !770)
!4725 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !4722, file: !664, line: 210, type: !91)
!4726 = !DILocalVariable(name: "channel", scope: !4722, file: !664, line: 212, type: !4606)
!4727 = !DILocalVariable(name: "status", scope: !4722, file: !664, line: 213, type: !4667)
!4728 = !DILocalVariable(name: "compare_space", scope: !4722, file: !664, line: 214, type: !61)
!4729 = !DILocalVariable(name: "avail_space", scope: !4722, file: !664, line: 214, type: !61)
!4730 = !DILocalVariable(name: "callback", scope: !4722, file: !664, line: 215, type: !779)
!4731 = !DILocalVariable(name: "arg", scope: !4722, file: !664, line: 216, type: !88)
!4732 = !DILocation(line: 0, scope: !4722)
!4733 = !DILocation(line: 214, column: 5, scope: !4722)
!4734 = !DILocation(line: 221, column: 9, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4722, file: !664, line: 221, column: 9)
!4736 = !DILocation(line: 221, column: 36, scope: !4735)
!4737 = !DILocation(line: 221, column: 9, scope: !4722)
!4738 = !DILocation(line: 222, column: 9, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4735, file: !664, line: 221, column: 70)
!4740 = !DILocation(line: 226, column: 15, scope: !4722)
!4741 = !DILocation(line: 228, column: 9, scope: !4722)
!4742 = !DILocation(line: 253, column: 47, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4744, file: !664, line: 252, column: 12)
!4744 = distinct !DILexicalBlock(scope: !4722, file: !664, line: 228, column: 9)
!4745 = !DILocation(line: 255, column: 22, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4743, file: !664, line: 255, column: 13)
!4747 = !DILocation(line: 255, column: 13, scope: !4743)
!4748 = !DILocation(line: 256, column: 13, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4746, file: !664, line: 255, column: 31)
!4750 = !DILocation(line: 254, column: 42, scope: !4743)
!4751 = !DILocation(line: 260, column: 9, scope: !4743)
!4752 = !DILocation(line: 261, column: 9, scope: !4743)
!4753 = !DILocation(line: 262, column: 9, scope: !4743)
!4754 = !DILocation(line: 264, column: 18, scope: !4743)
!4755 = !DILocation(line: 265, column: 20, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4743, file: !664, line: 265, column: 13)
!4757 = !DILocation(line: 265, column: 13, scope: !4743)
!4758 = !DILocation(line: 266, column: 13, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4756, file: !664, line: 265, column: 32)
!4760 = !DILocation(line: 269, column: 54, scope: !4743)
!4761 = !DILocation(line: 270, column: 56, scope: !4743)
!4762 = !DILocation(line: 270, column: 25, scope: !4743)
!4763 = !DILocation(line: 271, column: 13, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4743, file: !664, line: 271, column: 13)
!4765 = !DILocation(line: 271, column: 25, scope: !4764)
!4766 = !DILocation(line: 271, column: 13, scope: !4743)
!4767 = !DILocation(line: 272, column: 22, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4764, file: !664, line: 271, column: 43)
!4769 = !DILocation(line: 273, column: 24, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4768, file: !664, line: 273, column: 17)
!4771 = !DILocation(line: 273, column: 17, scope: !4768)
!4772 = !DILocation(line: 274, column: 17, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4770, file: !664, line: 273, column: 36)
!4774 = !DILocation(line: 279, column: 1, scope: !4722)
!4775 = distinct !DISubprogram(name: "uart_error_handler", scope: !664, file: !664, line: 282, type: !4776, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !4778)
!4776 = !DISubroutineType(types: !4777)
!4777 = !{null, !770}
!4778 = !{!4779, !4780, !4781, !4782}
!4779 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4775, file: !664, line: 282, type: !770)
!4780 = !DILocalVariable(name: "uartx", scope: !4775, file: !664, line: 284, type: !4611)
!4781 = !DILocalVariable(name: "callback", scope: !4775, file: !664, line: 285, type: !779)
!4782 = !DILocalVariable(name: "arg", scope: !4775, file: !664, line: 286, type: !88)
!4783 = !DILocation(line: 0, scope: !4775)
!4784 = !DILocation(line: 288, column: 13, scope: !4775)
!4785 = !DILocation(line: 290, column: 10, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4775, file: !664, line: 290, column: 9)
!4787 = !DILocation(line: 290, column: 9, scope: !4775)
!4788 = !DILocation(line: 291, column: 9, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4786, file: !664, line: 290, column: 36)
!4790 = !DILocation(line: 292, column: 9, scope: !4789)
!4791 = !DILocation(line: 293, column: 47, scope: !4789)
!4792 = !DILocation(line: 295, column: 22, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4789, file: !664, line: 295, column: 13)
!4794 = !DILocation(line: 295, column: 13, scope: !4789)
!4795 = !DILocation(line: 296, column: 13, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4793, file: !664, line: 295, column: 31)
!4797 = !DILocation(line: 294, column: 42, scope: !4789)
!4798 = !DILocation(line: 299, column: 9, scope: !4789)
!4799 = !DILocation(line: 300, column: 5, scope: !4789)
!4800 = !DILocation(line: 301, column: 1, scope: !4775)
!4801 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !664, file: !664, line: 416, type: !4802, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !4806)
!4802 = !DISubroutineType(types: !4803)
!4803 = !{!4804, !770, !4805}
!4804 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !689, line: 351, baseType: !705)
!4805 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !689, line: 317, baseType: !712)
!4806 = !{!4807, !4808, !4809, !4810, !4811}
!4807 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4801, file: !664, line: 416, type: !770)
!4808 = !DILocalVariable(name: "baudrate", arg: 2, scope: !4801, file: !664, line: 416, type: !4805)
!4809 = !DILocalVariable(name: "actual_baudrate", scope: !4801, file: !664, line: 418, type: !61)
!4810 = !DILocalVariable(name: "irq_status", scope: !4801, file: !664, line: 418, type: !61)
!4811 = !DILocalVariable(name: "uartx", scope: !4801, file: !664, line: 419, type: !4611)
!4812 = !DILocation(line: 0, scope: !4801)
!4813 = !DILocation(line: 421, column: 11, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4801, file: !664, line: 421, column: 9)
!4815 = !DILocation(line: 421, column: 42, scope: !4814)
!4816 = !DILocation(line: 422, column: 11, scope: !4814)
!4817 = !DILocation(line: 421, column: 9, scope: !4801)
!4818 = !DILocation(line: 426, column: 9, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4801, file: !664, line: 426, column: 9)
!4820 = !DILocation(line: 426, column: 36, scope: !4819)
!4821 = !DILocation(line: 426, column: 9, scope: !4801)
!4822 = !DILocation(line: 430, column: 18, scope: !4801)
!4823 = !DILocation(line: 434, column: 5, scope: !4801)
!4824 = !DILocation(line: 436, column: 13, scope: !4801)
!4825 = !DILocation(line: 437, column: 23, scope: !4801)
!4826 = !DILocation(line: 439, column: 5, scope: !4801)
!4827 = !DILocation(line: 441, column: 5, scope: !4801)
!4828 = !DILocation(line: 442, column: 1, scope: !4801)
!4829 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !664, file: !664, line: 120, type: !4830, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !4832)
!4830 = !DISubroutineType(types: !4831)
!4831 = !{!91, !770}
!4832 = !{!4833}
!4833 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4829, file: !664, line: 120, type: !770)
!4834 = !DILocation(line: 0, scope: !4829)
!4835 = !DILocation(line: 122, column: 23, scope: !4829)
!4836 = !DILocation(line: 122, column: 5, scope: !4829)
!4837 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !664, file: !664, line: 125, type: !4838, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !4840)
!4838 = !DISubroutineType(types: !4839)
!4839 = !{!91, !4805}
!4840 = !{!4841}
!4841 = !DILocalVariable(name: "baudrate", arg: 1, scope: !4837, file: !664, line: 125, type: !4805)
!4842 = !DILocation(line: 0, scope: !4837)
!4843 = !DILocation(line: 127, column: 22, scope: !4837)
!4844 = !DILocation(line: 127, column: 5, scope: !4837)
!4845 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !664, file: !664, line: 444, type: !4846, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !4860)
!4846 = !DISubroutineType(types: !4847)
!4847 = !{!4804, !770, !4848}
!4848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4849, size: 32)
!4849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4850)
!4850 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !689, line: 378, baseType: !4851)
!4851 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !689, line: 373, size: 128, elements: !4852)
!4852 = !{!4853, !4854, !4856, !4858}
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !4851, file: !689, line: 374, baseType: !4805, size: 32)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !4851, file: !689, line: 375, baseType: !4855, size: 32, offset: 32)
!4855 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !689, line: 326, baseType: !728)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !4851, file: !689, line: 376, baseType: !4857, size: 32, offset: 64)
!4857 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !689, line: 333, baseType: !734)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4851, file: !689, line: 377, baseType: !4859, size: 32, offset: 96)
!4859 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !689, line: 341, baseType: !738)
!4860 = !{!4861, !4862, !4863, !4864}
!4861 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4845, file: !664, line: 444, type: !770)
!4862 = !DILocalVariable(name: "config", arg: 2, scope: !4845, file: !664, line: 445, type: !4848)
!4863 = !DILocalVariable(name: "irq_status", scope: !4845, file: !664, line: 447, type: !61)
!4864 = !DILocalVariable(name: "uartx", scope: !4845, file: !664, line: 448, type: !4611)
!4865 = !DILocation(line: 0, scope: !4845)
!4866 = !DILocation(line: 450, column: 11, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4845, file: !664, line: 450, column: 9)
!4868 = !DILocation(line: 450, column: 42, scope: !4867)
!4869 = !DILocation(line: 451, column: 11, scope: !4867)
!4870 = !DILocation(line: 450, column: 9, scope: !4845)
!4871 = !DILocation(line: 455, column: 9, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4845, file: !664, line: 455, column: 9)
!4873 = !DILocation(line: 455, column: 36, scope: !4872)
!4874 = !DILocation(line: 455, column: 9, scope: !4845)
!4875 = !DILocation(line: 459, column: 18, scope: !4845)
!4876 = !DILocation(line: 466, column: 5, scope: !4845)
!4877 = !DILocation(line: 468, column: 13, scope: !4845)
!4878 = !DILocation(line: 470, column: 46, scope: !4845)
!4879 = !DILocation(line: 470, column: 5, scope: !4845)
!4880 = !DILocation(line: 471, column: 36, scope: !4845)
!4881 = !DILocation(line: 471, column: 57, scope: !4845)
!4882 = !DILocation(line: 471, column: 75, scope: !4845)
!4883 = !DILocation(line: 471, column: 5, scope: !4845)
!4884 = !DILocation(line: 473, column: 5, scope: !4845)
!4885 = !DILocation(line: 474, column: 1, scope: !4845)
!4886 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !664, file: !664, line: 130, type: !4887, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !4889)
!4887 = !DISubroutineType(types: !4888)
!4888 = !{!91, !4848}
!4889 = !{!4890}
!4890 = !DILocalVariable(name: "config", arg: 1, scope: !4886, file: !664, line: 130, type: !4848)
!4891 = !DILocation(line: 0, scope: !4886)
!4892 = !DILocation(line: 132, column: 22, scope: !4886)
!4893 = !DILocation(line: 132, column: 31, scope: !4886)
!4894 = !DILocation(line: 132, column: 56, scope: !4886)
!4895 = !DILocation(line: 133, column: 22, scope: !4886)
!4896 = !DILocation(line: 133, column: 34, scope: !4886)
!4897 = !DILocation(line: 133, column: 61, scope: !4886)
!4898 = !DILocation(line: 134, column: 22, scope: !4886)
!4899 = !DILocation(line: 134, column: 31, scope: !4886)
!4900 = !DILocation(line: 134, column: 55, scope: !4886)
!4901 = !DILocation(line: 135, column: 22, scope: !4886)
!4902 = !DILocation(line: 135, column: 29, scope: !4886)
!4903 = !DILocation(line: 132, column: 5, scope: !4886)
!4904 = distinct !DISubprogram(name: "hal_uart_init", scope: !664, file: !664, line: 476, type: !4905, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !4908)
!4905 = !DISubroutineType(types: !4906)
!4906 = !{!4804, !770, !4907}
!4907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4850, size: 32)
!4908 = !{!4909, !4910, !4911, !4912, !4913, !4914, !4915}
!4909 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4904, file: !664, line: 476, type: !770)
!4910 = !DILocalVariable(name: "uart_config", arg: 2, scope: !4904, file: !664, line: 476, type: !4907)
!4911 = !DILocalVariable(name: "uartx", scope: !4904, file: !664, line: 478, type: !4611)
!4912 = !DILocalVariable(name: "i", scope: !4904, file: !664, line: 479, type: !61)
!4913 = !DILocalVariable(name: "actual_baudrate", scope: !4904, file: !664, line: 479, type: !61)
!4914 = !DILocalVariable(name: "irq_status", scope: !4904, file: !664, line: 479, type: !61)
!4915 = !DILocalVariable(name: "status", scope: !4904, file: !664, line: 480, type: !4916)
!4916 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !744, line: 106, baseType: !743)
!4917 = !DILocation(line: 0, scope: !4904)
!4918 = !DILocation(line: 482, column: 11, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4904, file: !664, line: 482, column: 9)
!4920 = !DILocation(line: 482, column: 42, scope: !4919)
!4921 = !DILocation(line: 483, column: 11, scope: !4919)
!4922 = !DILocation(line: 482, column: 9, scope: !4904)
!4923 = !DILocation(line: 487, column: 18, scope: !4904)
!4924 = !DILocation(line: 488, column: 9, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4904, file: !664, line: 488, column: 9)
!4926 = !DILocation(line: 488, column: 36, scope: !4925)
!4927 = !DILocation(line: 488, column: 9, scope: !4904)
!4928 = !DILocation(line: 489, column: 9, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4925, file: !664, line: 488, column: 68)
!4930 = !DILocation(line: 490, column: 9, scope: !4929)
!4931 = !DILocation(line: 502, column: 9, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4904, file: !664, line: 502, column: 9)
!4933 = !DILocation(line: 502, column: 9, scope: !4904)
!4934 = !DILocation(line: 504, column: 13, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4936, file: !664, line: 503, column: 44)
!4936 = distinct !DILexicalBlock(scope: !4937, file: !664, line: 503, column: 9)
!4937 = distinct !DILexicalBlock(scope: !4938, file: !664, line: 503, column: 9)
!4938 = distinct !DILexicalBlock(scope: !4932, file: !664, line: 502, column: 50)
!4939 = !DILocation(line: 504, column: 32, scope: !4935)
!4940 = !DILocation(line: 510, column: 32, scope: !4935)
!4941 = !DILocation(line: 510, column: 36, scope: !4935)
!4942 = !DILocation(line: 511, column: 32, scope: !4935)
!4943 = !DILocation(line: 511, column: 37, scope: !4935)
!4944 = !DILocation(line: 503, column: 40, scope: !4936)
!4945 = !DILocation(line: 503, column: 23, scope: !4936)
!4946 = !DILocation(line: 503, column: 9, scope: !4937)
!4947 = distinct !{!4947, !4946, !4948}
!4948 = !DILocation(line: 512, column: 9, scope: !4937)
!4949 = !DILocation(line: 513, column: 40, scope: !4938)
!4950 = !DILocation(line: 514, column: 5, scope: !4938)
!4951 = !DILocation(line: 521, column: 32, scope: !4904)
!4952 = !DILocation(line: 522, column: 5, scope: !4904)
!4953 = !DILocation(line: 524, column: 31, scope: !4904)
!4954 = !DILocation(line: 524, column: 14, scope: !4904)
!4955 = !DILocation(line: 525, column: 16, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4904, file: !664, line: 525, column: 9)
!4957 = !DILocation(line: 525, column: 9, scope: !4904)
!4958 = !DILocation(line: 526, column: 9, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4956, file: !664, line: 525, column: 40)
!4960 = !DILocation(line: 530, column: 13, scope: !4904)
!4961 = !DILocation(line: 532, column: 5, scope: !4904)
!4962 = !DILocation(line: 533, column: 56, scope: !4904)
!4963 = !DILocation(line: 533, column: 23, scope: !4904)
!4964 = !DILocation(line: 534, column: 5, scope: !4904)
!4965 = !DILocation(line: 535, column: 41, scope: !4904)
!4966 = !DILocation(line: 535, column: 67, scope: !4904)
!4967 = !DILocation(line: 535, column: 90, scope: !4904)
!4968 = !DILocation(line: 535, column: 5, scope: !4904)
!4969 = !DILocation(line: 536, column: 5, scope: !4904)
!4970 = !DILocation(line: 541, column: 5, scope: !4904)
!4971 = !DILocation(line: 542, column: 1, scope: !4904)
!4972 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !664, file: !664, line: 544, type: !4973, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !4975)
!4973 = !DISubroutineType(types: !4974)
!4974 = !{!4804, !770}
!4975 = !{!4976, !4977, !4978, !4979, !4980, !4981, !4982}
!4976 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4972, file: !664, line: 544, type: !770)
!4977 = !DILocalVariable(name: "uartx", scope: !4972, file: !664, line: 546, type: !4611)
!4978 = !DILocalVariable(name: "tx_dma_channel", scope: !4972, file: !664, line: 547, type: !4606)
!4979 = !DILocalVariable(name: "rx_dma_channel", scope: !4972, file: !664, line: 547, type: !4606)
!4980 = !DILocalVariable(name: "irq_status", scope: !4972, file: !664, line: 548, type: !61)
!4981 = !DILocalVariable(name: "status", scope: !4972, file: !664, line: 549, type: !4667)
!4982 = !DILocalVariable(name: "clock_status", scope: !4972, file: !664, line: 550, type: !4916)
!4983 = !DILocation(line: 0, scope: !4972)
!4984 = !DILocation(line: 552, column: 10, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4972, file: !664, line: 552, column: 9)
!4986 = !DILocation(line: 552, column: 9, scope: !4972)
!4987 = !DILocation(line: 556, column: 18, scope: !4972)
!4988 = !DILocation(line: 557, column: 9, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4972, file: !664, line: 557, column: 9)
!4990 = !DILocation(line: 557, column: 36, scope: !4989)
!4991 = !DILocation(line: 557, column: 9, scope: !4972)
!4992 = !DILocation(line: 562, column: 13, scope: !4972)
!4993 = !DILocation(line: 565, column: 5, scope: !4972)
!4994 = !DILocation(line: 568, column: 9, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4972, file: !664, line: 568, column: 9)
!4996 = !DILocation(line: 568, column: 36, scope: !4995)
!4997 = !DILocation(line: 568, column: 9, scope: !4972)
!4998 = !DILocation(line: 569, column: 26, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4995, file: !664, line: 568, column: 70)
!5000 = !DILocation(line: 570, column: 26, scope: !4999)
!5001 = !DILocation(line: 572, column: 18, scope: !4999)
!5002 = !DILocation(line: 573, column: 20, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4999, file: !664, line: 573, column: 13)
!5004 = !DILocation(line: 573, column: 13, scope: !4999)
!5005 = !DILocation(line: 574, column: 13, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5003, file: !664, line: 573, column: 32)
!5007 = !DILocation(line: 575, column: 13, scope: !5006)
!5008 = !DILocation(line: 578, column: 18, scope: !4999)
!5009 = !DILocation(line: 579, column: 20, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !4999, file: !664, line: 579, column: 13)
!5011 = !DILocation(line: 579, column: 13, scope: !4999)
!5012 = !DILocation(line: 580, column: 13, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5010, file: !664, line: 579, column: 32)
!5014 = !DILocation(line: 581, column: 13, scope: !5013)
!5015 = !DILocation(line: 584, column: 18, scope: !4999)
!5016 = !DILocation(line: 585, column: 20, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !4999, file: !664, line: 585, column: 13)
!5018 = !DILocation(line: 585, column: 13, scope: !4999)
!5019 = !DILocation(line: 586, column: 13, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5017, file: !664, line: 585, column: 32)
!5021 = !DILocation(line: 587, column: 13, scope: !5020)
!5022 = !DILocation(line: 590, column: 18, scope: !4999)
!5023 = !DILocation(line: 591, column: 20, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !4999, file: !664, line: 591, column: 13)
!5025 = !DILocation(line: 591, column: 13, scope: !4999)
!5026 = !DILocation(line: 592, column: 13, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5024, file: !664, line: 591, column: 32)
!5028 = !DILocation(line: 593, column: 13, scope: !5027)
!5029 = !DILocation(line: 596, column: 18, scope: !4999)
!5030 = !DILocation(line: 597, column: 20, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !4999, file: !664, line: 597, column: 13)
!5032 = !DILocation(line: 597, column: 13, scope: !4999)
!5033 = !DILocation(line: 598, column: 13, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5031, file: !664, line: 597, column: 32)
!5035 = !DILocation(line: 599, column: 13, scope: !5034)
!5036 = !DILocation(line: 602, column: 18, scope: !4999)
!5037 = !DILocation(line: 603, column: 20, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !4999, file: !664, line: 603, column: 13)
!5039 = !DILocation(line: 603, column: 13, scope: !4999)
!5040 = !DILocation(line: 604, column: 13, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5038, file: !664, line: 603, column: 32)
!5042 = !DILocation(line: 605, column: 13, scope: !5041)
!5043 = !DILocation(line: 608, column: 30, scope: !4999)
!5044 = !DILocation(line: 608, column: 9, scope: !4999)
!5045 = !DILocation(line: 609, column: 5, scope: !4999)
!5046 = !DILocation(line: 610, column: 5, scope: !4972)
!5047 = !DILocation(line: 611, column: 38, scope: !4972)
!5048 = !DILocation(line: 611, column: 20, scope: !4972)
!5049 = !DILocation(line: 612, column: 22, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !4972, file: !664, line: 612, column: 9)
!5051 = !DILocation(line: 612, column: 9, scope: !4972)
!5052 = !DILocation(line: 613, column: 9, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5050, file: !664, line: 612, column: 46)
!5054 = !DILocation(line: 614, column: 9, scope: !5053)
!5055 = !DILocation(line: 618, column: 32, scope: !4972)
!5056 = !DILocation(line: 618, column: 37, scope: !4972)
!5057 = !DILocation(line: 619, column: 32, scope: !4972)
!5058 = !DILocation(line: 619, column: 36, scope: !4972)
!5059 = !DILocation(line: 635, column: 32, scope: !4972)
!5060 = !DILocation(line: 639, column: 5, scope: !4972)
!5061 = !DILocation(line: 640, column: 1, scope: !4972)
!5062 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !664, file: !664, line: 642, type: !5063, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !5065)
!5063 = !DISubroutineType(types: !5064)
!5064 = !{null, !770, !1516}
!5065 = !{!5066, !5067, !5068}
!5066 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5062, file: !664, line: 642, type: !770)
!5067 = !DILocalVariable(name: "byte", arg: 2, scope: !5062, file: !664, line: 642, type: !1516)
!5068 = !DILocalVariable(name: "uartx", scope: !5062, file: !664, line: 644, type: !4611)
!5069 = !DILocation(line: 0, scope: !5062)
!5070 = !DILocation(line: 646, column: 10, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5062, file: !664, line: 646, column: 9)
!5072 = !DILocation(line: 646, column: 9, scope: !5062)
!5073 = !DILocation(line: 650, column: 9, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5062, file: !664, line: 650, column: 9)
!5075 = !DILocation(line: 650, column: 36, scope: !5074)
!5076 = !DILocation(line: 650, column: 9, scope: !5062)
!5077 = !DILocation(line: 654, column: 13, scope: !5062)
!5078 = !DILocation(line: 655, column: 5, scope: !5062)
!5079 = !DILocation(line: 656, column: 1, scope: !5062)
!5080 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !664, file: !664, line: 658, type: !5081, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !5085)
!5081 = !DISubroutineType(types: !5082)
!5082 = !{!61, !770, !5083, !61}
!5083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5084, size: 32)
!5084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !356)
!5085 = !{!5086, !5087, !5088, !5089}
!5086 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5080, file: !664, line: 658, type: !770)
!5087 = !DILocalVariable(name: "data", arg: 2, scope: !5080, file: !664, line: 658, type: !5083)
!5088 = !DILocalVariable(name: "size", arg: 3, scope: !5080, file: !664, line: 658, type: !61)
!5089 = !DILocalVariable(name: "i", scope: !5080, file: !664, line: 660, type: !61)
!5090 = !DILocation(line: 0, scope: !5080)
!5091 = !DILocation(line: 662, column: 11, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5080, file: !664, line: 662, column: 9)
!5093 = !DILocation(line: 662, column: 42, scope: !5092)
!5094 = !DILocation(line: 666, column: 9, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5080, file: !664, line: 666, column: 9)
!5096 = !DILocation(line: 666, column: 36, scope: !5095)
!5097 = !DILocation(line: 666, column: 9, scope: !5080)
!5098 = !DILocation(line: 671, column: 38, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5100, file: !664, line: 670, column: 32)
!5100 = distinct !DILexicalBlock(scope: !5101, file: !664, line: 670, column: 5)
!5101 = distinct !DILexicalBlock(scope: !5080, file: !664, line: 670, column: 5)
!5102 = !DILocation(line: 671, column: 9, scope: !5099)
!5103 = !DILocation(line: 672, column: 13, scope: !5099)
!5104 = !DILocation(line: 670, column: 28, scope: !5100)
!5105 = !DILocation(line: 670, column: 19, scope: !5100)
!5106 = !DILocation(line: 670, column: 5, scope: !5101)
!5107 = distinct !{!5107, !5106, !5108}
!5108 = !DILocation(line: 673, column: 5, scope: !5101)
!5109 = !DILocation(line: 676, column: 1, scope: !5080)
!5110 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !664, file: !664, line: 678, type: !5081, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !5111)
!5111 = !{!5112, !5113, !5114, !5115, !5116, !5117, !5118, !5119}
!5112 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5110, file: !664, line: 678, type: !770)
!5113 = !DILocalVariable(name: "data", arg: 2, scope: !5110, file: !664, line: 678, type: !5083)
!5114 = !DILocalVariable(name: "size", arg: 3, scope: !5110, file: !664, line: 678, type: !61)
!5115 = !DILocalVariable(name: "channel", scope: !5110, file: !664, line: 680, type: !4606)
!5116 = !DILocalVariable(name: "i", scope: !5110, file: !664, line: 681, type: !61)
!5117 = !DILocalVariable(name: "real_count", scope: !5110, file: !664, line: 681, type: !61)
!5118 = !DILocalVariable(name: "avail_space", scope: !5110, file: !664, line: 681, type: !61)
!5119 = !DILocalVariable(name: "status", scope: !5110, file: !664, line: 682, type: !4667)
!5120 = !DILocation(line: 0, scope: !5110)
!5121 = !DILocation(line: 681, column: 5, scope: !5110)
!5122 = !DILocation(line: 687, column: 11, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5110, file: !664, line: 687, column: 9)
!5124 = !DILocation(line: 687, column: 42, scope: !5123)
!5125 = !DILocation(line: 691, column: 9, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5110, file: !664, line: 691, column: 9)
!5127 = !DILocation(line: 691, column: 36, scope: !5126)
!5128 = !DILocation(line: 691, column: 9, scope: !5110)
!5129 = !DILocation(line: 704, column: 15, scope: !5110)
!5130 = !DILocation(line: 706, column: 14, scope: !5110)
!5131 = !DILocation(line: 707, column: 16, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5110, file: !664, line: 707, column: 9)
!5133 = !DILocation(line: 707, column: 9, scope: !5110)
!5134 = !DILocation(line: 708, column: 9, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5132, file: !664, line: 707, column: 28)
!5136 = !DILocation(line: 712, column: 9, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5110, file: !664, line: 712, column: 9)
!5138 = !DILocation(line: 712, column: 21, scope: !5137)
!5139 = !DILocation(line: 717, column: 19, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5141, file: !664, line: 717, column: 5)
!5141 = distinct !DILexicalBlock(scope: !5110, file: !664, line: 717, column: 5)
!5142 = !DILocation(line: 717, column: 5, scope: !5141)
!5143 = distinct !{!5143, !5142, !5144}
!5144 = !DILocation(line: 723, column: 5, scope: !5141)
!5145 = !DILocation(line: 718, column: 42, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5140, file: !664, line: 717, column: 38)
!5147 = !DILocation(line: 718, column: 18, scope: !5146)
!5148 = !DILocation(line: 719, column: 20, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5146, file: !664, line: 719, column: 13)
!5150 = !DILocation(line: 717, column: 34, scope: !5140)
!5151 = !DILocation(line: 719, column: 13, scope: !5146)
!5152 = !DILocation(line: 720, column: 13, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5149, file: !664, line: 719, column: 32)
!5154 = !DILocation(line: 728, column: 23, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5110, file: !664, line: 728, column: 9)
!5156 = !DILocation(line: 728, column: 20, scope: !5155)
!5157 = !DILocation(line: 728, column: 9, scope: !5110)
!5158 = !DILocation(line: 729, column: 18, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5155, file: !664, line: 728, column: 36)
!5160 = !DILocation(line: 730, column: 20, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5159, file: !664, line: 730, column: 13)
!5162 = !DILocation(line: 730, column: 13, scope: !5159)
!5163 = !DILocation(line: 731, column: 13, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5161, file: !664, line: 730, column: 32)
!5165 = !DILocation(line: 737, column: 1, scope: !5110)
!5166 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !664, file: !664, line: 739, type: !5167, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !5169)
!5167 = !DISubroutineType(types: !5168)
!5168 = !{!1516, !770}
!5169 = !{!5170, !5171, !5172}
!5170 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5166, file: !664, line: 739, type: !770)
!5171 = !DILocalVariable(name: "data", scope: !5166, file: !664, line: 741, type: !1516)
!5172 = !DILocalVariable(name: "uartx", scope: !5166, file: !664, line: 742, type: !4611)
!5173 = !DILocation(line: 0, scope: !5166)
!5174 = !DILocation(line: 744, column: 10, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5166, file: !664, line: 744, column: 9)
!5176 = !DILocation(line: 744, column: 9, scope: !5166)
!5177 = !DILocation(line: 748, column: 9, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5166, file: !664, line: 748, column: 9)
!5179 = !DILocation(line: 748, column: 36, scope: !5178)
!5180 = !DILocation(line: 748, column: 9, scope: !5166)
!5181 = !DILocation(line: 752, column: 13, scope: !5166)
!5182 = !DILocation(line: 754, column: 12, scope: !5166)
!5183 = !DILocation(line: 756, column: 5, scope: !5166)
!5184 = !DILocation(line: 757, column: 1, scope: !5166)
!5185 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !664, file: !664, line: 759, type: !5186, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !5188)
!5186 = !DISubroutineType(types: !5187)
!5187 = !{!61, !770}
!5188 = !{!5189, !5190, !5191}
!5189 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5185, file: !664, line: 759, type: !770)
!5190 = !DILocalVariable(name: "data", scope: !5185, file: !664, line: 761, type: !61)
!5191 = !DILocalVariable(name: "uartx", scope: !5185, file: !664, line: 762, type: !4611)
!5192 = !DILocation(line: 0, scope: !5185)
!5193 = !DILocation(line: 764, column: 10, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5185, file: !664, line: 764, column: 9)
!5195 = !DILocation(line: 764, column: 9, scope: !5185)
!5196 = !DILocation(line: 768, column: 9, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5185, file: !664, line: 768, column: 9)
!5198 = !DILocation(line: 768, column: 36, scope: !5197)
!5199 = !DILocation(line: 768, column: 9, scope: !5185)
!5200 = !DILocation(line: 772, column: 13, scope: !5185)
!5201 = !DILocation(line: 774, column: 12, scope: !5185)
!5202 = !DILocation(line: 776, column: 5, scope: !5185)
!5203 = !DILocation(line: 777, column: 1, scope: !5185)
!5204 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !664, file: !664, line: 779, type: !5205, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !5207)
!5205 = !DISubroutineType(types: !5206)
!5206 = !{!61, !770, !797, !61}
!5207 = !{!5208, !5209, !5210, !5211, !5212}
!5208 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5204, file: !664, line: 779, type: !770)
!5209 = !DILocalVariable(name: "buffer", arg: 2, scope: !5204, file: !664, line: 779, type: !797)
!5210 = !DILocalVariable(name: "size", arg: 3, scope: !5204, file: !664, line: 779, type: !61)
!5211 = !DILocalVariable(name: "i", scope: !5204, file: !664, line: 781, type: !61)
!5212 = !DILocalVariable(name: "pbuf", scope: !5204, file: !664, line: 782, type: !797)
!5213 = !DILocation(line: 0, scope: !5204)
!5214 = !DILocation(line: 784, column: 11, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5204, file: !664, line: 784, column: 9)
!5216 = !DILocation(line: 784, column: 42, scope: !5215)
!5217 = !DILocation(line: 789, column: 9, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5204, file: !664, line: 789, column: 9)
!5219 = !DILocation(line: 789, column: 36, scope: !5218)
!5220 = !DILocation(line: 789, column: 9, scope: !5204)
!5221 = !DILocation(line: 794, column: 19, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5223, file: !664, line: 793, column: 32)
!5223 = distinct !DILexicalBlock(scope: !5224, file: !664, line: 793, column: 5)
!5224 = distinct !DILexicalBlock(scope: !5204, file: !664, line: 793, column: 5)
!5225 = !DILocation(line: 794, column: 9, scope: !5222)
!5226 = !DILocation(line: 794, column: 17, scope: !5222)
!5227 = !DILocation(line: 793, column: 28, scope: !5223)
!5228 = !DILocation(line: 793, column: 19, scope: !5223)
!5229 = !DILocation(line: 793, column: 5, scope: !5224)
!5230 = distinct !{!5230, !5229, !5231}
!5231 = !DILocation(line: 795, column: 5, scope: !5224)
!5232 = !DILocation(line: 798, column: 1, scope: !5204)
!5233 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !664, file: !664, line: 800, type: !5205, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !5234)
!5234 = !{!5235, !5236, !5237, !5238, !5239, !5240, !5241, !5242}
!5235 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5233, file: !664, line: 800, type: !770)
!5236 = !DILocalVariable(name: "buffer", arg: 2, scope: !5233, file: !664, line: 800, type: !797)
!5237 = !DILocalVariable(name: "size", arg: 3, scope: !5233, file: !664, line: 800, type: !61)
!5238 = !DILocalVariable(name: "channel", scope: !5233, file: !664, line: 802, type: !4606)
!5239 = !DILocalVariable(name: "receive_count", scope: !5233, file: !664, line: 803, type: !61)
!5240 = !DILocalVariable(name: "avail_count", scope: !5233, file: !664, line: 803, type: !61)
!5241 = !DILocalVariable(name: "index", scope: !5233, file: !664, line: 804, type: !61)
!5242 = !DILocalVariable(name: "status", scope: !5233, file: !664, line: 805, type: !4667)
!5243 = !DILocation(line: 0, scope: !5233)
!5244 = !DILocation(line: 803, column: 5, scope: !5233)
!5245 = !DILocation(line: 807, column: 11, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5233, file: !664, line: 807, column: 9)
!5247 = !DILocation(line: 807, column: 42, scope: !5246)
!5248 = !DILocation(line: 813, column: 9, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5233, file: !664, line: 813, column: 9)
!5250 = !DILocation(line: 813, column: 36, scope: !5249)
!5251 = !DILocation(line: 813, column: 9, scope: !5233)
!5252 = !DILocation(line: 817, column: 15, scope: !5233)
!5253 = !DILocation(line: 819, column: 14, scope: !5233)
!5254 = !DILocation(line: 820, column: 16, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5233, file: !664, line: 820, column: 9)
!5256 = !DILocation(line: 820, column: 9, scope: !5233)
!5257 = !DILocation(line: 821, column: 9, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5255, file: !664, line: 820, column: 28)
!5259 = !DILocation(line: 825, column: 9, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5233, file: !664, line: 825, column: 9)
!5261 = !DILocation(line: 825, column: 21, scope: !5260)
!5262 = !DILocation(line: 830, column: 27, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5264, file: !664, line: 830, column: 5)
!5264 = distinct !DILexicalBlock(scope: !5233, file: !664, line: 830, column: 5)
!5265 = !DILocation(line: 830, column: 5, scope: !5264)
!5266 = distinct !{!5266, !5265, !5267}
!5267 = !DILocation(line: 836, column: 5, scope: !5264)
!5268 = !DILocation(line: 831, column: 42, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5263, file: !664, line: 830, column: 53)
!5270 = !DILocation(line: 831, column: 18, scope: !5269)
!5271 = !DILocation(line: 832, column: 20, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5269, file: !664, line: 832, column: 13)
!5273 = !DILocation(line: 830, column: 49, scope: !5263)
!5274 = !DILocation(line: 832, column: 13, scope: !5269)
!5275 = !DILocation(line: 833, column: 13, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5272, file: !664, line: 832, column: 32)
!5277 = !DILocation(line: 841, column: 26, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5233, file: !664, line: 841, column: 9)
!5279 = !DILocation(line: 841, column: 23, scope: !5278)
!5280 = !DILocation(line: 841, column: 9, scope: !5233)
!5281 = !DILocation(line: 842, column: 18, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5278, file: !664, line: 841, column: 39)
!5283 = !DILocation(line: 843, column: 20, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5282, file: !664, line: 843, column: 13)
!5285 = !DILocation(line: 843, column: 13, scope: !5282)
!5286 = !DILocation(line: 844, column: 13, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5284, file: !664, line: 843, column: 32)
!5288 = !DILocation(line: 850, column: 1, scope: !5233)
!5289 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !664, file: !664, line: 891, type: !5290, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !5292)
!5290 = !DISubroutineType(types: !5291)
!5291 = !{!4804, !770, !779, !88}
!5292 = !{!5293, !5294, !5295, !5296, !5297, !5298, !5299, !5300}
!5293 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5289, file: !664, line: 891, type: !770)
!5294 = !DILocalVariable(name: "user_callback", arg: 2, scope: !5289, file: !664, line: 892, type: !779)
!5295 = !DILocalVariable(name: "user_data", arg: 3, scope: !5289, file: !664, line: 893, type: !88)
!5296 = !DILocalVariable(name: "tx_dma_channel", scope: !5289, file: !664, line: 895, type: !4606)
!5297 = !DILocalVariable(name: "rx_dma_channel", scope: !5289, file: !664, line: 895, type: !4606)
!5298 = !DILocalVariable(name: "irq_status", scope: !5289, file: !664, line: 896, type: !61)
!5299 = !DILocalVariable(name: "status", scope: !5289, file: !664, line: 897, type: !4667)
!5300 = !DILocalVariable(name: "nvic_status", scope: !5289, file: !664, line: 898, type: !907)
!5301 = !DILocation(line: 0, scope: !5289)
!5302 = !DILocation(line: 900, column: 11, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5289, file: !664, line: 900, column: 9)
!5304 = !DILocation(line: 900, column: 42, scope: !5303)
!5305 = !DILocation(line: 905, column: 18, scope: !5289)
!5306 = !DILocation(line: 906, column: 9, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5289, file: !664, line: 906, column: 9)
!5308 = !DILocation(line: 906, column: 36, scope: !5307)
!5309 = !DILocation(line: 906, column: 9, scope: !5289)
!5310 = !DILocation(line: 911, column: 22, scope: !5289)
!5311 = !DILocation(line: 912, column: 22, scope: !5289)
!5312 = !DILocation(line: 914, column: 32, scope: !5289)
!5313 = !DILocation(line: 914, column: 37, scope: !5289)
!5314 = !DILocation(line: 915, column: 32, scope: !5289)
!5315 = !DILocation(line: 915, column: 36, scope: !5289)
!5316 = !DILocation(line: 917, column: 91, scope: !5289)
!5317 = !DILocation(line: 917, column: 56, scope: !5289)
!5318 = !DILocation(line: 917, column: 5, scope: !5289)
!5319 = !DILocation(line: 918, column: 80, scope: !5289)
!5320 = !DILocation(line: 918, column: 14, scope: !5289)
!5321 = !DILocation(line: 919, column: 16, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5289, file: !664, line: 919, column: 9)
!5323 = !DILocation(line: 919, column: 9, scope: !5289)
!5324 = !DILocation(line: 920, column: 9, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5322, file: !664, line: 919, column: 28)
!5326 = !DILocation(line: 921, column: 9, scope: !5325)
!5327 = !DILocation(line: 924, column: 97, scope: !5289)
!5328 = !DILocation(line: 924, column: 56, scope: !5289)
!5329 = !DILocation(line: 924, column: 5, scope: !5289)
!5330 = !DILocation(line: 925, column: 80, scope: !5289)
!5331 = !DILocation(line: 925, column: 14, scope: !5289)
!5332 = !DILocation(line: 926, column: 16, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5289, file: !664, line: 926, column: 9)
!5334 = !DILocation(line: 926, column: 9, scope: !5289)
!5335 = !DILocation(line: 927, column: 9, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5333, file: !664, line: 926, column: 28)
!5337 = !DILocation(line: 928, column: 9, scope: !5336)
!5338 = !DILocation(line: 931, column: 49, scope: !5289)
!5339 = !DILocation(line: 931, column: 19, scope: !5289)
!5340 = !DILocation(line: 932, column: 21, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5289, file: !664, line: 932, column: 9)
!5342 = !DILocation(line: 932, column: 9, scope: !5289)
!5343 = !DILocation(line: 933, column: 9, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5341, file: !664, line: 932, column: 44)
!5345 = !DILocation(line: 934, column: 9, scope: !5344)
!5346 = !DILocation(line: 938, column: 5, scope: !5289)
!5347 = !DILocation(line: 940, column: 32, scope: !5289)
!5348 = !DILocation(line: 944, column: 5, scope: !5289)
!5349 = !DILocation(line: 945, column: 1, scope: !5289)
!5350 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !664, file: !664, line: 303, type: !5351, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !5354)
!5351 = !DISubroutineType(types: !5352)
!5352 = !{null, !5353, !88}
!5353 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !674, line: 225, baseType: !758)
!5354 = !{!5355, !5356, !5357}
!5355 = !DILocalVariable(name: "event", arg: 1, scope: !5350, file: !664, line: 303, type: !5353)
!5356 = !DILocalVariable(name: "user_data", arg: 2, scope: !5350, file: !664, line: 303, type: !88)
!5357 = !DILocalVariable(name: "callback_data", scope: !5350, file: !664, line: 305, type: !763)
!5358 = !DILocation(line: 0, scope: !5350)
!5359 = !DILocation(line: 307, column: 24, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5350, file: !664, line: 307, column: 9)
!5361 = !DILocation(line: 0, scope: !5360)
!5362 = !DILocation(line: 307, column: 9, scope: !5350)
!5363 = !DILocation(line: 308, column: 9, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5360, file: !664, line: 307, column: 39)
!5365 = !DILocation(line: 309, column: 5, scope: !5364)
!5366 = !DILocation(line: 310, column: 9, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5360, file: !664, line: 309, column: 12)
!5368 = !DILocation(line: 312, column: 1, scope: !5350)
!5369 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !664, file: !664, line: 852, type: !4776, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !5370)
!5370 = !{!5371, !5372, !5373, !5374, !5375}
!5371 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5369, file: !664, line: 852, type: !770)
!5372 = !DILocalVariable(name: "uartx", scope: !5369, file: !664, line: 854, type: !4611)
!5373 = !DILocalVariable(name: "tx_dma_channel", scope: !5369, file: !664, line: 855, type: !4606)
!5374 = !DILocalVariable(name: "rx_dma_channel", scope: !5369, file: !664, line: 855, type: !4606)
!5375 = !DILocalVariable(name: "status", scope: !5369, file: !664, line: 856, type: !4667)
!5376 = !DILocation(line: 0, scope: !5369)
!5377 = !DILocation(line: 858, column: 13, scope: !5369)
!5378 = !DILocation(line: 859, column: 22, scope: !5369)
!5379 = !DILocation(line: 860, column: 22, scope: !5369)
!5380 = !DILocation(line: 866, column: 5, scope: !5369)
!5381 = !DILocation(line: 867, column: 25, scope: !5369)
!5382 = !DILocation(line: 867, column: 5, scope: !5369)
!5383 = !DILocation(line: 868, column: 14, scope: !5369)
!5384 = !DILocation(line: 869, column: 16, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5369, file: !664, line: 869, column: 9)
!5386 = !DILocation(line: 869, column: 9, scope: !5369)
!5387 = !DILocation(line: 870, column: 9, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5385, file: !664, line: 869, column: 28)
!5389 = !DILocation(line: 873, column: 14, scope: !5369)
!5390 = !DILocation(line: 874, column: 16, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5369, file: !664, line: 874, column: 9)
!5392 = !DILocation(line: 874, column: 9, scope: !5369)
!5393 = !DILocation(line: 875, column: 9, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5391, file: !664, line: 874, column: 28)
!5395 = !DILocation(line: 878, column: 14, scope: !5369)
!5396 = !DILocation(line: 879, column: 16, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5369, file: !664, line: 879, column: 9)
!5398 = !DILocation(line: 879, column: 9, scope: !5369)
!5399 = !DILocation(line: 880, column: 9, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5397, file: !664, line: 879, column: 28)
!5401 = !DILocation(line: 883, column: 14, scope: !5369)
!5402 = !DILocation(line: 884, column: 16, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5369, file: !664, line: 884, column: 9)
!5404 = !DILocation(line: 884, column: 9, scope: !5369)
!5405 = !DILocation(line: 885, column: 9, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5403, file: !664, line: 884, column: 28)
!5407 = !DILocation(line: 888, column: 5, scope: !5369)
!5408 = !DILocation(line: 889, column: 1, scope: !5369)
!5409 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !664, file: !664, line: 947, type: !5186, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !5410)
!5410 = !{!5411, !5412, !5413, !5414}
!5411 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5409, file: !664, line: 947, type: !770)
!5412 = !DILocalVariable(name: "channel", scope: !5409, file: !664, line: 949, type: !4606)
!5413 = !DILocalVariable(name: "roomleft", scope: !5409, file: !664, line: 950, type: !61)
!5414 = !DILocalVariable(name: "status", scope: !5409, file: !664, line: 951, type: !4667)
!5415 = !DILocation(line: 0, scope: !5409)
!5416 = !DILocation(line: 950, column: 5, scope: !5409)
!5417 = !DILocation(line: 953, column: 10, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5409, file: !664, line: 953, column: 9)
!5419 = !DILocation(line: 953, column: 9, scope: !5409)
!5420 = !DILocation(line: 957, column: 9, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5409, file: !664, line: 957, column: 9)
!5422 = !DILocation(line: 957, column: 36, scope: !5421)
!5423 = !DILocation(line: 957, column: 9, scope: !5409)
!5424 = !DILocation(line: 961, column: 15, scope: !5409)
!5425 = !DILocation(line: 962, column: 14, scope: !5409)
!5426 = !DILocation(line: 963, column: 16, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5409, file: !664, line: 963, column: 9)
!5428 = !DILocation(line: 963, column: 9, scope: !5409)
!5429 = !DILocation(line: 964, column: 9, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5427, file: !664, line: 963, column: 28)
!5431 = !DILocation(line: 968, column: 12, scope: !5409)
!5432 = !DILocation(line: 968, column: 5, scope: !5409)
!5433 = !DILocation(line: 969, column: 1, scope: !5409)
!5434 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !664, file: !664, line: 971, type: !5186, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !5435)
!5435 = !{!5436, !5437, !5438, !5439}
!5436 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5434, file: !664, line: 971, type: !770)
!5437 = !DILocalVariable(name: "channel", scope: !5434, file: !664, line: 973, type: !4606)
!5438 = !DILocalVariable(name: "avail", scope: !5434, file: !664, line: 974, type: !61)
!5439 = !DILocalVariable(name: "status", scope: !5434, file: !664, line: 975, type: !4667)
!5440 = !DILocation(line: 0, scope: !5434)
!5441 = !DILocation(line: 974, column: 5, scope: !5434)
!5442 = !DILocation(line: 977, column: 10, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5434, file: !664, line: 977, column: 9)
!5444 = !DILocation(line: 977, column: 9, scope: !5434)
!5445 = !DILocation(line: 981, column: 9, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5434, file: !664, line: 981, column: 9)
!5447 = !DILocation(line: 981, column: 36, scope: !5446)
!5448 = !DILocation(line: 981, column: 9, scope: !5434)
!5449 = !DILocation(line: 985, column: 15, scope: !5434)
!5450 = !DILocation(line: 986, column: 14, scope: !5434)
!5451 = !DILocation(line: 987, column: 16, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5434, file: !664, line: 987, column: 9)
!5453 = !DILocation(line: 987, column: 9, scope: !5434)
!5454 = !DILocation(line: 988, column: 9, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5452, file: !664, line: 987, column: 28)
!5456 = !DILocation(line: 992, column: 12, scope: !5434)
!5457 = !DILocation(line: 992, column: 5, scope: !5434)
!5458 = !DILocation(line: 993, column: 1, scope: !5434)
!5459 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !664, file: !664, line: 995, type: !4973, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !5460)
!5460 = !{!5461, !5462}
!5461 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5459, file: !664, line: 995, type: !770)
!5462 = !DILocalVariable(name: "uartx", scope: !5459, file: !664, line: 997, type: !4611)
!5463 = !DILocation(line: 0, scope: !5459)
!5464 = !DILocation(line: 999, column: 10, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5459, file: !664, line: 999, column: 9)
!5466 = !DILocation(line: 999, column: 9, scope: !5459)
!5467 = !DILocation(line: 1003, column: 9, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5459, file: !664, line: 1003, column: 9)
!5469 = !DILocation(line: 1003, column: 36, scope: !5468)
!5470 = !DILocation(line: 1003, column: 9, scope: !5459)
!5471 = !DILocation(line: 1007, column: 13, scope: !5459)
!5472 = !DILocation(line: 1009, column: 5, scope: !5459)
!5473 = !DILocation(line: 1015, column: 5, scope: !5459)
!5474 = !DILocation(line: 1016, column: 1, scope: !5459)
!5475 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !664, file: !664, line: 1018, type: !5476, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !5478)
!5476 = !DISubroutineType(types: !5477)
!5477 = !{!4804, !770, !356, !356, !356}
!5478 = !{!5479, !5480, !5481, !5482, !5483}
!5479 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5475, file: !664, line: 1018, type: !770)
!5480 = !DILocalVariable(name: "xon", arg: 2, scope: !5475, file: !664, line: 1019, type: !356)
!5481 = !DILocalVariable(name: "xoff", arg: 3, scope: !5475, file: !664, line: 1020, type: !356)
!5482 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5475, file: !664, line: 1021, type: !356)
!5483 = !DILocalVariable(name: "uartx", scope: !5475, file: !664, line: 1023, type: !4611)
!5484 = !DILocation(line: 0, scope: !5475)
!5485 = !DILocation(line: 1025, column: 10, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5475, file: !664, line: 1025, column: 9)
!5487 = !DILocation(line: 1025, column: 9, scope: !5475)
!5488 = !DILocation(line: 1029, column: 9, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5475, file: !664, line: 1029, column: 9)
!5490 = !DILocation(line: 1029, column: 36, scope: !5489)
!5491 = !DILocation(line: 1029, column: 9, scope: !5475)
!5492 = !DILocation(line: 1033, column: 13, scope: !5475)
!5493 = !DILocation(line: 1035, column: 5, scope: !5475)
!5494 = !DILocation(line: 1044, column: 5, scope: !5475)
!5495 = !DILocation(line: 1045, column: 1, scope: !5475)
!5496 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !664, file: !664, line: 1047, type: !4973, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !5497)
!5497 = !{!5498, !5499}
!5498 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5496, file: !664, line: 1047, type: !770)
!5499 = !DILocalVariable(name: "uartx", scope: !5496, file: !664, line: 1049, type: !4611)
!5500 = !DILocation(line: 0, scope: !5496)
!5501 = !DILocation(line: 1051, column: 10, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5496, file: !664, line: 1051, column: 9)
!5503 = !DILocation(line: 1051, column: 9, scope: !5496)
!5504 = !DILocation(line: 1055, column: 9, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5496, file: !664, line: 1055, column: 9)
!5506 = !DILocation(line: 1055, column: 36, scope: !5505)
!5507 = !DILocation(line: 1055, column: 9, scope: !5496)
!5508 = !DILocation(line: 1059, column: 13, scope: !5496)
!5509 = !DILocation(line: 1061, column: 5, scope: !5496)
!5510 = !DILocation(line: 1067, column: 5, scope: !5496)
!5511 = !DILocation(line: 1068, column: 1, scope: !5496)
!5512 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !664, file: !664, line: 1071, type: !5513, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !663, retainedNodes: !5517)
!5513 = !DISubroutineType(types: !5514)
!5514 = !{!4804, !770, !5515}
!5515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5516, size: 32)
!5516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !793)
!5517 = !{!5518, !5519, !5520, !5521, !5527, !5528, !5529}
!5518 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5512, file: !664, line: 1071, type: !770)
!5519 = !DILocalVariable(name: "dma_config", arg: 2, scope: !5512, file: !664, line: 1071, type: !5515)
!5520 = !DILocalVariable(name: "irq_status", scope: !5512, file: !664, line: 1073, type: !61)
!5521 = !DILocalVariable(name: "internal_dma_config", scope: !5512, file: !664, line: 1074, type: !5522)
!5522 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !674, line: 283, baseType: !5523)
!5523 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !674, line: 280, size: 64, elements: !5524)
!5524 = !{!5525, !5526}
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !5523, file: !674, line: 281, baseType: !61, size: 32)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5523, file: !674, line: 282, baseType: !61, size: 32, offset: 32)
!5527 = !DILocalVariable(name: "tx_dma_channel", scope: !5512, file: !664, line: 1075, type: !4606)
!5528 = !DILocalVariable(name: "rx_dma_channel", scope: !5512, file: !664, line: 1075, type: !4606)
!5529 = !DILocalVariable(name: "status", scope: !5512, file: !664, line: 1076, type: !4667)
!5530 = !DILocation(line: 0, scope: !5512)
!5531 = !DILocation(line: 1074, column: 5, scope: !5512)
!5532 = !DILocation(line: 1074, column: 19, scope: !5512)
!5533 = !DILocation(line: 1078, column: 10, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5512, file: !664, line: 1078, column: 9)
!5535 = !DILocation(line: 1078, column: 9, scope: !5512)
!5536 = !DILocation(line: 1081, column: 22, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5512, file: !664, line: 1081, column: 9)
!5538 = !DILocation(line: 1081, column: 40, scope: !5537)
!5539 = !DILocation(line: 1081, column: 49, scope: !5537)
!5540 = !DILocation(line: 1082, column: 22, scope: !5537)
!5541 = !DILocation(line: 1082, column: 43, scope: !5537)
!5542 = !DILocation(line: 1081, column: 9, scope: !5512)
!5543 = !DILocation(line: 1085, column: 22, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5512, file: !664, line: 1085, column: 9)
!5545 = !DILocation(line: 1085, column: 45, scope: !5544)
!5546 = !DILocation(line: 1085, column: 76, scope: !5544)
!5547 = !DILocation(line: 1086, column: 22, scope: !5544)
!5548 = !DILocation(line: 1086, column: 48, scope: !5544)
!5549 = !DILocation(line: 1086, column: 79, scope: !5544)
!5550 = !DILocation(line: 1090, column: 22, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5512, file: !664, line: 1090, column: 9)
!5552 = !DILocation(line: 1090, column: 48, scope: !5551)
!5553 = !DILocation(line: 1090, column: 79, scope: !5551)
!5554 = !DILocation(line: 1091, column: 22, scope: !5551)
!5555 = !DILocation(line: 1091, column: 51, scope: !5551)
!5556 = !DILocation(line: 1091, column: 82, scope: !5551)
!5557 = !DILocation(line: 1092, column: 22, scope: !5551)
!5558 = !DILocation(line: 1092, column: 47, scope: !5551)
!5559 = !DILocation(line: 1092, column: 78, scope: !5551)
!5560 = !DILocation(line: 1098, column: 9, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5512, file: !664, line: 1098, column: 9)
!5562 = !DILocation(line: 1098, column: 36, scope: !5561)
!5563 = !DILocation(line: 1098, column: 9, scope: !5512)
!5564 = !DILocation(line: 1102, column: 22, scope: !5512)
!5565 = !DILocation(line: 1103, column: 22, scope: !5512)
!5566 = !DILocation(line: 1105, column: 14, scope: !5512)
!5567 = !DILocation(line: 1106, column: 16, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5512, file: !664, line: 1106, column: 9)
!5569 = !DILocation(line: 1106, column: 9, scope: !5512)
!5570 = !DILocation(line: 1107, column: 9, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5568, file: !664, line: 1106, column: 28)
!5572 = !DILocation(line: 1110, column: 62, scope: !5512)
!5573 = !DILocation(line: 1110, column: 40, scope: !5512)
!5574 = !DILocation(line: 1110, column: 25, scope: !5512)
!5575 = !DILocation(line: 1110, column: 38, scope: !5512)
!5576 = !DILocation(line: 1111, column: 44, scope: !5512)
!5577 = !DILocation(line: 1111, column: 25, scope: !5512)
!5578 = !DILocation(line: 1111, column: 30, scope: !5512)
!5579 = !DILocation(line: 1112, column: 14, scope: !5512)
!5580 = !DILocation(line: 1113, column: 16, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5512, file: !664, line: 1113, column: 9)
!5582 = !DILocation(line: 1113, column: 9, scope: !5512)
!5583 = !DILocation(line: 1114, column: 9, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5581, file: !664, line: 1113, column: 28)
!5585 = !DILocation(line: 1117, column: 61, scope: !5512)
!5586 = !DILocation(line: 1117, column: 14, scope: !5512)
!5587 = !DILocation(line: 1118, column: 16, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5512, file: !664, line: 1118, column: 9)
!5589 = !DILocation(line: 1118, column: 9, scope: !5512)
!5590 = !DILocation(line: 1119, column: 9, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5588, file: !664, line: 1118, column: 28)
!5592 = !DILocation(line: 1123, column: 14, scope: !5512)
!5593 = !DILocation(line: 1124, column: 16, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5512, file: !664, line: 1124, column: 9)
!5595 = !DILocation(line: 1124, column: 9, scope: !5512)
!5596 = !DILocation(line: 1125, column: 9, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5594, file: !664, line: 1124, column: 28)
!5598 = !DILocation(line: 1128, column: 62, scope: !5512)
!5599 = !DILocation(line: 1128, column: 40, scope: !5512)
!5600 = !DILocation(line: 1128, column: 38, scope: !5512)
!5601 = !DILocation(line: 1129, column: 44, scope: !5512)
!5602 = !DILocation(line: 1129, column: 30, scope: !5512)
!5603 = !DILocation(line: 1130, column: 14, scope: !5512)
!5604 = !DILocation(line: 1131, column: 16, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5512, file: !664, line: 1131, column: 9)
!5606 = !DILocation(line: 1131, column: 9, scope: !5512)
!5607 = !DILocation(line: 1132, column: 9, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5605, file: !664, line: 1131, column: 28)
!5609 = !DILocation(line: 1135, column: 61, scope: !5512)
!5610 = !DILocation(line: 1135, column: 14, scope: !5512)
!5611 = !DILocation(line: 1136, column: 16, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5512, file: !664, line: 1136, column: 9)
!5613 = !DILocation(line: 1136, column: 9, scope: !5512)
!5614 = !DILocation(line: 1137, column: 9, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5612, file: !664, line: 1136, column: 28)
!5616 = !DILocation(line: 1140, column: 64, scope: !5512)
!5617 = !DILocation(line: 1140, column: 14, scope: !5512)
!5618 = !DILocation(line: 1141, column: 16, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5512, file: !664, line: 1141, column: 9)
!5620 = !DILocation(line: 1141, column: 9, scope: !5512)
!5621 = !DILocation(line: 1142, column: 9, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5619, file: !664, line: 1141, column: 28)
!5623 = !DILocation(line: 1146, column: 18, scope: !5512)
!5624 = !DILocation(line: 1147, column: 66, scope: !5512)
!5625 = !DILocation(line: 1147, column: 34, scope: !5512)
!5626 = !DILocation(line: 1147, column: 52, scope: !5512)
!5627 = !DILocation(line: 1148, column: 71, scope: !5512)
!5628 = !DILocation(line: 1148, column: 34, scope: !5512)
!5629 = !DILocation(line: 1148, column: 57, scope: !5512)
!5630 = !DILocation(line: 1149, column: 74, scope: !5512)
!5631 = !DILocation(line: 1149, column: 34, scope: !5512)
!5632 = !DILocation(line: 1149, column: 60, scope: !5512)
!5633 = !DILocation(line: 1150, column: 73, scope: !5512)
!5634 = !DILocation(line: 1150, column: 34, scope: !5512)
!5635 = !DILocation(line: 1150, column: 59, scope: !5512)
!5636 = !DILocation(line: 1151, column: 69, scope: !5512)
!5637 = !DILocation(line: 1151, column: 34, scope: !5512)
!5638 = !DILocation(line: 1151, column: 55, scope: !5512)
!5639 = !DILocation(line: 1152, column: 74, scope: !5512)
!5640 = !DILocation(line: 1152, column: 34, scope: !5512)
!5641 = !DILocation(line: 1152, column: 60, scope: !5512)
!5642 = !DILocation(line: 1153, column: 77, scope: !5512)
!5643 = !DILocation(line: 1153, column: 34, scope: !5512)
!5644 = !DILocation(line: 1153, column: 63, scope: !5512)
!5645 = !DILocation(line: 1154, column: 5, scope: !5512)
!5646 = !DILocation(line: 1156, column: 5, scope: !5512)
!5647 = !DILocation(line: 1157, column: 1, scope: !5512)
!5648 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !2551, file: !2551, line: 52, type: !5649, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !5706)
!5649 = !DISubroutineType(types: !5650)
!5650 = !{null, !5651, !61}
!5651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5652, size: 32)
!5652 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !5653)
!5653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !5654)
!5654 = !{!5655, !5661, !5666, !5672, !5673, !5678, !5683, !5684, !5689, !5690, !5691, !5692, !5693, !5694, !5695, !5696, !5697, !5698, !5699, !5700, !5701, !5702, !5703, !5704, !5705}
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !5653, file: !56, line: 547, baseType: !5656, size: 32)
!5656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5653, file: !56, line: 543, size: 32, elements: !5657)
!5657 = !{!5658, !5659, !5660}
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !5656, file: !56, line: 544, baseType: !272, size: 32)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !5656, file: !56, line: 545, baseType: !60, size: 32)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !5656, file: !56, line: 546, baseType: !60, size: 32)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !5653, file: !56, line: 551, baseType: !5662, size: 32, offset: 32)
!5662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5653, file: !56, line: 548, size: 32, elements: !5663)
!5663 = !{!5664, !5665}
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !5662, file: !56, line: 549, baseType: !60, size: 32)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !5662, file: !56, line: 550, baseType: !60, size: 32)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !5653, file: !56, line: 556, baseType: !5667, size: 32, offset: 64)
!5667 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5653, file: !56, line: 552, size: 32, elements: !5668)
!5668 = !{!5669, !5670, !5671}
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !5667, file: !56, line: 553, baseType: !272, size: 32)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !5667, file: !56, line: 554, baseType: !60, size: 32)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !5667, file: !56, line: 555, baseType: !60, size: 32)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !5653, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !5653, file: !56, line: 561, baseType: !5674, size: 32, offset: 128)
!5674 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5653, file: !56, line: 558, size: 32, elements: !5675)
!5675 = !{!5676, !5677}
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !5674, file: !56, line: 559, baseType: !60, size: 32)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !5674, file: !56, line: 560, baseType: !60, size: 32)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !5653, file: !56, line: 565, baseType: !5679, size: 32, offset: 160)
!5679 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5653, file: !56, line: 562, size: 32, elements: !5680)
!5680 = !{!5681, !5682}
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !5679, file: !56, line: 563, baseType: !272, size: 32)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !5679, file: !56, line: 564, baseType: !60, size: 32)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !5653, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !5653, file: !56, line: 570, baseType: !5685, size: 32, offset: 224)
!5685 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5653, file: !56, line: 567, size: 32, elements: !5686)
!5686 = !{!5687, !5688}
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !5685, file: !56, line: 568, baseType: !60, size: 32)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !5685, file: !56, line: 569, baseType: !60, size: 32)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !5653, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !5653, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !5653, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !5653, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !5653, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !5653, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !5653, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !5653, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !5653, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !5653, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !5653, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !5653, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !5653, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !5653, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !5653, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !5653, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !5653, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!5706 = !{!5707, !5708, !5709, !5710, !5711, !5712, !5713, !5714, !5715, !5716, !5717, !5721}
!5707 = !DILocalVariable(name: "uartx", arg: 1, scope: !5648, file: !2551, line: 52, type: !5651)
!5708 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !5648, file: !2551, line: 52, type: !61)
!5709 = !DILocalVariable(name: "uart_clock", scope: !5648, file: !2551, line: 54, type: !61)
!5710 = !DILocalVariable(name: "integer", scope: !5648, file: !2551, line: 54, type: !61)
!5711 = !DILocalVariable(name: "remainder", scope: !5648, file: !2551, line: 54, type: !61)
!5712 = !DILocalVariable(name: "fraction", scope: !5648, file: !2551, line: 54, type: !61)
!5713 = !DILocalVariable(name: "dll_dlm", scope: !5648, file: !2551, line: 55, type: !61)
!5714 = !DILocalVariable(name: "sample_count", scope: !5648, file: !2551, line: 55, type: !61)
!5715 = !DILocalVariable(name: "sample_point", scope: !5648, file: !2551, line: 55, type: !61)
!5716 = !DILocalVariable(name: "temp_lcr", scope: !5648, file: !2551, line: 55, type: !61)
!5717 = !DILocalVariable(name: "fraction_L_mapping", scope: !5648, file: !2551, line: 56, type: !5718)
!5718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !5719)
!5719 = !{!5720}
!5720 = !DISubrange(count: 10)
!5721 = !DILocalVariable(name: "fraction_M_mapping", scope: !5648, file: !2551, line: 57, type: !5718)
!5722 = !DILocation(line: 0, scope: !5648)
!5723 = !DILocation(line: 56, column: 14, scope: !5648)
!5724 = !DILocation(line: 57, column: 5, scope: !5648)
!5725 = !DILocation(line: 57, column: 14, scope: !5648)
!5726 = !DILocation(line: 59, column: 12, scope: !5648)
!5727 = !DILocation(line: 59, column: 23, scope: !5648)
!5728 = !DILocation(line: 60, column: 12, scope: !5648)
!5729 = !DILocation(line: 60, column: 22, scope: !5648)
!5730 = !DILocation(line: 61, column: 12, scope: !5648)
!5731 = !DILocation(line: 61, column: 22, scope: !5648)
!5732 = !DILocation(line: 63, column: 9, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5648, file: !2551, line: 63, column: 9)
!5734 = !DILocation(line: 63, column: 9, scope: !5648)
!5735 = !DILocation(line: 64, column: 22, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5733, file: !2551, line: 63, column: 37)
!5737 = !DILocation(line: 64, column: 45, scope: !5736)
!5738 = !DILocation(line: 65, column: 5, scope: !5736)
!5739 = !DILocation(line: 0, scope: !5733)
!5740 = !DILocation(line: 69, column: 45, scope: !5648)
!5741 = !DILocation(line: 69, column: 26, scope: !5648)
!5742 = !DILocation(line: 70, column: 30, scope: !5648)
!5743 = !DILocation(line: 70, column: 36, scope: !5648)
!5744 = !DILocation(line: 70, column: 63, scope: !5648)
!5745 = !DILocation(line: 71, column: 20, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5648, file: !2551, line: 71, column: 9)
!5747 = !DILocation(line: 71, column: 26, scope: !5746)
!5748 = !DILocation(line: 77, column: 5, scope: !5648)
!5749 = !DILocation(line: 77, column: 25, scope: !5648)
!5750 = !DILocation(line: 78, column: 16, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5648, file: !2551, line: 77, column: 32)
!5752 = distinct !{!5752, !5748, !5753}
!5753 = !DILocation(line: 80, column: 5, scope: !5648)
!5754 = !DILocation(line: 82, column: 35, scope: !5648)
!5755 = !DILocation(line: 82, column: 66, scope: !5648)
!5756 = !DILocation(line: 84, column: 18, scope: !5648)
!5757 = !DILocation(line: 85, column: 34, scope: !5648)
!5758 = !DILocation(line: 85, column: 39, scope: !5648)
!5759 = !DILocation(line: 87, column: 12, scope: !5648)
!5760 = !DILocation(line: 87, column: 22, scope: !5648)
!5761 = !DILocation(line: 89, column: 23, scope: !5648)
!5762 = !DILocation(line: 90, column: 27, scope: !5648)
!5763 = !DILocation(line: 90, column: 16, scope: !5648)
!5764 = !DILocation(line: 91, column: 38, scope: !5648)
!5765 = !DILocation(line: 91, column: 24, scope: !5648)
!5766 = !DILocation(line: 91, column: 28, scope: !5648)
!5767 = !DILocation(line: 92, column: 35, scope: !5648)
!5768 = !DILocation(line: 92, column: 41, scope: !5648)
!5769 = !DILocation(line: 92, column: 20, scope: !5648)
!5770 = !DILocation(line: 92, column: 24, scope: !5648)
!5771 = !DILocation(line: 93, column: 16, scope: !5648)
!5772 = !DILocation(line: 95, column: 12, scope: !5648)
!5773 = !DILocation(line: 95, column: 25, scope: !5648)
!5774 = !DILocation(line: 96, column: 12, scope: !5648)
!5775 = !DILocation(line: 96, column: 25, scope: !5648)
!5776 = !DILocation(line: 98, column: 24, scope: !5648)
!5777 = !DILocation(line: 98, column: 22, scope: !5648)
!5778 = !DILocation(line: 99, column: 24, scope: !5648)
!5779 = !DILocation(line: 99, column: 22, scope: !5648)
!5780 = !DILocation(line: 101, column: 25, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5648, file: !2551, line: 101, column: 9)
!5782 = !DILocation(line: 101, column: 9, scope: !5648)
!5783 = !DILocation(line: 102, column: 16, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5781, file: !2551, line: 101, column: 37)
!5785 = !DILocation(line: 102, column: 22, scope: !5784)
!5786 = !DILocation(line: 103, column: 5, scope: !5784)
!5787 = !DILocation(line: 104, column: 1, scope: !5648)
!5788 = distinct !DISubprogram(name: "uart_set_format", scope: !2551, file: !2551, line: 106, type: !5789, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !5791)
!5789 = !DISubroutineType(types: !5790)
!5790 = !{null, !5651, !4855, !4857, !4859}
!5791 = !{!5792, !5793, !5794, !5795, !5796}
!5792 = !DILocalVariable(name: "uartx", arg: 1, scope: !5788, file: !2551, line: 106, type: !5651)
!5793 = !DILocalVariable(name: "word_length", arg: 2, scope: !5788, file: !2551, line: 107, type: !4855)
!5794 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !5788, file: !2551, line: 108, type: !4857)
!5795 = !DILocalVariable(name: "parity", arg: 4, scope: !5788, file: !2551, line: 109, type: !4859)
!5796 = !DILocalVariable(name: "byte", scope: !5788, file: !2551, line: 111, type: !1068)
!5797 = !DILocation(line: 0, scope: !5788)
!5798 = !DILocation(line: 114, column: 19, scope: !5788)
!5799 = !DILocation(line: 115, column: 16, scope: !5788)
!5800 = !DILocation(line: 118, column: 10, scope: !5788)
!5801 = !DILocation(line: 119, column: 5, scope: !5788)
!5802 = !DILocation(line: 124, column: 18, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5788, file: !2551, line: 119, column: 26)
!5804 = !DILocation(line: 125, column: 13, scope: !5803)
!5805 = !DILocation(line: 127, column: 18, scope: !5803)
!5806 = !DILocation(line: 128, column: 13, scope: !5803)
!5807 = !DILocation(line: 130, column: 18, scope: !5803)
!5808 = !DILocation(line: 131, column: 13, scope: !5803)
!5809 = !DILocation(line: 137, column: 10, scope: !5788)
!5810 = !DILocation(line: 138, column: 5, scope: !5788)
!5811 = !DILocation(line: 151, column: 5, scope: !5788)
!5812 = !DILocation(line: 166, column: 18, scope: !5788)
!5813 = !DILocation(line: 166, column: 16, scope: !5788)
!5814 = !DILocation(line: 167, column: 1, scope: !5788)
!5815 = distinct !DISubprogram(name: "uart_put_char_block", scope: !2551, file: !2551, line: 169, type: !5816, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !5818)
!5816 = !DISubroutineType(types: !5817)
!5817 = !{null, !5651, !356}
!5818 = !{!5819, !5820, !5821}
!5819 = !DILocalVariable(name: "uartx", arg: 1, scope: !5815, file: !2551, line: 169, type: !5651)
!5820 = !DILocalVariable(name: "byte", arg: 2, scope: !5815, file: !2551, line: 169, type: !356)
!5821 = !DILocalVariable(name: "LSR", scope: !5815, file: !2551, line: 171, type: !1068)
!5822 = !DILocation(line: 0, scope: !5815)
!5823 = !DILocation(line: 173, column: 5, scope: !5815)
!5824 = !DILocation(line: 174, column: 31, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5815, file: !2551, line: 173, column: 15)
!5826 = !DILocation(line: 175, column: 17, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5825, file: !2551, line: 175, column: 13)
!5828 = !DILocation(line: 175, column: 13, scope: !5825)
!5829 = distinct !{!5829, !5823, !5830}
!5830 = !DILocation(line: 179, column: 5, scope: !5815)
!5831 = !DILocation(line: 176, column: 38, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5827, file: !2551, line: 175, column: 39)
!5833 = !DILocation(line: 176, column: 32, scope: !5832)
!5834 = !DILocation(line: 176, column: 36, scope: !5832)
!5835 = !DILocation(line: 180, column: 1, scope: !5815)
!5836 = distinct !DISubprogram(name: "uart_get_char_block", scope: !2551, file: !2551, line: 182, type: !5837, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !5839)
!5837 = !DISubroutineType(types: !5838)
!5838 = !{!356, !5651}
!5839 = !{!5840, !5841, !5842}
!5840 = !DILocalVariable(name: "uartx", arg: 1, scope: !5836, file: !2551, line: 182, type: !5651)
!5841 = !DILocalVariable(name: "LSR", scope: !5836, file: !2551, line: 184, type: !1068)
!5842 = !DILocalVariable(name: "byte", scope: !5836, file: !2551, line: 185, type: !356)
!5843 = !DILocation(line: 0, scope: !5836)
!5844 = !DILocation(line: 187, column: 5, scope: !5836)
!5845 = !DILocation(line: 188, column: 31, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5836, file: !2551, line: 187, column: 15)
!5847 = !DILocation(line: 189, column: 17, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5846, file: !2551, line: 189, column: 13)
!5849 = !DILocation(line: 189, column: 13, scope: !5846)
!5850 = distinct !{!5850, !5844, !5851}
!5851 = !DILocation(line: 193, column: 5, scope: !5836)
!5852 = !DILocation(line: 190, column: 48, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5848, file: !2551, line: 189, column: 37)
!5854 = !DILocation(line: 190, column: 20, scope: !5853)
!5855 = !DILocation(line: 195, column: 5, scope: !5836)
!5856 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !2551, file: !2551, line: 198, type: !5857, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !5859)
!5857 = !DISubroutineType(types: !5858)
!5858 = !{!61, !5651}
!5859 = !{!5860, !5861, !5862}
!5860 = !DILocalVariable(name: "uartx", arg: 1, scope: !5856, file: !2551, line: 198, type: !5651)
!5861 = !DILocalVariable(name: "LSR", scope: !5856, file: !2551, line: 200, type: !1068)
!5862 = !DILocalVariable(name: "value", scope: !5856, file: !2551, line: 201, type: !61)
!5863 = !DILocation(line: 0, scope: !5856)
!5864 = !DILocation(line: 203, column: 27, scope: !5856)
!5865 = !DILocation(line: 204, column: 13, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5856, file: !2551, line: 204, column: 9)
!5867 = !DILocation(line: 204, column: 9, scope: !5856)
!5868 = !DILocation(line: 205, column: 36, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5866, file: !2551, line: 204, column: 33)
!5870 = !DILocation(line: 206, column: 5, scope: !5869)
!5871 = !DILocation(line: 0, scope: !5866)
!5872 = !DILocation(line: 210, column: 5, scope: !5856)
!5873 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !2551, file: !2551, line: 213, type: !5874, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !5876)
!5874 = !DISubroutineType(types: !5875)
!5875 = !{null, !5651}
!5876 = !{!5877, !5878, !5879}
!5877 = !DILocalVariable(name: "uartx", arg: 1, scope: !5873, file: !2551, line: 213, type: !5651)
!5878 = !DILocalVariable(name: "EFR", scope: !5873, file: !2551, line: 215, type: !1068)
!5879 = !DILocalVariable(name: "LCR", scope: !5873, file: !2551, line: 215, type: !1068)
!5880 = !DILocation(line: 0, scope: !5873)
!5881 = !DILocation(line: 217, column: 18, scope: !5873)
!5882 = !DILocation(line: 219, column: 16, scope: !5873)
!5883 = !DILocation(line: 220, column: 30, scope: !5873)
!5884 = !DILocation(line: 222, column: 30, scope: !5873)
!5885 = !DILocation(line: 222, column: 28, scope: !5873)
!5886 = !DILocation(line: 223, column: 12, scope: !5873)
!5887 = !DILocation(line: 223, column: 22, scope: !5873)
!5888 = !DILocation(line: 225, column: 16, scope: !5873)
!5889 = !DILocation(line: 226, column: 21, scope: !5873)
!5890 = !DILocation(line: 226, column: 25, scope: !5873)
!5891 = !DILocation(line: 228, column: 18, scope: !5873)
!5892 = !DILocation(line: 228, column: 16, scope: !5873)
!5893 = !DILocation(line: 229, column: 1, scope: !5873)
!5894 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !2551, file: !2551, line: 231, type: !5895, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !5897)
!5895 = !DISubroutineType(types: !5896)
!5896 = !{null, !5651, !356, !356, !356}
!5897 = !{!5898, !5899, !5900, !5901, !5902, !5903}
!5898 = !DILocalVariable(name: "uartx", arg: 1, scope: !5894, file: !2551, line: 231, type: !5651)
!5899 = !DILocalVariable(name: "xon", arg: 2, scope: !5894, file: !2551, line: 232, type: !356)
!5900 = !DILocalVariable(name: "xoff", arg: 3, scope: !5894, file: !2551, line: 233, type: !356)
!5901 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5894, file: !2551, line: 234, type: !356)
!5902 = !DILocalVariable(name: "EFR", scope: !5894, file: !2551, line: 236, type: !1068)
!5903 = !DILocalVariable(name: "LCR", scope: !5894, file: !2551, line: 236, type: !1068)
!5904 = !DILocation(line: 0, scope: !5894)
!5905 = !DILocation(line: 238, column: 18, scope: !5894)
!5906 = !DILocation(line: 240, column: 16, scope: !5894)
!5907 = !DILocation(line: 241, column: 28, scope: !5894)
!5908 = !DILocation(line: 241, column: 21, scope: !5894)
!5909 = !DILocation(line: 241, column: 26, scope: !5894)
!5910 = !DILocation(line: 242, column: 20, scope: !5894)
!5911 = !DILocation(line: 242, column: 12, scope: !5894)
!5912 = !DILocation(line: 242, column: 18, scope: !5894)
!5913 = !DILocation(line: 243, column: 30, scope: !5894)
!5914 = !DILocation(line: 245, column: 30, scope: !5894)
!5915 = !DILocation(line: 245, column: 28, scope: !5894)
!5916 = !DILocation(line: 246, column: 25, scope: !5894)
!5917 = !DILocation(line: 246, column: 12, scope: !5894)
!5918 = !DILocation(line: 246, column: 23, scope: !5894)
!5919 = !DILocation(line: 247, column: 12, scope: !5894)
!5920 = !DILocation(line: 247, column: 22, scope: !5894)
!5921 = !DILocation(line: 249, column: 18, scope: !5894)
!5922 = !DILocation(line: 249, column: 16, scope: !5894)
!5923 = !DILocation(line: 250, column: 1, scope: !5894)
!5924 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !2551, file: !2551, line: 252, type: !5874, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !5925)
!5925 = !{!5926, !5927}
!5926 = !DILocalVariable(name: "uartx", arg: 1, scope: !5924, file: !2551, line: 252, type: !5651)
!5927 = !DILocalVariable(name: "LCR", scope: !5924, file: !2551, line: 254, type: !1068)
!5928 = !DILocation(line: 0, scope: !5924)
!5929 = !DILocation(line: 256, column: 18, scope: !5924)
!5930 = !DILocation(line: 258, column: 16, scope: !5924)
!5931 = !DILocation(line: 259, column: 24, scope: !5924)
!5932 = !DILocation(line: 259, column: 28, scope: !5924)
!5933 = !DILocation(line: 261, column: 16, scope: !5924)
!5934 = !DILocation(line: 262, column: 18, scope: !5924)
!5935 = !DILocation(line: 262, column: 16, scope: !5924)
!5936 = !DILocation(line: 263, column: 1, scope: !5924)
!5937 = distinct !DISubprogram(name: "uart_set_fifo", scope: !2551, file: !2551, line: 265, type: !5874, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !5938)
!5938 = !{!5939, !5940, !5941}
!5939 = !DILocalVariable(name: "uartx", arg: 1, scope: !5937, file: !2551, line: 265, type: !5651)
!5940 = !DILocalVariable(name: "EFR", scope: !5937, file: !2551, line: 267, type: !1068)
!5941 = !DILocalVariable(name: "LCR", scope: !5937, file: !2551, line: 267, type: !1068)
!5942 = !DILocation(line: 0, scope: !5937)
!5943 = !DILocation(line: 269, column: 18, scope: !5937)
!5944 = !DILocation(line: 271, column: 16, scope: !5937)
!5945 = !DILocation(line: 272, column: 30, scope: !5937)
!5946 = !DILocation(line: 274, column: 30, scope: !5937)
!5947 = !DILocation(line: 274, column: 28, scope: !5937)
!5948 = !DILocation(line: 276, column: 16, scope: !5937)
!5949 = !DILocation(line: 277, column: 28, scope: !5937)
!5950 = !DILocation(line: 283, column: 18, scope: !5937)
!5951 = !DILocation(line: 283, column: 16, scope: !5937)
!5952 = !DILocation(line: 284, column: 1, scope: !5937)
!5953 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !2551, file: !2551, line: 307, type: !5874, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !5954)
!5954 = !{!5955, !5956, !5957}
!5955 = !DILocalVariable(name: "uartx", arg: 1, scope: !5953, file: !2551, line: 307, type: !5651)
!5956 = !DILocalVariable(name: "IER", scope: !5953, file: !2551, line: 309, type: !1068)
!5957 = !DILocalVariable(name: "LCR", scope: !5953, file: !2551, line: 309, type: !1068)
!5958 = !DILocation(line: 0, scope: !5953)
!5959 = !DILocation(line: 311, column: 18, scope: !5953)
!5960 = !DILocation(line: 313, column: 16, scope: !5953)
!5961 = !DILocation(line: 314, column: 26, scope: !5953)
!5962 = !DILocation(line: 316, column: 26, scope: !5953)
!5963 = !DILocation(line: 316, column: 24, scope: !5953)
!5964 = !DILocation(line: 318, column: 19, scope: !5953)
!5965 = !DILocation(line: 318, column: 16, scope: !5953)
!5966 = !DILocation(line: 319, column: 1, scope: !5953)
!5967 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !2551, file: !2551, line: 321, type: !5968, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !5970)
!5968 = !DISubroutineType(types: !5969)
!5969 = !{null, !5651, !974}
!5970 = !{!5971, !5972, !5973}
!5971 = !DILocalVariable(name: "uartx", arg: 1, scope: !5967, file: !2551, line: 321, type: !5651)
!5972 = !DILocalVariable(name: "is_rx", arg: 2, scope: !5967, file: !2551, line: 321, type: !974)
!5973 = !DILocalVariable(name: "FCR", scope: !5967, file: !2551, line: 323, type: !1068)
!5974 = !DILocation(line: 0, scope: !5967)
!5975 = !DILocation(line: 327, column: 9, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5967, file: !2551, line: 327, column: 9)
!5977 = !DILocation(line: 333, column: 24, scope: !5967)
!5978 = !DILocation(line: 333, column: 28, scope: !5967)
!5979 = !DILocation(line: 334, column: 1, scope: !5967)
!5980 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !2551, file: !2551, line: 336, type: !5981, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !5984)
!5981 = !DISubroutineType(types: !5982)
!5982 = !{!5983, !5651}
!5983 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !765, line: 55, baseType: !821)
!5984 = !{!5985, !5986, !5987, !5988}
!5985 = !DILocalVariable(name: "uartx", arg: 1, scope: !5980, file: !2551, line: 336, type: !5651)
!5986 = !DILocalVariable(name: "IIR", scope: !5980, file: !2551, line: 338, type: !1068)
!5987 = !DILocalVariable(name: "LSR", scope: !5980, file: !2551, line: 338, type: !1068)
!5988 = !DILocalVariable(name: "type", scope: !5980, file: !2551, line: 339, type: !5983)
!5989 = !DILocation(line: 0, scope: !5980)
!5990 = !DILocation(line: 341, column: 30, scope: !5980)
!5991 = !DILocation(line: 342, column: 13, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5980, file: !2551, line: 342, column: 9)
!5993 = !DILocation(line: 342, column: 9, scope: !5980)
!5994 = !DILocation(line: 346, column: 17, scope: !5980)
!5995 = !DILocation(line: 346, column: 5, scope: !5980)
!5996 = !DILocation(line: 350, column: 13, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5980, file: !2551, line: 346, column: 37)
!5998 = !DILocation(line: 353, column: 35, scope: !5997)
!5999 = !DILocation(line: 354, column: 21, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5997, file: !2551, line: 354, column: 17)
!6001 = !DILocation(line: 363, column: 13, scope: !5997)
!6002 = !DILocation(line: 369, column: 1, scope: !5980)
!6003 = distinct !DISubprogram(name: "uart_verify_error", scope: !2551, file: !2551, line: 371, type: !6004, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !6006)
!6004 = !DISubroutineType(types: !6005)
!6005 = !{!974, !5651}
!6006 = !{!6007, !6008, !6009}
!6007 = !DILocalVariable(name: "uartx", arg: 1, scope: !6003, file: !2551, line: 371, type: !5651)
!6008 = !DILocalVariable(name: "LSR", scope: !6003, file: !2551, line: 373, type: !1068)
!6009 = !DILocalVariable(name: "ret", scope: !6003, file: !2551, line: 374, type: !974)
!6010 = !DILocation(line: 0, scope: !6003)
!6011 = !DILocation(line: 376, column: 27, scope: !6003)
!6012 = !DILocation(line: 377, column: 15, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6003, file: !2551, line: 377, column: 9)
!6014 = !DILocation(line: 377, column: 9, scope: !6003)
!6015 = !DILocation(line: 381, column: 5, scope: !6003)
!6016 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !2551, file: !2551, line: 384, type: !5874, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !6017)
!6017 = !{!6018, !6019}
!6018 = !DILocalVariable(name: "uartx", arg: 1, scope: !6016, file: !2551, line: 384, type: !5651)
!6019 = !DILocalVariable(name: "DMA_EN", scope: !6016, file: !2551, line: 386, type: !1068)
!6020 = !DILocation(line: 0, scope: !6016)
!6021 = !DILocation(line: 388, column: 21, scope: !6016)
!6022 = !DILocation(line: 390, column: 1, scope: !6016)
!6023 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !2551, file: !2551, line: 392, type: !5874, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !6024)
!6024 = !{!6025}
!6025 = !DILocalVariable(name: "uartx", arg: 1, scope: !6023, file: !2551, line: 392, type: !5651)
!6026 = !DILocation(line: 0, scope: !6023)
!6027 = !DILocation(line: 394, column: 12, scope: !6023)
!6028 = !DILocation(line: 394, column: 16, scope: !6023)
!6029 = !DILocation(line: 395, column: 24, scope: !6023)
!6030 = !DILocation(line: 395, column: 28, scope: !6023)
!6031 = !DILocation(line: 396, column: 21, scope: !6023)
!6032 = !DILocation(line: 396, column: 26, scope: !6023)
!6033 = !DILocation(line: 397, column: 12, scope: !6023)
!6034 = !DILocation(line: 397, column: 18, scope: !6023)
!6035 = !DILocation(line: 399, column: 16, scope: !6023)
!6036 = !DILocation(line: 400, column: 24, scope: !6023)
!6037 = !DILocation(line: 400, column: 28, scope: !6023)
!6038 = !DILocation(line: 401, column: 20, scope: !6023)
!6039 = !DILocation(line: 401, column: 24, scope: !6023)
!6040 = !DILocation(line: 403, column: 16, scope: !6023)
!6041 = !DILocation(line: 404, column: 24, scope: !6023)
!6042 = !DILocation(line: 405, column: 28, scope: !6023)
!6043 = !DILocation(line: 407, column: 16, scope: !6023)
!6044 = !DILocation(line: 408, column: 28, scope: !6023)
!6045 = !DILocation(line: 409, column: 16, scope: !6023)
!6046 = !DILocation(line: 411, column: 25, scope: !6023)
!6047 = !DILocation(line: 412, column: 22, scope: !6023)
!6048 = !DILocation(line: 412, column: 26, scope: !6023)
!6049 = !DILocation(line: 413, column: 12, scope: !6023)
!6050 = !DILocation(line: 413, column: 24, scope: !6023)
!6051 = !DILocation(line: 414, column: 12, scope: !6023)
!6052 = !DILocation(line: 414, column: 22, scope: !6023)
!6053 = !DILocation(line: 415, column: 12, scope: !6023)
!6054 = !DILocation(line: 415, column: 25, scope: !6023)
!6055 = !DILocation(line: 416, column: 12, scope: !6023)
!6056 = !DILocation(line: 416, column: 25, scope: !6023)
!6057 = !DILocation(line: 417, column: 12, scope: !6023)
!6058 = !DILocation(line: 417, column: 23, scope: !6023)
!6059 = !DILocation(line: 418, column: 12, scope: !6023)
!6060 = !DILocation(line: 418, column: 27, scope: !6023)
!6061 = !DILocation(line: 419, column: 12, scope: !6023)
!6062 = !DILocation(line: 419, column: 18, scope: !6023)
!6063 = !DILocation(line: 420, column: 12, scope: !6023)
!6064 = !DILocation(line: 420, column: 23, scope: !6023)
!6065 = !DILocation(line: 421, column: 12, scope: !6023)
!6066 = !DILocation(line: 421, column: 22, scope: !6023)
!6067 = !DILocation(line: 422, column: 12, scope: !6023)
!6068 = !DILocation(line: 422, column: 21, scope: !6023)
!6069 = !DILocation(line: 423, column: 12, scope: !6023)
!6070 = !DILocation(line: 423, column: 19, scope: !6023)
!6071 = !DILocation(line: 424, column: 23, scope: !6023)
!6072 = !DILocation(line: 425, column: 12, scope: !6023)
!6073 = !DILocation(line: 425, column: 22, scope: !6023)
!6074 = !DILocation(line: 426, column: 12, scope: !6023)
!6075 = !DILocation(line: 426, column: 22, scope: !6023)
!6076 = !DILocation(line: 427, column: 1, scope: !6023)
!6077 = distinct !DISubprogram(name: "uart_query_empty", scope: !2551, file: !2551, line: 429, type: !5874, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !6078)
!6078 = !{!6079}
!6079 = !DILocalVariable(name: "uartx", arg: 1, scope: !6077, file: !2551, line: 429, type: !5651)
!6080 = !DILocation(line: 0, scope: !6077)
!6081 = !DILocation(line: 431, column: 5, scope: !6077)
!6082 = !DILocation(line: 431, column: 31, scope: !6077)
!6083 = !DILocation(line: 431, column: 36, scope: !6077)
!6084 = !DILocation(line: 431, column: 12, scope: !6077)
!6085 = distinct !{!6085, !6081, !6086}
!6086 = !DILocation(line: 431, column: 44, scope: !6077)
!6087 = !DILocation(line: 432, column: 1, scope: !6077)
!6088 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !819, file: !819, line: 134, type: !6089, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !818, retainedNodes: !6091)
!6089 = !DISubroutineType(types: !6090)
!6090 = !{!4606, !770, !974}
!6091 = !{!6092, !6093, !6094}
!6092 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6088, file: !819, line: 134, type: !770)
!6093 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6088, file: !819, line: 134, type: !974)
!6094 = !DILocalVariable(name: "dma_channel", scope: !6088, file: !819, line: 136, type: !4606)
!6095 = !DILocation(line: 0, scope: !6088)
!6096 = !DILocation(line: 138, column: 5, scope: !6088)
!6097 = !DILocation(line: 140, column: 17, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6099, file: !819, line: 140, column: 17)
!6099 = distinct !DILexicalBlock(scope: !6088, file: !819, line: 138, column: 24)
!6100 = !DILocation(line: 147, column: 17, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6099, file: !819, line: 147, column: 17)
!6102 = !DILocation(line: 154, column: 17, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6099, file: !819, line: 154, column: 17)
!6104 = !DILocation(line: 161, column: 17, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6099, file: !819, line: 161, column: 17)
!6106 = !DILocation(line: 171, column: 5, scope: !6088)
!6107 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !819, file: !819, line: 174, type: !6108, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !818, retainedNodes: !6116)
!6108 = !DISubroutineType(types: !6109)
!6109 = !{null, !4606, !6110}
!6110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6111, size: 32)
!6111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !765, line: 96, baseType: !6112)
!6112 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !765, line: 93, size: 64, elements: !6113)
!6113 = !{!6114, !6115}
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !6112, file: !765, line: 94, baseType: !91, size: 8)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !6112, file: !765, line: 95, baseType: !770, size: 32, offset: 32)
!6116 = !{!6117, !6118}
!6117 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !6107, file: !819, line: 174, type: !4606)
!6118 = !DILocalVariable(name: "user_data", arg: 2, scope: !6107, file: !819, line: 174, type: !6110)
!6119 = !DILocation(line: 0, scope: !6107)
!6120 = !DILocation(line: 176, column: 5, scope: !6107)
!6121 = !DILocation(line: 0, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6107, file: !819, line: 176, column: 26)
!6123 = !DILocation(line: 212, column: 1, scope: !6107)
!6124 = distinct !DISubprogram(name: "uart_enable_dma", scope: !819, file: !819, line: 214, type: !6125, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !818, retainedNodes: !6127)
!6125 = !DISubroutineType(types: !6126)
!6126 = !{null, !832}
!6127 = !{!6128}
!6128 = !DILocalVariable(name: "uartx", arg: 1, scope: !6124, file: !819, line: 214, type: !832)
!6129 = !DILocation(line: 0, scope: !6124)
!6130 = !DILocation(line: 216, column: 12, scope: !6124)
!6131 = !DILocation(line: 216, column: 19, scope: !6124)
!6132 = !DILocation(line: 217, column: 1, scope: !6124)
!6133 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !819, file: !819, line: 219, type: !986, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !818, retainedNodes: !6134)
!6134 = !{!6135, !6136, !6137, !6138}
!6135 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6133, file: !819, line: 219, type: !897)
!6136 = !DILocalVariable(name: "uart_port", scope: !6133, file: !819, line: 221, type: !770)
!6137 = !DILocalVariable(name: "type", scope: !6133, file: !819, line: 222, type: !5983)
!6138 = !DILocalVariable(name: "uartx", scope: !6133, file: !819, line: 223, type: !832)
!6139 = !DILocation(line: 0, scope: !6133)
!6140 = !DILocation(line: 225, column: 5, scope: !6133)
!6141 = !DILocation(line: 242, column: 13, scope: !6133)
!6142 = !DILocation(line: 243, column: 12, scope: !6133)
!6143 = !DILocation(line: 245, column: 5, scope: !6133)
!6144 = !DILocation(line: 248, column: 13, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6133, file: !819, line: 245, column: 19)
!6146 = !DILocation(line: 249, column: 13, scope: !6145)
!6147 = !DILocation(line: 252, column: 13, scope: !6145)
!6148 = !DILocation(line: 253, column: 13, scope: !6145)
!6149 = !DILocation(line: 263, column: 13, scope: !6145)
!6150 = !DILocation(line: 264, column: 13, scope: !6145)
!6151 = !DILocation(line: 276, column: 13, scope: !6145)
!6152 = !DILocation(line: 278, column: 1, scope: !6133)
!6153 = !DILocation(line: 131, column: 9, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !903, file: !904, line: 131, column: 9)
!6155 = !DILocation(line: 131, column: 9, scope: !903)
!6156 = !DILocation(line: 0, scope: !903)
!6157 = !DILocation(line: 134, column: 49, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6159, file: !904, line: 133, column: 46)
!6159 = distinct !DILexicalBlock(scope: !6160, file: !904, line: 133, column: 9)
!6160 = distinct !DILexicalBlock(scope: !6161, file: !904, line: 133, column: 9)
!6161 = distinct !DILexicalBlock(scope: !6154, file: !904, line: 131, column: 28)
!6162 = !DILocation(line: 134, column: 13, scope: !6158)
!6163 = !DILocation(line: 133, column: 42, scope: !6159)
!6164 = !DILocation(line: 133, column: 23, scope: !6159)
!6165 = !DILocation(line: 133, column: 9, scope: !6160)
!6166 = distinct !{!6166, !6165, !6167}
!6167 = !DILocation(line: 135, column: 9, scope: !6160)
!6168 = !DILocation(line: 136, column: 22, scope: !6161)
!6169 = !DILocation(line: 137, column: 5, scope: !6161)
!6170 = !DILocation(line: 138, column: 5, scope: !903)
!6171 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !913, file: !913, line: 1577, type: !6172, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6174)
!6172 = !DISubroutineType(types: !6173)
!6173 = !{null, !898, !61}
!6174 = !{!6175, !6176}
!6175 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6171, file: !913, line: 1577, type: !898)
!6176 = !DILocalVariable(name: "priority", arg: 2, scope: !6171, file: !913, line: 1577, type: !61)
!6177 = !DILocation(line: 0, scope: !6171)
!6178 = !DILocation(line: 1582, column: 34, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6180, file: !913, line: 1581, column: 8)
!6180 = distinct !DILexicalBlock(scope: !6171, file: !913, line: 1579, column: 6)
!6181 = !DILocation(line: 1582, column: 5, scope: !6179)
!6182 = !DILocation(line: 1582, column: 32, scope: !6179)
!6183 = !DILocation(line: 1583, column: 1, scope: !6171)
!6184 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !904, file: !904, line: 141, type: !6185, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6187)
!6185 = !DISubroutineType(types: !6186)
!6186 = !{!907, !897}
!6187 = !{!6188, !6189}
!6188 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6184, file: !904, line: 141, type: !897)
!6189 = !DILocalVariable(name: "status", scope: !6184, file: !904, line: 143, type: !907)
!6190 = !DILocation(line: 0, scope: !6184)
!6191 = !DILocation(line: 145, column: 40, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6184, file: !904, line: 145, column: 9)
!6193 = !DILocation(line: 149, column: 9, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6192, file: !904, line: 148, column: 12)
!6195 = !DILocation(line: 153, column: 5, scope: !6184)
!6196 = !DILocation(line: 154, column: 1, scope: !6184)
!6197 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !913, file: !913, line: 1494, type: !6198, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6200)
!6198 = !DISubroutineType(types: !6199)
!6199 = !{null, !898}
!6200 = !{!6201}
!6201 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6197, file: !913, line: 1494, type: !898)
!6202 = !DILocation(line: 0, scope: !6197)
!6203 = !DILocation(line: 1497, column: 91, scope: !6197)
!6204 = !DILocation(line: 1497, column: 61, scope: !6197)
!6205 = !DILocation(line: 1497, column: 40, scope: !6197)
!6206 = !DILocation(line: 1497, column: 3, scope: !6197)
!6207 = !DILocation(line: 1497, column: 46, scope: !6197)
!6208 = !DILocation(line: 1498, column: 1, scope: !6197)
!6209 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !904, file: !904, line: 156, type: !6185, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6210)
!6210 = !{!6211, !6212}
!6211 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6209, file: !904, line: 156, type: !897)
!6212 = !DILocalVariable(name: "status", scope: !6209, file: !904, line: 158, type: !907)
!6213 = !DILocation(line: 0, scope: !6209)
!6214 = !DILocation(line: 160, column: 40, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6209, file: !904, line: 160, column: 9)
!6216 = !DILocation(line: 164, column: 9, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6215, file: !904, line: 163, column: 12)
!6218 = !DILocation(line: 168, column: 5, scope: !6209)
!6219 = !DILocation(line: 169, column: 1, scope: !6209)
!6220 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !913, file: !913, line: 1507, type: !6198, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6221)
!6221 = !{!6222}
!6222 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6220, file: !913, line: 1507, type: !898)
!6223 = !DILocation(line: 0, scope: !6220)
!6224 = !DILocation(line: 1509, column: 65, scope: !6220)
!6225 = !DILocation(line: 1509, column: 44, scope: !6220)
!6226 = !DILocation(line: 1509, column: 32, scope: !6220)
!6227 = !DILocation(line: 1509, column: 3, scope: !6220)
!6228 = !DILocation(line: 1509, column: 39, scope: !6220)
!6229 = !DILocation(line: 1510, column: 1, scope: !6220)
!6230 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !904, file: !904, line: 171, type: !6231, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6233)
!6231 = !DISubroutineType(types: !6232)
!6232 = !{!61, !897}
!6233 = !{!6234, !6235}
!6234 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6230, file: !904, line: 171, type: !897)
!6235 = !DILocalVariable(name: "ret", scope: !6230, file: !904, line: 173, type: !61)
!6236 = !DILocation(line: 0, scope: !6230)
!6237 = !DILocation(line: 175, column: 40, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6230, file: !904, line: 175, column: 9)
!6239 = !DILocation(line: 178, column: 15, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6238, file: !904, line: 177, column: 12)
!6241 = !DILocation(line: 181, column: 5, scope: !6230)
!6242 = !DILocation(line: 182, column: 1, scope: !6230)
!6243 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !913, file: !913, line: 1523, type: !6244, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6246)
!6244 = !DISubroutineType(types: !6245)
!6245 = !{!61, !898}
!6246 = !{!6247}
!6247 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6243, file: !913, line: 1523, type: !898)
!6248 = !DILocation(line: 0, scope: !6243)
!6249 = !DILocation(line: 1525, column: 51, scope: !6243)
!6250 = !DILocation(line: 1525, column: 23, scope: !6243)
!6251 = !DILocation(line: 1525, column: 83, scope: !6243)
!6252 = !DILocation(line: 1525, column: 22, scope: !6243)
!6253 = !DILocation(line: 1525, column: 3, scope: !6243)
!6254 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !904, file: !904, line: 184, type: !6185, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6255)
!6255 = !{!6256, !6257}
!6256 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6254, file: !904, line: 184, type: !897)
!6257 = !DILocalVariable(name: "status", scope: !6254, file: !904, line: 186, type: !907)
!6258 = !DILocation(line: 0, scope: !6254)
!6259 = !DILocation(line: 188, column: 40, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6254, file: !904, line: 188, column: 9)
!6261 = !DILocation(line: 192, column: 9, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6260, file: !904, line: 191, column: 12)
!6263 = !DILocation(line: 196, column: 5, scope: !6254)
!6264 = !DILocation(line: 197, column: 1, scope: !6254)
!6265 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !913, file: !913, line: 1535, type: !6198, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6266)
!6266 = !{!6267}
!6267 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6265, file: !913, line: 1535, type: !898)
!6268 = !DILocation(line: 0, scope: !6265)
!6269 = !DILocation(line: 1537, column: 65, scope: !6265)
!6270 = !DILocation(line: 1537, column: 44, scope: !6265)
!6271 = !DILocation(line: 1537, column: 32, scope: !6265)
!6272 = !DILocation(line: 1537, column: 3, scope: !6265)
!6273 = !DILocation(line: 1537, column: 39, scope: !6265)
!6274 = !DILocation(line: 1538, column: 1, scope: !6265)
!6275 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !904, file: !904, line: 199, type: !6185, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6276)
!6276 = !{!6277, !6278}
!6277 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6275, file: !904, line: 199, type: !897)
!6278 = !DILocalVariable(name: "status", scope: !6275, file: !904, line: 201, type: !907)
!6279 = !DILocation(line: 0, scope: !6275)
!6280 = !DILocation(line: 203, column: 40, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6275, file: !904, line: 203, column: 9)
!6282 = !DILocation(line: 207, column: 9, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6281, file: !904, line: 206, column: 12)
!6284 = !DILocation(line: 211, column: 5, scope: !6275)
!6285 = !DILocation(line: 212, column: 1, scope: !6275)
!6286 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !913, file: !913, line: 1547, type: !6198, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6287)
!6287 = !{!6288}
!6288 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6286, file: !913, line: 1547, type: !898)
!6289 = !DILocation(line: 0, scope: !6286)
!6290 = !DILocation(line: 1549, column: 65, scope: !6286)
!6291 = !DILocation(line: 1549, column: 44, scope: !6286)
!6292 = !DILocation(line: 1549, column: 32, scope: !6286)
!6293 = !DILocation(line: 1549, column: 3, scope: !6286)
!6294 = !DILocation(line: 1549, column: 39, scope: !6286)
!6295 = !DILocation(line: 1550, column: 1, scope: !6286)
!6296 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !904, file: !904, line: 214, type: !6297, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6299)
!6297 = !DISubroutineType(types: !6298)
!6298 = !{!907, !897, !61}
!6299 = !{!6300, !6301, !6302}
!6300 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6296, file: !904, line: 214, type: !897)
!6301 = !DILocalVariable(name: "priority", arg: 2, scope: !6296, file: !904, line: 214, type: !61)
!6302 = !DILocalVariable(name: "status", scope: !6296, file: !904, line: 216, type: !907)
!6303 = !DILocation(line: 0, scope: !6296)
!6304 = !DILocation(line: 218, column: 40, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6296, file: !904, line: 218, column: 9)
!6306 = !DILocation(line: 222, column: 9, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6305, file: !904, line: 221, column: 12)
!6308 = !DILocation(line: 226, column: 5, scope: !6296)
!6309 = !DILocation(line: 227, column: 1, scope: !6296)
!6310 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !904, file: !904, line: 229, type: !6231, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6311)
!6311 = !{!6312, !6313}
!6312 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6310, file: !904, line: 229, type: !897)
!6313 = !DILocalVariable(name: "ret", scope: !6310, file: !904, line: 231, type: !61)
!6314 = !DILocation(line: 0, scope: !6310)
!6315 = !DILocation(line: 233, column: 40, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6310, file: !904, line: 233, column: 9)
!6317 = !DILocation(line: 236, column: 15, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6316, file: !904, line: 235, column: 12)
!6319 = !DILocation(line: 239, column: 5, scope: !6310)
!6320 = !DILocation(line: 240, column: 1, scope: !6310)
!6321 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !913, file: !913, line: 1597, type: !6244, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6322)
!6322 = !{!6323}
!6323 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6321, file: !913, line: 1597, type: !898)
!6324 = !DILocation(line: 0, scope: !6321)
!6325 = !DILocation(line: 1603, column: 23, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6327, file: !913, line: 1602, column: 8)
!6327 = distinct !DILexicalBlock(scope: !6321, file: !913, line: 1600, column: 6)
!6328 = !DILocation(line: 1603, column: 60, scope: !6326)
!6329 = !DILocation(line: 1604, column: 1, scope: !6321)
!6330 = distinct !DISubprogram(name: "isrC_main", scope: !904, file: !904, line: 248, type: !905, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6331)
!6331 = !{!6332, !6333}
!6332 = !DILocalVariable(name: "status", scope: !6330, file: !904, line: 250, type: !907)
!6333 = !DILocalVariable(name: "irq_number", scope: !6330, file: !904, line: 251, type: !897)
!6334 = !DILocation(line: 0, scope: !6330)
!6335 = !DILocation(line: 253, column: 5, scope: !6330)
!6336 = !DILocation(line: 255, column: 35, scope: !6330)
!6337 = !DILocation(line: 256, column: 40, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6330, file: !904, line: 256, column: 9)
!6339 = !DILocation(line: 259, column: 48, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6338, file: !904, line: 259, column: 16)
!6341 = !DILocation(line: 259, column: 62, scope: !6340)
!6342 = !DILocation(line: 259, column: 16, scope: !6338)
!6343 = !DILocation(line: 261, column: 9, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6340, file: !904, line: 259, column: 71)
!6345 = !DILocation(line: 262, column: 9, scope: !6344)
!6346 = !DILocation(line: 264, column: 55, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6340, file: !904, line: 263, column: 12)
!6348 = !DILocation(line: 264, column: 41, scope: !6347)
!6349 = !DILocation(line: 264, column: 53, scope: !6347)
!6350 = !DILocation(line: 265, column: 41, scope: !6347)
!6351 = !DILocation(line: 265, column: 9, scope: !6347)
!6352 = !DILocation(line: 269, column: 5, scope: !6330)
!6353 = !DILocation(line: 270, column: 1, scope: !6330)
!6354 = distinct !DISubprogram(name: "get_current_irq", scope: !904, file: !904, line: 242, type: !3805, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6355)
!6355 = !{!6356}
!6356 = !DILocalVariable(name: "irq_num", scope: !6354, file: !904, line: 244, type: !61)
!6357 = !DILocation(line: 244, column: 31, scope: !6354)
!6358 = !DILocation(line: 244, column: 36, scope: !6354)
!6359 = !DILocation(line: 0, scope: !6354)
!6360 = !DILocation(line: 245, column: 21, scope: !6354)
!6361 = !DILocation(line: 245, column: 5, scope: !6354)
!6362 = distinct !DISubprogram(name: "get_pending_irq", scope: !904, file: !904, line: 121, type: !3805, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !293)
!6363 = !DILocation(line: 123, column: 19, scope: !6362)
!6364 = !DILocation(line: 123, column: 51, scope: !6362)
!6365 = !DILocation(line: 123, column: 5, scope: !6362)
!6366 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !904, file: !904, line: 272, type: !6367, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6370)
!6367 = !DISubroutineType(types: !6368)
!6368 = !{!907, !897, !6369}
!6369 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !751, line: 175, baseType: !985)
!6370 = !{!6371, !6372, !6373}
!6371 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6366, file: !904, line: 272, type: !897)
!6372 = !DILocalVariable(name: "callback", arg: 2, scope: !6366, file: !904, line: 272, type: !6369)
!6373 = !DILocalVariable(name: "mask", scope: !6366, file: !904, line: 274, type: !61)
!6374 = !DILocation(line: 0, scope: !6366)
!6375 = !DILocation(line: 276, column: 40, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6366, file: !904, line: 276, column: 9)
!6377 = !DILocation(line: 280, column: 12, scope: !6366)
!6378 = !DILocation(line: 281, column: 5, scope: !6366)
!6379 = !DILocation(line: 282, column: 37, scope: !6366)
!6380 = !DILocation(line: 282, column: 51, scope: !6366)
!6381 = !DILocation(line: 283, column: 37, scope: !6366)
!6382 = !DILocation(line: 283, column: 49, scope: !6366)
!6383 = !DILocation(line: 284, column: 5, scope: !6366)
!6384 = !DILocation(line: 286, column: 5, scope: !6366)
!6385 = !DILocation(line: 287, column: 1, scope: !6366)
!6386 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !904, file: !904, line: 289, type: !6387, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6389)
!6387 = !DISubroutineType(types: !6388)
!6388 = !{!907, !1036}
!6389 = !{!6390}
!6390 = !DILocalVariable(name: "mask", arg: 1, scope: !6386, file: !904, line: 289, type: !1036)
!6391 = !DILocation(line: 0, scope: !6386)
!6392 = !DILocation(line: 291, column: 13, scope: !6386)
!6393 = !DILocation(line: 291, column: 11, scope: !6386)
!6394 = !DILocation(line: 292, column: 5, scope: !6386)
!6395 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !904, file: !904, line: 295, type: !6396, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !908, retainedNodes: !6398)
!6396 = !DISubroutineType(types: !6397)
!6397 = !{!907, !61}
!6398 = !{!6399}
!6399 = !DILocalVariable(name: "mask", arg: 1, scope: !6395, file: !904, line: 295, type: !61)
!6400 = !DILocation(line: 0, scope: !6395)
!6401 = !DILocation(line: 297, column: 5, scope: !6395)
!6402 = !DILocation(line: 298, column: 5, scope: !6395)
!6403 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2555, file: !2555, line: 51, type: !3805, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6404)
!6404 = !{!6405, !6406}
!6405 = !DILocalVariable(name: "mask", scope: !6403, file: !2555, line: 53, type: !61)
!6406 = !DILocalVariable(name: "priority", scope: !6403, file: !2555, line: 55, type: !61)
!6407 = !DILocation(line: 521, column: 3, scope: !6408, inlinedAt: !6412)
!6408 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !6409, file: !6409, line: 517, type: !3805, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6410)
!6409 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!6410 = !{!6411}
!6411 = !DILocalVariable(name: "result", scope: !6408, file: !6409, line: 519, type: !61)
!6412 = distinct !DILocation(line: 53, column: 21, scope: !6403)
!6413 = !{i64 457576}
!6414 = !DILocation(line: 0, scope: !6408, inlinedAt: !6412)
!6415 = !DILocation(line: 0, scope: !6403)
!6416 = !DILocalVariable(name: "value", arg: 1, scope: !6417, file: !6409, line: 532, type: !61)
!6417 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !6409, file: !6409, line: 532, type: !6418, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6420)
!6418 = !DISubroutineType(types: !6419)
!6419 = !{null, !61}
!6420 = !{!6416}
!6421 = !DILocation(line: 0, scope: !6417, inlinedAt: !6422)
!6422 = distinct !DILocation(line: 56, column: 5, scope: !6403)
!6423 = !DILocation(line: 534, column: 3, scope: !6417, inlinedAt: !6422)
!6424 = !{i64 457909}
!6425 = !DILocation(line: 456, column: 3, scope: !6426, inlinedAt: !6427)
!6426 = distinct !DISubprogram(name: "__DMB", scope: !2671, file: !2671, line: 454, type: !291, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !293)
!6427 = distinct !DILocation(line: 57, column: 5, scope: !6403)
!6428 = !{i64 430665}
!6429 = !DILocation(line: 434, column: 3, scope: !6430, inlinedAt: !6431)
!6430 = distinct !DISubprogram(name: "__ISB", scope: !2671, file: !2671, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !293)
!6431 = distinct !DILocation(line: 58, column: 5, scope: !6403)
!6432 = !{i64 430080}
!6433 = !DILocation(line: 59, column: 5, scope: !6403)
!6434 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2555, file: !2555, line: 62, type: !6418, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6435)
!6435 = !{!6436}
!6436 = !DILocalVariable(name: "mask", arg: 1, scope: !6434, file: !2555, line: 62, type: !61)
!6437 = !DILocation(line: 0, scope: !6434)
!6438 = !DILocation(line: 0, scope: !6417, inlinedAt: !6439)
!6439 = distinct !DILocation(line: 64, column: 5, scope: !6434)
!6440 = !DILocation(line: 534, column: 3, scope: !6417, inlinedAt: !6439)
!6441 = !DILocation(line: 456, column: 3, scope: !6426, inlinedAt: !6442)
!6442 = distinct !DILocation(line: 65, column: 5, scope: !6434)
!6443 = !DILocation(line: 434, column: 3, scope: !6430, inlinedAt: !6444)
!6444 = distinct !DILocation(line: 66, column: 5, scope: !6434)
!6445 = !DILocation(line: 67, column: 1, scope: !6434)
!6446 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !2555, file: !2555, line: 69, type: !291, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6447)
!6447 = !{!6448, !6449}
!6448 = !DILocalVariable(name: "irq_number", scope: !6446, file: !2555, line: 71, type: !897)
!6449 = !DILocalVariable(name: "mask", scope: !6446, file: !2555, line: 72, type: !61)
!6450 = !DILocation(line: 72, column: 21, scope: !6446)
!6451 = !DILocation(line: 0, scope: !6446)
!6452 = !DILocation(line: 73, column: 5, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6446, file: !2555, line: 73, column: 5)
!6454 = !DILocation(line: 74, column: 9, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6456, file: !2555, line: 73, column: 85)
!6456 = distinct !DILexicalBlock(scope: !6453, file: !2555, line: 73, column: 5)
!6457 = !DILocation(line: 73, column: 81, scope: !6456)
!6458 = !DILocation(line: 73, column: 53, scope: !6456)
!6459 = distinct !{!6459, !6452, !6460}
!6460 = !DILocation(line: 75, column: 5, scope: !6453)
!6461 = !DILocation(line: 76, column: 5, scope: !6446)
!6462 = !DILocation(line: 77, column: 1, scope: !6446)
!6463 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !913, file: !913, line: 1507, type: !6198, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6464)
!6464 = !{!6465}
!6465 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6463, file: !913, line: 1507, type: !898)
!6466 = !DILocation(line: 0, scope: !6463)
!6467 = !DILocation(line: 1509, column: 65, scope: !6463)
!6468 = !DILocation(line: 1509, column: 44, scope: !6463)
!6469 = !DILocation(line: 1509, column: 32, scope: !6463)
!6470 = !DILocation(line: 1509, column: 3, scope: !6463)
!6471 = !DILocation(line: 1509, column: 39, scope: !6463)
!6472 = !DILocation(line: 1510, column: 1, scope: !6463)
!6473 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !2555, file: !2555, line: 79, type: !291, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6474)
!6474 = !{!6475, !6476}
!6475 = !DILocalVariable(name: "irq_number", scope: !6473, file: !2555, line: 81, type: !897)
!6476 = !DILocalVariable(name: "mask", scope: !6473, file: !2555, line: 82, type: !61)
!6477 = !DILocation(line: 82, column: 21, scope: !6473)
!6478 = !DILocation(line: 0, scope: !6473)
!6479 = !DILocation(line: 84, column: 5, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6473, file: !2555, line: 84, column: 5)
!6481 = !DILocation(line: 85, column: 9, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6483, file: !2555, line: 84, column: 85)
!6483 = distinct !DILexicalBlock(scope: !6480, file: !2555, line: 84, column: 5)
!6484 = !DILocation(line: 84, column: 81, scope: !6483)
!6485 = !DILocation(line: 84, column: 53, scope: !6483)
!6486 = distinct !{!6486, !6479, !6487}
!6487 = !DILocation(line: 86, column: 5, scope: !6480)
!6488 = !DILocation(line: 87, column: 5, scope: !6473)
!6489 = !DILocation(line: 88, column: 1, scope: !6473)
!6490 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !913, file: !913, line: 1494, type: !6198, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6491)
!6491 = !{!6492}
!6492 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6490, file: !913, line: 1494, type: !898)
!6493 = !DILocation(line: 0, scope: !6490)
!6494 = !DILocation(line: 1497, column: 91, scope: !6490)
!6495 = !DILocation(line: 1497, column: 61, scope: !6490)
!6496 = !DILocation(line: 1497, column: 40, scope: !6490)
!6497 = !DILocation(line: 1497, column: 3, scope: !6490)
!6498 = !DILocation(line: 1497, column: 46, scope: !6490)
!6499 = !DILocation(line: 1498, column: 1, scope: !6490)
!6500 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !2555, file: !2555, line: 90, type: !291, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6501)
!6501 = !{!6502}
!6502 = !DILocalVariable(name: "irq_number", scope: !6500, file: !2555, line: 92, type: !897)
!6503 = !DILocation(line: 0, scope: !6500)
!6504 = !DILocation(line: 93, column: 5, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6500, file: !2555, line: 93, column: 5)
!6506 = !DILocation(line: 94, column: 9, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6508, file: !2555, line: 93, column: 85)
!6508 = distinct !DILexicalBlock(scope: !6505, file: !2555, line: 93, column: 5)
!6509 = !DILocation(line: 93, column: 81, scope: !6508)
!6510 = !DILocation(line: 93, column: 53, scope: !6508)
!6511 = distinct !{!6511, !6504, !6512}
!6512 = !DILocation(line: 95, column: 5, scope: !6505)
!6513 = !DILocation(line: 96, column: 1, scope: !6500)
!6514 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !913, file: !913, line: 1547, type: !6198, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6515)
!6515 = !{!6516}
!6516 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6514, file: !913, line: 1547, type: !898)
!6517 = !DILocation(line: 0, scope: !6514)
!6518 = !DILocation(line: 1549, column: 65, scope: !6514)
!6519 = !DILocation(line: 1549, column: 44, scope: !6514)
!6520 = !DILocation(line: 1549, column: 32, scope: !6514)
!6521 = !DILocation(line: 1549, column: 3, scope: !6514)
!6522 = !DILocation(line: 1549, column: 39, scope: !6514)
!6523 = !DILocation(line: 1550, column: 1, scope: !6514)
!6524 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !2555, file: !2555, line: 98, type: !6185, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6525)
!6525 = !{!6526}
!6526 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6524, file: !2555, line: 98, type: !897)
!6527 = !DILocation(line: 0, scope: !6524)
!6528 = !DILocation(line: 100, column: 24, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6524, file: !2555, line: 100, column: 9)
!6530 = !DILocation(line: 104, column: 5, scope: !6524)
!6531 = !DILocation(line: 105, column: 5, scope: !6524)
!6532 = !DILocation(line: 106, column: 1, scope: !6524)
!6533 = distinct !DISubprogram(name: "software_trigger_irq", scope: !2555, file: !2555, line: 45, type: !986, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !6534)
!6534 = !{!6535}
!6535 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6533, file: !2555, line: 45, type: !897)
!6536 = !DILocation(line: 0, scope: !6533)
!6537 = !DILocation(line: 47, column: 54, scope: !6533)
!6538 = !DILocation(line: 47, column: 16, scope: !6533)
!6539 = !DILocation(line: 445, column: 3, scope: !6540, inlinedAt: !6541)
!6540 = distinct !DISubprogram(name: "__DSB", scope: !2671, file: !2671, line: 443, type: !291, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !293)
!6541 = distinct !DILocation(line: 48, column: 5, scope: !6533)
!6542 = !{i64 430376}
!6543 = !DILocation(line: 49, column: 1, scope: !6533)
!6544 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !2555, file: !2555, line: 114, type: !3805, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2554, retainedNodes: !293)
!6545 = !DILocation(line: 116, column: 19, scope: !6544)
!6546 = !DILocation(line: 116, column: 24, scope: !6544)
!6547 = !DILocation(line: 116, column: 5, scope: !6544)
!6548 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !999, file: !999, line: 71, type: !6549, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !6551)
!6549 = !DISubroutineType(types: !6550)
!6550 = !{null, !88, !61}
!6551 = !{!6552, !6553, !6554, !6648, !6649, !6650}
!6552 = !DILocalVariable(name: "MTDData", arg: 1, scope: !6548, file: !999, line: 71, type: !88)
!6553 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !6548, file: !999, line: 71, type: !61)
!6554 = !DILocalVariable(name: "D", scope: !6548, file: !999, line: 73, type: !6555)
!6555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6556, size: 32)
!6556 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1192, line: 193, baseType: !6557)
!6557 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1192, line: 134, size: 1824, elements: !6558)
!6558 = !{!6559, !6560, !6561, !6567, !6573, !6574, !6581, !6582, !6589, !6590, !6591, !6592, !6599, !6600, !6630, !6631, !6632, !6633, !6634, !6635, !6636, !6637, !6638, !6639, !6640, !6641, !6642, !6643, !6644, !6645, !6646, !6647}
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !6557, file: !1192, line: 136, baseType: !61, size: 32)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !6557, file: !1192, line: 137, baseType: !797, size: 32, offset: 32)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !6557, file: !1192, line: 138, baseType: !6562, size: 32, offset: 64)
!6562 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1276, line: 56, baseType: !6563)
!6563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6564, size: 32)
!6564 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1276, line: 54, size: 8, elements: !6565)
!6565 = !{!6566}
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !6564, file: !1276, line: 55, baseType: !356, size: 8)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !6557, file: !1192, line: 139, baseType: !6568, size: 32, offset: 96)
!6568 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1276, line: 46, baseType: !6569)
!6569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6570, size: 32)
!6570 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1276, line: 44, size: 8, elements: !6571)
!6571 = !{!6572}
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !6570, file: !1276, line: 45, baseType: !356, size: 8)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !6557, file: !1192, line: 140, baseType: !1288, size: 8, offset: 128)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !6557, file: !1192, line: 143, baseType: !6575, size: 32, offset: 160)
!6575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6576, size: 32)
!6576 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1294, line: 146, baseType: !6577)
!6577 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 143, size: 64, elements: !6578)
!6578 = !{!6579, !6580}
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !6577, file: !1294, line: 144, baseType: !61, size: 32)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !6577, file: !1294, line: 145, baseType: !61, size: 32, offset: 32)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !6557, file: !1192, line: 144, baseType: !797, size: 32, offset: 192)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !6557, file: !1192, line: 145, baseType: !6583, size: 32, offset: 224)
!6583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6584, size: 32)
!6584 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1294, line: 152, baseType: !6585)
!6585 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 149, size: 64, elements: !6586)
!6586 = !{!6587, !6588}
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !6585, file: !1294, line: 150, baseType: !61, size: 32)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !6585, file: !1294, line: 151, baseType: !61, size: 32, offset: 32)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !6557, file: !1192, line: 146, baseType: !797, size: 32, offset: 256)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !6557, file: !1192, line: 147, baseType: !61, size: 32, offset: 288)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !6557, file: !1192, line: 148, baseType: !797, size: 32, offset: 320)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !6557, file: !1192, line: 151, baseType: !6593, size: 1024, offset: 352)
!6593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6594, size: 1024, elements: !1317)
!6594 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1294, line: 170, baseType: !6595)
!6595 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 167, size: 64, elements: !6596)
!6596 = !{!6597, !6598}
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !6595, file: !1294, line: 168, baseType: !61, size: 32)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !6595, file: !1294, line: 169, baseType: !61, size: 32, offset: 32)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !6557, file: !1192, line: 155, baseType: !1319, size: 32, offset: 1376)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !6557, file: !1192, line: 156, baseType: !6601, size: 32, offset: 1408)
!6601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6602, size: 32)
!6602 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1192, line: 124, baseType: !6603)
!6603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1192, line: 90, size: 200, elements: !6604)
!6604 = !{!6605, !6606, !6607, !6608, !6609, !6610, !6611, !6612, !6613, !6614, !6615, !6616, !6617, !6618, !6619, !6620, !6621, !6622, !6623, !6624, !6625, !6626, !6627, !6628, !6629}
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !6603, file: !1192, line: 91, baseType: !356, size: 8)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !6603, file: !1192, line: 92, baseType: !356, size: 8, offset: 8)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !6603, file: !1192, line: 94, baseType: !356, size: 8, offset: 16)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !6603, file: !1192, line: 95, baseType: !356, size: 8, offset: 24)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !6603, file: !1192, line: 96, baseType: !356, size: 8, offset: 32)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !6603, file: !1192, line: 98, baseType: !356, size: 8, offset: 40)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !6603, file: !1192, line: 99, baseType: !356, size: 8, offset: 48)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !6603, file: !1192, line: 100, baseType: !356, size: 8, offset: 56)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !6603, file: !1192, line: 101, baseType: !356, size: 8, offset: 64)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !6603, file: !1192, line: 103, baseType: !356, size: 8, offset: 72)
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !6603, file: !1192, line: 104, baseType: !356, size: 8, offset: 80)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !6603, file: !1192, line: 106, baseType: !356, size: 8, offset: 88)
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !6603, file: !1192, line: 107, baseType: !356, size: 8, offset: 96)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !6603, file: !1192, line: 108, baseType: !356, size: 8, offset: 104)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !6603, file: !1192, line: 109, baseType: !356, size: 8, offset: 112)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !6603, file: !1192, line: 110, baseType: !356, size: 8, offset: 120)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !6603, file: !1192, line: 111, baseType: !356, size: 8, offset: 128)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !6603, file: !1192, line: 112, baseType: !356, size: 8, offset: 136)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !6603, file: !1192, line: 114, baseType: !356, size: 8, offset: 144)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !6603, file: !1192, line: 115, baseType: !356, size: 8, offset: 152)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !6603, file: !1192, line: 118, baseType: !356, size: 8, offset: 160)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !6603, file: !1192, line: 119, baseType: !356, size: 8, offset: 168)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !6603, file: !1192, line: 120, baseType: !356, size: 8, offset: 176)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !6603, file: !1192, line: 121, baseType: !356, size: 8, offset: 184)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !6603, file: !1192, line: 122, baseType: !356, size: 8, offset: 192)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !6557, file: !1192, line: 157, baseType: !61, size: 32, offset: 1440)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !6557, file: !1192, line: 158, baseType: !1068, size: 16, offset: 1472)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !6557, file: !1192, line: 159, baseType: !1068, size: 16, offset: 1488)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !6557, file: !1192, line: 163, baseType: !1068, size: 16, offset: 1504)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !6557, file: !1192, line: 164, baseType: !1068, size: 16, offset: 1520)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !6557, file: !1192, line: 167, baseType: !356, size: 8, offset: 1536)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !6557, file: !1192, line: 168, baseType: !1358, size: 24, offset: 1544)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !6557, file: !1192, line: 169, baseType: !356, size: 8, offset: 1568)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !6557, file: !1192, line: 170, baseType: !356, size: 8, offset: 1576)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !6557, file: !1192, line: 173, baseType: !1068, size: 16, offset: 1584)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !6557, file: !1192, line: 174, baseType: !61, size: 32, offset: 1600)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !6557, file: !1192, line: 175, baseType: !61, size: 32, offset: 1632)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !6557, file: !1192, line: 178, baseType: !91, size: 8, offset: 1664)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !6557, file: !1192, line: 179, baseType: !91, size: 8, offset: 1672)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !6557, file: !1192, line: 182, baseType: !1369, size: 32, offset: 1696)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !6557, file: !1192, line: 186, baseType: !1369, size: 32, offset: 1728)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !6557, file: !1192, line: 187, baseType: !1374, size: 32, offset: 1760)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !6557, file: !1192, line: 188, baseType: !1374, size: 32, offset: 1792)
!6648 = !DILocalVariable(name: "i", scope: !6548, file: !999, line: 74, type: !61)
!6649 = !DILocalVariable(name: "data_cnt", scope: !6548, file: !999, line: 74, type: !61)
!6650 = !DILocalVariable(name: "p_data", scope: !6548, file: !999, line: 75, type: !1036)
!6651 = !DILocation(line: 0, scope: !6548)
!6652 = !DILocation(line: 77, column: 16, scope: !6548)
!6653 = !DILocation(line: 79, column: 53, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6655, file: !999, line: 79, column: 5)
!6655 = distinct !DILexicalBlock(scope: !6548, file: !999, line: 79, column: 5)
!6656 = !DILocation(line: 79, column: 5, scope: !6655)
!6657 = !DILocation(line: 79, column: 41, scope: !6655)
!6658 = !DILocation(line: 77, column: 47, scope: !6548)
!6659 = !DILocation(line: 80, column: 13, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6661, file: !999, line: 80, column: 13)
!6661 = distinct !DILexicalBlock(scope: !6654, file: !999, line: 79, column: 80)
!6662 = !DILocation(line: 80, column: 21, scope: !6660)
!6663 = !DILocation(line: 80, column: 13, scope: !6661)
!6664 = !DILocation(line: 81, column: 13, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6666, file: !999, line: 81, column: 13)
!6666 = distinct !DILexicalBlock(scope: !6667, file: !999, line: 81, column: 13)
!6667 = distinct !DILexicalBlock(scope: !6668, file: !999, line: 81, column: 13)
!6668 = distinct !DILexicalBlock(scope: !6660, file: !999, line: 80, column: 36)
!6669 = !DILocation(line: 79, column: 65, scope: !6654)
!6670 = !DILocation(line: 79, column: 70, scope: !6654)
!6671 = distinct !{!6671, !6656, !6672}
!6672 = !DILocation(line: 84, column: 5, scope: !6655)
!6673 = !DILocation(line: 85, column: 1, scope: !6548)
!6674 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !999, file: !999, line: 93, type: !3553, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !6675)
!6675 = !{!6676, !6677}
!6676 = !DILocalVariable(name: "num", arg: 1, scope: !6674, file: !999, line: 93, type: !61)
!6677 = !DILocalVariable(name: "ret", scope: !6674, file: !999, line: 95, type: !18)
!6678 = !DILocation(line: 0, scope: !6674)
!6679 = !DILocation(line: 100, column: 9, scope: !6674)
!6680 = !DILocation(line: 102, column: 5, scope: !6674)
!6681 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !999, file: !999, line: 110, type: !6682, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !6685)
!6682 = !DISubroutineType(types: !6683)
!6683 = !{null, !6684}
!6684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1068)
!6685 = !{!6686, !6687}
!6686 = !DILocalVariable(name: "CS", arg: 1, scope: !6681, file: !999, line: 110, type: !6684)
!6687 = !DILocalVariable(name: "val", scope: !6681, file: !999, line: 112, type: !61)
!6688 = !DILocation(line: 0, scope: !6681)
!6689 = !DILocation(line: 114, column: 5, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6691, file: !999, line: 114, column: 5)
!6691 = distinct !DILexicalBlock(scope: !6681, file: !999, line: 114, column: 5)
!6692 = !DILocation(line: 116, column: 16, scope: !6681)
!6693 = !DILocation(line: 117, column: 9, scope: !6681)
!6694 = !DILocation(line: 122, column: 13, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6696, file: !999, line: 121, column: 27)
!6696 = distinct !DILexicalBlock(scope: !6697, file: !999, line: 121, column: 16)
!6697 = distinct !DILexicalBlock(scope: !6681, file: !999, line: 117, column: 9)
!6698 = !DILocation(line: 127, column: 9, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6700, file: !999, line: 127, column: 9)
!6700 = distinct !DILexicalBlock(scope: !6701, file: !999, line: 127, column: 9)
!6701 = distinct !DILexicalBlock(scope: !6702, file: !999, line: 127, column: 9)
!6702 = distinct !DILexicalBlock(scope: !6696, file: !999, line: 125, column: 12)
!6703 = !DILocation(line: 0, scope: !6697)
!6704 = !DILocation(line: 134, column: 5, scope: !6681)
!6705 = !DILocation(line: 134, column: 19, scope: !6681)
!6706 = !DILocation(line: 134, column: 35, scope: !6681)
!6707 = !DILocation(line: 134, column: 12, scope: !6681)
!6708 = distinct !{!6708, !6704, !6709}
!6709 = !DILocation(line: 134, column: 57, scope: !6681)
!6710 = !DILocation(line: 135, column: 19, scope: !6681)
!6711 = !DILocation(line: 135, column: 34, scope: !6681)
!6712 = !DILocation(line: 135, column: 12, scope: !6681)
!6713 = !DILocation(line: 135, column: 5, scope: !6681)
!6714 = distinct !{!6714, !6713, !6715}
!6715 = !DILocation(line: 135, column: 50, scope: !6681)
!6716 = !DILocation(line: 130, column: 9, scope: !6681)
!6717 = !DILocation(line: 138, column: 24, scope: !6681)
!6718 = !DILocation(line: 139, column: 1, scope: !6681)
!6719 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !999, file: !999, line: 148, type: !6682, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !6720)
!6720 = !{!6721, !6722}
!6721 = !DILocalVariable(name: "CS", arg: 1, scope: !6719, file: !999, line: 148, type: !6684)
!6722 = !DILocalVariable(name: "val", scope: !6719, file: !999, line: 150, type: !61)
!6723 = !DILocation(line: 0, scope: !6719)
!6724 = !DILocation(line: 153, column: 16, scope: !6719)
!6725 = !DILocation(line: 154, column: 9, scope: !6719)
!6726 = !DILocation(line: 155, column: 24, scope: !6719)
!6727 = !DILocation(line: 158, column: 5, scope: !6719)
!6728 = !DILocation(line: 158, column: 18, scope: !6719)
!6729 = !DILocation(line: 158, column: 32, scope: !6719)
!6730 = distinct !{!6730, !6727, !6731}
!6731 = !DILocation(line: 158, column: 49, scope: !6719)
!6732 = !DILocation(line: 163, column: 16, scope: !6719)
!6733 = !DILocation(line: 164, column: 9, scope: !6719)
!6734 = !DILocation(line: 165, column: 24, scope: !6719)
!6735 = !DILocation(line: 168, column: 5, scope: !6719)
!6736 = !DILocation(line: 168, column: 18, scope: !6719)
!6737 = !DILocation(line: 168, column: 32, scope: !6719)
!6738 = distinct !{!6738, !6735, !6739}
!6739 = !DILocation(line: 168, column: 46, scope: !6719)
!6740 = !DILocation(line: 174, column: 10, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6719, file: !999, line: 174, column: 9)
!6742 = !DILocation(line: 174, column: 25, scope: !6741)
!6743 = !DILocation(line: 174, column: 9, scope: !6719)
!6744 = !DILocation(line: 175, column: 9, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !999, line: 175, column: 9)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !999, line: 175, column: 9)
!6747 = distinct !DILexicalBlock(scope: !6741, file: !999, line: 174, column: 36)
!6748 = !DILocation(line: 176, column: 5, scope: !6747)
!6749 = !DILocation(line: 179, column: 1, scope: !6719)
!6750 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !999, file: !999, line: 186, type: !6751, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !6753)
!6751 = !DISubroutineType(types: !6752)
!6752 = !{!61, !6684}
!6753 = !{!6754, !6755, !6756}
!6754 = !DILocalVariable(name: "CS", arg: 1, scope: !6750, file: !999, line: 186, type: !6684)
!6755 = !DILocalVariable(name: "val", scope: !6750, file: !999, line: 188, type: !61)
!6756 = !DILocalVariable(name: "misc_ctl", scope: !6750, file: !999, line: 189, type: !61)
!6757 = !DILocation(line: 0, scope: !6750)
!6758 = !DILocation(line: 204, column: 16, scope: !6750)
!6759 = !DILocation(line: 208, column: 12, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6750, file: !999, line: 208, column: 9)
!6761 = !DILocation(line: 208, column: 9, scope: !6750)
!6762 = !DILocation(line: 212, column: 20, scope: !6750)
!6763 = !DILocation(line: 215, column: 1, scope: !6750)
!6764 = !DILocation(line: 215, column: 15, scope: !6750)
!6765 = !DILocation(line: 215, column: 29, scope: !6750)
!6766 = !DILocation(line: 215, column: 8, scope: !6750)
!6767 = distinct !{!6767, !6763, !6768}
!6768 = !DILocation(line: 215, column: 46, scope: !6750)
!6769 = !DILocation(line: 216, column: 22, scope: !6750)
!6770 = !DILocation(line: 216, column: 36, scope: !6750)
!6771 = !DILocation(line: 216, column: 9, scope: !6750)
!6772 = distinct !{!6772, !6771, !6773}
!6773 = !DILocation(line: 216, column: 47, scope: !6750)
!6774 = !DILocation(line: 218, column: 13, scope: !6750)
!6775 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !999, file: !999, line: 227, type: !6682, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !6776)
!6776 = !{!6777}
!6777 = !DILocalVariable(name: "CS", arg: 1, scope: !6775, file: !999, line: 227, type: !6684)
!6778 = !DILocation(line: 0, scope: !6775)
!6779 = !DILocation(line: 235, column: 5, scope: !6775)
!6780 = !DILocation(line: 236, column: 5, scope: !6775)
!6781 = !DILocation(line: 238, column: 1, scope: !6775)
!6782 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !999, file: !999, line: 249, type: !6783, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !6785)
!6783 = !DISubroutineType(types: !6784)
!6784 = !{null, !6684, !807}
!6785 = !{!6786, !6787, !6788, !6789, !6790}
!6786 = !DILocalVariable(name: "CS", arg: 1, scope: !6782, file: !999, line: 249, type: !6684)
!6787 = !DILocalVariable(name: "cmd", arg: 2, scope: !6782, file: !999, line: 249, type: !807)
!6788 = !DILocalVariable(name: "cmdi", scope: !6782, file: !999, line: 251, type: !61)
!6789 = !DILocalVariable(name: "cmdo", scope: !6782, file: !999, line: 251, type: !61)
!6790 = !DILocalVariable(name: "len", scope: !6782, file: !999, line: 252, type: !356)
!6791 = !DILocation(line: 0, scope: !6782)
!6792 = !DILocation(line: 254, column: 46, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !999, line: 254, column: 5)
!6794 = distinct !DILexicalBlock(scope: !6782, file: !999, line: 254, column: 5)
!6795 = !DILocation(line: 254, column: 5, scope: !6794)
!6796 = !DILocation(line: 255, column: 22, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6793, file: !999, line: 254, column: 103)
!6798 = !DILocation(line: 255, column: 59, scope: !6797)
!6799 = !DILocation(line: 255, column: 51, scope: !6797)
!6800 = !DILocation(line: 254, column: 65, scope: !6793)
!6801 = !DILocation(line: 254, column: 97, scope: !6793)
!6802 = distinct !{!6802, !6795, !6803}
!6803 = !DILocation(line: 256, column: 5, scope: !6794)
!6804 = !DILocation(line: 258, column: 9, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6782, file: !999, line: 258, column: 9)
!6806 = !DILocation(line: 262, column: 5, scope: !6782)
!6807 = !DILocation(line: 263, column: 33, scope: !6782)
!6808 = !DILocation(line: 264, column: 25, scope: !6782)
!6809 = !DILocation(line: 265, column: 24, scope: !6782)
!6810 = !DILocation(line: 266, column: 5, scope: !6782)
!6811 = !DILocation(line: 268, column: 5, scope: !6782)
!6812 = !DILocation(line: 269, column: 1, scope: !6782)
!6813 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !999, file: !999, line: 281, type: !6814, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !6816)
!6814 = !DISubroutineType(types: !6815)
!6815 = !{null, !6684, !5084, !807, !807}
!6816 = !{!6817, !6818, !6819, !6820, !6821, !6822}
!6817 = !DILocalVariable(name: "CS", arg: 1, scope: !6813, file: !999, line: 281, type: !6684)
!6818 = !DILocalVariable(name: "cmd", arg: 2, scope: !6813, file: !999, line: 281, type: !5084)
!6819 = !DILocalVariable(name: "address", arg: 3, scope: !6813, file: !999, line: 281, type: !807)
!6820 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !6813, file: !999, line: 281, type: !807)
!6821 = !DILocalVariable(name: "cmd1", scope: !6813, file: !999, line: 283, type: !61)
!6822 = !DILocalVariable(name: "cmd2", scope: !6813, file: !999, line: 283, type: !61)
!6823 = !DILocation(line: 0, scope: !6813)
!6824 = !DILocation(line: 285, column: 12, scope: !6813)
!6825 = !DILocation(line: 287, column: 23, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6813, file: !999, line: 287, column: 9)
!6827 = !DILocation(line: 287, column: 9, scope: !6813)
!6828 = !DILocation(line: 288, column: 22, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6826, file: !999, line: 287, column: 31)
!6830 = !DILocation(line: 288, column: 55, scope: !6829)
!6831 = !DILocation(line: 288, column: 53, scope: !6829)
!6832 = !DILocation(line: 289, column: 5, scope: !6829)
!6833 = !DILocation(line: 290, column: 22, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6826, file: !999, line: 289, column: 12)
!6835 = !DILocation(line: 290, column: 53, scope: !6834)
!6836 = !DILocation(line: 290, column: 51, scope: !6834)
!6837 = !DILocation(line: 291, column: 21, scope: !6834)
!6838 = !DILocation(line: 0, scope: !6826)
!6839 = !DILocation(line: 294, column: 33, scope: !6813)
!6840 = !DILocation(line: 295, column: 38, scope: !6813)
!6841 = !DILocation(line: 296, column: 41, scope: !6813)
!6842 = !DILocation(line: 296, column: 25, scope: !6813)
!6843 = !DILocation(line: 297, column: 24, scope: !6813)
!6844 = !DILocation(line: 299, column: 5, scope: !6813)
!6845 = !DILocation(line: 300, column: 5, scope: !6813)
!6846 = !DILocation(line: 302, column: 1, scope: !6813)
!6847 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !999, file: !999, line: 312, type: !6848, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !6850)
!6848 = !DISubroutineType(types: !6849)
!6849 = !{!61, !807, !807}
!6850 = !{!6851, !6852}
!6851 = !DILocalVariable(name: "cmd", arg: 1, scope: !6847, file: !999, line: 312, type: !807)
!6852 = !DILocalVariable(name: "address", arg: 2, scope: !6847, file: !999, line: 312, type: !807)
!6853 = !DILocation(line: 0, scope: !6847)
!6854 = !DILocation(line: 314, column: 14, scope: !6847)
!6855 = !DILocation(line: 314, column: 44, scope: !6847)
!6856 = !DILocation(line: 314, column: 82, scope: !6847)
!6857 = !DILocation(line: 314, column: 75, scope: !6847)
!6858 = !DILocation(line: 314, column: 5, scope: !6847)
!6859 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !999, file: !999, line: 332, type: !6860, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !6863)
!6860 = !DISubroutineType(types: !6861)
!6861 = !{!61, !807, !807, !6862, !1036}
!6862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 32)
!6863 = !{!6864, !6865, !6866, !6867, !6868, !6876, !6877, !6878}
!6864 = !DILocalVariable(name: "cmd", arg: 1, scope: !6859, file: !999, line: 332, type: !807)
!6865 = !DILocalVariable(name: "address", arg: 2, scope: !6859, file: !999, line: 332, type: !807)
!6866 = !DILocalVariable(name: "p_data", arg: 3, scope: !6859, file: !999, line: 332, type: !6862)
!6867 = !DILocalVariable(name: "length", arg: 4, scope: !6859, file: !999, line: 332, type: !1036)
!6868 = !DILocalVariable(name: "tmp", scope: !6859, file: !999, line: 334, type: !6869)
!6869 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !1192, line: 202, baseType: !6870)
!6870 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1192, line: 198, size: 32, elements: !6871)
!6871 = !{!6872, !6873, !6875}
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !6870, file: !1192, line: 199, baseType: !61, size: 32)
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !6870, file: !1192, line: 200, baseType: !6874, size: 32)
!6874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1068, size: 32, elements: !500)
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !6870, file: !1192, line: 201, baseType: !497, size: 32)
!6876 = !DILocalVariable(name: "cmd1", scope: !6859, file: !999, line: 335, type: !61)
!6877 = !DILocalVariable(name: "cmd2", scope: !6859, file: !999, line: 335, type: !61)
!6878 = !DILocalVariable(name: "i", scope: !6859, file: !999, line: 336, type: !61)
!6879 = !DILocation(line: 0, scope: !6859)
!6880 = !DILocation(line: 334, column: 5, scope: !6859)
!6881 = !DILocation(line: 334, column: 16, scope: !6859)
!6882 = !DILocation(line: 338, column: 12, scope: !6859)
!6883 = !DILocation(line: 340, column: 17, scope: !6859)
!6884 = !DILocation(line: 342, column: 17, scope: !6859)
!6885 = !DILocation(line: 342, column: 9, scope: !6859)
!6886 = !DILocation(line: 342, column: 15, scope: !6859)
!6887 = !DILocation(line: 344, column: 22, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6889, file: !999, line: 343, column: 29)
!6889 = distinct !DILexicalBlock(scope: !6890, file: !999, line: 343, column: 5)
!6890 = distinct !DILexicalBlock(scope: !6859, file: !999, line: 343, column: 5)
!6891 = !DILocation(line: 343, column: 5, scope: !6890)
!6892 = !DILocation(line: 344, column: 21, scope: !6888)
!6893 = !DILocation(line: 344, column: 9, scope: !6888)
!6894 = !DILocation(line: 344, column: 19, scope: !6888)
!6895 = !DILocation(line: 345, column: 18, scope: !6888)
!6896 = !DILocation(line: 343, column: 25, scope: !6889)
!6897 = !DILocation(line: 343, column: 19, scope: !6889)
!6898 = distinct !{!6898, !6891, !6899}
!6899 = !DILocation(line: 346, column: 5, scope: !6890)
!6900 = !DILocation(line: 347, column: 16, scope: !6859)
!6901 = !DILocation(line: 348, column: 16, scope: !6859)
!6902 = !DILocation(line: 348, column: 15, scope: !6859)
!6903 = !DILocation(line: 339, column: 17, scope: !6859)
!6904 = !DILocation(line: 339, column: 52, scope: !6859)
!6905 = !DILocation(line: 339, column: 45, scope: !6859)
!6906 = !DILocation(line: 348, column: 13, scope: !6859)
!6907 = !DILocation(line: 349, column: 38, scope: !6859)
!6908 = !DILocation(line: 351, column: 1, scope: !6859)
!6909 = !DILocation(line: 350, column: 5, scope: !6859)
!6910 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !999, file: !999, line: 367, type: !6911, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !6913)
!6911 = !DISubroutineType(types: !6912)
!6912 = !{null, !61, !88, !974}
!6913 = !{!6914, !6915, !6916, !6917, !6918, !6919}
!6914 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !6910, file: !999, line: 367, type: !61)
!6915 = !DILocalVariable(name: "buff", arg: 2, scope: !6910, file: !999, line: 367, type: !88)
!6916 = !DILocalVariable(name: "length", arg: 3, scope: !6910, file: !999, line: 367, type: !974)
!6917 = !DILocalVariable(name: "i", scope: !6910, file: !999, line: 369, type: !61)
!6918 = !DILocalVariable(name: "p_data", scope: !6910, file: !999, line: 370, type: !797)
!6919 = !DILocalVariable(name: "tmp", scope: !6910, file: !999, line: 371, type: !6869)
!6920 = !DILocation(line: 0, scope: !6910)
!6921 = !DILocation(line: 371, column: 5, scope: !6910)
!6922 = !DILocation(line: 371, column: 13, scope: !6910)
!6923 = !DILocation(line: 373, column: 18, scope: !6910)
!6924 = !DILocation(line: 376, column: 15, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6910, file: !999, line: 376, column: 9)
!6926 = !DILocation(line: 376, column: 30, scope: !6925)
!6927 = !DILocation(line: 376, column: 11, scope: !6925)
!6928 = !DILocation(line: 376, column: 9, scope: !6910)
!6929 = !DILocation(line: 377, column: 23, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6931, file: !999, line: 377, column: 9)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !999, line: 377, column: 9)
!6932 = distinct !DILexicalBlock(scope: !6925, file: !999, line: 376, column: 41)
!6933 = !DILocation(line: 377, column: 9, scope: !6931)
!6934 = !DILocation(line: 378, column: 13, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6930, file: !999, line: 377, column: 80)
!6936 = !DILocation(line: 377, column: 41, scope: !6930)
!6937 = !DILocation(line: 377, column: 54, scope: !6930)
!6938 = !DILocation(line: 377, column: 67, scope: !6930)
!6939 = distinct !{!6939, !6933, !6940}
!6940 = !DILocation(line: 379, column: 9, scope: !6931)
!6941 = !DILocation(line: 382, column: 37, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6925, file: !999, line: 382, column: 14)
!6943 = !DILocation(line: 382, column: 16, scope: !6942)
!6944 = !DILocation(line: 0, scope: !6942)
!6945 = !DILocation(line: 382, column: 14, scope: !6925)
!6946 = !DILocation(line: 391, column: 9, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !999, line: 391, column: 9)
!6948 = distinct !DILexicalBlock(scope: !6942, file: !999, line: 390, column: 13)
!6949 = !DILocation(line: 383, column: 9, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !999, line: 383, column: 9)
!6951 = distinct !DILexicalBlock(scope: !6942, file: !999, line: 382, column: 49)
!6952 = !DILocation(line: 384, column: 26, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6954, file: !999, line: 383, column: 80)
!6954 = distinct !DILexicalBlock(scope: !6950, file: !999, line: 383, column: 9)
!6955 = !DILocation(line: 384, column: 24, scope: !6953)
!6956 = !DILocation(line: 385, column: 47, scope: !6953)
!6957 = !DILocation(line: 385, column: 26, scope: !6953)
!6958 = !DILocation(line: 385, column: 24, scope: !6953)
!6959 = !DILocation(line: 386, column: 13, scope: !6953)
!6960 = !DILocation(line: 383, column: 41, scope: !6954)
!6961 = !DILocation(line: 383, column: 54, scope: !6954)
!6962 = !DILocation(line: 383, column: 67, scope: !6954)
!6963 = !DILocation(line: 383, column: 23, scope: !6954)
!6964 = distinct !{!6964, !6949, !6965}
!6965 = !DILocation(line: 387, column: 9, scope: !6950)
!6966 = !DILocation(line: 392, column: 13, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6968, file: !999, line: 392, column: 13)
!6968 = distinct !DILexicalBlock(scope: !6969, file: !999, line: 391, column: 61)
!6969 = distinct !DILexicalBlock(scope: !6947, file: !999, line: 391, column: 9)
!6970 = !DILocation(line: 393, column: 36, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !999, line: 392, column: 51)
!6972 = distinct !DILexicalBlock(scope: !6967, file: !999, line: 392, column: 13)
!6973 = !DILocation(line: 393, column: 29, scope: !6971)
!6974 = !DILocation(line: 393, column: 17, scope: !6971)
!6975 = !DILocation(line: 393, column: 27, scope: !6971)
!6976 = !DILocation(line: 392, column: 47, scope: !6972)
!6977 = !DILocation(line: 392, column: 27, scope: !6972)
!6978 = !DILocation(line: 392, column: 31, scope: !6972)
!6979 = distinct !{!6979, !6966, !6980}
!6980 = !DILocation(line: 394, column: 13, scope: !6967)
!6981 = !DILocation(line: 395, column: 13, scope: !6968)
!6982 = !DILocation(line: 391, column: 41, scope: !6969)
!6983 = !DILocation(line: 391, column: 54, scope: !6969)
!6984 = !DILocation(line: 391, column: 23, scope: !6969)
!6985 = distinct !{!6985, !6946, !6986}
!6986 = !DILocation(line: 396, column: 9, scope: !6947)
!6987 = !DILocation(line: 398, column: 1, scope: !6910)
!6988 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !999, file: !999, line: 414, type: !6989, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !6991)
!6989 = !DISubroutineType(types: !6990)
!6990 = !{null, !6684, !5083, !797, !6684, !6684}
!6991 = !{!6992, !6993, !6994, !6995, !6996, !6997, !6998, !6999, !7000, !7001}
!6992 = !DILocalVariable(name: "CS", arg: 1, scope: !6988, file: !999, line: 414, type: !6684)
!6993 = !DILocalVariable(name: "cmd", arg: 2, scope: !6988, file: !999, line: 414, type: !5083)
!6994 = !DILocalVariable(name: "data", arg: 3, scope: !6988, file: !999, line: 414, type: !797)
!6995 = !DILocalVariable(name: "outl", arg: 4, scope: !6988, file: !999, line: 414, type: !6684)
!6996 = !DILocalVariable(name: "inl", arg: 5, scope: !6988, file: !999, line: 414, type: !6684)
!6997 = !DILocalVariable(name: "tmp", scope: !6988, file: !999, line: 416, type: !61)
!6998 = !DILocalVariable(name: "i", scope: !6988, file: !999, line: 417, type: !61)
!6999 = !DILocalVariable(name: "j", scope: !6988, file: !999, line: 417, type: !61)
!7000 = !DILocalVariable(name: "p_data", scope: !6988, file: !999, line: 418, type: !797)
!7001 = !DILocalVariable(name: "p_tmp", scope: !6988, file: !999, line: 418, type: !797)
!7002 = !DILocation(line: 0, scope: !6988)
!7003 = !DILocation(line: 416, column: 5, scope: !6988)
!7004 = !DILocation(line: 422, column: 60, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !7006, file: !999, line: 422, column: 5)
!7006 = distinct !DILexicalBlock(scope: !6988, file: !999, line: 422, column: 5)
!7007 = !DILocation(line: 422, column: 5, scope: !7006)
!7008 = !DILocation(line: 423, column: 25, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7010, file: !999, line: 423, column: 9)
!7010 = distinct !DILexicalBlock(scope: !7005, file: !999, line: 422, column: 83)
!7011 = !DILocation(line: 423, column: 32, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7009, file: !999, line: 423, column: 9)
!7013 = !DILocation(line: 423, column: 9, scope: !7009)
!7014 = !DILocation(line: 424, column: 24, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7012, file: !999, line: 423, column: 59)
!7016 = !DILocation(line: 424, column: 13, scope: !7015)
!7017 = !DILocation(line: 424, column: 22, scope: !7015)
!7018 = !DILocation(line: 423, column: 50, scope: !7012)
!7019 = !DILocation(line: 423, column: 55, scope: !7012)
!7020 = !DILocation(line: 423, column: 39, scope: !7012)
!7021 = distinct !{!7021, !7013, !7022}
!7022 = !DILocation(line: 425, column: 9, scope: !7009)
!7023 = !DILocation(line: 426, column: 9, scope: !7010)
!7024 = !DILocation(line: 0, scope: !7006)
!7025 = !DILocation(line: 422, column: 75, scope: !7005)
!7026 = distinct !{!7026, !7007, !7027}
!7027 = !DILocation(line: 427, column: 5, scope: !7006)
!7028 = !DILocation(line: 428, column: 25, scope: !6988)
!7029 = !DILocation(line: 429, column: 26, scope: !6988)
!7030 = !DILocation(line: 429, column: 24, scope: !6988)
!7031 = !DILocation(line: 430, column: 5, scope: !6988)
!7032 = !DILocation(line: 431, column: 5, scope: !6988)
!7033 = !DILocation(line: 433, column: 67, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7035, file: !999, line: 433, column: 5)
!7035 = distinct !DILexicalBlock(scope: !6988, file: !999, line: 433, column: 5)
!7036 = !DILocation(line: 433, column: 5, scope: !7035)
!7037 = !DILocation(line: 433, column: 56, scope: !7035)
!7038 = !DILocation(line: 434, column: 17, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7034, file: !999, line: 433, column: 100)
!7040 = !DILocation(line: 434, column: 15, scope: !7039)
!7041 = !DILocation(line: 433, column: 74, scope: !7034)
!7042 = !DILocation(line: 433, column: 79, scope: !7034)
!7043 = !DILocation(line: 433, column: 87, scope: !7034)
!7044 = distinct !{!7044, !7036, !7045}
!7045 = !DILocation(line: 435, column: 5, scope: !7035)
!7046 = !DILocation(line: 437, column: 1, scope: !6988)
!7047 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !999, file: !999, line: 462, type: !7048, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !7050)
!7048 = !DISubroutineType(types: !7049)
!7049 = !{null, !6684, !5083}
!7050 = !{!7051, !7052, !7053, !7054, !7055}
!7051 = !DILocalVariable(name: "CS", arg: 1, scope: !7047, file: !999, line: 462, type: !6684)
!7052 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !7047, file: !999, line: 462, type: !5083)
!7053 = !DILocalVariable(name: "i", scope: !7047, file: !999, line: 464, type: !61)
!7054 = !DILocalVariable(name: "val", scope: !7047, file: !999, line: 465, type: !61)
!7055 = !DILocalVariable(name: "status", scope: !7056, file: !999, line: 492, type: !356)
!7056 = distinct !DILexicalBlock(scope: !7057, file: !999, line: 491, column: 47)
!7057 = distinct !DILexicalBlock(scope: !7058, file: !999, line: 491, column: 13)
!7058 = distinct !DILexicalBlock(scope: !7047, file: !999, line: 477, column: 17)
!7059 = !DILocation(line: 0, scope: !7047)
!7060 = !DILocation(line: 467, column: 17, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7047, file: !999, line: 467, column: 9)
!7062 = !DILocation(line: 467, column: 9, scope: !7047)
!7063 = !DILocation(line: 474, column: 11, scope: !7047)
!7064 = !DILocation(line: 477, column: 5, scope: !7047)
!7065 = !DILocation(line: 478, column: 17, scope: !7058)
!7066 = !DILocation(line: 478, column: 9, scope: !7058)
!7067 = !DILocation(line: 481, column: 17, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7069, file: !999, line: 481, column: 17)
!7069 = distinct !DILexicalBlock(scope: !7058, file: !999, line: 478, column: 29)
!7070 = !DILocation(line: 481, column: 17, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7072, file: !999, line: 481, column: 17)
!7072 = distinct !DILexicalBlock(scope: !7073, file: !999, line: 481, column: 17)
!7073 = distinct !DILexicalBlock(scope: !7068, file: !999, line: 481, column: 17)
!7074 = !DILocation(line: 481, column: 17, scope: !7072)
!7075 = !DILocation(line: 481, column: 17, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7077, file: !999, line: 481, column: 17)
!7077 = distinct !DILexicalBlock(scope: !7073, file: !999, line: 481, column: 17)
!7078 = !DILocation(line: 484, column: 17, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7069, file: !999, line: 484, column: 17)
!7080 = !DILocation(line: 484, column: 17, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7082, file: !999, line: 484, column: 17)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !999, line: 484, column: 17)
!7083 = distinct !DILexicalBlock(scope: !7079, file: !999, line: 484, column: 17)
!7084 = !DILocation(line: 484, column: 17, scope: !7082)
!7085 = !DILocation(line: 484, column: 17, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7087, file: !999, line: 484, column: 17)
!7087 = distinct !DILexicalBlock(scope: !7083, file: !999, line: 484, column: 17)
!7088 = !DILocation(line: 0, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7090, file: !999, line: 487, column: 17)
!7090 = distinct !DILexicalBlock(scope: !7069, file: !999, line: 487, column: 17)
!7091 = !DILocation(line: 487, column: 17, scope: !7090)
!7092 = !DILocation(line: 487, column: 17, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !999, line: 487, column: 17)
!7094 = distinct !DILexicalBlock(scope: !7089, file: !999, line: 487, column: 17)
!7095 = !DILocation(line: 487, column: 17, scope: !7094)
!7096 = !DILocation(line: 487, column: 17, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7098, file: !999, line: 487, column: 17)
!7098 = distinct !DILexicalBlock(scope: !7089, file: !999, line: 487, column: 17)
!7099 = !DILocation(line: 487, column: 17, scope: !7098)
!7100 = !DILocation(line: 491, column: 23, scope: !7057)
!7101 = !DILocation(line: 491, column: 13, scope: !7057)
!7102 = !DILocation(line: 491, column: 28, scope: !7057)
!7103 = !DILocation(line: 491, column: 13, scope: !7058)
!7104 = !DILocation(line: 492, column: 13, scope: !7056)
!7105 = !DILocation(line: 494, column: 13, scope: !7056)
!7106 = !DILocation(line: 0, scope: !7056)
!7107 = !DILocation(line: 495, column: 17, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7056, file: !999, line: 494, column: 16)
!7109 = !DILocation(line: 496, column: 22, scope: !7056)
!7110 = !DILocation(line: 496, column: 31, scope: !7056)
!7111 = !DILocation(line: 496, column: 29, scope: !7056)
!7112 = !DILocation(line: 496, column: 13, scope: !7108)
!7113 = distinct !{!7113, !7105, !7114}
!7114 = !DILocation(line: 496, column: 45, scope: !7056)
!7115 = !DILocation(line: 497, column: 9, scope: !7057)
!7116 = !DILocation(line: 503, column: 25, scope: !7058)
!7117 = !DILocation(line: 497, column: 9, scope: !7056)
!7118 = !DILocation(line: 500, column: 70, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7057, file: !999, line: 499, column: 14)
!7120 = !DILocation(line: 500, column: 60, scope: !7119)
!7121 = !DILocation(line: 500, column: 13, scope: !7119)
!7122 = !DILocation(line: 503, column: 15, scope: !7058)
!7123 = !DILocation(line: 503, column: 11, scope: !7058)
!7124 = distinct !{!7124, !7064, !7125}
!7125 = !DILocation(line: 504, column: 5, scope: !7047)
!7126 = !DILocation(line: 505, column: 1, scope: !7047)
!7127 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !999, file: !999, line: 514, type: !7128, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !7130)
!7128 = !DISubroutineType(types: !7129)
!7129 = !{null, !6684, !797, !356}
!7130 = !{!7131, !7132, !7133}
!7131 = !DILocalVariable(name: "CS", arg: 1, scope: !7127, file: !999, line: 514, type: !6684)
!7132 = !DILocalVariable(name: "id", arg: 2, scope: !7127, file: !999, line: 514, type: !797)
!7133 = !DILocalVariable(name: "cmd", arg: 3, scope: !7127, file: !999, line: 514, type: !356)
!7134 = !DILocation(line: 0, scope: !7127)
!7135 = !DILocation(line: 517, column: 5, scope: !7127)
!7136 = !DILocation(line: 518, column: 1, scope: !7127)
!7137 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !999, file: !999, line: 521, type: !7138, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !7140)
!7138 = !DISubroutineType(types: !7139)
!7139 = !{null, !6684, !797}
!7140 = !{!7141, !7142}
!7141 = !DILocalVariable(name: "CS", arg: 1, scope: !7137, file: !999, line: 521, type: !6684)
!7142 = !DILocalVariable(name: "id", arg: 2, scope: !7137, file: !999, line: 521, type: !797)
!7143 = !DILocation(line: 0, scope: !7137)
!7144 = !DILocation(line: 523, column: 5, scope: !7137)
!7145 = !DILocation(line: 524, column: 1, scope: !7137)
!7146 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !999, file: !999, line: 536, type: !7147, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !293)
!7147 = !DISubroutineType(types: !7148)
!7148 = !{!7149}
!7149 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !1002, line: 57, baseType: !1001)
!7150 = !DILocation(line: 540, column: 5, scope: !7146)
!7151 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !999, file: !999, line: 561, type: !7152, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !293)
!7152 = !DISubroutineType(types: !7153)
!7153 = !{!7154}
!7154 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !1002, line: 66, baseType: !1009)
!7155 = !DILocation(line: 564, column: 15, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7151, file: !999, line: 564, column: 9)
!7157 = !DILocation(line: 564, column: 31, scope: !7156)
!7158 = !DILocation(line: 564, column: 45, scope: !7156)
!7159 = !DILocation(line: 0, scope: !7156)
!7160 = !DILocation(line: 569, column: 1, scope: !7151)
!7161 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !999, file: !999, line: 580, type: !7162, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !7164)
!7162 = !DISubroutineType(types: !7163)
!7163 = !{!91, !797}
!7164 = !{!7165, !7166}
!7165 = !DILocalVariable(name: "buffer", arg: 1, scope: !7161, file: !999, line: 580, type: !797)
!7166 = !DILocalVariable(name: "i", scope: !7161, file: !999, line: 582, type: !7)
!7167 = !DILocation(line: 0, scope: !7161)
!7168 = !DILocation(line: 583, column: 5, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7161, file: !999, line: 583, column: 5)
!7170 = !DILocation(line: 584, column: 9, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7172, file: !999, line: 583, column: 29)
!7172 = distinct !DILexicalBlock(scope: !7169, file: !999, line: 583, column: 5)
!7173 = !DILocation(line: 584, column: 19, scope: !7171)
!7174 = !DILocation(line: 583, column: 25, scope: !7172)
!7175 = !DILocation(line: 583, column: 19, scope: !7172)
!7176 = distinct !{!7176, !7168, !7177}
!7177 = !DILocation(line: 585, column: 5, scope: !7169)
!7178 = !DILocation(line: 586, column: 5, scope: !7161)
!7179 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !999, file: !999, line: 613, type: !291, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !7180)
!7180 = !{!7181}
!7181 = !DILocalVariable(name: "D", scope: !7179, file: !999, line: 615, type: !6555)
!7182 = !DILocation(line: 0, scope: !7179)
!7183 = !DILocation(line: 616, column: 32, scope: !7179)
!7184 = !DILocation(line: 616, column: 37, scope: !7179)
!7185 = !DILocation(line: 616, column: 27, scope: !7179)
!7186 = !DILocation(line: 617, column: 44, scope: !7179)
!7187 = !DILocation(line: 617, column: 31, scope: !7179)
!7188 = !DILocation(line: 617, column: 28, scope: !7179)
!7189 = !DILocation(line: 618, column: 32, scope: !7179)
!7190 = !DILocation(line: 618, column: 31, scope: !7179)
!7191 = !DILocation(line: 618, column: 29, scope: !7179)
!7192 = !DILocation(line: 621, column: 31, scope: !7179)
!7193 = !DILocation(line: 621, column: 24, scope: !7179)
!7194 = !DILocation(line: 622, column: 34, scope: !7179)
!7195 = !DILocation(line: 622, column: 27, scope: !7179)
!7196 = !DILocation(line: 623, column: 32, scope: !7179)
!7197 = !DILocation(line: 623, column: 25, scope: !7179)
!7198 = !DILocation(line: 624, column: 33, scope: !7179)
!7199 = !DILocation(line: 624, column: 26, scope: !7179)
!7200 = !DILocation(line: 625, column: 33, scope: !7179)
!7201 = !DILocation(line: 625, column: 26, scope: !7179)
!7202 = !DILocation(line: 629, column: 32, scope: !7179)
!7203 = !DILocation(line: 629, column: 47, scope: !7179)
!7204 = !DILocation(line: 629, column: 25, scope: !7179)
!7205 = !DILocation(line: 630, column: 32, scope: !7179)
!7206 = !DILocation(line: 630, column: 47, scope: !7179)
!7207 = !DILocation(line: 630, column: 25, scope: !7179)
!7208 = !DILocation(line: 633, column: 24, scope: !7179)
!7209 = !DILocation(line: 633, column: 31, scope: !7179)
!7210 = !DILocation(line: 633, column: 36, scope: !7179)
!7211 = !DILocation(line: 633, column: 28, scope: !7179)
!7212 = !DILocation(line: 633, column: 5, scope: !7179)
!7213 = !DILocation(line: 635, column: 5, scope: !7179)
!7214 = !DILocation(line: 636, column: 1, scope: !7179)
!7215 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !999, file: !999, line: 641, type: !291, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !293)
!7216 = !DILocation(line: 644, column: 26, scope: !7215)
!7217 = !DILocation(line: 644, column: 24, scope: !7215)
!7218 = !DILocation(line: 645, column: 29, scope: !7215)
!7219 = !DILocation(line: 645, column: 27, scope: !7215)
!7220 = !DILocation(line: 646, column: 27, scope: !7215)
!7221 = !DILocation(line: 646, column: 25, scope: !7215)
!7222 = !DILocation(line: 647, column: 28, scope: !7215)
!7223 = !DILocation(line: 647, column: 26, scope: !7215)
!7224 = !DILocation(line: 648, column: 27, scope: !7215)
!7225 = !DILocation(line: 648, column: 25, scope: !7215)
!7226 = !DILocation(line: 652, column: 32, scope: !7215)
!7227 = !DILocation(line: 652, column: 47, scope: !7215)
!7228 = !DILocation(line: 652, column: 25, scope: !7215)
!7229 = !DILocation(line: 655, column: 24, scope: !7215)
!7230 = !DILocation(line: 655, column: 5, scope: !7215)
!7231 = !DILocation(line: 657, column: 5, scope: !7215)
!7232 = !DILocation(line: 660, column: 9, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7215, file: !999, line: 660, column: 9)
!7234 = !DILocation(line: 660, column: 59, scope: !7233)
!7235 = !DILocation(line: 660, column: 38, scope: !7233)
!7236 = !DILocation(line: 660, column: 37, scope: !7233)
!7237 = !DILocation(line: 660, column: 33, scope: !7233)
!7238 = !DILocation(line: 660, column: 9, scope: !7215)
!7239 = !DILocation(line: 661, column: 9, scope: !7233)
!7240 = distinct !{!7240, !7239, !7241}
!7241 = !DILocation(line: 661, column: 18, scope: !7233)
!7242 = !DILocation(line: 662, column: 1, scope: !7215)
!7243 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !999, file: !999, line: 668, type: !291, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !293)
!7244 = !DILocation(line: 671, column: 9, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7243, file: !999, line: 671, column: 9)
!7246 = !DILocation(line: 671, column: 40, scope: !7245)
!7247 = !DILocation(line: 671, column: 9, scope: !7243)
!7248 = !DILocation(line: 672, column: 47, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7245, file: !999, line: 671, column: 46)
!7250 = !DILocation(line: 672, column: 40, scope: !7249)
!7251 = !DILocation(line: 673, column: 5, scope: !7249)
!7252 = !DILocation(line: 674, column: 9, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7243, file: !999, line: 674, column: 9)
!7254 = !DILocation(line: 674, column: 41, scope: !7253)
!7255 = !DILocation(line: 674, column: 9, scope: !7243)
!7256 = !DILocation(line: 675, column: 48, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7253, file: !999, line: 674, column: 47)
!7258 = !DILocation(line: 675, column: 41, scope: !7257)
!7259 = !DILocation(line: 676, column: 5, scope: !7257)
!7260 = !DILocation(line: 679, column: 33, scope: !7243)
!7261 = !DILocation(line: 679, column: 48, scope: !7243)
!7262 = !DILocation(line: 679, column: 25, scope: !7243)
!7263 = !DILocation(line: 680, column: 25, scope: !7243)
!7264 = !DILocation(line: 686, column: 5, scope: !7243)
!7265 = !DILocation(line: 688, column: 1, scope: !7243)
!7266 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !999, file: !999, line: 689, type: !291, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !998, retainedNodes: !293)
!7267 = !DILocation(line: 692, column: 9, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7266, file: !999, line: 692, column: 9)
!7269 = !DILocation(line: 692, column: 40, scope: !7268)
!7270 = !DILocation(line: 692, column: 9, scope: !7266)
!7271 = !DILocation(line: 693, column: 29, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7268, file: !999, line: 692, column: 46)
!7273 = !DILocation(line: 694, column: 5, scope: !7272)
!7274 = !DILocation(line: 695, column: 9, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7266, file: !999, line: 695, column: 9)
!7276 = !DILocation(line: 695, column: 41, scope: !7275)
!7277 = !DILocation(line: 695, column: 9, scope: !7266)
!7278 = !DILocation(line: 696, column: 29, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7275, file: !999, line: 695, column: 47)
!7280 = !DILocation(line: 697, column: 5, scope: !7279)
!7281 = !DILocation(line: 698, column: 5, scope: !7266)
!7282 = !DILocation(line: 699, column: 1, scope: !7266)
!7283 = distinct !DISubprogram(name: "ust_get_current_time", scope: !1098, file: !1098, line: 91, type: !3805, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7284)
!7284 = !{!7285}
!7285 = !DILocalVariable(name: "counter", scope: !7283, file: !1098, line: 102, type: !61)
!7286 = !DILocation(line: 0, scope: !7283)
!7287 = !DILocation(line: 110, column: 5, scope: !7283)
!7288 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !1098, file: !1098, line: 114, type: !3805, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7289)
!7289 = !{!7290}
!7290 = !DILocalVariable(name: "counter", scope: !7288, file: !1098, line: 125, type: !61)
!7291 = !DILocation(line: 0, scope: !7288)
!7292 = !DILocation(line: 133, column: 5, scope: !7288)
!7293 = distinct !DISubprogram(name: "ust_busy_wait", scope: !1098, file: !1098, line: 137, type: !6418, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7294)
!7294 = !{!7295}
!7295 = !DILocalVariable(name: "delay_us", arg: 1, scope: !7293, file: !1098, line: 137, type: !61)
!7296 = !DILocation(line: 0, scope: !7293)
!7297 = !DILocation(line: 142, column: 5, scope: !7293)
!7298 = !DILocation(line: 144, column: 1, scope: !7293)
!7299 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !1098, file: !1098, line: 163, type: !3805, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7300)
!7300 = !{!7301}
!7301 = !DILocalVariable(name: "mask", scope: !7299, file: !1098, line: 165, type: !61)
!7302 = !DILocation(line: 166, column: 12, scope: !7299)
!7303 = !DILocation(line: 0, scope: !7299)
!7304 = !DILocation(line: 167, column: 5, scope: !7299)
!7305 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !1098, file: !1098, line: 171, type: !6418, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7306)
!7306 = !{!7307}
!7307 = !DILocalVariable(name: "mask", arg: 1, scope: !7305, file: !1098, line: 171, type: !61)
!7308 = !DILocation(line: 0, scope: !7305)
!7309 = !DILocation(line: 173, column: 5, scope: !7305)
!7310 = !DILocation(line: 174, column: 1, scope: !7305)
!7311 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !1098, file: !1098, line: 199, type: !1370, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7312)
!7312 = !{!7313}
!7313 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7311, file: !1098, line: 199, type: !88)
!7314 = !DILocation(line: 0, scope: !7311)
!7315 = !DILocation(line: 201, column: 5, scope: !7311)
!7316 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !1098, file: !1098, line: 388, type: !7317, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !293)
!7317 = !DISubroutineType(types: !7318)
!7318 = !{!974}
!7319 = !DILocation(line: 390, column: 5, scope: !7316)
!7320 = distinct !DISubprogram(name: "CompareData", scope: !1098, file: !1098, line: 872, type: !7321, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7323)
!7321 = !DISubroutineType(types: !7322)
!7322 = !{!91, !88, !88, !61}
!7323 = !{!7324, !7325, !7326, !7327, !7328, !7331, !7332, !7335, !7336, !7338}
!7324 = !DILocalVariable(name: "Address", arg: 1, scope: !7320, file: !1098, line: 872, type: !88)
!7325 = !DILocalVariable(name: "Data", arg: 2, scope: !7320, file: !1098, line: 872, type: !88)
!7326 = !DILocalVariable(name: "Length", arg: 3, scope: !7320, file: !1098, line: 872, type: !61)
!7327 = !DILocalVariable(name: "i", scope: !7320, file: !1098, line: 874, type: !61)
!7328 = !DILocalVariable(name: "Source", scope: !7329, file: !1098, line: 877, type: !1036)
!7329 = distinct !DILexicalBlock(scope: !7330, file: !1098, line: 876, column: 74)
!7330 = distinct !DILexicalBlock(scope: !7320, file: !1098, line: 876, column: 9)
!7331 = !DILocalVariable(name: "Dest", scope: !7329, file: !1098, line: 878, type: !1036)
!7332 = !DILocalVariable(name: "Source", scope: !7333, file: !1098, line: 885, type: !1067)
!7333 = distinct !DILexicalBlock(scope: !7334, file: !1098, line: 884, column: 79)
!7334 = distinct !DILexicalBlock(scope: !7330, file: !1098, line: 884, column: 16)
!7335 = !DILocalVariable(name: "Dest", scope: !7333, file: !1098, line: 886, type: !1067)
!7336 = !DILocalVariable(name: "Source", scope: !7337, file: !1098, line: 893, type: !797)
!7337 = distinct !DILexicalBlock(scope: !7334, file: !1098, line: 892, column: 12)
!7338 = !DILocalVariable(name: "Dest", scope: !7337, file: !1098, line: 894, type: !797)
!7339 = !DILocation(line: 0, scope: !7320)
!7340 = !DILocation(line: 876, column: 11, scope: !7330)
!7341 = !DILocation(line: 876, column: 42, scope: !7330)
!7342 = !DILocation(line: 877, column: 28, scope: !7329)
!7343 = !DILocation(line: 0, scope: !7329)
!7344 = !DILocation(line: 878, column: 26, scope: !7329)
!7345 = !DILocation(line: 879, column: 23, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7347, file: !1098, line: 879, column: 9)
!7347 = distinct !DILexicalBlock(scope: !7329, file: !1098, line: 879, column: 9)
!7348 = !DILocation(line: 879, column: 9, scope: !7347)
!7349 = !DILocation(line: 880, column: 17, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7351, file: !1098, line: 880, column: 17)
!7351 = distinct !DILexicalBlock(scope: !7346, file: !1098, line: 879, column: 68)
!7352 = !DILocation(line: 880, column: 30, scope: !7350)
!7353 = !DILocation(line: 880, column: 27, scope: !7350)
!7354 = !DILocation(line: 879, column: 64, scope: !7346)
!7355 = !DILocation(line: 880, column: 17, scope: !7351)
!7356 = distinct !{!7356, !7348, !7357}
!7357 = !DILocation(line: 883, column: 9, scope: !7347)
!7358 = !DILocation(line: 884, column: 47, scope: !7334)
!7359 = !DILocation(line: 895, column: 23, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7361, file: !1098, line: 895, column: 9)
!7361 = distinct !DILexicalBlock(scope: !7337, file: !1098, line: 895, column: 9)
!7362 = !DILocation(line: 895, column: 9, scope: !7361)
!7363 = !DILocation(line: 885, column: 28, scope: !7333)
!7364 = !DILocation(line: 0, scope: !7333)
!7365 = !DILocation(line: 886, column: 26, scope: !7333)
!7366 = !DILocation(line: 887, column: 23, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7368, file: !1098, line: 887, column: 9)
!7368 = distinct !DILexicalBlock(scope: !7333, file: !1098, line: 887, column: 9)
!7369 = !DILocation(line: 887, column: 9, scope: !7368)
!7370 = !DILocation(line: 888, column: 17, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7372, file: !1098, line: 888, column: 17)
!7372 = distinct !DILexicalBlock(scope: !7367, file: !1098, line: 887, column: 68)
!7373 = !DILocation(line: 888, column: 30, scope: !7371)
!7374 = !DILocation(line: 888, column: 27, scope: !7371)
!7375 = !DILocation(line: 887, column: 64, scope: !7367)
!7376 = !DILocation(line: 888, column: 17, scope: !7372)
!7377 = distinct !{!7377, !7369, !7378}
!7378 = !DILocation(line: 891, column: 9, scope: !7368)
!7379 = !DILocation(line: 896, column: 17, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7381, file: !1098, line: 896, column: 17)
!7381 = distinct !DILexicalBlock(scope: !7360, file: !1098, line: 895, column: 38)
!7382 = !DILocation(line: 896, column: 30, scope: !7380)
!7383 = !DILocation(line: 896, column: 27, scope: !7380)
!7384 = !DILocation(line: 895, column: 34, scope: !7360)
!7385 = !DILocation(line: 896, column: 17, scope: !7381)
!7386 = distinct !{!7386, !7362, !7387}
!7387 = !DILocation(line: 899, column: 9, scope: !7361)
!7388 = !DILocation(line: 902, column: 1, scope: !7320)
!7389 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !1098, file: !1098, line: 919, type: !7390, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7392)
!7390 = !DISubroutineType(types: !7391)
!7391 = !{null, !88, !88, !61}
!7392 = !{!7393, !7394, !7395, !7396, !7397, !7398, !7399, !7400, !7401, !7402, !7403}
!7393 = !DILocalVariable(name: "Target", arg: 1, scope: !7389, file: !1098, line: 919, type: !88)
!7394 = !DILocalVariable(name: "Data", arg: 2, scope: !7389, file: !1098, line: 919, type: !88)
!7395 = !DILocalVariable(name: "Size", arg: 3, scope: !7389, file: !1098, line: 919, type: !61)
!7396 = !DILocalVariable(name: "D", scope: !7389, file: !1098, line: 921, type: !1268)
!7397 = !DILocalVariable(name: "address", scope: !7389, file: !1098, line: 922, type: !61)
!7398 = !DILocalVariable(name: "p_data", scope: !7389, file: !1098, line: 923, type: !797)
!7399 = !DILocalVariable(name: "cmd1", scope: !7389, file: !1098, line: 924, type: !61)
!7400 = !DILocalVariable(name: "length", scope: !7389, file: !1098, line: 924, type: !61)
!7401 = !DILocalVariable(name: "written", scope: !7389, file: !1098, line: 924, type: !61)
!7402 = !DILocalVariable(name: "status", scope: !7389, file: !1098, line: 925, type: !1320)
!7403 = !DILocalVariable(name: "savedMask", scope: !7389, file: !1098, line: 926, type: !61)
!7404 = !DILocation(line: 0, scope: !7389)
!7405 = !DILocation(line: 921, column: 60, scope: !7389)
!7406 = !DILocation(line: 923, column: 5, scope: !7389)
!7407 = !DILocation(line: 923, column: 19, scope: !7389)
!7408 = !DILocation(line: 924, column: 5, scope: !7389)
!7409 = !DILocation(line: 932, column: 9, scope: !7389)
!7410 = !DILocation(line: 933, column: 8, scope: !7389)
!7411 = !DILocation(line: 933, column: 21, scope: !7389)
!7412 = !DILocation(line: 935, column: 14, scope: !7389)
!7413 = !DILocation(line: 935, column: 5, scope: !7389)
!7414 = !DILocation(line: 922, column: 29, scope: !7389)
!7415 = !DILocation(line: 937, column: 18, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7389, file: !1098, line: 935, column: 23)
!7417 = !DILocation(line: 937, column: 35, scope: !7416)
!7418 = !DILocation(line: 937, column: 74, scope: !7416)
!7419 = !DILocation(line: 937, column: 50, scope: !7416)
!7420 = !DILocation(line: 937, column: 39, scope: !7416)
!7421 = !DILocation(line: 940, column: 35, scope: !7416)
!7422 = !DILocation(line: 940, column: 29, scope: !7416)
!7423 = !DILocation(line: 940, column: 16, scope: !7416)
!7424 = !DILocation(line: 942, column: 18, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7416, file: !1098, line: 942, column: 13)
!7426 = !DILocation(line: 942, column: 29, scope: !7425)
!7427 = !DILocation(line: 942, column: 13, scope: !7416)
!7428 = !DILocation(line: 943, column: 13, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7425, file: !1098, line: 942, column: 55)
!7430 = !DILocation(line: 944, column: 9, scope: !7429)
!7431 = !DILocation(line: 947, column: 16, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7416, file: !1098, line: 947, column: 13)
!7433 = !DILocation(line: 947, column: 29, scope: !7432)
!7434 = !DILocation(line: 0, scope: !7432)
!7435 = !DILocation(line: 947, column: 13, scope: !7416)
!7436 = !DILocation(line: 948, column: 20, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7432, file: !1098, line: 947, column: 35)
!7438 = !DILocation(line: 949, column: 32, scope: !7437)
!7439 = !DILocation(line: 949, column: 40, scope: !7437)
!7440 = !DILocation(line: 949, column: 13, scope: !7437)
!7441 = !DILocation(line: 950, column: 9, scope: !7437)
!7442 = !DILocation(line: 953, column: 20, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7432, file: !1098, line: 952, column: 9)
!7444 = !DILocation(line: 954, column: 32, scope: !7443)
!7445 = !DILocation(line: 954, column: 40, scope: !7443)
!7446 = !DILocation(line: 954, column: 13, scope: !7443)
!7447 = !DILocation(line: 957, column: 21, scope: !7416)
!7448 = !DILocation(line: 963, column: 45, scope: !7416)
!7449 = !DILocation(line: 963, column: 42, scope: !7416)
!7450 = !DILocation(line: 963, column: 40, scope: !7416)
!7451 = !DILocation(line: 963, column: 58, scope: !7416)
!7452 = !DILocation(line: 963, column: 29, scope: !7416)
!7453 = !DILocation(line: 964, column: 28, scope: !7416)
!7454 = !DILocation(line: 965, column: 37, scope: !7416)
!7455 = !DILocation(line: 966, column: 9, scope: !7416)
!7456 = !DILocation(line: 967, column: 26, scope: !7416)
!7457 = !DILocation(line: 967, column: 9, scope: !7416)
!7458 = !DILocation(line: 968, column: 29, scope: !7416)
!7459 = !DILocation(line: 968, column: 9, scope: !7416)
!7460 = !DILocation(line: 972, column: 9, scope: !7416)
!7461 = !DILocation(line: 978, column: 9, scope: !7416)
!7462 = !DILocation(line: 979, column: 50, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7416, file: !1098, line: 978, column: 22)
!7464 = !DILocation(line: 979, column: 55, scope: !7463)
!7465 = !DILocation(line: 979, column: 22, scope: !7463)
!7466 = !DILocation(line: 980, column: 35, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !7463, file: !1098, line: 980, column: 17)
!7468 = !DILocation(line: 980, column: 32, scope: !7467)
!7469 = !DILocation(line: 980, column: 30, scope: !7467)
!7470 = !DILocation(line: 980, column: 19, scope: !7467)
!7471 = !DILocation(line: 980, column: 17, scope: !7463)
!7472 = distinct !{!7472, !7461, !7473}
!7473 = !DILocation(line: 983, column: 9, scope: !7416)
!7474 = !DILocation(line: 991, column: 9, scope: !7416)
!7475 = !DILocation(line: 993, column: 19, scope: !7416)
!7476 = !DILocation(line: 993, column: 16, scope: !7416)
!7477 = !DILocation(line: 994, column: 14, scope: !7416)
!7478 = !DILocation(line: 995, column: 17, scope: !7416)
!7479 = distinct !{!7479, !7413, !7480}
!7480 = !DILocation(line: 996, column: 5, scope: !7389)
!7481 = !DILocation(line: 998, column: 21, scope: !7389)
!7482 = !DILocation(line: 1005, column: 9, scope: !7389)
!7483 = !DILocation(line: 1008, column: 1, scope: !7389)
!7484 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !1098, file: !1098, line: 1427, type: !7485, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7487)
!7485 = !DISubroutineType(types: !7486)
!7486 = !{null, !1268}
!7487 = !{!7488, !7489}
!7488 = !DILocalVariable(name: "D", arg: 1, scope: !7484, file: !1098, line: 1427, type: !1268)
!7489 = !DILocalVariable(name: "Result", scope: !7484, file: !1098, line: 1429, type: !1936)
!7490 = !DILocation(line: 0, scope: !7484)
!7491 = !DILocation(line: 1430, column: 5, scope: !7484)
!7492 = !DILocation(line: 1431, column: 18, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7484, file: !1098, line: 1430, column: 8)
!7494 = !DILocation(line: 1432, column: 21, scope: !7484)
!7495 = !DILocation(line: 1432, column: 5, scope: !7493)
!7496 = distinct !{!7496, !7491, !7497}
!7497 = !DILocation(line: 1432, column: 43, scope: !7484)
!7498 = !DILocation(line: 1433, column: 1, scope: !7484)
!7499 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !1098, file: !1098, line: 3478, type: !7485, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7500)
!7500 = !{!7501}
!7501 = !DILocalVariable(name: "D", arg: 1, scope: !7499, file: !1098, line: 3478, type: !1268)
!7502 = !DILocation(line: 0, scope: !7499)
!7503 = !DILocation(line: 3480, column: 30, scope: !7499)
!7504 = !DILocation(line: 3480, column: 35, scope: !7499)
!7505 = !DILocation(line: 3480, column: 27, scope: !7499)
!7506 = !DILocation(line: 3480, column: 5, scope: !7499)
!7507 = !DILocation(line: 3481, column: 1, scope: !7499)
!7508 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !1098, file: !1098, line: 2382, type: !291, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7509)
!7509 = !{!7510}
!7510 = !DILocalVariable(name: "savedMask", scope: !7508, file: !1098, line: 2384, type: !61)
!7511 = !DILocation(line: 2385, column: 17, scope: !7508)
!7512 = !DILocation(line: 0, scope: !7508)
!7513 = !DILocation(line: 2390, column: 20, scope: !7508)
!7514 = !DILocation(line: 2391, column: 5, scope: !7508)
!7515 = !DILocation(line: 2392, column: 1, scope: !7508)
!7516 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !1098, file: !1098, line: 3536, type: !7517, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7519)
!7517 = !DISubroutineType(types: !7518)
!7518 = !{!61, !1268, !356}
!7519 = !{!7520, !7521, !7522, !7523}
!7520 = !DILocalVariable(name: "D", arg: 1, scope: !7516, file: !1098, line: 3536, type: !1268)
!7521 = !DILocalVariable(name: "cmd", arg: 2, scope: !7516, file: !1098, line: 3536, type: !356)
!7522 = !DILocalVariable(name: "savedMask", scope: !7516, file: !1098, line: 3538, type: !61)
!7523 = !DILocalVariable(name: "result", scope: !7516, file: !1098, line: 3539, type: !61)
!7524 = !DILocation(line: 0, scope: !7516)
!7525 = !DILocation(line: 3541, column: 17, scope: !7516)
!7526 = !DILocation(line: 3542, column: 22, scope: !7516)
!7527 = !DILocation(line: 3542, column: 5, scope: !7516)
!7528 = !DILocation(line: 3543, column: 35, scope: !7516)
!7529 = !DILocation(line: 3543, column: 33, scope: !7516)
!7530 = !DILocation(line: 3544, column: 25, scope: !7516)
!7531 = !DILocation(line: 3545, column: 24, scope: !7516)
!7532 = !DILocation(line: 3546, column: 25, scope: !7516)
!7533 = !DILocation(line: 3546, column: 5, scope: !7516)
!7534 = !DILocation(line: 3547, column: 42, scope: !7516)
!7535 = !DILocation(line: 3547, column: 60, scope: !7516)
!7536 = !DILocation(line: 3547, column: 14, scope: !7516)
!7537 = !DILocation(line: 3548, column: 5, scope: !7516)
!7538 = !DILocation(line: 3550, column: 5, scope: !7516)
!7539 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !1098, file: !1098, line: 2393, type: !291, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7540)
!7540 = !{!7541}
!7541 = !DILocalVariable(name: "savedMask", scope: !7539, file: !1098, line: 2395, type: !61)
!7542 = !DILocation(line: 2396, column: 17, scope: !7539)
!7543 = !DILocation(line: 0, scope: !7539)
!7544 = !DILocation(line: 2401, column: 20, scope: !7539)
!7545 = !DILocation(line: 2402, column: 5, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7547, file: !1098, line: 2402, column: 5)
!7547 = distinct !DILexicalBlock(scope: !7539, file: !1098, line: 2402, column: 5)
!7548 = !DILocation(line: 2403, column: 5, scope: !7539)
!7549 = !DILocation(line: 2404, column: 1, scope: !7539)
!7550 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !1098, file: !1098, line: 1440, type: !7485, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7551)
!7551 = !{!7552, !7553}
!7552 = !DILocalVariable(name: "D", arg: 1, scope: !7550, file: !1098, line: 1440, type: !1268)
!7553 = !DILocalVariable(name: "savedMask", scope: !7550, file: !1098, line: 1442, type: !974)
!7554 = !DILocation(line: 0, scope: !7550)
!7555 = !DILocation(line: 1443, column: 17, scope: !7550)
!7556 = !DILocation(line: 1444, column: 9, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7550, file: !1098, line: 1444, column: 9)
!7558 = !DILocation(line: 1444, column: 9, scope: !7550)
!7559 = !DILocation(line: 1445, column: 17, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7557, file: !1098, line: 1444, column: 24)
!7561 = !DILocation(line: 1446, column: 9, scope: !7560)
!7562 = !DILocation(line: 1451, column: 1, scope: !7550)
!7563 = !DILocation(line: 1448, column: 9, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7557, file: !1098, line: 1447, column: 12)
!7565 = !DILocation(line: 1449, column: 9, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7567, file: !1098, line: 1449, column: 9)
!7567 = distinct !DILexicalBlock(scope: !7568, file: !1098, line: 1449, column: 9)
!7568 = distinct !DILexicalBlock(scope: !7564, file: !1098, line: 1449, column: 9)
!7569 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !1098, file: !1098, line: 1027, type: !291, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7570)
!7570 = !{!7571, !7572, !7573, !7574}
!7571 = !DILocalVariable(name: "D", scope: !7569, file: !1098, line: 1029, type: !1268)
!7572 = !DILocalVariable(name: "status", scope: !7569, file: !1098, line: 1030, type: !1320)
!7573 = !DILocalVariable(name: "savedMask", scope: !7569, file: !1098, line: 1031, type: !61)
!7574 = !DILocalVariable(name: "duration", scope: !7575, file: !1098, line: 1231, type: !61)
!7575 = distinct !DILexicalBlock(scope: !7569, file: !1098, line: 1230, column: 5)
!7576 = !DILocation(line: 0, scope: !7569)
!7577 = !DILocation(line: 1033, column: 17, scope: !7569)
!7578 = !DILocation(line: 1034, column: 8, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7569, file: !1098, line: 1034, column: 8)
!7580 = !DILocation(line: 1034, column: 30, scope: !7579)
!7581 = !DILocation(line: 1034, column: 8, scope: !7569)
!7582 = !DILocation(line: 1039, column: 27, scope: !7569)
!7583 = !DILocation(line: 1058, column: 48, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7569, file: !1098, line: 1055, column: 5)
!7585 = !DILocation(line: 1069, column: 5, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7587, file: !1098, line: 1069, column: 5)
!7587 = distinct !DILexicalBlock(scope: !7569, file: !1098, line: 1069, column: 5)
!7588 = !DILocation(line: 1069, column: 5, scope: !7587)
!7589 = !DILocation(line: 1069, column: 5, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7586, file: !1098, line: 1069, column: 5)
!7591 = !DILocation(line: 1075, column: 10, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7569, file: !1098, line: 1075, column: 9)
!7593 = !DILocation(line: 1075, column: 27, scope: !7592)
!7594 = !DILocation(line: 1075, column: 33, scope: !7592)
!7595 = !DILocation(line: 1075, column: 40, scope: !7592)
!7596 = !DILocation(line: 1075, column: 53, scope: !7592)
!7597 = !DILocation(line: 1075, column: 9, scope: !7569)
!7598 = !DILocation(line: 1084, column: 9, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7592, file: !1098, line: 1083, column: 11)
!7600 = !DILocation(line: 1085, column: 50, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7599, file: !1098, line: 1084, column: 21)
!7602 = !DILocation(line: 1085, column: 55, scope: !7601)
!7603 = !DILocation(line: 1085, column: 22, scope: !7601)
!7604 = !DILocation(line: 1086, column: 35, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7601, file: !1098, line: 1086, column: 17)
!7606 = !DILocation(line: 1086, column: 32, scope: !7605)
!7607 = !DILocation(line: 1086, column: 30, scope: !7605)
!7608 = !DILocation(line: 1086, column: 19, scope: !7605)
!7609 = !DILocation(line: 1086, column: 17, scope: !7601)
!7610 = distinct !{!7610, !7598, !7611}
!7611 = !DILocation(line: 1089, column: 9, scope: !7599)
!7612 = !DILocation(line: 1107, column: 11, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7569, file: !1098, line: 1107, column: 9)
!7614 = !DILocation(line: 1107, column: 30, scope: !7613)
!7615 = !DILocation(line: 1117, column: 46, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7613, file: !1098, line: 1107, column: 53)
!7617 = !DILocation(line: 1117, column: 51, scope: !7616)
!7618 = !DILocation(line: 1117, column: 18, scope: !7616)
!7619 = !DILocation(line: 1120, column: 31, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7616, file: !1098, line: 1120, column: 13)
!7621 = !DILocation(line: 1120, column: 28, scope: !7620)
!7622 = !DILocation(line: 1120, column: 26, scope: !7620)
!7623 = !DILocation(line: 1120, column: 15, scope: !7620)
!7624 = !DILocation(line: 1120, column: 13, scope: !7616)
!7625 = !DILocation(line: 1128, column: 13, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7620, file: !1098, line: 1120, column: 55)
!7627 = !DILocation(line: 1131, column: 13, scope: !7626)
!7628 = !DILocation(line: 1132, column: 54, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7626, file: !1098, line: 1131, column: 23)
!7630 = !DILocation(line: 1132, column: 59, scope: !7629)
!7631 = !DILocation(line: 1132, column: 26, scope: !7629)
!7632 = !DILocation(line: 1133, column: 39, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7629, file: !1098, line: 1133, column: 21)
!7634 = !DILocation(line: 1133, column: 36, scope: !7633)
!7635 = !DILocation(line: 1133, column: 34, scope: !7633)
!7636 = !DILocation(line: 1133, column: 23, scope: !7633)
!7637 = !DILocation(line: 1133, column: 21, scope: !7629)
!7638 = distinct !{!7638, !7627, !7639}
!7639 = !DILocation(line: 1158, column: 13, scope: !7626)
!7640 = !DILocation(line: 1162, column: 21, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7626, file: !1098, line: 1162, column: 17)
!7642 = !DILocation(line: 1162, column: 32, scope: !7641)
!7643 = !DILocation(line: 1162, column: 51, scope: !7641)
!7644 = !DILocation(line: 1162, column: 58, scope: !7641)
!7645 = !DILocation(line: 1162, column: 71, scope: !7641)
!7646 = !DILocation(line: 1162, column: 17, scope: !7626)
!7647 = !DILocation(line: 1164, column: 45, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7641, file: !1098, line: 1162, column: 91)
!7649 = !DILocation(line: 1165, column: 36, scope: !7648)
!7650 = !DILocation(line: 1166, column: 37, scope: !7648)
!7651 = !DILocation(line: 1167, column: 34, scope: !7648)
!7652 = !DILocation(line: 1167, column: 17, scope: !7648)
!7653 = !DILocation(line: 1168, column: 37, scope: !7648)
!7654 = !DILocation(line: 1168, column: 17, scope: !7648)
!7655 = !DILocation(line: 1171, column: 50, scope: !7648)
!7656 = !DILocation(line: 1172, column: 37, scope: !7648)
!7657 = !DILocation(line: 1173, column: 45, scope: !7648)
!7658 = !DILocation(line: 1174, column: 34, scope: !7648)
!7659 = !DILocation(line: 1174, column: 17, scope: !7648)
!7660 = !DILocation(line: 1175, column: 37, scope: !7648)
!7661 = !DILocation(line: 1175, column: 17, scope: !7648)
!7662 = !DILocation(line: 1178, column: 17, scope: !7648)
!7663 = !DILocation(line: 1179, column: 49, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7648, file: !1098, line: 1178, column: 20)
!7665 = !DILocation(line: 1180, column: 40, scope: !7664)
!7666 = !DILocation(line: 1181, column: 41, scope: !7664)
!7667 = !DILocation(line: 1182, column: 38, scope: !7664)
!7668 = !DILocation(line: 1182, column: 21, scope: !7664)
!7669 = !DILocation(line: 1183, column: 41, scope: !7664)
!7670 = !DILocation(line: 1183, column: 21, scope: !7664)
!7671 = !DILocation(line: 1184, column: 43, scope: !7664)
!7672 = !DILocation(line: 1185, column: 17, scope: !7664)
!7673 = distinct !{!7673, !7662, !7674}
!7674 = !DILocation(line: 1185, column: 32, scope: !7648)
!7675 = !DILocation(line: 1194, column: 13, scope: !7626)
!7676 = !DILocation(line: 1195, column: 9, scope: !7626)
!7677 = !DILocation(line: 1197, column: 21, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7679, file: !1098, line: 1197, column: 17)
!7679 = distinct !DILexicalBlock(scope: !7620, file: !1098, line: 1195, column: 16)
!7680 = !DILocation(line: 1197, column: 32, scope: !7678)
!7681 = !DILocation(line: 1197, column: 53, scope: !7678)
!7682 = !DILocation(line: 1197, column: 60, scope: !7678)
!7683 = !DILocation(line: 1197, column: 76, scope: !7678)
!7684 = !DILocation(line: 1197, column: 17, scope: !7679)
!7685 = !DILocation(line: 1198, column: 54, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7678, file: !1098, line: 1197, column: 98)
!7687 = !DILocation(line: 1198, column: 59, scope: !7686)
!7688 = !DILocation(line: 1198, column: 26, scope: !7686)
!7689 = !DILocation(line: 1199, column: 40, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7686, file: !1098, line: 1199, column: 21)
!7691 = !DILocation(line: 1199, column: 37, scope: !7690)
!7692 = !DILocation(line: 1199, column: 35, scope: !7690)
!7693 = !DILocation(line: 1199, column: 24, scope: !7690)
!7694 = !DILocation(line: 1199, column: 63, scope: !7690)
!7695 = !DILocation(line: 1200, column: 41, scope: !7690)
!7696 = !DILocation(line: 1200, column: 39, scope: !7690)
!7697 = !DILocation(line: 1200, column: 28, scope: !7690)
!7698 = !DILocation(line: 1199, column: 21, scope: !7686)
!7699 = !DILocation(line: 1201, column: 40, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7690, file: !1098, line: 1200, column: 68)
!7701 = !DILocation(line: 1201, column: 21, scope: !7700)
!7702 = !DILocation(line: 1202, column: 40, scope: !7700)
!7703 = !DILocation(line: 1202, column: 21, scope: !7700)
!7704 = !DILocation(line: 1203, column: 17, scope: !7700)
!7705 = !DILocation(line: 1206, column: 13, scope: !7679)
!7706 = !DILocation(line: 1228, column: 25, scope: !7569)
!7707 = !DILocation(line: 1231, column: 29, scope: !7575)
!7708 = !DILocation(line: 0, scope: !7575)
!7709 = !DILocation(line: 1232, column: 13, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7575, file: !1098, line: 1232, column: 13)
!7711 = !DILocation(line: 1232, column: 43, scope: !7710)
!7712 = !DILocation(line: 1232, column: 13, scope: !7575)
!7713 = !DILocation(line: 1233, column: 43, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7710, file: !1098, line: 1232, column: 55)
!7715 = !DILocation(line: 1234, column: 9, scope: !7714)
!7716 = !DILocation(line: 1237, column: 5, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7718, file: !1098, line: 1237, column: 5)
!7718 = distinct !DILexicalBlock(scope: !7569, file: !1098, line: 1237, column: 5)
!7719 = !DILocation(line: 1240, column: 5, scope: !7569)
!7720 = !DILocation(line: 1241, column: 1, scope: !7569)
!7721 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !1098, file: !1098, line: 3421, type: !7485, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7722)
!7722 = !{!7723, !7724, !7725, !7726}
!7723 = !DILocalVariable(name: "D", arg: 1, scope: !7721, file: !1098, line: 3421, type: !1268)
!7724 = !DILocalVariable(name: "savedMask", scope: !7721, file: !1098, line: 3423, type: !61)
!7725 = !DILocalVariable(name: "currtime", scope: !7721, file: !1098, line: 3424, type: !61)
!7726 = !DILocalVariable(name: "difftime", scope: !7721, file: !1098, line: 3424, type: !61)
!7727 = !DILocation(line: 0, scope: !7721)
!7728 = !DILocation(line: 3427, column: 9, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7721, file: !1098, line: 3427, column: 9)
!7730 = !DILocation(line: 3427, column: 28, scope: !7729)
!7731 = !DILocation(line: 3427, column: 9, scope: !7721)
!7732 = !DILocation(line: 3429, column: 20, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7729, file: !1098, line: 3427, column: 59)
!7734 = !DILocation(line: 3430, column: 27, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7733, file: !1098, line: 3430, column: 13)
!7736 = !DILocation(line: 3430, column: 24, scope: !7735)
!7737 = !DILocation(line: 3430, column: 22, scope: !7735)
!7738 = !DILocation(line: 3430, column: 13, scope: !7733)
!7739 = !DILocation(line: 3431, column: 47, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7735, file: !1098, line: 3430, column: 46)
!7741 = !DILocation(line: 3431, column: 13, scope: !7740)
!7742 = !DILocation(line: 3432, column: 9, scope: !7740)
!7743 = !DILocation(line: 3435, column: 17, scope: !7721)
!7744 = !DILocation(line: 3436, column: 24, scope: !7721)
!7745 = !DILocation(line: 3436, column: 31, scope: !7721)
!7746 = !DILocation(line: 3436, column: 36, scope: !7721)
!7747 = !DILocation(line: 3436, column: 28, scope: !7721)
!7748 = !DILocation(line: 3436, column: 5, scope: !7721)
!7749 = !DILocation(line: 3442, column: 5, scope: !7721)
!7750 = !DILocation(line: 3443, column: 1, scope: !7721)
!7751 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !1098, file: !1098, line: 2405, type: !291, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7752)
!7752 = !{!7753}
!7753 = !DILocalVariable(name: "savedMask", scope: !7751, file: !1098, line: 2407, type: !61)
!7754 = !DILocation(line: 2408, column: 17, scope: !7751)
!7755 = !DILocation(line: 0, scope: !7751)
!7756 = !DILocation(line: 2413, column: 25, scope: !7751)
!7757 = !DILocation(line: 2414, column: 5, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !1098, line: 2414, column: 5)
!7759 = distinct !DILexicalBlock(scope: !7751, file: !1098, line: 2414, column: 5)
!7760 = !DILocation(line: 2415, column: 5, scope: !7751)
!7761 = !DILocation(line: 2416, column: 1, scope: !7751)
!7762 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !1098, file: !1098, line: 3561, type: !7763, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7765)
!7763 = !DISubroutineType(types: !7764)
!7764 = !{null, !1268, !807, !356}
!7765 = !{!7766, !7767, !7768, !7769}
!7766 = !DILocalVariable(name: "D", arg: 1, scope: !7762, file: !1098, line: 3561, type: !1268)
!7767 = !DILocalVariable(name: "cmd", arg: 2, scope: !7762, file: !1098, line: 3561, type: !807)
!7768 = !DILocalVariable(name: "outlen", arg: 3, scope: !7762, file: !1098, line: 3561, type: !356)
!7769 = !DILocalVariable(name: "savedMask", scope: !7762, file: !1098, line: 3563, type: !61)
!7770 = !DILocation(line: 0, scope: !7762)
!7771 = !DILocation(line: 3565, column: 17, scope: !7762)
!7772 = !DILocation(line: 3566, column: 22, scope: !7762)
!7773 = !DILocation(line: 3566, column: 5, scope: !7762)
!7774 = !DILocation(line: 3567, column: 33, scope: !7762)
!7775 = !DILocation(line: 3568, column: 27, scope: !7762)
!7776 = !DILocation(line: 3568, column: 25, scope: !7762)
!7777 = !DILocation(line: 3569, column: 24, scope: !7762)
!7778 = !DILocation(line: 3570, column: 25, scope: !7762)
!7779 = !DILocation(line: 3570, column: 5, scope: !7762)
!7780 = !DILocation(line: 3571, column: 5, scope: !7762)
!7781 = !DILocation(line: 3573, column: 1, scope: !7762)
!7782 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !1098, file: !1098, line: 1410, type: !7783, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7785)
!7783 = !DISubroutineType(types: !7784)
!7784 = !{!1936}
!7785 = !{!7786}
!7786 = !DILocalVariable(name: "savedMask", scope: !7782, file: !1098, line: 1412, type: !974)
!7787 = !DILocation(line: 1413, column: 17, scope: !7782)
!7788 = !DILocation(line: 0, scope: !7782)
!7789 = !DILocation(line: 1414, column: 9, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7782, file: !1098, line: 1414, column: 9)
!7791 = !DILocation(line: 1414, column: 9, scope: !7782)
!7792 = !DILocation(line: 1415, column: 17, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7790, file: !1098, line: 1414, column: 24)
!7794 = !DILocation(line: 1417, column: 9, scope: !7793)
!7795 = !DILocation(line: 0, scope: !7790)
!7796 = !DILocation(line: 1425, column: 1, scope: !7782)
!7797 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !1098, file: !1098, line: 1257, type: !7798, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7800)
!7798 = !DISubroutineType(types: !7799)
!7799 = !{!91}
!7800 = !{!7801, !7802, !7803}
!7801 = !DILocalVariable(name: "D", scope: !7797, file: !1098, line: 1259, type: !1268)
!7802 = !DILocalVariable(name: "status", scope: !7797, file: !1098, line: 1260, type: !1320)
!7803 = !DILocalVariable(name: "result", scope: !7797, file: !1098, line: 1261, type: !91)
!7804 = !DILocation(line: 1259, column: 57, scope: !7797)
!7805 = !DILocation(line: 0, scope: !7797)
!7806 = !DILocation(line: 1263, column: 5, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7808, file: !1098, line: 1263, column: 5)
!7808 = distinct !DILexicalBlock(scope: !7797, file: !1098, line: 1263, column: 5)
!7809 = !DILocation(line: 1263, column: 5, scope: !7808)
!7810 = !DILocation(line: 1263, column: 5, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7807, file: !1098, line: 1263, column: 5)
!7812 = !DILocation(line: 1265, column: 5, scope: !7797)
!7813 = !DILocation(line: 1267, column: 42, scope: !7797)
!7814 = !DILocation(line: 1267, column: 47, scope: !7797)
!7815 = !DILocation(line: 1267, column: 14, scope: !7797)
!7816 = !DILocation(line: 1269, column: 27, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7797, file: !1098, line: 1269, column: 9)
!7818 = !DILocation(line: 1269, column: 24, scope: !7817)
!7819 = !DILocation(line: 1269, column: 22, scope: !7817)
!7820 = !DILocation(line: 1269, column: 11, scope: !7817)
!7821 = !DILocation(line: 1269, column: 9, scope: !7797)
!7822 = !DILocation(line: 1270, column: 9, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7817, file: !1098, line: 1269, column: 51)
!7824 = !DILocation(line: 1272, column: 5, scope: !7823)
!7825 = !DILocation(line: 1274, column: 5, scope: !7797)
!7826 = !DILocation(line: 1276, column: 5, scope: !7797)
!7827 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !1098, file: !1098, line: 1289, type: !291, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7828)
!7828 = !{!7829}
!7829 = !DILocalVariable(name: "D", scope: !7827, file: !1098, line: 1291, type: !1268)
!7830 = !DILocation(line: 0, scope: !7827)
!7831 = !DILocation(line: 1293, column: 5, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7833, file: !1098, line: 1293, column: 5)
!7833 = distinct !DILexicalBlock(scope: !7827, file: !1098, line: 1293, column: 5)
!7834 = !DILocation(line: 1293, column: 5, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7832, file: !1098, line: 1293, column: 5)
!7836 = !DILocation(line: 1293, column: 5, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7838, file: !1098, line: 1293, column: 5)
!7838 = distinct !DILexicalBlock(scope: !7839, file: !1098, line: 1293, column: 5)
!7839 = distinct !DILexicalBlock(scope: !7835, file: !1098, line: 1293, column: 5)
!7840 = !DILocation(line: 1291, column: 60, scope: !7827)
!7841 = !DILocation(line: 1295, column: 5, scope: !7827)
!7842 = !DILocation(line: 1296, column: 1, scope: !7827)
!7843 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !1098, file: !1098, line: 3452, type: !7485, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7844)
!7844 = !{!7845, !7846}
!7845 = !DILocalVariable(name: "D", arg: 1, scope: !7843, file: !1098, line: 3452, type: !1268)
!7846 = !DILocalVariable(name: "savedMask", scope: !7843, file: !1098, line: 3454, type: !61)
!7847 = !DILocation(line: 0, scope: !7843)
!7848 = !DILocation(line: 3456, column: 17, scope: !7843)
!7849 = !DILocation(line: 3462, column: 24, scope: !7843)
!7850 = !DILocation(line: 3462, column: 31, scope: !7843)
!7851 = !DILocation(line: 3462, column: 36, scope: !7843)
!7852 = !DILocation(line: 3462, column: 28, scope: !7843)
!7853 = !DILocation(line: 3462, column: 5, scope: !7843)
!7854 = !DILocation(line: 3463, column: 12, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7843, file: !1098, line: 3463, column: 9)
!7856 = !DILocation(line: 3463, column: 27, scope: !7855)
!7857 = !DILocation(line: 3463, column: 9, scope: !7843)
!7858 = !DILocation(line: 3464, column: 28, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7855, file: !1098, line: 3463, column: 33)
!7860 = !DILocation(line: 3465, column: 5, scope: !7859)
!7861 = !DILocation(line: 3467, column: 5, scope: !7843)
!7862 = !DILocation(line: 3468, column: 5, scope: !7843)
!7863 = !DILocation(line: 3469, column: 1, scope: !7843)
!7864 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !1098, file: !1098, line: 2417, type: !291, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7865)
!7865 = !{!7866}
!7866 = !DILocalVariable(name: "savedMask", scope: !7864, file: !1098, line: 2419, type: !61)
!7867 = !DILocation(line: 2420, column: 17, scope: !7864)
!7868 = !DILocation(line: 0, scope: !7864)
!7869 = !DILocation(line: 2425, column: 25, scope: !7864)
!7870 = !DILocation(line: 2426, column: 5, scope: !7864)
!7871 = !DILocation(line: 2427, column: 1, scope: !7864)
!7872 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !1098, file: !1098, line: 1308, type: !291, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7873)
!7873 = !{!7874, !7875}
!7874 = !DILocalVariable(name: "D", scope: !7872, file: !1098, line: 1310, type: !1268)
!7875 = !DILocalVariable(name: "status", scope: !7872, file: !1098, line: 1311, type: !1320)
!7876 = !DILocation(line: 1310, column: 60, scope: !7872)
!7877 = !DILocation(line: 0, scope: !7872)
!7878 = !DILocation(line: 1313, column: 5, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7880, file: !1098, line: 1313, column: 5)
!7880 = distinct !DILexicalBlock(scope: !7872, file: !1098, line: 1313, column: 5)
!7881 = !DILocation(line: 1313, column: 5, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7879, file: !1098, line: 1313, column: 5)
!7883 = !DILocation(line: 1313, column: 5, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7885, file: !1098, line: 1313, column: 5)
!7885 = distinct !DILexicalBlock(scope: !7886, file: !1098, line: 1313, column: 5)
!7886 = distinct !DILexicalBlock(scope: !7882, file: !1098, line: 1313, column: 5)
!7887 = !DILocation(line: 1315, column: 5, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7889, file: !1098, line: 1315, column: 5)
!7889 = distinct !DILexicalBlock(scope: !7872, file: !1098, line: 1315, column: 5)
!7890 = !DILocation(line: 1315, column: 5, scope: !7889)
!7891 = !DILocation(line: 1315, column: 5, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7888, file: !1098, line: 1315, column: 5)
!7893 = !DILocation(line: 1317, column: 5, scope: !7872)
!7894 = !DILocation(line: 1319, column: 5, scope: !7872)
!7895 = !DILocation(line: 1320, column: 46, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7872, file: !1098, line: 1319, column: 15)
!7897 = !DILocation(line: 1320, column: 51, scope: !7896)
!7898 = !DILocation(line: 1320, column: 18, scope: !7896)
!7899 = !DILocation(line: 1322, column: 31, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7896, file: !1098, line: 1322, column: 13)
!7901 = !DILocation(line: 1322, column: 28, scope: !7900)
!7902 = !DILocation(line: 1322, column: 26, scope: !7900)
!7903 = !DILocation(line: 1322, column: 15, scope: !7900)
!7904 = !DILocation(line: 1322, column: 13, scope: !7896)
!7905 = distinct !{!7905, !7894, !7906}
!7906 = !DILocation(line: 1325, column: 5, scope: !7872)
!7907 = !DILocation(line: 1327, column: 5, scope: !7872)
!7908 = !DILocation(line: 1328, column: 1, scope: !7872)
!7909 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !1098, file: !1098, line: 1394, type: !7485, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7910)
!7910 = !{!7911}
!7911 = !DILocalVariable(name: "D", arg: 1, scope: !7909, file: !1098, line: 1394, type: !1268)
!7912 = !DILocation(line: 0, scope: !7909)
!7913 = !DILocation(line: 1401, column: 1, scope: !7909)
!7914 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !1098, file: !1098, line: 1556, type: !7915, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !7936)
!7915 = !DISubroutineType(types: !7916)
!7916 = !{!974, !7917, !1268}
!7917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7918, size: 32)
!7918 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1294, line: 121, baseType: !7919)
!7919 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 105, size: 480, elements: !7920)
!7920 = !{!7921, !7922, !7923, !7924, !7925, !7926, !7927, !7928, !7929, !7930, !7931, !7932, !7933, !7934, !7935}
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !7919, file: !1294, line: 106, baseType: !1568, size: 32)
!7922 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !7919, file: !1294, line: 107, baseType: !1369, size: 32, offset: 32)
!7923 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !7919, file: !1294, line: 108, baseType: !1573, size: 32, offset: 64)
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !7919, file: !1294, line: 109, baseType: !1577, size: 32, offset: 96)
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !7919, file: !1294, line: 110, baseType: !1581, size: 32, offset: 128)
!7926 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !7919, file: !1294, line: 111, baseType: !1577, size: 32, offset: 160)
!7927 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !7919, file: !1294, line: 112, baseType: !1586, size: 32, offset: 192)
!7928 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !7919, file: !1294, line: 113, baseType: !1577, size: 32, offset: 224)
!7929 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !7919, file: !1294, line: 114, baseType: !1577, size: 32, offset: 256)
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !7919, file: !1294, line: 115, baseType: !1577, size: 32, offset: 288)
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !7919, file: !1294, line: 116, baseType: !1593, size: 32, offset: 320)
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !7919, file: !1294, line: 117, baseType: !1598, size: 32, offset: 352)
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !7919, file: !1294, line: 118, baseType: !1603, size: 32, offset: 384)
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !7919, file: !1294, line: 119, baseType: !1607, size: 32, offset: 416)
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !7919, file: !1294, line: 120, baseType: !1611, size: 32, offset: 448)
!7936 = !{!7937, !7938, !7939}
!7937 = !DILocalVariable(name: "driver", arg: 1, scope: !7914, file: !1098, line: 1556, type: !7917)
!7938 = !DILocalVariable(name: "D", arg: 2, scope: !7914, file: !1098, line: 1556, type: !1268)
!7939 = !DILocalVariable(name: "smap", scope: !7914, file: !1098, line: 1558, type: !1319)
!7940 = !DILocation(line: 0, scope: !7914)
!7941 = !DILocation(line: 1561, column: 15, scope: !7914)
!7942 = !DILocation(line: 1562, column: 22, scope: !7914)
!7943 = !DILocation(line: 1563, column: 5, scope: !7914)
!7944 = !DILocation(line: 1563, column: 22, scope: !7914)
!7945 = !DILocation(line: 1565, column: 5, scope: !7914)
!7946 = !DILocation(line: 1565, column: 22, scope: !7914)
!7947 = !DILocation(line: 1566, column: 5, scope: !7914)
!7948 = !DILocation(line: 1566, column: 22, scope: !7914)
!7949 = !DILocation(line: 1568, column: 5, scope: !7914)
!7950 = !DILocation(line: 1568, column: 22, scope: !7914)
!7951 = !DILocation(line: 1569, column: 5, scope: !7914)
!7952 = !DILocation(line: 1569, column: 22, scope: !7914)
!7953 = !DILocation(line: 1570, column: 5, scope: !7914)
!7954 = !DILocation(line: 1570, column: 22, scope: !7914)
!7955 = !DILocation(line: 1573, column: 8, scope: !7914)
!7956 = !DILocation(line: 1573, column: 13, scope: !7914)
!7957 = !DILocation(line: 1573, column: 28, scope: !7914)
!7958 = !DILocation(line: 1574, column: 8, scope: !7914)
!7959 = !DILocation(line: 1574, column: 13, scope: !7914)
!7960 = !DILocation(line: 1574, column: 29, scope: !7914)
!7961 = !DILocation(line: 1575, column: 8, scope: !7914)
!7962 = !DILocation(line: 1575, column: 13, scope: !7914)
!7963 = !DILocation(line: 1575, column: 30, scope: !7914)
!7964 = !DILocation(line: 1576, column: 8, scope: !7914)
!7965 = !DILocation(line: 1576, column: 13, scope: !7914)
!7966 = !DILocation(line: 1576, column: 23, scope: !7914)
!7967 = !DILocation(line: 1577, column: 8, scope: !7914)
!7968 = !DILocation(line: 1577, column: 13, scope: !7914)
!7969 = !DILocation(line: 1577, column: 24, scope: !7914)
!7970 = !DILocation(line: 1578, column: 8, scope: !7914)
!7971 = !DILocation(line: 1578, column: 13, scope: !7914)
!7972 = !DILocation(line: 1578, column: 25, scope: !7914)
!7973 = !DILocation(line: 1579, column: 8, scope: !7914)
!7974 = !DILocation(line: 1579, column: 23, scope: !7914)
!7975 = !DILocation(line: 1583, column: 10, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7914, file: !1098, line: 1583, column: 9)
!7977 = !DILocation(line: 1583, column: 24, scope: !7976)
!7978 = !DILocation(line: 1583, column: 32, scope: !7976)
!7979 = !DILocation(line: 1583, column: 35, scope: !7976)
!7980 = !DILocation(line: 1583, column: 49, scope: !7976)
!7981 = !DILocation(line: 1583, column: 9, scope: !7914)
!7982 = !DILocation(line: 1586, column: 12, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7976, file: !1098, line: 1583, column: 59)
!7984 = !DILocation(line: 1586, column: 17, scope: !7983)
!7985 = !DILocation(line: 1586, column: 25, scope: !7983)
!7986 = !DILocation(line: 1587, column: 12, scope: !7983)
!7987 = !DILocation(line: 1587, column: 17, scope: !7983)
!7988 = !DILocation(line: 1587, column: 24, scope: !7983)
!7989 = !DILocation(line: 1591, column: 10, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7914, file: !1098, line: 1591, column: 9)
!7991 = !DILocation(line: 1589, column: 5, scope: !7983)
!7992 = !DILocation(line: 1600, column: 32, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7914, file: !1098, line: 1600, column: 9)
!7994 = !DILocation(line: 1600, column: 35, scope: !7993)
!7995 = !DILocation(line: 1600, column: 49, scope: !7993)
!7996 = !DILocation(line: 1600, column: 9, scope: !7914)
!7997 = !DILocation(line: 1601, column: 12, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7993, file: !1098, line: 1600, column: 59)
!7999 = !DILocation(line: 1601, column: 17, scope: !7998)
!8000 = !DILocation(line: 1601, column: 25, scope: !7998)
!8001 = !DILocation(line: 1602, column: 12, scope: !7998)
!8002 = !DILocation(line: 1602, column: 17, scope: !7998)
!8003 = !DILocation(line: 1602, column: 24, scope: !7998)
!8004 = !DILocation(line: 1603, column: 5, scope: !7998)
!8005 = !DILocation(line: 1607, column: 8, scope: !7914)
!8006 = !DILocation(line: 1607, column: 20, scope: !7914)
!8007 = !DILocation(line: 1622, column: 5, scope: !7914)
!8008 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !1098, file: !1098, line: 4553, type: !1370, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8009)
!8009 = !{!8010, !8011, !8012, !8013}
!8010 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8008, file: !1098, line: 4553, type: !88)
!8011 = !DILocalVariable(name: "D", scope: !8008, file: !1098, line: 4555, type: !1268)
!8012 = !DILocalVariable(name: "unlock", scope: !8008, file: !1098, line: 4556, type: !61)
!8013 = !DILocalVariable(name: "cmd", scope: !8008, file: !1098, line: 4557, type: !356)
!8014 = !DILocation(line: 0, scope: !8008)
!8015 = !DILocation(line: 4555, column: 24, scope: !8008)
!8016 = !DILocation(line: 4557, column: 5, scope: !8008)
!8017 = !DILocation(line: 4558, column: 12, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8008, file: !1098, line: 4558, column: 9)
!8019 = !DILocation(line: 4558, column: 9, scope: !8018)
!8020 = !DILocation(line: 4558, column: 23, scope: !8018)
!8021 = !DILocation(line: 4558, column: 31, scope: !8018)
!8022 = !DILocation(line: 4558, column: 34, scope: !8018)
!8023 = !DILocation(line: 4558, column: 48, scope: !8018)
!8024 = !DILocation(line: 4558, column: 56, scope: !8018)
!8025 = !DILocation(line: 4558, column: 59, scope: !8018)
!8026 = !DILocation(line: 4558, column: 73, scope: !8018)
!8027 = !DILocation(line: 4558, column: 9, scope: !8008)
!8028 = !DILocation(line: 4563, column: 24, scope: !8008)
!8029 = !DILocation(line: 4563, column: 31, scope: !8008)
!8030 = !DILocation(line: 4563, column: 36, scope: !8008)
!8031 = !DILocation(line: 4563, column: 28, scope: !8008)
!8032 = !DILocation(line: 4563, column: 5, scope: !8008)
!8033 = !DILocation(line: 4564, column: 5, scope: !8008)
!8034 = !DILocation(line: 4567, column: 28, scope: !8008)
!8035 = !DILocation(line: 4567, column: 36, scope: !8008)
!8036 = !DILocation(line: 4567, column: 41, scope: !8008)
!8037 = !DILocation(line: 4567, column: 5, scope: !8008)
!8038 = !DILocation(line: 4568, column: 17, scope: !8008)
!8039 = !DILocation(line: 4568, column: 22, scope: !8008)
!8040 = !DILocation(line: 4568, column: 14, scope: !8008)
!8041 = !DILocation(line: 4569, column: 22, scope: !8008)
!8042 = !DILocation(line: 4569, column: 54, scope: !8008)
!8043 = !DILocation(line: 4569, column: 65, scope: !8008)
!8044 = !DILocation(line: 4569, column: 62, scope: !8008)
!8045 = !DILocation(line: 4569, column: 87, scope: !8008)
!8046 = !DILocation(line: 4569, column: 85, scope: !8008)
!8047 = !DILocation(line: 4569, column: 60, scope: !8008)
!8048 = !DILocation(line: 4569, column: 58, scope: !8008)
!8049 = !DILocation(line: 4569, column: 51, scope: !8008)
!8050 = !DILocation(line: 4572, column: 24, scope: !8008)
!8051 = !DILocation(line: 4572, column: 5, scope: !8008)
!8052 = !DILocation(line: 4573, column: 5, scope: !8008)
!8053 = !DILocation(line: 4575, column: 5, scope: !8008)
!8054 = !DILocation(line: 4576, column: 1, scope: !8008)
!8055 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !1098, file: !1098, line: 4488, type: !7485, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8056)
!8056 = !{!8057, !8058}
!8057 = !DILocalVariable(name: "D", arg: 1, scope: !8055, file: !1098, line: 4488, type: !1268)
!8058 = !DILocalVariable(name: "status", scope: !8055, file: !1098, line: 4490, type: !1320)
!8059 = !DILocation(line: 0, scope: !8055)
!8060 = !DILocation(line: 4490, column: 5, scope: !8055)
!8061 = !DILocation(line: 4491, column: 5, scope: !8055)
!8062 = !DILocation(line: 4492, column: 32, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8055, file: !1098, line: 4491, column: 10)
!8064 = !DILocation(line: 4492, column: 40, scope: !8063)
!8065 = !DILocation(line: 4492, column: 45, scope: !8063)
!8066 = !DILocation(line: 4492, column: 9, scope: !8063)
!8067 = !DILocation(line: 4493, column: 20, scope: !8055)
!8068 = !DILocation(line: 4493, column: 32, scope: !8055)
!8069 = !DILocation(line: 4493, column: 29, scope: !8055)
!8070 = !DILocation(line: 4493, column: 27, scope: !8055)
!8071 = !DILocation(line: 4493, column: 16, scope: !8055)
!8072 = !DILocation(line: 4493, column: 5, scope: !8063)
!8073 = distinct !{!8073, !8061, !8074}
!8074 = !DILocation(line: 4493, column: 54, scope: !8055)
!8075 = !DILocation(line: 4494, column: 1, scope: !8055)
!8076 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !1098, file: !1098, line: 1742, type: !7915, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8077)
!8077 = !{!8078, !8079, !8080}
!8078 = !DILocalVariable(name: "driver", arg: 1, scope: !8076, file: !1098, line: 1742, type: !7917)
!8079 = !DILocalVariable(name: "D", arg: 2, scope: !8076, file: !1098, line: 1742, type: !1268)
!8080 = !DILocalVariable(name: "smap", scope: !8076, file: !1098, line: 1744, type: !1319)
!8081 = !DILocation(line: 0, scope: !8076)
!8082 = !DILocation(line: 1747, column: 15, scope: !8076)
!8083 = !DILocation(line: 1748, column: 22, scope: !8076)
!8084 = !DILocation(line: 1749, column: 5, scope: !8076)
!8085 = !DILocation(line: 1749, column: 22, scope: !8076)
!8086 = !DILocation(line: 1750, column: 5, scope: !8076)
!8087 = !DILocation(line: 1750, column: 22, scope: !8076)
!8088 = !DILocation(line: 1751, column: 5, scope: !8076)
!8089 = !DILocation(line: 1751, column: 22, scope: !8076)
!8090 = !DILocation(line: 1752, column: 5, scope: !8076)
!8091 = !DILocation(line: 1752, column: 22, scope: !8076)
!8092 = !DILocation(line: 1753, column: 5, scope: !8076)
!8093 = !DILocation(line: 1753, column: 22, scope: !8076)
!8094 = !DILocation(line: 1756, column: 8, scope: !8076)
!8095 = !DILocation(line: 1756, column: 13, scope: !8076)
!8096 = !DILocation(line: 1756, column: 24, scope: !8076)
!8097 = !DILocation(line: 1758, column: 8, scope: !8076)
!8098 = !DILocation(line: 1758, column: 13, scope: !8076)
!8099 = !DILocation(line: 1758, column: 28, scope: !8076)
!8100 = !DILocation(line: 1759, column: 8, scope: !8076)
!8101 = !DILocation(line: 1759, column: 13, scope: !8076)
!8102 = !DILocation(line: 1759, column: 29, scope: !8076)
!8103 = !DILocation(line: 1760, column: 8, scope: !8076)
!8104 = !DILocation(line: 1760, column: 13, scope: !8076)
!8105 = !DILocation(line: 1760, column: 23, scope: !8076)
!8106 = !DILocation(line: 1761, column: 8, scope: !8076)
!8107 = !DILocation(line: 1761, column: 13, scope: !8076)
!8108 = !DILocation(line: 1761, column: 24, scope: !8076)
!8109 = !DILocation(line: 1762, column: 8, scope: !8076)
!8110 = !DILocation(line: 1762, column: 13, scope: !8076)
!8111 = !DILocation(line: 1762, column: 21, scope: !8076)
!8112 = !DILocation(line: 1763, column: 8, scope: !8076)
!8113 = !DILocation(line: 1763, column: 13, scope: !8076)
!8114 = !DILocation(line: 1763, column: 20, scope: !8076)
!8115 = !DILocation(line: 1764, column: 8, scope: !8076)
!8116 = !DILocation(line: 1764, column: 23, scope: !8076)
!8117 = !DILocation(line: 1768, column: 8, scope: !8076)
!8118 = !DILocation(line: 1768, column: 20, scope: !8076)
!8119 = !DILocation(line: 1770, column: 5, scope: !8076)
!8120 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !1098, file: !1098, line: 1775, type: !7915, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8121)
!8121 = !{!8122, !8123}
!8122 = !DILocalVariable(name: "driver", arg: 1, scope: !8120, file: !1098, line: 1775, type: !7917)
!8123 = !DILocalVariable(name: "D", arg: 2, scope: !8120, file: !1098, line: 1775, type: !1268)
!8124 = !DILocation(line: 0, scope: !8120)
!8125 = !DILocation(line: 1793, column: 5, scope: !8120)
!8126 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !1098, file: !1098, line: 1932, type: !7915, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8127)
!8127 = !{!8128, !8129}
!8128 = !DILocalVariable(name: "driver", arg: 1, scope: !8126, file: !1098, line: 1932, type: !7917)
!8129 = !DILocalVariable(name: "D", arg: 2, scope: !8126, file: !1098, line: 1932, type: !1268)
!8130 = !DILocation(line: 0, scope: !8126)
!8131 = !DILocation(line: 1935, column: 13, scope: !8126)
!8132 = !DILocation(line: 1935, column: 25, scope: !8126)
!8133 = !DILocation(line: 1936, column: 13, scope: !8126)
!8134 = !DILocation(line: 1936, column: 22, scope: !8126)
!8135 = !DILocation(line: 1937, column: 13, scope: !8126)
!8136 = !DILocation(line: 1937, column: 23, scope: !8126)
!8137 = !DILocation(line: 1939, column: 13, scope: !8126)
!8138 = !DILocation(line: 1939, column: 24, scope: !8126)
!8139 = !DILocation(line: 1940, column: 13, scope: !8126)
!8140 = !DILocation(line: 1940, column: 25, scope: !8126)
!8141 = !DILocation(line: 1945, column: 13, scope: !8126)
!8142 = !DILocation(line: 1945, column: 32, scope: !8126)
!8143 = !DILocation(line: 1946, column: 13, scope: !8126)
!8144 = !DILocation(line: 1946, column: 30, scope: !8126)
!8145 = !DILocation(line: 1947, column: 13, scope: !8126)
!8146 = !DILocation(line: 1947, column: 26, scope: !8126)
!8147 = !DILocation(line: 1948, column: 13, scope: !8126)
!8148 = !DILocation(line: 1948, column: 25, scope: !8126)
!8149 = !DILocation(line: 1949, column: 13, scope: !8126)
!8150 = !DILocation(line: 1949, column: 24, scope: !8126)
!8151 = !DILocation(line: 1956, column: 13, scope: !8126)
!8152 = !DILocation(line: 1956, column: 23, scope: !8126)
!8153 = !DILocation(line: 1957, column: 13, scope: !8126)
!8154 = !DILocation(line: 1957, column: 28, scope: !8126)
!8155 = !DILocation(line: 1960, column: 13, scope: !8126)
!8156 = !DILocation(line: 1960, column: 30, scope: !8126)
!8157 = !DILocation(line: 1961, column: 13, scope: !8126)
!8158 = !DILocation(line: 1961, column: 30, scope: !8126)
!8159 = !DILocation(line: 1962, column: 13, scope: !8126)
!8160 = !DILocation(line: 1962, column: 20, scope: !8126)
!8161 = !DILocation(line: 1968, column: 9, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8126, file: !1098, line: 1968, column: 9)
!8163 = !DILocation(line: 1968, column: 36, scope: !8162)
!8164 = !DILocation(line: 1968, column: 9, scope: !8126)
!8165 = !DILocation(line: 1971, column: 12, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8162, file: !1098, line: 1970, column: 5)
!8167 = !DILocation(line: 1971, column: 25, scope: !8166)
!8168 = !DILocation(line: 1979, column: 8, scope: !8126)
!8169 = !DILocation(line: 1979, column: 13, scope: !8126)
!8170 = !DILocation(line: 1979, column: 25, scope: !8126)
!8171 = !DILocation(line: 1980, column: 8, scope: !8126)
!8172 = !DILocation(line: 1980, column: 13, scope: !8126)
!8173 = !DILocation(line: 1980, column: 24, scope: !8126)
!8174 = !DILocation(line: 1981, column: 8, scope: !8126)
!8175 = !DILocation(line: 1981, column: 13, scope: !8126)
!8176 = !DILocation(line: 1981, column: 24, scope: !8126)
!8177 = !DILocation(line: 1982, column: 8, scope: !8126)
!8178 = !DILocation(line: 1982, column: 13, scope: !8126)
!8179 = !DILocation(line: 1982, column: 22, scope: !8126)
!8180 = !DILocation(line: 1983, column: 8, scope: !8126)
!8181 = !DILocation(line: 1983, column: 13, scope: !8126)
!8182 = !DILocation(line: 1983, column: 21, scope: !8126)
!8183 = !DILocation(line: 1984, column: 8, scope: !8126)
!8184 = !DILocation(line: 1984, column: 13, scope: !8126)
!8185 = !DILocation(line: 1984, column: 22, scope: !8126)
!8186 = !DILocation(line: 1985, column: 8, scope: !8126)
!8187 = !DILocation(line: 1985, column: 13, scope: !8126)
!8188 = !DILocation(line: 1985, column: 22, scope: !8126)
!8189 = !DILocation(line: 1986, column: 8, scope: !8126)
!8190 = !DILocation(line: 1986, column: 13, scope: !8126)
!8191 = !DILocation(line: 1986, column: 21, scope: !8126)
!8192 = !DILocation(line: 1987, column: 8, scope: !8126)
!8193 = !DILocation(line: 1987, column: 13, scope: !8126)
!8194 = !DILocation(line: 1987, column: 20, scope: !8126)
!8195 = !DILocation(line: 1988, column: 8, scope: !8126)
!8196 = !DILocation(line: 1988, column: 13, scope: !8126)
!8197 = !DILocation(line: 1988, column: 25, scope: !8126)
!8198 = !DILocation(line: 1989, column: 8, scope: !8126)
!8199 = !DILocation(line: 1989, column: 13, scope: !8126)
!8200 = !DILocation(line: 1989, column: 22, scope: !8126)
!8201 = !DILocation(line: 1990, column: 8, scope: !8126)
!8202 = !DILocation(line: 1990, column: 13, scope: !8126)
!8203 = !DILocation(line: 1990, column: 22, scope: !8126)
!8204 = !DILocation(line: 1993, column: 8, scope: !8126)
!8205 = !DILocation(line: 1993, column: 13, scope: !8126)
!8206 = !DILocation(line: 1993, column: 26, scope: !8126)
!8207 = !DILocation(line: 1996, column: 8, scope: !8126)
!8208 = !DILocation(line: 1996, column: 20, scope: !8126)
!8209 = !DILocation(line: 1999, column: 8, scope: !8126)
!8210 = !DILocation(line: 1999, column: 24, scope: !8126)
!8211 = !DILocation(line: 2000, column: 8, scope: !8126)
!8212 = !DILocation(line: 2000, column: 19, scope: !8126)
!8213 = !DILocation(line: 2001, column: 8, scope: !8126)
!8214 = !DILocation(line: 2001, column: 24, scope: !8126)
!8215 = !DILocation(line: 2002, column: 8, scope: !8126)
!8216 = !DILocation(line: 2002, column: 23, scope: !8126)
!8217 = !DILocation(line: 2004, column: 5, scope: !8126)
!8218 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !1098, file: !1098, line: 2160, type: !1569, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8219)
!8219 = !{!8220, !8221, !8222, !8235, !8236, !8237}
!8220 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8218, file: !1098, line: 2160, type: !88)
!8221 = !DILocalVariable(name: "Info", arg: 2, scope: !8218, file: !1098, line: 2160, type: !88)
!8222 = !DILocalVariable(name: "FlashInfo", scope: !8218, file: !1098, line: 2162, type: !8223)
!8223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8224, size: 32)
!8224 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1294, line: 99, baseType: !8225)
!8225 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 90, size: 928, elements: !8226)
!8226 = !{!8227, !8228, !8229, !8230, !8231, !8232, !8233, !8234}
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !8225, file: !1294, line: 91, baseType: !61, size: 32)
!8228 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !8225, file: !1294, line: 92, baseType: !1625, size: 256, offset: 32)
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !8225, file: !1294, line: 93, baseType: !1625, size: 256, offset: 288)
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !8225, file: !1294, line: 94, baseType: !1625, size: 256, offset: 544)
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !8225, file: !1294, line: 95, baseType: !61, size: 32, offset: 800)
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !8225, file: !1294, line: 96, baseType: !1617, size: 16, offset: 832)
!8233 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !8225, file: !1294, line: 97, baseType: !61, size: 32, offset: 864)
!8234 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !8225, file: !1294, line: 98, baseType: !61, size: 32, offset: 896)
!8235 = !DILocalVariable(name: "D", scope: !8218, file: !1098, line: 2163, type: !1268)
!8236 = !DILocalVariable(name: "i", scope: !8218, file: !1098, line: 2164, type: !61)
!8237 = !DILocalVariable(name: "result", scope: !8218, file: !1098, line: 2166, type: !974)
!8238 = !DILocation(line: 0, scope: !8218)
!8239 = !DILocation(line: 2163, column: 37, scope: !8218)
!8240 = !DILocation(line: 2202, column: 16, scope: !8218)
!8241 = !DILocation(line: 2202, column: 28, scope: !8218)
!8242 = !DILocation(line: 2204, column: 15, scope: !8218)
!8243 = !DILocation(line: 2204, column: 29, scope: !8218)
!8244 = !DILocation(line: 2204, column: 39, scope: !8218)
!8245 = !DILocation(line: 2204, column: 5, scope: !8218)
!8246 = !DILocation(line: 2205, column: 9, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8218, file: !1098, line: 2204, column: 45)
!8248 = !DILocation(line: 2205, column: 33, scope: !8247)
!8249 = !DILocation(line: 2206, column: 41, scope: !8247)
!8250 = !DILocation(line: 2206, column: 55, scope: !8247)
!8251 = !DILocation(line: 2206, column: 9, scope: !8247)
!8252 = !DILocation(line: 2206, column: 36, scope: !8247)
!8253 = !DILocation(line: 2207, column: 38, scope: !8247)
!8254 = !DILocation(line: 2207, column: 52, scope: !8247)
!8255 = !DILocation(line: 2207, column: 32, scope: !8247)
!8256 = !DILocation(line: 2209, column: 10, scope: !8247)
!8257 = distinct !{!8257, !8245, !8258}
!8258 = !DILocation(line: 2210, column: 5, scope: !8218)
!8259 = !DILocation(line: 2212, column: 16, scope: !8218)
!8260 = !DILocation(line: 2212, column: 32, scope: !8218)
!8261 = !DILocation(line: 2213, column: 16, scope: !8218)
!8262 = !DILocation(line: 2213, column: 25, scope: !8218)
!8263 = !DILocation(line: 2236, column: 5, scope: !8218)
!8264 = !DILocation(line: 2238, column: 5, scope: !8218)
!8265 = !DILocation(line: 2239, column: 18, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8218, file: !1098, line: 2238, column: 10)
!8267 = !DILocation(line: 2240, column: 34, scope: !8218)
!8268 = !DILocation(line: 2240, column: 5, scope: !8266)
!8269 = distinct !{!8269, !8264, !8270}
!8270 = !DILocation(line: 2240, column: 43, scope: !8218)
!8271 = !DILocation(line: 2259, column: 5, scope: !8218)
!8272 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !1098, file: !1098, line: 2275, type: !1370, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8273)
!8273 = !{!8274, !8275, !8276, !8277}
!8274 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8272, file: !1098, line: 2275, type: !88)
!8275 = !DILocalVariable(name: "D", scope: !8272, file: !1098, line: 2278, type: !1268)
!8276 = !DILocalVariable(name: "status", scope: !8272, file: !1098, line: 2279, type: !1320)
!8277 = !DILocalVariable(name: "saved_mask", scope: !8272, file: !1098, line: 2280, type: !61)
!8278 = !DILocation(line: 0, scope: !8272)
!8279 = !DILocation(line: 2278, column: 33, scope: !8272)
!8280 = !DILocation(line: 2286, column: 5, scope: !8272)
!8281 = !DILocation(line: 2293, column: 9, scope: !8272)
!8282 = !DILocation(line: 2294, column: 26, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8272, file: !1098, line: 2293, column: 19)
!8284 = !DILocation(line: 2297, column: 17, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8283, file: !1098, line: 2297, column: 17)
!8286 = !DILocation(line: 2297, column: 17, scope: !8283)
!8287 = !DILocation(line: 2298, column: 17, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8285, file: !1098, line: 2297, column: 36)
!8289 = !DILocation(line: 2299, column: 37, scope: !8288)
!8290 = !DILocation(line: 2300, column: 13, scope: !8288)
!8291 = !DILocation(line: 2303, column: 50, scope: !8283)
!8292 = !DILocation(line: 2303, column: 55, scope: !8283)
!8293 = !DILocation(line: 2303, column: 22, scope: !8283)
!8294 = !DILocation(line: 2306, column: 35, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8283, file: !1098, line: 2306, column: 17)
!8296 = !DILocation(line: 2306, column: 32, scope: !8295)
!8297 = !DILocation(line: 2306, column: 30, scope: !8295)
!8298 = !DILocation(line: 2306, column: 19, scope: !8295)
!8299 = !DILocation(line: 2306, column: 17, scope: !8283)
!8300 = !DILocation(line: 2307, column: 17, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8295, file: !1098, line: 2306, column: 59)
!8302 = !DILocation(line: 2308, column: 17, scope: !8301)
!8303 = !DILocation(line: 2315, column: 12, scope: !8272)
!8304 = !DILocation(line: 2315, column: 21, scope: !8272)
!8305 = !DILocation(line: 2325, column: 9, scope: !8272)
!8306 = !DILocation(line: 2326, column: 5, scope: !8272)
!8307 = !DILocation(line: 2311, column: 17, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !8295, file: !1098, line: 2310, column: 20)
!8309 = distinct !{!8309, !8281, !8310}
!8310 = !DILocation(line: 2313, column: 9, scope: !8272)
!8311 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !1098, file: !1098, line: 2819, type: !1578, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8312)
!8312 = !{!8313, !8314, !8315, !8316, !8317, !8318, !8319, !8320, !8321, !8322, !8325, !8326}
!8313 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8311, file: !1098, line: 2819, type: !88)
!8314 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8311, file: !1098, line: 2819, type: !61)
!8315 = !DILocalVariable(name: "result", scope: !8311, file: !1098, line: 2821, type: !974)
!8316 = !DILocalVariable(name: "blocksize", scope: !8311, file: !1098, line: 2822, type: !61)
!8317 = !DILocalVariable(name: "eraseunit", scope: !8311, file: !1098, line: 2823, type: !61)
!8318 = !DILocalVariable(name: "eraseaddr", scope: !8311, file: !1098, line: 2824, type: !61)
!8319 = !DILocalVariable(name: "iteration", scope: !8311, file: !1098, line: 2825, type: !61)
!8320 = !DILocalVariable(name: "D", scope: !8311, file: !1098, line: 2826, type: !1268)
!8321 = !DILocalVariable(name: "erase_block", scope: !8311, file: !1098, line: 2827, type: !61)
!8322 = !DILocalVariable(name: "a", scope: !8323, file: !1098, line: 2853, type: !61)
!8323 = distinct !DILexicalBlock(scope: !8324, file: !1098, line: 2852, column: 56)
!8324 = distinct !DILexicalBlock(scope: !8311, file: !1098, line: 2852, column: 9)
!8325 = !DILocalVariable(name: "b", scope: !8323, file: !1098, line: 2853, type: !61)
!8326 = !DILocalVariable(name: "c", scope: !8323, file: !1098, line: 2853, type: !61)
!8327 = !DILocation(line: 0, scope: !8311)
!8328 = !DILocation(line: 2826, column: 30, scope: !8311)
!8329 = !DILocation(line: 2829, column: 5, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8331, file: !1098, line: 2829, column: 5)
!8331 = distinct !DILexicalBlock(scope: !8311, file: !1098, line: 2829, column: 5)
!8332 = !DILocation(line: 2829, column: 5, scope: !8331)
!8333 = !DILocation(line: 2829, column: 5, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8330, file: !1098, line: 2829, column: 5)
!8335 = !DILocation(line: 2836, column: 9, scope: !8311)
!8336 = !DILocation(line: 2838, column: 8, scope: !8311)
!8337 = !DILocation(line: 2838, column: 21, scope: !8311)
!8338 = !DILocation(line: 2847, column: 5, scope: !8311)
!8339 = !DILocation(line: 2848, column: 18, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8311, file: !1098, line: 2847, column: 10)
!8341 = !DILocation(line: 2850, column: 34, scope: !8311)
!8342 = !DILocation(line: 2850, column: 5, scope: !8340)
!8343 = distinct !{!8343, !8338, !8344}
!8344 = !DILocation(line: 2850, column: 43, scope: !8311)
!8345 = !DILocation(line: 2839, column: 32, scope: !8311)
!8346 = !DILocation(line: 2861, column: 53, scope: !8323)
!8347 = !DILocation(line: 2861, column: 40, scope: !8323)
!8348 = !DILocation(line: 2861, column: 25, scope: !8323)
!8349 = !DILocation(line: 2874, column: 16, scope: !8323)
!8350 = !DILocation(line: 2874, column: 13, scope: !8323)
!8351 = !DILocation(line: 0, scope: !8323)
!8352 = !DILocation(line: 2875, column: 24, scope: !8323)
!8353 = !DILocation(line: 2877, column: 21, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8323, file: !1098, line: 2877, column: 13)
!8355 = !DILocation(line: 2877, column: 13, scope: !8323)
!8356 = !DILocation(line: 2879, column: 23, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8358, file: !1098, line: 2879, column: 21)
!8358 = distinct !DILexicalBlock(scope: !8359, file: !1098, line: 2878, column: 120)
!8359 = distinct !DILexicalBlock(scope: !8360, file: !1098, line: 2878, column: 13)
!8360 = distinct !DILexicalBlock(scope: !8361, file: !1098, line: 2878, column: 13)
!8361 = distinct !DILexicalBlock(scope: !8354, file: !1098, line: 2877, column: 27)
!8362 = !DILocation(line: 2879, column: 21, scope: !8358)
!8363 = !DILocation(line: 2878, column: 48, scope: !8359)
!8364 = !DILocation(line: 2878, column: 83, scope: !8359)
!8365 = !DILocation(line: 2878, column: 113, scope: !8359)
!8366 = !DILocation(line: 2878, column: 35, scope: !8359)
!8367 = !DILocation(line: 2878, column: 13, scope: !8360)
!8368 = distinct !{!8368, !8367, !8369}
!8369 = !DILocation(line: 2883, column: 13, scope: !8360)
!8370 = !DILocation(line: 2863, column: 19, scope: !8323)
!8371 = !DILocation(line: 2825, column: 24, scope: !8311)
!8372 = !DILocation(line: 2886, column: 9, scope: !8323)
!8373 = !DILocation(line: 2888, column: 36, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8323, file: !1098, line: 2886, column: 31)
!8375 = !DILocation(line: 2888, column: 41, scope: !8374)
!8376 = !DILocation(line: 2889, column: 17, scope: !8374)
!8377 = !DILocation(line: 2891, column: 36, scope: !8374)
!8378 = !DILocation(line: 2891, column: 41, scope: !8374)
!8379 = !DILocation(line: 2892, column: 17, scope: !8374)
!8380 = !DILocation(line: 2894, column: 36, scope: !8374)
!8381 = !DILocation(line: 2894, column: 41, scope: !8374)
!8382 = !DILocation(line: 2895, column: 17, scope: !8374)
!8383 = !DILocation(line: 2897, column: 17, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8385, file: !1098, line: 2897, column: 17)
!8385 = distinct !DILexicalBlock(scope: !8386, file: !1098, line: 2897, column: 17)
!8386 = distinct !DILexicalBlock(scope: !8374, file: !1098, line: 2897, column: 17)
!8387 = !DILocation(line: 0, scope: !8374)
!8388 = !DILocation(line: 2906, column: 5, scope: !8311)
!8389 = !DILocation(line: 2908, column: 32, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8311, file: !1098, line: 2906, column: 27)
!8391 = !DILocation(line: 2908, column: 37, scope: !8390)
!8392 = !DILocation(line: 2909, column: 13, scope: !8390)
!8393 = !DILocation(line: 2911, column: 32, scope: !8390)
!8394 = !DILocation(line: 2911, column: 37, scope: !8390)
!8395 = !DILocation(line: 2912, column: 13, scope: !8390)
!8396 = !DILocation(line: 2914, column: 32, scope: !8390)
!8397 = !DILocation(line: 2914, column: 37, scope: !8390)
!8398 = !DILocation(line: 2915, column: 13, scope: !8390)
!8399 = !DILocation(line: 0, scope: !8390)
!8400 = !DILocation(line: 2921, column: 56, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8402, file: !1098, line: 2921, column: 5)
!8402 = distinct !DILexicalBlock(scope: !8311, file: !1098, line: 2921, column: 5)
!8403 = !DILocation(line: 2921, column: 5, scope: !8402)
!8404 = !DILocation(line: 2921, column: 35, scope: !8402)
!8405 = !DILocation(line: 2921, column: 22, scope: !8402)
!8406 = !DILocation(line: 2922, column: 9, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8401, file: !1098, line: 2921, column: 99)
!8408 = !DILocation(line: 2929, column: 9, scope: !8407)
!8409 = !DILocation(line: 2938, column: 26, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8407, file: !1098, line: 2929, column: 26)
!8411 = !DILocation(line: 2939, column: 37, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8410, file: !1098, line: 2939, column: 17)
!8413 = !DILocation(line: 2939, column: 17, scope: !8410)
!8414 = distinct !{!8414, !8408, !8415}
!8415 = !DILocation(line: 2943, column: 9, scope: !8407)
!8416 = !DILocation(line: 2921, column: 71, scope: !8401)
!8417 = !DILocation(line: 2921, column: 85, scope: !8401)
!8418 = distinct !{!8418, !8403, !8419}
!8419 = !DILocation(line: 2983, column: 5, scope: !8402)
!8420 = !DILocation(line: 2985, column: 21, scope: !8311)
!8421 = !DILocation(line: 2992, column: 9, scope: !8311)
!8422 = !DILocation(line: 3000, column: 5, scope: !8311)
!8423 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !1098, file: !1098, line: 2533, type: !1582, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8424)
!8424 = !{!8425, !8426, !8427, !8428, !8429, !8430, !8431, !8432, !8433, !8434, !8435, !8436, !8437, !8438}
!8425 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8423, file: !1098, line: 2533, type: !88)
!8426 = !DILocalVariable(name: "Address", arg: 2, scope: !8423, file: !1098, line: 2533, type: !88)
!8427 = !DILocalVariable(name: "Data", arg: 3, scope: !8423, file: !1098, line: 2533, type: !88)
!8428 = !DILocalVariable(name: "Length", arg: 4, scope: !8423, file: !1098, line: 2533, type: !61)
!8429 = !DILocalVariable(name: "D", scope: !8423, file: !1098, line: 2535, type: !1268)
!8430 = !DILocalVariable(name: "savedMask", scope: !8423, file: !1098, line: 2536, type: !61)
!8431 = !DILocalVariable(name: "address", scope: !8423, file: !1098, line: 2537, type: !61)
!8432 = !DILocalVariable(name: "p_data", scope: !8423, file: !1098, line: 2538, type: !797)
!8433 = !DILocalVariable(name: "p_data_first", scope: !8423, file: !1098, line: 2539, type: !797)
!8434 = !DILocalVariable(name: "result", scope: !8423, file: !1098, line: 2540, type: !974)
!8435 = !DILocalVariable(name: "written", scope: !8423, file: !1098, line: 2541, type: !61)
!8436 = !DILocalVariable(name: "length", scope: !8423, file: !1098, line: 2542, type: !61)
!8437 = !DILocalVariable(name: "cmd1", scope: !8423, file: !1098, line: 2543, type: !61)
!8438 = !DILocalVariable(name: "j", scope: !8439, file: !1098, line: 2599, type: !61)
!8439 = distinct !DILexicalBlock(scope: !8440, file: !1098, line: 2597, column: 61)
!8440 = distinct !DILexicalBlock(scope: !8441, file: !1098, line: 2597, column: 13)
!8441 = distinct !DILexicalBlock(scope: !8423, file: !1098, line: 2583, column: 25)
!8442 = !DILocation(line: 0, scope: !8423)
!8443 = !DILocation(line: 2535, column: 26, scope: !8423)
!8444 = !DILocation(line: 2537, column: 37, scope: !8423)
!8445 = !DILocation(line: 2538, column: 5, scope: !8423)
!8446 = !DILocation(line: 2538, column: 19, scope: !8423)
!8447 = !DILocation(line: 2542, column: 5, scope: !8423)
!8448 = !DILocation(line: 2545, column: 5, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8450, file: !1098, line: 2545, column: 5)
!8450 = distinct !DILexicalBlock(scope: !8423, file: !1098, line: 2545, column: 5)
!8451 = !DILocation(line: 2545, column: 5, scope: !8450)
!8452 = !DILocation(line: 2545, column: 5, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8449, file: !1098, line: 2545, column: 5)
!8454 = !DILocation(line: 2567, column: 9, scope: !8423)
!8455 = !DILocation(line: 2569, column: 8, scope: !8423)
!8456 = !DILocation(line: 2569, column: 21, scope: !8423)
!8457 = !DILocation(line: 2576, column: 5, scope: !8423)
!8458 = !DILocation(line: 2577, column: 18, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8423, file: !1098, line: 2576, column: 10)
!8460 = !DILocation(line: 2579, column: 34, scope: !8423)
!8461 = !DILocation(line: 2579, column: 5, scope: !8459)
!8462 = distinct !{!8462, !8457, !8463}
!8463 = !DILocation(line: 2579, column: 43, scope: !8423)
!8464 = !DILocation(line: 2583, column: 14, scope: !8423)
!8465 = !DILocation(line: 2583, column: 5, scope: !8423)
!8466 = !DILocation(line: 2584, column: 27, scope: !8441)
!8467 = !DILocation(line: 2592, column: 18, scope: !8441)
!8468 = !DILocation(line: 2592, column: 35, scope: !8441)
!8469 = !DILocation(line: 2592, column: 74, scope: !8441)
!8470 = !DILocation(line: 2592, column: 50, scope: !8441)
!8471 = !DILocation(line: 2592, column: 39, scope: !8441)
!8472 = !DILocation(line: 2595, column: 37, scope: !8441)
!8473 = !DILocation(line: 2595, column: 29, scope: !8441)
!8474 = !DILocation(line: 2595, column: 16, scope: !8441)
!8475 = !DILocation(line: 2597, column: 13, scope: !8440)
!8476 = !DILocation(line: 2597, column: 30, scope: !8440)
!8477 = !DILocation(line: 2597, column: 13, scope: !8441)
!8478 = !DILocation(line: 0, scope: !8439)
!8479 = !DILocation(line: 2600, column: 27, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8481, file: !1098, line: 2600, column: 13)
!8481 = distinct !DILexicalBlock(scope: !8439, file: !1098, line: 2600, column: 13)
!8482 = !DILocation(line: 2600, column: 13, scope: !8481)
!8483 = !DILocation(line: 2601, column: 38, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8480, file: !1098, line: 2600, column: 42)
!8485 = !DILocation(line: 2601, column: 17, scope: !8484)
!8486 = !DILocation(line: 2601, column: 36, scope: !8484)
!8487 = !DILocation(line: 2600, column: 38, scope: !8480)
!8488 = distinct !{!8488, !8482, !8489}
!8489 = !DILocation(line: 2602, column: 13, scope: !8481)
!8490 = !DILocation(line: 0, scope: !8441)
!8491 = !DILocation(line: 2606, column: 18, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8441, file: !1098, line: 2606, column: 13)
!8493 = !DILocation(line: 2606, column: 29, scope: !8492)
!8494 = !DILocation(line: 2606, column: 13, scope: !8441)
!8495 = !DILocation(line: 2607, column: 13, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8492, file: !1098, line: 2606, column: 55)
!8497 = !DILocation(line: 2608, column: 9, scope: !8496)
!8498 = !DILocation(line: 2613, column: 16, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8441, file: !1098, line: 2613, column: 13)
!8500 = !DILocation(line: 2613, column: 29, scope: !8499)
!8501 = !DILocation(line: 0, scope: !8499)
!8502 = !DILocation(line: 2613, column: 13, scope: !8441)
!8503 = !DILocation(line: 2614, column: 20, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8499, file: !1098, line: 2613, column: 35)
!8505 = !DILocation(line: 2615, column: 32, scope: !8504)
!8506 = !DILocation(line: 2615, column: 40, scope: !8504)
!8507 = !DILocation(line: 2615, column: 13, scope: !8504)
!8508 = !DILocation(line: 2616, column: 9, scope: !8504)
!8509 = !DILocation(line: 2619, column: 20, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8499, file: !1098, line: 2618, column: 9)
!8511 = !DILocation(line: 2620, column: 32, scope: !8510)
!8512 = !DILocation(line: 2620, column: 40, scope: !8510)
!8513 = !DILocation(line: 2620, column: 13, scope: !8510)
!8514 = !DILocation(line: 2626, column: 21, scope: !8441)
!8515 = !DILocation(line: 2633, column: 37, scope: !8441)
!8516 = !DILocation(line: 2634, column: 45, scope: !8441)
!8517 = !DILocation(line: 2634, column: 42, scope: !8441)
!8518 = !DILocation(line: 2634, column: 40, scope: !8441)
!8519 = !DILocation(line: 2634, column: 58, scope: !8441)
!8520 = !DILocation(line: 2634, column: 29, scope: !8441)
!8521 = !DILocation(line: 2635, column: 28, scope: !8441)
!8522 = !DILocation(line: 2636, column: 9, scope: !8441)
!8523 = !DILocation(line: 2638, column: 26, scope: !8441)
!8524 = !DILocation(line: 2638, column: 9, scope: !8441)
!8525 = !DILocation(line: 2639, column: 29, scope: !8441)
!8526 = !DILocation(line: 2639, column: 9, scope: !8441)
!8527 = !DILocation(line: 2662, column: 9, scope: !8441)
!8528 = !DILocation(line: 2670, column: 9, scope: !8441)
!8529 = !DILocation(line: 2676, column: 89, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8441, file: !1098, line: 2670, column: 13)
!8531 = !DILocation(line: 2676, column: 26, scope: !8530)
!8532 = !DILocation(line: 2678, column: 36, scope: !8441)
!8533 = !DILocation(line: 2678, column: 9, scope: !8530)
!8534 = distinct !{!8534, !8528, !8535}
!8535 = !DILocation(line: 2678, column: 45, scope: !8441)
!8536 = !DILocation(line: 2718, column: 19, scope: !8441)
!8537 = !DILocation(line: 2718, column: 16, scope: !8441)
!8538 = !DILocation(line: 2719, column: 16, scope: !8441)
!8539 = !DILocation(line: 2722, column: 31, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8441, file: !1098, line: 2722, column: 13)
!8541 = !DILocation(line: 2722, column: 13, scope: !8441)
!8542 = distinct !{!8542, !8465, !8543}
!8543 = !DILocation(line: 2725, column: 5, scope: !8423)
!8544 = !DILocation(line: 2748, column: 21, scope: !8423)
!8545 = !DILocation(line: 2755, column: 9, scope: !8423)
!8546 = !DILocation(line: 2757, column: 16, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8423, file: !1098, line: 2757, column: 9)
!8548 = !DILocation(line: 2761, column: 1, scope: !8423)
!8549 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !1098, file: !1098, line: 3019, type: !1578, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8550)
!8550 = !{!8551, !8552}
!8551 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8549, file: !1098, line: 3019, type: !88)
!8552 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8549, file: !1098, line: 3019, type: !61)
!8553 = !DILocation(line: 0, scope: !8549)
!8554 = !DILocation(line: 3021, column: 5, scope: !8549)
!8555 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !1098, file: !1098, line: 3124, type: !1587, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8556)
!8556 = !{!8557, !8558, !8559, !8560, !8561, !8562, !8563, !8564}
!8557 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8555, file: !1098, line: 3124, type: !88)
!8558 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8555, file: !1098, line: 3124, type: !61)
!8559 = !DILocalVariable(name: "result", scope: !8555, file: !1098, line: 3126, type: !974)
!8560 = !DILocalVariable(name: "savedMask", scope: !8555, file: !1098, line: 3127, type: !61)
!8561 = !DILocalVariable(name: "D", scope: !8555, file: !1098, line: 3128, type: !1268)
!8562 = !DILocalVariable(name: "status_busy", scope: !8555, file: !1098, line: 3129, type: !1320)
!8563 = !DILocalVariable(name: "status_suspend", scope: !8555, file: !1098, line: 3129, type: !1320)
!8564 = !DILocalVariable(name: "check_status", scope: !8565, file: !1098, line: 3141, type: !1320)
!8565 = distinct !DILexicalBlock(scope: !8566, file: !1098, line: 3140, column: 56)
!8566 = distinct !DILexicalBlock(scope: !8555, file: !1098, line: 3140, column: 9)
!8567 = !DILocation(line: 0, scope: !8555)
!8568 = !DILocation(line: 3128, column: 47, scope: !8555)
!8569 = !DILocation(line: 3131, column: 5, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8571, file: !1098, line: 3131, column: 5)
!8571 = distinct !DILexicalBlock(scope: !8555, file: !1098, line: 3131, column: 5)
!8572 = !DILocation(line: 3131, column: 5, scope: !8571)
!8573 = !DILocation(line: 3131, column: 5, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8570, file: !1098, line: 3131, column: 5)
!8575 = !DILocation(line: 3134, column: 50, scope: !8555)
!8576 = !DILocation(line: 3134, column: 55, scope: !8555)
!8577 = !DILocation(line: 3134, column: 22, scope: !8555)
!8578 = !DILocation(line: 3135, column: 50, scope: !8555)
!8579 = !DILocation(line: 3135, column: 55, scope: !8555)
!8580 = !DILocation(line: 3135, column: 22, scope: !8555)
!8581 = !DILocation(line: 3138, column: 17, scope: !8555)
!8582 = !DILocation(line: 3140, column: 32, scope: !8566)
!8583 = !DILocation(line: 3140, column: 29, scope: !8566)
!8584 = !DILocation(line: 3140, column: 27, scope: !8566)
!8585 = !DILocation(line: 3140, column: 11, scope: !8566)
!8586 = !DILocation(line: 3140, column: 9, scope: !8555)
!8587 = !DILocation(line: 3141, column: 34, scope: !8565)
!8588 = !DILocation(line: 3141, column: 60, scope: !8565)
!8589 = !DILocation(line: 3141, column: 58, scope: !8565)
!8590 = !DILocation(line: 0, scope: !8565)
!8591 = !DILocation(line: 3144, column: 37, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8565, file: !1098, line: 3144, column: 13)
!8593 = !DILocation(line: 3144, column: 35, scope: !8592)
!8594 = !DILocation(line: 3144, column: 16, scope: !8592)
!8595 = !DILocation(line: 3144, column: 52, scope: !8592)
!8596 = !DILocation(line: 3145, column: 21, scope: !8592)
!8597 = !DILocation(line: 3145, column: 38, scope: !8592)
!8598 = !DILocation(line: 3147, column: 13, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8600, file: !1098, line: 3147, column: 13)
!8600 = distinct !DILexicalBlock(scope: !8601, file: !1098, line: 3147, column: 13)
!8601 = distinct !DILexicalBlock(scope: !8592, file: !1098, line: 3145, column: 61)
!8602 = !DILocation(line: 3147, column: 13, scope: !8600)
!8603 = !DILocation(line: 3147, column: 13, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8599, file: !1098, line: 3147, column: 13)
!8605 = !DILocation(line: 3150, column: 13, scope: !8601)
!8606 = !DILocation(line: 3151, column: 33, scope: !8601)
!8607 = !DILocation(line: 3153, column: 9, scope: !8601)
!8608 = !DILocation(line: 3155, column: 20, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8610, file: !1098, line: 3155, column: 17)
!8610 = distinct !DILexicalBlock(scope: !8592, file: !1098, line: 3153, column: 16)
!8611 = !DILocation(line: 3155, column: 31, scope: !8609)
!8612 = !DILocation(line: 3155, column: 17, scope: !8610)
!8613 = !DILocation(line: 3156, column: 36, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8609, file: !1098, line: 3155, column: 54)
!8615 = !DILocation(line: 3156, column: 17, scope: !8614)
!8616 = !DILocation(line: 3157, column: 36, scope: !8614)
!8617 = !DILocation(line: 3157, column: 17, scope: !8614)
!8618 = !DILocation(line: 3158, column: 13, scope: !8614)
!8619 = !DILocation(line: 3191, column: 5, scope: !8555)
!8620 = !DILocation(line: 3193, column: 9, scope: !8555)
!8621 = !DILocation(line: 3160, column: 13, scope: !8610)
!8622 = !DILocation(line: 3173, column: 13, scope: !8610)
!8623 = !DILocation(line: 3194, column: 18, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8625, file: !1098, line: 3193, column: 32)
!8625 = distinct !DILexicalBlock(scope: !8555, file: !1098, line: 3193, column: 9)
!8626 = !DILocation(line: 3195, column: 5, scope: !8624)
!8627 = !DILocation(line: 3197, column: 5, scope: !8555)
!8628 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !1098, file: !1098, line: 3225, type: !1578, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8629)
!8629 = !{!8630, !8631, !8632, !8633, !8634}
!8630 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8628, file: !1098, line: 3225, type: !88)
!8631 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8628, file: !1098, line: 3225, type: !61)
!8632 = !DILocalVariable(name: "D", scope: !8628, file: !1098, line: 3227, type: !1268)
!8633 = !DILocalVariable(name: "status", scope: !8628, file: !1098, line: 3228, type: !1320)
!8634 = !DILocalVariable(name: "savedMask", scope: !8628, file: !1098, line: 3229, type: !61)
!8635 = !DILocation(line: 0, scope: !8628)
!8636 = !DILocation(line: 3227, column: 30, scope: !8628)
!8637 = !DILocation(line: 3231, column: 17, scope: !8628)
!8638 = !DILocation(line: 3234, column: 5, scope: !8628)
!8639 = !DILocation(line: 3238, column: 5, scope: !8628)
!8640 = !DILocation(line: 3239, column: 46, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8628, file: !1098, line: 3238, column: 15)
!8642 = !DILocation(line: 3239, column: 51, scope: !8641)
!8643 = !DILocation(line: 3239, column: 18, scope: !8641)
!8644 = !DILocation(line: 3241, column: 31, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8641, file: !1098, line: 3241, column: 13)
!8646 = !DILocation(line: 3241, column: 28, scope: !8645)
!8647 = !DILocation(line: 3241, column: 26, scope: !8645)
!8648 = !DILocation(line: 3241, column: 15, scope: !8645)
!8649 = !DILocation(line: 3241, column: 13, scope: !8641)
!8650 = distinct !{!8650, !8639, !8651}
!8651 = !DILocation(line: 3244, column: 5, scope: !8628)
!8652 = !DILocation(line: 3246, column: 5, scope: !8628)
!8653 = !DILocation(line: 3248, column: 5, scope: !8628)
!8654 = !DILocation(line: 3250, column: 5, scope: !8628)
!8655 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !1098, file: !1098, line: 3277, type: !1578, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8656)
!8656 = !{!8657, !8658, !8659}
!8657 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8655, file: !1098, line: 3277, type: !88)
!8658 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8655, file: !1098, line: 3277, type: !61)
!8659 = !DILocalVariable(name: "D", scope: !8655, file: !1098, line: 3279, type: !1268)
!8660 = !DILocation(line: 0, scope: !8655)
!8661 = !DILocation(line: 3279, column: 29, scope: !8655)
!8662 = !DILocation(line: 3281, column: 5, scope: !8655)
!8663 = !DILocation(line: 3282, column: 5, scope: !8655)
!8664 = !DILocation(line: 3283, column: 5, scope: !8655)
!8665 = !DILocation(line: 3285, column: 5, scope: !8655)
!8666 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !1098, file: !1098, line: 3332, type: !1604, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8667)
!8667 = !{!8668, !8669, !8670}
!8668 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8666, file: !1098, line: 3332, type: !88)
!8669 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !8666, file: !1098, line: 3332, type: !88)
!8670 = !DILocalVariable(name: "ACTION", arg: 3, scope: !8666, file: !1098, line: 3332, type: !61)
!8671 = !DILocation(line: 0, scope: !8666)
!8672 = !DILocation(line: 3334, column: 5, scope: !8666)
!8673 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !1098, file: !1098, line: 2350, type: !1612, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8674)
!8674 = !{!8675, !8676, !8677, !8678}
!8675 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8673, file: !1098, line: 2350, type: !88)
!8676 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !8673, file: !1098, line: 2350, type: !61)
!8677 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !8673, file: !1098, line: 2350, type: !88)
!8678 = !DILocalVariable(name: "D", scope: !8673, file: !1098, line: 2352, type: !1268)
!8679 = !DILocation(line: 0, scope: !8673)
!8680 = !DILocation(line: 2353, column: 9, scope: !8673)
!8681 = !DILocation(line: 2354, column: 12, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8683, file: !1098, line: 2353, column: 51)
!8683 = distinct !DILexicalBlock(scope: !8673, file: !1098, line: 2353, column: 9)
!8684 = !DILocation(line: 2354, column: 9, scope: !8682)
!8685 = !DILocation(line: 2355, column: 5, scope: !8682)
!8686 = !DILocation(line: 2356, column: 17, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8688, file: !1098, line: 2356, column: 13)
!8688 = distinct !DILexicalBlock(scope: !8689, file: !1098, line: 2355, column: 71)
!8689 = distinct !DILexicalBlock(scope: !8683, file: !1098, line: 2355, column: 16)
!8690 = !DILocation(line: 2356, column: 14, scope: !8687)
!8691 = !DILocation(line: 2356, column: 28, scope: !8687)
!8692 = !DILocation(line: 2356, column: 49, scope: !8687)
!8693 = !DILocation(line: 2356, column: 56, scope: !8687)
!8694 = !DILocation(line: 2356, column: 70, scope: !8687)
!8695 = !DILocation(line: 2356, column: 80, scope: !8687)
!8696 = !DILocation(line: 2356, column: 13, scope: !8688)
!8697 = !DILocation(line: 2361, column: 9, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8699, file: !1098, line: 2361, column: 9)
!8699 = distinct !DILexicalBlock(scope: !8700, file: !1098, line: 2361, column: 9)
!8700 = distinct !DILexicalBlock(scope: !8701, file: !1098, line: 2361, column: 9)
!8701 = distinct !DILexicalBlock(scope: !8689, file: !1098, line: 2359, column: 12)
!8702 = !DILocation(line: 2363, column: 5, scope: !8673)
!8703 = !DILocation(line: 2364, column: 1, scope: !8673)
!8704 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !1098, file: !1098, line: 3355, type: !1370, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8705)
!8705 = !{!8706, !8707, !8708}
!8706 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8704, file: !1098, line: 3355, type: !88)
!8707 = !DILocalVariable(name: "D", scope: !8704, file: !1098, line: 3357, type: !1268)
!8708 = !DILocalVariable(name: "status", scope: !8704, file: !1098, line: 3358, type: !1068)
!8709 = !DILocation(line: 0, scope: !8704)
!8710 = !DILocation(line: 3366, column: 12, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8704, file: !1098, line: 3366, column: 9)
!8712 = !DILocation(line: 3366, column: 17, scope: !8711)
!8713 = !DILocation(line: 3366, column: 9, scope: !8711)
!8714 = !DILocation(line: 3366, column: 9, scope: !8704)
!8715 = !DILocation(line: 3357, column: 25, scope: !8704)
!8716 = !DILocation(line: 3367, column: 18, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8711, file: !1098, line: 3366, column: 33)
!8718 = !DILocation(line: 3368, column: 25, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8717, file: !1098, line: 3368, column: 13)
!8720 = !DILocation(line: 3368, column: 22, scope: !8719)
!8721 = !DILocation(line: 3368, column: 20, scope: !8719)
!8722 = !DILocation(line: 3368, column: 13, scope: !8717)
!8723 = !DILocation(line: 3373, column: 5, scope: !8704)
!8724 = !DILocation(line: 3374, column: 1, scope: !8704)
!8725 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !1098, file: !1098, line: 3044, type: !8726, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8728)
!8726 = !DISubroutineType(types: !8727)
!8727 = !{!974, !88, !61, !356}
!8728 = !{!8729, !8730, !8731, !8732, !8733, !8734, !8735, !8736}
!8729 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8725, file: !1098, line: 3044, type: !88)
!8730 = !DILocalVariable(name: "addr", arg: 2, scope: !8725, file: !1098, line: 3044, type: !61)
!8731 = !DILocalVariable(name: "data", arg: 3, scope: !8725, file: !1098, line: 3044, type: !356)
!8732 = !DILocalVariable(name: "savedMask", scope: !8725, file: !1098, line: 3046, type: !61)
!8733 = !DILocalVariable(name: "D", scope: !8725, file: !1098, line: 3047, type: !1268)
!8734 = !DILocalVariable(name: "result", scope: !8725, file: !1098, line: 3048, type: !974)
!8735 = !DILocalVariable(name: "check_data", scope: !8725, file: !1098, line: 3049, type: !356)
!8736 = !DILocalVariable(name: "status_busy", scope: !8725, file: !1098, line: 3050, type: !1068)
!8737 = !DILocation(line: 0, scope: !8725)
!8738 = !DILocation(line: 3047, column: 43, scope: !8725)
!8739 = !DILocation(line: 3053, column: 47, scope: !8725)
!8740 = !DILocation(line: 3053, column: 52, scope: !8725)
!8741 = !DILocation(line: 3053, column: 19, scope: !8725)
!8742 = !DILocation(line: 3056, column: 9, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8725, file: !1098, line: 3056, column: 9)
!8744 = !DILocation(line: 3056, column: 9, scope: !8725)
!8745 = !DILocation(line: 3058, column: 9, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8747, file: !1098, line: 3058, column: 9)
!8747 = distinct !DILexicalBlock(scope: !8748, file: !1098, line: 3058, column: 9)
!8748 = distinct !DILexicalBlock(scope: !8743, file: !1098, line: 3056, column: 28)
!8749 = !DILocation(line: 3058, column: 9, scope: !8747)
!8750 = !DILocation(line: 3058, column: 9, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8746, file: !1098, line: 3058, column: 9)
!8752 = !DILocation(line: 3060, column: 9, scope: !8748)
!8753 = !DILocation(line: 3062, column: 29, scope: !8748)
!8754 = !DILocation(line: 3063, column: 5, scope: !8748)
!8755 = !DILocation(line: 3065, column: 38, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8743, file: !1098, line: 3065, column: 15)
!8757 = !DILocation(line: 3065, column: 35, scope: !8756)
!8758 = !DILocation(line: 3065, column: 33, scope: !8756)
!8759 = !DILocation(line: 3065, column: 17, scope: !8756)
!8760 = !DILocation(line: 3065, column: 15, scope: !8743)
!8761 = !DILocation(line: 3066, column: 21, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8756, file: !1098, line: 3065, column: 62)
!8763 = !DILocation(line: 3068, column: 9, scope: !8762)
!8764 = !DILocation(line: 3071, column: 23, scope: !8762)
!8765 = !DILocation(line: 3071, column: 22, scope: !8762)
!8766 = !DILocation(line: 3073, column: 24, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8762, file: !1098, line: 3073, column: 13)
!8768 = !DILocation(line: 3073, column: 13, scope: !8762)
!8769 = !DILocation(line: 3078, column: 16, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8771, file: !1098, line: 3078, column: 16)
!8771 = distinct !DILexicalBlock(scope: !8767, file: !1098, line: 3075, column: 16)
!8772 = !DILocation(line: 3078, column: 16, scope: !8771)
!8773 = !DILocation(line: 3081, column: 58, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8770, file: !1098, line: 3078, column: 46)
!8775 = !DILocation(line: 3081, column: 17, scope: !8774)
!8776 = !DILocation(line: 3082, column: 22, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8774, file: !1098, line: 3082, column: 21)
!8778 = !DILocation(line: 3082, column: 49, scope: !8777)
!8779 = !DILocation(line: 3082, column: 21, scope: !8774)
!8780 = !DILocation(line: 3088, column: 9, scope: !8762)
!8781 = !DILocation(line: 3091, column: 9, scope: !8725)
!8782 = !DILocation(line: 3092, column: 13, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8784, file: !1098, line: 3092, column: 13)
!8784 = distinct !DILexicalBlock(scope: !8725, file: !1098, line: 3091, column: 9)
!8785 = !DILocation(line: 3092, column: 33, scope: !8783)
!8786 = !DILocation(line: 3092, column: 13, scope: !8784)
!8787 = !DILocation(line: 3106, column: 5, scope: !8725)
!8788 = !DILocation(line: 3107, column: 1, scope: !8725)
!8789 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !1098, file: !1098, line: 3497, type: !8790, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8792)
!8790 = !DISubroutineType(types: !8791)
!8791 = !{null, !1268, !61}
!8792 = !{!8793, !8794, !8795}
!8793 = !DILocalVariable(name: "D", arg: 1, scope: !8789, file: !1098, line: 3497, type: !1268)
!8794 = !DILocalVariable(name: "addr", arg: 2, scope: !8789, file: !1098, line: 3497, type: !61)
!8795 = !DILocalVariable(name: "savedMask", scope: !8789, file: !1098, line: 3499, type: !61)
!8796 = !DILocation(line: 0, scope: !8789)
!8797 = !DILocation(line: 3501, column: 14, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8789, file: !1098, line: 3501, column: 9)
!8799 = !DILocation(line: 3501, column: 25, scope: !8798)
!8800 = !DILocation(line: 3501, column: 9, scope: !8789)
!8801 = !DILocation(line: 3502, column: 9, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8798, file: !1098, line: 3501, column: 51)
!8803 = !DILocation(line: 3503, column: 5, scope: !8802)
!8804 = !DILocation(line: 3507, column: 17, scope: !8789)
!8805 = !DILocation(line: 3516, column: 5, scope: !8789)
!8806 = !DILocation(line: 3517, column: 31, scope: !8789)
!8807 = !DILocation(line: 3517, column: 38, scope: !8789)
!8808 = !DILocation(line: 3517, column: 43, scope: !8789)
!8809 = !DILocation(line: 3517, column: 59, scope: !8789)
!8810 = !DILocation(line: 3517, column: 56, scope: !8789)
!8811 = !DILocation(line: 3517, column: 5, scope: !8789)
!8812 = !DILocation(line: 3523, column: 5, scope: !8789)
!8813 = !DILocation(line: 3524, column: 1, scope: !8789)
!8814 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !1098, file: !1098, line: 2018, type: !7915, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8815)
!8815 = !{!8816, !8817, !8818}
!8816 = !DILocalVariable(name: "driver", arg: 1, scope: !8814, file: !1098, line: 2018, type: !7917)
!8817 = !DILocalVariable(name: "D", arg: 2, scope: !8814, file: !1098, line: 2018, type: !1268)
!8818 = !DILocalVariable(name: "result", scope: !8814, file: !1098, line: 2020, type: !974)
!8819 = !DILocation(line: 0, scope: !8814)
!8820 = !DILocation(line: 2022, column: 13, scope: !8814)
!8821 = !DILocation(line: 2022, column: 5, scope: !8814)
!8822 = !DILocation(line: 2031, column: 16, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8814, file: !1098, line: 2022, column: 31)
!8824 = !DILocation(line: 2031, column: 27, scope: !8823)
!8825 = !DILocation(line: 2033, column: 22, scope: !8823)
!8826 = !DILocation(line: 2034, column: 13, scope: !8823)
!8827 = !DILocation(line: 2049, column: 16, scope: !8823)
!8828 = !DILocation(line: 2049, column: 27, scope: !8823)
!8829 = !DILocation(line: 2051, column: 23, scope: !8823)
!8830 = !DILocation(line: 2053, column: 13, scope: !8823)
!8831 = !DILocation(line: 2058, column: 22, scope: !8823)
!8832 = !DILocation(line: 2059, column: 13, scope: !8823)
!8833 = !DILocation(line: 2079, column: 13, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8835, file: !1098, line: 2079, column: 13)
!8835 = distinct !DILexicalBlock(scope: !8836, file: !1098, line: 2079, column: 13)
!8836 = distinct !DILexicalBlock(scope: !8823, file: !1098, line: 2079, column: 13)
!8837 = !DILocation(line: 2083, column: 5, scope: !8814)
!8838 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !1098, file: !1098, line: 2100, type: !8839, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8841)
!8839 = !DISubroutineType(types: !8840)
!8840 = !{!974, !7917, !1268, !61, !61}
!8841 = !{!8842, !8843, !8844, !8845, !8846}
!8842 = !DILocalVariable(name: "driver", arg: 1, scope: !8838, file: !1098, line: 2100, type: !7917)
!8843 = !DILocalVariable(name: "D", arg: 2, scope: !8838, file: !1098, line: 2100, type: !1268)
!8844 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !8838, file: !1098, line: 2100, type: !61)
!8845 = !DILocalVariable(name: "parameter", arg: 4, scope: !8838, file: !1098, line: 2100, type: !61)
!8846 = !DILocalVariable(name: "result", scope: !8838, file: !1098, line: 2102, type: !974)
!8847 = !DILocation(line: 0, scope: !8838)
!8848 = !DILocation(line: 2105, column: 16, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8838, file: !1098, line: 2105, column: 9)
!8850 = !DILocation(line: 2105, column: 24, scope: !8849)
!8851 = !DILocation(line: 2109, column: 12, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8838, file: !1098, line: 2109, column: 9)
!8853 = !DILocation(line: 2109, column: 16, scope: !8852)
!8854 = !DILocation(line: 2109, column: 24, scope: !8852)
!8855 = !DILocation(line: 2109, column: 30, scope: !8852)
!8856 = !DILocation(line: 2109, column: 40, scope: !8852)
!8857 = !DILocation(line: 2109, column: 9, scope: !8838)
!8858 = !DILocation(line: 2118, column: 19, scope: !8838)
!8859 = !DILocation(line: 2118, column: 8, scope: !8838)
!8860 = !DILocation(line: 2118, column: 17, scope: !8838)
!8861 = !DILocation(line: 2119, column: 23, scope: !8838)
!8862 = !DILocation(line: 2119, column: 8, scope: !8838)
!8863 = !DILocation(line: 2119, column: 21, scope: !8838)
!8864 = !DILocation(line: 2122, column: 5, scope: !8838)
!8865 = !DILocation(line: 2125, column: 8, scope: !8838)
!8866 = !DILocation(line: 2125, column: 13, scope: !8838)
!8867 = !DILocation(line: 2125, column: 24, scope: !8838)
!8868 = !DILocation(line: 2126, column: 26, scope: !8838)
!8869 = !DILocation(line: 2126, column: 5, scope: !8838)
!8870 = !DILocation(line: 2128, column: 9, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8838, file: !1098, line: 2128, column: 9)
!8872 = !DILocation(line: 2128, column: 31, scope: !8871)
!8873 = !DILocation(line: 2128, column: 60, scope: !8871)
!8874 = !DILocation(line: 2128, column: 9, scope: !8838)
!8875 = !DILocation(line: 2129, column: 12, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8871, file: !1098, line: 2128, column: 110)
!8877 = !DILocation(line: 2129, column: 17, scope: !8876)
!8878 = !DILocation(line: 2129, column: 28, scope: !8876)
!8879 = !DILocation(line: 2130, column: 9, scope: !8876)
!8880 = !DILocation(line: 2131, column: 5, scope: !8876)
!8881 = !DILocation(line: 2134, column: 14, scope: !8838)
!8882 = !DILocation(line: 2136, column: 5, scope: !8838)
!8883 = !DILocation(line: 2137, column: 1, scope: !8838)
!8884 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !1098, file: !1098, line: 3387, type: !8885, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8887)
!8885 = !DISubroutineType(types: !8886)
!8886 = !{null, !1268, !797}
!8887 = !{!8888, !8889, !8890}
!8888 = !DILocalVariable(name: "D", arg: 1, scope: !8884, file: !1098, line: 3387, type: !1268)
!8889 = !DILocalVariable(name: "id", arg: 2, scope: !8884, file: !1098, line: 3387, type: !797)
!8890 = !DILocalVariable(name: "cmd", scope: !8884, file: !1098, line: 3389, type: !356)
!8891 = !DILocation(line: 0, scope: !8884)
!8892 = !DILocation(line: 3389, column: 5, scope: !8884)
!8893 = !DILocation(line: 3405, column: 9, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8884, file: !1098, line: 3405, column: 9)
!8895 = !DILocation(line: 3405, column: 21, scope: !8894)
!8896 = !DILocation(line: 0, scope: !8894)
!8897 = !DILocation(line: 3405, column: 9, scope: !8884)
!8898 = !DILocation(line: 3411, column: 31, scope: !8884)
!8899 = !DILocation(line: 3411, column: 5, scope: !8884)
!8900 = !DILocation(line: 3412, column: 1, scope: !8884)
!8901 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !1098, file: !1098, line: 3585, type: !8902, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1097, retainedNodes: !8904)
!8902 = !DISubroutineType(types: !8903)
!8903 = !{null, !6684, !797, !797, !6684, !6684}
!8904 = !{!8905, !8906, !8907, !8908, !8909, !8910}
!8905 = !DILocalVariable(name: "CS", arg: 1, scope: !8901, file: !1098, line: 3585, type: !6684)
!8906 = !DILocalVariable(name: "cmd", arg: 2, scope: !8901, file: !1098, line: 3585, type: !797)
!8907 = !DILocalVariable(name: "data", arg: 3, scope: !8901, file: !1098, line: 3585, type: !797)
!8908 = !DILocalVariable(name: "outl", arg: 4, scope: !8901, file: !1098, line: 3585, type: !6684)
!8909 = !DILocalVariable(name: "inl", arg: 5, scope: !8901, file: !1098, line: 3585, type: !6684)
!8910 = !DILocalVariable(name: "savedMask", scope: !8901, file: !1098, line: 3587, type: !61)
!8911 = !DILocation(line: 0, scope: !8901)
!8912 = !DILocation(line: 3589, column: 17, scope: !8901)
!8913 = !DILocation(line: 3590, column: 5, scope: !8901)
!8914 = !DILocation(line: 3591, column: 5, scope: !8901)
!8915 = !DILocation(line: 3593, column: 1, scope: !8901)
!8916 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !1423, file: !1423, line: 110, type: !7162, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1422, retainedNodes: !8917)
!8917 = !{!8918, !8919, !8920, !8921}
!8918 = !DILocalVariable(name: "id", arg: 1, scope: !8916, file: !1423, line: 110, type: !797)
!8919 = !DILocalVariable(name: "i", scope: !8916, file: !1423, line: 114, type: !974)
!8920 = !DILocalVariable(name: "j", scope: !8916, file: !1423, line: 114, type: !974)
!8921 = !DILocalVariable(name: "id_list", scope: !8916, file: !1423, line: 115, type: !8922)
!8922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8923, size: 32)
!8923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1501)
!8924 = !DILocation(line: 0, scope: !8916)
!8925 = !DILocation(line: 119, column: 5, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8916, file: !1423, line: 119, column: 5)
!8927 = !DILocation(line: 119, column: 46, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8926, file: !1423, line: 119, column: 5)
!8929 = !DILocation(line: 119, column: 19, scope: !8928)
!8930 = distinct !{!8930, !8925, !8931}
!8931 = !DILocation(line: 131, column: 5, scope: !8926)
!8932 = !DILocation(line: 121, column: 23, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8934, file: !1423, line: 121, column: 9)
!8934 = distinct !DILexicalBlock(scope: !8935, file: !1423, line: 121, column: 9)
!8935 = distinct !DILexicalBlock(scope: !8928, file: !1423, line: 119, column: 50)
!8936 = !DILocation(line: 121, column: 9, scope: !8934)
!8937 = !DILocation(line: 122, column: 17, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8939, file: !1423, line: 122, column: 17)
!8939 = distinct !DILexicalBlock(scope: !8933, file: !1423, line: 121, column: 51)
!8940 = !DILocation(line: 122, column: 37, scope: !8938)
!8941 = !DILocation(line: 122, column: 34, scope: !8938)
!8942 = !DILocation(line: 122, column: 17, scope: !8939)
!8943 = !DILocation(line: 121, column: 47, scope: !8933)
!8944 = distinct !{!8944, !8936, !8945}
!8945 = !DILocation(line: 125, column: 9, scope: !8934)
!8946 = !DILocation(line: 0, scope: !8934)
!8947 = !DILocation(line: 127, column: 15, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8935, file: !1423, line: 127, column: 13)
!8949 = !DILocation(line: 127, column: 13, scope: !8935)
!8950 = !DILocation(line: 134, column: 1, scope: !8916)
!8951 = distinct !DISubprogram(name: "CMEM_Index", scope: !1423, file: !1423, line: 153, type: !7317, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1422, retainedNodes: !8952)
!8952 = !{!8953, !8954, !8955, !8962}
!8953 = !DILocalVariable(name: "i", scope: !8951, file: !1423, line: 156, type: !974)
!8954 = !DILocalVariable(name: "j", scope: !8951, file: !1423, line: 156, type: !974)
!8955 = !DILocalVariable(name: "id", scope: !8951, file: !1423, line: 157, type: !8956)
!8956 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1494, line: 89, baseType: !8957)
!8957 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1494, line: 86, size: 64, elements: !8958)
!8958 = !{!8959, !8960}
!8959 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !8957, file: !1494, line: 87, baseType: !1507, size: 64)
!8960 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !8957, file: !1494, line: 88, baseType: !8961, size: 64)
!8961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1068, size: 64, elements: !498)
!8962 = !DILocalVariable(name: "id_list", scope: !8951, file: !1423, line: 158, type: !8922)
!8963 = !DILocation(line: 157, column: 5, scope: !8951)
!8964 = !DILocation(line: 157, column: 17, scope: !8951)
!8965 = !DILocation(line: 0, scope: !8951)
!8966 = !DILocation(line: 161, column: 9, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8951, file: !1423, line: 161, column: 9)
!8968 = !DILocation(line: 161, column: 20, scope: !8967)
!8969 = !DILocation(line: 161, column: 9, scope: !8951)
!8970 = !DILocation(line: 172, column: 58, scope: !8951)
!8971 = !DILocation(line: 172, column: 5, scope: !8951)
!8972 = !DILocation(line: 178, column: 5, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8951, file: !1423, line: 178, column: 5)
!8974 = !DILocation(line: 180, column: 23, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8976, file: !1423, line: 180, column: 9)
!8976 = distinct !DILexicalBlock(scope: !8977, file: !1423, line: 180, column: 9)
!8977 = distinct !DILexicalBlock(scope: !8978, file: !1423, line: 178, column: 53)
!8978 = distinct !DILexicalBlock(scope: !8973, file: !1423, line: 178, column: 5)
!8979 = !DILocation(line: 180, column: 9, scope: !8976)
!8980 = !DILocation(line: 181, column: 17, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8982, file: !1423, line: 181, column: 17)
!8982 = distinct !DILexicalBlock(scope: !8975, file: !1423, line: 180, column: 51)
!8983 = !DILocation(line: 181, column: 37, scope: !8981)
!8984 = !DILocation(line: 181, column: 34, scope: !8981)
!8985 = !DILocation(line: 181, column: 17, scope: !8982)
!8986 = !DILocation(line: 180, column: 47, scope: !8975)
!8987 = distinct !{!8987, !8979, !8988}
!8988 = !DILocation(line: 184, column: 9, scope: !8976)
!8989 = !DILocation(line: 0, scope: !8976)
!8990 = !DILocation(line: 186, column: 15, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8977, file: !1423, line: 186, column: 13)
!8992 = !DILocation(line: 186, column: 13, scope: !8977)
!8993 = !DILocation(line: 188, column: 26, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8991, file: !1423, line: 186, column: 41)
!8995 = !DILocation(line: 188, column: 24, scope: !8994)
!8996 = !DILocation(line: 189, column: 13, scope: !8994)
!8997 = !DILocation(line: 178, column: 46, scope: !8978)
!8998 = !DILocation(line: 178, column: 19, scope: !8978)
!8999 = distinct !{!8999, !8972, !9000}
!9000 = !DILocation(line: 191, column: 5, scope: !8973)
!9001 = !DILocation(line: 222, column: 12, scope: !8951)
!9002 = !DILocation(line: 223, column: 1, scope: !8951)
!9003 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !1423, file: !1423, line: 240, type: !9004, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1422, retainedNodes: !9006)
!9004 = !DISubroutineType(types: !9005)
!9005 = !{!8922, !61}
!9006 = !{!9007}
!9007 = !DILocalVariable(name: "index", arg: 1, scope: !9003, file: !1423, line: 240, type: !61)
!9008 = !DILocation(line: 0, scope: !9003)
!9009 = !DILocation(line: 242, column: 13, scope: !9003)
!9010 = !DILocation(line: 242, column: 5, scope: !9003)
!9011 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !1423, file: !1423, line: 254, type: !9012, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1422, retainedNodes: !9014)
!9012 = !DISubroutineType(types: !9013)
!9013 = !{null, !6684, !88, !1067}
!9014 = !{!9015, !9016, !9017, !9018, !9020, !9021}
!9015 = !DILocalVariable(name: "CS", arg: 1, scope: !9011, file: !1423, line: 254, type: !6684)
!9016 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !9011, file: !1423, line: 254, type: !88)
!9017 = !DILocalVariable(name: "flashid", arg: 3, scope: !9011, file: !1423, line: 254, type: !1067)
!9018 = !DILocalVariable(name: "cmd", scope: !9019, file: !1423, line: 258, type: !356)
!9019 = distinct !DILexicalBlock(scope: !9011, file: !1423, line: 257, column: 5)
!9020 = !DILocalVariable(name: "id", scope: !9019, file: !1423, line: 258, type: !1358)
!9021 = !DILocalVariable(name: "i", scope: !9019, file: !1423, line: 258, type: !356)
!9022 = !DILocation(line: 0, scope: !9011)
!9023 = !DILocation(line: 258, column: 9, scope: !9019)
!9024 = !DILocation(line: 258, column: 22, scope: !9019)
!9025 = !DILocation(line: 0, scope: !9019)
!9026 = !DILocation(line: 260, column: 13, scope: !9019)
!9027 = !DILocation(line: 261, column: 9, scope: !9019)
!9028 = !DILocation(line: 263, column: 13, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9019, file: !1423, line: 263, column: 13)
!9030 = !DILocation(line: 263, column: 27, scope: !9029)
!9031 = !DILocation(line: 263, column: 48, scope: !9029)
!9032 = !DILocation(line: 263, column: 13, scope: !9019)
!9033 = !DILocation(line: 264, column: 17, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9029, file: !1423, line: 263, column: 95)
!9035 = !DILocation(line: 265, column: 13, scope: !9034)
!9036 = !DILocation(line: 266, column: 9, scope: !9034)
!9037 = !DILocation(line: 268, column: 9, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9019, file: !1423, line: 268, column: 9)
!9039 = !DILocation(line: 269, column: 26, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9041, file: !1423, line: 268, column: 50)
!9041 = distinct !DILexicalBlock(scope: !9038, file: !1423, line: 268, column: 9)
!9042 = !DILocation(line: 269, column: 13, scope: !9040)
!9043 = !DILocation(line: 269, column: 24, scope: !9040)
!9044 = !DILocation(line: 268, column: 46, scope: !9041)
!9045 = !DILocation(line: 268, column: 23, scope: !9041)
!9046 = distinct !{!9046, !9037, !9047}
!9047 = !DILocation(line: 270, column: 9, scope: !9038)
!9048 = !DILocation(line: 271, column: 5, scope: !9011)
!9049 = !DILocation(line: 272, column: 5, scope: !9011)
!9050 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !1423, file: !1423, line: 285, type: !7162, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1422, retainedNodes: !9051)
!9051 = !{!9052, !9053, !9054, !9055}
!9052 = !DILocalVariable(name: "id", arg: 1, scope: !9050, file: !1423, line: 285, type: !797)
!9053 = !DILocalVariable(name: "i", scope: !9050, file: !1423, line: 289, type: !974)
!9054 = !DILocalVariable(name: "j", scope: !9050, file: !1423, line: 289, type: !974)
!9055 = !DILocalVariable(name: "id_list", scope: !9050, file: !1423, line: 290, type: !8922)
!9056 = !DILocation(line: 0, scope: !9050)
!9057 = !DILocation(line: 294, column: 5, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9050, file: !1423, line: 294, column: 5)
!9059 = !DILocation(line: 294, column: 46, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9058, file: !1423, line: 294, column: 5)
!9061 = !DILocation(line: 294, column: 19, scope: !9060)
!9062 = distinct !{!9062, !9057, !9063}
!9063 = !DILocation(line: 306, column: 5, scope: !9058)
!9064 = !DILocation(line: 296, column: 23, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9066, file: !1423, line: 296, column: 9)
!9066 = distinct !DILexicalBlock(scope: !9067, file: !1423, line: 296, column: 9)
!9067 = distinct !DILexicalBlock(scope: !9060, file: !1423, line: 294, column: 53)
!9068 = !DILocation(line: 296, column: 9, scope: !9066)
!9069 = !DILocation(line: 297, column: 17, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9071, file: !1423, line: 297, column: 17)
!9071 = distinct !DILexicalBlock(scope: !9065, file: !1423, line: 296, column: 51)
!9072 = !DILocation(line: 297, column: 37, scope: !9070)
!9073 = !DILocation(line: 297, column: 34, scope: !9070)
!9074 = !DILocation(line: 297, column: 17, scope: !9071)
!9075 = !DILocation(line: 296, column: 47, scope: !9065)
!9076 = distinct !{!9076, !9068, !9077}
!9077 = !DILocation(line: 300, column: 9, scope: !9066)
!9078 = !DILocation(line: 0, scope: !9066)
!9079 = !DILocation(line: 302, column: 15, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9067, file: !1423, line: 302, column: 13)
!9081 = !DILocation(line: 302, column: 13, scope: !9067)
!9082 = !DILocation(line: 310, column: 1, scope: !9050)
!9083 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !1423, file: !1423, line: 328, type: !7317, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1422, retainedNodes: !9084)
!9084 = !{!9085, !9086, !9087, !9088}
!9085 = !DILocalVariable(name: "i", scope: !9083, file: !1423, line: 331, type: !974)
!9086 = !DILocalVariable(name: "j", scope: !9083, file: !1423, line: 331, type: !974)
!9087 = !DILocalVariable(name: "id", scope: !9083, file: !1423, line: 332, type: !8956)
!9088 = !DILocalVariable(name: "id_list", scope: !9083, file: !1423, line: 333, type: !8922)
!9089 = !DILocation(line: 332, column: 5, scope: !9083)
!9090 = !DILocation(line: 332, column: 17, scope: !9083)
!9091 = !DILocation(line: 0, scope: !9083)
!9092 = !DILocation(line: 336, column: 9, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9083, file: !1423, line: 336, column: 9)
!9094 = !DILocation(line: 336, column: 28, scope: !9093)
!9095 = !DILocation(line: 336, column: 9, scope: !9083)
!9096 = !DILocation(line: 344, column: 60, scope: !9083)
!9097 = !DILocation(line: 344, column: 5, scope: !9083)
!9098 = !DILocation(line: 350, column: 5, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9083, file: !1423, line: 350, column: 5)
!9100 = !DILocation(line: 352, column: 23, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9102, file: !1423, line: 352, column: 9)
!9102 = distinct !DILexicalBlock(scope: !9103, file: !1423, line: 352, column: 9)
!9103 = distinct !DILexicalBlock(scope: !9104, file: !1423, line: 350, column: 53)
!9104 = distinct !DILexicalBlock(scope: !9099, file: !1423, line: 350, column: 5)
!9105 = !DILocation(line: 352, column: 9, scope: !9102)
!9106 = !DILocation(line: 353, column: 17, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9108, file: !1423, line: 353, column: 17)
!9108 = distinct !DILexicalBlock(scope: !9101, file: !1423, line: 352, column: 51)
!9109 = !DILocation(line: 353, column: 37, scope: !9107)
!9110 = !DILocation(line: 353, column: 34, scope: !9107)
!9111 = !DILocation(line: 353, column: 17, scope: !9108)
!9112 = !DILocation(line: 352, column: 47, scope: !9101)
!9113 = distinct !{!9113, !9105, !9114}
!9114 = !DILocation(line: 356, column: 9, scope: !9102)
!9115 = !DILocation(line: 0, scope: !9102)
!9116 = !DILocation(line: 358, column: 15, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9103, file: !1423, line: 358, column: 13)
!9118 = !DILocation(line: 358, column: 13, scope: !9103)
!9119 = !DILocation(line: 360, column: 34, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9117, file: !1423, line: 358, column: 41)
!9121 = !DILocation(line: 360, column: 32, scope: !9120)
!9122 = !DILocation(line: 361, column: 13, scope: !9120)
!9123 = !DILocation(line: 350, column: 46, scope: !9104)
!9124 = !DILocation(line: 350, column: 19, scope: !9104)
!9125 = distinct !{!9125, !9098, !9126}
!9126 = !DILocation(line: 363, column: 5, scope: !9099)
!9127 = !DILocation(line: 364, column: 12, scope: !9083)
!9128 = !DILocation(line: 365, column: 1, scope: !9083)
!9129 = distinct !DISubprogram(name: "NOR_ReadID", scope: !2601, file: !2601, line: 64, type: !9130, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2600, retainedNodes: !9136)
!9130 = !DISubroutineType(types: !9131)
!9131 = !{null, !6684, !9132, !1067}
!9132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9133, size: 32)
!9133 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !9134)
!9134 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !9135, line: 158, baseType: !1068)
!9135 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!9136 = !{!9137, !9138, !9139, !9140, !9141, !9143, !9144}
!9137 = !DILocalVariable(name: "CS", arg: 1, scope: !9129, file: !2601, line: 64, type: !6684)
!9138 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !9129, file: !2601, line: 64, type: !9132)
!9139 = !DILocalVariable(name: "flashid", arg: 3, scope: !9129, file: !2601, line: 64, type: !1067)
!9140 = !DILocalVariable(name: "savedMask", scope: !9129, file: !2601, line: 66, type: !61)
!9141 = !DILocalVariable(name: "cmd", scope: !9142, file: !2601, line: 70, type: !356)
!9142 = distinct !DILexicalBlock(scope: !9129, file: !2601, line: 69, column: 5)
!9143 = !DILocalVariable(name: "id", scope: !9142, file: !2601, line: 70, type: !1358)
!9144 = !DILocalVariable(name: "i", scope: !9142, file: !2601, line: 70, type: !356)
!9145 = !DILocation(line: 0, scope: !9129)
!9146 = !DILocation(line: 70, column: 9, scope: !9142)
!9147 = !DILocation(line: 70, column: 22, scope: !9142)
!9148 = !DILocation(line: 0, scope: !9142)
!9149 = !DILocation(line: 72, column: 13, scope: !9142)
!9150 = !DILocation(line: 73, column: 21, scope: !9142)
!9151 = !DILocation(line: 74, column: 9, scope: !9142)
!9152 = !DILocation(line: 75, column: 9, scope: !9142)
!9153 = !DILocation(line: 77, column: 13, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9142, file: !2601, line: 77, column: 13)
!9155 = !DILocation(line: 77, column: 27, scope: !9154)
!9156 = !DILocation(line: 77, column: 48, scope: !9154)
!9157 = !DILocation(line: 77, column: 13, scope: !9142)
!9158 = !DILocation(line: 78, column: 17, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9154, file: !2601, line: 77, column: 87)
!9160 = !DILocation(line: 79, column: 25, scope: !9159)
!9161 = !DILocation(line: 80, column: 13, scope: !9159)
!9162 = !DILocation(line: 81, column: 13, scope: !9159)
!9163 = !DILocation(line: 82, column: 9, scope: !9159)
!9164 = !DILocation(line: 84, column: 9, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9142, file: !2601, line: 84, column: 9)
!9166 = !DILocation(line: 85, column: 26, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9168, file: !2601, line: 84, column: 50)
!9168 = distinct !DILexicalBlock(scope: !9165, file: !2601, line: 84, column: 9)
!9169 = !DILocation(line: 85, column: 13, scope: !9167)
!9170 = !DILocation(line: 85, column: 24, scope: !9167)
!9171 = !DILocation(line: 84, column: 46, scope: !9168)
!9172 = !DILocation(line: 84, column: 23, scope: !9168)
!9173 = distinct !{!9173, !9164, !9174}
!9174 = !DILocation(line: 86, column: 9, scope: !9165)
!9175 = !DILocation(line: 87, column: 5, scope: !9129)
!9176 = !DILocation(line: 89, column: 1, scope: !9129)
!9177 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !1511, file: !1511, line: 248, type: !3805, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1510, retainedNodes: !293)
!9178 = !DILocation(line: 250, column: 5, scope: !9177)
!9179 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !1511, file: !1511, line: 270, type: !3805, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1510, retainedNodes: !293)
!9180 = !DILocation(line: 272, column: 5, scope: !9179)
!9181 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !1511, file: !1511, line: 294, type: !291, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1510, retainedNodes: !293)
!9182 = !DILocation(line: 296, column: 5, scope: !9181)
!9183 = !DILocation(line: 297, column: 5, scope: !9181)
!9184 = distinct !DISubprogram(name: "nor_sweep_device", scope: !1511, file: !1511, line: 304, type: !291, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1510, retainedNodes: !293)
!9185 = !DILocation(line: 309, column: 5, scope: !9184)
!9186 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !1511, file: !1511, line: 312, type: !291, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1510, retainedNodes: !293)
!9187 = !DILocation(line: 317, column: 5, scope: !9186)
!9188 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !1511, file: !1511, line: 334, type: !3805, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1510, retainedNodes: !293)
!9189 = !DILocation(line: 336, column: 5, scope: !9188)
!9190 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !1511, file: !1511, line: 353, type: !3805, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1510, retainedNodes: !293)
!9191 = !DILocation(line: 355, column: 5, scope: !9190)
!9192 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !1511, file: !1511, line: 374, type: !291, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1510, retainedNodes: !293)
!9193 = !DILocation(line: 376, column: 5, scope: !9192)
!9194 = !DILocation(line: 377, column: 1, scope: !9192)
!9195 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !1511, file: !1511, line: 395, type: !3805, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1510, retainedNodes: !293)
!9196 = !DILocation(line: 397, column: 5, scope: !9195)
!9197 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !1511, file: !1511, line: 416, type: !3805, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1510, retainedNodes: !293)
!9198 = !DILocation(line: 418, column: 5, scope: !9197)
!9199 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !1522, file: !1522, line: 254, type: !3805, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !293)
!9200 = !DILocation(line: 256, column: 32, scope: !9199)
!9201 = !DILocation(line: 257, column: 5, scope: !9199)
!9202 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !1522, file: !1522, line: 269, type: !7317, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !293)
!9203 = !DILocation(line: 275, column: 24, scope: !9202)
!9204 = !DILocation(line: 278, column: 24, scope: !9202)
!9205 = !DILocation(line: 278, column: 33, scope: !9202)
!9206 = !DILocation(line: 278, column: 49, scope: !9202)
!9207 = !DILocation(line: 278, column: 22, scope: !9202)
!9208 = !DILocation(line: 281, column: 5, scope: !9202)
!9209 = !DILocation(line: 283, column: 34, scope: !9202)
!9210 = !DILocation(line: 283, column: 23, scope: !9202)
!9211 = !DILocation(line: 286, column: 25, scope: !9202)
!9212 = !DILocation(line: 321, column: 5, scope: !9202)
!9213 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !1522, file: !1522, line: 332, type: !7317, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !9214)
!9214 = !{!9215}
!9215 = !DILocalVariable(name: "result", scope: !9213, file: !1522, line: 334, type: !974)
!9216 = !DILocation(line: 340, column: 30, scope: !9213)
!9217 = !DILocation(line: 343, column: 24, scope: !9213)
!9218 = !DILocation(line: 344, column: 18, scope: !9213)
!9219 = !DILocation(line: 348, column: 17, scope: !9213)
!9220 = !DILocation(line: 353, column: 19, scope: !9213)
!9221 = !DILocation(line: 354, column: 18, scope: !9213)
!9222 = !DILocation(line: 354, column: 27, scope: !9213)
!9223 = !DILocation(line: 354, column: 43, scope: !9213)
!9224 = !DILocation(line: 350, column: 14, scope: !9213)
!9225 = !DILocation(line: 0, scope: !9213)
!9226 = !DILocation(line: 356, column: 16, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9213, file: !1522, line: 356, column: 9)
!9228 = !DILocation(line: 395, column: 1, scope: !9213)
!9229 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !1522, file: !1522, line: 406, type: !9230, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !293)
!9230 = !DISubroutineType(types: !2553)
!9231 = !DILocation(line: 408, column: 5, scope: !9229)
!9232 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !1522, file: !1522, line: 420, type: !9233, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !9235)
!9233 = !DISubroutineType(types: !9234)
!9234 = !{!61, !356}
!9235 = !{!9236, !9237, !9238}
!9236 = !DILocalVariable(name: "CS", arg: 1, scope: !9232, file: !1522, line: 420, type: !356)
!9237 = !DILocalVariable(name: "index", scope: !9232, file: !1522, line: 422, type: !61)
!9238 = !DILocalVariable(name: "list", scope: !9232, file: !1522, line: 423, type: !1839)
!9239 = !DILocation(line: 0, scope: !9232)
!9240 = !DILocation(line: 427, column: 13, scope: !9232)
!9241 = !DILocation(line: 430, column: 34, scope: !9232)
!9242 = !DILocation(line: 430, column: 5, scope: !9232)
!9243 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !1522, file: !1522, line: 442, type: !9244, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !9246)
!9244 = !DISubroutineType(types: !9245)
!9245 = !{!61, !61, !1711}
!9246 = !{!9247, !9248, !9249}
!9247 = !DILocalVariable(name: "address", arg: 1, scope: !9243, file: !1522, line: 442, type: !61)
!9248 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !9243, file: !1522, line: 442, type: !1711)
!9249 = !DILocalVariable(name: "i", scope: !9243, file: !1522, line: 444, type: !1068)
!9250 = !DILocation(line: 0, scope: !9243)
!9251 = !DILocation(line: 446, column: 23, scope: !9243)
!9252 = !DILocation(line: 448, column: 36, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9254, file: !1522, line: 448, column: 5)
!9254 = distinct !DILexicalBlock(scope: !9243, file: !1522, line: 448, column: 5)
!9255 = !DILocation(line: 448, column: 41, scope: !9253)
!9256 = !DILocation(line: 448, column: 5, scope: !9254)
!9257 = !DILocation(line: 449, column: 39, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9259, file: !1522, line: 449, column: 13)
!9259 = distinct !DILexicalBlock(scope: !9253, file: !1522, line: 448, column: 54)
!9260 = !DILocation(line: 449, column: 21, scope: !9258)
!9261 = !DILocation(line: 449, column: 46, scope: !9258)
!9262 = !DILocation(line: 450, column: 46, scope: !9258)
!9263 = !DILocation(line: 450, column: 25, scope: !9258)
!9264 = !DILocation(line: 449, column: 13, scope: !9259)
!9265 = !DILocation(line: 448, column: 48, scope: !9253)
!9266 = !DILocation(line: 448, column: 29, scope: !9253)
!9267 = !DILocation(line: 448, column: 31, scope: !9253)
!9268 = distinct !{!9268, !9256, !9269}
!9269 = !DILocation(line: 453, column: 5, scope: !9254)
!9270 = !DILocation(line: 454, column: 27, scope: !9243)
!9271 = !DILocation(line: 454, column: 5, scope: !9243)
!9272 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !1522, file: !1522, line: 462, type: !3553, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !9273)
!9273 = !{!9274}
!9274 = !DILocalVariable(name: "address", arg: 1, scope: !9272, file: !1522, line: 462, type: !61)
!9275 = !DILocation(line: 0, scope: !9272)
!9276 = !DILocation(line: 464, column: 45, scope: !9272)
!9277 = !DILocation(line: 464, column: 12, scope: !9272)
!9278 = !DILocation(line: 464, column: 5, scope: !9272)
!9279 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !1522, file: !1522, line: 487, type: !3553, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !9280)
!9280 = !{!9281, !9282, !9283}
!9281 = !DILocalVariable(name: "address", arg: 1, scope: !9279, file: !1522, line: 487, type: !61)
!9282 = !DILocalVariable(name: "index", scope: !9279, file: !1522, line: 490, type: !61)
!9283 = !DILocalVariable(name: "list", scope: !9279, file: !1522, line: 491, type: !1839)
!9284 = !DILocation(line: 0, scope: !9279)
!9285 = !DILocation(line: 490, column: 22, scope: !9279)
!9286 = !DILocation(line: 495, column: 45, scope: !9279)
!9287 = !DILocation(line: 495, column: 12, scope: !9279)
!9288 = !DILocation(line: 495, column: 5, scope: !9279)
!9289 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !1522, file: !1522, line: 517, type: !9290, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !9294)
!9290 = !DISubroutineType(types: !9291)
!9291 = !{!974, !9292}
!9292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9293, size: 32)
!9293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1725)
!9294 = !{!9295, !9296, !9297}
!9295 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !9289, file: !1522, line: 517, type: !9292)
!9296 = !DILocalVariable(name: "result", scope: !9289, file: !1522, line: 519, type: !61)
!9297 = !DILocalVariable(name: "i", scope: !9289, file: !1522, line: 519, type: !61)
!9298 = !DILocation(line: 0, scope: !9289)
!9299 = !DILocation(line: 522, column: 29, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9301, file: !1522, line: 522, column: 5)
!9301 = distinct !DILexicalBlock(scope: !9289, file: !1522, line: 522, column: 5)
!9302 = !DILocation(line: 522, column: 38, scope: !9300)
!9303 = !DILocation(line: 522, column: 5, scope: !9301)
!9304 = !DILocation(line: 523, column: 31, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9300, file: !1522, line: 522, column: 51)
!9306 = !DILocation(line: 523, column: 37, scope: !9305)
!9307 = !DILocation(line: 523, column: 16, scope: !9305)
!9308 = !DILocation(line: 522, column: 45, scope: !9300)
!9309 = distinct !{!9309, !9303, !9310}
!9310 = !DILocation(line: 524, column: 5, scope: !9301)
!9311 = !DILocation(line: 525, column: 5, scope: !9289)
!9312 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !1522, file: !1522, line: 535, type: !9313, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !9315)
!9313 = !DISubroutineType(types: !9314)
!9314 = !{!61, !61, !61, !1537, !1711}
!9315 = !{!9316, !9317, !9318, !9319, !9320, !9321, !9322, !9323, !9324}
!9316 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9312, file: !1522, line: 536, type: !61)
!9317 = !DILocalVariable(name: "length", arg: 2, scope: !9312, file: !1522, line: 537, type: !61)
!9318 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9312, file: !1522, line: 538, type: !1537)
!9319 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !9312, file: !1522, line: 539, type: !1711)
!9320 = !DILocalVariable(name: "addr", scope: !9312, file: !1522, line: 541, type: !61)
!9321 = !DILocalVariable(name: "ptr", scope: !9312, file: !1522, line: 541, type: !61)
!9322 = !DILocalVariable(name: "blksize", scope: !9312, file: !1522, line: 541, type: !61)
!9323 = !DILocalVariable(name: "total_blocks", scope: !9312, file: !1522, line: 541, type: !61)
!9324 = !DILocalVariable(name: "endaddr", scope: !9312, file: !1522, line: 542, type: !61)
!9325 = !DILocation(line: 0, scope: !9312)
!9326 = !DILocation(line: 542, column: 33, scope: !9312)
!9327 = !DILocation(line: 557, column: 59, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9329, file: !1522, line: 557, column: 5)
!9329 = distinct !DILexicalBlock(scope: !9312, file: !1522, line: 557, column: 5)
!9330 = !DILocation(line: 557, column: 5, scope: !9329)
!9331 = !DILocation(line: 560, column: 19, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9328, file: !1522, line: 559, column: 5)
!9333 = !DILocation(line: 562, column: 26, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9332, file: !1522, line: 562, column: 13)
!9335 = !DILocation(line: 0, scope: !9334)
!9336 = !DILocation(line: 562, column: 13, scope: !9332)
!9337 = !DILocation(line: 563, column: 39, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9334, file: !1522, line: 562, column: 34)
!9339 = !DILocation(line: 564, column: 29, scope: !9338)
!9340 = !DILocation(line: 564, column: 42, scope: !9338)
!9341 = !DILocation(line: 565, column: 9, scope: !9338)
!9342 = !DILocation(line: 567, column: 45, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9334, file: !1522, line: 567, column: 18)
!9344 = !DILocation(line: 567, column: 26, scope: !9343)
!9345 = !DILocation(line: 567, column: 18, scope: !9334)
!9346 = !DILocation(line: 568, column: 29, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9343, file: !1522, line: 567, column: 59)
!9348 = !DILocation(line: 568, column: 41, scope: !9347)
!9349 = !DILocation(line: 569, column: 9, scope: !9347)
!9350 = !DILocation(line: 572, column: 16, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9343, file: !1522, line: 571, column: 14)
!9352 = !DILocation(line: 573, column: 21, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9351, file: !1522, line: 573, column: 17)
!9354 = !DILocation(line: 573, column: 17, scope: !9351)
!9355 = !DILocation(line: 576, column: 29, scope: !9351)
!9356 = !DILocation(line: 576, column: 39, scope: !9351)
!9357 = !DILocation(line: 577, column: 29, scope: !9351)
!9358 = !DILocation(line: 577, column: 42, scope: !9351)
!9359 = !DILocation(line: 0, scope: !9329)
!9360 = !DILocation(line: 579, column: 14, scope: !9332)
!9361 = !DILocation(line: 580, column: 21, scope: !9332)
!9362 = distinct !{!9362, !9330, !9363}
!9363 = !DILocation(line: 581, column: 5, scope: !9329)
!9364 = !DILocation(line: 586, column: 1, scope: !9312)
!9365 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !1522, file: !1522, line: 593, type: !9366, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !9368)
!9366 = !DISubroutineType(types: !9367)
!9367 = !{!974, !61, !61, !1537}
!9368 = !{!9369, !9370, !9371}
!9369 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9365, file: !1522, line: 593, type: !61)
!9370 = !DILocalVariable(name: "length", arg: 2, scope: !9365, file: !1522, line: 593, type: !61)
!9371 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9365, file: !1522, line: 593, type: !1537)
!9372 = !DILocation(line: 0, scope: !9365)
!9373 = !DILocation(line: 595, column: 12, scope: !9365)
!9374 = !DILocation(line: 595, column: 5, scope: !9365)
!9375 = !DILocation(line: 597, column: 81, scope: !9365)
!9376 = !DILocation(line: 597, column: 12, scope: !9365)
!9377 = !DILocation(line: 597, column: 5, scope: !9365)
!9378 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !1522, file: !1522, line: 606, type: !9366, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !9379)
!9379 = !{!9380, !9381, !9382}
!9380 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9378, file: !1522, line: 606, type: !61)
!9381 = !DILocalVariable(name: "length", arg: 2, scope: !9378, file: !1522, line: 606, type: !61)
!9382 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9378, file: !1522, line: 606, type: !1537)
!9383 = !DILocation(line: 0, scope: !9378)
!9384 = !DILocation(line: 624, column: 5, scope: !9378)
!9385 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !1522, file: !1522, line: 637, type: !9366, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !9386)
!9386 = !{!9387, !9388, !9389, !9390, !9391}
!9387 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9385, file: !1522, line: 637, type: !61)
!9388 = !DILocalVariable(name: "length", arg: 2, scope: !9385, file: !1522, line: 637, type: !61)
!9389 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9385, file: !1522, line: 637, type: !1537)
!9390 = !DILocalVariable(name: "index", scope: !9385, file: !1522, line: 642, type: !61)
!9391 = !DILocalVariable(name: "list", scope: !9385, file: !1522, line: 644, type: !1839)
!9392 = !DILocation(line: 0, scope: !9385)
!9393 = !DILocation(line: 642, column: 22, scope: !9385)
!9394 = !DILocation(line: 648, column: 81, scope: !9385)
!9395 = !DILocation(line: 648, column: 12, scope: !9385)
!9396 = !DILocation(line: 648, column: 5, scope: !9385)
!9397 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !1522, file: !1522, line: 658, type: !9366, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !9398)
!9398 = !{!9399, !9400, !9401}
!9399 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9397, file: !1522, line: 658, type: !61)
!9400 = !DILocalVariable(name: "length", arg: 2, scope: !9397, file: !1522, line: 658, type: !61)
!9401 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9397, file: !1522, line: 658, type: !1537)
!9402 = !DILocation(line: 0, scope: !9397)
!9403 = !DILocation(line: 688, column: 5, scope: !9397)
!9404 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !1522, file: !1522, line: 700, type: !6751, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !9405)
!9405 = !{!9406, !9407, !9408}
!9406 = !DILocalVariable(name: "CS", arg: 1, scope: !9404, file: !1522, line: 700, type: !6684)
!9407 = !DILocalVariable(name: "index", scope: !9404, file: !1522, line: 705, type: !61)
!9408 = !DILocalVariable(name: "list", scope: !9404, file: !1522, line: 707, type: !1839)
!9409 = !DILocation(line: 0, scope: !9404)
!9410 = !DILocation(line: 705, column: 22, scope: !9404)
!9411 = !DILocation(line: 711, column: 24, scope: !9404)
!9412 = !DILocation(line: 711, column: 5, scope: !9404)
!9413 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !1522, file: !1522, line: 721, type: !9414, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !9416)
!9414 = !DISubroutineType(types: !9415)
!9415 = !{null, !1757, !1036, !61}
!9416 = !{!9417, !9418, !9419}
!9417 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !9413, file: !1522, line: 721, type: !1757)
!9418 = !DILocalVariable(name: "index", arg: 2, scope: !9413, file: !1522, line: 721, type: !1036)
!9419 = !DILocalVariable(name: "bankSize", arg: 3, scope: !9413, file: !1522, line: 721, type: !61)
!9420 = !DILocation(line: 0, scope: !9413)
!9421 = !DILocation(line: 723, column: 18, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9413, file: !1522, line: 723, column: 9)
!9423 = !DILocation(line: 723, column: 26, scope: !9422)
!9424 = !DILocation(line: 723, column: 35, scope: !9422)
!9425 = !DILocation(line: 723, column: 9, scope: !9413)
!9426 = !DILocation(line: 724, column: 26, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9422, file: !1522, line: 723, column: 48)
!9428 = !DILocation(line: 724, column: 32, scope: !9427)
!9429 = !DILocation(line: 725, column: 5, scope: !9427)
!9430 = !DILocation(line: 726, column: 18, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9422, file: !1522, line: 725, column: 12)
!9432 = !DILocation(line: 727, column: 26, scope: !9431)
!9433 = !DILocation(line: 727, column: 32, scope: !9431)
!9434 = !DILocation(line: 728, column: 18, scope: !9431)
!9435 = !DILocation(line: 728, column: 26, scope: !9431)
!9436 = !DILocation(line: 728, column: 35, scope: !9431)
!9437 = !DILocation(line: 731, column: 1, scope: !9413)
!9438 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !1522, file: !1522, line: 739, type: !9439, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !9441)
!9439 = !DISubroutineType(types: !9440)
!9440 = !{!61, !61, !61, !1757, !9292}
!9441 = !{!9442, !9443, !9444, !9445, !9446, !9447, !9448, !9449, !9450}
!9442 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9438, file: !1522, line: 740, type: !61)
!9443 = !DILocalVariable(name: "length", arg: 2, scope: !9438, file: !1522, line: 741, type: !61)
!9444 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !9438, file: !1522, line: 742, type: !1757)
!9445 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !9438, file: !1522, line: 743, type: !9292)
!9446 = !DILocalVariable(name: "Partition", scope: !9438, file: !1522, line: 745, type: !61)
!9447 = !DILocalVariable(name: "Index", scope: !9438, file: !1522, line: 746, type: !974)
!9448 = !DILocalVariable(name: "bankSize", scope: !9438, file: !1522, line: 747, type: !61)
!9449 = !DILocalVariable(name: "NextBankAddr", scope: !9438, file: !1522, line: 748, type: !61)
!9450 = !DILocalVariable(name: "srcBankIdx", scope: !9438, file: !1522, line: 748, type: !61)
!9451 = !DILocation(line: 0, scope: !9438)
!9452 = !DILocation(line: 750, column: 12, scope: !9438)
!9453 = !DILocation(line: 750, column: 5, scope: !9438)
!9454 = !DILocation(line: 752, column: 51, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9456, file: !1522, line: 752, column: 5)
!9456 = distinct !DILexicalBlock(scope: !9438, file: !1522, line: 752, column: 5)
!9457 = !DILocation(line: 752, column: 5, scope: !9456)
!9458 = !DILocation(line: 753, column: 51, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9460, file: !1522, line: 753, column: 13)
!9460 = distinct !DILexicalBlock(scope: !9455, file: !1522, line: 752, column: 70)
!9461 = !DILocation(line: 753, column: 24, scope: !9459)
!9462 = !DILocation(line: 753, column: 13, scope: !9460)
!9463 = !DILocation(line: 758, column: 49, scope: !9460)
!9464 = !DILocation(line: 758, column: 22, scope: !9460)
!9465 = !DILocation(line: 760, column: 22, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9460, file: !1522, line: 760, column: 13)
!9467 = !DILocation(line: 760, column: 13, scope: !9460)
!9468 = !DILocation(line: 761, column: 37, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9466, file: !1522, line: 760, column: 39)
!9470 = !DILocation(line: 762, column: 24, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9469, file: !1522, line: 762, column: 17)
!9472 = !DILocation(line: 762, column: 17, scope: !9469)
!9473 = !DILocation(line: 767, column: 33, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9469, file: !1522, line: 767, column: 17)
!9475 = !DILocation(line: 767, column: 42, scope: !9474)
!9476 = !DILocation(line: 767, column: 17, scope: !9469)
!9477 = !DILocation(line: 768, column: 33, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9474, file: !1522, line: 767, column: 55)
!9479 = !DILocation(line: 768, column: 39, scope: !9478)
!9480 = !DILocation(line: 769, column: 13, scope: !9478)
!9481 = !DILocation(line: 770, column: 46, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9483, file: !1522, line: 770, column: 21)
!9483 = distinct !DILexicalBlock(scope: !9474, file: !1522, line: 769, column: 20)
!9484 = !DILocation(line: 770, column: 21, scope: !9483)
!9485 = !DILocation(line: 773, column: 33, scope: !9483)
!9486 = !DILocation(line: 773, column: 39, scope: !9483)
!9487 = !DILocation(line: 774, column: 33, scope: !9483)
!9488 = !DILocation(line: 774, column: 42, scope: !9483)
!9489 = !DILocation(line: 777, column: 22, scope: !9469)
!9490 = !DILocation(line: 778, column: 20, scope: !9469)
!9491 = !DILocation(line: 779, column: 9, scope: !9469)
!9492 = !DILocation(line: 746, column: 13, scope: !9438)
!9493 = !DILocation(line: 752, column: 66, scope: !9455)
!9494 = distinct !{!9494, !9457, !9495}
!9495 = !DILocation(line: 781, column: 5, scope: !9456)
!9496 = !DILocation(line: 784, column: 5, scope: !9438)
!9497 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !1522, file: !1522, line: 796, type: !7317, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !9498)
!9498 = !{!9499, !9500}
!9499 = !DILocalVariable(name: "result", scope: !9497, file: !1522, line: 798, type: !974)
!9500 = !DILocalVariable(name: "i", scope: !9497, file: !1522, line: 799, type: !974)
!9501 = !DILocation(line: 803, column: 19, scope: !9497)
!9502 = !DILocation(line: 803, column: 28, scope: !9497)
!9503 = !DILocation(line: 803, column: 17, scope: !9497)
!9504 = !DILocation(line: 822, column: 33, scope: !9497)
!9505 = !DILocation(line: 822, column: 56, scope: !9497)
!9506 = !DILocation(line: 822, column: 88, scope: !9497)
!9507 = !DILocation(line: 822, column: 97, scope: !9497)
!9508 = !DILocation(line: 822, column: 5, scope: !9497)
!9509 = !DILocation(line: 829, column: 39, scope: !9497)
!9510 = !DILocation(line: 829, column: 62, scope: !9497)
!9511 = !DILocation(line: 829, column: 14, scope: !9497)
!9512 = !DILocation(line: 0, scope: !9497)
!9513 = !DILocation(line: 834, column: 16, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9497, file: !1522, line: 834, column: 9)
!9515 = !DILocation(line: 834, column: 9, scope: !9497)
!9516 = !DILocation(line: 838, column: 30, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9497, file: !1522, line: 838, column: 5)
!9518 = !DILocation(line: 838, column: 58, scope: !9517)
!9519 = !DILocation(line: 838, column: 78, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9517, file: !1522, line: 838, column: 5)
!9521 = !DILocation(line: 838, column: 88, scope: !9520)
!9522 = !DILocation(line: 838, column: 5, scope: !9517)
!9523 = !DILocation(line: 839, column: 39, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9520, file: !1522, line: 838, column: 102)
!9525 = !DILocation(line: 839, column: 22, scope: !9524)
!9526 = !DILocation(line: 840, column: 37, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9524, file: !1522, line: 840, column: 13)
!9528 = !DILocation(line: 840, column: 13, scope: !9524)
!9529 = !DILocation(line: 841, column: 36, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9527, file: !1522, line: 840, column: 63)
!9531 = !DILocation(line: 842, column: 9, scope: !9530)
!9532 = !DILocation(line: 838, column: 95, scope: !9520)
!9533 = distinct !{!9533, !9522, !9534}
!9534 = !DILocation(line: 843, column: 5, scope: !9517)
!9535 = !DILocation(line: 871, column: 49, scope: !9497)
!9536 = !DILocation(line: 871, column: 72, scope: !9497)
!9537 = !DILocation(line: 871, column: 47, scope: !9497)
!9538 = !DILocation(line: 871, column: 97, scope: !9497)
!9539 = !DILocation(line: 871, column: 19, scope: !9497)
!9540 = !DILocation(line: 882, column: 14, scope: !9497)
!9541 = !DILocation(line: 887, column: 13, scope: !9497)
!9542 = !DILocation(line: 887, column: 22, scope: !9497)
!9543 = !DILocation(line: 887, column: 5, scope: !9497)
!9544 = !DILocation(line: 889, column: 22, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9497, file: !1522, line: 887, column: 34)
!9546 = !DILocation(line: 890, column: 13, scope: !9545)
!9547 = !DILocation(line: 902, column: 1, scope: !9497)
!9548 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !1522, file: !1522, line: 912, type: !9549, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !9551)
!9549 = !DISubroutineType(types: !9550)
!9550 = !{null, !807}
!9551 = !{!9552}
!9552 = !DILocalVariable(name: "CS", arg: 1, scope: !9548, file: !1522, line: 912, type: !807)
!9553 = !DILocation(line: 0, scope: !9548)
!9554 = !DILocation(line: 914, column: 12, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9548, file: !1522, line: 914, column: 9)
!9556 = !DILocation(line: 914, column: 9, scope: !9548)
!9557 = !DILocation(line: 918, column: 26, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9555, file: !1522, line: 914, column: 18)
!9559 = !DILocation(line: 918, column: 24, scope: !9558)
!9560 = !DILocation(line: 920, column: 28, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9558, file: !1522, line: 920, column: 13)
!9562 = !DILocation(line: 920, column: 13, scope: !9558)
!9563 = !DILocation(line: 921, column: 13, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9565, file: !1522, line: 921, column: 13)
!9565 = distinct !DILexicalBlock(scope: !9566, file: !1522, line: 921, column: 13)
!9566 = distinct !DILexicalBlock(scope: !9567, file: !1522, line: 921, column: 13)
!9567 = distinct !DILexicalBlock(scope: !9561, file: !1522, line: 920, column: 33)
!9568 = !DILocation(line: 923, column: 19, scope: !9558)
!9569 = !DILocation(line: 923, column: 17, scope: !9558)
!9570 = !DILocation(line: 924, column: 5, scope: !9558)
!9571 = !DILocation(line: 935, column: 14, scope: !9548)
!9572 = !DILocation(line: 936, column: 1, scope: !9548)
!9573 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !1522, file: !1522, line: 952, type: !7317, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !293)
!9574 = !DILocation(line: 955, column: 5, scope: !9573)
!9575 = !DILocation(line: 956, column: 12, scope: !9573)
!9576 = !DILocation(line: 956, column: 5, scope: !9573)
!9577 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !1522, file: !1522, line: 974, type: !7317, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1521, retainedNodes: !9578)
!9578 = !{!9579}
!9579 = !DILocalVariable(name: "result", scope: !9577, file: !1522, line: 976, type: !974)
!9580 = !DILocation(line: 981, column: 5, scope: !9577)
!9581 = !DILocation(line: 986, column: 24, scope: !9577)
!9582 = !DILocation(line: 986, column: 33, scope: !9577)
!9583 = !DILocation(line: 986, column: 49, scope: !9577)
!9584 = !DILocation(line: 986, column: 22, scope: !9577)
!9585 = !DILocation(line: 1002, column: 19, scope: !9577)
!9586 = !DILocation(line: 1002, column: 17, scope: !9577)
!9587 = !DILocation(line: 1014, column: 22, scope: !9577)
!9588 = !DILocation(line: 1014, column: 5, scope: !9577)
!9589 = !DILocation(line: 1024, column: 33, scope: !9577)
!9590 = !DILocation(line: 1026, column: 27, scope: !9577)
!9591 = !DILocation(line: 1027, column: 26, scope: !9577)
!9592 = !DILocation(line: 1042, column: 33, scope: !9577)
!9593 = !DILocation(line: 1044, column: 32, scope: !9577)
!9594 = !DILocation(line: 1052, column: 18, scope: !9577)
!9595 = !DILocation(line: 1052, column: 27, scope: !9577)
!9596 = !DILocation(line: 1052, column: 43, scope: !9577)
!9597 = !DILocation(line: 1048, column: 14, scope: !9577)
!9598 = !DILocation(line: 0, scope: !9577)
!9599 = !DILocation(line: 1063, column: 5, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9601, file: !1522, line: 1063, column: 5)
!9601 = distinct !DILexicalBlock(scope: !9577, file: !1522, line: 1063, column: 5)
!9602 = !DILocation(line: 1063, column: 5, scope: !9601)
!9603 = !DILocation(line: 1063, column: 5, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9600, file: !1522, line: 1063, column: 5)
!9605 = !DILocation(line: 1096, column: 36, scope: !9577)
!9606 = !DILocation(line: 1096, column: 34, scope: !9577)
!9607 = !DILocation(line: 1101, column: 5, scope: !9577)
!9608 = !DILocation(line: 1103, column: 34, scope: !9577)
!9609 = !DILocation(line: 1109, column: 35, scope: !9577)
!9610 = !DILocation(line: 1110, column: 33, scope: !9577)
!9611 = !DILocation(line: 1111, column: 34, scope: !9577)
!9612 = !DILocation(line: 1113, column: 5, scope: !9577)
!9613 = distinct !DISubprogram(name: "CreateFDMLock", scope: !1880, file: !1880, line: 84, type: !291, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !293)
!9614 = !DILocation(line: 86, column: 1, scope: !9613)
!9615 = distinct !DISubprogram(name: "GetFDMLock", scope: !1880, file: !1880, line: 87, type: !7783, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !9616)
!9616 = !{!9617}
!9617 = !DILocalVariable(name: "savedMask", scope: !9615, file: !1880, line: 89, type: !974)
!9618 = !DILocation(line: 90, column: 17, scope: !9615)
!9619 = !DILocation(line: 0, scope: !9615)
!9620 = !DILocation(line: 91, column: 9, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !9615, file: !1880, line: 91, column: 9)
!9622 = !DILocation(line: 91, column: 9, scope: !9615)
!9623 = !DILocation(line: 92, column: 17, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9621, file: !1880, line: 91, column: 24)
!9625 = !DILocation(line: 94, column: 9, scope: !9624)
!9626 = !DILocation(line: 0, scope: !9621)
!9627 = !DILocation(line: 102, column: 1, scope: !9615)
!9628 = distinct !DISubprogram(name: "FreeFDMLock", scope: !1880, file: !1880, line: 103, type: !291, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !9629)
!9629 = !{!9630}
!9630 = !DILocalVariable(name: "savedMask", scope: !9628, file: !1880, line: 105, type: !974)
!9631 = !DILocation(line: 106, column: 17, scope: !9628)
!9632 = !DILocation(line: 0, scope: !9628)
!9633 = !DILocation(line: 107, column: 9, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9628, file: !1880, line: 107, column: 9)
!9635 = !DILocation(line: 107, column: 9, scope: !9628)
!9636 = !DILocation(line: 108, column: 17, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9634, file: !1880, line: 107, column: 24)
!9638 = !DILocation(line: 109, column: 9, scope: !9637)
!9639 = !DILocation(line: 114, column: 1, scope: !9628)
!9640 = !DILocation(line: 111, column: 9, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9634, file: !1880, line: 110, column: 12)
!9642 = !DILocation(line: 112, column: 9, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9644, file: !1880, line: 112, column: 9)
!9644 = distinct !DILexicalBlock(scope: !9645, file: !1880, line: 112, column: 9)
!9645 = distinct !DILexicalBlock(scope: !9641, file: !1880, line: 112, column: 9)
!9646 = distinct !DISubprogram(name: "create_FDM_lock", scope: !1880, file: !1880, line: 119, type: !291, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !293)
!9647 = !DILocation(line: 123, column: 1, scope: !9646)
!9648 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !1880, file: !1880, line: 130, type: !291, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !9649)
!9649 = !{!9650}
!9650 = !DILocalVariable(name: "Result", scope: !9648, file: !1880, line: 132, type: !1936)
!9651 = !DILocation(line: 133, column: 5, scope: !9648)
!9652 = !DILocation(line: 134, column: 18, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9648, file: !1880, line: 133, column: 8)
!9654 = !DILocation(line: 0, scope: !9648)
!9655 = !DILocation(line: 135, column: 21, scope: !9648)
!9656 = !DILocation(line: 135, column: 5, scope: !9653)
!9657 = distinct !{!9657, !9651, !9658}
!9658 = !DILocation(line: 135, column: 43, scope: !9648)
!9659 = !DILocation(line: 136, column: 1, scope: !9648)
!9660 = distinct !DISubprogram(name: "release_FDM_lock", scope: !1880, file: !1880, line: 143, type: !291, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !293)
!9661 = !DILocation(line: 147, column: 5, scope: !9660)
!9662 = !DILocation(line: 148, column: 1, scope: !9660)
!9663 = distinct !DISubprogram(name: "readRawDiskData", scope: !1880, file: !1880, line: 216, type: !9664, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !9705)
!9664 = !DISubroutineType(types: !9665)
!9665 = !{!974, !9666, !61, !797, !61}
!9666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9667, size: 32)
!9667 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1827, line: 93, baseType: !9668)
!9668 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1827, line: 83, size: 1056, elements: !9669)
!9669 = !{!9670, !9671, !9691, !9692, !9704}
!9670 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !9668, file: !1827, line: 84, baseType: !61, size: 32)
!9671 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !9668, file: !1827, line: 85, baseType: !9672, size: 32, offset: 32)
!9672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9673, size: 32)
!9673 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1294, line: 121, baseType: !9674)
!9674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 105, size: 480, elements: !9675)
!9675 = !{!9676, !9677, !9678, !9679, !9680, !9681, !9682, !9683, !9684, !9685, !9686, !9687, !9688, !9689, !9690}
!9676 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !9674, file: !1294, line: 106, baseType: !1568, size: 32)
!9677 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !9674, file: !1294, line: 107, baseType: !1369, size: 32, offset: 32)
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !9674, file: !1294, line: 108, baseType: !1573, size: 32, offset: 64)
!9679 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !9674, file: !1294, line: 109, baseType: !1577, size: 32, offset: 96)
!9680 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !9674, file: !1294, line: 110, baseType: !1581, size: 32, offset: 128)
!9681 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !9674, file: !1294, line: 111, baseType: !1577, size: 32, offset: 160)
!9682 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !9674, file: !1294, line: 112, baseType: !1586, size: 32, offset: 192)
!9683 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !9674, file: !1294, line: 113, baseType: !1577, size: 32, offset: 224)
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !9674, file: !1294, line: 114, baseType: !1577, size: 32, offset: 256)
!9685 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !9674, file: !1294, line: 115, baseType: !1577, size: 32, offset: 288)
!9686 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !9674, file: !1294, line: 116, baseType: !1593, size: 32, offset: 320)
!9687 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !9674, file: !1294, line: 117, baseType: !1598, size: 32, offset: 352)
!9688 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !9674, file: !1294, line: 118, baseType: !1603, size: 32, offset: 384)
!9689 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !9674, file: !1294, line: 119, baseType: !1607, size: 32, offset: 416)
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !9674, file: !1294, line: 120, baseType: !1611, size: 32, offset: 448)
!9691 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !9668, file: !1827, line: 86, baseType: !88, size: 32, offset: 64)
!9692 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !9668, file: !1827, line: 87, baseType: !9693, size: 928, offset: 96)
!9693 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1294, line: 99, baseType: !9694)
!9694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1294, line: 90, size: 928, elements: !9695)
!9695 = !{!9696, !9697, !9698, !9699, !9700, !9701, !9702, !9703}
!9696 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !9694, file: !1294, line: 91, baseType: !61, size: 32)
!9697 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !9694, file: !1294, line: 92, baseType: !1625, size: 256, offset: 32)
!9698 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !9694, file: !1294, line: 93, baseType: !1625, size: 256, offset: 288)
!9699 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !9694, file: !1294, line: 94, baseType: !1625, size: 256, offset: 544)
!9700 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !9694, file: !1294, line: 95, baseType: !61, size: 32, offset: 800)
!9701 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !9694, file: !1294, line: 96, baseType: !1617, size: 16, offset: 832)
!9702 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !9694, file: !1294, line: 97, baseType: !61, size: 32, offset: 864)
!9703 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !9694, file: !1294, line: 98, baseType: !61, size: 32, offset: 896)
!9704 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !9668, file: !1827, line: 92, baseType: !91, size: 8, offset: 1024)
!9705 = !{!9706, !9707, !9708, !9709, !9710, !9711}
!9706 = !DILocalVariable(name: "D", arg: 1, scope: !9663, file: !1880, line: 216, type: !9666)
!9707 = !DILocalVariable(name: "addr", arg: 2, scope: !9663, file: !1880, line: 216, type: !61)
!9708 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9663, file: !1880, line: 216, type: !797)
!9709 = !DILocalVariable(name: "len", arg: 4, scope: !9663, file: !1880, line: 216, type: !61)
!9710 = !DILocalVariable(name: "phyAddr", scope: !9663, file: !1880, line: 219, type: !61)
!9711 = !DILocalVariable(name: "diskSize", scope: !9663, file: !1880, line: 220, type: !61)
!9712 = !DILocation(line: 0, scope: !9663)
!9713 = !DILocation(line: 220, column: 28, scope: !9663)
!9714 = !DILocation(line: 222, column: 14, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9663, file: !1880, line: 222, column: 9)
!9716 = !DILocation(line: 222, column: 26, scope: !9715)
!9717 = !DILocation(line: 225, column: 51, scope: !9663)
!9718 = !DILocation(line: 225, column: 61, scope: !9663)
!9719 = !DILocation(line: 225, column: 15, scope: !9663)
!9720 = !DILocation(line: 225, column: 70, scope: !9663)
!9721 = !DILocation(line: 227, column: 13, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9663, file: !1880, line: 227, column: 9)
!9723 = !DILocation(line: 227, column: 9, scope: !9663)
!9724 = !DILocation(line: 228, column: 9, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9722, file: !1880, line: 227, column: 23)
!9726 = !DILocation(line: 229, column: 5, scope: !9725)
!9727 = !DILocation(line: 231, column: 5, scope: !9663)
!9728 = !DILocation(line: 233, column: 22, scope: !9663)
!9729 = !DILocation(line: 233, column: 5, scope: !9663)
!9730 = !DILocation(line: 235, column: 5, scope: !9663)
!9731 = !DILocation(line: 237, column: 5, scope: !9663)
!9732 = !DILocation(line: 238, column: 1, scope: !9663)
!9733 = distinct !DISubprogram(name: "MountDevice", scope: !1880, file: !1880, line: 165, type: !9734, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !9736)
!9734 = !DISubroutineType(types: !9735)
!9735 = !{null, !9666}
!9736 = !{!9737, !9738}
!9737 = !DILocalVariable(name: "D", arg: 1, scope: !9733, file: !1880, line: 165, type: !9666)
!9738 = !DILocalVariable(name: "Result", scope: !9733, file: !1880, line: 167, type: !974)
!9739 = !DILocation(line: 0, scope: !9733)
!9740 = !DILocation(line: 171, column: 12, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9733, file: !1880, line: 171, column: 9)
!9742 = !DILocation(line: 171, column: 9, scope: !9733)
!9743 = !DILocation(line: 176, column: 5, scope: !9733)
!9744 = !DILocation(line: 186, column: 17, scope: !9733)
!9745 = !DILocation(line: 186, column: 28, scope: !9733)
!9746 = !DILocation(line: 186, column: 43, scope: !9733)
!9747 = !DILocation(line: 186, column: 64, scope: !9733)
!9748 = !DILocation(line: 186, column: 52, scope: !9733)
!9749 = !DILocation(line: 186, column: 14, scope: !9733)
!9750 = !DILocation(line: 188, column: 5, scope: !9733)
!9751 = !DILocation(line: 190, column: 16, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9733, file: !1880, line: 190, column: 9)
!9753 = !DILocation(line: 190, column: 9, scope: !9733)
!9754 = !DILocation(line: 191, column: 9, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9756, file: !1880, line: 191, column: 9)
!9756 = distinct !DILexicalBlock(scope: !9757, file: !1880, line: 191, column: 9)
!9757 = distinct !DILexicalBlock(scope: !9758, file: !1880, line: 191, column: 9)
!9758 = distinct !DILexicalBlock(scope: !9752, file: !1880, line: 190, column: 31)
!9759 = !DILocation(line: 194, column: 17, scope: !9733)
!9760 = !DILocation(line: 195, column: 1, scope: !9733)
!9761 = distinct !DISubprogram(name: "writeRawDiskData", scope: !1880, file: !1880, line: 277, type: !9664, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !9762)
!9762 = !{!9763, !9764, !9765, !9766, !9767, !9768, !9769, !9770, !9771, !9772, !9776, !9777, !9778, !9783}
!9763 = !DILocalVariable(name: "D", arg: 1, scope: !9761, file: !1880, line: 277, type: !9666)
!9764 = !DILocalVariable(name: "addr", arg: 2, scope: !9761, file: !1880, line: 277, type: !61)
!9765 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9761, file: !1880, line: 277, type: !797)
!9766 = !DILocalVariable(name: "len", arg: 4, scope: !9761, file: !1880, line: 277, type: !61)
!9767 = !DILocalVariable(name: "dest", scope: !9761, file: !1880, line: 279, type: !61)
!9768 = !DILocalVariable(name: "src", scope: !9761, file: !1880, line: 279, type: !61)
!9769 = !DILocalVariable(name: "diskSize", scope: !9761, file: !1880, line: 280, type: !61)
!9770 = !DILocalVariable(name: "result", scope: !9761, file: !1880, line: 281, type: !974)
!9771 = !DILocalVariable(name: "DoneLength", scope: !9761, file: !1880, line: 282, type: !61)
!9772 = !DILocalVariable(name: "blockSize", scope: !9773, file: !1880, line: 313, type: !61)
!9773 = distinct !DILexicalBlock(scope: !9774, file: !1880, line: 312, column: 14)
!9774 = distinct !DILexicalBlock(scope: !9775, file: !1880, line: 305, column: 13)
!9775 = distinct !DILexicalBlock(scope: !9761, file: !1880, line: 298, column: 30)
!9776 = !DILocalVariable(name: "programBytes", scope: !9773, file: !1880, line: 314, type: !61)
!9777 = !DILocalVariable(name: "nextBlkAddr", scope: !9773, file: !1880, line: 316, type: !61)
!9778 = !DILocalVariable(name: "Cell", scope: !9779, file: !1880, line: 346, type: !9781)
!9779 = distinct !DILexicalBlock(scope: !9780, file: !1880, line: 345, column: 83)
!9780 = distinct !DILexicalBlock(scope: !9773, file: !1880, line: 345, column: 17)
!9781 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !9782, line: 76, baseType: !1068)
!9782 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/trng_generate_random_data/GCC")
!9783 = !DILocalVariable(name: "b", scope: !9779, file: !1880, line: 347, type: !797)
!9784 = !DILocation(line: 0, scope: !9761)
!9785 = !DILocation(line: 280, column: 28, scope: !9761)
!9786 = !DILocation(line: 284, column: 14, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9761, file: !1880, line: 284, column: 9)
!9788 = !DILocation(line: 284, column: 9, scope: !9761)
!9789 = !DILocation(line: 288, column: 14, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9761, file: !1880, line: 288, column: 9)
!9791 = !DILocation(line: 288, column: 20, scope: !9790)
!9792 = !DILocation(line: 288, column: 9, scope: !9761)
!9793 = !DILocation(line: 292, column: 13, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9761, file: !1880, line: 292, column: 9)
!9795 = !DILocation(line: 292, column: 9, scope: !9761)
!9796 = !DILocation(line: 293, column: 9, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9794, file: !1880, line: 292, column: 23)
!9798 = !DILocation(line: 294, column: 5, scope: !9797)
!9799 = !DILocation(line: 296, column: 5, scope: !9761)
!9800 = !DILocation(line: 346, column: 17, scope: !9779)
!9801 = !DILocation(line: 298, column: 23, scope: !9761)
!9802 = !DILocation(line: 298, column: 5, scope: !9761)
!9803 = !DILocation(line: 299, column: 52, scope: !9775)
!9804 = !DILocation(line: 299, column: 62, scope: !9775)
!9805 = !DILocation(line: 299, column: 16, scope: !9775)
!9806 = !DILocation(line: 299, column: 71, scope: !9775)
!9807 = !DILocation(line: 299, column: 78, scope: !9775)
!9808 = !DILocation(line: 300, column: 34, scope: !9775)
!9809 = !DILocation(line: 302, column: 12, scope: !9775)
!9810 = !DILocation(line: 302, column: 23, scope: !9775)
!9811 = !DILocation(line: 302, column: 81, scope: !9775)
!9812 = !DILocation(line: 302, column: 45, scope: !9775)
!9813 = !DILocation(line: 302, column: 9, scope: !9775)
!9814 = !DILocation(line: 305, column: 29, scope: !9774)
!9815 = !DILocation(line: 305, column: 57, scope: !9774)
!9816 = !DILocation(line: 305, column: 66, scope: !9774)
!9817 = !DILocation(line: 305, column: 80, scope: !9774)
!9818 = !DILocation(line: 305, column: 13, scope: !9775)
!9819 = !DILocation(line: 306, column: 25, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9774, file: !1880, line: 305, column: 87)
!9821 = !DILocation(line: 306, column: 36, scope: !9820)
!9822 = !DILocation(line: 306, column: 51, scope: !9820)
!9823 = !DILocation(line: 306, column: 60, scope: !9820)
!9824 = !DILocation(line: 306, column: 74, scope: !9820)
!9825 = !DILocation(line: 306, column: 22, scope: !9820)
!9826 = !DILocation(line: 307, column: 24, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9820, file: !1880, line: 307, column: 17)
!9828 = !DILocation(line: 307, column: 17, scope: !9820)
!9829 = !DILocation(line: 310, column: 23, scope: !9820)
!9830 = !DILocation(line: 311, column: 9, scope: !9820)
!9831 = !DILocation(line: 313, column: 47, scope: !9773)
!9832 = !DILocation(line: 313, column: 56, scope: !9773)
!9833 = !DILocation(line: 313, column: 34, scope: !9773)
!9834 = !DILocation(line: 0, scope: !9773)
!9835 = !DILocation(line: 316, column: 42, scope: !9773)
!9836 = !DILocation(line: 316, column: 58, scope: !9773)
!9837 = !DILocation(line: 316, column: 55, scope: !9773)
!9838 = !DILocation(line: 326, column: 22, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9773, file: !1880, line: 326, column: 17)
!9840 = !DILocation(line: 326, column: 37, scope: !9839)
!9841 = !DILocation(line: 326, column: 17, scope: !9773)
!9842 = !DILocation(line: 332, column: 43, scope: !9773)
!9843 = !DILocation(line: 345, column: 30, scope: !9780)
!9844 = !DILocation(line: 345, column: 52, scope: !9780)
!9845 = !DILocation(line: 0, scope: !9779)
!9846 = !DILocation(line: 348, column: 26, scope: !9779)
!9847 = !DILocation(line: 348, column: 24, scope: !9779)
!9848 = !DILocation(line: 348, column: 22, scope: !9779)
!9849 = !DILocation(line: 349, column: 41, scope: !9779)
!9850 = !DILocation(line: 349, column: 24, scope: !9779)
!9851 = !DILocation(line: 349, column: 22, scope: !9779)
!9852 = !DILocation(line: 350, column: 29, scope: !9779)
!9853 = !DILocation(line: 350, column: 40, scope: !9779)
!9854 = !DILocation(line: 350, column: 55, scope: !9779)
!9855 = !DILocation(line: 350, column: 64, scope: !9779)
!9856 = !DILocation(line: 350, column: 26, scope: !9779)
!9857 = !DILocation(line: 351, column: 28, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9779, file: !1880, line: 351, column: 21)
!9859 = !DILocation(line: 354, column: 13, scope: !9780)
!9860 = !DILocation(line: 362, column: 33, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9862, file: !1880, line: 361, column: 24)
!9862 = distinct !DILexicalBlock(scope: !9863, file: !1880, line: 355, column: 21)
!9863 = distinct !DILexicalBlock(scope: !9780, file: !1880, line: 354, column: 20)
!9864 = !DILocation(line: 362, column: 44, scope: !9861)
!9865 = !DILocation(line: 362, column: 59, scope: !9861)
!9866 = !DILocation(line: 362, column: 68, scope: !9861)
!9867 = !DILocation(line: 362, column: 82, scope: !9861)
!9868 = !DILocation(line: 362, column: 30, scope: !9861)
!9869 = !DILocation(line: 364, column: 28, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9863, file: !1880, line: 364, column: 21)
!9871 = !DILocation(line: 364, column: 21, scope: !9863)
!9872 = !DILocation(line: 368, column: 24, scope: !9773)
!9873 = !DILocation(line: 0, scope: !9774)
!9874 = distinct !{!9874, !9802, !9875}
!9875 = !DILocation(line: 370, column: 5, scope: !9761)
!9876 = !DILocation(line: 372, column: 5, scope: !9761)
!9877 = !DILocation(line: 379, column: 1, scope: !9761)
!9878 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !1880, file: !1880, line: 398, type: !9879, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !9881)
!9879 = !DISubroutineType(types: !9880)
!9880 = !{!974, !9666, !61}
!9881 = !{!9882, !9883, !9884, !9885}
!9882 = !DILocalVariable(name: "D", arg: 1, scope: !9878, file: !1880, line: 398, type: !9666)
!9883 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !9878, file: !1880, line: 398, type: !61)
!9884 = !DILocalVariable(name: "result", scope: !9878, file: !1880, line: 401, type: !974)
!9885 = !DILocalVariable(name: "block_index", scope: !9878, file: !1880, line: 402, type: !61)
!9886 = !DILocation(line: 0, scope: !9878)
!9887 = !DILocation(line: 402, column: 36, scope: !9878)
!9888 = !DILocation(line: 403, column: 13, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9878, file: !1880, line: 403, column: 9)
!9890 = !DILocation(line: 403, column: 9, scope: !9878)
!9891 = !DILocation(line: 404, column: 9, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9889, file: !1880, line: 403, column: 23)
!9893 = !DILocation(line: 405, column: 5, scope: !9892)
!9894 = !DILocation(line: 407, column: 37, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9878, file: !1880, line: 407, column: 9)
!9896 = !DILocation(line: 407, column: 21, scope: !9895)
!9897 = !DILocation(line: 407, column: 9, scope: !9878)
!9898 = !DILocation(line: 412, column: 5, scope: !9878)
!9899 = !DILocation(line: 414, column: 8, scope: !9878)
!9900 = !DILocation(line: 414, column: 19, scope: !9878)
!9901 = !DILocation(line: 414, column: 32, scope: !9878)
!9902 = !DILocation(line: 414, column: 5, scope: !9878)
!9903 = !DILocation(line: 416, column: 17, scope: !9878)
!9904 = !DILocation(line: 416, column: 28, scope: !9878)
!9905 = !DILocation(line: 416, column: 42, scope: !9878)
!9906 = !DILocation(line: 416, column: 14, scope: !9878)
!9907 = !DILocation(line: 418, column: 5, scope: !9878)
!9908 = !DILocation(line: 420, column: 16, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9878, file: !1880, line: 420, column: 9)
!9910 = !DILocation(line: 424, column: 1, scope: !9878)
!9911 = distinct !DISubprogram(name: "NOR_init", scope: !1880, file: !1880, line: 433, type: !7317, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !293)
!9912 = !DILocation(line: 436, column: 9, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9911, file: !1880, line: 436, column: 9)
!9914 = !DILocation(line: 436, column: 9, scope: !9911)
!9915 = !DILocation(line: 437, column: 9, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9913, file: !1880, line: 436, column: 62)
!9917 = !DILocation(line: 438, column: 9, scope: !9916)
!9918 = !DILocation(line: 439, column: 27, scope: !9916)
!9919 = !DILocation(line: 440, column: 5, scope: !9916)
!9920 = !DILocation(line: 441, column: 5, scope: !9911)
!9921 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !1880, file: !1880, line: 444, type: !7783, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !293)
!9922 = !DILocation(line: 446, column: 12, scope: !9921)
!9923 = !DILocation(line: 446, column: 5, scope: !9921)
!9924 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !1880, file: !1880, line: 449, type: !9925, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !9927)
!9925 = !DISubroutineType(types: !9926)
!9926 = !{!974, !61, !61, !797}
!9927 = !{!9928, !9929, !9930, !9931, !9932, !9933, !9934}
!9928 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9924, file: !1880, line: 449, type: !61)
!9929 = !DILocalVariable(name: "page_idx", arg: 2, scope: !9924, file: !1880, line: 449, type: !61)
!9930 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9924, file: !1880, line: 449, type: !797)
!9931 = !DILocalVariable(name: "D", scope: !9924, file: !1880, line: 451, type: !9666)
!9932 = !DILocalVariable(name: "mtdData", scope: !9924, file: !1880, line: 452, type: !1888)
!9933 = !DILocalVariable(name: "result", scope: !9924, file: !1880, line: 453, type: !974)
!9934 = !DILocalVariable(name: "addr", scope: !9924, file: !1880, line: 455, type: !61)
!9935 = !DILocation(line: 0, scope: !9924)
!9936 = !DILocation(line: 452, column: 60, scope: !9924)
!9937 = !DILocation(line: 455, column: 32, scope: !9924)
!9938 = !DILocation(line: 455, column: 22, scope: !9924)
!9939 = !DILocation(line: 455, column: 95, scope: !9924)
!9940 = !DILocation(line: 455, column: 76, scope: !9924)
!9941 = !DILocation(line: 455, column: 118, scope: !9924)
!9942 = !DILocation(line: 455, column: 74, scope: !9924)
!9943 = !DILocation(line: 455, column: 106, scope: !9924)
!9944 = !DILocation(line: 457, column: 14, scope: !9924)
!9945 = !DILocation(line: 459, column: 16, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9924, file: !1880, line: 459, column: 9)
!9947 = !DILocation(line: 463, column: 1, scope: !9924)
!9948 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !1880, file: !1880, line: 466, type: !9925, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !9949)
!9949 = !{!9950, !9951, !9952, !9953, !9954, !9955, !9956}
!9950 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9948, file: !1880, line: 466, type: !61)
!9951 = !DILocalVariable(name: "page_idx", arg: 2, scope: !9948, file: !1880, line: 466, type: !61)
!9952 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9948, file: !1880, line: 466, type: !797)
!9953 = !DILocalVariable(name: "D", scope: !9948, file: !1880, line: 468, type: !9666)
!9954 = !DILocalVariable(name: "mtdData", scope: !9948, file: !1880, line: 469, type: !1888)
!9955 = !DILocalVariable(name: "result", scope: !9948, file: !1880, line: 470, type: !974)
!9956 = !DILocalVariable(name: "addr", scope: !9948, file: !1880, line: 472, type: !61)
!9957 = !DILocation(line: 0, scope: !9948)
!9958 = !DILocation(line: 469, column: 60, scope: !9948)
!9959 = !DILocation(line: 472, column: 32, scope: !9948)
!9960 = !DILocation(line: 472, column: 22, scope: !9948)
!9961 = !DILocation(line: 472, column: 95, scope: !9948)
!9962 = !DILocation(line: 472, column: 76, scope: !9948)
!9963 = !DILocation(line: 472, column: 118, scope: !9948)
!9964 = !DILocation(line: 472, column: 74, scope: !9948)
!9965 = !DILocation(line: 472, column: 106, scope: !9948)
!9966 = !DILocation(line: 474, column: 14, scope: !9948)
!9967 = !DILocation(line: 475, column: 16, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9948, file: !1880, line: 475, column: 9)
!9969 = !DILocation(line: 479, column: 1, scope: !9948)
!9970 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !1880, file: !1880, line: 481, type: !9971, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !9973)
!9971 = !DISubroutineType(types: !9972)
!9972 = !{!974, !61}
!9973 = !{!9974, !9975}
!9974 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9970, file: !1880, line: 481, type: !61)
!9975 = !DILocalVariable(name: "result", scope: !9970, file: !1880, line: 483, type: !974)
!9976 = !DILocation(line: 0, scope: !9970)
!9977 = !DILocation(line: 484, column: 14, scope: !9970)
!9978 = !DILocation(line: 485, column: 16, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9970, file: !1880, line: 485, column: 9)
!9980 = !DILocation(line: 489, column: 1, scope: !9970)
!9981 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !1880, file: !1880, line: 492, type: !3553, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !9982)
!9982 = !{!9983, !9984, !9985}
!9983 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9981, file: !1880, line: 492, type: !61)
!9984 = !DILocalVariable(name: "D", scope: !9981, file: !1880, line: 494, type: !9666)
!9985 = !DILocalVariable(name: "mtdData", scope: !9981, file: !1880, line: 495, type: !1888)
!9986 = !DILocation(line: 0, scope: !9981)
!9987 = !DILocation(line: 495, column: 60, scope: !9981)
!9988 = !DILocation(line: 496, column: 12, scope: !9981)
!9989 = !DILocation(line: 496, column: 5, scope: !9981)
!9990 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !1880, file: !1880, line: 499, type: !3553, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !9991)
!9991 = !{!9992, !9993, !9994}
!9992 = !DILocalVariable(name: "block_addr", arg: 1, scope: !9990, file: !1880, line: 499, type: !61)
!9993 = !DILocalVariable(name: "D", scope: !9990, file: !1880, line: 501, type: !9666)
!9994 = !DILocalVariable(name: "mtdData", scope: !9990, file: !1880, line: 502, type: !1888)
!9995 = !DILocation(line: 0, scope: !9990)
!9996 = !DILocation(line: 502, column: 60, scope: !9990)
!9997 = !DILocation(line: 504, column: 12, scope: !9990)
!9998 = !DILocation(line: 504, column: 5, scope: !9990)
!9999 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !1880, file: !1880, line: 510, type: !10000, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !10002)
!10000 = !DISubroutineType(types: !10001)
!10001 = !{!974, !61, !1036, !1036}
!10002 = !{!10003, !10004, !10005, !10006, !10007}
!10003 = !DILocalVariable(name: "block_addr", arg: 1, scope: !9999, file: !1880, line: 510, type: !61)
!10004 = !DILocalVariable(name: "block_index", arg: 2, scope: !9999, file: !1880, line: 510, type: !1036)
!10005 = !DILocalVariable(name: "offset", arg: 3, scope: !9999, file: !1880, line: 510, type: !1036)
!10006 = !DILocalVariable(name: "D", scope: !9999, file: !1880, line: 512, type: !9666)
!10007 = !DILocalVariable(name: "mtdData", scope: !9999, file: !1880, line: 513, type: !1888)
!10008 = !DILocation(line: 0, scope: !9999)
!10009 = !DILocation(line: 513, column: 60, scope: !9999)
!10010 = !DILocation(line: 519, column: 20, scope: !9999)
!10011 = !DILocation(line: 519, column: 18, scope: !9999)
!10012 = !DILocation(line: 520, column: 22, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !9999, file: !1880, line: 520, column: 9)
!10014 = !DILocation(line: 520, column: 9, scope: !9999)
!10015 = !DILocation(line: 524, column: 28, scope: !9999)
!10016 = !DILocation(line: 524, column: 26, scope: !9999)
!10017 = !DILocation(line: 524, column: 13, scope: !9999)
!10018 = !DILocation(line: 526, column: 5, scope: !9999)
!10019 = !DILocation(line: 527, column: 1, scope: !9999)
!10020 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !1880, file: !1880, line: 532, type: !10021, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !10023)
!10021 = !DISubroutineType(types: !10022)
!10022 = !{!974, !61, !61, !1036}
!10023 = !{!10024, !10025, !10026, !10027, !10028}
!10024 = !DILocalVariable(name: "block_index", arg: 1, scope: !10020, file: !1880, line: 532, type: !61)
!10025 = !DILocalVariable(name: "offset", arg: 2, scope: !10020, file: !1880, line: 532, type: !61)
!10026 = !DILocalVariable(name: "addr", arg: 3, scope: !10020, file: !1880, line: 532, type: !1036)
!10027 = !DILocalVariable(name: "D", scope: !10020, file: !1880, line: 534, type: !9666)
!10028 = !DILocalVariable(name: "mtdData", scope: !10020, file: !1880, line: 535, type: !1888)
!10029 = !DILocation(line: 0, scope: !10020)
!10030 = !DILocation(line: 535, column: 60, scope: !10020)
!10031 = !DILocation(line: 537, column: 23, scope: !10020)
!10032 = !DILocation(line: 537, column: 13, scope: !10020)
!10033 = !DILocation(line: 537, column: 79, scope: !10020)
!10034 = !DILocation(line: 537, column: 60, scope: !10020)
!10035 = !DILocation(line: 537, column: 58, scope: !10020)
!10036 = !DILocation(line: 537, column: 88, scope: !10020)
!10037 = !DILocation(line: 537, column: 11, scope: !10020)
!10038 = !DILocation(line: 539, column: 5, scope: !10020)
!10039 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !1880, file: !1880, line: 545, type: !10040, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !10042)
!10040 = !DISubroutineType(types: !10041)
!10041 = !{!1936, !974}
!10042 = !{!10043}
!10043 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !10039, file: !1880, line: 545, type: !974)
!10044 = !DILocation(line: 0, scope: !10039)
!10045 = !DILocation(line: 547, column: 9, scope: !10039)
!10046 = !DILocation(line: 558, column: 9, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10048, file: !1880, line: 558, column: 9)
!10048 = distinct !DILexicalBlock(scope: !10049, file: !1880, line: 558, column: 9)
!10049 = distinct !DILexicalBlock(scope: !10050, file: !1880, line: 558, column: 9)
!10050 = distinct !DILexicalBlock(scope: !10051, file: !1880, line: 557, column: 12)
!10051 = distinct !DILexicalBlock(scope: !10052, file: !1880, line: 555, column: 16)
!10052 = distinct !DILexicalBlock(scope: !10053, file: !1880, line: 553, column: 16)
!10053 = distinct !DILexicalBlock(scope: !10054, file: !1880, line: 551, column: 16)
!10054 = distinct !DILexicalBlock(scope: !10055, file: !1880, line: 549, column: 16)
!10055 = distinct !DILexicalBlock(scope: !10039, file: !1880, line: 547, column: 9)
!10056 = !DILocation(line: 560, column: 1, scope: !10039)
!10057 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !1880, file: !1880, line: 561, type: !10058, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !10061)
!10058 = !DISubroutineType(types: !10059)
!10059 = !{!10060, !61}
!10060 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !1217, line: 127, baseType: !1882)
!10061 = !{!10062, !10063, !10064}
!10062 = !DILocalVariable(name: "address", arg: 1, scope: !10057, file: !1880, line: 561, type: !61)
!10063 = !DILocalVariable(name: "block_size", scope: !10057, file: !1880, line: 563, type: !61)
!10064 = !DILocalVariable(name: "block_index", scope: !10057, file: !1880, line: 564, type: !61)
!10065 = !DILocation(line: 0, scope: !10057)
!10066 = !DILocation(line: 566, column: 19, scope: !10057)
!10067 = !DILocation(line: 567, column: 21, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10057, file: !1880, line: 567, column: 9)
!10069 = !DILocation(line: 567, column: 9, scope: !10057)
!10070 = !DILocation(line: 568, column: 9, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10072, file: !1880, line: 568, column: 9)
!10072 = distinct !DILexicalBlock(scope: !10073, file: !1880, line: 568, column: 9)
!10073 = distinct !DILexicalBlock(scope: !10074, file: !1880, line: 568, column: 9)
!10074 = distinct !DILexicalBlock(scope: !10068, file: !1880, line: 567, column: 45)
!10075 = !DILocation(line: 570, column: 18, scope: !10057)
!10076 = !DILocation(line: 571, column: 9, scope: !10057)
!10077 = !DILocation(line: 574, column: 9, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10079, file: !1880, line: 573, column: 38)
!10079 = distinct !DILexicalBlock(scope: !10080, file: !1880, line: 573, column: 16)
!10080 = distinct !DILexicalBlock(scope: !10057, file: !1880, line: 571, column: 9)
!10081 = !DILocation(line: 576, column: 9, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10083, file: !1880, line: 575, column: 39)
!10083 = distinct !DILexicalBlock(scope: !10079, file: !1880, line: 575, column: 16)
!10084 = !DILocation(line: 578, column: 9, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10086, file: !1880, line: 578, column: 9)
!10086 = distinct !DILexicalBlock(scope: !10087, file: !1880, line: 578, column: 9)
!10087 = distinct !DILexicalBlock(scope: !10088, file: !1880, line: 578, column: 9)
!10088 = distinct !DILexicalBlock(scope: !10083, file: !1880, line: 577, column: 12)
!10089 = !DILocation(line: 0, scope: !10080)
!10090 = !DILocation(line: 580, column: 1, scope: !10057)
!10091 = distinct !DISubprogram(name: "hal_flash_init", scope: !1880, file: !1880, line: 583, type: !7783, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !293)
!10092 = !DILocation(line: 585, column: 5, scope: !10091)
!10093 = !DILocation(line: 586, column: 5, scope: !10091)
!10094 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !1880, file: !1880, line: 589, type: !7783, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !293)
!10095 = !DILocation(line: 591, column: 5, scope: !10094)
!10096 = distinct !DISubprogram(name: "hal_flash_erase", scope: !1880, file: !1880, line: 595, type: !10097, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !10099)
!10097 = !DISubroutineType(types: !10098)
!10098 = !{!1936, !61, !10060}
!10099 = !{!10100, !10101, !10102, !10103, !10104}
!10100 = !DILocalVariable(name: "start_address", arg: 1, scope: !10096, file: !1880, line: 595, type: !61)
!10101 = !DILocalVariable(name: "block", arg: 2, scope: !10096, file: !1880, line: 595, type: !10060)
!10102 = !DILocalVariable(name: "result", scope: !10096, file: !1880, line: 597, type: !974)
!10103 = !DILocalVariable(name: "block_index", scope: !10096, file: !1880, line: 598, type: !61)
!10104 = !DILocalVariable(name: "erase_type", scope: !10096, file: !1880, line: 599, type: !61)
!10105 = !DILocation(line: 0, scope: !10096)
!10106 = !DILocation(line: 601, column: 9, scope: !10096)
!10107 = !DILocation(line: 602, column: 28, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10109, file: !1880, line: 602, column: 13)
!10109 = distinct !DILexicalBlock(scope: !10110, file: !1880, line: 601, column: 38)
!10110 = distinct !DILexicalBlock(scope: !10096, file: !1880, line: 601, column: 9)
!10111 = !DILocation(line: 602, column: 37, scope: !10108)
!10112 = !DILocation(line: 602, column: 13, scope: !10109)
!10113 = !DILocation(line: 607, column: 28, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10115, file: !1880, line: 607, column: 13)
!10115 = distinct !DILexicalBlock(scope: !10116, file: !1880, line: 606, column: 46)
!10116 = distinct !DILexicalBlock(scope: !10110, file: !1880, line: 606, column: 16)
!10117 = !DILocation(line: 607, column: 38, scope: !10114)
!10118 = !DILocation(line: 607, column: 13, scope: !10115)
!10119 = !DILocation(line: 612, column: 28, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10121, file: !1880, line: 612, column: 13)
!10121 = distinct !DILexicalBlock(scope: !10122, file: !1880, line: 611, column: 46)
!10122 = distinct !DILexicalBlock(scope: !10116, file: !1880, line: 611, column: 16)
!10123 = !DILocation(line: 612, column: 38, scope: !10120)
!10124 = !DILocation(line: 612, column: 13, scope: !10121)
!10125 = !DILocation(line: 0, scope: !10110)
!10126 = !DILocation(line: 621, column: 19, scope: !10096)
!10127 = !DILocation(line: 622, column: 21, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10096, file: !1880, line: 622, column: 9)
!10129 = !DILocation(line: 622, column: 9, scope: !10096)
!10130 = !DILocation(line: 626, column: 17, scope: !10096)
!10131 = !DILocation(line: 627, column: 14, scope: !10096)
!10132 = !DILocation(line: 628, column: 16, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10096, file: !1880, line: 628, column: 9)
!10134 = !DILocation(line: 628, column: 9, scope: !10096)
!10135 = !DILocation(line: 629, column: 16, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10133, file: !1880, line: 628, column: 38)
!10137 = !DILocation(line: 629, column: 9, scope: !10136)
!10138 = !DILocation(line: 632, column: 1, scope: !10096)
!10139 = distinct !DISubprogram(name: "hal_flash_read", scope: !1880, file: !1880, line: 634, type: !10140, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !10142)
!10140 = !DISubroutineType(types: !10141)
!10141 = !{!1936, !61, !797, !61}
!10142 = !{!10143, !10144, !10145, !10146, !10147}
!10143 = !DILocalVariable(name: "start_address", arg: 1, scope: !10139, file: !1880, line: 634, type: !61)
!10144 = !DILocalVariable(name: "buffer", arg: 2, scope: !10139, file: !1880, line: 634, type: !797)
!10145 = !DILocalVariable(name: "length", arg: 3, scope: !10139, file: !1880, line: 634, type: !61)
!10146 = !DILocalVariable(name: "D", scope: !10139, file: !1880, line: 636, type: !9666)
!10147 = !DILocalVariable(name: "result", scope: !10139, file: !1880, line: 637, type: !974)
!10148 = !DILocation(line: 0, scope: !10139)
!10149 = !DILocation(line: 639, column: 14, scope: !10139)
!10150 = !DILocation(line: 641, column: 16, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10139, file: !1880, line: 641, column: 9)
!10152 = !DILocation(line: 641, column: 9, scope: !10139)
!10153 = !DILocation(line: 642, column: 16, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10151, file: !1880, line: 641, column: 38)
!10155 = !DILocation(line: 642, column: 9, scope: !10154)
!10156 = !DILocation(line: 645, column: 1, scope: !10139)
!10157 = distinct !DISubprogram(name: "hal_flash_write", scope: !1880, file: !1880, line: 647, type: !10158, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !10160)
!10158 = !DISubroutineType(types: !10159)
!10159 = !{!1936, !61, !5083, !61}
!10160 = !{!10161, !10162, !10163, !10164, !10165, !10166}
!10161 = !DILocalVariable(name: "address", arg: 1, scope: !10157, file: !1880, line: 647, type: !61)
!10162 = !DILocalVariable(name: "data", arg: 2, scope: !10157, file: !1880, line: 647, type: !5083)
!10163 = !DILocalVariable(name: "length", arg: 3, scope: !10157, file: !1880, line: 647, type: !61)
!10164 = !DILocalVariable(name: "D", scope: !10157, file: !1880, line: 649, type: !9666)
!10165 = !DILocalVariable(name: "result", scope: !10157, file: !1880, line: 650, type: !974)
!10166 = !DILocalVariable(name: "addr", scope: !10167, file: !1880, line: 660, type: !61)
!10167 = distinct !DILexicalBlock(scope: !10168, file: !1880, line: 659, column: 40)
!10168 = distinct !DILexicalBlock(scope: !10157, file: !1880, line: 659, column: 8)
!10169 = !DILocation(line: 0, scope: !10157)
!10170 = !DILocation(line: 652, column: 14, scope: !10157)
!10171 = !DILocation(line: 653, column: 16, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10157, file: !1880, line: 653, column: 9)
!10173 = !DILocation(line: 653, column: 9, scope: !10157)
!10174 = !DILocation(line: 654, column: 16, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10172, file: !1880, line: 653, column: 38)
!10176 = !DILocation(line: 654, column: 9, scope: !10175)
!10177 = !DILocation(line: 659, column: 8, scope: !10168)
!10178 = !DILocation(line: 659, column: 8, scope: !10157)
!10179 = !DILocation(line: 661, column: 25, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10167, file: !1880, line: 661, column: 8)
!10181 = !DILocation(line: 0, scope: !10167)
!10182 = !DILocation(line: 661, column: 58, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10180, file: !1880, line: 661, column: 8)
!10184 = !DILocation(line: 661, column: 8, scope: !10180)
!10185 = !DILocation(line: 662, column: 13, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10183, file: !1880, line: 661, column: 147)
!10187 = !DILocation(line: 661, column: 128, scope: !10183)
!10188 = distinct !{!10188, !10184, !10189}
!10189 = !DILocation(line: 663, column: 8, scope: !10180)
!10190 = !DILocation(line: 668, column: 1, scope: !10157)
!10191 = distinct !DISubprogram(name: "BlockAddress", scope: !1941, file: !1941, line: 111, type: !10192, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !10194)
!10192 = !DISubroutineType(types: !10193)
!10193 = !{!88, !88, !61}
!10194 = !{!10195, !10196, !10197, !10198, !10199, !10200}
!10195 = !DILocalVariable(name: "DriverData", arg: 1, scope: !10191, file: !1941, line: 111, type: !88)
!10196 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10191, file: !1941, line: 111, type: !61)
!10197 = !DILocalVariable(name: "D", scope: !10191, file: !1941, line: 113, type: !1969)
!10198 = !DILocalVariable(name: "addr", scope: !10191, file: !1941, line: 114, type: !61)
!10199 = !DILocalVariable(name: "region", scope: !10191, file: !1941, line: 115, type: !61)
!10200 = !DILocalVariable(name: "BlockUpperBound", scope: !10191, file: !1941, line: 115, type: !61)
!10201 = !DILocation(line: 0, scope: !10191)
!10202 = !DILocation(line: 117, column: 26, scope: !10191)
!10203 = !DILocation(line: 117, column: 40, scope: !10191)
!10204 = !DILocation(line: 118, column: 28, scope: !10191)
!10205 = !DILocation(line: 118, column: 5, scope: !10191)
!10206 = !DILocation(line: 119, column: 39, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10191, file: !1941, line: 118, column: 43)
!10208 = !DILocation(line: 119, column: 76, scope: !10207)
!10209 = !DILocation(line: 119, column: 52, scope: !10207)
!10210 = !DILocation(line: 119, column: 14, scope: !10207)
!10211 = !DILocation(line: 120, column: 15, scope: !10207)
!10212 = !DILocation(line: 121, column: 50, scope: !10207)
!10213 = !DILocation(line: 121, column: 25, scope: !10207)
!10214 = distinct !{!10214, !10205, !10215}
!10215 = !DILocation(line: 122, column: 5, scope: !10191)
!10216 = !DILocation(line: 123, column: 68, scope: !10191)
!10217 = !DILocation(line: 123, column: 44, scope: !10191)
!10218 = !DILocation(line: 123, column: 25, scope: !10191)
!10219 = !DILocation(line: 123, column: 107, scope: !10191)
!10220 = !DILocation(line: 123, column: 83, scope: !10191)
!10221 = !DILocation(line: 123, column: 10, scope: !10191)
!10222 = !DILocation(line: 125, column: 16, scope: !10191)
!10223 = !DILocation(line: 125, column: 25, scope: !10191)
!10224 = !DILocation(line: 125, column: 5, scope: !10191)
!10225 = distinct !DISubprogram(name: "MapWindow", scope: !1941, file: !1941, line: 180, type: !1574, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !10226)
!10226 = !{!10227, !10228, !10229, !10230}
!10227 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10225, file: !1941, line: 180, type: !88)
!10228 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10225, file: !1941, line: 180, type: !61)
!10229 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !10225, file: !1941, line: 180, type: !61)
!10230 = !DILocalVariable(name: "D", scope: !10225, file: !1941, line: 182, type: !1969)
!10231 = !DILocation(line: 0, scope: !10225)
!10232 = !DILocation(line: 185, column: 5, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10234, file: !1941, line: 185, column: 5)
!10234 = distinct !DILexicalBlock(scope: !10225, file: !1941, line: 185, column: 5)
!10235 = !DILocation(line: 185, column: 5, scope: !10234)
!10236 = !DILocation(line: 185, column: 5, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10233, file: !1941, line: 185, column: 5)
!10238 = !DILocation(line: 186, column: 27, scope: !10225)
!10239 = !DILocation(line: 186, column: 19, scope: !10225)
!10240 = !DILocation(line: 186, column: 8, scope: !10225)
!10241 = !DILocation(line: 186, column: 17, scope: !10225)
!10242 = !DILocation(line: 188, column: 5, scope: !10225)
!10243 = !DILocation(line: 0, scope: !1962)
!10244 = !DILocation(line: 142, column: 12, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !1962, file: !1941, line: 142, column: 9)
!10246 = !DILocation(line: 142, column: 34, scope: !10245)
!10247 = !DILocation(line: 142, column: 64, scope: !10245)
!10248 = !DILocation(line: 142, column: 75, scope: !10245)
!10249 = !DILocation(line: 142, column: 9, scope: !1962)
!10250 = !DILocation(line: 143, column: 79, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10252, file: !1941, line: 143, column: 13)
!10252 = distinct !DILexicalBlock(scope: !10245, file: !1941, line: 142, column: 99)
!10253 = !DILocation(line: 143, column: 13, scope: !10252)
!10254 = !DILocation(line: 144, column: 72, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10256, file: !1941, line: 144, column: 17)
!10256 = distinct !DILexicalBlock(scope: !10251, file: !1941, line: 143, column: 94)
!10257 = !DILocation(line: 144, column: 83, scope: !10255)
!10258 = !DILocation(line: 144, column: 17, scope: !10256)
!10259 = !DILocation(line: 145, column: 87, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10261, file: !1941, line: 145, column: 21)
!10261 = distinct !DILexicalBlock(scope: !10255, file: !1941, line: 144, column: 107)
!10262 = !DILocation(line: 145, column: 21, scope: !10261)
!10263 = !DILocation(line: 146, column: 33, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10260, file: !1941, line: 145, column: 102)
!10265 = !DILocation(line: 147, column: 25, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10264, file: !1941, line: 147, column: 25)
!10267 = !DILocation(line: 147, column: 62, scope: !10266)
!10268 = !DILocation(line: 147, column: 34, scope: !10266)
!10269 = !DILocation(line: 147, column: 25, scope: !10264)
!10270 = !DILocation(line: 148, column: 91, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10266, file: !1941, line: 147, column: 106)
!10272 = !DILocation(line: 149, column: 111, scope: !10271)
!10273 = !DILocation(line: 149, column: 101, scope: !10271)
!10274 = !DILocation(line: 149, column: 87, scope: !10271)
!10275 = !DILocation(line: 149, column: 99, scope: !10271)
!10276 = !DILocation(line: 150, column: 37, scope: !10271)
!10277 = !DILocation(line: 150, column: 34, scope: !10271)
!10278 = !DILocation(line: 151, column: 21, scope: !10271)
!10279 = !DILocation(line: 152, column: 91, scope: !10280)
!10280 = distinct !DILexicalBlock(scope: !10266, file: !1941, line: 151, column: 28)
!10281 = !DILocation(line: 153, column: 111, scope: !10280)
!10282 = !DILocation(line: 153, column: 101, scope: !10280)
!10283 = !DILocation(line: 153, column: 87, scope: !10280)
!10284 = !DILocation(line: 153, column: 99, scope: !10280)
!10285 = !DILocation(line: 154, column: 34, scope: !10280)
!10286 = !DILocation(line: 157, column: 32, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10260, file: !1941, line: 156, column: 24)
!10288 = !DILocation(line: 158, column: 83, scope: !10287)
!10289 = !DILocation(line: 159, column: 60, scope: !10287)
!10290 = !DILocation(line: 159, column: 33, scope: !10287)
!10291 = !DILocation(line: 159, column: 30, scope: !10287)
!10292 = !DILocation(line: 162, column: 29, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10255, file: !1941, line: 161, column: 20)
!10294 = !DILocation(line: 163, column: 83, scope: !10293)
!10295 = !DILocation(line: 164, column: 103, scope: !10293)
!10296 = !DILocation(line: 164, column: 93, scope: !10293)
!10297 = !DILocation(line: 164, column: 79, scope: !10293)
!10298 = !DILocation(line: 164, column: 91, scope: !10293)
!10299 = !DILocation(line: 165, column: 56, scope: !10293)
!10300 = !DILocation(line: 165, column: 29, scope: !10293)
!10301 = !DILocation(line: 165, column: 26, scope: !10293)
!10302 = !DILocation(line: 168, column: 24, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10251, file: !1941, line: 167, column: 16)
!10304 = !DILocation(line: 169, column: 75, scope: !10303)
!10305 = !DILocation(line: 170, column: 50, scope: !10303)
!10306 = !DILocation(line: 170, column: 22, scope: !10303)
!10307 = !DILocation(line: 173, column: 21, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10245, file: !1941, line: 172, column: 12)
!10309 = !DILocation(line: 174, column: 75, scope: !10308)
!10310 = !DILocation(line: 175, column: 95, scope: !10308)
!10311 = !DILocation(line: 175, column: 85, scope: !10308)
!10312 = !DILocation(line: 175, column: 71, scope: !10308)
!10313 = !DILocation(line: 175, column: 83, scope: !10308)
!10314 = !DILocation(line: 176, column: 46, scope: !10308)
!10315 = !DILocation(line: 176, column: 18, scope: !10308)
!10316 = !DILocation(line: 0, scope: !10245)
!10317 = !DILocation(line: 178, column: 5, scope: !1962)
!10318 = distinct !DISubprogram(name: "BlockSize", scope: !1941, file: !1941, line: 191, type: !1963, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !10319)
!10319 = !{!10320, !10321, !10322, !10323, !10324}
!10320 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10318, file: !1941, line: 191, type: !88)
!10321 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10318, file: !1941, line: 191, type: !61)
!10322 = !DILocalVariable(name: "D", scope: !10318, file: !1941, line: 193, type: !1969)
!10323 = !DILocalVariable(name: "region", scope: !10318, file: !1941, line: 194, type: !61)
!10324 = !DILocalVariable(name: "BlockUpperBound", scope: !10318, file: !1941, line: 194, type: !61)
!10325 = !DILocation(line: 0, scope: !10318)
!10326 = !DILocation(line: 196, column: 26, scope: !10318)
!10327 = !DILocation(line: 196, column: 45, scope: !10318)
!10328 = !DILocation(line: 197, column: 28, scope: !10318)
!10329 = !DILocation(line: 197, column: 5, scope: !10318)
!10330 = !DILocation(line: 198, column: 15, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10318, file: !1941, line: 197, column: 43)
!10332 = !DILocation(line: 199, column: 50, scope: !10331)
!10333 = !DILocation(line: 199, column: 25, scope: !10331)
!10334 = distinct !{!10334, !10329, !10335}
!10335 = !DILocation(line: 200, column: 5, scope: !10318)
!10336 = !DILocation(line: 202, column: 35, scope: !10318)
!10337 = !DILocation(line: 202, column: 5, scope: !10318)
!10338 = distinct !DISubprogram(name: "BlockIndex", scope: !1941, file: !1941, line: 205, type: !1963, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !10339)
!10339 = !{!10340, !10341, !10342, !10343, !10344, !10345}
!10340 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10338, file: !1941, line: 205, type: !88)
!10341 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !10338, file: !1941, line: 205, type: !61)
!10342 = !DILocalVariable(name: "D", scope: !10338, file: !1941, line: 207, type: !1969)
!10343 = !DILocalVariable(name: "region", scope: !10338, file: !1941, line: 208, type: !61)
!10344 = !DILocalVariable(name: "BlockUpperAddr", scope: !10338, file: !1941, line: 208, type: !61)
!10345 = !DILocalVariable(name: "blk_idx", scope: !10338, file: !1941, line: 209, type: !61)
!10346 = !DILocation(line: 0, scope: !10338)
!10347 = !DILocation(line: 211, column: 25, scope: !10338)
!10348 = !DILocation(line: 211, column: 44, scope: !10338)
!10349 = !DILocation(line: 211, column: 81, scope: !10338)
!10350 = !DILocation(line: 211, column: 57, scope: !10338)
!10351 = !DILocation(line: 213, column: 28, scope: !10338)
!10352 = !DILocation(line: 213, column: 40, scope: !10338)
!10353 = !DILocation(line: 213, column: 66, scope: !10338)
!10354 = !DILocation(line: 213, column: 5, scope: !10338)
!10355 = !DILocation(line: 214, column: 17, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10338, file: !1941, line: 213, column: 78)
!10357 = !DILocation(line: 215, column: 18, scope: !10356)
!10358 = !DILocation(line: 216, column: 15, scope: !10356)
!10359 = !DILocation(line: 217, column: 48, scope: !10356)
!10360 = !DILocation(line: 217, column: 85, scope: !10356)
!10361 = !DILocation(line: 217, column: 61, scope: !10356)
!10362 = distinct !{!10362, !10354, !10363}
!10363 = !DILocation(line: 218, column: 5, scope: !10338)
!10364 = !DILocation(line: 221, column: 53, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10366, file: !1941, line: 220, column: 37)
!10366 = distinct !DILexicalBlock(scope: !10338, file: !1941, line: 220, column: 9)
!10367 = !DILocation(line: 221, column: 29, scope: !10365)
!10368 = !DILocation(line: 221, column: 17, scope: !10365)
!10369 = !DILocation(line: 222, column: 5, scope: !10365)
!10370 = !DILocation(line: 0, scope: !10366)
!10371 = !DILocation(line: 225, column: 5, scope: !10338)
!10372 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !1941, file: !1941, line: 232, type: !3805, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !293)
!10373 = !DILocation(line: 238, column: 5, scope: !10372)
!10374 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !1941, file: !1941, line: 243, type: !3805, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !293)
!10375 = !DILocation(line: 245, column: 5, scope: !10374)
!10376 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !1941, file: !1941, line: 249, type: !3805, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !293)
!10377 = !DILocation(line: 254, column: 5, scope: !10376)
!10378 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !1941, file: !1941, line: 259, type: !3805, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !293)
!10379 = !DILocation(line: 261, column: 5, scope: !10378)
!10380 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !1941, file: !1941, line: 271, type: !6418, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1940, retainedNodes: !10381)
!10381 = !{!10382, !10383}
!10382 = !DILocalVariable(name: "delay", arg: 1, scope: !10380, file: !1941, line: 271, type: !61)
!10383 = !DILocalVariable(name: "ret", scope: !10380, file: !1941, line: 276, type: !2972)
!10384 = !DILocation(line: 0, scope: !10380)
!10385 = !DILocation(line: 277, column: 11, scope: !10380)
!10386 = !DILocation(line: 278, column: 13, scope: !10387)
!10387 = distinct !DILexicalBlock(scope: !10380, file: !1941, line: 278, column: 9)
!10388 = !DILocation(line: 278, column: 9, scope: !10380)
!10389 = !DILocation(line: 279, column: 9, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10391, file: !1941, line: 279, column: 9)
!10391 = distinct !DILexicalBlock(scope: !10392, file: !1941, line: 279, column: 9)
!10392 = distinct !DILexicalBlock(scope: !10393, file: !1941, line: 279, column: 9)
!10393 = distinct !DILexicalBlock(scope: !10387, file: !1941, line: 278, column: 35)
!10394 = !DILocation(line: 282, column: 1, scope: !10380)
!10395 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !2603, file: !2603, line: 58, type: !10396, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !10398)
!10396 = !DISubroutineType(types: !10397)
!10397 = !{null, !2237, !7, !2237, null}
!10398 = !{!10399, !10400, !10401, !10402, !10411}
!10399 = !DILocalVariable(name: "func", arg: 1, scope: !10395, file: !2603, line: 58, type: !2237)
!10400 = !DILocalVariable(name: "line", arg: 2, scope: !10395, file: !2603, line: 58, type: !7)
!10401 = !DILocalVariable(name: "message", arg: 3, scope: !10395, file: !2603, line: 58, type: !2237)
!10402 = !DILocalVariable(name: "ap", scope: !10395, file: !2603, line: 60, type: !10403)
!10403 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !10404, line: 46, baseType: !10405)
!10404 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!10405 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !10406, line: 32, baseType: !10407)
!10406 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!10407 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2603, baseType: !10408)
!10408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !10409)
!10409 = !{!10410}
!10410 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !10408, file: !2603, line: 60, baseType: !88, size: 32)
!10411 = !DILocalVariable(name: "mask", scope: !10395, file: !2603, line: 62, type: !61)
!10412 = !DILocation(line: 0, scope: !10395)
!10413 = !DILocation(line: 60, column: 5, scope: !10395)
!10414 = !DILocation(line: 60, column: 13, scope: !10395)
!10415 = !DILocation(line: 62, column: 5, scope: !10395)
!10416 = !DILocation(line: 63, column: 5, scope: !10395)
!10417 = !DILocation(line: 65, column: 5, scope: !10395)
!10418 = !DILocation(line: 66, column: 5, scope: !10395)
!10419 = !DILocation(line: 67, column: 5, scope: !10395)
!10420 = !DILocation(line: 69, column: 37, scope: !10395)
!10421 = !DILocation(line: 69, column: 5, scope: !10395)
!10422 = !DILocation(line: 71, column: 1, scope: !10395)
!10423 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !2603, file: !2603, line: 72, type: !10396, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !10424)
!10424 = !{!10425, !10426, !10427, !10428, !10429}
!10425 = !DILocalVariable(name: "func", arg: 1, scope: !10423, file: !2603, line: 72, type: !2237)
!10426 = !DILocalVariable(name: "line", arg: 2, scope: !10423, file: !2603, line: 72, type: !7)
!10427 = !DILocalVariable(name: "message", arg: 3, scope: !10423, file: !2603, line: 72, type: !2237)
!10428 = !DILocalVariable(name: "ap", scope: !10423, file: !2603, line: 74, type: !10403)
!10429 = !DILocalVariable(name: "mask", scope: !10423, file: !2603, line: 76, type: !61)
!10430 = !DILocation(line: 0, scope: !10423)
!10431 = !DILocation(line: 74, column: 5, scope: !10423)
!10432 = !DILocation(line: 74, column: 13, scope: !10423)
!10433 = !DILocation(line: 76, column: 5, scope: !10423)
!10434 = !DILocation(line: 77, column: 5, scope: !10423)
!10435 = !DILocation(line: 79, column: 5, scope: !10423)
!10436 = !DILocation(line: 80, column: 5, scope: !10423)
!10437 = !DILocation(line: 81, column: 5, scope: !10423)
!10438 = !DILocation(line: 83, column: 37, scope: !10423)
!10439 = !DILocation(line: 83, column: 5, scope: !10423)
!10440 = !DILocation(line: 85, column: 1, scope: !10423)
!10441 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !2603, file: !2603, line: 86, type: !10396, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !10442)
!10442 = !{!10443, !10444, !10445, !10446, !10447}
!10443 = !DILocalVariable(name: "func", arg: 1, scope: !10441, file: !2603, line: 86, type: !2237)
!10444 = !DILocalVariable(name: "line", arg: 2, scope: !10441, file: !2603, line: 86, type: !7)
!10445 = !DILocalVariable(name: "message", arg: 3, scope: !10441, file: !2603, line: 86, type: !2237)
!10446 = !DILocalVariable(name: "ap", scope: !10441, file: !2603, line: 88, type: !10403)
!10447 = !DILocalVariable(name: "mask", scope: !10441, file: !2603, line: 90, type: !61)
!10448 = !DILocation(line: 0, scope: !10441)
!10449 = !DILocation(line: 88, column: 5, scope: !10441)
!10450 = !DILocation(line: 88, column: 13, scope: !10441)
!10451 = !DILocation(line: 90, column: 5, scope: !10441)
!10452 = !DILocation(line: 91, column: 5, scope: !10441)
!10453 = !DILocation(line: 93, column: 5, scope: !10441)
!10454 = !DILocation(line: 94, column: 5, scope: !10441)
!10455 = !DILocation(line: 95, column: 5, scope: !10441)
!10456 = !DILocation(line: 97, column: 37, scope: !10441)
!10457 = !DILocation(line: 97, column: 5, scope: !10441)
!10458 = !DILocation(line: 99, column: 1, scope: !10441)
!10459 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !2603, file: !2603, line: 101, type: !10460, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !10464)
!10460 = !DISubroutineType(types: !10461)
!10461 = !{null, !2237, !7, !2237, !10462, !7, null}
!10462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10463, size: 32)
!10463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!10464 = !{!10465, !10466, !10467, !10468, !10469}
!10465 = !DILocalVariable(name: "func", arg: 1, scope: !10459, file: !2603, line: 101, type: !2237)
!10466 = !DILocalVariable(name: "line", arg: 2, scope: !10459, file: !2603, line: 101, type: !7)
!10467 = !DILocalVariable(name: "message", arg: 3, scope: !10459, file: !2603, line: 101, type: !2237)
!10468 = !DILocalVariable(name: "data", arg: 4, scope: !10459, file: !2603, line: 101, type: !10462)
!10469 = !DILocalVariable(name: "length", arg: 5, scope: !10459, file: !2603, line: 101, type: !7)
!10470 = !DILocation(line: 0, scope: !10459)
!10471 = !DILocation(line: 103, column: 1, scope: !10459)
!10472 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !2021, file: !2021, line: 87, type: !3553, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !10473)
!10473 = !{!10474, !10475}
!10474 = !DILocalVariable(name: "bank_no", arg: 1, scope: !10472, file: !2021, line: 87, type: !61)
!10475 = !DILocalVariable(name: "value", scope: !10472, file: !2021, line: 89, type: !61)
!10476 = !DILocation(line: 0, scope: !10472)
!10477 = !DILocation(line: 91, column: 41, scope: !10472)
!10478 = !DILocation(line: 91, column: 5, scope: !10472)
!10479 = !DILocation(line: 91, column: 19, scope: !10472)
!10480 = !DILocation(line: 91, column: 31, scope: !10472)
!10481 = !DILocation(line: 92, column: 77, scope: !10472)
!10482 = !DILocation(line: 92, column: 60, scope: !10472)
!10483 = !DILocation(line: 92, column: 31, scope: !10472)
!10484 = !DILocation(line: 94, column: 5, scope: !10472)
!10485 = !DILocation(line: 94, column: 27, scope: !10472)
!10486 = !DILocation(line: 94, column: 39, scope: !10472)
!10487 = !DILocation(line: 94, column: 65, scope: !10472)
!10488 = distinct !{!10488, !10484, !10489}
!10489 = !DILocation(line: 94, column: 70, scope: !10472)
!10490 = !DILocation(line: 96, column: 29, scope: !10472)
!10491 = !DILocation(line: 96, column: 64, scope: !10472)
!10492 = !DILocation(line: 98, column: 5, scope: !10472)
!10493 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !2021, file: !2021, line: 102, type: !10494, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !10496)
!10494 = !DISubroutineType(types: !10495)
!10495 = !{null, !61, !61}
!10496 = !{!10497, !10498}
!10497 = !DILocalVariable(name: "bank_no", arg: 1, scope: !10493, file: !2021, line: 102, type: !61)
!10498 = !DILocalVariable(name: "value", arg: 2, scope: !10493, file: !2021, line: 102, type: !61)
!10499 = !DILocation(line: 0, scope: !10493)
!10500 = !DILocation(line: 106, column: 40, scope: !10493)
!10501 = !DILocation(line: 106, column: 77, scope: !10493)
!10502 = !DILocation(line: 106, column: 102, scope: !10493)
!10503 = !DILocation(line: 106, column: 5, scope: !10493)
!10504 = !DILocation(line: 106, column: 19, scope: !10493)
!10505 = !DILocation(line: 106, column: 31, scope: !10493)
!10506 = !DILocation(line: 107, column: 77, scope: !10493)
!10507 = !DILocation(line: 107, column: 60, scope: !10493)
!10508 = !DILocation(line: 107, column: 31, scope: !10493)
!10509 = !DILocation(line: 109, column: 5, scope: !10493)
!10510 = !DILocation(line: 109, column: 27, scope: !10493)
!10511 = !DILocation(line: 109, column: 39, scope: !10493)
!10512 = !DILocation(line: 109, column: 65, scope: !10493)
!10513 = distinct !{!10513, !10509, !10514}
!10514 = !DILocation(line: 109, column: 70, scope: !10493)
!10515 = !DILocation(line: 111, column: 5, scope: !10493)
!10516 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !2021, file: !2021, line: 114, type: !291, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !293)
!10517 = !DILocation(line: 117, column: 36, scope: !10516)
!10518 = !DILocation(line: 117, column: 18, scope: !10516)
!10519 = !DILocation(line: 118, column: 37, scope: !10516)
!10520 = !DILocation(line: 118, column: 18, scope: !10516)
!10521 = !DILocation(line: 119, column: 37, scope: !10516)
!10522 = !DILocation(line: 119, column: 19, scope: !10516)
!10523 = !DILocation(line: 120, column: 37, scope: !10516)
!10524 = !DILocation(line: 120, column: 19, scope: !10516)
!10525 = !DILocation(line: 121, column: 37, scope: !10516)
!10526 = !DILocation(line: 121, column: 19, scope: !10516)
!10527 = !DILocation(line: 122, column: 37, scope: !10516)
!10528 = !DILocation(line: 122, column: 19, scope: !10516)
!10529 = !DILocation(line: 123, column: 37, scope: !10516)
!10530 = !DILocation(line: 123, column: 19, scope: !10516)
!10531 = !DILocation(line: 125, column: 37, scope: !10516)
!10532 = !DILocation(line: 125, column: 19, scope: !10516)
!10533 = !DILocation(line: 126, column: 37, scope: !10516)
!10534 = !DILocation(line: 126, column: 19, scope: !10516)
!10535 = !DILocation(line: 127, column: 37, scope: !10516)
!10536 = !DILocation(line: 127, column: 19, scope: !10516)
!10537 = !DILocation(line: 128, column: 37, scope: !10516)
!10538 = !DILocation(line: 128, column: 19, scope: !10516)
!10539 = !DILocation(line: 130, column: 36, scope: !10516)
!10540 = !DILocation(line: 130, column: 18, scope: !10516)
!10541 = !DILocation(line: 131, column: 36, scope: !10516)
!10542 = !DILocation(line: 131, column: 18, scope: !10516)
!10543 = !DILocation(line: 133, column: 5, scope: !10516)
!10544 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !2021, file: !2021, line: 140, type: !10545, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !293)
!10545 = !DISubroutineType(types: !10546)
!10546 = !{!7}
!10547 = !DILocation(line: 144, column: 5, scope: !10544)
!10548 = !DILocation(line: 144, column: 19, scope: !10544)
!10549 = !DILocation(line: 144, column: 28, scope: !10544)
!10550 = !DILocation(line: 147, column: 19, scope: !10544)
!10551 = !DILocation(line: 147, column: 28, scope: !10544)
!10552 = !DILocation(line: 150, column: 19, scope: !10544)
!10553 = !DILocation(line: 150, column: 28, scope: !10544)
!10554 = !DILocation(line: 152, column: 5, scope: !10544)
!10555 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !2021, file: !2021, line: 157, type: !7317, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !10556)
!10556 = !{!10557, !10558, !10559, !10560, !10561, !10562}
!10557 = !DILocalVariable(name: "mbist_src", scope: !10555, file: !2021, line: 159, type: !61)
!10558 = !DILocalVariable(name: "mbist_len", scope: !10555, file: !2021, line: 159, type: !61)
!10559 = !DILocalVariable(name: "mbist_data", scope: !10555, file: !2021, line: 159, type: !3526)
!10560 = !DILocalVariable(name: "i", scope: !10555, file: !2021, line: 160, type: !61)
!10561 = !DILocalVariable(name: "bist_data_inv", scope: !10555, file: !2021, line: 160, type: !61)
!10562 = !DILocalVariable(name: "bist_data_random", scope: !10555, file: !2021, line: 160, type: !61)
!10563 = !DILocation(line: 159, column: 36, scope: !10555)
!10564 = !DILocation(line: 0, scope: !10555)
!10565 = !DILocation(line: 165, column: 5, scope: !10555)
!10566 = !DILocation(line: 165, column: 19, scope: !10555)
!10567 = !DILocation(line: 165, column: 30, scope: !10555)
!10568 = !DILocation(line: 166, column: 5, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10555, file: !2021, line: 166, column: 5)
!10570 = !DILocation(line: 167, column: 9, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10572, file: !2021, line: 167, column: 9)
!10572 = distinct !DILexicalBlock(scope: !10573, file: !2021, line: 166, column: 66)
!10573 = distinct !DILexicalBlock(scope: !10569, file: !2021, line: 166, column: 5)
!10574 = !DILocation(line: 168, column: 13, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10576, file: !2021, line: 168, column: 13)
!10576 = distinct !DILexicalBlock(scope: !10577, file: !2021, line: 167, column: 34)
!10577 = distinct !DILexicalBlock(scope: !10571, file: !2021, line: 167, column: 9)
!10578 = !DILocation(line: 168, column: 57, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10575, file: !2021, line: 168, column: 13)
!10580 = distinct !{!10580, !10574, !10581}
!10581 = !DILocation(line: 183, column: 13, scope: !10575)
!10582 = !DILocation(line: 170, column: 42, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10579, file: !2021, line: 168, column: 83)
!10584 = !DILocation(line: 172, column: 42, scope: !10583)
!10585 = !DILocation(line: 174, column: 45, scope: !10583)
!10586 = !DILocation(line: 174, column: 59, scope: !10583)
!10587 = !DILocation(line: 174, column: 154, scope: !10583)
!10588 = !DILocation(line: 174, column: 87, scope: !10583)
!10589 = !DILocation(line: 174, column: 134, scope: !10583)
!10590 = !DILocation(line: 174, column: 42, scope: !10583)
!10591 = !DILocation(line: 175, column: 42, scope: !10583)
!10592 = !DILocation(line: 177, column: 17, scope: !10583)
!10593 = !DILocation(line: 177, column: 39, scope: !10583)
!10594 = !DILocation(line: 177, column: 50, scope: !10583)
!10595 = !DILocation(line: 177, column: 71, scope: !10583)
!10596 = distinct !{!10596, !10592, !10597}
!10597 = !DILocation(line: 177, column: 78, scope: !10583)
!10598 = !DILocation(line: 179, column: 36, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10583, file: !2021, line: 179, column: 21)
!10600 = !DILocation(line: 179, column: 47, scope: !10599)
!10601 = !DILocation(line: 179, column: 69, scope: !10599)
!10602 = !DILocation(line: 168, column: 79, scope: !10579)
!10603 = !DILocation(line: 179, column: 21, scope: !10583)
!10604 = !DILocation(line: 167, column: 30, scope: !10577)
!10605 = !DILocation(line: 167, column: 23, scope: !10577)
!10606 = distinct !{!10606, !10570, !10607}
!10607 = !DILocation(line: 184, column: 9, scope: !10571)
!10608 = !DILocation(line: 166, column: 62, scope: !10573)
!10609 = !DILocation(line: 166, column: 43, scope: !10573)
!10610 = distinct !{!10610, !10568, !10611}
!10611 = !DILocation(line: 185, column: 5, scope: !10569)
!10612 = !DILocation(line: 189, column: 1, scope: !10555)
!10613 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !2021, file: !2021, line: 190, type: !7317, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !293)
!10614 = !DILocation(line: 192, column: 9, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10613, file: !2021, line: 192, column: 9)
!10616 = !DILocation(line: 192, column: 26, scope: !10615)
!10617 = !DILocation(line: 0, scope: !10613)
!10618 = !DILocation(line: 197, column: 1, scope: !10613)
!10619 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !2021, file: !2021, line: 201, type: !291, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !10620)
!10620 = !{!10621, !10622}
!10621 = !DILocalVariable(name: "dqy_in_del", scope: !10619, file: !2021, line: 203, type: !974)
!10622 = !DILocalVariable(name: "dqs_in_del", scope: !10619, file: !2021, line: 204, type: !974)
!10623 = !DILocation(line: 0, scope: !10619)
!10624 = !DILocation(line: 206, column: 5, scope: !10619)
!10625 = !DILocation(line: 206, column: 19, scope: !10619)
!10626 = !DILocation(line: 206, column: 28, scope: !10619)
!10627 = !DILocation(line: 207, column: 19, scope: !10619)
!10628 = !DILocation(line: 207, column: 28, scope: !10619)
!10629 = !DILocation(line: 208, column: 19, scope: !10619)
!10630 = !DILocation(line: 208, column: 28, scope: !10619)
!10631 = !DILocation(line: 209, column: 19, scope: !10619)
!10632 = !DILocation(line: 209, column: 28, scope: !10619)
!10633 = !DILocation(line: 212, column: 23, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10635, file: !2021, line: 211, column: 78)
!10635 = distinct !DILexicalBlock(scope: !10636, file: !2021, line: 211, column: 5)
!10636 = distinct !DILexicalBlock(scope: !10619, file: !2021, line: 211, column: 5)
!10637 = !DILocation(line: 212, column: 32, scope: !10634)
!10638 = !DILocation(line: 213, column: 23, scope: !10634)
!10639 = !DILocation(line: 213, column: 32, scope: !10634)
!10640 = !DILocation(line: 215, column: 19, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10634, file: !2021, line: 215, column: 13)
!10642 = !DILocation(line: 215, column: 15, scope: !10641)
!10643 = !DILocation(line: 215, column: 13, scope: !10634)
!10644 = !DILocation(line: 211, column: 40, scope: !10635)
!10645 = !DILocation(line: 211, column: 5, scope: !10636)
!10646 = distinct !{!10646, !10645, !10647}
!10647 = !DILocation(line: 218, column: 5, scope: !10636)
!10648 = !DILocation(line: 211, column: 57, scope: !10635)
!10649 = !DILocation(line: 212, column: 9, scope: !10634)
!10650 = !DILocation(line: 212, column: 45, scope: !10634)
!10651 = !DILocation(line: 212, column: 83, scope: !10634)
!10652 = !DILocation(line: 212, column: 121, scope: !10634)
!10653 = !DILocation(line: 212, column: 70, scope: !10634)
!10654 = !DILocation(line: 212, column: 108, scope: !10634)
!10655 = !DILocation(line: 212, column: 146, scope: !10634)
!10656 = !DILocation(line: 222, column: 49, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10658, file: !2021, line: 221, column: 84)
!10658 = distinct !DILexicalBlock(scope: !10659, file: !2021, line: 221, column: 9)
!10659 = distinct !DILexicalBlock(scope: !10660, file: !2021, line: 221, column: 9)
!10660 = distinct !DILexicalBlock(scope: !10661, file: !2021, line: 220, column: 25)
!10661 = distinct !DILexicalBlock(scope: !10619, file: !2021, line: 220, column: 9)
!10662 = !DILocation(line: 222, column: 13, scope: !10657)
!10663 = !DILocation(line: 222, column: 27, scope: !10657)
!10664 = !DILocation(line: 222, column: 36, scope: !10657)
!10665 = !DILocation(line: 224, column: 23, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10657, file: !2021, line: 224, column: 17)
!10667 = !DILocation(line: 224, column: 19, scope: !10666)
!10668 = !DILocation(line: 224, column: 17, scope: !10657)
!10669 = distinct !{!10669, !10670, !10671}
!10670 = !DILocation(line: 221, column: 9, scope: !10659)
!10671 = !DILocation(line: 227, column: 9, scope: !10659)
!10672 = !DILocation(line: 230, column: 1, scope: !10619)
!10673 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !2021, file: !2021, line: 253, type: !291, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !293)
!10674 = !DILocation(line: 257, column: 26, scope: !10673)
!10675 = !DILocation(line: 259, column: 5, scope: !10673)
!10676 = !DILocation(line: 259, column: 19, scope: !10673)
!10677 = !DILocation(line: 259, column: 29, scope: !10673)
!10678 = !DILocation(line: 260, column: 5, scope: !10673)
!10679 = !DILocation(line: 260, column: 27, scope: !10673)
!10680 = !DILocation(line: 260, column: 93, scope: !10673)
!10681 = distinct !{!10681, !10678, !10682}
!10682 = !DILocation(line: 260, column: 98, scope: !10673)
!10683 = !DILocation(line: 261, column: 29, scope: !10673)
!10684 = !DILocation(line: 262, column: 5, scope: !10673)
!10685 = !DILocation(line: 262, column: 27, scope: !10673)
!10686 = !DILocation(line: 262, column: 93, scope: !10673)
!10687 = distinct !{!10687, !10684, !10688}
!10688 = !DILocation(line: 262, column: 98, scope: !10673)
!10689 = !DILocation(line: 264, column: 42, scope: !10673)
!10690 = !DILocation(line: 265, column: 48, scope: !10673)
!10691 = !DILocation(line: 267, column: 5, scope: !10673)
!10692 = !DILocation(line: 267, column: 27, scope: !10673)
!10693 = !DILocation(line: 267, column: 39, scope: !10673)
!10694 = !DILocation(line: 267, column: 65, scope: !10673)
!10695 = distinct !{!10695, !10691, !10696}
!10696 = !DILocation(line: 267, column: 70, scope: !10673)
!10697 = !DILocation(line: 269, column: 5, scope: !10673)
!10698 = !DILocation(line: 273, column: 8, scope: !10673)
!10699 = !DILocation(line: 275, column: 5, scope: !10673)
!10700 = !DILocation(line: 275, column: 27, scope: !10673)
!10701 = !DILocation(line: 275, column: 39, scope: !10673)
!10702 = !DILocation(line: 275, column: 65, scope: !10673)
!10703 = distinct !{!10703, !10699, !10704}
!10704 = !DILocation(line: 275, column: 70, scope: !10673)
!10705 = !DILocation(line: 278, column: 9, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10673, file: !2021, line: 278, column: 9)
!10707 = !DILocation(line: 278, column: 44, scope: !10706)
!10708 = !DILocation(line: 278, column: 9, scope: !10673)
!10709 = !DILocation(line: 279, column: 13, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10711, file: !2021, line: 279, column: 12)
!10711 = distinct !DILexicalBlock(scope: !10706, file: !2021, line: 278, column: 55)
!10712 = !DILocation(line: 279, column: 48, scope: !10710)
!10713 = !DILocation(line: 279, column: 56, scope: !10710)
!10714 = !DILocation(line: 0, scope: !10710)
!10715 = !DILocation(line: 288, column: 1, scope: !10673)
!10716 = distinct !DISubprogram(name: "custom_setEMI", scope: !2021, file: !2021, line: 294, type: !10717, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !293)
!10717 = !DISubroutineType(types: !10718)
!10718 = !{!1288}
!10719 = !DILocation(line: 298, column: 5, scope: !10716)
!10720 = !DILocation(line: 300, column: 5, scope: !10716)
!10721 = !DILocation(line: 302, column: 20, scope: !10716)
!10722 = !DILocation(line: 302, column: 18, scope: !10716)
!10723 = !DILocation(line: 303, column: 20, scope: !10716)
!10724 = !DILocation(line: 303, column: 18, scope: !10716)
!10725 = !DILocation(line: 304, column: 20, scope: !10716)
!10726 = !DILocation(line: 304, column: 18, scope: !10716)
!10727 = !DILocation(line: 307, column: 5, scope: !10716)
!10728 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !2021, file: !2021, line: 312, type: !10717, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !293)
!10729 = !DILocation(line: 319, column: 29, scope: !10728)
!10730 = !DILocation(line: 319, column: 5, scope: !10728)
!10731 = !DILocation(line: 319, column: 19, scope: !10728)
!10732 = !DILocation(line: 319, column: 27, scope: !10728)
!10733 = !DILocation(line: 320, column: 29, scope: !10728)
!10734 = !DILocation(line: 320, column: 19, scope: !10728)
!10735 = !DILocation(line: 320, column: 27, scope: !10728)
!10736 = !DILocation(line: 322, column: 30, scope: !10728)
!10737 = !DILocation(line: 322, column: 19, scope: !10728)
!10738 = !DILocation(line: 322, column: 28, scope: !10728)
!10739 = !DILocation(line: 324, column: 30, scope: !10728)
!10740 = !DILocation(line: 324, column: 19, scope: !10728)
!10741 = !DILocation(line: 324, column: 28, scope: !10728)
!10742 = !DILocation(line: 326, column: 31, scope: !10728)
!10743 = !DILocation(line: 326, column: 19, scope: !10728)
!10744 = !DILocation(line: 326, column: 29, scope: !10728)
!10745 = !DILocation(line: 327, column: 31, scope: !10728)
!10746 = !DILocation(line: 327, column: 19, scope: !10728)
!10747 = !DILocation(line: 327, column: 29, scope: !10728)
!10748 = !DILocation(line: 332, column: 30, scope: !10728)
!10749 = !DILocation(line: 332, column: 19, scope: !10728)
!10750 = !DILocation(line: 332, column: 28, scope: !10728)
!10751 = !DILocation(line: 333, column: 30, scope: !10728)
!10752 = !DILocation(line: 333, column: 19, scope: !10728)
!10753 = !DILocation(line: 333, column: 28, scope: !10728)
!10754 = !DILocation(line: 334, column: 30, scope: !10728)
!10755 = !DILocation(line: 334, column: 19, scope: !10728)
!10756 = !DILocation(line: 334, column: 28, scope: !10728)
!10757 = !DILocation(line: 336, column: 30, scope: !10728)
!10758 = !DILocation(line: 336, column: 19, scope: !10728)
!10759 = !DILocation(line: 336, column: 28, scope: !10728)
!10760 = !DILocation(line: 337, column: 30, scope: !10728)
!10761 = !DILocation(line: 337, column: 19, scope: !10728)
!10762 = !DILocation(line: 337, column: 28, scope: !10728)
!10763 = !DILocation(line: 338, column: 30, scope: !10728)
!10764 = !DILocation(line: 338, column: 19, scope: !10728)
!10765 = !DILocation(line: 338, column: 28, scope: !10728)
!10766 = !DILocation(line: 339, column: 30, scope: !10728)
!10767 = !DILocation(line: 339, column: 19, scope: !10728)
!10768 = !DILocation(line: 339, column: 28, scope: !10728)
!10769 = !DILocation(line: 341, column: 5, scope: !10728)
!10770 = !DILocation(line: 345, column: 5, scope: !10728)
!10771 = !DILocation(line: 345, column: 19, scope: !10728)
!10772 = !DILocation(line: 345, column: 28, scope: !10728)
!10773 = !DILocation(line: 346, column: 5, scope: !10728)
!10774 = !DILocation(line: 346, column: 28, scope: !10728)
!10775 = !DILocation(line: 346, column: 82, scope: !10728)
!10776 = distinct !{!10776, !10773, !10777}
!10777 = !DILocation(line: 346, column: 87, scope: !10728)
!10778 = !DILocation(line: 347, column: 28, scope: !10728)
!10779 = !DILocation(line: 348, column: 5, scope: !10728)
!10780 = !DILocation(line: 348, column: 28, scope: !10728)
!10781 = !DILocation(line: 348, column: 82, scope: !10728)
!10782 = distinct !{!10782, !10779, !10783}
!10783 = !DILocation(line: 348, column: 87, scope: !10728)
!10784 = !DILocation(line: 349, column: 28, scope: !10728)
!10785 = !DILocation(line: 351, column: 5, scope: !10728)
!10786 = !DILocation(line: 353, column: 5, scope: !10728)
!10787 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !2021, file: !2021, line: 358, type: !291, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !293)
!10788 = !DILocation(line: 361, column: 36, scope: !10787)
!10789 = !DILocation(line: 361, column: 50, scope: !10787)
!10790 = !DILocation(line: 361, column: 34, scope: !10787)
!10791 = !DILocation(line: 362, column: 50, scope: !10787)
!10792 = !DILocation(line: 362, column: 34, scope: !10787)
!10793 = !DILocation(line: 363, column: 50, scope: !10787)
!10794 = !DILocation(line: 363, column: 34, scope: !10787)
!10795 = !DILocation(line: 364, column: 50, scope: !10787)
!10796 = !DILocation(line: 364, column: 34, scope: !10787)
!10797 = !DILocation(line: 365, column: 50, scope: !10787)
!10798 = !DILocation(line: 365, column: 34, scope: !10787)
!10799 = !DILocation(line: 366, column: 50, scope: !10787)
!10800 = !DILocation(line: 366, column: 34, scope: !10787)
!10801 = !DILocation(line: 367, column: 50, scope: !10787)
!10802 = !DILocation(line: 367, column: 34, scope: !10787)
!10803 = !DILocation(line: 368, column: 50, scope: !10787)
!10804 = !DILocation(line: 368, column: 34, scope: !10787)
!10805 = !DILocation(line: 369, column: 50, scope: !10787)
!10806 = !DILocation(line: 369, column: 34, scope: !10787)
!10807 = !DILocation(line: 370, column: 50, scope: !10787)
!10808 = !DILocation(line: 370, column: 34, scope: !10787)
!10809 = !DILocation(line: 371, column: 50, scope: !10787)
!10810 = !DILocation(line: 371, column: 34, scope: !10787)
!10811 = !DILocation(line: 372, column: 50, scope: !10787)
!10812 = !DILocation(line: 372, column: 34, scope: !10787)
!10813 = !DILocation(line: 373, column: 51, scope: !10787)
!10814 = !DILocation(line: 373, column: 35, scope: !10787)
!10815 = !DILocation(line: 374, column: 51, scope: !10787)
!10816 = !DILocation(line: 374, column: 35, scope: !10787)
!10817 = !DILocation(line: 375, column: 50, scope: !10787)
!10818 = !DILocation(line: 375, column: 34, scope: !10787)
!10819 = !DILocation(line: 376, column: 50, scope: !10787)
!10820 = !DILocation(line: 376, column: 34, scope: !10787)
!10821 = !DILocation(line: 377, column: 50, scope: !10787)
!10822 = !DILocation(line: 377, column: 34, scope: !10787)
!10823 = !DILocation(line: 378, column: 50, scope: !10787)
!10824 = !DILocation(line: 378, column: 34, scope: !10787)
!10825 = !DILocation(line: 379, column: 50, scope: !10787)
!10826 = !DILocation(line: 379, column: 34, scope: !10787)
!10827 = !DILocation(line: 380, column: 50, scope: !10787)
!10828 = !DILocation(line: 380, column: 34, scope: !10787)
!10829 = !DILocation(line: 382, column: 1, scope: !10787)
!10830 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !2021, file: !2021, line: 384, type: !291, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !293)
!10831 = !DILocation(line: 387, column: 5, scope: !10830)
!10832 = !DILocation(line: 387, column: 27, scope: !10830)
!10833 = !DILocation(line: 387, column: 36, scope: !10830)
!10834 = !DILocation(line: 387, column: 76, scope: !10830)
!10835 = distinct !{!10835, !10831, !10836}
!10836 = !DILocation(line: 387, column: 84, scope: !10830)
!10837 = !DILocation(line: 388, column: 50, scope: !10830)
!10838 = !DILocation(line: 388, column: 19, scope: !10830)
!10839 = !DILocation(line: 388, column: 28, scope: !10830)
!10840 = !DILocation(line: 389, column: 50, scope: !10830)
!10841 = !DILocation(line: 389, column: 19, scope: !10830)
!10842 = !DILocation(line: 389, column: 28, scope: !10830)
!10843 = !DILocation(line: 390, column: 50, scope: !10830)
!10844 = !DILocation(line: 390, column: 19, scope: !10830)
!10845 = !DILocation(line: 390, column: 28, scope: !10830)
!10846 = !DILocation(line: 391, column: 50, scope: !10830)
!10847 = !DILocation(line: 391, column: 19, scope: !10830)
!10848 = !DILocation(line: 391, column: 28, scope: !10830)
!10849 = !DILocation(line: 392, column: 50, scope: !10830)
!10850 = !DILocation(line: 392, column: 19, scope: !10830)
!10851 = !DILocation(line: 392, column: 28, scope: !10830)
!10852 = !DILocation(line: 393, column: 50, scope: !10830)
!10853 = !DILocation(line: 393, column: 19, scope: !10830)
!10854 = !DILocation(line: 393, column: 28, scope: !10830)
!10855 = !DILocation(line: 394, column: 51, scope: !10830)
!10856 = !DILocation(line: 394, column: 19, scope: !10830)
!10857 = !DILocation(line: 394, column: 29, scope: !10830)
!10858 = !DILocation(line: 395, column: 51, scope: !10830)
!10859 = !DILocation(line: 395, column: 19, scope: !10830)
!10860 = !DILocation(line: 395, column: 29, scope: !10830)
!10861 = !DILocation(line: 396, column: 50, scope: !10830)
!10862 = !DILocation(line: 396, column: 19, scope: !10830)
!10863 = !DILocation(line: 396, column: 28, scope: !10830)
!10864 = !DILocation(line: 397, column: 50, scope: !10830)
!10865 = !DILocation(line: 397, column: 19, scope: !10830)
!10866 = !DILocation(line: 397, column: 28, scope: !10830)
!10867 = !DILocation(line: 398, column: 50, scope: !10830)
!10868 = !DILocation(line: 398, column: 19, scope: !10830)
!10869 = !DILocation(line: 398, column: 28, scope: !10830)
!10870 = !DILocation(line: 399, column: 50, scope: !10830)
!10871 = !DILocation(line: 399, column: 19, scope: !10830)
!10872 = !DILocation(line: 399, column: 28, scope: !10830)
!10873 = !DILocation(line: 400, column: 50, scope: !10830)
!10874 = !DILocation(line: 400, column: 19, scope: !10830)
!10875 = !DILocation(line: 400, column: 28, scope: !10830)
!10876 = !DILocation(line: 401, column: 50, scope: !10830)
!10877 = !DILocation(line: 401, column: 19, scope: !10830)
!10878 = !DILocation(line: 401, column: 28, scope: !10830)
!10879 = !DILocation(line: 402, column: 50, scope: !10830)
!10880 = !DILocation(line: 402, column: 19, scope: !10830)
!10881 = !DILocation(line: 402, column: 28, scope: !10830)
!10882 = !DILocation(line: 403, column: 50, scope: !10830)
!10883 = !DILocation(line: 403, column: 19, scope: !10830)
!10884 = !DILocation(line: 403, column: 28, scope: !10830)
!10885 = !DILocation(line: 404, column: 50, scope: !10830)
!10886 = !DILocation(line: 404, column: 19, scope: !10830)
!10887 = !DILocation(line: 404, column: 28, scope: !10830)
!10888 = !DILocation(line: 405, column: 50, scope: !10830)
!10889 = !DILocation(line: 405, column: 19, scope: !10830)
!10890 = !DILocation(line: 405, column: 28, scope: !10830)
!10891 = !DILocation(line: 406, column: 50, scope: !10830)
!10892 = !DILocation(line: 406, column: 19, scope: !10830)
!10893 = !DILocation(line: 406, column: 28, scope: !10830)
!10894 = !DILocation(line: 408, column: 1, scope: !10830)
!10895 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !2021, file: !2021, line: 410, type: !291, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !293)
!10896 = !DILocation(line: 413, column: 29, scope: !10895)
!10897 = !DILocation(line: 413, column: 43, scope: !10895)
!10898 = !DILocation(line: 413, column: 51, scope: !10895)
!10899 = !DILocation(line: 413, column: 27, scope: !10895)
!10900 = !DILocation(line: 416, column: 19, scope: !10895)
!10901 = !DILocation(line: 416, column: 29, scope: !10895)
!10902 = !DILocation(line: 417, column: 5, scope: !10895)
!10903 = !DILocation(line: 417, column: 27, scope: !10895)
!10904 = !DILocation(line: 417, column: 93, scope: !10895)
!10905 = distinct !{!10905, !10902, !10906}
!10906 = !DILocation(line: 417, column: 98, scope: !10895)
!10907 = !DILocation(line: 418, column: 29, scope: !10895)
!10908 = !DILocation(line: 419, column: 5, scope: !10895)
!10909 = !DILocation(line: 419, column: 27, scope: !10895)
!10910 = !DILocation(line: 419, column: 93, scope: !10895)
!10911 = distinct !{!10911, !10908, !10912}
!10912 = !DILocation(line: 419, column: 98, scope: !10895)
!10913 = !DILocation(line: 421, column: 5, scope: !10895)
!10914 = !DILocation(line: 422, column: 5, scope: !10895)
!10915 = !DILocation(line: 422, column: 19, scope: !10895)
!10916 = !DILocation(line: 422, column: 28, scope: !10895)
!10917 = !DILocation(line: 423, column: 5, scope: !10895)
!10918 = !DILocation(line: 423, column: 28, scope: !10895)
!10919 = !DILocation(line: 423, column: 82, scope: !10895)
!10920 = distinct !{!10920, !10917, !10921}
!10921 = !DILocation(line: 423, column: 87, scope: !10895)
!10922 = !DILocation(line: 424, column: 28, scope: !10895)
!10923 = !DILocation(line: 425, column: 5, scope: !10895)
!10924 = !DILocation(line: 425, column: 28, scope: !10895)
!10925 = !DILocation(line: 425, column: 82, scope: !10895)
!10926 = distinct !{!10926, !10923, !10927}
!10927 = !DILocation(line: 425, column: 87, scope: !10895)
!10928 = !DILocation(line: 426, column: 28, scope: !10895)
!10929 = !DILocation(line: 428, column: 50, scope: !10895)
!10930 = !DILocation(line: 428, column: 19, scope: !10895)
!10931 = !DILocation(line: 428, column: 28, scope: !10895)
!10932 = !DILocation(line: 432, column: 1, scope: !10895)
!10933 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !2021, file: !2021, line: 434, type: !291, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !293)
!10934 = !DILocation(line: 437, column: 5, scope: !10933)
!10935 = !DILocation(line: 440, column: 5, scope: !10933)
!10936 = !DILocation(line: 440, column: 27, scope: !10933)
!10937 = !DILocation(line: 440, column: 36, scope: !10933)
!10938 = !DILocation(line: 440, column: 76, scope: !10933)
!10939 = distinct !{!10939, !10935, !10940}
!10940 = !DILocation(line: 440, column: 84, scope: !10933)
!10941 = !DILocation(line: 441, column: 45, scope: !10933)
!10942 = !DILocation(line: 441, column: 54, scope: !10933)
!10943 = !DILocation(line: 441, column: 28, scope: !10933)
!10944 = !DILocation(line: 442, column: 19, scope: !10933)
!10945 = !DILocation(line: 442, column: 31, scope: !10933)
!10946 = !DILocation(line: 443, column: 5, scope: !10933)
!10947 = !DILocation(line: 443, column: 27, scope: !10933)
!10948 = !DILocation(line: 443, column: 39, scope: !10933)
!10949 = !DILocation(line: 443, column: 65, scope: !10933)
!10950 = distinct !{!10950, !10946, !10951}
!10951 = !DILocation(line: 443, column: 70, scope: !10933)
!10952 = !DILocation(line: 444, column: 19, scope: !10933)
!10953 = !DILocation(line: 444, column: 28, scope: !10933)
!10954 = !DILocation(line: 445, column: 5, scope: !10933)
!10955 = !DILocation(line: 445, column: 27, scope: !10933)
!10956 = !DILocation(line: 445, column: 91, scope: !10933)
!10957 = distinct !{!10957, !10954, !10958}
!10958 = !DILocation(line: 445, column: 96, scope: !10933)
!10959 = !DILocation(line: 447, column: 43, scope: !10933)
!10960 = !DILocation(line: 447, column: 51, scope: !10933)
!10961 = !DILocation(line: 447, column: 27, scope: !10933)
!10962 = !DILocation(line: 450, column: 1, scope: !10933)
!10963 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !2021, file: !2021, line: 452, type: !10964, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !10967)
!10964 = !DISubroutineType(types: !10965)
!10965 = !{!974, !10966}
!10966 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !2024, line: 43, baseType: !2023)
!10967 = !{!10968, !10969}
!10968 = !DILocalVariable(name: "clock", arg: 1, scope: !10963, file: !2021, line: 452, type: !10966)
!10969 = !DILocalVariable(name: "delay", scope: !10963, file: !2021, line: 457, type: !60)
!10970 = !DILocation(line: 0, scope: !10963)
!10971 = !DILocation(line: 457, column: 5, scope: !10963)
!10972 = !DILocation(line: 457, column: 23, scope: !10963)
!10973 = !DILocation(line: 458, column: 9, scope: !10963)
!10974 = !DILocation(line: 465, column: 9, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10976, file: !2021, line: 458, column: 39)
!10976 = distinct !DILexicalBlock(scope: !10963, file: !2021, line: 458, column: 9)
!10977 = !DILocation(line: 465, column: 23, scope: !10975)
!10978 = !DILocation(line: 465, column: 32, scope: !10975)
!10979 = !DILocation(line: 466, column: 32, scope: !10975)
!10980 = !DILocation(line: 467, column: 9, scope: !10975)
!10981 = !DILocation(line: 467, column: 32, scope: !10975)
!10982 = !DILocation(line: 467, column: 86, scope: !10975)
!10983 = distinct !{!10983, !10980, !10984}
!10984 = !DILocation(line: 467, column: 91, scope: !10975)
!10985 = !DILocation(line: 468, column: 32, scope: !10975)
!10986 = !DILocation(line: 469, column: 9, scope: !10975)
!10987 = !DILocation(line: 469, column: 32, scope: !10975)
!10988 = !DILocation(line: 469, column: 86, scope: !10975)
!10989 = distinct !{!10989, !10986, !10990}
!10990 = !DILocation(line: 469, column: 91, scope: !10975)
!10991 = !DILocation(line: 470, column: 32, scope: !10975)
!10992 = !DILocation(line: 472, column: 20, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10975, file: !2021, line: 472, column: 9)
!10994 = !DILocation(line: 472, column: 25, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10993, file: !2021, line: 472, column: 9)
!10996 = !DILocation(line: 472, column: 31, scope: !10995)
!10997 = !DILocation(line: 472, column: 9, scope: !10993)
!10998 = !DILocation(line: 472, column: 44, scope: !10995)
!10999 = distinct !{!10999, !10997, !11000}
!11000 = !DILocation(line: 472, column: 47, scope: !10993)
!11001 = !DILocation(line: 478, column: 9, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !11003, file: !2021, line: 477, column: 12)
!11003 = distinct !DILexicalBlock(scope: !10976, file: !2021, line: 475, column: 16)
!11004 = !DILocation(line: 483, column: 1, scope: !10963)
!11005 = distinct !DISubprogram(name: "emi_mask_master", scope: !2021, file: !2021, line: 487, type: !291, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !293)
!11006 = !DILocation(line: 490, column: 30, scope: !11005)
!11007 = !DILocation(line: 490, column: 44, scope: !11005)
!11008 = !DILocation(line: 490, column: 53, scope: !11005)
!11009 = !DILocation(line: 490, column: 28, scope: !11005)
!11010 = !DILocation(line: 492, column: 1, scope: !11005)
!11011 = distinct !DISubprogram(name: "emi_unmask_master", scope: !2021, file: !2021, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !293)
!11012 = !DILocation(line: 497, column: 30, scope: !11011)
!11013 = !DILocation(line: 497, column: 44, scope: !11011)
!11014 = !DILocation(line: 497, column: 53, scope: !11011)
!11015 = !DILocation(line: 497, column: 28, scope: !11011)
!11016 = !DILocation(line: 500, column: 1, scope: !11011)
!11017 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !2187, file: !2187, line: 56, type: !7798, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !293)
!11018 = !DILocation(line: 61, column: 5, scope: !11017)
!11019 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !2187, file: !2187, line: 65, type: !7798, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !293)
!11020 = !DILocation(line: 70, column: 5, scope: !11019)
!11021 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !2187, file: !2187, line: 74, type: !291, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !293)
!11022 = !DILocation(line: 79, column: 9, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11024, file: !2187, line: 78, column: 12)
!11024 = distinct !DILexicalBlock(scope: !11021, file: !2187, line: 76, column: 9)
!11025 = !DILocation(line: 81, column: 1, scope: !11021)
!11026 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !2187, file: !2187, line: 83, type: !291, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !293)
!11027 = !DILocation(line: 88, column: 9, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11029, file: !2187, line: 87, column: 12)
!11029 = distinct !DILexicalBlock(scope: !11026, file: !2187, line: 85, column: 9)
!11030 = !DILocation(line: 90, column: 1, scope: !11026)
!11031 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !2187, file: !2187, line: 92, type: !291, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !293)
!11032 = !DILocation(line: 97, column: 9, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11034, file: !2187, line: 96, column: 12)
!11034 = distinct !DILexicalBlock(scope: !11031, file: !2187, line: 94, column: 9)
!11035 = !DILocation(line: 99, column: 1, scope: !11031)
!11036 = distinct !DISubprogram(name: "peri_clk_26m", scope: !2187, file: !2187, line: 101, type: !291, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2186, retainedNodes: !293)
!11037 = !DILocation(line: 106, column: 9, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11039, file: !2187, line: 105, column: 12)
!11039 = distinct !DILexicalBlock(scope: !11036, file: !2187, line: 103, column: 9)
!11040 = !DILocation(line: 108, column: 1, scope: !11036)
!11041 = distinct !DISubprogram(name: "__io_putchar", scope: !2605, file: !2605, line: 52, type: !11042, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !11044)
!11042 = !DISubroutineType(types: !11043)
!11043 = !{!7, !7}
!11044 = !{!11045}
!11045 = !DILocalVariable(name: "ch", arg: 1, scope: !11041, file: !2605, line: 52, type: !7)
!11046 = !DILocation(line: 0, scope: !11041)
!11047 = !DILocation(line: 59, column: 35, scope: !11041)
!11048 = !DILocation(line: 59, column: 5, scope: !11041)
!11049 = !DILocation(line: 60, column: 5, scope: !11041)
!11050 = distinct !DISubprogram(name: "main", scope: !2605, file: !2605, line: 135, type: !10545, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !293)
!11051 = !DILocation(line: 138, column: 5, scope: !11050)
!11052 = !DILocation(line: 140, column: 5, scope: !11050)
!11053 = !DILocation(line: 143, column: 5, scope: !11050)
!11054 = !DILocation(line: 319, column: 3, scope: !11055, inlinedAt: !11056)
!11055 = distinct !DISubprogram(name: "__enable_irq", scope: !6409, file: !6409, line: 317, type: !291, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !293)
!11056 = distinct !DILocation(line: 146, column: 5, scope: !11050)
!11057 = !{i64 658629}
!11058 = !DILocation(line: 496, column: 3, scope: !11059, inlinedAt: !11060)
!11059 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !6409, file: !6409, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !293)
!11060 = distinct !DILocation(line: 147, column: 5, scope: !11050)
!11061 = !{i64 662904}
!11062 = !DILocation(line: 150, column: 5, scope: !11050)
!11063 = !DILocation(line: 153, column: 5, scope: !11050)
!11064 = !DILocation(line: 154, column: 5, scope: !11050)
!11065 = !DILocation(line: 156, column: 5, scope: !11050)
!11066 = !DILocation(line: 157, column: 5, scope: !11050)
!11067 = distinct !{!11067, !11066, !11068}
!11068 = !DILocation(line: 157, column: 14, scope: !11050)
!11069 = distinct !DISubprogram(name: "SystemClock_Config", scope: !2605, file: !2605, line: 90, type: !291, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !293)
!11070 = !DILocation(line: 92, column: 5, scope: !11069)
!11071 = !DILocation(line: 93, column: 1, scope: !11069)
!11072 = distinct !DISubprogram(name: "prvSetupHardware", scope: !2605, file: !2605, line: 100, type: !291, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !293)
!11073 = !DILocation(line: 104, column: 5, scope: !11072)
!11074 = !DILocation(line: 105, column: 5, scope: !11072)
!11075 = !DILocation(line: 106, column: 5, scope: !11072)
!11076 = !DILocation(line: 108, column: 1, scope: !11072)
!11077 = distinct !DISubprogram(name: "trng_generate_random_data", scope: !2605, file: !2605, line: 115, type: !291, scopeLine: 116, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !11078)
!11078 = !{!11079, !11080}
!11079 = !DILocalVariable(name: "count", scope: !11077, file: !2605, line: 119, type: !61)
!11080 = !DILocalVariable(name: "random_number", scope: !11077, file: !2605, line: 120, type: !61)
!11081 = !DILocation(line: 0, scope: !11077)
!11082 = !DILocation(line: 120, column: 5, scope: !11077)
!11083 = !DILocation(line: 120, column: 14, scope: !11077)
!11084 = !DILocation(line: 121, column: 5, scope: !11077)
!11085 = !DILocation(line: 123, column: 5, scope: !11077)
!11086 = !DILocation(line: 124, column: 5, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11077, file: !2605, line: 124, column: 5)
!11088 = !DILocation(line: 125, column: 9, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11090, file: !2605, line: 124, column: 42)
!11090 = distinct !DILexicalBlock(scope: !11087, file: !2605, line: 124, column: 5)
!11091 = !DILocation(line: 126, column: 80, scope: !11089)
!11092 = !DILocation(line: 126, column: 9, scope: !11089)
!11093 = !DILocation(line: 124, column: 38, scope: !11090)
!11094 = !DILocation(line: 124, column: 27, scope: !11090)
!11095 = distinct !{!11095, !11086, !11096}
!11096 = !DILocation(line: 127, column: 5, scope: !11087)
!11097 = !DILocation(line: 128, column: 5, scope: !11077)
!11098 = !DILocation(line: 129, column: 5, scope: !11077)
!11099 = !DILocation(line: 132, column: 5, scope: !11077)
!11100 = !DILocation(line: 133, column: 1, scope: !11077)
!11101 = distinct !DISubprogram(name: "plain_log_uart_init", scope: !2605, file: !2605, line: 68, type: !291, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !11102)
!11102 = !{!11103}
!11103 = !DILocalVariable(name: "uart_config", scope: !11101, file: !2605, line: 70, type: !11104)
!11104 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !689, line: 378, baseType: !11105)
!11105 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !689, line: 373, size: 128, elements: !11106)
!11106 = !{!11107, !11108, !11109, !11110}
!11107 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !11105, file: !689, line: 374, baseType: !4805, size: 32)
!11108 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !11105, file: !689, line: 375, baseType: !4855, size: 32, offset: 32)
!11109 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !11105, file: !689, line: 376, baseType: !4857, size: 32, offset: 64)
!11110 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !11105, file: !689, line: 377, baseType: !4859, size: 32, offset: 96)
!11111 = !DILocation(line: 70, column: 5, scope: !11101)
!11112 = !DILocation(line: 70, column: 23, scope: !11101)
!11113 = !DILocation(line: 72, column: 5, scope: !11101)
!11114 = !DILocation(line: 73, column: 5, scope: !11101)
!11115 = !DILocation(line: 74, column: 5, scope: !11101)
!11116 = !DILocation(line: 75, column: 5, scope: !11101)
!11117 = !DILocation(line: 78, column: 17, scope: !11101)
!11118 = !DILocation(line: 78, column: 26, scope: !11101)
!11119 = !DILocation(line: 79, column: 17, scope: !11101)
!11120 = !DILocation(line: 79, column: 29, scope: !11101)
!11121 = !DILocation(line: 80, column: 17, scope: !11101)
!11122 = !DILocation(line: 80, column: 26, scope: !11101)
!11123 = !DILocation(line: 81, column: 17, scope: !11101)
!11124 = !DILocation(line: 81, column: 24, scope: !11101)
!11125 = !DILocation(line: 82, column: 5, scope: !11101)
!11126 = !DILocation(line: 83, column: 1, scope: !11101)
!11127 = distinct !DISubprogram(name: "_close", scope: !2199, file: !2199, line: 5, type: !11042, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2391, retainedNodes: !11128)
!11128 = !{!11129}
!11129 = !DILocalVariable(name: "file", arg: 1, scope: !11127, file: !2199, line: 5, type: !7)
!11130 = !DILocation(line: 0, scope: !11127)
!11131 = !DILocation(line: 7, column: 5, scope: !11127)
!11132 = distinct !DISubprogram(name: "_fstat", scope: !2199, file: !2199, line: 10, type: !11133, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2391, retainedNodes: !11181)
!11133 = !DISubroutineType(types: !11134)
!11134 = !{!7, !7, !11135}
!11135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11136, size: 32)
!11136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !11137, line: 27, size: 704, elements: !11138)
!11137 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!11138 = !{!11139, !11142, !11145, !11148, !11151, !11154, !11157, !11158, !11161, !11171, !11172, !11173, !11176, !11179}
!11139 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !11136, file: !11137, line: 29, baseType: !11140, size: 16)
!11140 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !2203, line: 161, baseType: !11141)
!11141 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2243, line: 56, baseType: !1474)
!11142 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !11136, file: !11137, line: 30, baseType: !11143, size: 16, offset: 16)
!11143 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !2203, line: 139, baseType: !11144)
!11144 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2243, line: 75, baseType: !1070)
!11145 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !11136, file: !11137, line: 31, baseType: !11146, size: 32, offset: 32)
!11146 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !2203, line: 189, baseType: !11147)
!11147 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2243, line: 90, baseType: !63)
!11148 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !11136, file: !11137, line: 32, baseType: !11149, size: 16, offset: 64)
!11149 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !2203, line: 194, baseType: !11150)
!11150 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2243, line: 209, baseType: !1070)
!11151 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !11136, file: !11137, line: 33, baseType: !11152, size: 16, offset: 80)
!11152 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !2203, line: 165, baseType: !11153)
!11153 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2243, line: 60, baseType: !1070)
!11154 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !11136, file: !11137, line: 34, baseType: !11155, size: 16, offset: 96)
!11155 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !2203, line: 169, baseType: !11156)
!11156 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2243, line: 63, baseType: !1070)
!11157 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !11136, file: !11137, line: 35, baseType: !11140, size: 16, offset: 112)
!11158 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !11136, file: !11137, line: 36, baseType: !11159, size: 32, offset: 128)
!11159 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2203, line: 157, baseType: !11160)
!11160 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2243, line: 102, baseType: !2259)
!11161 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !11136, file: !11137, line: 42, baseType: !11162, size: 128, offset: 192)
!11162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !11163, line: 47, size: 128, elements: !11164)
!11163 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!11164 = !{!11165, !11170}
!11165 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !11162, file: !11163, line: 48, baseType: !11166, size: 64)
!11166 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !11167, line: 42, baseType: !11168)
!11167 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!11168 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !64, line: 200, baseType: !11169)
!11169 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!11170 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !11162, file: !11163, line: 49, baseType: !2244, size: 32, offset: 64)
!11171 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !11136, file: !11137, line: 43, baseType: !11162, size: 128, offset: 320)
!11172 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !11136, file: !11137, line: 44, baseType: !11162, size: 128, offset: 448)
!11173 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !11136, file: !11137, line: 45, baseType: !11174, size: 32, offset: 576)
!11174 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !2203, line: 102, baseType: !11175)
!11175 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2243, line: 34, baseType: !2244)
!11176 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !11136, file: !11137, line: 46, baseType: !11177, size: 32, offset: 608)
!11177 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !2203, line: 97, baseType: !11178)
!11178 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2243, line: 30, baseType: !2244)
!11179 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !11136, file: !11137, line: 48, baseType: !11180, size: 64, offset: 640)
!11180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2244, size: 64, elements: !500)
!11181 = !{!11182, !11183}
!11182 = !DILocalVariable(name: "file", arg: 1, scope: !11132, file: !2199, line: 10, type: !7)
!11183 = !DILocalVariable(name: "st", arg: 2, scope: !11132, file: !2199, line: 10, type: !11135)
!11184 = !DILocation(line: 0, scope: !11132)
!11185 = !DILocation(line: 12, column: 5, scope: !11132)
!11186 = distinct !DISubprogram(name: "_isatty", scope: !2199, file: !2199, line: 15, type: !11042, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2391, retainedNodes: !11187)
!11187 = !{!11188}
!11188 = !DILocalVariable(name: "file", arg: 1, scope: !11186, file: !2199, line: 15, type: !7)
!11189 = !DILocation(line: 0, scope: !11186)
!11190 = !DILocation(line: 17, column: 5, scope: !11186)
!11191 = distinct !DISubprogram(name: "_lseek", scope: !2199, file: !2199, line: 20, type: !11192, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2391, retainedNodes: !11194)
!11192 = !DISubroutineType(types: !11193)
!11193 = !{!7, !7, !7, !7}
!11194 = !{!11195, !11196, !11197}
!11195 = !DILocalVariable(name: "file", arg: 1, scope: !11191, file: !2199, line: 20, type: !7)
!11196 = !DILocalVariable(name: "ptr", arg: 2, scope: !11191, file: !2199, line: 20, type: !7)
!11197 = !DILocalVariable(name: "dir", arg: 3, scope: !11191, file: !2199, line: 20, type: !7)
!11198 = !DILocation(line: 0, scope: !11191)
!11199 = !DILocation(line: 22, column: 5, scope: !11191)
!11200 = distinct !DISubprogram(name: "_open", scope: !2199, file: !2199, line: 25, type: !11201, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2391, retainedNodes: !11203)
!11201 = !DISubroutineType(types: !11202)
!11202 = !{!7, !2237, !7, !7}
!11203 = !{!11204, !11205, !11206}
!11204 = !DILocalVariable(name: "name", arg: 1, scope: !11200, file: !2199, line: 25, type: !2237)
!11205 = !DILocalVariable(name: "flags", arg: 2, scope: !11200, file: !2199, line: 25, type: !7)
!11206 = !DILocalVariable(name: "mode", arg: 3, scope: !11200, file: !2199, line: 25, type: !7)
!11207 = !DILocation(line: 0, scope: !11200)
!11208 = !DILocation(line: 27, column: 5, scope: !11200)
!11209 = distinct !DISubprogram(name: "_read", scope: !2199, file: !2199, line: 30, type: !11210, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2391, retainedNodes: !11212)
!11210 = !DISubroutineType(types: !11211)
!11211 = !{!7, !7, !2204, !7}
!11212 = !{!11213, !11214, !11215}
!11213 = !DILocalVariable(name: "file", arg: 1, scope: !11209, file: !2199, line: 30, type: !7)
!11214 = !DILocalVariable(name: "ptr", arg: 2, scope: !11209, file: !2199, line: 30, type: !2204)
!11215 = !DILocalVariable(name: "len", arg: 3, scope: !11209, file: !2199, line: 30, type: !7)
!11216 = !DILocation(line: 0, scope: !11209)
!11217 = !DILocation(line: 32, column: 5, scope: !11209)
!11218 = distinct !DISubprogram(name: "_getpid", scope: !2199, file: !2199, line: 48, type: !10545, scopeLine: 49, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2391, retainedNodes: !293)
!11219 = !DILocation(line: 50, column: 5, scope: !11218)
!11220 = distinct !DISubprogram(name: "_kill", scope: !2199, file: !2199, line: 56, type: !11221, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2391, retainedNodes: !11223)
!11221 = !DISubroutineType(types: !11222)
!11222 = !{!7, !7, !7}
!11223 = !{!11224, !11225}
!11224 = !DILocalVariable(name: "pid", arg: 1, scope: !11220, file: !2199, line: 56, type: !7)
!11225 = !DILocalVariable(name: "sig", arg: 2, scope: !11220, file: !2199, line: 56, type: !7)
!11226 = !DILocation(line: 0, scope: !11220)
!11227 = !DILocation(line: 58, column: 5, scope: !11220)
!11228 = distinct !DISubprogram(name: "_exit", scope: !2199, file: !2199, line: 61, type: !11042, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2391, retainedNodes: !11229)
!11229 = !{!11230}
!11230 = !DILocalVariable(name: "val", arg: 1, scope: !11228, file: !2199, line: 61, type: !7)
!11231 = !DILocation(line: 0, scope: !11228)
!11232 = !DILocation(line: 63, column: 5, scope: !11228)
!11233 = !DILocation(line: 0, scope: !2198)
!11234 = !DILocation(line: 73, column: 5, scope: !2198)
!11235 = !{i64 1127}
!11236 = !DILocation(line: 75, column: 14, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !2198, file: !2199, line: 75, column: 9)
!11238 = !DILocation(line: 75, column: 11, scope: !11237)
!11239 = !DILocation(line: 75, column: 9, scope: !2198)
!11240 = !DILocation(line: 81, column: 32, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !2198, file: !2199, line: 81, column: 9)
!11242 = !DILocation(line: 81, column: 15, scope: !11241)
!11243 = !DILocation(line: 92, column: 1, scope: !2198)
!11244 = !DILocation(line: 81, column: 9, scope: !2198)
!11245 = distinct !DISubprogram(name: "_write", scope: !2199, file: !2199, line: 94, type: !11210, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2391, retainedNodes: !11246)
!11246 = !{!11247, !11248, !11249, !11250}
!11247 = !DILocalVariable(name: "file", arg: 1, scope: !11245, file: !2199, line: 94, type: !7)
!11248 = !DILocalVariable(name: "ptr", arg: 2, scope: !11245, file: !2199, line: 94, type: !2204)
!11249 = !DILocalVariable(name: "len", arg: 3, scope: !11245, file: !2199, line: 94, type: !7)
!11250 = !DILocalVariable(name: "DataIdx", scope: !11245, file: !2199, line: 96, type: !7)
!11251 = !DILocation(line: 0, scope: !11245)
!11252 = !DILocation(line: 98, column: 31, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11254, file: !2199, line: 98, column: 5)
!11254 = distinct !DILexicalBlock(scope: !11245, file: !2199, line: 98, column: 5)
!11255 = !DILocation(line: 98, column: 5, scope: !11254)
!11256 = !DILocation(line: 99, column: 26, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11253, file: !2199, line: 98, column: 49)
!11258 = !DILocation(line: 99, column: 22, scope: !11257)
!11259 = !DILocation(line: 99, column: 9, scope: !11257)
!11260 = !DILocation(line: 98, column: 45, scope: !11253)
!11261 = distinct !{!11261, !11255, !11262}
!11262 = !DILocation(line: 100, column: 5, scope: !11254)
!11263 = !DILocation(line: 101, column: 5, scope: !11245)
!11264 = distinct !DISubprogram(name: "SysTick_Set", scope: !2403, file: !2403, line: 62, type: !3553, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2402, retainedNodes: !11265)
!11265 = !{!11266, !11267}
!11266 = !DILocalVariable(name: "ticks", arg: 1, scope: !11264, file: !2403, line: 62, type: !61)
!11267 = !DILocalVariable(name: "val", scope: !11264, file: !2403, line: 64, type: !61)
!11268 = !DILocation(line: 0, scope: !11264)
!11269 = !DILocation(line: 67, column: 16, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11264, file: !2403, line: 67, column: 9)
!11271 = !DILocation(line: 67, column: 21, scope: !11270)
!11272 = !DILocation(line: 67, column: 9, scope: !11264)
!11273 = !DILocation(line: 72, column: 20, scope: !11264)
!11274 = !DILocation(line: 75, column: 19, scope: !11264)
!11275 = !DILocation(line: 79, column: 20, scope: !11264)
!11276 = !DILocation(line: 80, column: 20, scope: !11264)
!11277 = !DILocation(line: 83, column: 19, scope: !11264)
!11278 = !DILocation(line: 85, column: 5, scope: !11264)
!11279 = !DILocation(line: 86, column: 1, scope: !11264)
!11280 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !2403, file: !2403, line: 95, type: !291, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2402, retainedNodes: !293)
!11281 = !DILocation(line: 97, column: 28, scope: !11280)
!11282 = !DILocation(line: 98, column: 1, scope: !11280)
!11283 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !2403, file: !2403, line: 107, type: !3805, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2402, retainedNodes: !293)
!11284 = !DILocation(line: 109, column: 12, scope: !11283)
!11285 = !DILocation(line: 109, column: 5, scope: !11283)
!11286 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2403, file: !2403, line: 119, type: !291, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2402, retainedNodes: !11287)
!11287 = !{!11288}
!11288 = !DILocalVariable(name: "cm_mux_sel", scope: !11286, file: !2403, line: 121, type: !356)
!11289 = !DILocation(line: 121, column: 38, scope: !11286)
!11290 = !DILocation(line: 121, column: 26, scope: !11286)
!11291 = !DILocation(line: 0, scope: !11286)
!11292 = !DILocation(line: 123, column: 5, scope: !11286)
!11293 = !DILocation(line: 132, column: 13, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11286, file: !2403, line: 123, column: 25)
!11295 = !DILocation(line: 140, column: 13, scope: !11294)
!11296 = !DILocation(line: 0, scope: !11294)
!11297 = !DILocation(line: 146, column: 26, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11286, file: !2403, line: 146, column: 9)
!11299 = !DILocation(line: 146, column: 50, scope: !11298)
!11300 = !DILocation(line: 146, column: 41, scope: !11298)
!11301 = !DILocation(line: 148, column: 25, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11298, file: !2403, line: 147, column: 52)
!11303 = !DILocation(line: 149, column: 5, scope: !11302)
!11304 = !DILocation(line: 150, column: 1, scope: !11286)
!11305 = distinct !DISubprogram(name: "SystemInit", scope: !2403, file: !2403, line: 158, type: !291, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2402, retainedNodes: !293)
!11306 = !DILocation(line: 162, column: 16, scope: !11305)
!11307 = !DILocation(line: 166, column: 16, scope: !11305)
!11308 = !DILocation(line: 169, column: 16, scope: !11305)
!11309 = !DILocation(line: 172, column: 1, scope: !11305)
!11310 = distinct !DISubprogram(name: "CachePreInit", scope: !2403, file: !2403, line: 180, type: !291, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2402, retainedNodes: !293)
!11311 = !DILocation(line: 183, column: 22, scope: !11310)
!11312 = !DILocation(line: 186, column: 21, scope: !11310)
!11313 = !DILocation(line: 189, column: 21, scope: !11310)
!11314 = !DILocation(line: 192, column: 29, scope: !11310)
!11315 = !DILocation(line: 193, column: 33, scope: !11310)
!11316 = !DILocation(line: 195, column: 28, scope: !11310)
!11317 = !DILocation(line: 200, column: 30, scope: !11310)
!11318 = !DILocation(line: 214, column: 1, scope: !11310)
