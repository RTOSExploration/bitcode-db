; ModuleID = './build/wdt_feed_watchdog.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.uart_callback_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %struct.anon, %struct.anon, %struct.anon, i32, %struct.anon, %struct.anon, i32, %struct.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon.9 = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon.9*, %struct.anon.9*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hal_cache_region_config_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.hal_cache_region_config_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon.9*, %struct.anon.9*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@g_cache_status = dso_local global i8 0, align 1, !dbg !0
@g_cache_con = external dso_local local_unnamed_addr global %union.CACHE_CON_Type, align 4
@g_cache_region_en = external dso_local local_unnamed_addr global i32, align 4
@g_cache_entry = external dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type], align 4
@.str = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt2523/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !92
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !279
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !342
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !339
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !294
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !316
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !343
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !626
@.str.35 = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1.36 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.uart_callback_t] zeroinitializer, align 4, !dbg !737
@g_uart_dma_config = internal unnamed_addr global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !755
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !769
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !780
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !750
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !781
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !853
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !858
@.str.81 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.1.82 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.2 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@s_hal_wdt_callback = internal unnamed_addr global void (i32)* null, align 4, !dbg !866
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !911
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !999
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !989
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.93 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1004
@.str.103 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.104 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !1083
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1085
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1087
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1089
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1091
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1093
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1095
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1097
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1099
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1101
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1103
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1416
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1418
@.str.107 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.108 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !1427
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !1420
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !1428
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1480
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1483
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !1516
@nor_egid = dso_local local_unnamed_addr global %struct.anon.9* null, align 4, !dbg !1527
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1843
@RegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1714
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1742
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !1845
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !1552
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1738
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !1740
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !1564
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !1825
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !1828
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }] } }, align 4, !dbg !1858
@BlockLayout = internal unnamed_addr global %struct.hal_cache_region_config_t* null, align 4, !dbg !1717
@BankInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1730
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1701
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1705
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1703
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !1554
@.str.123 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.124 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1830
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !1709
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1726
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1728
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !1885
@.str.129 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.130 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !1945
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !1832
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1946
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1960
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1962
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1964
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1966
@.str.145 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.146 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !1968
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !2022
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !2024
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !2026
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2038
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2040
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2042
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !2044
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2147
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2149
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2151
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2153
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2155
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2157
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2159
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2161
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2163
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2165
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2167
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2169
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2171
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !2173
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2145
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !2192
@.str.157 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.158 = private unnamed_addr constant [20 x i8] c"welcome to main()\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"WDT test begins...\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"WDT initialization error.\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"WDT enable error.\0D\0A\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"WDT will reset in 3 seconds...\0D\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !2204
@end = external dso_local global i8, align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !2408
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2516
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 07:59:16 GMT +00:00\00", align 1, !dbg !2518
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2523
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !2529

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !2642 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2650
  call void @llvm.dbg.value(metadata i32 %1, metadata !2649, metadata !DIExpression()), !dbg !2651
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !2652, !range !2654
  %3 = icmp eq i8 %2, 0, !dbg !2652
  br i1 %3, label %5, label %4, !dbg !2655

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2656
  br label %15, !dbg !2658

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !2659
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2661
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2662
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2663
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2664
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2665
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2666
  call void @llvm.dbg.value(metadata i32 0, metadata !2647, metadata !DIExpression()), !dbg !2651
  br label %7, !dbg !2667

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !2647, metadata !DIExpression()), !dbg !2651
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %8, !dbg !2669
  store volatile i32 0, i32* %9, align 4, !dbg !2672
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %8, !dbg !2673
  store volatile i32 0, i32* %10, align 4, !dbg !2674
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !2675
  store i32 0, i32* %11, align 4, !dbg !2676
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !2677
  store i32 0, i32* %12, align 4, !dbg !2678
  %13 = add nuw nsw i32 %8, 1, !dbg !2679
  call void @llvm.dbg.value(metadata i32 %13, metadata !2647, metadata !DIExpression()), !dbg !2651
  %14 = icmp eq i32 %13, 16, !dbg !2680
  br i1 %14, label %15, label %7, !dbg !2667, !llvm.loop !2681

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !2651
  ret i32 %16, !dbg !2683
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !2684 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2687
  call void @llvm.dbg.value(metadata i32 %1, metadata !2686, metadata !DIExpression()), !dbg !2688
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2689
  %3 = and i32 %2, -31, !dbg !2689
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2689
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2690
  %5 = or i32 %4, 19, !dbg !2690
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2690
  %6 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2691
  %7 = and i32 %6, -31, !dbg !2691
  store volatile i32 %7, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2691
  %8 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2692
  %9 = or i32 %8, 3, !dbg !2692
  store volatile i32 %9, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2692
  tail call void asm sideeffect "isb", ""() #22, !dbg !2693, !srcloc !2697
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2698
  ret i32 0, !dbg !2699
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !2700 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2703
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2704
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2705
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2706
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2707
  call void @llvm.dbg.value(metadata i32 0, metadata !2702, metadata !DIExpression()), !dbg !2708
  br label %2, !dbg !2709

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !2702, metadata !DIExpression()), !dbg !2708
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %3, !dbg !2711
  store volatile i32 0, i32* %4, align 4, !dbg !2714
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %3, !dbg !2715
  store volatile i32 0, i32* %5, align 4, !dbg !2716
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !2717
  store i32 0, i32* %6, align 4, !dbg !2718
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !2719
  store i32 0, i32* %7, align 4, !dbg !2720
  %8 = add nuw nsw i32 %3, 1, !dbg !2721
  call void @llvm.dbg.value(metadata i32 %8, metadata !2702, metadata !DIExpression()), !dbg !2708
  %9 = icmp eq i32 %8, 16, !dbg !2722
  br i1 %9, label %10, label %2, !dbg !2709, !llvm.loop !2723

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !2725
  ret i32 0, !dbg !2726
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #2 !dbg !2727 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2728
  %2 = and i32 %1, 768, !dbg !2730
  %3 = icmp eq i32 %2, 0, !dbg !2730
  br i1 %3, label %8, label %4, !dbg !2731

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2732
  %6 = or i32 %5, 13, !dbg !2732
  store volatile i32 %6, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2732
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2733
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2734
  br label %8, !dbg !2735

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !2736
  ret i32 %9, !dbg !2737
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !2738 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2741
  call void @llvm.dbg.value(metadata i32 %1, metadata !2740, metadata !DIExpression()), !dbg !2742
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2743
  %3 = and i32 %2, 1, !dbg !2745
  %4 = icmp eq i32 %3, 0, !dbg !2745
  br i1 %4, label %7, label %5, !dbg !2746

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2747
  br label %7, !dbg !2749

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2750
  %9 = and i32 %8, -2, !dbg !2750
  store volatile i32 %9, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2750
  %10 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2751
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2752
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2753
  ret i32 0, !dbg !2754
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #2 !dbg !2755 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2759, metadata !DIExpression()), !dbg !2760
  %2 = icmp ugt i32 %0, 15, !dbg !2761
  br i1 %2, label %13, label %3, !dbg !2763

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2764
  %5 = load volatile i32, i32* %4, align 4, !dbg !2764
  %6 = and i32 %5, 256, !dbg !2766
  %7 = icmp eq i32 %6, 0, !dbg !2766
  br i1 %7, label %13, label %8, !dbg !2767

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !2768
  %10 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2770
  %11 = or i32 %10, %9, !dbg !2770
  store volatile i32 %11, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2770
  %12 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2771
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !2772
  br label %13, !dbg !2773

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !2760
  ret i32 %14, !dbg !2774
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #2 !dbg !2775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2777, metadata !DIExpression()), !dbg !2778
  %2 = icmp ugt i32 %0, 15, !dbg !2779
  br i1 %2, label %11, label %3, !dbg !2781

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !2782
  %5 = xor i32 %4, -1, !dbg !2783
  %6 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2784
  %7 = and i32 %6, %5, !dbg !2784
  store volatile i32 %7, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2784
  %8 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2785
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !2786
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2787
  store i32 0, i32* %9, align 4, !dbg !2788
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2789
  store i32 0, i32* %10, align 4, !dbg !2790
  br label %11, !dbg !2791

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !2778
  ret i32 %12, !dbg !2792
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #2 !dbg !2793 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2798, metadata !DIExpression()), !dbg !2799
  %2 = icmp ugt i32 %0, 3, !dbg !2800
  br i1 %2, label %13, label %3, !dbg !2802

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2803
  %5 = and i32 %4, -769, !dbg !2803
  store volatile i32 %5, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2803
  %6 = shl nuw nsw i32 %0, 8, !dbg !2804
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2805
  %8 = or i32 %7, %6, !dbg !2805
  store volatile i32 %8, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2805
  %9 = icmp eq i32 %0, 0, !dbg !2806
  br i1 %9, label %10, label %11, !dbg !2808

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2809
  br label %11, !dbg !2811

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2812
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2813
  br label %13, !dbg !2814

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !2799
  ret i32 %14, !dbg !2815
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !2816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2827, metadata !DIExpression()), !dbg !2829
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !2828, metadata !DIExpression()), !dbg !2829
  %3 = icmp ugt i32 %0, 15, !dbg !2830
  br i1 %3, label %30, label %4, !dbg !2832

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !2833
  br i1 %5, label %30, label %6, !dbg !2835

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !2836
  %8 = load i32, i32* %7, align 4, !dbg !2836
  %9 = and i32 %8, 4095, !dbg !2838
  %10 = icmp eq i32 %9, 0, !dbg !2838
  br i1 %10, label %12, label %11, !dbg !2839

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !2840
  unreachable, !dbg !2840

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !2842
  %14 = load i32, i32* %13, align 4, !dbg !2842
  %15 = and i32 %14, 4095, !dbg !2844
  %16 = icmp eq i32 %15, 0, !dbg !2844
  br i1 %16, label %18, label %17, !dbg !2845

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !2846
  unreachable, !dbg !2846

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2848
  store volatile i32 %8, i32* %19, align 4, !dbg !2849
  %20 = load i32, i32* %7, align 4, !dbg !2850
  %21 = load i32, i32* %13, align 4, !dbg !2851
  %22 = add i32 %21, %20, !dbg !2852
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %0, !dbg !2853
  store volatile i32 %22, i32* %23, align 4, !dbg !2854
  %24 = load volatile i32, i32* %19, align 4, !dbg !2855
  %25 = or i32 %24, 256, !dbg !2855
  store volatile i32 %25, i32* %19, align 4, !dbg !2855
  %26 = load volatile i32, i32* %19, align 4, !dbg !2856
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2857
  store i32 %26, i32* %27, align 4, !dbg !2858
  %28 = load volatile i32, i32* %23, align 4, !dbg !2859
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2860
  store i32 %28, i32* %29, align 4, !dbg !2861
  br label %30, !dbg !2862

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !2829
  ret i32 %31, !dbg !2863
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2868, metadata !DIExpression()), !dbg !2870
  %2 = and i32 %0, 31, !dbg !2871
  %3 = icmp eq i32 %2, 0, !dbg !2871
  br i1 %3, label %4, label %9, !dbg !2873

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2874
  call void @llvm.dbg.value(metadata i32 %5, metadata !2869, metadata !DIExpression()), !dbg !2870
  %6 = and i32 %0, -32, !dbg !2875
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2876
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2877
  %8 = or i32 %7, 5, !dbg !2877
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2877
  tail call void asm sideeffect "isb", ""() #22, !dbg !2878, !srcloc !2697
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !2880
  br label %9, !dbg !2881

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !2870
  ret i32 %10, !dbg !2882
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !2883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2887, metadata !DIExpression()), !dbg !2891
  call void @llvm.dbg.value(metadata i32 %1, metadata !2888, metadata !DIExpression()), !dbg !2891
  %3 = add i32 %1, %0, !dbg !2892
  call void @llvm.dbg.value(metadata i32 %3, metadata !2890, metadata !DIExpression()), !dbg !2891
  %4 = or i32 %1, %0, !dbg !2893
  %5 = and i32 %4, 31, !dbg !2893
  %6 = icmp eq i32 %5, 0, !dbg !2893
  br i1 %6, label %7, label %16, !dbg !2893

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2895
  call void @llvm.dbg.value(metadata i32 %8, metadata !2889, metadata !DIExpression()), !dbg !2891
  call void @llvm.dbg.value(metadata i32 %0, metadata !2887, metadata !DIExpression()), !dbg !2891
  %9 = icmp ugt i32 %3, %0, !dbg !2896
  br i1 %9, label %10, label %15, !dbg !2897

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !2887, metadata !DIExpression()), !dbg !2891
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #21, !dbg !2898
  %13 = add i32 %11, 32, !dbg !2900
  call void @llvm.dbg.value(metadata i32 %13, metadata !2887, metadata !DIExpression()), !dbg !2891
  %14 = icmp ult i32 %13, %3, !dbg !2896
  br i1 %14, label %10, label %15, !dbg !2897, !llvm.loop !2901

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !2903, !srcloc !2697
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !2905
  br label %16, !dbg !2906

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !2891
  ret i32 %17, !dbg !2907
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2910, metadata !DIExpression()), !dbg !2912
  %2 = and i32 %0, 31, !dbg !2913
  %3 = icmp eq i32 %2, 0, !dbg !2913
  br i1 %3, label %4, label %9, !dbg !2915

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2916
  call void @llvm.dbg.value(metadata i32 %5, metadata !2911, metadata !DIExpression()), !dbg !2912
  %6 = and i32 %0, -32, !dbg !2917
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2918
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2919
  %8 = or i32 %7, 21, !dbg !2919
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2919
  tail call void asm sideeffect "isb", ""() #22, !dbg !2920, !srcloc !2697
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !2922
  br label %9, !dbg !2923

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !2912
  ret i32 %10, !dbg !2924
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !2925 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2927, metadata !DIExpression()), !dbg !2931
  call void @llvm.dbg.value(metadata i32 %1, metadata !2928, metadata !DIExpression()), !dbg !2931
  %3 = add i32 %1, %0, !dbg !2932
  call void @llvm.dbg.value(metadata i32 %3, metadata !2930, metadata !DIExpression()), !dbg !2931
  %4 = or i32 %1, %0, !dbg !2933
  %5 = and i32 %4, 31, !dbg !2933
  %6 = icmp eq i32 %5, 0, !dbg !2933
  br i1 %6, label %7, label %16, !dbg !2933

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2935
  call void @llvm.dbg.value(metadata i32 %8, metadata !2929, metadata !DIExpression()), !dbg !2931
  call void @llvm.dbg.value(metadata i32 %0, metadata !2927, metadata !DIExpression()), !dbg !2931
  %9 = icmp ugt i32 %3, %0, !dbg !2936
  br i1 %9, label %10, label %15, !dbg !2937

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !2927, metadata !DIExpression()), !dbg !2931
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #21, !dbg !2938
  %13 = add i32 %11, 32, !dbg !2940
  call void @llvm.dbg.value(metadata i32 %13, metadata !2927, metadata !DIExpression()), !dbg !2931
  %14 = icmp ult i32 %13, %3, !dbg !2936
  br i1 %14, label %10, label %15, !dbg !2937, !llvm.loop !2941

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !2943, !srcloc !2697
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !2945
  br label %16, !dbg !2946

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !2931
  ret i32 %17, !dbg !2947
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !2948 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2951
  call void @llvm.dbg.value(metadata i32 %1, metadata !2950, metadata !DIExpression()), !dbg !2952
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2953
  %3 = and i32 %2, -31, !dbg !2953
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2953
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2954
  %5 = or i32 %4, 19, !dbg !2954
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2954
  tail call void asm sideeffect "isb", ""() #22, !dbg !2955, !srcloc !2697
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2957
  ret i32 0, !dbg !2958
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #2 !dbg !2959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2963, metadata !DIExpression()), !dbg !2965
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2966
  %3 = and i32 %2, 8, !dbg !2968
  %4 = icmp eq i32 %3, 0, !dbg !2968
  br i1 %4, label %23, label %5, !dbg !2969

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !2964, metadata !DIExpression()), !dbg !2965
  %7 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2970
  %8 = shl nuw nsw i32 1, %6, !dbg !2975
  %9 = and i32 %7, %8, !dbg !2976
  %10 = icmp eq i32 %9, 0, !dbg !2976
  br i1 %10, label %20, label %11, !dbg !2977

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %6, !dbg !2978
  %13 = load volatile i32, i32* %12, align 4, !dbg !2978
  %14 = and i32 %13, -257, !dbg !2981
  %15 = icmp ugt i32 %14, %0, !dbg !2982
  br i1 %15, label %20, label %16, !dbg !2983

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %6, !dbg !2984
  %18 = load volatile i32, i32* %17, align 4, !dbg !2984
  %19 = icmp ugt i32 %18, %0, !dbg !2985
  br i1 %19, label %23, label %20, !dbg !2986

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !2987
  call void @llvm.dbg.value(metadata i32 %21, metadata !2964, metadata !DIExpression()), !dbg !2965
  %22 = icmp eq i32 %21, 16, !dbg !2988
  br i1 %22, label %23, label %5, !dbg !2989, !llvm.loop !2990

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !2965
  ret i1 %24, !dbg !2992
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !2993 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2999, metadata !DIExpression()), !dbg !3000
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3001
  br i1 %2, label %3, label %26, !dbg !3003

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3004
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3006
  %6 = load i32, i32* %5, align 4, !dbg !3006
  %7 = icmp eq i32 %6, 1, !dbg !3007
  br i1 %7, label %26, label %8, !dbg !3008

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3009
  %10 = load i8, i8* %9, align 4, !dbg !3009, !range !2654
  %11 = icmp eq i8 %10, 0, !dbg !3009
  br i1 %11, label %12, label %26, !dbg !3010

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3011
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #20, !dbg !3012
  tail call void @gpt_open_clock_source() #20, !dbg !3013
  store i8 1, i8* %9, align 4, !dbg !3014
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3015
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !3015
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !3016
  %18 = load volatile i32, i32* %17, align 4, !dbg !3017
  %19 = and i32 %18, -2, !dbg !3017
  store volatile i32 %19, i32* %17, align 4, !dbg !3017
  %20 = shl nuw i32 1, %0, !dbg !3018
  %21 = xor i32 %20, -1, !dbg !3019
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !3020
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !3021
  %24 = load volatile i32, i32* %23, align 4, !dbg !3022
  %25 = and i32 %24, %21, !dbg !3022
  store volatile i32 %25, i32* %23, align 4, !dbg !3022
  br label %26, !dbg !3023

26:                                               ; preds = %3, %8, %1, %12
  %27 = phi i32 [ 0, %12 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], !dbg !3000
  ret i32 %27, !dbg !3024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #4 !dbg !3025 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3029, metadata !DIExpression()), !dbg !3030
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3031, !range !2654
  %3 = icmp ne i8 %2, 0, !dbg !3033
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !3034
  %7 = and i1 %5, %6, !dbg !3034
  ret i1 %7, !dbg !3035
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !3036 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3038, metadata !DIExpression()), !dbg !3039
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3040
  br i1 %2, label %3, label %14, !dbg !3042

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3043
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3045
  %6 = load i32, i32* %5, align 4, !dbg !3045
  %7 = icmp eq i32 %6, 1, !dbg !3046
  br i1 %7, label %14, label %8, !dbg !3047

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3048
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #20, !dbg !3049
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3050
  store i8 0, i8* %11, align 4, !dbg !3051
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3052
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !3052
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #20, !dbg !3053
  br label %14, !dbg !3054

14:                                               ; preds = %3, %1, %8
  %15 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !3039
  ret i32 %15, !dbg !3055
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3061, metadata !DIExpression()), !dbg !3063
  call void @llvm.dbg.value(metadata i32* %1, metadata !3062, metadata !DIExpression()), !dbg !3063
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !3064

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3065
  %5 = icmp eq i32 %4, 1, !dbg !3069
  br i1 %5, label %8, label %6, !dbg !3070

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3071
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #20, !dbg !3073
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3074
  br label %8, !dbg !3075

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3076
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #20, !dbg !3077
  br label %20, !dbg !3078

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3079
  %13 = icmp eq i32 %12, 1, !dbg !3083
  br i1 %13, label %16, label %14, !dbg !3084

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3085
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #20, !dbg !3087
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3088
  br label %16, !dbg !3089

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3090
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #20, !dbg !3091
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #20, !dbg !3092
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !3093
  store i32 %21, i32* %1, align 4, !dbg !3093
  br label %22, !dbg !3094

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !3063
  ret i32 %23, !dbg !3095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #6 section ".tcm_code" !dbg !3096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3100, metadata !DIExpression()), !dbg !3103
  call void @llvm.dbg.value(metadata i32 %1, metadata !3101, metadata !DIExpression()), !dbg !3103
  call void @llvm.dbg.value(metadata i32* %2, metadata !3102, metadata !DIExpression()), !dbg !3103
  %4 = icmp eq i32* %2, null, !dbg !3104
  br i1 %4, label %7, label %5, !dbg !3106

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !3107
  store i32 %6, i32* %2, align 4, !dbg !3107
  br label %7, !dbg !3109

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !3103
  ret i32 %8, !dbg !3110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !3111 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3116, metadata !DIExpression()), !dbg !3118
  call void @llvm.dbg.value(metadata i32* %1, metadata !3117, metadata !DIExpression()), !dbg !3118
  %3 = icmp ugt i32 %0, 5, !dbg !3119
  br i1 %3, label %7, label %4, !dbg !3121

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3122
  %6 = load i32, i32* %5, align 4, !dbg !3122
  store i32 %6, i32* %1, align 4, !dbg !3123
  br label %7, !dbg !3124

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !3118
  ret i32 %8, !dbg !3125
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !3126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3130, metadata !DIExpression()), !dbg !3133
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !3131, metadata !DIExpression()), !dbg !3133
  call void @llvm.dbg.value(metadata i8* %2, metadata !3132, metadata !DIExpression()), !dbg !3133
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3134
  br i1 %4, label %5, label %18, !dbg !3136

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3137
  %7 = load i32, i32* %6, align 4, !dbg !3137
  %8 = icmp eq i32 %7, 1, !dbg !3139
  br i1 %8, label %18, label %9, !dbg !3140

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3141
  %11 = load i8, i8* %10, align 4, !dbg !3141, !range !2654
  %12 = icmp eq i8 %11, 1, !dbg !3142
  br i1 %12, label %13, label %18, !dbg !3143

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !3144
  br i1 %14, label %18, label %15, !dbg !3146

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !3147
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !3148
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !3149
  store i8* %2, i8** %17, align 4, !dbg !3150
  tail call void @gpt_nvic_register() #20, !dbg !3151
  br label %18, !dbg !3152

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !3133
  ret i32 %19, !dbg !3153
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3154 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3159, metadata !DIExpression()), !dbg !3163
  call void @llvm.dbg.value(metadata i32 %1, metadata !3160, metadata !DIExpression()), !dbg !3163
  call void @llvm.dbg.value(metadata i32 %2, metadata !3161, metadata !DIExpression()), !dbg !3163
  %5 = bitcast i32* %4 to i8*, !dbg !3164
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3164
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3162, metadata !DIExpression()), !dbg !3165
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3166
  br i1 %6, label %7, label %51, !dbg !3168

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3169
  %9 = load i32, i32* %8, align 4, !dbg !3169
  %10 = icmp eq i32 %9, 1, !dbg !3171
  br i1 %10, label %51, label %11, !dbg !3172

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3173
  %13 = load i8, i8* %12, align 4, !dbg !3173, !range !2654
  %14 = icmp eq i8 %13, 1, !dbg !3174
  br i1 %14, label %15, label %51, !dbg !3175

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !3176
  br i1 %16, label %51, label %17, !dbg !3178

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3179
  store volatile i32 %18, i32* %4, align 4, !dbg !3180
  tail call void @gpt_open_clock_source() #20, !dbg !3181
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3182
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3182
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !3183
  %22 = load volatile i32, i32* %21, align 4, !dbg !3184
  %23 = and i32 %22, -2, !dbg !3184
  store volatile i32 %23, i32* %21, align 4, !dbg !3184
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3185
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !3186
  %26 = load volatile i32, i32* %25, align 4, !dbg !3187
  %27 = and i32 %26, -2, !dbg !3187
  store volatile i32 %27, i32* %25, align 4, !dbg !3187
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3188
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !3189
  store volatile i32 16, i32* %29, align 4, !dbg !3190
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #20, !dbg !3191
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3192
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !3193
  store volatile i32 %30, i32* %32, align 4, !dbg !3194
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3195
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !3196
  store volatile i32 1, i32* %34, align 4, !dbg !3197
  %35 = shl i32 %2, 4, !dbg !3198
  %36 = or i32 %35, 2, !dbg !3199
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3200
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !3201
  store volatile i32 %36, i32* %38, align 4, !dbg !3202
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !3203

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !3204
  %43 = icmp eq i32 %42, 0, !dbg !3203
  br i1 %43, label %44, label %41, !dbg !3203, !llvm.loop !3205

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3207
  %46 = load volatile i32, i32* %45, align 4, !dbg !3208
  %47 = or i32 %46, 1, !dbg !3208
  store volatile i32 %47, i32* %45, align 4, !dbg !3208
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3209
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !3210
  store volatile i32 1, i32* %49, align 4, !dbg !3211
  store i32 1, i32* %8, align 4, !dbg !3212
  %50 = load volatile i32, i32* %4, align 4, !dbg !3213
  tail call void @restore_interrupt_mask(i32 noundef %50) #20, !dbg !3214
  br label %51, !dbg !3215

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !3163
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3216
  ret i32 %52, !dbg !3216
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3217 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3221, metadata !DIExpression()), !dbg !3222
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3223
  %3 = icmp eq i32 %2, 1, !dbg !3225
  br i1 %3, label %6, label %4, !dbg !3226

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3227
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #20, !dbg !3229
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3230
  br label %6, !dbg !3231

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3232
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #20, !dbg !3233
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3234
  ret i32 0, !dbg !3235
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3236 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3238, metadata !DIExpression()), !dbg !3242
  call void @llvm.dbg.value(metadata i32 %1, metadata !3239, metadata !DIExpression()), !dbg !3242
  call void @llvm.dbg.value(metadata i32 %2, metadata !3240, metadata !DIExpression()), !dbg !3242
  %5 = bitcast i32* %4 to i8*, !dbg !3243
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3243
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3241, metadata !DIExpression()), !dbg !3244
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3245
  br i1 %6, label %7, label %50, !dbg !3247

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3248
  %9 = load i32, i32* %8, align 4, !dbg !3248
  %10 = icmp eq i32 %9, 1, !dbg !3250
  br i1 %10, label %50, label %11, !dbg !3251

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3252
  %13 = load i8, i8* %12, align 4, !dbg !3252, !range !2654
  %14 = icmp eq i8 %13, 1, !dbg !3253
  br i1 %14, label %15, label %50, !dbg !3254

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3255
  store i8 1, i8* %16, align 1, !dbg !3256
  %17 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3257
  store volatile i32 %17, i32* %4, align 4, !dbg !3258
  tail call void @gpt_open_clock_source() #20, !dbg !3259
  %18 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3260
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3260
  %20 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %19, i32 0, i32 2, !dbg !3261
  %21 = load volatile i32, i32* %20, align 4, !dbg !3262
  %22 = and i32 %21, -2, !dbg !3262
  store volatile i32 %22, i32* %20, align 4, !dbg !3262
  %23 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3263
  %24 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %23, i32 0, i32 0, !dbg !3264
  %25 = load volatile i32, i32* %24, align 4, !dbg !3265
  %26 = and i32 %25, -2, !dbg !3265
  store volatile i32 %26, i32* %24, align 4, !dbg !3265
  %27 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3266
  %28 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %27, i32 0, i32 1, !dbg !3267
  store volatile i32 12, i32* %28, align 4, !dbg !3268
  %29 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #20, !dbg !3269
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3270
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 6, !dbg !3271
  store volatile i32 %29, i32* %31, align 4, !dbg !3272
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3273
  %33 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %32, i32 0, i32 4, !dbg !3274
  store volatile i32 1, i32* %33, align 4, !dbg !3275
  %34 = shl i32 %2, 4, !dbg !3276
  %35 = or i32 %34, 2, !dbg !3277
  %36 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3278
  %37 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %36, i32 0, i32 0, !dbg !3279
  store volatile i32 %35, i32* %37, align 4, !dbg !3280
  %38 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4
  %39 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 5
  br label %40, !dbg !3281

40:                                               ; preds = %40, %15
  %41 = load volatile i32, i32* %39, align 4, !dbg !3282
  %42 = icmp eq i32 %41, 0, !dbg !3281
  br i1 %42, label %43, label %40, !dbg !3281, !llvm.loop !3283

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 0, !dbg !3285
  %45 = load volatile i32, i32* %44, align 4, !dbg !3286
  %46 = or i32 %45, 1, !dbg !3286
  store volatile i32 %46, i32* %44, align 4, !dbg !3286
  %47 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3287
  %48 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %47, i32 0, i32 2, !dbg !3288
  store volatile i32 1, i32* %48, align 4, !dbg !3289
  %49 = load volatile i32, i32* %4, align 4, !dbg !3290
  tail call void @restore_interrupt_mask(i32 noundef %49) #20, !dbg !3291
  store i32 1, i32* %8, align 4, !dbg !3292
  br label %50, !dbg !3293

50:                                               ; preds = %7, %11, %3, %43
  %51 = phi i32 [ 0, %43 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !3242
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3294
  ret i32 %51, !dbg !3294
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3295 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3297, metadata !DIExpression()), !dbg !3298
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3299
  %3 = icmp eq i32 %2, 1, !dbg !3301
  br i1 %3, label %6, label %4, !dbg !3302

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3303
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #20, !dbg !3305
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3306
  br label %6, !dbg !3307

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3308
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #20, !dbg !3309
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3310
  ret i32 0, !dbg !3311
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !3312 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3314, metadata !DIExpression()), !dbg !3316
  %3 = bitcast i32* %2 to i8*, !dbg !3317
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3317
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3315, metadata !DIExpression()), !dbg !3318
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3319
  br i1 %4, label %5, label %24, !dbg !3321

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3322
  store volatile i32 %6, i32* %2, align 4, !dbg !3323
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3324
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3324
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !3325
  %10 = load volatile i32, i32* %9, align 4, !dbg !3326
  %11 = and i32 %10, -2, !dbg !3326
  store volatile i32 %11, i32* %9, align 4, !dbg !3326
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3327
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3328
  %14 = load volatile i32, i32* %13, align 4, !dbg !3329
  %15 = and i32 %14, -2, !dbg !3329
  store volatile i32 %15, i32* %13, align 4, !dbg !3329
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3330
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !3331
  store volatile i32 1, i32* %17, align 4, !dbg !3332
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3333
  store i32 0, i32* %18, align 4, !dbg !3334
  %19 = load volatile i32, i32* %2, align 4, !dbg !3335
  tail call void @restore_interrupt_mask(i32 noundef %19) #20, !dbg !3336
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3337
  %21 = load i8, i8* %20, align 1, !dbg !3337, !range !2654
  %22 = icmp eq i8 %21, 0, !dbg !3337
  br i1 %22, label %24, label %23, !dbg !3339

23:                                               ; preds = %5
  store i8 0, i8* %20, align 1, !dbg !3340
  br label %24, !dbg !3342

24:                                               ; preds = %5, %23, %1
  %25 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !3316
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3343
  ret i32 %25, !dbg !3343
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !3344 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3348, metadata !DIExpression()), !dbg !3351
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3352
  %3 = icmp ugt i32 %2, 31, !dbg !3354
  br i1 %3, label %13, label %4, !dbg !3355

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !3356
  br i1 %5, label %13, label %6, !dbg !3358

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3359
  call void @llvm.dbg.value(metadata i32 %7, metadata !3350, metadata !DIExpression()), !dbg !3351
  %8 = tail call i32 @gpt_sw_get_free_timer() #20, !dbg !3360
  call void @llvm.dbg.value(metadata i32 %8, metadata !3349, metadata !DIExpression()), !dbg !3351
  %9 = or i32 %8, -559087616, !dbg !3361
  store i32 %9, i32* %0, align 4, !dbg !3362
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !3363
  store i8 1, i8* %10, align 4, !dbg !3364
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3365
  %12 = add i32 %11, 1, !dbg !3365
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3365
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !3366
  br label %13, !dbg !3367

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !3351
  ret i32 %14, !dbg !3368
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #9 !dbg !3369 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3371, metadata !DIExpression()), !dbg !3373
  %3 = bitcast i32* %2 to i8*, !dbg !3374
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3374
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3372, metadata !DIExpression()), !dbg !3375
  %4 = and i32 %0, -559087616, !dbg !3376
  %5 = icmp eq i32 %4, -559087616, !dbg !3378
  br i1 %5, label %6, label %24, !dbg !3379

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !3380
  store volatile i32 %7, i32* %2, align 4, !dbg !3381
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3382
  %9 = icmp eq i32 %8, 0, !dbg !3384
  br i1 %9, label %24, label %10, !dbg !3385

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !3386
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !3388
  %13 = load i8, i8* %12, align 1, !dbg !3388, !range !2654
  %14 = icmp eq i8 %13, 0, !dbg !3388
  br i1 %14, label %15, label %24, !dbg !3389

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !3390
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !3392
  %18 = load i8, i8* %17, align 4, !dbg !3392, !range !2654
  %19 = icmp eq i8 %18, 1, !dbg !3393
  br i1 %19, label %20, label %24, !dbg !3394

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !3395
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !3396
  store i8 0, i8* %22, align 4, !dbg !3397
  %23 = add i32 %8, -1, !dbg !3398
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3398
  br label %24, !dbg !3399

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !3373
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3400
  ret i32 %25, !dbg !3400
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !3401 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3405, metadata !DIExpression()), !dbg !3412
  call void @llvm.dbg.value(metadata i32 %1, metadata !3406, metadata !DIExpression()), !dbg !3412
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !3407, metadata !DIExpression()), !dbg !3412
  call void @llvm.dbg.value(metadata i8* %3, metadata !3408, metadata !DIExpression()), !dbg !3412
  %5 = and i32 %0, -559087616, !dbg !3413
  %6 = icmp ne i32 %5, -559087616, !dbg !3415
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !3416
  call void @llvm.dbg.value(metadata i32 %0, metadata !3411, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !3412
  br i1 %8, label %44, label %9, !dbg !3416

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !3417
  call void @llvm.dbg.value(metadata i32 %10, metadata !3411, metadata !DIExpression()), !dbg !3412
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !3418
  %12 = load i8, i8* %11, align 1, !dbg !3418, !range !2654
  %13 = icmp eq i8 %12, 0, !dbg !3418
  br i1 %13, label %14, label %44, !dbg !3420

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !3421
  %16 = load i8, i8* %15, align 4, !dbg !3421, !range !2654
  %17 = icmp eq i8 %16, 1, !dbg !3423
  br i1 %17, label %18, label %44, !dbg !3424

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !3425
  br i1 %19, label %44, label %20, !dbg !3427

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3428
  call void @llvm.dbg.value(metadata i32 %21, metadata !3410, metadata !DIExpression()), !dbg !3412
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3429
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3430, !range !2654
  %23 = icmp eq i8 %22, 0, !dbg !3432
  br i1 %23, label %24, label %27, !dbg !3433

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #21, !dbg !3434
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #21, !dbg !3436
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3437
  br label %27, !dbg !3438

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3439
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3440, !range !2654
  %30 = icmp eq i8 %29, 0, !dbg !3442
  br i1 %30, label %31, label %34, !dbg !3443

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3444
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #20, !dbg !3446
  call void @llvm.dbg.value(metadata i32 %33, metadata !3409, metadata !DIExpression()), !dbg !3412
  br label %34, !dbg !3447

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !3448
  call void @llvm.dbg.value(metadata i32 %35, metadata !3409, metadata !DIExpression()), !dbg !3412
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3449
  %37 = add i32 %36, %35, !dbg !3449
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3449
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3450
  %39 = add i32 %38, 1, !dbg !3450
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3450
  store i8 1, i8* %11, align 1, !dbg !3451
  %40 = add i32 %37, %1, !dbg !3452
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !3453
  store i32 %40, i32* %41, align 4, !dbg !3454
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !3455
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !3456
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !3457
  store i8* %3, i8** %43, align 4, !dbg !3458
  tail call void @gpt_sw_start_timer() #20, !dbg !3459
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3460
  tail call void @restore_interrupt_mask(i32 noundef %21) #20, !dbg !3461
  br label %44, !dbg !3462

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !3412
  ret i32 %45, !dbg !3463
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !3464 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3466, metadata !DIExpression()), !dbg !3470
  %2 = and i32 %0, -559087616, !dbg !3471
  %3 = icmp eq i32 %2, -559087616, !dbg !3473
  br i1 %3, label %4, label %31, !dbg !3474

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !3475
  call void @llvm.dbg.value(metadata i32 %5, metadata !3469, metadata !DIExpression()), !dbg !3470
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !3476
  %7 = load i8, i8* %6, align 1, !dbg !3476, !range !2654
  %8 = icmp eq i8 %7, 1, !dbg !3478
  br i1 %8, label %9, label %31, !dbg !3479

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !3480
  %11 = load i8, i8* %10, align 4, !dbg !3480, !range !2654
  %12 = icmp eq i8 %11, 1, !dbg !3482
  br i1 %12, label %13, label %31, !dbg !3483

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3484
  call void @llvm.dbg.value(metadata i32 %14, metadata !3468, metadata !DIExpression()), !dbg !3470
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3485
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3486
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3487
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3488, !range !2654
  %17 = icmp eq i8 %16, 0, !dbg !3490
  br i1 %17, label %18, label %21, !dbg !3491

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3492
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #20, !dbg !3494
  call void @llvm.dbg.value(metadata i32 %20, metadata !3467, metadata !DIExpression()), !dbg !3470
  br label %21, !dbg !3495

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !3496
  call void @llvm.dbg.value(metadata i32 %22, metadata !3467, metadata !DIExpression()), !dbg !3470
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3497
  %24 = add i32 %23, %22, !dbg !3497
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3497
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3498
  %26 = add i32 %25, -1, !dbg !3498
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3498
  store i8 0, i8* %6, align 1, !dbg !3499
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3500
  %28 = icmp eq i32 %27, 0, !dbg !3502
  br i1 %28, label %30, label %29, !dbg !3503

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #20, !dbg !3504
  br label %30, !dbg !3506

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3507
  tail call void @restore_interrupt_mask(i32 noundef %14) #20, !dbg !3508
  br label %31, !dbg !3509

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !3470
  ret i32 %32, !dbg !3510
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !3511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3515, metadata !DIExpression()), !dbg !3520
  call void @llvm.dbg.value(metadata i32* %1, metadata !3516, metadata !DIExpression()), !dbg !3520
  %3 = and i32 %0, -559087616, !dbg !3521
  %4 = icmp eq i32 %3, -559087616, !dbg !3523
  br i1 %4, label %5, label %20, !dbg !3524

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !3525
  call void @llvm.dbg.value(metadata i32 %6, metadata !3519, metadata !DIExpression()), !dbg !3520
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !3526
  %8 = load i8, i8* %7, align 4, !dbg !3526, !range !2654
  %9 = icmp eq i8 %8, 1, !dbg !3528
  br i1 %9, label %10, label %20, !dbg !3529

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3530
  call void @llvm.dbg.value(metadata i32 %11, metadata !3518, metadata !DIExpression()), !dbg !3520
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3531
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3532
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !3533
  %15 = load volatile i32, i32* %14, align 4, !dbg !3533
  %16 = add i32 %15, %12, !dbg !3534
  call void @llvm.dbg.value(metadata i32 %16, metadata !3517, metadata !DIExpression()), !dbg !3520
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !3535
  %18 = load i32, i32* %17, align 4, !dbg !3535
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !3537
  store i32 %19, i32* %1, align 4, !dbg !3538
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !3539
  br label %20, !dbg !3540

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !3520
  ret i32 %21, !dbg !3541
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 section ".tcm_code" !dbg !3542 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3546, metadata !DIExpression()), !dbg !3553
  call void @llvm.dbg.value(metadata i32 %1, metadata !3547, metadata !DIExpression()), !dbg !3553
  call void @llvm.dbg.value(metadata i32 %2, metadata !3548, metadata !DIExpression()), !dbg !3553
  %4 = and i32 %0, 65535, !dbg !3554
  %5 = mul i32 %4, %1, !dbg !3555
  call void @llvm.dbg.value(metadata i32 %5, metadata !3549, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3553
  %6 = lshr i32 %0, 16, !dbg !3556
  %7 = mul i32 %6, %1, !dbg !3557
  call void @llvm.dbg.value(metadata i32 %7, metadata !3549, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3553
  %8 = and i32 %5, 65535, !dbg !3558
  call void @llvm.dbg.value(metadata i32 %8, metadata !3551, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3553
  %9 = lshr i32 %5, 16, !dbg !3559
  %10 = add i32 %9, %7, !dbg !3560
  call void @llvm.dbg.value(metadata i32 %10, metadata !3551, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3553
  %11 = udiv i32 %10, %2, !dbg !3561
  call void @llvm.dbg.value(metadata i32 %11, metadata !3552, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3553
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !3562
  %15 = or i32 %14, %8, !dbg !3563
  %16 = udiv i32 %15, %2, !dbg !3564
  call void @llvm.dbg.value(metadata i32 %16, metadata !3552, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3553
  %17 = shl i32 %11, 16, !dbg !3565
  %18 = add i32 %16, %17, !dbg !3566
  ret i32 %18, !dbg !3567
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #11 section ".tcm_code" !dbg !3568 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3572, metadata !DIExpression()), !dbg !3573
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !3574
  %3 = load volatile i32, i32* %2, align 4, !dbg !3574
  ret i32 %3, !dbg !3575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !3576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3580, metadata !DIExpression()), !dbg !3581
  %2 = shl i32 %0, 5, !dbg !3582
  %3 = mul i32 %0, 7, !dbg !3583
  %4 = udiv i32 %3, 10, !dbg !3584
  %5 = add i32 %4, %2, !dbg !3585
  %6 = mul i32 %0, 6, !dbg !3586
  %7 = udiv i32 %6, 100, !dbg !3587
  %8 = add i32 %5, %7, !dbg !3588
  %9 = shl i32 %0, 3, !dbg !3589
  %10 = udiv i32 %9, 1000, !dbg !3590
  %11 = add i32 %8, %10, !dbg !3591
  ret i32 %11, !dbg !3592
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !290 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3593
  br i1 %1, label %10, label %2, !dbg !3595

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3596
  br i1 %3, label %4, label %6, !dbg !3599

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !3600
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !3602
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !3603

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !3605
  br label %8, !dbg !3605

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3605
  br label %10, !dbg !3606

10:                                               ; preds = %8, %0
  ret void, !dbg !3606
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !3607 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #20, !dbg !3608
  br i1 %1, label %4, label %2, !dbg !3610

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #20, !dbg !3611
  br label %4, !dbg !3613

4:                                                ; preds = %2, %0
  ret void, !dbg !3614
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3617, metadata !DIExpression()), !dbg !3618
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3619
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3620
  br i1 %2, label %3, label %6, !dbg !3622

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3623
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #21, !dbg !3625
  br label %6, !dbg !3626

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3627
  ret i32 %7, !dbg !3628
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3629 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3631, metadata !DIExpression()), !dbg !3632
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3633
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3634
  br i1 %2, label %3, label %6, !dbg !3636

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3637
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #21, !dbg !3639
  br label %6, !dbg !3640

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3641
  ret i32 %7, !dbg !3642
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !3643 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3647, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata i32 %1, metadata !3648, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata i32 %2, metadata !3649, metadata !DIExpression()), !dbg !3650
  tail call void @gpt_open_clock_source() #21, !dbg !3651
  %4 = or i32 %2, %1, !dbg !3652
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3653
  store volatile i32 %4, i32* %5, align 4, !dbg !3654
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3655
  store volatile i32 49, i32* %6, align 4, !dbg !3656
  ret void, !dbg !3657
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !3658 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3662, metadata !DIExpression()), !dbg !3666
  call void @llvm.dbg.value(metadata i32 %1, metadata !3663, metadata !DIExpression()), !dbg !3666
  call void @llvm.dbg.value(metadata i32 0, metadata !3664, metadata !DIExpression()), !dbg !3666
  call void @llvm.dbg.value(metadata i32 0, metadata !3665, metadata !DIExpression()), !dbg !3666
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3667
  call void @llvm.dbg.value(metadata i32 %3, metadata !3665, metadata !DIExpression()), !dbg !3666
  %4 = add i32 %1, 1, !dbg !3668
  %5 = add i32 %4, %3, !dbg !3669
  call void @llvm.dbg.value(metadata i32 %5, metadata !3664, metadata !DIExpression()), !dbg !3666
  %6 = icmp ugt i32 %5, %3, !dbg !3670
  br i1 %6, label %7, label %10, !dbg !3672

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3673
  %9 = icmp ult i32 %8, %5, !dbg !3675
  br i1 %9, label %7, label %16, !dbg !3676, !llvm.loop !3677

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3679
  %12 = icmp ult i32 %11, %3, !dbg !3681
  br i1 %12, label %13, label %10, !dbg !3682, !llvm.loop !3683

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3685
  %15 = icmp ult i32 %14, %5, !dbg !3686
  br i1 %15, label %13, label %16, !dbg !3687, !llvm.loop !3688

16:                                               ; preds = %13, %7
  ret void, !dbg !3690
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !3691 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3695, metadata !DIExpression()), !dbg !3696
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3697
  store volatile i32 0, i32* %2, align 4, !dbg !3698
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3699
  store volatile i32 0, i32* %3, align 4, !dbg !3700
  %4 = load volatile i32, i32* %3, align 4, !dbg !3701
  %5 = or i32 %4, 2, !dbg !3701
  store volatile i32 %5, i32* %3, align 4, !dbg !3701
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !3702

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !3703
  %9 = icmp eq i32 %8, 0, !dbg !3702
  br i1 %9, label %10, label %7, !dbg !3702, !llvm.loop !3704

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3706
  store volatile i32 16, i32* %11, align 4, !dbg !3707
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !3708
  store volatile i32 1, i32* %12, align 4, !dbg !3709
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !3710
  store volatile i32 -1, i32* %13, align 4, !dbg !3711
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !3712
  br i1 %14, label %15, label %16, !dbg !3714

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !3715
  br label %16, !dbg !3717

16:                                               ; preds = %15, %10
  ret void, !dbg !3718
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3719 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3721, metadata !DIExpression()), !dbg !3723
  %3 = bitcast i32* %2 to i8*, !dbg !3724
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3724
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3722, metadata !DIExpression()), !dbg !3725
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3726
  %5 = load volatile i32, i32* %4, align 4, !dbg !3726
  store volatile i32 %5, i32* %2, align 4, !dbg !3727
  %6 = load volatile i32, i32* %4, align 4, !dbg !3728
  %7 = and i32 %6, -2, !dbg !3728
  store volatile i32 %7, i32* %4, align 4, !dbg !3728
  %8 = load volatile i32, i32* %2, align 4, !dbg !3729
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3730
  ret i32 %8, !dbg !3731
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !3732 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3736, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.value(metadata i32 %1, metadata !3737, metadata !DIExpression()), !dbg !3738
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3739
  store volatile i32 %1, i32* %3, align 4, !dbg !3740
  ret void, !dbg !3741
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !3742 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3744, metadata !DIExpression()), !dbg !3749
  %5 = bitcast i32* %2 to i8*, !dbg !3750
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3750
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3746, metadata !DIExpression()), !dbg !3751
  %6 = bitcast i32* %3 to i8*, !dbg !3752
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !3752
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3747, metadata !DIExpression()), !dbg !3753
  %7 = bitcast i32* %4 to i8*, !dbg !3754
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !3754
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3748, metadata !DIExpression()), !dbg !3755
  call void @llvm.dbg.value(metadata i32 undef, metadata !3744, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i32 0, metadata !3745, metadata !DIExpression()), !dbg !3749
  br label %8, !dbg !3756

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3745, metadata !DIExpression()), !dbg !3749
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !3758
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3758
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !3761
  %13 = load volatile i32, i32* %12, align 4, !dbg !3761
  store volatile i32 %13, i32* %3, align 4, !dbg !3762
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !3763
  %15 = load volatile i32, i32* %14, align 4, !dbg !3763
  store volatile i32 %15, i32* %4, align 4, !dbg !3764
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #21, !dbg !3765
  store volatile i32 %16, i32* %2, align 4, !dbg !3766
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3767
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !3768
  store volatile i32 1, i32* %18, align 4, !dbg !3769
  %19 = load volatile i32, i32* %3, align 4, !dbg !3770
  %20 = and i32 %19, 1, !dbg !3772
  %21 = icmp eq i32 %20, 0, !dbg !3772
  br i1 %21, label %33, label %22, !dbg !3773

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !3774
  %24 = and i32 %23, 1, !dbg !3775
  %25 = icmp eq i32 %24, 0, !dbg !3775
  br i1 %25, label %33, label %26, !dbg !3776

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !3777
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3777
  %29 = icmp eq void (i8*)* %28, null, !dbg !3780
  br i1 %29, label %33, label %30, !dbg !3781

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !3782
  %32 = load i8*, i8** %31, align 4, !dbg !3782
  tail call void %28(i8* noundef %32) #20, !dbg !3784
  br label %33, !dbg !3785

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3786
  %35 = load volatile i32, i32* %2, align 4, !dbg !3787
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #21, !dbg !3788
  %36 = add nuw nsw i32 %9, 1, !dbg !3789
  call void @llvm.dbg.value(metadata i32 %36, metadata !3745, metadata !DIExpression()), !dbg !3749
  %37 = icmp eq i32 %36, 6, !dbg !3790
  br i1 %37, label %38, label %8, !dbg !3756, !llvm.loop !3791

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !3793
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !3793
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3793
  ret void, !dbg !3793
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !3794 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #20, !dbg !3795
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #20, !dbg !3796
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #20, !dbg !3797
  ret void, !dbg !3798
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3799 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3801, metadata !DIExpression()), !dbg !3806
  %3 = bitcast i32* %2 to i8*, !dbg !3807
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3807
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3802, metadata !DIExpression()), !dbg !3808
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3809
  call void @llvm.dbg.value(metadata i32 %4, metadata !3803, metadata !DIExpression()), !dbg !3806
  %5 = lshr i32 %4, 15, !dbg !3810
  call void @llvm.dbg.value(metadata i32 %5, metadata !3804, metadata !DIExpression()), !dbg !3806
  %6 = and i32 %4, 32767, !dbg !3811
  %7 = mul nuw nsw i32 %6, 1000, !dbg !3812
  %8 = add nuw nsw i32 %7, 16384, !dbg !3813
  %9 = lshr i32 %8, 15, !dbg !3814
  call void @llvm.dbg.value(metadata i32 %9, metadata !3805, metadata !DIExpression()), !dbg !3806
  %10 = mul nuw nsw i32 %5, 1000, !dbg !3815
  %11 = add nuw nsw i32 %9, %10, !dbg !3816
  store volatile i32 %11, i32* %2, align 4, !dbg !3817
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3818
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3819
  %14 = load volatile i32, i32* %13, align 4, !dbg !3820
  %15 = or i32 %14, 2, !dbg !3820
  store volatile i32 %15, i32* %13, align 4, !dbg !3820
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !3821

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !3822
  %20 = icmp eq i32 %19, 0, !dbg !3821
  br i1 %20, label %21, label %18, !dbg !3821, !llvm.loop !3823

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !3825
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3826
  ret i32 %22, !dbg !3827
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #12 !dbg !3828 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3832, metadata !DIExpression()), !dbg !3833
  br label %1, !dbg !3834

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3832, metadata !DIExpression()), !dbg !3833
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !3836
  %4 = load i8, i8* %3, align 4, !dbg !3836, !range !2654
  %5 = icmp eq i8 %4, 1, !dbg !3840
  br i1 %5, label %6, label %9, !dbg !3841

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !3842
  call void @llvm.dbg.value(metadata i32 %7, metadata !3832, metadata !DIExpression()), !dbg !3833
  %8 = icmp eq i32 %7, 32, !dbg !3843
  br i1 %8, label %9, label %1, !dbg !3834, !llvm.loop !3844

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !3833
  ret i32 %10, !dbg !3846
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !3847 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !3851
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3851
  %4 = bitcast i32* %2 to i8*, !dbg !3851
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !3851
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3852, !range !2654
  %6 = icmp eq i8 %5, 0, !dbg !3852
  br i1 %6, label %7, label %11, !dbg !3854

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !3849, metadata !DIExpression(DW_OP_deref)), !dbg !3855
  call void @llvm.dbg.value(metadata i32* %2, metadata !3850, metadata !DIExpression(DW_OP_deref)), !dbg !3855
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #21, !dbg !3856
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3857
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3858
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3859
  %9 = load i32, i32* %1, align 4, !dbg !3860
  call void @llvm.dbg.value(metadata i32 %9, metadata !3849, metadata !DIExpression()), !dbg !3855
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #20, !dbg !3861
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3862
  br label %11, !dbg !3863

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !3863
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3863
  ret void, !dbg !3863
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #13 !dbg !3864 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3868, metadata !DIExpression()), !dbg !3873
  call void @llvm.dbg.value(metadata i32* %1, metadata !3869, metadata !DIExpression()), !dbg !3873
  call void @llvm.dbg.value(metadata i32 -1, metadata !3871, metadata !DIExpression()), !dbg !3873
  call void @llvm.dbg.value(metadata i32 0, metadata !3870, metadata !DIExpression()), !dbg !3873
  br label %3, !dbg !3874

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !3870, metadata !DIExpression()), !dbg !3873
  call void @llvm.dbg.value(metadata i32 %5, metadata !3871, metadata !DIExpression()), !dbg !3873
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !3876
  %7 = load i8, i8* %6, align 1, !dbg !3876, !range !2654
  %8 = icmp eq i8 %7, 0, !dbg !3876
  br i1 %8, label %13, label %9, !dbg !3880

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #21, !dbg !3881
  call void @llvm.dbg.value(metadata i32 %10, metadata !3872, metadata !DIExpression()), !dbg !3873
  %11 = icmp ult i32 %10, %5, !dbg !3883
  br i1 %11, label %12, label %13, !dbg !3885

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !3871, metadata !DIExpression()), !dbg !3873
  store i32 %4, i32* %1, align 4, !dbg !3886
  br label %13, !dbg !3888

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !3873
  call void @llvm.dbg.value(metadata i32 %14, metadata !3871, metadata !DIExpression()), !dbg !3873
  %15 = add nuw nsw i32 %4, 1, !dbg !3889
  call void @llvm.dbg.value(metadata i32 %15, metadata !3870, metadata !DIExpression()), !dbg !3873
  %16 = icmp eq i32 %15, 32, !dbg !3890
  br i1 %16, label %17, label %3, !dbg !3874, !llvm.loop !3891

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !3893
  ret void, !dbg !3894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #4 !dbg !3895 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3897, metadata !DIExpression()), !dbg !3901
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !3902
  %3 = load i32, i32* %2, align 4, !dbg !3902
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3902
  %5 = sub i32 %3, %4, !dbg !3902
  call void @llvm.dbg.value(metadata i32 %5, metadata !3898, metadata !DIExpression()), !dbg !3901
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3903
  %7 = sub i32 %6, %4, !dbg !3903
  call void @llvm.dbg.value(metadata i32 %7, metadata !3899, metadata !DIExpression()), !dbg !3901
  %8 = icmp ugt i32 %5, %7, !dbg !3904
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !3906
  call void @llvm.dbg.value(metadata i32 %10, metadata !3900, metadata !DIExpression()), !dbg !3901
  ret i32 %10, !dbg !3907
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !3908 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3910, metadata !DIExpression()), !dbg !3914
  %4 = bitcast i32* %2 to i8*, !dbg !3915
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !3915
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3912, metadata !DIExpression()), !dbg !3916
  %5 = bitcast i32* %3 to i8*, !dbg !3917
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3917
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3913, metadata !DIExpression()), !dbg !3918
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3919
  %7 = icmp eq i32 %6, 0, !dbg !3921
  br i1 %7, label %38, label %8, !dbg !3922

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3923
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #20, !dbg !3925
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3926
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3927
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #21, !dbg !3928
  store volatile i32 %11, i32* %2, align 4, !dbg !3929
  %12 = load volatile i32, i32* %2, align 4, !dbg !3930
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3931
  %14 = add i32 %13, %12, !dbg !3931
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3931
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3932
  call void @llvm.dbg.value(metadata i32 0, metadata !3911, metadata !DIExpression()), !dbg !3914
  br label %15, !dbg !3933

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3911, metadata !DIExpression()), !dbg !3914
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !3935
  %18 = load i8, i8* %17, align 1, !dbg !3935, !range !2654
  %19 = icmp eq i8 %18, 0, !dbg !3935
  br i1 %19, label %31, label %20, !dbg !3939

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #21, !dbg !3940
  store volatile i32 %21, i32* %3, align 4, !dbg !3942
  %22 = load volatile i32, i32* %3, align 4, !dbg !3943
  %23 = icmp eq i32 %22, 0, !dbg !3945
  br i1 %23, label %24, label %31, !dbg !3946

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !3947
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3949
  %26 = add i32 %25, -1, !dbg !3949
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3949
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !3950
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3950
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !3951
  %30 = load i8*, i8** %29, align 4, !dbg !3951
  tail call void %28(i8* noundef %30) #20, !dbg !3952
  br label %31, !dbg !3953

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !3954
  call void @llvm.dbg.value(metadata i32 %32, metadata !3911, metadata !DIExpression()), !dbg !3914
  %33 = icmp eq i32 %32, 32, !dbg !3955
  br i1 %33, label %34, label %15, !dbg !3933, !llvm.loop !3956

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3958
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3959
  %36 = icmp eq i32 %35, 0, !dbg !3961
  br i1 %36, label %38, label %37, !dbg !3962

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #21, !dbg !3963
  br label %38, !dbg !3965

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3966
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !3966
  ret void, !dbg !3966
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #14 !dbg !3967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3972, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !3974, metadata !DIExpression()), !dbg !3976
  call void @llvm.dbg.value(metadata i32 0, metadata !3973, metadata !DIExpression()), !dbg !3975
  br label %5, !dbg !3977

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !3979
  call void @llvm.dbg.value(metadata i32 %3, metadata !3973, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i32 %6, metadata !3973, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3975
  %4 = icmp eq i32 %3, 5, !dbg !3981
  br i1 %4, label %10, label %5, !dbg !3977, !llvm.loop !3982

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3973, metadata !DIExpression()), !dbg !3975
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !3984
  %8 = load i32, i32* %7, align 4, !dbg !3984
  %9 = icmp eq i32 %8, %0, !dbg !3987
  call void @llvm.dbg.value(metadata i32 %6, metadata !3973, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3975
  br i1 %9, label %10, label %2, !dbg !3988

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !3975
  ret i32 %11, !dbg !3989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #10 !dbg !3990 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3995, metadata !DIExpression()), !dbg !3996
  ret i32 0, !dbg !3997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #10 !dbg !3998 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4000, metadata !DIExpression()), !dbg !4001
  ret i32 0, !dbg !4002
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4007, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata i32 %1, metadata !4008, metadata !DIExpression()), !dbg !4011
  %3 = icmp ugt i32 %0, 48, !dbg !4012
  br i1 %3, label %13, label %4, !dbg !4014

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4015
  call void @llvm.dbg.value(metadata i32 %5, metadata !4009, metadata !DIExpression()), !dbg !4011
  %6 = and i32 %0, 31, !dbg !4016
  call void @llvm.dbg.value(metadata i32 %6, metadata !4010, metadata !DIExpression()), !dbg !4011
  %7 = icmp eq i32 %1, 0, !dbg !4017
  %8 = shl nuw i32 1, %6, !dbg !4019
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4019
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !4020
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !4020
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !4020
  store volatile i32 %8, i32* %12, align 4, !dbg !4019
  br label %13, !dbg !4021

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4011
  ret i32 %14, !dbg !4021
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4027, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata i32* %1, metadata !4028, metadata !DIExpression()), !dbg !4032
  %3 = icmp ugt i32 %0, 48, !dbg !4033
  br i1 %3, label %15, label %4, !dbg !4035

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4036
  br i1 %5, label %15, label %6, !dbg !4038

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4039
  call void @llvm.dbg.value(metadata i32 %7, metadata !4029, metadata !DIExpression()), !dbg !4032
  %8 = and i32 %0, 31, !dbg !4040
  call void @llvm.dbg.value(metadata i32 %8, metadata !4030, metadata !DIExpression()), !dbg !4032
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4041
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !4042
  %11 = load volatile i32, i32* %10, align 4, !dbg !4042
  call void @llvm.dbg.value(metadata i32 %11, metadata !4031, metadata !DIExpression()), !dbg !4032
  %12 = shl nuw i32 1, %8, !dbg !4043
  %13 = and i32 %11, %12, !dbg !4044
  call void @llvm.dbg.value(metadata i32 %13, metadata !4031, metadata !DIExpression()), !dbg !4032
  %14 = lshr i32 %13, %8, !dbg !4045
  store i32 %14, i32* %1, align 4, !dbg !4046
  br label %15, !dbg !4047

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4032
  ret i32 %16, !dbg !4048
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !4049 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4054, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8 %1, metadata !4055, metadata !DIExpression()), !dbg !4059
  %3 = icmp ugt i32 %0, 48, !dbg !4060
  br i1 %3, label %18, label %4, !dbg !4062

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !4063
  br i1 %5, label %18, label %6, !dbg !4065

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !4066
  %8 = lshr i32 %0, 3, !dbg !4067
  call void @llvm.dbg.value(metadata i32 %8, metadata !4056, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %0, metadata !4057, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4059
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4068
  call void @llvm.dbg.value(metadata i32 %9, metadata !4058, metadata !DIExpression()), !dbg !4059
  %10 = shl nuw nsw i32 %0, 2, !dbg !4069
  %11 = and i32 %10, 28, !dbg !4069
  %12 = shl nuw i32 15, %11, !dbg !4070
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4071
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !4072
  store volatile i32 %12, i32* %14, align 4, !dbg !4073
  %15 = shl nuw i32 %7, %11, !dbg !4074
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4075
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !4076
  store volatile i32 %15, i32* %17, align 4, !dbg !4077
  tail call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !4078
  br label %18, !dbg !4079

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4059
  ret i32 %19, !dbg !4080
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4081 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4086, metadata !DIExpression()), !dbg !4091
  call void @llvm.dbg.value(metadata i32* %1, metadata !4087, metadata !DIExpression()), !dbg !4091
  %3 = icmp ugt i32 %0, 48, !dbg !4092
  br i1 %3, label %15, label %4, !dbg !4094

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4095
  br i1 %5, label %15, label %6, !dbg !4097

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4098
  call void @llvm.dbg.value(metadata i32 %7, metadata !4088, metadata !DIExpression()), !dbg !4091
  %8 = and i32 %0, 31, !dbg !4099
  call void @llvm.dbg.value(metadata i32 %8, metadata !4089, metadata !DIExpression()), !dbg !4091
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4100
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !4101
  %11 = load volatile i32, i32* %10, align 4, !dbg !4101
  call void @llvm.dbg.value(metadata i32 %11, metadata !4090, metadata !DIExpression()), !dbg !4091
  %12 = shl nuw i32 1, %8, !dbg !4102
  %13 = and i32 %11, %12, !dbg !4103
  call void @llvm.dbg.value(metadata i32 %13, metadata !4090, metadata !DIExpression()), !dbg !4091
  %14 = lshr i32 %13, %8, !dbg !4104
  store i32 %14, i32* %1, align 4, !dbg !4105
  br label %15, !dbg !4106

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4091
  ret i32 %16, !dbg !4107
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4112, metadata !DIExpression()), !dbg !4116
  call void @llvm.dbg.value(metadata i32 %1, metadata !4113, metadata !DIExpression()), !dbg !4116
  %3 = icmp ugt i32 %0, 48, !dbg !4117
  br i1 %3, label %13, label %4, !dbg !4119

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4120
  call void @llvm.dbg.value(metadata i32 %5, metadata !4114, metadata !DIExpression()), !dbg !4116
  %6 = and i32 %0, 31, !dbg !4121
  call void @llvm.dbg.value(metadata i32 %6, metadata !4115, metadata !DIExpression()), !dbg !4116
  %7 = icmp eq i32 %1, 0, !dbg !4122
  %8 = shl nuw i32 1, %6, !dbg !4124
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4124
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !4125
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !4125
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !4125
  store volatile i32 %8, i32* %12, align 4, !dbg !4124
  br label %13, !dbg !4126

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4116
  ret i32 %14, !dbg !4126
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4129, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.value(metadata i32* %1, metadata !4130, metadata !DIExpression()), !dbg !4134
  %3 = icmp ugt i32 %0, 48, !dbg !4135
  br i1 %3, label %15, label %4, !dbg !4137

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4138
  br i1 %5, label %15, label %6, !dbg !4140

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4141
  call void @llvm.dbg.value(metadata i32 %7, metadata !4131, metadata !DIExpression()), !dbg !4134
  %8 = and i32 %0, 31, !dbg !4142
  call void @llvm.dbg.value(metadata i32 %8, metadata !4132, metadata !DIExpression()), !dbg !4134
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4143
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !4144
  %11 = load volatile i32, i32* %10, align 4, !dbg !4144
  call void @llvm.dbg.value(metadata i32 %11, metadata !4133, metadata !DIExpression()), !dbg !4134
  %12 = shl nuw i32 1, %8, !dbg !4145
  %13 = and i32 %11, %12, !dbg !4146
  call void @llvm.dbg.value(metadata i32 %13, metadata !4133, metadata !DIExpression()), !dbg !4134
  %14 = lshr i32 %13, %8, !dbg !4147
  store i32 %14, i32* %1, align 4, !dbg !4148
  br label %15, !dbg !4149

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4134
  ret i32 %16, !dbg !4150
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #2 !dbg !4151 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4153, metadata !DIExpression()), !dbg !4157
  %2 = icmp ugt i32 %0, 48, !dbg !4158
  br i1 %2, label %16, label %3, !dbg !4160

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4161
  call void @llvm.dbg.value(metadata i32 %4, metadata !4154, metadata !DIExpression()), !dbg !4157
  %5 = and i32 %0, 31, !dbg !4162
  call void @llvm.dbg.value(metadata i32 %5, metadata !4155, metadata !DIExpression()), !dbg !4157
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4163
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !4164
  %8 = load volatile i32, i32* %7, align 4, !dbg !4164
  call void @llvm.dbg.value(metadata i32 %8, metadata !4156, metadata !DIExpression()), !dbg !4157
  %9 = shl nuw i32 1, %5, !dbg !4165
  %10 = and i32 %8, %9, !dbg !4166
  call void @llvm.dbg.value(metadata i32 %10, metadata !4156, metadata !DIExpression()), !dbg !4157
  %11 = lshr i32 %10, %5, !dbg !4167
  %12 = icmp eq i32 %11, 0, !dbg !4167
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !4169
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !4169
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !4169
  store volatile i32 %9, i32* %15, align 4, !dbg !4170
  br label %16, !dbg !4171

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !4157
  ret i32 %17, !dbg !4171
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4174, metadata !DIExpression()), !dbg !4177
  %2 = icmp ugt i32 %0, 48, !dbg !4178
  br i1 %2, label %9, label %3, !dbg !4180

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4181
  call void @llvm.dbg.value(metadata i32 %4, metadata !4175, metadata !DIExpression()), !dbg !4177
  %5 = and i32 %0, 31, !dbg !4182
  call void @llvm.dbg.value(metadata i32 %5, metadata !4176, metadata !DIExpression()), !dbg !4177
  %6 = shl nuw i32 1, %5, !dbg !4183
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4184
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !4185
  store volatile i32 %6, i32* %8, align 4, !dbg !4186
  br label %9, !dbg !4187

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4177
  ret i32 %10, !dbg !4188
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4191, metadata !DIExpression()), !dbg !4194
  %2 = icmp ugt i32 %0, 48, !dbg !4195
  br i1 %2, label %9, label %3, !dbg !4197

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4198
  call void @llvm.dbg.value(metadata i32 %4, metadata !4192, metadata !DIExpression()), !dbg !4194
  %5 = and i32 %0, 31, !dbg !4199
  call void @llvm.dbg.value(metadata i32 %5, metadata !4193, metadata !DIExpression()), !dbg !4194
  %6 = shl nuw i32 1, %5, !dbg !4200
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4201
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !4202
  store volatile i32 %6, i32* %8, align 4, !dbg !4203
  br label %9, !dbg !4204

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4194
  ret i32 %10, !dbg !4205
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #2 !dbg !4206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4208, metadata !DIExpression()), !dbg !4211
  %2 = icmp ugt i32 %0, 48, !dbg !4212
  br i1 %2, label %14, label %3, !dbg !4214

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4215
  %5 = icmp eq i32 %4, 0, !dbg !4215
  br i1 %5, label %14, label %6, !dbg !4216

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4217
  call void @llvm.dbg.value(metadata i32 %7, metadata !4209, metadata !DIExpression()), !dbg !4211
  %8 = and i32 %0, 31, !dbg !4218
  call void @llvm.dbg.value(metadata i32 %8, metadata !4210, metadata !DIExpression()), !dbg !4211
  %9 = shl nuw i32 1, %8, !dbg !4219
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4220
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4221
  store volatile i32 %9, i32* %11, align 4, !dbg !4222
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4223
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !4224
  store volatile i32 %9, i32* %13, align 4, !dbg !4225
  br label %14, !dbg !4226

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4211
  ret i32 %15, !dbg !4227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #2 !dbg !4228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4230, metadata !DIExpression()), !dbg !4233
  %2 = icmp ugt i32 %0, 48, !dbg !4234
  br i1 %2, label %14, label %3, !dbg !4236

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4237
  %5 = icmp eq i32 %4, 0, !dbg !4237
  br i1 %5, label %14, label %6, !dbg !4238

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4239
  call void @llvm.dbg.value(metadata i32 %7, metadata !4231, metadata !DIExpression()), !dbg !4233
  %8 = and i32 %0, 31, !dbg !4240
  call void @llvm.dbg.value(metadata i32 %8, metadata !4232, metadata !DIExpression()), !dbg !4233
  %9 = shl nuw i32 1, %8, !dbg !4241
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4242
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4243
  store volatile i32 %9, i32* %11, align 4, !dbg !4244
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4245
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !4246
  store volatile i32 %9, i32* %13, align 4, !dbg !4247
  br label %14, !dbg !4248

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4233
  ret i32 %15, !dbg !4249
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #2 !dbg !4250 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4252, metadata !DIExpression()), !dbg !4255
  %2 = icmp ugt i32 %0, 48, !dbg !4256
  br i1 %2, label %12, label %3, !dbg !4258

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4259
  %5 = icmp eq i32 %4, 0, !dbg !4259
  br i1 %5, label %12, label %6, !dbg !4260

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4261
  call void @llvm.dbg.value(metadata i32 %7, metadata !4253, metadata !DIExpression()), !dbg !4255
  %8 = and i32 %0, 31, !dbg !4262
  call void @llvm.dbg.value(metadata i32 %8, metadata !4254, metadata !DIExpression()), !dbg !4255
  %9 = shl nuw i32 1, %8, !dbg !4263
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4264
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !4265
  store volatile i32 %9, i32* %11, align 4, !dbg !4266
  br label %12, !dbg !4267

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4255
  ret i32 %13, !dbg !4268
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4275, metadata !DIExpression()), !dbg !4277
  call void @llvm.dbg.value(metadata i32 %1, metadata !4276, metadata !DIExpression()), !dbg !4277
  %3 = icmp ugt i32 %0, 5, !dbg !4278
  br i1 %3, label %7, label %4, !dbg !4280

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4281
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !4282
  store volatile i32 %1, i32* %6, align 4, !dbg !4283
  br label %7, !dbg !4284

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !4277
  ret i32 %8, !dbg !4285
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !4286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4290, metadata !DIExpression()), !dbg !4296
  call void @llvm.dbg.value(metadata i8 %1, metadata !4291, metadata !DIExpression()), !dbg !4296
  call void @llvm.dbg.value(metadata i8 %2, metadata !4292, metadata !DIExpression()), !dbg !4296
  call void @llvm.dbg.value(metadata i8 %3, metadata !4293, metadata !DIExpression()), !dbg !4296
  %5 = icmp ugt i32 %0, 48, !dbg !4297
  br i1 %5, label %30, label %6, !dbg !4299

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4300
  %8 = icmp eq i32 %7, 0, !dbg !4300
  br i1 %8, label %9, label %30, !dbg !4301

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !4302
  call void @llvm.dbg.value(metadata i32 %10, metadata !4294, metadata !DIExpression()), !dbg !4296
  %11 = and i32 %0, 31, !dbg !4303
  call void @llvm.dbg.value(metadata i32 %11, metadata !4295, metadata !DIExpression()), !dbg !4296
  %12 = icmp eq i8 %1, 0, !dbg !4304
  %13 = shl nuw i32 1, %11, !dbg !4306
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4306
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !4307
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !4307
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !4307
  store volatile i32 %13, i32* %17, align 4, !dbg !4306
  %18 = icmp eq i8 %2, 0, !dbg !4308
  %19 = shl nuw i32 1, %11, !dbg !4310
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4310
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !4311
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !4311
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !4311
  store volatile i32 %19, i32* %23, align 4, !dbg !4310
  %24 = icmp eq i8 %3, 0, !dbg !4312
  %25 = shl nuw i32 1, %11, !dbg !4314
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4314
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !4315
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !4315
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !4315
  store volatile i32 %25, i32* %29, align 4, !dbg !4314
  br label %30, !dbg !4316

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !4296
  ret i32 %31, !dbg !4316
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !4317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4319, metadata !DIExpression()), !dbg !4326
  %2 = icmp ugt i32 %0, 48, !dbg !4327
  br i1 %2, label %40, label %3, !dbg !4329

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4330
  call void @llvm.dbg.value(metadata i32 %4, metadata !4320, metadata !DIExpression()), !dbg !4326
  %5 = and i32 %0, 31, !dbg !4331
  call void @llvm.dbg.value(metadata i32 %5, metadata !4323, metadata !DIExpression()), !dbg !4326
  %6 = lshr i32 %0, 4, !dbg !4332
  call void @llvm.dbg.value(metadata i32 %6, metadata !4321, metadata !DIExpression()), !dbg !4326
  call void @llvm.dbg.value(metadata i32 %0, metadata !4324, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4326
  %7 = lshr i32 %0, 3, !dbg !4333
  call void @llvm.dbg.value(metadata i32 %7, metadata !4322, metadata !DIExpression()), !dbg !4326
  call void @llvm.dbg.value(metadata i32 %0, metadata !4325, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4326
  %8 = shl nuw nsw i32 %0, 2, !dbg !4334
  %9 = and i32 %8, 28, !dbg !4334
  %10 = shl nuw i32 15, %9, !dbg !4335
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4336
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !4337
  store volatile i32 %10, i32* %12, align 4, !dbg !4338
  %13 = shl nuw i32 1, %5, !dbg !4339
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4340
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !4341
  store volatile i32 %13, i32* %15, align 4, !dbg !4342
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4343
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !4344
  store volatile i32 %13, i32* %17, align 4, !dbg !4345
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4346
  %19 = icmp eq i32 %18, 0, !dbg !4346
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4348
  br i1 %19, label %23, label %21, !dbg !4349

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !4350
  br label %29, !dbg !4352

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !4353
  store volatile i32 %13, i32* %24, align 4, !dbg !4355
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4356
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !4357
  store volatile i32 %13, i32* %26, align 4, !dbg !4358
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4359
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !4360
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !4348
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4361
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !4362
  store volatile i32 %13, i32* %32, align 4, !dbg !4363
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4364
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !4365
  store volatile i32 %13, i32* %34, align 4, !dbg !4366
  %35 = shl nuw nsw i32 %0, 1, !dbg !4367
  %36 = and i32 %35, 30, !dbg !4367
  %37 = shl nuw i32 3, %36, !dbg !4368
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4369
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !4370
  store volatile i32 %37, i32* %39, align 4, !dbg !4371
  br label %40, !dbg !4372

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !4326
  ret i32 %41, !dbg !4373
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !4374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4376, metadata !DIExpression()), !dbg !4381
  %2 = icmp ugt i32 %0, 48, !dbg !4382
  br i1 %2, label %34, label %3, !dbg !4384

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4385
  call void @llvm.dbg.value(metadata i32 %4, metadata !4377, metadata !DIExpression()), !dbg !4381
  %5 = and i32 %0, 31, !dbg !4386
  call void @llvm.dbg.value(metadata i32 %5, metadata !4379, metadata !DIExpression()), !dbg !4381
  %6 = lshr i32 %0, 3, !dbg !4387
  call void @llvm.dbg.value(metadata i32 %6, metadata !4378, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %0, metadata !4380, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4381
  %7 = shl nuw nsw i32 %0, 2, !dbg !4388
  %8 = and i32 %7, 28, !dbg !4388
  %9 = shl nuw i32 15, %8, !dbg !4389
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4390
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !4391
  store volatile i32 %9, i32* %11, align 4, !dbg !4392
  %12 = shl nuw i32 1, %5, !dbg !4393
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4394
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !4395
  store volatile i32 %12, i32* %14, align 4, !dbg !4396
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4397
  %16 = icmp eq i32 %15, 0, !dbg !4397
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4399
  br i1 %16, label %22, label %18, !dbg !4400

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !4401
  store volatile i32 %12, i32* %19, align 4, !dbg !4403
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4404
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !4405
  br label %28, !dbg !4406

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !4407
  store volatile i32 %12, i32* %23, align 4, !dbg !4409
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4410
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !4411
  store volatile i32 %12, i32* %25, align 4, !dbg !4412
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4413
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !4414
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !4399
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4415
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !4416
  store volatile i32 %12, i32* %31, align 4, !dbg !4417
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4418
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !4419
  store volatile i32 %12, i32* %33, align 4, !dbg !4420
  br label %34, !dbg !4421

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !4381
  ret i32 %35, !dbg !4422
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4427, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.value(metadata i32 %1, metadata !4428, metadata !DIExpression()), !dbg !4431
  %3 = icmp ugt i32 %0, 48, !dbg !4432
  br i1 %3, label %14, label %4, !dbg !4434

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !4435
  call void @llvm.dbg.value(metadata i32 %5, metadata !4429, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.value(metadata i32 %0, metadata !4430, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4431
  %6 = shl nuw nsw i32 %0, 1, !dbg !4436
  %7 = and i32 %6, 30, !dbg !4436
  %8 = shl nuw i32 3, %7, !dbg !4437
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4438
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !4439
  store volatile i32 %8, i32* %10, align 4, !dbg !4440
  %11 = shl i32 %1, %7, !dbg !4441
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4442
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !4443
  store volatile i32 %11, i32* %13, align 4, !dbg !4444
  br label %14, !dbg !4445

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !4431
  ret i32 %15, !dbg !4446
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4447 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4452, metadata !DIExpression()), !dbg !4457
  call void @llvm.dbg.value(metadata i32* %1, metadata !4453, metadata !DIExpression()), !dbg !4457
  %3 = icmp ugt i32 %0, 48, !dbg !4458
  br i1 %3, label %18, label %4, !dbg !4460

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4461
  br i1 %5, label %18, label %6, !dbg !4463

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !4464
  call void @llvm.dbg.value(metadata i32 %7, metadata !4454, metadata !DIExpression()), !dbg !4457
  call void @llvm.dbg.value(metadata i32 %0, metadata !4455, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4457
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4465
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !4466
  %10 = load volatile i32, i32* %9, align 4, !dbg !4466
  call void @llvm.dbg.value(metadata i32 %10, metadata !4456, metadata !DIExpression()), !dbg !4457
  %11 = shl nuw nsw i32 %0, 1, !dbg !4467
  %12 = and i32 %11, 30, !dbg !4467
  %13 = shl nuw i32 3, %12, !dbg !4468
  %14 = and i32 %10, %13, !dbg !4469
  call void @llvm.dbg.value(metadata i32 %14, metadata !4456, metadata !DIExpression()), !dbg !4457
  %15 = lshr i32 %14, %12, !dbg !4470
  call void @llvm.dbg.value(metadata i32 %15, metadata !4456, metadata !DIExpression()), !dbg !4457
  %16 = shl i32 %15, 2, !dbg !4471
  %17 = add i32 %16, 4, !dbg !4471
  store i32 %17, i32* %1, align 4, !dbg !4472
  br label %18, !dbg !4473

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4457
  ret i32 %19, !dbg !4474
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4475 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4479, metadata !DIExpression()), !dbg !4544
  call void @llvm.dbg.value(metadata i1 %1, metadata !4480, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4544
  %4 = bitcast i32* %3 to i8*, !dbg !4545
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4545
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4546
  %6 = load volatile i32, i32* %5, align 4, !dbg !4546
  %7 = icmp eq i32 %6, 2, !dbg !4548
  br i1 %7, label %9, label %8, !dbg !4549

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4550
  unreachable, !dbg !4550

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4552
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !4552
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !4486, metadata !DIExpression()), !dbg !4544
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !4553
  call void @llvm.dbg.value(metadata i32 %12, metadata !4481, metadata !DIExpression()), !dbg !4544
  br i1 %1, label %13, label %14, !dbg !4554

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #20, !dbg !4555
  br label %14, !dbg !4558

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !4483, metadata !DIExpression(DW_OP_deref)), !dbg !4544
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !4559
  call void @llvm.dbg.value(metadata i32 %15, metadata !4542, metadata !DIExpression()), !dbg !4544
  %16 = icmp eq i32 %15, 0, !dbg !4560
  br i1 %16, label %18, label %17, !dbg !4562

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4563
  unreachable, !dbg !4563

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !4565
  call void @llvm.dbg.value(metadata i32 %19, metadata !4483, metadata !DIExpression()), !dbg !4544
  %20 = icmp eq i32 %19, 0, !dbg !4567
  br i1 %20, label %43, label %21, !dbg !4568

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4569
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !4569
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !4484, metadata !DIExpression()), !dbg !4544
  call void @llvm.dbg.value(metadata i8* undef, metadata !4485, metadata !DIExpression()), !dbg !4544
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !4570
  br i1 %24, label %25, label %26, !dbg !4572

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4573
  unreachable, !dbg !4573

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4575
  %28 = load i8*, i8** %27, align 4, !dbg !4575
  call void @llvm.dbg.value(metadata i8* %28, metadata !4485, metadata !DIExpression()), !dbg !4544
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !4576
  call void %23(i32 noundef 1, i8* noundef %28) #20, !dbg !4577
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #20, !dbg !4578
  call void @llvm.dbg.value(metadata i32* %3, metadata !4483, metadata !DIExpression(DW_OP_deref)), !dbg !4544
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !4579
  call void @llvm.dbg.value(metadata i32 %31, metadata !4542, metadata !DIExpression()), !dbg !4544
  %32 = icmp eq i32 %31, 0, !dbg !4580
  br i1 %32, label %34, label %33, !dbg !4582

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4583
  unreachable, !dbg !4583

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !4585
  call void @llvm.dbg.value(metadata i32 %35, metadata !4483, metadata !DIExpression()), !dbg !4544
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !4587
  %37 = load i32, i32* %36, align 4, !dbg !4587
  %38 = icmp ult i32 %35, %37, !dbg !4588
  br i1 %38, label %43, label %39, !dbg !4589

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !4590
  call void @llvm.dbg.value(metadata i32 %40, metadata !4542, metadata !DIExpression()), !dbg !4544
  %41 = icmp eq i32 %40, 0, !dbg !4592
  br i1 %41, label %43, label %42, !dbg !4594

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4595
  unreachable, !dbg !4595

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4597
  ret void, !dbg !4597
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_receive_bytes(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_disable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_enable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4598 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4600, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata i1 %1, metadata !4601, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4608
  %4 = bitcast i32* %3 to i8*, !dbg !4609
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4609
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4610
  %6 = load volatile i32, i32* %5, align 4, !dbg !4610
  %7 = icmp eq i32 %6, 2, !dbg !4612
  br i1 %7, label %9, label %8, !dbg !4613

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4614
  unreachable, !dbg !4614

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !4616
  call void @llvm.dbg.value(metadata i32 %10, metadata !4602, metadata !DIExpression()), !dbg !4608
  br i1 %1, label %36, label %11, !dbg !4617

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4618
  %13 = load void (i32, i8*)*, void (i32, i8*)** %12, align 4, !dbg !4618
  call void @llvm.dbg.value(metadata void (i32, i8*)* %13, metadata !4606, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata i8* undef, metadata !4607, metadata !DIExpression()), !dbg !4608
  %14 = icmp eq void (i32, i8*)* %13, null, !dbg !4621
  br i1 %14, label %15, label %16, !dbg !4623

15:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4624
  unreachable, !dbg !4624

16:                                               ; preds = %11
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4626
  %18 = load i8*, i8** %17, align 4, !dbg !4626
  call void @llvm.dbg.value(metadata i8* %18, metadata !4607, metadata !DIExpression()), !dbg !4608
  %19 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !4627
  tail call void %13(i32 noundef 2, i8* noundef %18) #20, !dbg !4628
  %20 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #20, !dbg !4629
  call void @llvm.dbg.value(metadata i32* %3, metadata !4605, metadata !DIExpression(DW_OP_deref)), !dbg !4608
  %21 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #20, !dbg !4630
  call void @llvm.dbg.value(metadata i32 %21, metadata !4603, metadata !DIExpression()), !dbg !4608
  %22 = icmp eq i32 %21, 0, !dbg !4631
  br i1 %22, label %24, label %23, !dbg !4633

23:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4634
  unreachable, !dbg !4634

24:                                               ; preds = %16
  %25 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !4636
  %26 = load i32, i32* %25, align 4, !dbg !4636
  %27 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !4637
  %28 = load i32, i32* %27, align 4, !dbg !4637
  %29 = sub i32 %26, %28, !dbg !4638
  call void @llvm.dbg.value(metadata i32 %29, metadata !4604, metadata !DIExpression()), !dbg !4608
  %30 = load i32, i32* %3, align 4, !dbg !4639
  call void @llvm.dbg.value(metadata i32 %30, metadata !4605, metadata !DIExpression()), !dbg !4608
  %31 = icmp ult i32 %30, %29, !dbg !4641
  br i1 %31, label %36, label %32, !dbg !4642

32:                                               ; preds = %24
  %33 = call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !4643
  call void @llvm.dbg.value(metadata i32 %33, metadata !4603, metadata !DIExpression()), !dbg !4608
  %34 = icmp eq i32 %33, 0, !dbg !4645
  br i1 %34, label %36, label %35, !dbg !4647

35:                                               ; preds = %32
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4648
  unreachable, !dbg !4648

36:                                               ; preds = %24, %32, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4650
  ret void, !dbg !4650
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_send_space(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !4651 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4655, metadata !DIExpression()), !dbg !4659
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4660
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !4660
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !4656, metadata !DIExpression()), !dbg !4659
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !4661
  %5 = icmp eq i32 %4, 0, !dbg !4661
  br i1 %5, label %6, label %14, !dbg !4663

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #20, !dbg !4664
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #20, !dbg !4666
  %7 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4667
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !4667
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !4657, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.value(metadata i8* undef, metadata !4658, metadata !DIExpression()), !dbg !4659
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !4668
  br i1 %9, label %10, label %11, !dbg !4670

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4671
  unreachable, !dbg !4671

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4673
  %13 = load i8*, i8** %12, align 4, !dbg !4673
  call void @llvm.dbg.value(metadata i8* %13, metadata !4658, metadata !DIExpression()), !dbg !4659
  tail call void %8(i32 noundef -1, i8* noundef %13) #20, !dbg !4674
  br label %14, !dbg !4675

14:                                               ; preds = %11, %1
  ret void, !dbg !4676
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4683, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata i32 %1, metadata !4684, metadata !DIExpression()), !dbg !4688
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4689
  br i1 %3, label %4, label %16, !dbg !4691

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #21, !dbg !4692
  br i1 %5, label %6, label %16, !dbg !4693

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4694
  %8 = load volatile i32, i32* %7, align 4, !dbg !4694
  %9 = icmp eq i32 %8, 0, !dbg !4696
  br i1 %9, label %16, label %10, !dbg !4697

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4698
  call void @llvm.dbg.value(metadata i32 %11, metadata !4686, metadata !DIExpression()), !dbg !4688
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !4699
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4700
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4700
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4687, metadata !DIExpression()), !dbg !4688
  %14 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !4701
  %15 = load i32, i32* %14, align 4, !dbg !4701
  call void @llvm.dbg.value(metadata i32 %15, metadata !4685, metadata !DIExpression()), !dbg !4688
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %13, i32 noundef %15) #20, !dbg !4702
  br label %16, !dbg !4703

16:                                               ; preds = %6, %2, %4, %10
  %17 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4688
  ret i32 %17, !dbg !4704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !4705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4709, metadata !DIExpression()), !dbg !4710
  %2 = icmp ult i32 %0, 4, !dbg !4711
  ret i1 %2, !dbg !4712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !4713 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4717, metadata !DIExpression()), !dbg !4718
  %2 = icmp ult i32 %0, 13, !dbg !4719
  ret i1 %2, !dbg !4720
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4737, metadata !DIExpression()), !dbg !4741
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4738, metadata !DIExpression()), !dbg !4741
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4742
  br i1 %3, label %4, label %23, !dbg !4744

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !4745
  br i1 %5, label %6, label %23, !dbg !4746

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4747
  %8 = load volatile i32, i32* %7, align 4, !dbg !4747
  %9 = icmp eq i32 %8, 0, !dbg !4749
  br i1 %9, label %23, label %10, !dbg !4750

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4751
  call void @llvm.dbg.value(metadata i32 %11, metadata !4739, metadata !DIExpression()), !dbg !4741
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !4752
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4753
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4753
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4740, metadata !DIExpression()), !dbg !4741
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4754
  %15 = load i32, i32* %14, align 4, !dbg !4754
  %16 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %15) #21, !dbg !4755
  %17 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4756
  %18 = load i32, i32* %17, align 4, !dbg !4756
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4757
  %20 = load i32, i32* %19, align 4, !dbg !4757
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4758
  %22 = load i32, i32* %21, align 4, !dbg !4758
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %13, i32 noundef %18, i32 noundef %20, i32 noundef %22) #20, !dbg !4759
  br label %23, !dbg !4760

23:                                               ; preds = %6, %2, %4, %10
  %24 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4741
  ret i32 %24, !dbg !4761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !4762 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !4766, metadata !DIExpression()), !dbg !4767
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !4768
  %3 = load i32, i32* %2, align 4, !dbg !4768
  %4 = icmp ult i32 %3, 13, !dbg !4769
  br i1 %4, label %5, label %17, !dbg !4770

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !4771
  %7 = load i32, i32* %6, align 4, !dbg !4771
  %8 = icmp ult i32 %7, 4, !dbg !4772
  br i1 %8, label %9, label %17, !dbg !4773

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !4774
  %11 = load i32, i32* %10, align 4, !dbg !4774
  %12 = icmp ult i32 %11, 2, !dbg !4775
  br i1 %12, label %13, label %17, !dbg !4776

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !4777
  %15 = load i32, i32* %14, align 4, !dbg !4777
  %16 = icmp ult i32 %15, 3, !dbg !4778
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !4767
  ret i1 %18, !dbg !4779
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4785, metadata !DIExpression()), !dbg !4793
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4786, metadata !DIExpression()), !dbg !4793
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4794
  br i1 %3, label %4, label %41, !dbg !4796

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !4797
  br i1 %5, label %6, label %41, !dbg !4798

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4799
  call void @llvm.dbg.value(metadata i32 %7, metadata !4790, metadata !DIExpression()), !dbg !4793
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4800
  %9 = load volatile i32, i32* %8, align 4, !dbg !4800
  %10 = icmp eq i32 %9, 0, !dbg !4802
  br i1 %10, label %12, label %11, !dbg !4803

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4804
  br label %41, !dbg !4806

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !4807
  br i1 %13, label %22, label %14, !dbg !4809

14:                                               ; preds = %12, %14
  %15 = phi i32 [ %19, %14 ], [ 0, %12 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !4788, metadata !DIExpression()), !dbg !4793
  %16 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %15, !dbg !4810
  store volatile i32 0, i32* %16, align 4, !dbg !4815
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 1, !dbg !4816
  store i8* null, i8** %17, align 4, !dbg !4817
  %18 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 0, !dbg !4818
  store void (i32, i8*)* null, void (i32, i8*)** %18, align 4, !dbg !4819
  %19 = add nuw nsw i32 %15, 1, !dbg !4820
  call void @llvm.dbg.value(metadata i32 %19, metadata !4788, metadata !DIExpression()), !dbg !4793
  %20 = icmp eq i32 %19, 4, !dbg !4821
  br i1 %20, label %21, label %14, !dbg !4822, !llvm.loop !4823

21:                                               ; preds = %14
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !4825
  br label %22, !dbg !4826

22:                                               ; preds = %21, %12
  store volatile i32 1, i32* %8, align 4, !dbg !4827
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4828
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !4829
  %24 = load i32, i32* %23, align 4, !dbg !4829
  %25 = tail call i32 @hal_clock_enable(i32 noundef %24) #20, !dbg !4830
  call void @llvm.dbg.value(metadata i32 %25, metadata !4791, metadata !DIExpression()), !dbg !4793
  %26 = icmp eq i32 %25, 0, !dbg !4831
  br i1 %26, label %28, label %27, !dbg !4833

27:                                               ; preds = %22
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4834
  unreachable, !dbg !4834

28:                                               ; preds = %22
  %29 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4836
  %30 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %29, align 4, !dbg !4836
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %30, metadata !4787, metadata !DIExpression()), !dbg !4793
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !4837
  %31 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4838
  %32 = load i32, i32* %31, align 4, !dbg !4838
  %33 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %32, !dbg !4839
  %34 = load i32, i32* %33, align 4, !dbg !4839
  call void @llvm.dbg.value(metadata i32 %34, metadata !4789, metadata !DIExpression()), !dbg !4793
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %30, i32 noundef %34) #20, !dbg !4840
  %35 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4841
  %36 = load i32, i32* %35, align 4, !dbg !4841
  %37 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4842
  %38 = load i32, i32* %37, align 4, !dbg !4842
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4843
  %40 = load i32, i32* %39, align 4, !dbg !4843
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %30, i32 noundef %36, i32 noundef %38, i32 noundef %40) #20, !dbg !4844
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !4845
  br label %41, !dbg !4846

41:                                               ; preds = %2, %4, %28, %11
  %42 = phi i32 [ -3, %11 ], [ 0, %28 ], [ -4, %4 ], [ -4, %2 ], !dbg !4793
  ret i32 %42, !dbg !4847
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !4848 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4852, metadata !DIExpression()), !dbg !4859
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4860
  br i1 %2, label %3, label %54, !dbg !4862

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4863
  call void @llvm.dbg.value(metadata i32 %4, metadata !4856, metadata !DIExpression()), !dbg !4859
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4864
  %6 = load volatile i32, i32* %5, align 4, !dbg !4864
  %7 = icmp eq i32 %6, 0, !dbg !4866
  br i1 %7, label %52, label %8, !dbg !4867

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4868
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !4868
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !4853, metadata !DIExpression()), !dbg !4859
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !4869
  %11 = load volatile i32, i32* %5, align 4, !dbg !4870
  %12 = icmp eq i32 %11, 2, !dbg !4872
  br i1 %12, label %13, label %43, !dbg !4873

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !4874
  call void @llvm.dbg.value(metadata i32 %14, metadata !4854, metadata !DIExpression()), !dbg !4859
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !4876
  call void @llvm.dbg.value(metadata i32 %15, metadata !4855, metadata !DIExpression()), !dbg !4859
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #20, !dbg !4877
  call void @llvm.dbg.value(metadata i32 %16, metadata !4857, metadata !DIExpression()), !dbg !4859
  %17 = icmp eq i32 %16, 0, !dbg !4878
  br i1 %17, label %19, label %18, !dbg !4880

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4881
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4883
  unreachable, !dbg !4883

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #20, !dbg !4884
  call void @llvm.dbg.value(metadata i32 %20, metadata !4857, metadata !DIExpression()), !dbg !4859
  %21 = icmp eq i32 %20, 0, !dbg !4885
  br i1 %21, label %23, label %22, !dbg !4887

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4888
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4890
  unreachable, !dbg !4890

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #20, !dbg !4891
  call void @llvm.dbg.value(metadata i32 %24, metadata !4857, metadata !DIExpression()), !dbg !4859
  %25 = icmp eq i32 %24, 0, !dbg !4892
  br i1 %25, label %27, label %26, !dbg !4894

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4895
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4897
  unreachable, !dbg !4897

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #20, !dbg !4898
  call void @llvm.dbg.value(metadata i32 %28, metadata !4857, metadata !DIExpression()), !dbg !4859
  %29 = icmp eq i32 %28, 0, !dbg !4899
  br i1 %29, label %31, label %30, !dbg !4901

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4902
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4904
  unreachable, !dbg !4904

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #20, !dbg !4905
  call void @llvm.dbg.value(metadata i32 %32, metadata !4857, metadata !DIExpression()), !dbg !4859
  %33 = icmp eq i32 %32, 0, !dbg !4906
  br i1 %33, label %35, label %34, !dbg !4908

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4909
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4911
  unreachable, !dbg !4911

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #20, !dbg !4912
  call void @llvm.dbg.value(metadata i32 %36, metadata !4857, metadata !DIExpression()), !dbg !4859
  %37 = icmp eq i32 %36, 0, !dbg !4913
  br i1 %37, label %39, label %38, !dbg !4915

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4916
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4918
  unreachable, !dbg !4918

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !4919
  %41 = load i32, i32* %40, align 4, !dbg !4919
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #20, !dbg !4920
  br label %43, !dbg !4921

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !4922
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !4923
  %45 = load i32, i32* %44, align 4, !dbg !4923
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #20, !dbg !4924
  call void @llvm.dbg.value(metadata i32 %46, metadata !4858, metadata !DIExpression()), !dbg !4859
  %47 = icmp eq i32 %46, 0, !dbg !4925
  br i1 %47, label %49, label %48, !dbg !4927

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4928
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4930
  unreachable, !dbg !4930

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4931
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !4932
  %51 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4933
  store i8* null, i8** %51, align 4, !dbg !4934
  store volatile i32 0, i32* %5, align 4, !dbg !4935
  br label %52, !dbg !4936

52:                                               ; preds = %3, %49
  %53 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4859
  br label %54, !dbg !4937

54:                                               ; preds = %52, %1
  %55 = phi i32 [ -4, %1 ], [ %53, %52 ], !dbg !4859
  ret i32 %55, !dbg !4937
}

; Function Attrs: optsize
declare dso_local i32 @vdma_stop(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_deinit(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !4938 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4942, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.value(metadata i8 %1, metadata !4943, metadata !DIExpression()), !dbg !4945
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4946
  br i1 %3, label %4, label %11, !dbg !4948

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4949
  %6 = load volatile i32, i32* %5, align 4, !dbg !4949
  %7 = icmp eq i32 %6, 1, !dbg !4951
  br i1 %7, label %8, label %11, !dbg !4952

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4953
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !4953
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !4944, metadata !DIExpression()), !dbg !4945
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #20, !dbg !4954
  br label %11, !dbg !4955

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !4955
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !4956 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4962, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.value(metadata i8* %1, metadata !4963, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.value(metadata i32 %2, metadata !4964, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.value(metadata i32 0, metadata !4965, metadata !DIExpression()), !dbg !4966
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4967
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !4969
  br i1 %6, label %7, label %20, !dbg !4969

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4970
  %9 = load volatile i32, i32* %8, align 4, !dbg !4970
  %10 = icmp ne i32 %9, 1, !dbg !4972
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !4973
  call void @llvm.dbg.value(metadata i32 0, metadata !4965, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.value(metadata i8* %1, metadata !4963, metadata !DIExpression()), !dbg !4966
  br i1 %12, label %20, label %13, !dbg !4973

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4965, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.value(metadata i8* %15, metadata !4963, metadata !DIExpression()), !dbg !4966
  %16 = load i8, i8* %15, align 1, !dbg !4974
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #21, !dbg !4978
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !4979
  call void @llvm.dbg.value(metadata i8* %17, metadata !4963, metadata !DIExpression()), !dbg !4966
  %18 = add nuw i32 %14, 1, !dbg !4980
  call void @llvm.dbg.value(metadata i32 %18, metadata !4965, metadata !DIExpression()), !dbg !4966
  %19 = icmp eq i32 %18, %2, !dbg !4981
  br i1 %19, label %20, label %13, !dbg !4982, !llvm.loop !4983

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !4966
  ret i32 %21, !dbg !4985
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !4986 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4988, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata i8* %1, metadata !4989, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata i32 %2, metadata !4990, metadata !DIExpression()), !dbg !4996
  %5 = bitcast i32* %4 to i8*, !dbg !4997
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !4997
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4998
  %7 = xor i1 %6, true, !dbg !5000
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5000
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5000
  br i1 %11, label %45, label %12, !dbg !5000

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5001
  %14 = load volatile i32, i32* %13, align 4, !dbg !5001
  %15 = icmp eq i32 %14, 2, !dbg !5003
  br i1 %15, label %16, label %45, !dbg !5004

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5005
  call void @llvm.dbg.value(metadata i32 %17, metadata !4991, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata i32* %4, metadata !4994, metadata !DIExpression(DW_OP_deref)), !dbg !4996
  %18 = call i32 @vdma_get_available_send_space(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !5006
  call void @llvm.dbg.value(metadata i32 %18, metadata !4995, metadata !DIExpression()), !dbg !4996
  %19 = icmp eq i32 %18, 0, !dbg !5007
  br i1 %19, label %21, label %20, !dbg !5009

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5010
  unreachable, !dbg !5010

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !5012
  call void @llvm.dbg.value(metadata i32 %22, metadata !4994, metadata !DIExpression()), !dbg !4996
  %23 = icmp ult i32 %22, %2, !dbg !5014
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !4993, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.value(metadata i32 0, metadata !4992, metadata !DIExpression()), !dbg !4996
  %25 = icmp eq i32 %24, 0, !dbg !5015
  br i1 %25, label %38, label %28, !dbg !5018

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !4992, metadata !DIExpression()), !dbg !4996
  %27 = icmp eq i32 %34, %24, !dbg !5015
  br i1 %27, label %36, label %28, !dbg !5018, !llvm.loop !5019

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %34, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !4992, metadata !DIExpression()), !dbg !4996
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5021
  %31 = load i8, i8* %30, align 1, !dbg !5021
  %32 = call i32 @vdma_push_data(i32 noundef %17, i8 noundef zeroext %31) #20, !dbg !5023
  call void @llvm.dbg.value(metadata i32 %32, metadata !4995, metadata !DIExpression()), !dbg !4996
  %33 = icmp eq i32 %32, 0, !dbg !5024
  %34 = add nuw i32 %29, 1, !dbg !5026
  call void @llvm.dbg.value(metadata i32 %34, metadata !4992, metadata !DIExpression()), !dbg !4996
  br i1 %33, label %26, label %35, !dbg !5027

35:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5028
  unreachable, !dbg !5028

36:                                               ; preds = %26
  %37 = load i32, i32* %4, align 4, !dbg !5030
  br label %38, !dbg !5030

38:                                               ; preds = %36, %21
  %39 = phi i32 [ %37, %36 ], [ %22, %21 ], !dbg !5030
  call void @llvm.dbg.value(metadata i32 %39, metadata !4994, metadata !DIExpression()), !dbg !4996
  %40 = icmp eq i32 %24, %39, !dbg !5032
  br i1 %40, label %41, label %45, !dbg !5033

41:                                               ; preds = %38
  %42 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !5034
  call void @llvm.dbg.value(metadata i32 %42, metadata !4995, metadata !DIExpression()), !dbg !4996
  %43 = icmp eq i32 %42, 0, !dbg !5036
  br i1 %43, label %45, label %44, !dbg !5038

44:                                               ; preds = %41
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5039
  unreachable, !dbg !5039

45:                                               ; preds = %38, %41, %12, %3
  %46 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %41 ], [ %24, %38 ], !dbg !4996
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5041
  ret i32 %46, !dbg !5041
}

; Function Attrs: optsize
declare dso_local i32 @vdma_push_data(i32 noundef, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !5042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5046, metadata !DIExpression()), !dbg !5049
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5050
  br i1 %2, label %3, label %11, !dbg !5052

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5053
  %5 = load volatile i32, i32* %4, align 4, !dbg !5053
  %6 = icmp eq i32 %5, 1, !dbg !5055
  br i1 %6, label %7, label %11, !dbg !5056

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5057
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5057
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5048, metadata !DIExpression()), !dbg !5049
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5058
  call void @llvm.dbg.value(metadata i8 %10, metadata !5047, metadata !DIExpression()), !dbg !5049
  br label %11, !dbg !5059

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5049
  ret i8 %12, !dbg !5060
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !5061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5065, metadata !DIExpression()), !dbg !5068
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5069
  br i1 %2, label %3, label %11, !dbg !5071

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5072
  %5 = load volatile i32, i32* %4, align 4, !dbg !5072
  %6 = icmp eq i32 %5, 1, !dbg !5074
  br i1 %6, label %7, label %11, !dbg !5075

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5076
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5076
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5067, metadata !DIExpression()), !dbg !5068
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5077
  call void @llvm.dbg.value(metadata i32 %10, metadata !5066, metadata !DIExpression()), !dbg !5068
  br label %11, !dbg !5078

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5068
  ret i32 %12, !dbg !5079
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5084, metadata !DIExpression()), !dbg !5089
  call void @llvm.dbg.value(metadata i8* %1, metadata !5085, metadata !DIExpression()), !dbg !5089
  call void @llvm.dbg.value(metadata i32 %2, metadata !5086, metadata !DIExpression()), !dbg !5089
  call void @llvm.dbg.value(metadata i8* %1, metadata !5088, metadata !DIExpression()), !dbg !5089
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5090
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !5092
  br i1 %6, label %7, label %19, !dbg !5092

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5093
  %9 = load volatile i32, i32* %8, align 4, !dbg !5093
  %10 = icmp ne i32 %9, 1, !dbg !5095
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !5096
  call void @llvm.dbg.value(metadata i32 0, metadata !5087, metadata !DIExpression()), !dbg !5089
  br i1 %12, label %19, label %13, !dbg !5096

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5087, metadata !DIExpression()), !dbg !5089
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #21, !dbg !5097
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !5101
  store i8 %15, i8* %16, align 1, !dbg !5102
  %17 = add nuw i32 %14, 1, !dbg !5103
  call void @llvm.dbg.value(metadata i32 %17, metadata !5087, metadata !DIExpression()), !dbg !5089
  %18 = icmp eq i32 %17, %2, !dbg !5104
  br i1 %18, label %19, label %13, !dbg !5105, !llvm.loop !5106

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !5089
  ret i32 %20, !dbg !5108
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5109 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5111, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.value(metadata i8* %1, metadata !5112, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.value(metadata i32 %2, metadata !5113, metadata !DIExpression()), !dbg !5119
  %5 = bitcast i32* %4 to i8*, !dbg !5120
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5120
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5121
  %7 = xor i1 %6, true, !dbg !5123
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5123
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5123
  br i1 %11, label %44, label %12, !dbg !5123

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5124
  %14 = load volatile i32, i32* %13, align 4, !dbg !5124
  %15 = icmp eq i32 %14, 2, !dbg !5126
  br i1 %15, label %16, label %44, !dbg !5127

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5128
  call void @llvm.dbg.value(metadata i32 %17, metadata !5114, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.value(metadata i32* %4, metadata !5116, metadata !DIExpression(DW_OP_deref)), !dbg !5119
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !5129
  call void @llvm.dbg.value(metadata i32 %18, metadata !5118, metadata !DIExpression()), !dbg !5119
  %19 = icmp eq i32 %18, 0, !dbg !5130
  br i1 %19, label %21, label %20, !dbg !5132

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5133
  unreachable, !dbg !5133

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !5135
  call void @llvm.dbg.value(metadata i32 %22, metadata !5116, metadata !DIExpression()), !dbg !5119
  %23 = icmp ult i32 %22, %2, !dbg !5137
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !5115, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.value(metadata i32 0, metadata !5117, metadata !DIExpression()), !dbg !5119
  %25 = icmp eq i32 %24, 0, !dbg !5138
  br i1 %25, label %37, label %28, !dbg !5141

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !5117, metadata !DIExpression()), !dbg !5119
  %27 = icmp eq i32 %33, %24, !dbg !5138
  br i1 %27, label %35, label %28, !dbg !5141, !llvm.loop !5142

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !5117, metadata !DIExpression()), !dbg !5119
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5144
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #20, !dbg !5146
  call void @llvm.dbg.value(metadata i32 %31, metadata !5118, metadata !DIExpression()), !dbg !5119
  %32 = icmp eq i32 %31, 0, !dbg !5147
  %33 = add nuw i32 %29, 1, !dbg !5149
  call void @llvm.dbg.value(metadata i32 %33, metadata !5117, metadata !DIExpression()), !dbg !5119
  br i1 %32, label %26, label %34, !dbg !5150

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5151
  unreachable, !dbg !5151

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !5153
  br label %37, !dbg !5153

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !5153
  call void @llvm.dbg.value(metadata i32 %38, metadata !5116, metadata !DIExpression()), !dbg !5119
  %39 = icmp eq i32 %24, %38, !dbg !5155
  br i1 %39, label %40, label %44, !dbg !5156

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !5157
  call void @llvm.dbg.value(metadata i32 %41, metadata !5118, metadata !DIExpression()), !dbg !5119
  %42 = icmp eq i32 %41, 0, !dbg !5159
  br i1 %42, label %44, label %43, !dbg !5161

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5162
  unreachable, !dbg !5162

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !5119
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5164
  ret i32 %45, !dbg !5164
}

; Function Attrs: optsize
declare dso_local i32 @vdma_pop_data(i32 noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !5165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5169, metadata !DIExpression()), !dbg !5177
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !5170, metadata !DIExpression()), !dbg !5177
  call void @llvm.dbg.value(metadata i8* %2, metadata !5171, metadata !DIExpression()), !dbg !5177
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5178
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !5180
  br i1 %6, label %7, label %39, !dbg !5180

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5181
  call void @llvm.dbg.value(metadata i32 %8, metadata !5174, metadata !DIExpression()), !dbg !5177
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5182
  %10 = load volatile i32, i32* %9, align 4, !dbg !5182
  %11 = icmp eq i32 %10, 1, !dbg !5184
  br i1 %11, label %12, label %37, !dbg !5185

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5186
  call void @llvm.dbg.value(metadata i32 %13, metadata !5172, metadata !DIExpression()), !dbg !5177
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5187
  call void @llvm.dbg.value(metadata i32 %14, metadata !5173, metadata !DIExpression()), !dbg !5177
  %15 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5188
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !5189
  %16 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5190
  store i8* %2, i8** %16, align 4, !dbg !5191
  %17 = shl i32 %0, 1, !dbg !5192
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !5193
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #20, !dbg !5194
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !5195
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #20, !dbg !5196
  call void @llvm.dbg.value(metadata i32 %20, metadata !5175, metadata !DIExpression()), !dbg !5177
  %21 = icmp eq i32 %20, 0, !dbg !5197
  br i1 %21, label %23, label %22, !dbg !5199

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5200
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5202
  unreachable, !dbg !5202

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !5203
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !5204
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #20, !dbg !5205
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !5206
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #20, !dbg !5207
  call void @llvm.dbg.value(metadata i32 %27, metadata !5175, metadata !DIExpression()), !dbg !5177
  %28 = icmp eq i32 %27, 0, !dbg !5208
  br i1 %28, label %30, label %29, !dbg !5210

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5211
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5213
  unreachable, !dbg !5213

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5214
  %32 = load i32, i32* %31, align 4, !dbg !5214
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #20, !dbg !5215
  call void @llvm.dbg.value(metadata i32 %33, metadata !5176, metadata !DIExpression()), !dbg !5177
  %34 = icmp eq i32 %33, 0, !dbg !5216
  br i1 %34, label %36, label %35, !dbg !5218

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5219
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5221
  unreachable, !dbg !5221

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #21, !dbg !5222
  store volatile i32 2, i32* %9, align 4, !dbg !5223
  br label %37, !dbg !5224

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5177
  br label %39, !dbg !5225

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !5177
  ret i32 %40, !dbg !5225
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !5226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5231, metadata !DIExpression()), !dbg !5234
  call void @llvm.dbg.value(metadata i8* %1, metadata !5232, metadata !DIExpression()), !dbg !5234
  call void @llvm.dbg.value(metadata i8* %1, metadata !5233, metadata !DIExpression()), !dbg !5234
  %3 = load i8, i8* %1, align 4, !dbg !5235, !range !2654
  %4 = icmp eq i8 %3, 0, !dbg !5235
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !5237
  %6 = bitcast i8* %5 to i32*, !dbg !5237
  %7 = load i32, i32* %6, align 4, !dbg !5237
  br i1 %4, label %9, label %8, !dbg !5238

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5233, metadata !DIExpression()), !dbg !5234
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !5239
  br label %10, !dbg !5241

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !5242
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !5244
}

; Function Attrs: optsize
declare dso_local i32 @vdma_register_callback(i32 noundef, void (i32, i8*)* noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !5245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5247, metadata !DIExpression()), !dbg !5252
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5253
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !5253
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !5248, metadata !DIExpression()), !dbg !5252
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5254
  call void @llvm.dbg.value(metadata i32 %4, metadata !5249, metadata !DIExpression()), !dbg !5252
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5255
  call void @llvm.dbg.value(metadata i32 %5, metadata !5250, metadata !DIExpression()), !dbg !5252
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5256
  %6 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5257
  %7 = load i32, i32* %6, align 4, !dbg !5257
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef %7) #20, !dbg !5258
  %9 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #20, !dbg !5259
  call void @llvm.dbg.value(metadata i32 %9, metadata !5251, metadata !DIExpression()), !dbg !5252
  %10 = icmp eq i32 %9, 0, !dbg !5260
  br i1 %10, label %12, label %11, !dbg !5262

11:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5263
  unreachable, !dbg !5263

12:                                               ; preds = %1
  %13 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #20, !dbg !5265
  call void @llvm.dbg.value(metadata i32 %13, metadata !5251, metadata !DIExpression()), !dbg !5252
  %14 = icmp eq i32 %13, 0, !dbg !5266
  br i1 %14, label %16, label %15, !dbg !5268

15:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5269
  unreachable, !dbg !5269

16:                                               ; preds = %12
  %17 = tail call i32 @vdma_start(i32 noundef %4) #20, !dbg !5271
  call void @llvm.dbg.value(metadata i32 %17, metadata !5251, metadata !DIExpression()), !dbg !5252
  %18 = icmp eq i32 %17, 0, !dbg !5272
  br i1 %18, label %20, label %19, !dbg !5274

19:                                               ; preds = %16
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5275
  unreachable, !dbg !5275

20:                                               ; preds = %16
  %21 = tail call i32 @vdma_start(i32 noundef %5) #20, !dbg !5277
  call void @llvm.dbg.value(metadata i32 %21, metadata !5251, metadata !DIExpression()), !dbg !5252
  %22 = icmp eq i32 %21, 0, !dbg !5278
  br i1 %22, label %24, label %23, !dbg !5280

23:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5281
  unreachable, !dbg !5281

24:                                               ; preds = %20
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5283
  ret void, !dbg !5284
}

; Function Attrs: optsize
declare dso_local i32 @vdma_start(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !5285 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5287, metadata !DIExpression()), !dbg !5291
  %3 = bitcast i32* %2 to i8*, !dbg !5292
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5292
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5293
  br i1 %4, label %5, label %16, !dbg !5295

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5296
  %7 = load volatile i32, i32* %6, align 4, !dbg !5296
  %8 = icmp eq i32 %7, 2, !dbg !5298
  br i1 %8, label %9, label %16, !dbg !5299

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5300
  call void @llvm.dbg.value(metadata i32 %10, metadata !5288, metadata !DIExpression()), !dbg !5291
  call void @llvm.dbg.value(metadata i32* %2, metadata !5289, metadata !DIExpression(DW_OP_deref)), !dbg !5291
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !5301
  call void @llvm.dbg.value(metadata i32 %11, metadata !5290, metadata !DIExpression()), !dbg !5291
  %12 = icmp eq i32 %11, 0, !dbg !5302
  br i1 %12, label %14, label %13, !dbg !5304

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5305
  unreachable, !dbg !5305

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5307
  call void @llvm.dbg.value(metadata i32 %15, metadata !5289, metadata !DIExpression()), !dbg !5291
  br label %16, !dbg !5308

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5291
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5309
  ret i32 %17, !dbg !5309
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !5310 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5312, metadata !DIExpression()), !dbg !5316
  %3 = bitcast i32* %2 to i8*, !dbg !5317
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5317
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5318
  br i1 %4, label %5, label %16, !dbg !5320

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5321
  %7 = load volatile i32, i32* %6, align 4, !dbg !5321
  %8 = icmp eq i32 %7, 2, !dbg !5323
  br i1 %8, label %9, label %16, !dbg !5324

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5325
  call void @llvm.dbg.value(metadata i32 %10, metadata !5313, metadata !DIExpression()), !dbg !5316
  call void @llvm.dbg.value(metadata i32* %2, metadata !5314, metadata !DIExpression(DW_OP_deref)), !dbg !5316
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !5326
  call void @llvm.dbg.value(metadata i32 %11, metadata !5315, metadata !DIExpression()), !dbg !5316
  %12 = icmp eq i32 %11, 0, !dbg !5327
  br i1 %12, label %14, label %13, !dbg !5329

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5330
  unreachable, !dbg !5330

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5332
  call void @llvm.dbg.value(metadata i32 %15, metadata !5314, metadata !DIExpression()), !dbg !5316
  br label %16, !dbg !5333

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5316
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5334
  ret i32 %17, !dbg !5334
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5337, metadata !DIExpression()), !dbg !5339
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5340
  br i1 %2, label %3, label %10, !dbg !5342

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5343
  %5 = load volatile i32, i32* %4, align 4, !dbg !5343
  %6 = icmp eq i32 %5, 0, !dbg !5345
  br i1 %6, label %10, label %7, !dbg !5346

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5347
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5347
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5338, metadata !DIExpression()), !dbg !5339
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5348
  br label %10, !dbg !5349

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5339
  ret i32 %11, !dbg !5350
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !5351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5355, metadata !DIExpression()), !dbg !5360
  call void @llvm.dbg.value(metadata i8 %1, metadata !5356, metadata !DIExpression()), !dbg !5360
  call void @llvm.dbg.value(metadata i8 %2, metadata !5357, metadata !DIExpression()), !dbg !5360
  call void @llvm.dbg.value(metadata i8 %3, metadata !5358, metadata !DIExpression()), !dbg !5360
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5361
  br i1 %5, label %6, label %13, !dbg !5363

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5364
  %8 = load volatile i32, i32* %7, align 4, !dbg !5364
  %9 = icmp eq i32 %8, 0, !dbg !5366
  br i1 %9, label %13, label %10, !dbg !5367

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5368
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !5368
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !5359, metadata !DIExpression()), !dbg !5360
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #20, !dbg !5369
  br label %13, !dbg !5370

13:                                               ; preds = %6, %4, %10
  %14 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !5360
  ret i32 %14, !dbg !5371
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5374, metadata !DIExpression()), !dbg !5376
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5377
  br i1 %2, label %3, label %10, !dbg !5379

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5380
  %5 = load volatile i32, i32* %4, align 4, !dbg !5380
  %6 = icmp eq i32 %5, 0, !dbg !5382
  br i1 %6, label %10, label %7, !dbg !5383

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5384
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5384
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5375, metadata !DIExpression()), !dbg !5376
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5385
  br label %10, !dbg !5386

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5376
  ret i32 %11, !dbg !5387
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5388 {
  %3 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5394, metadata !DIExpression()), !dbg !5406
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !5395, metadata !DIExpression()), !dbg !5406
  %4 = bitcast %struct.hal_cache_region_config_t* %3 to i8*, !dbg !5407
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5407
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %3, metadata !5397, metadata !DIExpression()), !dbg !5408
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5409
  br i1 %5, label %6, label %101, !dbg !5411

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !5412
  %8 = load i8*, i8** %7, align 4, !dbg !5412
  %9 = icmp eq i8* %8, null, !dbg !5414
  br i1 %9, label %101, label %10, !dbg !5415

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !5416
  %12 = load i8*, i8** %11, align 4, !dbg !5416
  %13 = icmp eq i8* %12, null, !dbg !5417
  br i1 %13, label %101, label %14, !dbg !5418

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !5419
  %16 = load i32, i32* %15, align 4, !dbg !5419
  %17 = icmp ugt i32 %16, 131071, !dbg !5421
  br i1 %17, label %101, label %18, !dbg !5422

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !5423
  %20 = load i32, i32* %19, align 4, !dbg !5423
  %21 = icmp ugt i32 %20, 131071, !dbg !5424
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !5425
  br i1 %23, label %101, label %24, !dbg !5425

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !5426
  %26 = load i32, i32* %25, align 4, !dbg !5426
  %27 = icmp ugt i32 %26, 131071, !dbg !5428
  br i1 %27, label %101, label %28, !dbg !5429

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !5430
  %30 = load i32, i32* %29, align 4, !dbg !5430
  %31 = icmp ugt i32 %30, 131071, !dbg !5431
  br i1 %31, label %101, label %32, !dbg !5432

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !5433
  %34 = load i32, i32* %33, align 4, !dbg !5433
  %35 = icmp ugt i32 %34, 131071, !dbg !5434
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !5435
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !5435
  br i1 %39, label %101, label %40, !dbg !5435

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5436
  %42 = load volatile i32, i32* %41, align 4, !dbg !5436
  %43 = icmp eq i32 %42, 1, !dbg !5438
  br i1 %43, label %44, label %101, !dbg !5439

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5440
  call void @llvm.dbg.value(metadata i32 %45, metadata !5403, metadata !DIExpression()), !dbg !5406
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5441
  call void @llvm.dbg.value(metadata i32 %46, metadata !5404, metadata !DIExpression()), !dbg !5406
  %47 = tail call i32 @vdma_init(i32 noundef %45) #20, !dbg !5442
  call void @llvm.dbg.value(metadata i32 %47, metadata !5405, metadata !DIExpression()), !dbg !5406
  %48 = icmp eq i32 %47, 0, !dbg !5443
  br i1 %48, label %50, label %49, !dbg !5445

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5446
  unreachable, !dbg !5446

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !5448
  %52 = ptrtoint i8* %51 to i32, !dbg !5449
  %53 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 0, !dbg !5450
  store i32 %52, i32* %53, align 4, !dbg !5451
  %54 = load i32, i32* %15, align 4, !dbg !5452
  %55 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 1, !dbg !5453
  store i32 %54, i32* %55, align 4, !dbg !5454
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !5455
  call void @llvm.dbg.value(metadata i32 %56, metadata !5405, metadata !DIExpression()), !dbg !5406
  %57 = icmp eq i32 %56, 0, !dbg !5456
  br i1 %57, label %59, label %58, !dbg !5458

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5459
  unreachable, !dbg !5459

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !5461
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #20, !dbg !5462
  call void @llvm.dbg.value(metadata i32 %61, metadata !5405, metadata !DIExpression()), !dbg !5406
  %62 = icmp eq i32 %61, 0, !dbg !5463
  br i1 %62, label %64, label %63, !dbg !5465

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5466
  unreachable, !dbg !5466

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #20, !dbg !5468
  call void @llvm.dbg.value(metadata i32 %65, metadata !5405, metadata !DIExpression()), !dbg !5406
  %66 = icmp eq i32 %65, 0, !dbg !5469
  br i1 %66, label %68, label %67, !dbg !5471

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5472
  unreachable, !dbg !5472

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !5474
  %70 = ptrtoint i8* %69 to i32, !dbg !5475
  store i32 %70, i32* %53, align 4, !dbg !5476
  %71 = load i32, i32* %25, align 4, !dbg !5477
  store i32 %71, i32* %55, align 4, !dbg !5478
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !5479
  call void @llvm.dbg.value(metadata i32 %72, metadata !5405, metadata !DIExpression()), !dbg !5406
  %73 = icmp eq i32 %72, 0, !dbg !5480
  br i1 %73, label %75, label %74, !dbg !5482

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5483
  unreachable, !dbg !5483

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !5485
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #20, !dbg !5486
  call void @llvm.dbg.value(metadata i32 %77, metadata !5405, metadata !DIExpression()), !dbg !5406
  %78 = icmp eq i32 %77, 0, !dbg !5487
  br i1 %78, label %80, label %79, !dbg !5489

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5490
  unreachable, !dbg !5490

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !5492
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #20, !dbg !5493
  call void @llvm.dbg.value(metadata i32 %82, metadata !5405, metadata !DIExpression()), !dbg !5406
  %83 = icmp eq i32 %82, 0, !dbg !5494
  br i1 %83, label %85, label %84, !dbg !5496

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5497
  unreachable, !dbg !5497

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #20, !dbg !5499
  call void @llvm.dbg.value(metadata i32 %86, metadata !5396, metadata !DIExpression()), !dbg !5406
  %87 = load i8*, i8** %7, align 4, !dbg !5500
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !5501
  store i8* %87, i8** %88, align 4, !dbg !5502
  %89 = load i32, i32* %15, align 4, !dbg !5503
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5504
  store i32 %89, i32* %90, align 4, !dbg !5505
  %91 = load i32, i32* %19, align 4, !dbg !5506
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !5507
  store i32 %91, i32* %92, align 4, !dbg !5508
  %93 = load i32, i32* %33, align 4, !dbg !5509
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !5510
  store i32 %93, i32* %94, align 4, !dbg !5511
  %95 = load i8*, i8** %11, align 4, !dbg !5512
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !5513
  store i8* %95, i8** %96, align 4, !dbg !5514
  %97 = load i32, i32* %25, align 4, !dbg !5515
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !5516
  store i32 %97, i32* %98, align 4, !dbg !5517
  %99 = load i32, i32* %29, align 4, !dbg !5518
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !5519
  store i32 %99, i32* %100, align 4, !dbg !5520
  call void @restore_interrupt_mask(i32 noundef %86) #20, !dbg !5521
  br label %101, !dbg !5522

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !5406
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5523
  ret i32 %102, !dbg !5523
}

; Function Attrs: optsize
declare dso_local i32 @vdma_init(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_configure(i32 noundef, %struct.hal_cache_region_config_t* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_threshold(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_alert_length(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5524 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5583, metadata !DIExpression()), !dbg !5598
  call void @llvm.dbg.value(metadata i32 %1, metadata !5584, metadata !DIExpression()), !dbg !5598
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !5593, metadata !DIExpression()), !dbg !5599
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !5600
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5600
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !5597, metadata !DIExpression()), !dbg !5601
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !5601
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !5601
  store i32 1, i32* %5, align 4, !dbg !5601
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !5601
  store i32 1, i32* %6, align 4, !dbg !5601
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !5601
  store i32 1, i32* %7, align 4, !dbg !5601
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !5601
  store i32 1, i32* %8, align 4, !dbg !5601
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !5601
  store i32 1, i32* %9, align 4, !dbg !5601
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !5602
  store volatile i32 0, i32* %10, align 4, !dbg !5603
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !5604
  store volatile i32 0, i32* %11, align 4, !dbg !5605
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !5606
  store volatile i32 0, i32* %12, align 4, !dbg !5607
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !5608
  br i1 %13, label %14, label %17, !dbg !5610

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !5611
  %16 = mul i32 %15, 1000, !dbg !5613
  call void @llvm.dbg.value(metadata i32 %16, metadata !5585, metadata !DIExpression()), !dbg !5598
  br label %17, !dbg !5614

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !5615
  call void @llvm.dbg.value(metadata i32 %18, metadata !5585, metadata !DIExpression()), !dbg !5598
  %19 = shl i32 %1, 8, !dbg !5616
  %20 = udiv i32 %18, %19, !dbg !5617
  call void @llvm.dbg.value(metadata i32 %20, metadata !5586, metadata !DIExpression()), !dbg !5598
  %21 = mul i32 %18, 10, !dbg !5618
  %22 = udiv i32 %21, %19, !dbg !5619
  %23 = urem i32 %22, 10, !dbg !5620
  call void @llvm.dbg.value(metadata i32 %23, metadata !5587, metadata !DIExpression()), !dbg !5598
  %24 = icmp ne i32 %23, 0, !dbg !5621
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !5623
  %27 = zext i1 %26 to i32, !dbg !5623
  %28 = add i32 %20, %27, !dbg !5623
  call void @llvm.dbg.value(metadata i32 %28, metadata !5586, metadata !DIExpression()), !dbg !5598
  call void @llvm.dbg.value(metadata i32 %28, metadata !5589, metadata !DIExpression()), !dbg !5598
  call void @llvm.dbg.value(metadata i32 undef, metadata !5590, metadata !DIExpression()), !dbg !5598
  br label %29, !dbg !5624

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !5598
  %31 = mul i32 %30, %1, !dbg !5598
  %32 = udiv i32 %18, %31, !dbg !5598
  call void @llvm.dbg.value(metadata i32 %32, metadata !5590, metadata !DIExpression()), !dbg !5598
  call void @llvm.dbg.value(metadata i32 %30, metadata !5589, metadata !DIExpression()), !dbg !5598
  %33 = icmp ugt i32 %32, 256, !dbg !5625
  %34 = add i32 %30, 1, !dbg !5626
  call void @llvm.dbg.value(metadata i32 %34, metadata !5589, metadata !DIExpression()), !dbg !5598
  call void @llvm.dbg.value(metadata i32 undef, metadata !5590, metadata !DIExpression()), !dbg !5598
  br i1 %33, label %29, label %35, !dbg !5624, !llvm.loop !5628

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !5630
  %37 = urem i32 %36, 10, !dbg !5631
  call void @llvm.dbg.value(metadata i32 %37, metadata !5588, metadata !DIExpression()), !dbg !5598
  %38 = add nsw i32 %32, -1, !dbg !5632
  call void @llvm.dbg.value(metadata i32 %38, metadata !5590, metadata !DIExpression()), !dbg !5598
  %39 = add nsw i32 %32, -2, !dbg !5633
  %40 = lshr i32 %39, 1, !dbg !5634
  call void @llvm.dbg.value(metadata i32 %40, metadata !5591, metadata !DIExpression()), !dbg !5598
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !5635
  store volatile i32 3, i32* %41, align 4, !dbg !5636
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5637
  %43 = load volatile i32, i32* %42, align 4, !dbg !5637
  call void @llvm.dbg.value(metadata i32 %43, metadata !5592, metadata !DIExpression()), !dbg !5598
  %44 = or i32 %43, 128, !dbg !5638
  store volatile i32 %44, i32* %42, align 4, !dbg !5639
  %45 = and i32 %30, 255, !dbg !5640
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5641
  store volatile i32 %45, i32* %46, align 4, !dbg !5642
  %47 = lshr i32 %30, 8, !dbg !5643
  %48 = and i32 %47, 255, !dbg !5644
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5645
  store volatile i32 %48, i32* %49, align 4, !dbg !5646
  store volatile i32 %43, i32* %42, align 4, !dbg !5647
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !5648
  store volatile i32 %38, i32* %50, align 4, !dbg !5649
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !5650
  store volatile i32 %40, i32* %51, align 4, !dbg !5651
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !5652
  %53 = load i32, i32* %52, align 4, !dbg !5652
  store volatile i32 %53, i32* %11, align 4, !dbg !5653
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !5654
  %55 = load i32, i32* %54, align 4, !dbg !5654
  store volatile i32 %55, i32* %12, align 4, !dbg !5655
  %56 = icmp ugt i32 %1, 2999999, !dbg !5656
  br i1 %56, label %57, label %59, !dbg !5658

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !5659
  store volatile i32 18, i32* %58, align 4, !dbg !5661
  br label %59, !dbg !5662

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5663
  ret void, !dbg !5663
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !5664 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5668, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.value(metadata i32 %1, metadata !5669, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.value(metadata i32 %2, metadata !5670, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.value(metadata i32 %3, metadata !5671, metadata !DIExpression()), !dbg !5673
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5674
  %6 = load volatile i32, i32* %5, align 4, !dbg !5674
  call void @llvm.dbg.value(metadata i32 %6, metadata !5672, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5673
  store volatile i32 128, i32* %5, align 4, !dbg !5675
  %7 = trunc i32 %6 to i16, !dbg !5676
  %8 = and i16 %7, -4, !dbg !5676
  call void @llvm.dbg.value(metadata i16 %7, metadata !5672, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !5673
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !5677

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !5678
  call void @llvm.dbg.value(metadata i16 %10, metadata !5672, metadata !DIExpression()), !dbg !5673
  br label %15, !dbg !5680

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !5681
  call void @llvm.dbg.value(metadata i16 %12, metadata !5672, metadata !DIExpression()), !dbg !5673
  br label %15, !dbg !5682

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !5683
  call void @llvm.dbg.value(metadata i16 %14, metadata !5672, metadata !DIExpression()), !dbg !5673
  br label %15, !dbg !5684

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !5673
  call void @llvm.dbg.value(metadata i16 %16, metadata !5672, metadata !DIExpression()), !dbg !5673
  %17 = and i16 %16, -61, !dbg !5685
  call void @llvm.dbg.value(metadata i16 %16, metadata !5672, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !5673
  %18 = icmp eq i32 %2, 1, !dbg !5686
  %19 = select i1 %18, i16 4, i16 0, !dbg !5686
  %20 = or i16 %17, %19, !dbg !5686
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !5672, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !5673
  call void @llvm.dbg.value(metadata i16 %20, metadata !5672, metadata !DIExpression()), !dbg !5673
  %21 = icmp eq i32 %3, 2, !dbg !5687
  %22 = or i16 %20, 16, !dbg !5687
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !5687
  call void @llvm.dbg.value(metadata i16 %23, metadata !5672, metadata !DIExpression()), !dbg !5673
  %24 = zext i16 %23 to i32, !dbg !5688
  store volatile i32 %24, i32* %5, align 4, !dbg !5689
  ret void, !dbg !5690
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !5691 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5695, metadata !DIExpression()), !dbg !5698
  call void @llvm.dbg.value(metadata i8 %1, metadata !5696, metadata !DIExpression()), !dbg !5698
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !5699

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !5700
  call void @llvm.dbg.value(metadata i32 %5, metadata !5697, metadata !DIExpression()), !dbg !5698
  %6 = and i32 %5, 32, !dbg !5702
  %7 = icmp eq i32 %6, 0, !dbg !5702
  br i1 %7, label %4, label %8, !dbg !5704, !llvm.loop !5705

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !5707
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5709
  store volatile i32 %9, i32* %10, align 4, !dbg !5710
  ret void, !dbg !5711
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5712 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5716, metadata !DIExpression()), !dbg !5719
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !5720

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !5721
  call void @llvm.dbg.value(metadata i32 %4, metadata !5717, metadata !DIExpression()), !dbg !5719
  %5 = and i32 %4, 1, !dbg !5723
  %6 = icmp eq i32 %5, 0, !dbg !5723
  br i1 %6, label %3, label %7, !dbg !5725, !llvm.loop !5726

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5728
  %9 = load volatile i32, i32* %8, align 4, !dbg !5728
  %10 = trunc i32 %9 to i8, !dbg !5730
  call void @llvm.dbg.value(metadata i8 %10, metadata !5718, metadata !DIExpression()), !dbg !5719
  ret i8 %10, !dbg !5731
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5732 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5736, metadata !DIExpression()), !dbg !5739
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5740
  %3 = load volatile i32, i32* %2, align 4, !dbg !5740
  call void @llvm.dbg.value(metadata i32 %3, metadata !5737, metadata !DIExpression()), !dbg !5739
  %4 = and i32 %3, 1, !dbg !5741
  %5 = icmp eq i32 %4, 0, !dbg !5741
  br i1 %5, label %9, label %6, !dbg !5743

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5744
  %8 = load volatile i32, i32* %7, align 4, !dbg !5744
  call void @llvm.dbg.value(metadata i32 %8, metadata !5738, metadata !DIExpression()), !dbg !5739
  br label %9, !dbg !5746

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !5747
  call void @llvm.dbg.value(metadata i32 %10, metadata !5738, metadata !DIExpression()), !dbg !5739
  ret i32 %10, !dbg !5748
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5749 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5753, metadata !DIExpression()), !dbg !5756
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5757
  %3 = load volatile i32, i32* %2, align 4, !dbg !5757
  call void @llvm.dbg.value(metadata i32 %3, metadata !5755, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5756
  store volatile i32 191, i32* %2, align 4, !dbg !5758
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5759
  %5 = load volatile i32, i32* %4, align 4, !dbg !5759
  call void @llvm.dbg.value(metadata i32 %5, metadata !5754, metadata !DIExpression()), !dbg !5756
  %6 = and i32 %5, 65343, !dbg !5760
  %7 = or i32 %6, 192, !dbg !5760
  call void @llvm.dbg.value(metadata i32 %5, metadata !5754, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !5756
  store volatile i32 %7, i32* %4, align 4, !dbg !5761
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5762
  store volatile i32 0, i32* %8, align 4, !dbg !5763
  store volatile i32 0, i32* %2, align 4, !dbg !5764
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5765
  store volatile i32 2, i32* %9, align 4, !dbg !5766
  %10 = and i32 %3, 65535, !dbg !5767
  store volatile i32 %10, i32* %2, align 4, !dbg !5768
  ret void, !dbg !5769
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !5770 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5774, metadata !DIExpression()), !dbg !5780
  call void @llvm.dbg.value(metadata i8 %1, metadata !5775, metadata !DIExpression()), !dbg !5780
  call void @llvm.dbg.value(metadata i8 %2, metadata !5776, metadata !DIExpression()), !dbg !5780
  call void @llvm.dbg.value(metadata i8 %3, metadata !5777, metadata !DIExpression()), !dbg !5780
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5781
  %6 = load volatile i32, i32* %5, align 4, !dbg !5781
  call void @llvm.dbg.value(metadata i32 %6, metadata !5779, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5780
  store volatile i32 191, i32* %5, align 4, !dbg !5782
  %7 = zext i8 %1 to i32, !dbg !5783
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5784
  store volatile i32 %7, i32* %8, align 4, !dbg !5785
  %9 = zext i8 %2 to i32, !dbg !5786
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !5787
  store volatile i32 %9, i32* %10, align 4, !dbg !5788
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5789
  %12 = load volatile i32, i32* %11, align 4, !dbg !5789
  call void @llvm.dbg.value(metadata i32 %12, metadata !5778, metadata !DIExpression()), !dbg !5780
  %13 = and i32 %12, 65509, !dbg !5790
  %14 = or i32 %13, 26, !dbg !5790
  call void @llvm.dbg.value(metadata i32 %12, metadata !5778, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !5780
  store volatile i32 %14, i32* %11, align 4, !dbg !5791
  %15 = zext i8 %3 to i32, !dbg !5792
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !5793
  store volatile i32 %15, i32* %16, align 4, !dbg !5794
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5795
  store volatile i32 1, i32* %17, align 4, !dbg !5796
  %18 = and i32 %6, 65535, !dbg !5797
  store volatile i32 %18, i32* %5, align 4, !dbg !5798
  ret void, !dbg !5799
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5800 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5802, metadata !DIExpression()), !dbg !5804
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5805
  %3 = load volatile i32, i32* %2, align 4, !dbg !5805
  call void @llvm.dbg.value(metadata i32 %3, metadata !5803, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5804
  store volatile i32 191, i32* %2, align 4, !dbg !5806
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5807
  store volatile i32 0, i32* %4, align 4, !dbg !5808
  store volatile i32 0, i32* %2, align 4, !dbg !5809
  %5 = and i32 %3, 65535, !dbg !5810
  store volatile i32 %5, i32* %2, align 4, !dbg !5811
  ret void, !dbg !5812
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5813 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5815, metadata !DIExpression()), !dbg !5818
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5819
  %3 = load volatile i32, i32* %2, align 4, !dbg !5819
  call void @llvm.dbg.value(metadata i32 %3, metadata !5817, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5818
  store volatile i32 191, i32* %2, align 4, !dbg !5820
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5821
  %5 = load volatile i32, i32* %4, align 4, !dbg !5821
  call void @llvm.dbg.value(metadata i32 %5, metadata !5816, metadata !DIExpression()), !dbg !5818
  %6 = and i32 %5, 65519, !dbg !5822
  %7 = or i32 %6, 16, !dbg !5822
  call void @llvm.dbg.value(metadata i32 %5, metadata !5816, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !5818
  store volatile i32 %7, i32* %4, align 4, !dbg !5823
  store volatile i32 0, i32* %2, align 4, !dbg !5824
  store volatile i32 135, i32* %4, align 4, !dbg !5825
  %8 = and i32 %3, 65535, !dbg !5826
  store volatile i32 %8, i32* %2, align 4, !dbg !5827
  ret void, !dbg !5828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5829 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5831, metadata !DIExpression()), !dbg !5834
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5835
  %3 = load volatile i32, i32* %2, align 4, !dbg !5835
  call void @llvm.dbg.value(metadata i32 %3, metadata !5833, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5834
  %4 = load volatile i32, i32* %2, align 4, !dbg !5836
  %5 = and i32 %4, -129, !dbg !5836
  store volatile i32 %5, i32* %2, align 4, !dbg !5836
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5837
  %7 = load volatile i32, i32* %6, align 4, !dbg !5837
  call void @llvm.dbg.value(metadata i32 %7, metadata !5832, metadata !DIExpression()), !dbg !5834
  %8 = and i32 %7, 65530, !dbg !5838
  %9 = or i32 %8, 5, !dbg !5838
  call void @llvm.dbg.value(metadata i32 %7, metadata !5832, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !5834
  store volatile i32 %9, i32* %6, align 4, !dbg !5839
  %10 = and i32 %3, 65535, !dbg !5840
  %11 = load volatile i32, i32* %2, align 4, !dbg !5841
  %12 = and i32 %10, %11, !dbg !5841
  store volatile i32 %12, i32* %2, align 4, !dbg !5841
  ret void, !dbg !5842
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5843 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5847, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.value(metadata i32 %1, metadata !5848, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.value(metadata i16 145, metadata !5849, metadata !DIExpression()), !dbg !5850
  %3 = icmp eq i32 %1, 0, !dbg !5851
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !5849, metadata !DIExpression()), !dbg !5850
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5853
  store volatile i32 %4, i32* %5, align 4, !dbg !5854
  ret void, !dbg !5855
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5856 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5861, metadata !DIExpression()), !dbg !5865
  call void @llvm.dbg.value(metadata i32 0, metadata !5864, metadata !DIExpression()), !dbg !5865
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5866
  %3 = load volatile i32, i32* %2, align 4, !dbg !5866
  call void @llvm.dbg.value(metadata i32 %3, metadata !5862, metadata !DIExpression()), !dbg !5865
  %4 = and i32 %3, 1, !dbg !5867
  %5 = icmp eq i32 %4, 0, !dbg !5867
  br i1 %5, label %6, label %16, !dbg !5869

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !5870
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !5871

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !5864, metadata !DIExpression()), !dbg !5865
  br label %16, !dbg !5872

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5874
  %11 = load volatile i32, i32* %10, align 4, !dbg !5874
  call void @llvm.dbg.value(metadata i32 %11, metadata !5863, metadata !DIExpression()), !dbg !5865
  %12 = and i32 %11, 16, !dbg !5875
  %13 = icmp eq i32 %12, 0, !dbg !5875
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !5864, metadata !DIExpression()), !dbg !5865
  br label %16, !dbg !5877

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !5865
  ret i32 %17, !dbg !5878
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5879 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5883, metadata !DIExpression()), !dbg !5886
  call void @llvm.dbg.value(metadata i32 0, metadata !5885, metadata !DIExpression()), !dbg !5886
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5887
  %3 = load volatile i32, i32* %2, align 4, !dbg !5887
  call void @llvm.dbg.value(metadata i32 %3, metadata !5884, metadata !DIExpression()), !dbg !5886
  %4 = and i32 %3, 14, !dbg !5888
  %5 = icmp eq i32 %4, 0, !dbg !5888
  %6 = sext i1 %5 to i32, !dbg !5890
  call void @llvm.dbg.value(metadata i32 %6, metadata !5885, metadata !DIExpression()), !dbg !5886
  ret i32 %6, !dbg !5891
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5892 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5894, metadata !DIExpression()), !dbg !5896
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !5897
  %3 = load volatile i32, i32* %2, align 4, !dbg !5897
  call void @llvm.dbg.value(metadata i32 %3, metadata !5895, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5896
  call void @llvm.dbg.value(metadata i32 %3, metadata !5895, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5896
  ret void, !dbg !5898
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5899 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5901, metadata !DIExpression()), !dbg !5902
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5903
  store volatile i32 191, i32* %2, align 4, !dbg !5904
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5905
  store volatile i32 16, i32* %3, align 4, !dbg !5906
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5907
  store volatile i32 0, i32* %4, align 4, !dbg !5908
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !5909
  store volatile i32 0, i32* %5, align 4, !dbg !5910
  store volatile i32 128, i32* %2, align 4, !dbg !5911
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5912
  store volatile i32 0, i32* %6, align 4, !dbg !5913
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5914
  store volatile i32 0, i32* %7, align 4, !dbg !5915
  store volatile i32 0, i32* %2, align 4, !dbg !5916
  store volatile i32 0, i32* %7, align 4, !dbg !5917
  store volatile i32 0, i32* %3, align 4, !dbg !5918
  store volatile i32 191, i32* %2, align 4, !dbg !5919
  store volatile i32 0, i32* %3, align 4, !dbg !5920
  store volatile i32 0, i32* %2, align 4, !dbg !5921
  store volatile i32 0, i32* %4, align 4, !dbg !5922
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !5923
  store volatile i32 0, i32* %8, align 4, !dbg !5924
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !5925
  store volatile i32 0, i32* %9, align 4, !dbg !5926
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !5927
  store volatile i32 0, i32* %10, align 4, !dbg !5928
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !5929
  store volatile i32 0, i32* %11, align 4, !dbg !5930
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !5931
  store volatile i32 0, i32* %12, align 4, !dbg !5932
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !5933
  store volatile i32 0, i32* %13, align 4, !dbg !5934
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !5935
  store volatile i32 0, i32* %14, align 4, !dbg !5936
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !5937
  store volatile i32 0, i32* %15, align 4, !dbg !5938
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !5939
  store volatile i32 0, i32* %16, align 4, !dbg !5940
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5941
  store volatile i32 0, i32* %17, align 4, !dbg !5942
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !5943
  store volatile i32 0, i32* %18, align 4, !dbg !5944
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !5945
  store volatile i32 0, i32* %19, align 4, !dbg !5946
  store volatile i32 0, i32* %13, align 4, !dbg !5947
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !5948
  store volatile i32 0, i32* %20, align 4, !dbg !5949
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !5950
  store volatile i32 0, i32* %21, align 4, !dbg !5951
  ret void, !dbg !5952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5953 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5955, metadata !DIExpression()), !dbg !5956
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !5957

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !5958
  %5 = and i32 %4, 64, !dbg !5959
  %6 = icmp eq i32 %5, 0, !dbg !5960
  br i1 %6, label %3, label %7, !dbg !5957, !llvm.loop !5961

7:                                                ; preds = %3
  ret void, !dbg !5963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !5964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5968, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.value(metadata i32 %1, metadata !5969, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.value(metadata i32 15, metadata !5970, metadata !DIExpression()), !dbg !5971
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !5972

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !5973
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !5976
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !5978
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !5980
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !5971
  call void @llvm.dbg.value(metadata i32 %16, metadata !5970, metadata !DIExpression()), !dbg !5971
  ret i32 %16, !dbg !5982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #6 !dbg !5983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5993, metadata !DIExpression()), !dbg !5995
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !5994, metadata !DIExpression()), !dbg !5995
  %3 = add i32 %0, -8, !dbg !5996
  %4 = icmp ult i32 %3, 8, !dbg !5996
  br i1 %4, label %5, label %12, !dbg !5996

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !5996
  %7 = load i8, i8* %6, align 1, !dbg !5996
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.2, i32 0, i32 %3, !dbg !5996
  %9 = load i32, i32* %8, align 4, !dbg !5996
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !5997
  store i8 %7, i8* %10, align 4, !dbg !5997
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !5997
  store i32 %9, i32* %11, align 4, !dbg !5997
  br label %12, !dbg !5999

12:                                               ; preds = %2, %5
  ret void, !dbg !5999
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6000 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6004, metadata !DIExpression()), !dbg !6005
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6006
  store volatile i32 3, i32* %2, align 4, !dbg !6007
  ret void, !dbg !6008
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !6009 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6011, metadata !DIExpression()), !dbg !6015
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !6014, metadata !DIExpression()), !dbg !6015
  %2 = add i32 %0, -30, !dbg !6016
  %3 = icmp ult i32 %2, 3, !dbg !6016
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !6016
  call void @llvm.dbg.value(metadata i32 %5, metadata !6012, metadata !DIExpression()), !dbg !6015
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !6017
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !6017
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !6014, metadata !DIExpression()), !dbg !6015
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #20, !dbg !6018
  call void @llvm.dbg.value(metadata i32 %8, metadata !6013, metadata !DIExpression()), !dbg !6015
  switch i32 %8, label %12 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %13
    i32 0, label %13
    i32 3, label %11
  ], !dbg !6019

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #20, !dbg !6020
  br label %13, !dbg !6022

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #20, !dbg !6023
  br label %13, !dbg !6024

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #20, !dbg !6025
  br label %13, !dbg !6026

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.81, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.82, i32 0, i32 0)) #23, !dbg !6027
  unreachable, !dbg !6027

13:                                               ; preds = %11, %1, %1, %10, %9
  ret void, !dbg !6028
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_wdt_init(%struct.hal_cache_region_config_t* noundef readonly %0) local_unnamed_addr #0 !dbg !6029 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !6040, metadata !DIExpression()), !dbg !6041
  %2 = icmp eq %struct.hal_cache_region_config_t* %0, null, !dbg !6042
  br i1 %2, label %21, label %3, !dbg !6044

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !6045
  %5 = load i32, i32* %4, align 4, !dbg !6045
  %6 = icmp ult i32 %5, 2, !dbg !6046
  br i1 %6, label %7, label %21, !dbg !6046

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 1, !dbg !6047
  %9 = load i32, i32* %8, align 4, !dbg !6047
  %10 = icmp ugt i32 %9, 30, !dbg !6049
  br i1 %10, label %21, label %11, !dbg !6050

11:                                               ; preds = %7
  store void (i32)* null, void (i32)** @s_hal_wdt_callback, align 4, !dbg !6051
  tail call void @wdt_set_length(i32 noundef %9) #20, !dbg !6052
  %12 = load i32, i32* %4, align 4, !dbg !6053
  tail call void @wdt_set_mode_register_by_bit(i32 noundef 3, i32 noundef %12) #20, !dbg !6054
  %13 = load i32, i32* %4, align 4, !dbg !6055
  %14 = icmp eq i32 %13, 1, !dbg !6057
  br i1 %14, label %15, label %18, !dbg !6058

15:                                               ; preds = %11
  %16 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 41, void (i32)* noundef bitcast (void ()* @hal_wdt_isr to void (i32)*)) #20, !dbg !6059
  %17 = tail call i32 @hal_nvic_enable_irq(i32 noundef 41) #20, !dbg !6061
  br label %18, !dbg !6062

18:                                               ; preds = %15, %11
  %19 = load volatile i32, i32* inttoptr (i32 -1576730592 to i32*), align 32, !dbg !6063
  %20 = or i32 %19, 1, !dbg !6063
  store volatile i32 %20, i32* inttoptr (i32 -1576730592 to i32*), align 32, !dbg !6063
  br label %21, !dbg !6064

21:                                               ; preds = %3, %7, %1, %18
  %22 = phi i32 [ 0, %18 ], [ -2, %3 ], [ -2, %1 ], [ -2, %7 ], !dbg !6041
  ret i32 %22, !dbg !6065
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_wdt_isr() #0 !dbg !6066 {
  %1 = tail call i32 @wdt_get_reset_status() #20, !dbg !6069
  call void @llvm.dbg.value(metadata i32 %1, metadata !6068, metadata !DIExpression()), !dbg !6070
  %2 = load void (i32)*, void (i32)** @s_hal_wdt_callback, align 4, !dbg !6071
  %3 = icmp eq void (i32)* %2, null, !dbg !6073
  br i1 %3, label %5, label %4, !dbg !6074

4:                                                ; preds = %0
  tail call void %2(i32 noundef %1) #20, !dbg !6075
  br label %5, !dbg !6077

5:                                                ; preds = %0, %4
  %6 = load volatile i32, i32* inttoptr (i32 -1576730592 to i32*), align 32, !dbg !6078
  %7 = or i32 %6, 16, !dbg !6078
  store volatile i32 %7, i32* inttoptr (i32 -1576730592 to i32*), align 32, !dbg !6078
  %8 = load volatile i32, i32* inttoptr (i32 -1576730592 to i32*), align 32, !dbg !6078
  %9 = and i32 %8, -17, !dbg !6078
  store volatile i32 %9, i32* inttoptr (i32 -1576730592 to i32*), align 32, !dbg !6078
  ret void, !dbg !6080
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_wdt_deinit() local_unnamed_addr #0 !dbg !6081 {
  tail call void @wdt_set_mode_register_by_bit(i32 noundef 0, i32 noundef 0) #20, !dbg !6084
  store void (i32)* null, void (i32)** @s_hal_wdt_callback, align 4, !dbg !6085
  ret i32 0, !dbg !6086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void (i32)* @hal_wdt_register_callback(void (i32)* noundef %0) local_unnamed_addr #7 !dbg !6087 {
  call void @llvm.dbg.value(metadata void (i32)* %0, metadata !6091, metadata !DIExpression()), !dbg !6093
  %2 = load void (i32)*, void (i32)** @s_hal_wdt_callback, align 4, !dbg !6094
  call void @llvm.dbg.value(metadata void (i32)* %2, metadata !6092, metadata !DIExpression()), !dbg !6093
  store void (i32)* %0, void (i32)** @s_hal_wdt_callback, align 4, !dbg !6095
  ret void (i32)* %2, !dbg !6096
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_wdt_feed(i32 noundef %0) local_unnamed_addr #0 !dbg !6097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6101, metadata !DIExpression()), !dbg !6102
  %2 = icmp eq i32 %0, -559035650, !dbg !6103
  br i1 %2, label %3, label %5, !dbg !6105

3:                                                ; preds = %1
  store volatile i32 6513, i32* inttoptr (i32 -1576730616 to i32*), align 8, !dbg !6106
  %4 = tail call i32 @hal_gpt_delay_us(i32 noundef 123) #20, !dbg !6107
  br label %5, !dbg !6108

5:                                                ; preds = %1, %3
  %6 = phi i32 [ 0, %3 ], [ -1, %1 ], !dbg !6102
  ret i32 %6, !dbg !6109
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_wdt_software_reset() local_unnamed_addr #2 !dbg !6110 {
  store volatile i32 4617, i32* inttoptr (i32 -1576730596 to i32*), align 4, !dbg !6111
  ret i32 0, !dbg !6112
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_wdt_enable(i32 noundef %0) local_unnamed_addr #0 !dbg !6113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6115, metadata !DIExpression()), !dbg !6116
  %2 = icmp eq i32 %0, -889275714, !dbg !6117
  br i1 %2, label %3, label %4, !dbg !6119

3:                                                ; preds = %1
  tail call void @wdt_set_mode_register_by_bit(i32 noundef 0, i32 noundef 1) #20, !dbg !6120
  tail call void @wdt_set_mode_register_by_bit(i32 noundef 5, i32 noundef 1) #20, !dbg !6121
  store volatile i32 6513, i32* inttoptr (i32 -1576730616 to i32*), align 8, !dbg !6122
  br label %4, !dbg !6123

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -1, %1 ], !dbg !6116
  ret i32 %5, !dbg !6124
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_wdt_disable(i32 noundef %0) local_unnamed_addr #0 !dbg !6125 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6127, metadata !DIExpression()), !dbg !6128
  %2 = icmp eq i32 %0, -889323419, !dbg !6129
  br i1 %2, label %3, label %4, !dbg !6131

3:                                                ; preds = %1
  tail call void @wdt_set_mode_register_by_bit(i32 noundef 0, i32 noundef 0) #20, !dbg !6132
  tail call void @wdt_set_mode_register_by_bit(i32 noundef 5, i32 noundef 0) #20, !dbg !6133
  br label %4, !dbg !6134

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -1, %1 ], !dbg !6128
  ret i32 %5, !dbg !6135
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_wdt_get_reset_status() local_unnamed_addr #0 !dbg !6136 {
  %1 = tail call i32 @wdt_get_reset_status() #20, !dbg !6141
  call void @llvm.dbg.value(metadata i32 %1, metadata !6140, metadata !DIExpression()), !dbg !6142
  ret i32 %1, !dbg !6143
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i1 @hal_wdt_get_enable_status() local_unnamed_addr #11 !dbg !6144 {
  call void @llvm.dbg.value(metadata i8 0, metadata !6148, metadata !DIExpression()), !dbg !6149
  %1 = load volatile i32, i32* inttoptr (i32 -1576730624 to i32*), align 65536, !dbg !6150
  %2 = and i32 %1, 1, !dbg !6150
  %3 = icmp ne i32 %2, 0, !dbg !6150
  call void @llvm.dbg.value(metadata i1 %3, metadata !6148, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6149
  ret i1 %3, !dbg !6151
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_wdt_get_mode() local_unnamed_addr #11 !dbg !6152 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6156, metadata !DIExpression()), !dbg !6157
  %1 = load volatile i32, i32* inttoptr (i32 -1576730624 to i32*), align 65536, !dbg !6158
  %2 = lshr i32 %1, 3, !dbg !6158
  %3 = and i32 %2, 1, !dbg !6158
  call void @llvm.dbg.value(metadata i32 %3, metadata !6156, metadata !DIExpression()), !dbg !6157
  ret i32 %3, !dbg !6159
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @wdt_set_length(i32 noundef %0) local_unnamed_addr #2 !dbg !6160 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6164, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.value(metadata i32 0, metadata !6165, metadata !DIExpression()), !dbg !6166
  %2 = mul i32 %0, 10000, !dbg !6167
  %3 = udiv i32 %2, 156, !dbg !6168
  call void @llvm.dbg.value(metadata i32 %3, metadata !6165, metadata !DIExpression()), !dbg !6166
  %4 = shl nuw nsw i32 %3, 5, !dbg !6169
  call void @llvm.dbg.value(metadata i32 %4, metadata !6165, metadata !DIExpression()), !dbg !6166
  %5 = or i32 %4, 8, !dbg !6170
  call void @llvm.dbg.value(metadata i32 %5, metadata !6165, metadata !DIExpression()), !dbg !6166
  store volatile i32 %5, i32* inttoptr (i32 -1576730620 to i32*), align 4, !dbg !6171
  store volatile i32 6513, i32* inttoptr (i32 -1576730616 to i32*), align 8, !dbg !6172
  ret void, !dbg !6173
}

; Function Attrs: noinline nounwind optsize
define dso_local void @wdt_set_mode_register_by_bit(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6174 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6178, metadata !DIExpression()), !dbg !6181
  call void @llvm.dbg.value(metadata i32 %1, metadata !6179, metadata !DIExpression()), !dbg !6181
  call void @llvm.dbg.value(metadata i32 0, metadata !6180, metadata !DIExpression()), !dbg !6181
  %3 = load volatile i32, i32* inttoptr (i32 -1576730624 to i32*), align 65536, !dbg !6182
  call void @llvm.dbg.value(metadata i32 %3, metadata !6180, metadata !DIExpression()), !dbg !6181
  %4 = icmp eq i32 %1, 0, !dbg !6183
  %5 = shl nuw i32 1, %0, !dbg !6185
  %6 = xor i32 %5, -1, !dbg !6186
  %7 = and i32 %3, %6, !dbg !6186
  %8 = or i32 %3, %5, !dbg !6186
  %9 = select i1 %4, i32 %7, i32 %8, !dbg !6186
  call void @llvm.dbg.value(metadata i32 %9, metadata !6180, metadata !DIExpression()), !dbg !6181
  %10 = and i32 %9, 56831, !dbg !6187
  call void @llvm.dbg.value(metadata i32 %9, metadata !6180, metadata !DIExpression(DW_OP_constu, 56831, DW_OP_and, DW_OP_stack_value)), !dbg !6181
  %11 = or i32 %10, 8704, !dbg !6188
  call void @llvm.dbg.value(metadata i32 %11, metadata !6180, metadata !DIExpression()), !dbg !6181
  store volatile i32 %11, i32* inttoptr (i32 -1576730624 to i32*), align 65536, !dbg !6189
  %12 = tail call i32 @hal_gpt_delay_us(i32 noundef 35) #20, !dbg !6190
  ret void, !dbg !6191
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @wdt_get_reset_status() local_unnamed_addr #11 !dbg !6192 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6194, metadata !DIExpression()), !dbg !6195
  %1 = load volatile i32, i32* inttoptr (i32 -1576730612 to i32*), align 4, !dbg !6196
  call void @llvm.dbg.value(metadata i32 %1, metadata !6194, metadata !DIExpression()), !dbg !6195
  %2 = and i32 %1, 32768, !dbg !6197
  %3 = icmp eq i32 %2, 0, !dbg !6199
  %4 = and i32 %1, 16384, !dbg !6200
  %5 = icmp eq i32 %4, 0, !dbg !6200
  %6 = select i1 %5, i32 2, i32 1, !dbg !6200
  %7 = select i1 %3, i32 %6, i32 0, !dbg !6200
  ret i32 %7, !dbg !6201
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #2 !dbg !913 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !6202
  br i1 %1, label %9, label %2, !dbg !6204

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !1003, metadata !DIExpression()), !dbg !6205
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !6206
  %5 = load i32, i32* %4, align 4, !dbg !6206
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #21, !dbg !6211
  %6 = add nuw nsw i32 %3, 1, !dbg !6212
  call void @llvm.dbg.value(metadata i32 %6, metadata !1003, metadata !DIExpression()), !dbg !6205
  %7 = icmp eq i32 %6, 64, !dbg !6213
  br i1 %7, label %8, label %2, !dbg !6214, !llvm.loop !6215

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !6217
  br label %9, !dbg !6218

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !6219
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !6220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6224, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i32 %1, metadata !6225, metadata !DIExpression()), !dbg !6226
  %3 = trunc i32 %1 to i8, !dbg !6227
  %4 = shl i8 %3, 2, !dbg !6227
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6230
  store volatile i8 %4, i8* %5, align 1, !dbg !6231
  ret void, !dbg !6232
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6233 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6237, metadata !DIExpression()), !dbg !6239
  call void @llvm.dbg.value(metadata i32 -1, metadata !6238, metadata !DIExpression()), !dbg !6239
  %2 = icmp ugt i32 %0, 63, !dbg !6240
  br i1 %2, label %4, label %3, !dbg !6240

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #21, !dbg !6242
  call void @llvm.dbg.value(metadata i32 0, metadata !6238, metadata !DIExpression()), !dbg !6239
  br label %4, !dbg !6244

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6239
  ret i32 %5, !dbg !6245
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6250, metadata !DIExpression()), !dbg !6251
  %2 = and i32 %0, 31, !dbg !6252
  %3 = shl nuw i32 1, %2, !dbg !6253
  %4 = lshr i32 %0, 5, !dbg !6254
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !6255
  store volatile i32 %3, i32* %5, align 4, !dbg !6256
  ret void, !dbg !6257
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6260, metadata !DIExpression()), !dbg !6262
  call void @llvm.dbg.value(metadata i32 -1, metadata !6261, metadata !DIExpression()), !dbg !6262
  %2 = icmp ugt i32 %0, 63, !dbg !6263
  br i1 %2, label %4, label %3, !dbg !6263

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #21, !dbg !6265
  call void @llvm.dbg.value(metadata i32 0, metadata !6261, metadata !DIExpression()), !dbg !6262
  br label %4, !dbg !6267

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6262
  ret i32 %5, !dbg !6268
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6271, metadata !DIExpression()), !dbg !6272
  %2 = and i32 %0, 31, !dbg !6273
  %3 = shl nuw i32 1, %2, !dbg !6274
  %4 = lshr i32 %0, 5, !dbg !6275
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !6276
  store volatile i32 %3, i32* %5, align 4, !dbg !6277
  ret void, !dbg !6278
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #11 !dbg !6279 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6283, metadata !DIExpression()), !dbg !6285
  call void @llvm.dbg.value(metadata i32 255, metadata !6284, metadata !DIExpression()), !dbg !6285
  %2 = icmp ugt i32 %0, 63, !dbg !6286
  br i1 %2, label %5, label %3, !dbg !6286

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #21, !dbg !6288
  call void @llvm.dbg.value(metadata i32 %4, metadata !6284, metadata !DIExpression()), !dbg !6285
  br label %5, !dbg !6290

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !6285
  ret i32 %6, !dbg !6291
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #11 !dbg !6292 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6296, metadata !DIExpression()), !dbg !6297
  %2 = lshr i32 %0, 5, !dbg !6298
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !6299
  %4 = load volatile i32, i32* %3, align 4, !dbg !6299
  %5 = and i32 %0, 31, !dbg !6300
  %6 = lshr i32 %4, %5, !dbg !6301
  %7 = and i32 %6, 1, !dbg !6301
  ret i32 %7, !dbg !6302
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6303 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6305, metadata !DIExpression()), !dbg !6307
  call void @llvm.dbg.value(metadata i32 -1, metadata !6306, metadata !DIExpression()), !dbg !6307
  %2 = icmp ugt i32 %0, 63, !dbg !6308
  br i1 %2, label %4, label %3, !dbg !6308

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #21, !dbg !6310
  call void @llvm.dbg.value(metadata i32 0, metadata !6306, metadata !DIExpression()), !dbg !6307
  br label %4, !dbg !6312

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6307
  ret i32 %5, !dbg !6313
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6316, metadata !DIExpression()), !dbg !6317
  %2 = and i32 %0, 31, !dbg !6318
  %3 = shl nuw i32 1, %2, !dbg !6319
  %4 = lshr i32 %0, 5, !dbg !6320
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !6321
  store volatile i32 %3, i32* %5, align 4, !dbg !6322
  ret void, !dbg !6323
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6326, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.value(metadata i32 -1, metadata !6327, metadata !DIExpression()), !dbg !6328
  %2 = icmp ugt i32 %0, 63, !dbg !6329
  br i1 %2, label %4, label %3, !dbg !6329

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !6331
  call void @llvm.dbg.value(metadata i32 0, metadata !6327, metadata !DIExpression()), !dbg !6328
  br label %4, !dbg !6333

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6328
  ret i32 %5, !dbg !6334
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6337, metadata !DIExpression()), !dbg !6338
  %2 = and i32 %0, 31, !dbg !6339
  %3 = shl nuw i32 1, %2, !dbg !6340
  %4 = lshr i32 %0, 5, !dbg !6341
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !6342
  store volatile i32 %3, i32* %5, align 4, !dbg !6343
  ret void, !dbg !6344
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6345 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6349, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.value(metadata i32 %1, metadata !6350, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.value(metadata i32 -1, metadata !6351, metadata !DIExpression()), !dbg !6352
  %3 = icmp ugt i32 %0, 63, !dbg !6353
  br i1 %3, label %5, label %4, !dbg !6353

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #21, !dbg !6355
  call void @llvm.dbg.value(metadata i32 0, metadata !6351, metadata !DIExpression()), !dbg !6352
  br label %5, !dbg !6357

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !6352
  ret i32 %6, !dbg !6358
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #11 !dbg !6359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6361, metadata !DIExpression()), !dbg !6363
  call void @llvm.dbg.value(metadata i32 68, metadata !6362, metadata !DIExpression()), !dbg !6363
  %2 = icmp ugt i32 %0, 63, !dbg !6364
  br i1 %2, label %5, label %3, !dbg !6364

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #21, !dbg !6366
  call void @llvm.dbg.value(metadata i32 %4, metadata !6362, metadata !DIExpression()), !dbg !6363
  br label %5, !dbg !6368

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !6363
  ret i32 %6, !dbg !6369
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #11 !dbg !6370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6372, metadata !DIExpression()), !dbg !6373
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6374
  %3 = load volatile i8, i8* %2, align 1, !dbg !6374
  %4 = lshr i8 %3, 2, !dbg !6377
  %5 = zext i8 %4 to i32, !dbg !6377
  ret i32 %5, !dbg !6378
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !6379 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !6381, metadata !DIExpression()), !dbg !6383
  tail call void @Flash_ReturnReady() #20, !dbg !6384
  %1 = tail call fastcc i32 @get_current_irq() #21, !dbg !6385
  call void @llvm.dbg.value(metadata i32 %1, metadata !6382, metadata !DIExpression()), !dbg !6383
  %2 = icmp ugt i32 %1, 63, !dbg !6386
  br i1 %2, label %12, label %3, !dbg !6386

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !6388
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !6388
  %6 = icmp eq void (i32)* %5, null, !dbg !6390
  br i1 %6, label %7, label %8, !dbg !6391

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !6381, metadata !DIExpression()), !dbg !6383
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.93, i32 0, i32 0)) #20, !dbg !6392
  br label %12, !dbg !6394

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #21, !dbg !6395
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !6397
  store i32 %9, i32* %10, align 4, !dbg !6398
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !6399
  tail call void %11(i32 noundef %1) #20, !dbg !6400
  call void @llvm.dbg.value(metadata i32 0, metadata !6381, metadata !DIExpression()), !dbg !6383
  br label %12, !dbg !6401

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !6383
  ret i32 %13, !dbg !6402
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #11 !dbg !6403 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6406
  %2 = and i32 %1, 511, !dbg !6407
  call void @llvm.dbg.value(metadata i32 %2, metadata !6405, metadata !DIExpression()), !dbg !6408
  %3 = add nsw i32 %2, -16, !dbg !6409
  ret i32 %3, !dbg !6410
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #11 !dbg !6411 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6412
  %2 = lshr i32 %1, 22, !dbg !6413
  %3 = and i32 %2, 1, !dbg !6413
  ret i32 %3, !dbg !6414
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !6415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6419, metadata !DIExpression()), !dbg !6422
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !6420, metadata !DIExpression()), !dbg !6422
  %3 = icmp ugt i32 %0, 63, !dbg !6423
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !6423
  br i1 %5, label %10, label %6, !dbg !6423

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6425
  call void @llvm.dbg.value(metadata i32 %7, metadata !6421, metadata !DIExpression()), !dbg !6422
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !6426
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !6427
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !6428
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !6429
  store i32 0, i32* %9, align 4, !dbg !6430
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !6431
  br label %10, !dbg !6432

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !6422
  ret i32 %11, !dbg !6433
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !6434 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !6438, metadata !DIExpression()), !dbg !6439
  %2 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6440
  store i32 %2, i32* %0, align 4, !dbg !6441
  ret i32 0, !dbg !6442
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !6443 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6447, metadata !DIExpression()), !dbg !6448
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !6449
  ret i32 0, !dbg !6450
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !6451 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #22, !dbg !6455, !srcloc !6461
  call void @llvm.dbg.value(metadata i32 %1, metadata !6459, metadata !DIExpression()) #22, !dbg !6462
  call void @llvm.dbg.value(metadata i32 %1, metadata !6453, metadata !DIExpression()), !dbg !6463
  call void @llvm.dbg.value(metadata i32 1, metadata !6454, metadata !DIExpression()), !dbg !6463
  call void @llvm.dbg.value(metadata i32 4, metadata !6464, metadata !DIExpression()) #22, !dbg !6467
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #22, !dbg !6469, !srcloc !6470
  tail call void asm sideeffect "dmb", ""() #22, !dbg !6471, !srcloc !6474
  tail call void asm sideeffect "isb", ""() #22, !dbg !6475, !srcloc !6478
  ret i32 %1, !dbg !6479
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !6480 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6482, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i32 %0, metadata !6464, metadata !DIExpression()) #22, !dbg !6484
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #22, !dbg !6486, !srcloc !6470
  tail call void asm sideeffect "dmb", ""() #22, !dbg !6487, !srcloc !6474
  tail call void asm sideeffect "isb", ""() #22, !dbg !6489, !srcloc !6478
  ret void, !dbg !6491
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !6492 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6496
  call void @llvm.dbg.value(metadata i32 %1, metadata !6495, metadata !DIExpression()), !dbg !6497
  call void @llvm.dbg.value(metadata i32 0, metadata !6494, metadata !DIExpression()), !dbg !6497
  br label %2, !dbg !6498

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6494, metadata !DIExpression()), !dbg !6497
  tail call fastcc void @NVIC_DisableIRQ.100(i32 noundef %3) #21, !dbg !6500
  %4 = add nuw nsw i32 %3, 1, !dbg !6503
  call void @llvm.dbg.value(metadata i32 %4, metadata !6494, metadata !DIExpression()), !dbg !6497
  %5 = icmp eq i32 %4, 64, !dbg !6504
  br i1 %5, label %6, label %2, !dbg !6498, !llvm.loop !6505

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !6507
  ret void, !dbg !6508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.100(i32 noundef %0) unnamed_addr #2 !dbg !6509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6511, metadata !DIExpression()), !dbg !6512
  %2 = and i32 %0, 31, !dbg !6513
  %3 = shl nuw i32 1, %2, !dbg !6514
  %4 = lshr i32 %0, 5, !dbg !6515
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !6516
  store volatile i32 %3, i32* %5, align 4, !dbg !6517
  ret void, !dbg !6518
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !6519 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6523
  call void @llvm.dbg.value(metadata i32 %1, metadata !6522, metadata !DIExpression()), !dbg !6524
  call void @llvm.dbg.value(metadata i32 0, metadata !6521, metadata !DIExpression()), !dbg !6524
  br label %2, !dbg !6525

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6521, metadata !DIExpression()), !dbg !6524
  tail call fastcc void @NVIC_EnableIRQ.101(i32 noundef %3) #21, !dbg !6527
  %4 = add nuw nsw i32 %3, 1, !dbg !6530
  call void @llvm.dbg.value(metadata i32 %4, metadata !6521, metadata !DIExpression()), !dbg !6524
  %5 = icmp eq i32 %4, 64, !dbg !6531
  br i1 %5, label %6, label %2, !dbg !6525, !llvm.loop !6532

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !6534
  ret void, !dbg !6535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.101(i32 noundef %0) unnamed_addr #2 !dbg !6536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6538, metadata !DIExpression()), !dbg !6539
  %2 = and i32 %0, 31, !dbg !6540
  %3 = shl nuw i32 1, %2, !dbg !6541
  %4 = lshr i32 %0, 5, !dbg !6542
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !6543
  store volatile i32 %3, i32* %5, align 4, !dbg !6544
  ret void, !dbg !6545
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #2 !dbg !6546 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6548, metadata !DIExpression()), !dbg !6549
  br label %1, !dbg !6550

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6548, metadata !DIExpression()), !dbg !6549
  tail call fastcc void @NVIC_ClearPendingIRQ.102(i32 noundef %2) #21, !dbg !6552
  %3 = add nuw nsw i32 %2, 1, !dbg !6555
  call void @llvm.dbg.value(metadata i32 %3, metadata !6548, metadata !DIExpression()), !dbg !6549
  %4 = icmp eq i32 %3, 64, !dbg !6556
  br i1 %4, label %5, label %1, !dbg !6550, !llvm.loop !6557

5:                                                ; preds = %1
  ret void, !dbg !6559
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.102(i32 noundef %0) unnamed_addr #2 !dbg !6560 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6562, metadata !DIExpression()), !dbg !6563
  %2 = and i32 %0, 31, !dbg !6564
  %3 = shl nuw i32 1, %2, !dbg !6565
  %4 = lshr i32 %0, 5, !dbg !6566
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !6567
  store volatile i32 %3, i32* %5, align 4, !dbg !6568
  ret void, !dbg !6569
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !6570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6572, metadata !DIExpression()), !dbg !6573
  %2 = icmp ugt i32 %0, 63, !dbg !6574
  br i1 %2, label %4, label %3, !dbg !6574

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #21, !dbg !6576
  br label %4, !dbg !6577

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !6573
  ret i32 %5, !dbg !6578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !6579 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6581, metadata !DIExpression()), !dbg !6582
  %2 = and i32 %0, 511, !dbg !6583
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !6584
  tail call void asm sideeffect "dsb", ""() #22, !dbg !6585, !srcloc !6588
  ret void, !dbg !6589
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #11 !dbg !6590 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6591
  %2 = and i32 %1, 511, !dbg !6592
  ret i32 %2, !dbg !6593
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !6594 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6598, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i32 %1, metadata !6599, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i8* %0, metadata !6600, metadata !DIExpression()), !dbg !6697
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #20, !dbg !6698
  call void @llvm.dbg.value(metadata i32 %3, metadata !6695, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !6697
  call void @llvm.dbg.value(metadata i32 0, metadata !6694, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i32* undef, metadata !6696, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i32 0, metadata !6694, metadata !DIExpression()), !dbg !6697
  %4 = icmp ult i32 %3, 4, !dbg !6699
  br i1 %4, label %20, label %5, !dbg !6702

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !6703
  %7 = bitcast i8* %6 to i32**, !dbg !6703
  %8 = load i32*, i32** %7, align 4, !dbg !6703
  call void @llvm.dbg.value(metadata i32* %8, metadata !6696, metadata !DIExpression()), !dbg !6697
  %9 = lshr i32 %3, 2, !dbg !6704
  call void @llvm.dbg.value(metadata i32 %9, metadata !6695, metadata !DIExpression()), !dbg !6697
  br label %10, !dbg !6702

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !6696, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i32 %12, metadata !6694, metadata !DIExpression()), !dbg !6697
  %13 = load i32, i32* %11, align 4, !dbg !6705
  %14 = icmp eq i32 %13, -1, !dbg !6708
  br i1 %14, label %16, label %15, !dbg !6709

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #20, !dbg !6710
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.103, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.104, i32 0, i32 0)) #23, !dbg !6710
  unreachable, !dbg !6710

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !6715
  call void @llvm.dbg.value(metadata i32 %17, metadata !6694, metadata !DIExpression()), !dbg !6697
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !6716
  call void @llvm.dbg.value(metadata i32* %18, metadata !6696, metadata !DIExpression()), !dbg !6697
  %19 = icmp eq i32 %17, %9, !dbg !6699
  br i1 %19, label %20, label %10, !dbg !6702, !llvm.loop !6717

20:                                               ; preds = %16, %2
  ret void, !dbg !6719
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #16 section ".ram_code" !dbg !6720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6722, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.value(metadata i32 0, metadata !6723, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.value(metadata i32 %0, metadata !6723, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !6724
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !6723, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6724
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !6723, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6724
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !6725
  call void @llvm.dbg.value(metadata i32 %2, metadata !6723, metadata !DIExpression()), !dbg !6724
  ret i32 %2, !dbg !6726
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !6727 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6732, metadata !DIExpression()), !dbg !6734
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6735
  %3 = or i32 %2, 512, !dbg !6735
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6735
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6738
  call void @llvm.dbg.value(metadata i32 %4, metadata !6733, metadata !DIExpression()), !dbg !6734
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !6739

5:                                                ; preds = %1
  br label %7, !dbg !6740

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !6744
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.103, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.104, i32 0, i32 0)) #23, !dbg !6744
  unreachable, !dbg !6744

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !6749
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !6733, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6734
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !6733, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6734
  br label %10, !dbg !6750

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6751
  %12 = and i32 %11, 8192, !dbg !6752
  %13 = icmp eq i32 %12, 0, !dbg !6753
  br i1 %13, label %10, label %14, !dbg !6750, !llvm.loop !6754

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6756
  %16 = and i32 %15, 256, !dbg !6757
  %17 = icmp eq i32 %16, 0, !dbg !6758
  br i1 %17, label %14, label %18, !dbg !6759, !llvm.loop !6760

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !6749
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !6733, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6734
  %20 = and i32 %19, 16, !dbg !6749
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !6733, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6734
  call void @llvm.dbg.value(metadata i32 undef, metadata !6733, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6734
  %21 = or i32 %4, %20, !dbg !6762
  %22 = or i32 %21, 8, !dbg !6762
  call void @llvm.dbg.value(metadata i32 %22, metadata !6733, metadata !DIExpression()), !dbg !6734
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6763
  ret void, !dbg !6764
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !6765 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !6767, metadata !DIExpression()), !dbg !6769
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6770
  call void @llvm.dbg.value(metadata i32 %2, metadata !6768, metadata !DIExpression()), !dbg !6769
  %3 = and i32 %2, -268435477, !dbg !6771
  call void @llvm.dbg.value(metadata i32 %3, metadata !6768, metadata !DIExpression()), !dbg !6769
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6772
  br label %4, !dbg !6773

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6774
  %6 = and i32 %5, 2, !dbg !6775
  %7 = icmp eq i32 %6, 0, !dbg !6773
  br i1 %7, label %8, label %4, !dbg !6773, !llvm.loop !6776

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6778
  call void @llvm.dbg.value(metadata i32 %9, metadata !6768, metadata !DIExpression()), !dbg !6769
  %10 = and i32 %9, -9, !dbg !6779
  call void @llvm.dbg.value(metadata i32 %10, metadata !6768, metadata !DIExpression()), !dbg !6769
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6780
  br label %11, !dbg !6781

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6782
  %13 = and i32 %12, 8, !dbg !6783
  %14 = icmp eq i32 %13, 0, !dbg !6781
  br i1 %14, label %15, label %11, !dbg !6781, !llvm.loop !6784

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !6786, !range !2654
  %17 = icmp eq i8 %16, 0, !dbg !6788
  br i1 %17, label %18, label %21, !dbg !6789

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6790
  %20 = and i32 %19, -513, !dbg !6790
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6790
  br label %21, !dbg !6794

21:                                               ; preds = %18, %15
  ret void, !dbg !6795
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !6796 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6800, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.value(metadata i32 0, metadata !6801, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.value(metadata i32 0, metadata !6802, metadata !DIExpression()), !dbg !6803
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6804
  call void @llvm.dbg.value(metadata i32 %2, metadata !6801, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.value(metadata i32 %2, metadata !6801, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !6803
  %3 = icmp eq i16 %0, 1, !dbg !6805
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !6807
  %5 = or i32 %2, %4, !dbg !6807
  call void @llvm.dbg.value(metadata i32 %5, metadata !6801, metadata !DIExpression()), !dbg !6803
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6808
  br label %6, !dbg !6809

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6810
  %8 = and i32 %7, 2, !dbg !6811
  %9 = icmp eq i32 %8, 0, !dbg !6812
  br i1 %9, label %6, label %10, !dbg !6809, !llvm.loop !6813

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6815
  %12 = and i32 %11, 1, !dbg !6816
  %13 = icmp eq i32 %12, 0, !dbg !6817
  br i1 %13, label %14, label %10, !dbg !6817, !llvm.loop !6818

14:                                               ; preds = %10
  ret i32 0, !dbg !6820
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !6821 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6823, metadata !DIExpression()), !dbg !6824
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #21, !dbg !6825
  tail call void @SFI_MacLeave(i16 zeroext undef) #21, !dbg !6826
  ret void, !dbg !6827
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !6828 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6832, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata i32 %1, metadata !6833, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata i32 %1, metadata !6834, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata i8 0, metadata !6836, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata i32 0, metadata !6835, metadata !DIExpression()), !dbg !6837
  %3 = icmp eq i32 %1, 0, !dbg !6838
  br i1 %3, label %16, label %4, !dbg !6841

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !6836, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata i32 %6, metadata !6835, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata i32 %7, metadata !6834, metadata !DIExpression()), !dbg !6837
  %8 = shl i32 %6, 8, !dbg !6842
  %9 = and i32 %7, 255, !dbg !6844
  %10 = or i32 %8, %9, !dbg !6845
  call void @llvm.dbg.value(metadata i32 %10, metadata !6835, metadata !DIExpression()), !dbg !6837
  %11 = lshr i32 %7, 8, !dbg !6846
  call void @llvm.dbg.value(metadata i32 %11, metadata !6834, metadata !DIExpression()), !dbg !6837
  %12 = add nuw nsw i8 %5, 1, !dbg !6847
  call void @llvm.dbg.value(metadata i8 %12, metadata !6836, metadata !DIExpression()), !dbg !6837
  %13 = icmp ult i32 %7, 256, !dbg !6838
  br i1 %13, label %14, label %4, !dbg !6841, !llvm.loop !6848

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !6850
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !6852
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6853
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6854
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6855
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !6856
  br label %16, !dbg !6857

16:                                               ; preds = %2, %14
  ret void, !dbg !6858
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !6859 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6863, metadata !DIExpression()), !dbg !6869
  call void @llvm.dbg.value(metadata i8 %1, metadata !6864, metadata !DIExpression()), !dbg !6869
  call void @llvm.dbg.value(metadata i32 %2, metadata !6865, metadata !DIExpression()), !dbg !6869
  call void @llvm.dbg.value(metadata i32 %3, metadata !6866, metadata !DIExpression()), !dbg !6869
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #21, !dbg !6870
  call void @llvm.dbg.value(metadata i32 %5, metadata !6868, metadata !DIExpression()), !dbg !6869
  %6 = icmp eq i32 %3, 3, !dbg !6871
  br i1 %6, label %7, label %11, !dbg !6873

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !6874
  %9 = zext i8 %1 to i32, !dbg !6876
  %10 = or i32 %8, %9, !dbg !6877
  call void @llvm.dbg.value(metadata i32 %10, metadata !6867, metadata !DIExpression()), !dbg !6869
  br label %16, !dbg !6878

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !6879
  %13 = zext i8 %1 to i32, !dbg !6881
  %14 = or i32 %12, %13, !dbg !6882
  call void @llvm.dbg.value(metadata i32 %14, metadata !6867, metadata !DIExpression()), !dbg !6869
  %15 = lshr i32 %5, 24, !dbg !6883
  call void @llvm.dbg.value(metadata i32 %15, metadata !6868, metadata !DIExpression()), !dbg !6869
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !6884
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !6869
  call void @llvm.dbg.value(metadata i32 %18, metadata !6868, metadata !DIExpression()), !dbg !6869
  call void @llvm.dbg.value(metadata i32 %17, metadata !6867, metadata !DIExpression()), !dbg !6869
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6885
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !6886
  %19 = add i32 %3, 1, !dbg !6887
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6888
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6889
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !6890
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !6891
  ret void, !dbg !6892
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 section ".ram_code" !dbg !6893 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6897, metadata !DIExpression()), !dbg !6899
  call void @llvm.dbg.value(metadata i32 %1, metadata !6898, metadata !DIExpression()), !dbg !6899
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !6900
  %4 = and i32 %3, -256, !dbg !6901
  %5 = and i32 %0, 255, !dbg !6902
  %6 = or i32 %4, %5, !dbg !6903
  ret i32 %6, !dbg !6904
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #9 section ".ram_code" !dbg !6905 {
  %5 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6910, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.value(metadata i32 %1, metadata !6911, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.value(metadata i8** %2, metadata !6912, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.value(metadata i32* %3, metadata !6913, metadata !DIExpression()), !dbg !6925
  %6 = bitcast %struct.anon* %5 to i8*, !dbg !6926
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !6926
  call void @llvm.dbg.declare(metadata %struct.anon* %5, metadata !6914, metadata !DIExpression()), !dbg !6927
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !6928
  call void @llvm.dbg.value(metadata i32 %7, metadata !6923, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !6922, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6925
  %8 = lshr i32 %7, 24, !dbg !6929
  call void @llvm.dbg.value(metadata i32 %8, metadata !6923, metadata !DIExpression()), !dbg !6925
  %9 = trunc i32 %8 to i8, !dbg !6930
  %10 = bitcast %struct.anon* %5 to [4 x i8]*, !dbg !6931
  store i8 %9, i8* %6, align 4, !dbg !6932
  call void @llvm.dbg.value(metadata i32 1, metadata !6924, metadata !DIExpression()), !dbg !6925
  %11 = load i8*, i8** %2, align 4, !dbg !6933
  br label %12, !dbg !6937

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !6933
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6924, metadata !DIExpression()), !dbg !6925
  %15 = load i8, i8* %13, align 1, !dbg !6938
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !6939
  store i8 %15, i8* %16, align 1, !dbg !6940
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6941
  store i8* %17, i8** %2, align 4, !dbg !6941
  %18 = add nuw nsw i32 %14, 1, !dbg !6942
  call void @llvm.dbg.value(metadata i32 %18, metadata !6924, metadata !DIExpression()), !dbg !6925
  %19 = icmp eq i32 %18, 4, !dbg !6943
  br i1 %19, label %20, label %12, !dbg !6937, !llvm.loop !6944

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %5, i32 0, i32 0, !dbg !6946
  %22 = load i32, i32* %21, align 4, !dbg !6946
  call void @llvm.dbg.value(metadata i32 %22, metadata !6923, metadata !DIExpression()), !dbg !6925
  %23 = load i32, i32* %3, align 4, !dbg !6947
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !6948
  %25 = shl i32 %7, 8, !dbg !6949
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !6922, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6925
  %26 = and i32 %0, 255, !dbg !6950
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !6922, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6925
  %27 = or i32 %25, %26, !dbg !6951
  call void @llvm.dbg.value(metadata i32 %27, metadata !6922, metadata !DIExpression()), !dbg !6925
  store i32 %24, i32* %3, align 4, !dbg !6952
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !6953
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !6954
  ret i32 %27, !dbg !6955
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #9 section ".ram_code" !dbg !6956 {
  %4 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6960, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i8* %1, metadata !6961, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i32 %2, metadata !6962, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i8* %1, metadata !6964, metadata !DIExpression()), !dbg !6966
  %5 = bitcast %struct.anon* %4 to i8*, !dbg !6967
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6967
  call void @llvm.dbg.declare(metadata %struct.anon* %4, metadata !6965, metadata !DIExpression()), !dbg !6968
  %6 = add i32 %0, -1610348544, !dbg !6969
  call void @llvm.dbg.value(metadata i32 %6, metadata !6960, metadata !DIExpression()), !dbg !6966
  %7 = ptrtoint i8* %1 to i32, !dbg !6970
  %8 = and i32 %7, 3, !dbg !6972
  %9 = icmp eq i32 %8, 0, !dbg !6973
  br i1 %9, label %10, label %23, !dbg !6974

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6964, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i32 %2, metadata !6962, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i32 %6, metadata !6960, metadata !DIExpression()), !dbg !6966
  %11 = icmp sgt i32 %2, 0, !dbg !6975
  br i1 %11, label %12, label %72, !dbg !6979

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6964, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i32 %14, metadata !6962, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i32 %15, metadata !6960, metadata !DIExpression()), !dbg !6966
  %16 = bitcast i8* %13 to i32*, !dbg !6980
  %17 = load i32, i32* %16, align 4, !dbg !6980
  %18 = inttoptr i32 %15 to i32*, !dbg !6980
  store volatile i32 %17, i32* %18, align 4, !dbg !6980
  %19 = add i32 %15, 4, !dbg !6982
  call void @llvm.dbg.value(metadata i32 %19, metadata !6960, metadata !DIExpression()), !dbg !6966
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !6983
  call void @llvm.dbg.value(metadata i8* %20, metadata !6964, metadata !DIExpression()), !dbg !6966
  %21 = add nsw i32 %14, -4, !dbg !6984
  call void @llvm.dbg.value(metadata i32 %21, metadata !6962, metadata !DIExpression()), !dbg !6966
  %22 = icmp ugt i32 %14, 4, !dbg !6975
  br i1 %22, label %12, label %72, !dbg !6979, !llvm.loop !6985

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !6987
  %25 = icmp eq i32 %24, 0, !dbg !6989
  call void @llvm.dbg.value(metadata i8* %1, metadata !6964, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i8* %1, metadata !6964, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i32 %2, metadata !6962, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i32 %2, metadata !6962, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i32 %6, metadata !6960, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i32 %6, metadata !6960, metadata !DIExpression()), !dbg !6966
  %26 = icmp sgt i32 %2, 0, !dbg !6990
  br i1 %25, label %31, label %27, !dbg !6991

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !6992

28:                                               ; preds = %27
  %29 = bitcast %struct.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %52, !dbg !6992

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !6995

32:                                               ; preds = %31
  %33 = bitcast %struct.anon* %4 to [2 x i16]*
  %34 = bitcast %struct.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %37, !dbg !6995

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !6964, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i32 %39, metadata !6962, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i32 %40, metadata !6960, metadata !DIExpression()), !dbg !6966
  %41 = bitcast i8* %38 to i16*, !dbg !6998
  %42 = load i16, i16* %41, align 2, !dbg !6998
  store i16 %42, i16* %34, align 4, !dbg !7001
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !7002
  %44 = bitcast i8* %43 to i16*, !dbg !7002
  %45 = load i16, i16* %44, align 2, !dbg !7003
  store i16 %45, i16* %35, align 2, !dbg !7004
  %46 = load i32, i32* %36, align 4, !dbg !7005
  %47 = inttoptr i32 %40 to i32*, !dbg !7005
  store volatile i32 %46, i32* %47, align 4, !dbg !7005
  %48 = add i32 %40, 4, !dbg !7006
  call void @llvm.dbg.value(metadata i32 %48, metadata !6960, metadata !DIExpression()), !dbg !6966
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !7007
  call void @llvm.dbg.value(metadata i8* %49, metadata !6964, metadata !DIExpression()), !dbg !6966
  %50 = add nsw i32 %39, -4, !dbg !7008
  call void @llvm.dbg.value(metadata i32 %50, metadata !6962, metadata !DIExpression()), !dbg !6966
  %51 = icmp ugt i32 %39, 4, !dbg !7009
  br i1 %51, label %37, label %72, !dbg !6995, !llvm.loop !7010

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !6964, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i32 %54, metadata !6962, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i32 %55, metadata !6960, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i8* %53, metadata !6964, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i32 0, metadata !6963, metadata !DIExpression()), !dbg !6966
  br label %56, !dbg !7012

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6964, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i32 %58, metadata !6963, metadata !DIExpression()), !dbg !6966
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !7016
  call void @llvm.dbg.value(metadata i8* %59, metadata !6964, metadata !DIExpression()), !dbg !6966
  %60 = load i8, i8* %57, align 1, !dbg !7019
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !7020
  store i8 %60, i8* %61, align 1, !dbg !7021
  %62 = add nuw nsw i32 %58, 1, !dbg !7022
  call void @llvm.dbg.value(metadata i32 %62, metadata !6963, metadata !DIExpression()), !dbg !6966
  %63 = icmp ult i32 %58, 3, !dbg !7023
  %64 = icmp ult i32 %62, %54, !dbg !7024
  %65 = select i1 %63, i1 %64, i1 false, !dbg !7024
  br i1 %65, label %56, label %66, !dbg !7012, !llvm.loop !7025

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !7027
  %68 = inttoptr i32 %55 to i32*, !dbg !7027
  store volatile i32 %67, i32* %68, align 4, !dbg !7027
  %69 = add i32 %55, 4, !dbg !7028
  call void @llvm.dbg.value(metadata i32 %69, metadata !6960, metadata !DIExpression()), !dbg !6966
  %70 = add nsw i32 %54, -4, !dbg !7029
  call void @llvm.dbg.value(metadata i8* %59, metadata !6964, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.value(metadata i32 %70, metadata !6962, metadata !DIExpression()), !dbg !6966
  %71 = icmp sgt i32 %54, 4, !dbg !7030
  br i1 %71, label %52, label %72, !dbg !6992, !llvm.loop !7031

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !7033
  ret void, !dbg !7033
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !7034 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !7038, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i8* %1, metadata !7039, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i8* %2, metadata !7040, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i16 %3, metadata !7041, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i16 %4, metadata !7042, metadata !DIExpression()), !dbg !7048
  %7 = bitcast i32* %6 to i8*, !dbg !7049
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7049
  call void @llvm.dbg.value(metadata i8* %7, metadata !7047, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i32 0, metadata !7044, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !7046, metadata !DIExpression()), !dbg !7048
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !7046, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i32 0, metadata !7044, metadata !DIExpression()), !dbg !7048
  %9 = icmp eq i16 %3, 0, !dbg !7050
  br i1 %9, label %33, label %10, !dbg !7053

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !7046, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i32 %12, metadata !7044, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i32 0, metadata !7045, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i32 0, metadata !7043, metadata !DIExpression()), !dbg !7048
  store i32 0, i32* %6, align 4, !dbg !7054
  call void @llvm.dbg.value(metadata i32 0, metadata !7045, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i32 %12, metadata !7044, metadata !DIExpression()), !dbg !7048
  %13 = icmp ult i32 %12, %8, !dbg !7057
  br i1 %13, label %14, label %27, !dbg !7059

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7045, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i32 %16, metadata !7044, metadata !DIExpression()), !dbg !7048
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !7060
  %18 = load i8, i8* %17, align 1, !dbg !7060
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !7062
  store i8 %18, i8* %19, align 1, !dbg !7063
  %20 = add nuw nsw i32 %16, 1, !dbg !7064
  call void @llvm.dbg.value(metadata i32 %20, metadata !7044, metadata !DIExpression()), !dbg !7048
  %21 = add nuw nsw i32 %15, 1, !dbg !7065
  call void @llvm.dbg.value(metadata i32 %21, metadata !7045, metadata !DIExpression()), !dbg !7048
  %22 = icmp ult i32 %20, %8, !dbg !7057
  %23 = icmp ult i32 %15, 3, !dbg !7066
  %24 = select i1 %22, i1 %23, i1 false, !dbg !7066
  br i1 %24, label %14, label %25, !dbg !7059, !llvm.loop !7067

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !7069
  br label %27, !dbg !7069

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !7069
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !7070
  call void @llvm.dbg.value(metadata i32 %28, metadata !7043, metadata !DIExpression()), !dbg !7048
  %30 = bitcast i8* %11 to i32*, !dbg !7069
  store volatile i32 %28, i32* %30, align 4, !dbg !7069
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !7071
  call void @llvm.dbg.value(metadata i8* %31, metadata !7046, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i32 %29, metadata !7044, metadata !DIExpression()), !dbg !7048
  %32 = icmp ult i32 %29, %8, !dbg !7050
  br i1 %32, label %10, label %33, !dbg !7053, !llvm.loop !7072

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7074
  %34 = zext i16 %4 to i32, !dbg !7075
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7076
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !7077
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !7078
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !7046, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !7048
  call void @llvm.dbg.value(metadata i8* %2, metadata !7040, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i32 0, metadata !7044, metadata !DIExpression()), !dbg !7048
  %35 = icmp eq i16 %4, 0, !dbg !7079
  br i1 %35, label %47, label %36, !dbg !7082

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !7083
  call void @llvm.dbg.value(metadata i8* %37, metadata !7046, metadata !DIExpression()), !dbg !7048
  br label %38, !dbg !7082

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !7040, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i8* %40, metadata !7046, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i32 %41, metadata !7044, metadata !DIExpression()), !dbg !7048
  %42 = load volatile i8, i8* %40, align 1, !dbg !7084
  store i8 %42, i8* %39, align 1, !dbg !7086
  %43 = add nuw nsw i32 %41, 1, !dbg !7087
  call void @llvm.dbg.value(metadata i32 %43, metadata !7044, metadata !DIExpression()), !dbg !7048
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !7088
  call void @llvm.dbg.value(metadata i8* %44, metadata !7040, metadata !DIExpression()), !dbg !7048
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !7089
  call void @llvm.dbg.value(metadata i8* %45, metadata !7046, metadata !DIExpression()), !dbg !7048
  %46 = icmp eq i32 %43, %34, !dbg !7079
  br i1 %46, label %47, label %38, !dbg !7082, !llvm.loop !7090

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7092
  ret void, !dbg !7092
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !7093 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !7097, metadata !DIExpression()), !dbg !7105
  call void @llvm.dbg.value(metadata i8* %1, metadata !7098, metadata !DIExpression()), !dbg !7105
  call void @llvm.dbg.value(metadata i32 0, metadata !7099, metadata !DIExpression()), !dbg !7105
  %4 = icmp eq i8* %1, null, !dbg !7106
  br i1 %4, label %67, label %5, !dbg !7108

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7109
  call void @llvm.dbg.value(metadata i32 %27, metadata !7100, metadata !DIExpression()), !dbg !7105
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !7110

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !7105
  call void @llvm.dbg.value(metadata i32 %9, metadata !7099, metadata !DIExpression()), !dbg !7105
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !7111
  %11 = load i8, i8* %10, align 1, !dbg !7111
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !7112

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !7113

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7116
  %15 = and i32 %14, -2, !dbg !7116
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7116
  br label %41, !dbg !7120

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7121
  %18 = and i32 %17, -2, !dbg !7121
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7121
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !7124

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7126
  %22 = or i32 %21, 1, !dbg !7126
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7126
  br label %41, !dbg !7130

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7131
  %25 = or i32 %24, 1, !dbg !7131
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7131
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !7109
  %28 = icmp eq i32 %27, 0, !dbg !7134
  br i1 %7, label %29, label %35, !dbg !7137

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7138
  br i1 %28, label %33, label %31, !dbg !7141

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !7138
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7138
  br label %67, !dbg !7138

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !7138
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7138
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7142
  br i1 %28, label %39, label %37, !dbg !7145

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !7142
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7142
  br label %67, !dbg !7142

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !7142
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7142
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !7146
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !7147
  %44 = load i8, i8* %43, align 1, !dbg !7147
  %45 = icmp eq i8 %44, 5, !dbg !7148
  br i1 %45, label %46, label %56, !dbg !7149

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !7150
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !7151

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !7101, metadata !DIExpression(DW_OP_deref)), !dbg !7152
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !7153
  %50 = load i8, i8* %3, align 1, !dbg !7155
  call void @llvm.dbg.value(metadata i8 %50, metadata !7101, metadata !DIExpression()), !dbg !7152
  %51 = load i8, i8* %48, align 1, !dbg !7156
  %52 = and i8 %51, %50, !dbg !7157
  %53 = icmp eq i8 %52, 0, !dbg !7158
  br i1 %53, label %54, label %49, !dbg !7158, !llvm.loop !7159

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !7161
  %55 = add i32 %9, 1, !dbg !7162
  br label %61, !dbg !7163

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !7164
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !7166
  %59 = load i8, i8* %58, align 1, !dbg !7166
  %60 = zext i8 %59 to i16, !dbg !7166
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #21, !dbg !7167
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !7162
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !7168
  %64 = load i8, i8* %63, align 1, !dbg !7168
  %65 = zext i8 %64 to i32, !dbg !7168
  %66 = add i32 %42, %65, !dbg !7169
  call void @llvm.dbg.value(metadata i32 %66, metadata !7099, metadata !DIExpression()), !dbg !7105
  br label %8, !dbg !7110, !llvm.loop !7170

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !7172
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !7173 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !7177, metadata !DIExpression()), !dbg !7180
  call void @llvm.dbg.value(metadata i8* %1, metadata !7178, metadata !DIExpression()), !dbg !7180
  call void @llvm.dbg.value(metadata i8 %2, metadata !7179, metadata !DIExpression()), !dbg !7180
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !7179, metadata !DIExpression(DW_OP_deref)), !dbg !7180
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !7181
  ret void, !dbg !7182
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !7183 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7187, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i8* %1, metadata !7188, metadata !DIExpression()), !dbg !7189
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #21, !dbg !7190
  ret void, !dbg !7191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #10 section ".ram_code" !dbg !7192 {
  ret i32 78, !dbg !7196
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #11 section ".ram_code" !dbg !7197 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7201
  %2 = and i32 %1, 7340032, !dbg !7203
  %3 = icmp ult i32 %2, 2097153, !dbg !7204
  %4 = select i1 %3, i32 30, i32 18, !dbg !7205
  ret i32 %4, !dbg !7206
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #17 section ".ram_code" !dbg !7207 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7211, metadata !DIExpression()), !dbg !7213
  call void @llvm.dbg.value(metadata i32 0, metadata !7212, metadata !DIExpression()), !dbg !7213
  call void @llvm.dbg.value(metadata i32 0, metadata !7212, metadata !DIExpression()), !dbg !7213
  br label %2, !dbg !7214

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7212, metadata !DIExpression()), !dbg !7213
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7216
  store i8 -1, i8* %4, align 1, !dbg !7219
  %5 = add nuw nsw i32 %3, 1, !dbg !7220
  call void @llvm.dbg.value(metadata i32 %5, metadata !7212, metadata !DIExpression()), !dbg !7213
  %6 = icmp eq i32 %5, 8, !dbg !7221
  br i1 %6, label %7, label %2, !dbg !7214, !llvm.loop !7222

7:                                                ; preds = %2
  ret i1 true, !dbg !7224
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !7225 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !7227, metadata !DIExpression()), !dbg !7228
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !7229
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !7230
  %3 = load i8, i8* %2, align 1, !dbg !7230
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !7231
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !7232
  %5 = ptrtoint i8* %4 to i32, !dbg !7233
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !7234
  %6 = bitcast i8* %4 to i32*, !dbg !7235
  %7 = load volatile i32, i32* %6, align 4, !dbg !7236
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !7237
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7238
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !7239
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7240
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !7241
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7242
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !7243
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !7244
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !7245
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7246
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !7247
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7248
  %14 = or i32 %13, 986880, !dbg !7249
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7250
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7251
  %16 = or i32 %15, 252645135, !dbg !7252
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7253
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !7254
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !7255
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !7256
  %20 = load i8, i8* %19, align 1, !dbg !7256
  %21 = zext i8 %20 to i32, !dbg !7257
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #21, !dbg !7258
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !7259
  ret void, !dbg !7260
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !7261 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !7262
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7263
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !7264
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7265
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !7266
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7267
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !7268
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !7269
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !7270
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7271
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7272
  %7 = and i32 %6, -252645136, !dbg !7273
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7274
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !7275
  %9 = zext i8 %8 to i32, !dbg !7275
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #21, !dbg !7276
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !7277
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !7278
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !7280
  %13 = inttoptr i32 %12 to i32*, !dbg !7281
  %14 = load volatile i32, i32* %13, align 4, !dbg !7282
  %15 = icmp eq i32 %11, %14, !dbg !7283
  br i1 %15, label %17, label %16, !dbg !7284

16:                                               ; preds = %0, %16
  br label %16, !dbg !7285, !llvm.loop !7286

17:                                               ; preds = %0
  ret void, !dbg !7288
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !7289 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7290
  %2 = icmp eq i32 %1, 0, !dbg !7292
  br i1 %2, label %3, label %5, !dbg !7293

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7294
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7296
  br label %5, !dbg !7297

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7298
  %7 = icmp eq i32 %6, 0, !dbg !7300
  br i1 %7, label %8, label %10, !dbg !7301

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7302
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7304
  br label %10, !dbg !7305

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7306
  %12 = and i32 %11, -256, !dbg !7307
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7308
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7309
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #20, !dbg !7310
  ret void, !dbg !7311
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !7312 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7313
  %2 = icmp eq i32 %1, 0, !dbg !7315
  br i1 %2, label %4, label %3, !dbg !7316

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7317
  br label %4, !dbg !7319

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7320
  %6 = icmp eq i32 %5, 0, !dbg !7322
  br i1 %6, label %8, label %7, !dbg !7323

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7324
  br label %8, !dbg !7326

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #20, !dbg !7327
  ret void, !dbg !7328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #10 section ".tcm_code" !dbg !7329 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7331, metadata !DIExpression()), !dbg !7332
  ret i32 0, !dbg !7333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #10 section ".ram_code" !dbg !7334 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7336, metadata !DIExpression()), !dbg !7337
  ret i32 0, !dbg !7338
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !7339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7341, metadata !DIExpression()), !dbg !7342
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !7343
  ret void, !dbg !7344
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !7345 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7348
  call void @llvm.dbg.value(metadata i32 %1, metadata !7347, metadata !DIExpression()), !dbg !7349
  ret i32 %1, !dbg !7350
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !7351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7353, metadata !DIExpression()), !dbg !7354
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !7355
  ret void, !dbg !7356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #10 section ".ram_code" !dbg !7357 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !7359, metadata !DIExpression()), !dbg !7360
  ret i32 0, !dbg !7361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #10 section ".ram_code" !dbg !7362 {
  ret i32 0, !dbg !7365
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 section ".ram_code" !dbg !7366 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7370, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.value(metadata i8* %1, metadata !7371, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.value(metadata i32 %2, metadata !7372, metadata !DIExpression()), !dbg !7385
  %4 = ptrtoint i8* %0 to i32, !dbg !7386
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !7387
  %7 = and i32 %6, 3, !dbg !7387
  %8 = icmp eq i32 %7, 0, !dbg !7387
  br i1 %8, label %9, label %26, !dbg !7387

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !7388
  call void @llvm.dbg.value(metadata i32* %10, metadata !7374, metadata !DIExpression()), !dbg !7389
  %11 = bitcast i8* %1 to i32*, !dbg !7390
  call void @llvm.dbg.value(metadata i32* %11, metadata !7377, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata i32 0, metadata !7373, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.value(metadata i32 0, metadata !7373, metadata !DIExpression()), !dbg !7385
  %12 = icmp ult i32 %2, 4, !dbg !7391
  br i1 %12, label %65, label %13, !dbg !7394

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !7394

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7373, metadata !DIExpression()), !dbg !7385
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !7395
  %18 = load i32, i32* %17, align 4, !dbg !7395
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !7398
  %20 = load i32, i32* %19, align 4, !dbg !7398
  %21 = icmp eq i32 %18, %20, !dbg !7399
  %22 = add nuw nsw i32 %16, 1, !dbg !7400
  call void @llvm.dbg.value(metadata i32 %22, metadata !7373, metadata !DIExpression()), !dbg !7385
  %23 = xor i1 %21, true, !dbg !7401
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !7401
  call void @llvm.dbg.value(metadata i32 %22, metadata !7373, metadata !DIExpression()), !dbg !7385
  br i1 %25, label %59, label %15, !dbg !7401, !llvm.loop !7402

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !7404
  %28 = icmp eq i32 %27, 0, !dbg !7404
  br i1 %28, label %31, label %29, !dbg !7404

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !7373, metadata !DIExpression()), !dbg !7385
  %30 = icmp eq i32 %2, 0, !dbg !7405
  br i1 %30, label %65, label %48, !dbg !7408

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !7409
  call void @llvm.dbg.value(metadata i16* %32, metadata !7378, metadata !DIExpression()), !dbg !7410
  %33 = bitcast i8* %1 to i16*, !dbg !7411
  call void @llvm.dbg.value(metadata i16* %33, metadata !7381, metadata !DIExpression()), !dbg !7410
  call void @llvm.dbg.value(metadata i32 0, metadata !7373, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.value(metadata i32 0, metadata !7373, metadata !DIExpression()), !dbg !7385
  %34 = icmp ult i32 %2, 2, !dbg !7412
  br i1 %34, label %65, label %35, !dbg !7415

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !7415

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !7373, metadata !DIExpression()), !dbg !7385
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !7416
  %40 = load i16, i16* %39, align 2, !dbg !7416
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !7419
  %42 = load i16, i16* %41, align 2, !dbg !7419
  %43 = icmp eq i16 %40, %42, !dbg !7420
  %44 = add nuw nsw i32 %38, 1, !dbg !7421
  call void @llvm.dbg.value(metadata i32 %44, metadata !7373, metadata !DIExpression()), !dbg !7385
  %45 = xor i1 %43, true, !dbg !7422
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !7422
  call void @llvm.dbg.value(metadata i32 %44, metadata !7373, metadata !DIExpression()), !dbg !7385
  br i1 %47, label %61, label %37, !dbg !7422, !llvm.loop !7423

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !7373, metadata !DIExpression()), !dbg !7385
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !7425
  %51 = load i8, i8* %50, align 1, !dbg !7425
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !7428
  %53 = load i8, i8* %52, align 1, !dbg !7428
  %54 = icmp eq i8 %51, %53, !dbg !7429
  %55 = add nuw i32 %49, 1, !dbg !7430
  call void @llvm.dbg.value(metadata i32 %55, metadata !7373, metadata !DIExpression()), !dbg !7385
  %56 = xor i1 %54, true, !dbg !7431
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !7431
  call void @llvm.dbg.value(metadata i32 %55, metadata !7373, metadata !DIExpression()), !dbg !7385
  br i1 %58, label %63, label %48, !dbg !7431, !llvm.loop !7432

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !7434
  br label %65, !dbg !7434

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !7434
  br label %65, !dbg !7434

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !7434
  br label %65, !dbg !7434

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !7385
  ret i1 %66, !dbg !7434
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !7435 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7439, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i8* %1, metadata !7440, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i32 %2, metadata !7441, metadata !DIExpression()), !dbg !7450
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7451
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !7442, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i8* %0, metadata !7443, metadata !DIExpression()), !dbg !7450
  %7 = bitcast i8** %4 to i8*, !dbg !7452
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7452
  call void @llvm.dbg.value(metadata i8* %1, metadata !7444, metadata !DIExpression()), !dbg !7450
  store i8* %1, i8** %4, align 4, !dbg !7453
  call void @llvm.dbg.value(metadata i32 0, metadata !7445, metadata !DIExpression()), !dbg !7450
  %8 = bitcast i32* %5 to i8*, !dbg !7454
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22, !dbg !7454
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7455
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !7456
  store i8 1, i8* %9, align 4, !dbg !7457
  call void @llvm.dbg.value(metadata i32 %2, metadata !7441, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i8* %0, metadata !7443, metadata !DIExpression()), !dbg !7450
  %10 = icmp eq i32 %2, 0, !dbg !7458
  br i1 %10, label %73, label %11, !dbg !7459

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !7460
  call void @llvm.dbg.value(metadata i32 %12, metadata !7443, metadata !DIExpression()), !dbg !7450
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !7459

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !7441, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i32 %20, metadata !7443, metadata !DIExpression()), !dbg !7450
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !7461
  %22 = shl i32 %21, 1, !dbg !7463
  %23 = add i32 %22, -1, !dbg !7464
  %24 = and i32 %23, %20, !dbg !7465
  %25 = sub i32 %22, %24, !dbg !7466
  %26 = icmp ugt i32 %19, %25, !dbg !7467
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !7468
  call void @llvm.dbg.value(metadata i32 %27, metadata !7447, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.value(metadata i32 %27, metadata !7446, metadata !DIExpression()), !dbg !7450
  store i32 %27, i32* %5, align 4, !dbg !7469
  %28 = load i32, i32* %13, align 4, !dbg !7470
  %29 = and i32 %28, 16, !dbg !7472
  %30 = icmp eq i32 %29, 0, !dbg !7472
  br i1 %30, label %31, label %32, !dbg !7473

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #21, !dbg !7474
  br label %32, !dbg !7476

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !7477
  %34 = icmp eq i8 %33, 4, !dbg !7479
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !7480
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !7480
  %37 = load i8, i8* %36, align 1, !dbg !7480
  %38 = zext i8 %37 to i32, !dbg !7480
  br i1 %34, label %39, label %43, !dbg !7481

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !7444, metadata !DIExpression(DW_OP_deref)), !dbg !7450
  call void @llvm.dbg.value(metadata i32* %5, metadata !7446, metadata !DIExpression(DW_OP_deref)), !dbg !7450
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #20, !dbg !7482
  call void @llvm.dbg.value(metadata i32 %40, metadata !7445, metadata !DIExpression()), !dbg !7450
  %41 = load i8*, i8** %4, align 4, !dbg !7484
  call void @llvm.dbg.value(metadata i8* %41, metadata !7444, metadata !DIExpression()), !dbg !7450
  %42 = load i32, i32* %5, align 4, !dbg !7485
  call void @llvm.dbg.value(metadata i32 %42, metadata !7446, metadata !DIExpression()), !dbg !7450
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #20, !dbg !7486
  br label %47, !dbg !7487

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #20, !dbg !7488
  call void @llvm.dbg.value(metadata i32 %44, metadata !7445, metadata !DIExpression()), !dbg !7450
  %45 = load i8*, i8** %4, align 4, !dbg !7490
  call void @llvm.dbg.value(metadata i8* %45, metadata !7444, metadata !DIExpression()), !dbg !7450
  %46 = load i32, i32* %5, align 4, !dbg !7491
  call void @llvm.dbg.value(metadata i32 %46, metadata !7446, metadata !DIExpression()), !dbg !7450
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #20, !dbg !7492
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !7480
  call void @llvm.dbg.value(metadata i32 %48, metadata !7445, metadata !DIExpression()), !dbg !7450
  %49 = call i32 @SaveAndSetIRQMask() #21, !dbg !7493
  call void @llvm.dbg.value(metadata i32 %49, metadata !7449, metadata !DIExpression()), !dbg !7450
  %50 = load i8, i8* %14, align 1, !dbg !7494
  %51 = zext i8 %50 to i32, !dbg !7495
  %52 = add i32 %27, 1, !dbg !7496
  %53 = add i32 %52, %51, !dbg !7497
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7498
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7499
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7500
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !7501
  %54 = load i16, i16* %16, align 2, !dbg !7502
  call void @SFI_MacEnable(i16 noundef zeroext %54) #20, !dbg !7503
  %55 = load i16, i16* %16, align 2, !dbg !7504
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #20, !dbg !7505
  call void @RestoreIRQMask(i32 noundef %49) #21, !dbg !7506
  br label %56, !dbg !7507

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !7508
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !7510
  %59 = load i8, i8* %58, align 1, !dbg !7510
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #21, !dbg !7511
  call void @llvm.dbg.value(metadata i32 %60, metadata !7448, metadata !DIExpression()), !dbg !7450
  %61 = load i8*, i8** %17, align 4, !dbg !7512
  %62 = load i8, i8* %61, align 1, !dbg !7514
  %63 = zext i8 %62 to i32, !dbg !7514
  %64 = and i32 %60, %63, !dbg !7515
  %65 = icmp eq i32 %64, 0, !dbg !7516
  br i1 %65, label %66, label %56, !dbg !7517, !llvm.loop !7518

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !7520
  %67 = load i32, i32* %5, align 4, !dbg !7521
  call void @llvm.dbg.value(metadata i32 %67, metadata !7446, metadata !DIExpression()), !dbg !7450
  %68 = load i8*, i8** %4, align 4, !dbg !7522
  call void @llvm.dbg.value(metadata i8* %68, metadata !7444, metadata !DIExpression()), !dbg !7450
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !7522
  call void @llvm.dbg.value(metadata i8* %69, metadata !7444, metadata !DIExpression()), !dbg !7450
  store i8* %69, i8** %4, align 4, !dbg !7522
  %70 = sub i32 %19, %27, !dbg !7523
  call void @llvm.dbg.value(metadata i32 %70, metadata !7441, metadata !DIExpression()), !dbg !7450
  %71 = add i32 %27, %20, !dbg !7524
  call void @llvm.dbg.value(metadata i32 %71, metadata !7443, metadata !DIExpression()), !dbg !7450
  %72 = icmp eq i32 %70, 0, !dbg !7458
  br i1 %72, label %73, label %18, !dbg !7459, !llvm.loop !7525

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !7527
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7528
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22, !dbg !7529
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7529
  ret void, !dbg !7529
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !7530 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7534, metadata !DIExpression()), !dbg !7536
  br label %2, !dbg !7537

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #21, !dbg !7538
  call void @llvm.dbg.value(metadata i32 %3, metadata !7535, metadata !DIExpression()), !dbg !7536
  %4 = icmp eq i32 %3, 0, !dbg !7540
  br i1 %4, label %5, label %2, !dbg !7541, !llvm.loop !7542

5:                                                ; preds = %2
  ret void, !dbg !7544
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7545 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7547, metadata !DIExpression()), !dbg !7548
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7549
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !7549
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !7550
  %5 = load i8, i8* %4, align 1, !dbg !7550
  %6 = zext i8 %5 to i32, !dbg !7551
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #21, !dbg !7552
  ret void, !dbg !7553
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !7554 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7557
  call void @llvm.dbg.value(metadata i32 %1, metadata !7556, metadata !DIExpression()), !dbg !7558
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !7559
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7560
  ret void, !dbg !7561
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !7562 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7566, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.value(metadata i8 %1, metadata !7567, metadata !DIExpression()), !dbg !7570
  %3 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7571
  call void @llvm.dbg.value(metadata i32 %3, metadata !7568, metadata !DIExpression()), !dbg !7570
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7572
  %5 = load i16, i16* %4, align 2, !dbg !7572
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #20, !dbg !7573
  %6 = zext i8 %1 to i32, !dbg !7574
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7575
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7576
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7577
  %7 = load i16, i16* %4, align 2, !dbg !7578
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #20, !dbg !7579
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7580
  %9 = lshr i32 %8, 8, !dbg !7581
  %10 = and i32 %9, 255, !dbg !7582
  call void @llvm.dbg.value(metadata i32 %10, metadata !7569, metadata !DIExpression()), !dbg !7570
  tail call void @RestoreIRQMask(i32 noundef %3) #21, !dbg !7583
  ret i32 %10, !dbg !7584
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !7585 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7588
  call void @llvm.dbg.value(metadata i32 %1, metadata !7587, metadata !DIExpression()), !dbg !7589
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !7590
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7591
  %3 = and i32 %2, -513, !dbg !7591
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7591
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7594
  ret void, !dbg !7595
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !7596 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7598, metadata !DIExpression()), !dbg !7600
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7601
  call void @llvm.dbg.value(metadata i32 %2, metadata !7599, metadata !DIExpression()), !dbg !7600
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !7602
  br i1 %3, label %4, label %5, !dbg !7604

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !7605
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !7607
  ret void, !dbg !7608

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !7609
  tail call void @Flash_ReturnReady() #21, !dbg !7611
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.107, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.108, i32 0, i32 0)) #23, !dbg !7611
  unreachable, !dbg !7611
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !7615 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !7617, metadata !DIExpression()), !dbg !7622
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7623
  call void @llvm.dbg.value(metadata i32 %1, metadata !7619, metadata !DIExpression()), !dbg !7622
  %2 = tail call i32 @get_NOR_init_status() #20, !dbg !7624
  %3 = icmp eq i32 %2, 0, !dbg !7626
  br i1 %3, label %4, label %125, !dbg !7627

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !7628
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7629
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !7617, metadata !DIExpression()), !dbg !7622
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !7631
  %7 = load i32, i32* %6, align 4, !dbg !7631
  %8 = xor i32 %7, -1, !dbg !7631
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !7631
  %10 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %9, align 4, !dbg !7631
  %11 = ptrtoint %struct.hal_cache_region_config_t* %10 to i32, !dbg !7631
  %12 = icmp eq i32 %8, %11, !dbg !7631
  br i1 %12, label %14, label %13, !dbg !7634

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !7635
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.107, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.108, i32 0, i32 0)) #23, !dbg !7635
  unreachable, !dbg !7635

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !7637
  %16 = icmp ult i32 %15, 16, !dbg !7639
  br i1 %16, label %17, label %34, !dbg !7640

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !7641
  %19 = load i8, i8* %18, align 4, !dbg !7641
  %20 = icmp eq i8 %19, 1, !dbg !7642
  br i1 %20, label %21, label %34, !dbg !7643

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !7644

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7646
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !7648
  %27 = load i8, i8* %26, align 1, !dbg !7648
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #21, !dbg !7649
  call void @llvm.dbg.value(metadata i32 %28, metadata !7618, metadata !DIExpression()), !dbg !7622
  %29 = load i8*, i8** %23, align 4, !dbg !7650
  %30 = load i8, i8* %29, align 1, !dbg !7652
  %31 = zext i8 %30 to i32, !dbg !7652
  %32 = and i32 %28, %31, !dbg !7653
  %33 = icmp eq i32 %32, 0, !dbg !7654
  br i1 %33, label %34, label %24, !dbg !7655, !llvm.loop !7656

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7658, !range !2654
  %36 = icmp ne i8 %35, 0, !dbg !7658
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !7660
  br i1 %39, label %116, label %40, !dbg !7660

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !7661
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7661
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !7663
  %44 = load i8, i8* %43, align 1, !dbg !7663
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #21, !dbg !7664
  call void @llvm.dbg.value(metadata i32 %45, metadata !7618, metadata !DIExpression()), !dbg !7622
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !7665
  %47 = load i8*, i8** %46, align 4, !dbg !7665
  %48 = load i8, i8* %47, align 1, !dbg !7667
  %49 = zext i8 %48 to i32, !dbg !7667
  %50 = and i32 %45, %49, !dbg !7668
  %51 = icmp eq i32 %50, 0, !dbg !7669
  br i1 %51, label %85, label %52, !dbg !7670

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #21, !dbg !7671
  br label %53, !dbg !7673

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7674
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !7676
  %56 = load i8, i8* %55, align 1, !dbg !7676
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #21, !dbg !7677
  call void @llvm.dbg.value(metadata i32 %57, metadata !7618, metadata !DIExpression()), !dbg !7622
  %58 = load i8*, i8** %46, align 4, !dbg !7678
  %59 = load i8, i8* %58, align 1, !dbg !7680
  %60 = zext i8 %59 to i32, !dbg !7680
  %61 = and i32 %57, %60, !dbg !7681
  %62 = icmp eq i32 %61, 0, !dbg !7682
  br i1 %62, label %63, label %53, !dbg !7683, !llvm.loop !7684

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !7686
  %65 = load i32, i32* %64, align 4, !dbg !7686
  %66 = and i32 %65, 4, !dbg !7688
  %67 = icmp eq i32 %66, 0, !dbg !7688
  br i1 %67, label %84, label %68, !dbg !7689

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !7690
  %70 = load i8, i8* %69, align 4, !dbg !7690
  %71 = icmp eq i8 %70, 2, !dbg !7691
  br i1 %71, label %72, label %84, !dbg !7692

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7693
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7695
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7696
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !7697
  %74 = load i16, i16* %73, align 2, !dbg !7697
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #20, !dbg !7698
  %75 = load i16, i16* %73, align 2, !dbg !7699
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #20, !dbg !7700
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !7701
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7702
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7703
  %76 = load i16, i16* %73, align 2, !dbg !7704
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #20, !dbg !7705
  %77 = load i16, i16* %73, align 2, !dbg !7706
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #20, !dbg !7707
  br label %78, !dbg !7708

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7709
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7711
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7712
  %79 = load i16, i16* %73, align 2, !dbg !7713
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #20, !dbg !7714
  %80 = load i16, i16* %73, align 2, !dbg !7715
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #20, !dbg !7716
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7717
  call void @llvm.dbg.value(metadata i32 %81, metadata !7618, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !7622
  %82 = and i32 %81, 256, !dbg !7718
  %83 = icmp eq i32 %82, 0, !dbg !7718
  br i1 %83, label %84, label %78, !dbg !7718, !llvm.loop !7719

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !7721
  br label %116, !dbg !7722

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !7723
  %87 = load i32, i32* %86, align 4, !dbg !7723
  %88 = and i32 %87, 2, !dbg !7726
  %89 = icmp eq i32 %88, 0, !dbg !7726
  br i1 %89, label %115, label %90, !dbg !7727

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !7728
  %92 = load %struct.anon.9*, %struct.anon.9** %91, align 4, !dbg !7728
  %93 = icmp eq %struct.anon.9* %92, null, !dbg !7729
  br i1 %93, label %94, label %115, !dbg !7730

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7731
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !7733
  %97 = load i8, i8* %96, align 1, !dbg !7733
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #21, !dbg !7734
  call void @llvm.dbg.value(metadata i32 %98, metadata !7618, metadata !DIExpression()), !dbg !7622
  %99 = load i8*, i8** %46, align 4, !dbg !7735
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !7737
  %101 = load i8, i8* %100, align 1, !dbg !7737
  %102 = zext i8 %101 to i32, !dbg !7737
  %103 = and i32 %98, %102, !dbg !7738
  %104 = icmp eq i32 %103, 0, !dbg !7739
  br i1 %104, label %105, label %115, !dbg !7740

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !7741
  %107 = load i8, i8* %106, align 1, !dbg !7741
  %108 = zext i8 %107 to i32, !dbg !7741
  %109 = and i32 %98, %108, !dbg !7742
  %110 = icmp eq i32 %109, 0, !dbg !7743
  br i1 %110, label %111, label %115, !dbg !7744

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !7745
  %113 = load i16, i16* %112, align 2, !dbg !7745
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #20, !dbg !7747
  %114 = load i16, i16* %112, align 2, !dbg !7748
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #20, !dbg !7749
  br label %115, !dbg !7750

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !7751
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !7752
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !7753
  %118 = sub i32 0, %117, !dbg !7753
  call void @llvm.dbg.value(metadata i32 %118, metadata !7620, metadata !DIExpression()), !dbg !7754
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !7755
  %120 = icmp ult i32 %119, %118, !dbg !7757
  br i1 %120, label %121, label %122, !dbg !7758

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !7759
  br label %122, !dbg !7761

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7762
  %124 = and i32 %123, -513, !dbg !7762
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7762
  br label %125, !dbg !7765

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7622
  ret void, !dbg !7766
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7767 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7769, metadata !DIExpression()), !dbg !7773
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !7774
  %3 = icmp eq i32 %2, -1, !dbg !7776
  br i1 %3, label %12, label %4, !dbg !7777

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !7771, metadata !DIExpression()), !dbg !7773
  %5 = sub i32 0, %2, !dbg !7778
  call void @llvm.dbg.value(metadata i32 %5, metadata !7772, metadata !DIExpression()), !dbg !7773
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !7780
  %7 = load i8, i8* %6, align 4, !dbg !7780
  %8 = zext i8 %7 to i32, !dbg !7782
  %9 = icmp ugt i32 %8, %5, !dbg !7783
  br i1 %9, label %10, label %12, !dbg !7784

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !7785
  tail call void @DelayAWhile_UST(i32 noundef %11) #20, !dbg !7787
  br label %12, !dbg !7788

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7789
  call void @llvm.dbg.value(metadata i32 %13, metadata !7770, metadata !DIExpression()), !dbg !7773
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7790
  %15 = load i16, i16* %14, align 2, !dbg !7790
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7791
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !7791
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !7792
  %19 = load i8, i8* %18, align 1, !dbg !7792
  %20 = zext i8 %19 to i32, !dbg !7793
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #20, !dbg !7794
  tail call void @RestoreIRQMask(i32 noundef %13) #21, !dbg !7795
  ret void, !dbg !7796
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !7797 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7800
  call void @llvm.dbg.value(metadata i32 %1, metadata !7799, metadata !DIExpression()), !dbg !7801
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7802
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7803
  %3 = and i32 %2, -513, !dbg !7803
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7803
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7806
  ret void, !dbg !7807
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !7808 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7812, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i32 %1, metadata !7813, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i8 %2, metadata !7814, metadata !DIExpression()), !dbg !7816
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7817
  call void @llvm.dbg.value(metadata i32 %4, metadata !7815, metadata !DIExpression()), !dbg !7816
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7818
  %6 = load i16, i16* %5, align 2, !dbg !7818
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #20, !dbg !7819
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7820
  %7 = zext i8 %2 to i32, !dbg !7821
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7822
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7823
  %8 = load i16, i16* %5, align 2, !dbg !7824
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #20, !dbg !7825
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !7826
  ret void, !dbg !7827
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !7828 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7833
  call void @llvm.dbg.value(metadata i32 %1, metadata !7832, metadata !DIExpression()), !dbg !7834
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !7835
  br i1 %2, label %4, label %3, !dbg !7837

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !7838
  br label %4, !dbg !7840

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !7841
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7841
  ret i32 %5, !dbg !7842
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !7843 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7848
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7845, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.value(metadata i8 0, metadata !7847, metadata !DIExpression()), !dbg !7849
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !7850
  %3 = load i32, i32* %2, align 4, !dbg !7850
  %4 = xor i32 %3, -1, !dbg !7850
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !7850
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %5, align 4, !dbg !7850
  %7 = ptrtoint %struct.hal_cache_region_config_t* %6 to i32, !dbg !7850
  %8 = icmp eq i32 %4, %7, !dbg !7850
  br i1 %8, label %10, label %9, !dbg !7853

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !7854
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.107, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.108, i32 0, i32 0)) #23, !dbg !7854
  unreachable, !dbg !7854

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7856
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7857
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7857
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !7858
  %14 = load i8, i8* %13, align 1, !dbg !7858
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #21, !dbg !7859
  call void @llvm.dbg.value(metadata i32 %15, metadata !7846, metadata !DIExpression()), !dbg !7849
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !7860
  %17 = load i8*, i8** %16, align 4, !dbg !7860
  %18 = load i8, i8* %17, align 1, !dbg !7862
  %19 = zext i8 %18 to i32, !dbg !7862
  %20 = and i32 %15, %19, !dbg !7863
  %21 = icmp eq i32 %20, 0, !dbg !7864
  br i1 %21, label %22, label %23, !dbg !7865

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !7866
  call void @llvm.dbg.value(metadata i8 1, metadata !7847, metadata !DIExpression()), !dbg !7849
  br label %23, !dbg !7868

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !7847, metadata !DIExpression()), !dbg !7849
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7869
  ret i1 %21, !dbg !7870
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !7871 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7873, metadata !DIExpression()), !dbg !7874
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !7875, !range !2654
  %2 = icmp eq i8 %1, 0, !dbg !7875
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7875
  %4 = icmp eq i8 %3, 0, !dbg !7875
  %5 = select i1 %2, i1 true, i1 %4, !dbg !7875
  br i1 %5, label %6, label %7, !dbg !7875

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !7878
  tail call void @Flash_ReturnReady() #21, !dbg !7880
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.107, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.108, i32 0, i32 0)) #23, !dbg !7880
  unreachable, !dbg !7880

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7884
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !7873, metadata !DIExpression()), !dbg !7874
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #21, !dbg !7885
  ret void, !dbg !7886
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7887 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7889, metadata !DIExpression()), !dbg !7891
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7892
  call void @llvm.dbg.value(metadata i32 %2, metadata !7890, metadata !DIExpression()), !dbg !7891
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7893
  %4 = load i16, i16* %3, align 2, !dbg !7893
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7894
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !7894
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !7895
  %8 = load i8, i8* %7, align 1, !dbg !7895
  %9 = zext i8 %8 to i32, !dbg !7896
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #20, !dbg !7897
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !7898
  %11 = load i8, i8* %10, align 4, !dbg !7898
  %12 = icmp eq i8 %11, 0, !dbg !7900
  br i1 %12, label %14, label %13, !dbg !7901

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !7902
  br label %14, !dbg !7904

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !7905
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !7906
  ret void, !dbg !7907
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !7908 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7911
  call void @llvm.dbg.value(metadata i32 %1, metadata !7910, metadata !DIExpression()), !dbg !7912
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7913
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7914
  ret void, !dbg !7915
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !7916 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7920
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7918, metadata !DIExpression()), !dbg !7921
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !7922, !range !2654
  %3 = icmp ne i8 %2, 0, !dbg !7922
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7922
  %5 = icmp eq i8 %4, 0, !dbg !7922
  %6 = select i1 %3, i1 %5, i1 false, !dbg !7922
  br i1 %6, label %8, label %7, !dbg !7922

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !7925
  tail call void @Flash_ReturnReady() #21, !dbg !7927
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.107, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.108, i32 0, i32 0)) #23, !dbg !7927
  unreachable, !dbg !7927

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !7931
  %10 = load i32, i32* %9, align 4, !dbg !7931
  %11 = xor i32 %10, -1, !dbg !7931
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !7931
  %13 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %12, align 4, !dbg !7931
  %14 = ptrtoint %struct.hal_cache_region_config_t* %13 to i32, !dbg !7931
  %15 = icmp eq i32 %11, %14, !dbg !7931
  br i1 %15, label %17, label %16, !dbg !7934

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #21, !dbg !7935
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.107, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.108, i32 0, i32 0)) #23, !dbg !7935
  unreachable, !dbg !7935

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !7937
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !7938

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !7939
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !7941
  %23 = load i8, i8* %22, align 1, !dbg !7941
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #21, !dbg !7942
  call void @llvm.dbg.value(metadata i32 %24, metadata !7919, metadata !DIExpression()), !dbg !7921
  %25 = load i8*, i8** %19, align 4, !dbg !7943
  %26 = load i8, i8* %25, align 1, !dbg !7945
  %27 = zext i8 %26 to i32, !dbg !7945
  %28 = and i32 %24, %27, !dbg !7946
  %29 = icmp eq i32 %28, 0, !dbg !7947
  br i1 %29, label %30, label %20, !dbg !7948, !llvm.loop !7949

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !7951
  ret void, !dbg !7952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #10 section ".ram_code" !dbg !7953 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7955, metadata !DIExpression()), !dbg !7956
  ret void, !dbg !7957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !7958 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !7981, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7982, metadata !DIExpression()), !dbg !7984
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !7985
  %4 = load i8*, i8** %3, align 4, !dbg !7985
  call void @llvm.dbg.value(metadata i8* %4, metadata !7983, metadata !DIExpression()), !dbg !7984
  store i8 1, i8* %4, align 1, !dbg !7986
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !7987
  store i8 2, i8* %5, align 1, !dbg !7988
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !7989
  store i8 8, i8* %6, align 1, !dbg !7990
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !7991
  store i8 4, i8* %7, align 1, !dbg !7992
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !7993
  store i8 60, i8* %8, align 1, !dbg !7994
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !7995
  store i8 -128, i8* %9, align 1, !dbg !7996
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !7997
  store i8 96, i8* %10, align 1, !dbg !7998
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7999
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7999
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !8000
  store i8 43, i8* %13, align 1, !dbg !8001
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8002
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !8003
  store i8 43, i8* %15, align 1, !dbg !8004
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8005
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !8006
  store i8 47, i8* %17, align 1, !dbg !8007
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8008
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !8009
  store i8 5, i8* %19, align 1, !dbg !8010
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8011
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !8012
  store i8 1, i8* %21, align 1, !dbg !8013
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8014
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !8015
  store i8 43, i8* %23, align 1, !dbg !8016
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8017
  store i8 22, i8* %24, align 4, !dbg !8018
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !8019
  %26 = load i8, i8* %25, align 1, !dbg !8019
  %27 = icmp eq i8 %26, 32, !dbg !8021
  br i1 %27, label %28, label %49, !dbg !8022

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !8023
  %30 = load i8, i8* %29, align 1, !dbg !8023
  %31 = icmp eq i8 %30, 24, !dbg !8024
  br i1 %31, label %32, label %41, !dbg !8025

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8026
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !8028
  store i8 117, i8* %34, align 1, !dbg !8029
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8030
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !8031
  store i8 122, i8* %36, align 1, !dbg !8032
  %37 = load i8, i8* %25, align 1, !dbg !8033
  %38 = icmp eq i8 %37, 32, !dbg !8035
  br i1 %38, label %39, label %49, !dbg !8036

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !8038
  br label %41, !dbg !8038

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !8038
  %43 = icmp eq i8 %42, 22, !dbg !8039
  br i1 %43, label %44, label %49, !dbg !8040

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8041
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !8043
  store i8 117, i8* %46, align 1, !dbg !8044
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8045
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !8046
  store i8 122, i8* %48, align 1, !dbg !8047
  br label %49, !dbg !8048

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !8049
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !8050
  ret i32 0, !dbg !8051
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !8052 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8054, metadata !DIExpression()), !dbg !8058
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8059
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8055, metadata !DIExpression()), !dbg !8058
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8060
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !8061
  %5 = load i8, i8* %4, align 1, !dbg !8063
  %6 = icmp eq i8 %5, -62, !dbg !8064
  br i1 %6, label %7, label %15, !dbg !8065

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !8066
  %9 = load i8, i8* %8, align 1, !dbg !8066
  %10 = icmp eq i8 %9, 32, !dbg !8067
  br i1 %10, label %11, label %15, !dbg !8068

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !8069
  %13 = load i8, i8* %12, align 1, !dbg !8069
  %14 = icmp eq i8 %13, 22, !dbg !8070
  br i1 %14, label %48, label %15, !dbg !8071

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !8072
  %17 = bitcast i8* %16 to i16*, !dbg !8072
  %18 = load i16, i16* %17, align 2, !dbg !8072
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8073
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !8073
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8073
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !8074
  %23 = load i8, i8* %22, align 1, !dbg !8074
  %24 = zext i8 %23 to i32, !dbg !8075
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #20, !dbg !8076
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8077
  %25 = load i16, i16* %17, align 2, !dbg !8078
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8079
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !8080
  call void @llvm.dbg.value(metadata i8* %2, metadata !8057, metadata !DIExpression(DW_OP_deref)), !dbg !8058
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !8081
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8082
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !8083
  %30 = load i8, i8* %29, align 1, !dbg !8083
  %31 = zext i8 %30 to i32, !dbg !8084
  call void @llvm.dbg.value(metadata i32 %31, metadata !8056, metadata !DIExpression()), !dbg !8058
  %32 = shl nuw nsw i32 %31, 8, !dbg !8085
  %33 = load i8, i8* %2, align 1, !dbg !8086
  call void @llvm.dbg.value(metadata i8 %33, metadata !8057, metadata !DIExpression()), !dbg !8058
  %34 = zext i8 %33 to i32, !dbg !8086
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8087
  %36 = bitcast i8* %35 to i8**, !dbg !8087
  %37 = load i8*, i8** %36, align 4, !dbg !8087
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !8088
  %39 = load i8, i8* %38, align 1, !dbg !8088
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !8089
  %41 = load i8, i8* %40, align 1, !dbg !8089
  %42 = or i8 %41, %39, !dbg !8090
  %43 = zext i8 %42 to i32, !dbg !8090
  %44 = xor i32 %43, -1, !dbg !8091
  %45 = and i32 %44, %34, !dbg !8092
  %46 = or i32 %45, %32, !dbg !8093
  call void @llvm.dbg.value(metadata i32 %46, metadata !8056, metadata !DIExpression()), !dbg !8058
  %47 = load i16, i16* %17, align 2, !dbg !8094
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #20, !dbg !8095
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8096
  br label %48, !dbg !8097

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8098
  ret i32 0, !dbg !8098
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8099 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8101, metadata !DIExpression()), !dbg !8103
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8104
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !8105

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !8106
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !8108
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !8109
  call void @llvm.dbg.value(metadata i8* %2, metadata !8102, metadata !DIExpression(DW_OP_deref)), !dbg !8103
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !8110
  %10 = load i8, i8* %2, align 1, !dbg !8111
  call void @llvm.dbg.value(metadata i8 %10, metadata !8102, metadata !DIExpression()), !dbg !8103
  %11 = load i8*, i8** %5, align 4, !dbg !8112
  %12 = load i8, i8* %11, align 1, !dbg !8113
  %13 = and i8 %12, %10, !dbg !8114
  %14 = icmp eq i8 %13, 0, !dbg !8115
  br i1 %14, label %15, label %6, !dbg !8116, !llvm.loop !8117

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8119
  ret void, !dbg !8119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !8120 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8122, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8123, metadata !DIExpression()), !dbg !8125
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8126
  %4 = load i8*, i8** %3, align 4, !dbg !8126
  call void @llvm.dbg.value(metadata i8* %4, metadata !8124, metadata !DIExpression()), !dbg !8125
  store i8 1, i8* %4, align 1, !dbg !8127
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !8128
  store i8 2, i8* %5, align 1, !dbg !8129
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !8130
  store i8 -128, i8* %6, align 1, !dbg !8131
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !8132
  store i8 -128, i8* %7, align 1, !dbg !8133
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !8134
  store i8 60, i8* %8, align 1, !dbg !8135
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !8136
  store i8 -128, i8* %9, align 1, !dbg !8137
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8138
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8138
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !8139
  store i8 -97, i8* %12, align 1, !dbg !8140
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8141
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !8142
  store i8 53, i8* %14, align 1, !dbg !8143
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8144
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !8145
  store i8 53, i8* %16, align 1, !dbg !8146
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8147
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !8148
  store i8 5, i8* %18, align 1, !dbg !8149
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8150
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !8151
  store i8 1, i8* %20, align 1, !dbg !8152
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8153
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !8154
  store i8 117, i8* %22, align 1, !dbg !8155
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8156
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !8157
  store i8 122, i8* %24, align 1, !dbg !8158
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8159
  store i8 22, i8* %25, align 4, !dbg !8160
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !8161
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !8162
  ret i32 0, !dbg !8163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #10 !dbg !8164 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8166, metadata !DIExpression()), !dbg !8168
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8167, metadata !DIExpression()), !dbg !8168
  ret i32 0, !dbg !8169
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !8170 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !8172, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8173, metadata !DIExpression()), !dbg !8174
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !8175
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !8176
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !8177
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !8178
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !8179
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !8180
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !8181
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !8182
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !8183
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !8184
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !8185
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !8186
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !8187
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !8188
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !8189
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !8190
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !8191
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !8192
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !8193
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !8194
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !8195
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !8196
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !8197
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !8198
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !8199
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !8200
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !8201
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !8202
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !8203
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !8204
  %18 = tail call i32 @custom_get_NORFLASH_Size() #20, !dbg !8205
  %19 = icmp ugt i32 %18, 16777216, !dbg !8207
  %20 = select i1 %19, i8 4, i8 3, !dbg !8208
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !8209
  store i8 %20, i8* %21, align 1, !dbg !8211
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8212
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8212
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !8213
  store i8 0, i8* %24, align 1, !dbg !8214
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8215
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !8216
  store i8 -81, i8* %26, align 1, !dbg !8217
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8218
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !8219
  store i8 -97, i8* %28, align 1, !dbg !8220
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8221
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !8222
  store i8 2, i8* %30, align 1, !dbg !8223
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8224
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !8225
  store i8 32, i8* %32, align 1, !dbg !8226
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8227
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !8228
  store i8 82, i8* %34, align 1, !dbg !8229
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8230
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !8231
  store i8 -40, i8* %36, align 1, !dbg !8232
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8233
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !8234
  store i8 -80, i8* %38, align 1, !dbg !8235
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8236
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !8237
  store i8 48, i8* %40, align 1, !dbg !8238
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8239
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !8240
  store i8 6, i8* %42, align 1, !dbg !8241
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8242
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !8243
  store i8 -71, i8* %44, align 1, !dbg !8244
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8245
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !8246
  store i8 -85, i8* %46, align 1, !dbg !8247
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8248
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !8249
  store i8 5, i8* %48, align 1, !dbg !8250
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !8251
  store i16 0, i16* %49, align 4, !dbg !8252
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !8253
  store %struct.anon.9* null, %struct.anon.9** %50, align 4, !dbg !8254
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !8255
  store %struct.anon.9* null, %struct.anon.9** %51, align 4, !dbg !8256
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !8257
  store i8 0, i8* %52, align 4, !dbg !8258
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8259
  store i8 5, i8* %53, align 4, !dbg !8260
  ret i32 0, !dbg !8261
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !8262 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8264, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i8* %1, metadata !8265, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i8* %1, metadata !8266, metadata !DIExpression()), !dbg !8282
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8283
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8279, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.value(metadata i32 0, metadata !8280, metadata !DIExpression()), !dbg !8282
  %4 = bitcast i8* %1 to i32*, !dbg !8284
  store i32 0, i32* %4, align 4, !dbg !8285
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.hal_cache_region_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !8280, metadata !DIExpression()), !dbg !8282
  %7 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8286
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %7, i32 0, i32 0, !dbg !8287
  %9 = load i32, i32* %8, align 4, !dbg !8287
  %10 = icmp eq i32 %9, 0, !dbg !8288
  br i1 %10, label %34, label %11, !dbg !8289

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !8289

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !8280, metadata !DIExpression()), !dbg !8282
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !8290
  store i32 %17, i32* %19, align 4, !dbg !8292
  %20 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8293
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %20, i32 %18, i32 1, !dbg !8294
  %22 = load i32, i32* %21, align 4, !dbg !8294
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !8295
  store i32 %22, i32* %23, align 4, !dbg !8296
  %24 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8297
  %25 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %24, i32 %18, i32 1, !dbg !8298
  %26 = load i32, i32* %25, align 4, !dbg !8298
  %27 = load i32, i32* %4, align 4, !dbg !8299
  %28 = add i32 %27, %26, !dbg !8299
  store i32 %28, i32* %4, align 4, !dbg !8299
  %29 = add i32 %18, 1, !dbg !8300
  call void @llvm.dbg.value(metadata i32 %29, metadata !8280, metadata !DIExpression()), !dbg !8282
  %30 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8286
  %31 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %30, i32 %29, i32 0, !dbg !8287
  %32 = load i32, i32* %31, align 4, !dbg !8287
  %33 = icmp eq i32 %32, 0, !dbg !8288
  br i1 %33, label %34, label %16, !dbg !8289, !llvm.loop !8301

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !8282
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !8303
  %37 = bitcast i8* %36 to i32*, !dbg !8303
  store i32 %35, i32* %37, align 4, !dbg !8304
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !8305
  %39 = bitcast i8* %38 to i16*, !dbg !8305
  store i16 512, i16* %39, align 4, !dbg !8306
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8307
  br label %40, !dbg !8308

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8309
  call void @llvm.dbg.value(metadata i32 %41, metadata !8281, metadata !DIExpression()), !dbg !8282
  %42 = icmp eq i32 %41, -121, !dbg !8311
  br i1 %42, label %40, label %43, !dbg !8312, !llvm.loop !8313

43:                                               ; preds = %40
  ret i32 0, !dbg !8315
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !8316 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8318, metadata !DIExpression()), !dbg !8322
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8323
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !8319, metadata !DIExpression()), !dbg !8322
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8324
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !8325

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8326
  call void @llvm.dbg.value(metadata i32 %8, metadata !8321, metadata !DIExpression()), !dbg !8322
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8328, !range !2654
  %10 = icmp eq i8 %9, 0, !dbg !8328
  br i1 %10, label %12, label %11, !dbg !8330

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #21, !dbg !8331
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8333
  br label %12, !dbg !8334

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !8335
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !8336
  %15 = load i8, i8* %14, align 1, !dbg !8336
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #21, !dbg !8337
  call void @llvm.dbg.value(metadata i32 %16, metadata !8320, metadata !DIExpression()), !dbg !8322
  %17 = load i8*, i8** %6, align 4, !dbg !8338
  %18 = load i8, i8* %17, align 1, !dbg !8340
  %19 = zext i8 %18 to i32, !dbg !8340
  %20 = and i32 %16, %19, !dbg !8341
  %21 = icmp eq i32 %20, 0, !dbg !8342
  br i1 %21, label %22, label %25, !dbg !8343

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8344
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !8346
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8347
  %24 = bitcast i8* %23 to i8**, !dbg !8347
  store i8* null, i8** %24, align 4, !dbg !8348
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8349
  ret i32 0, !dbg !8350

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !8351
  br label %7, !dbg !8325, !llvm.loop !8353
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !8355 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8357, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.value(metadata i32 %1, metadata !8358, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.value(metadata i32 0, metadata !8359, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.value(metadata i32 1, metadata !8363, metadata !DIExpression()), !dbg !8371
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8372
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8364, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.value(metadata i32 0, metadata !8365, metadata !DIExpression()), !dbg !8371
  %4 = bitcast i8* %0 to i32*, !dbg !8373
  %5 = load i32, i32* %4, align 4, !dbg !8373
  %6 = xor i32 %5, -1, !dbg !8373
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8373
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !8373
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !8373
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !8373
  %11 = icmp eq i32 %6, %10, !dbg !8373
  br i1 %11, label %13, label %12, !dbg !8376

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !8377
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.107, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.108, i32 0, i32 0)) #23, !dbg !8377
  unreachable, !dbg !8377

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8379
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !8380
  store i8 2, i8* %14, align 4, !dbg !8381
  call void @llvm.dbg.value(metadata i32 %19, metadata !8365, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.value(metadata i32 %1, metadata !8358, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !8371
  br label %15, !dbg !8382

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8383
  call void @llvm.dbg.value(metadata i32 %16, metadata !8359, metadata !DIExpression()), !dbg !8371
  %17 = icmp eq i32 %16, -121, !dbg !8385
  br i1 %17, label %15, label %18, !dbg !8386, !llvm.loop !8387

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !8389
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8390
  %21 = bitcast i8* %20 to i8**, !dbg !8390
  %22 = load i8*, i8** %21, align 4, !dbg !8390
  %23 = ptrtoint i8* %22 to i32, !dbg !8391
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #20, !dbg !8392
  call void @llvm.dbg.value(metadata i32 %24, metadata !8360, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.value(metadata i32 %24, metadata !8361, metadata !DIExpression()), !dbg !8371
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !8393
  %26 = bitcast i8* %25 to i16*, !dbg !8393
  %27 = load i16, i16* %26, align 2, !dbg !8393
  %28 = zext i16 %27 to i32, !dbg !8394
  call void @llvm.dbg.value(metadata i32 %28, metadata !8366, metadata !DIExpression()), !dbg !8395
  %29 = lshr i32 %24, 10, !dbg !8396
  call void @llvm.dbg.value(metadata i32 %29, metadata !8369, metadata !DIExpression()), !dbg !8395
  %30 = and i32 %29, %28, !dbg !8397
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !8399
  %33 = icmp eq i32 %32, 0, !dbg !8399
  call void @llvm.dbg.value(metadata i32 0, metadata !8370, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.value(metadata i32 %29, metadata !8369, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.value(metadata i32 %28, metadata !8366, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.value(metadata i32 1, metadata !8363, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.value(metadata i32 %24, metadata !8361, metadata !DIExpression()), !dbg !8371
  br i1 %33, label %34, label %51, !dbg !8399

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !8370, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.value(metadata i32 %36, metadata !8369, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.value(metadata i32 %37, metadata !8366, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.value(metadata i32 %38, metadata !8363, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.value(metadata i32 %39, metadata !8361, metadata !DIExpression()), !dbg !8371
  %40 = and i32 %37, 1, !dbg !8400
  %41 = icmp eq i32 %40, 0, !dbg !8400
  %42 = add i32 %35, 10, !dbg !8406
  %43 = shl nuw i32 1, %42, !dbg !8406
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !8406
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !8406
  call void @llvm.dbg.value(metadata i32 %45, metadata !8363, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.value(metadata i32 %44, metadata !8361, metadata !DIExpression()), !dbg !8371
  %46 = lshr i32 %37, 1, !dbg !8407
  call void @llvm.dbg.value(metadata i32 %46, metadata !8366, metadata !DIExpression()), !dbg !8395
  %47 = lshr i32 %36, 1, !dbg !8408
  call void @llvm.dbg.value(metadata i32 %47, metadata !8369, metadata !DIExpression()), !dbg !8395
  %48 = add i32 %35, 1, !dbg !8409
  call void @llvm.dbg.value(metadata i32 %48, metadata !8370, metadata !DIExpression()), !dbg !8395
  %49 = and i32 %36, 2, !dbg !8410
  %50 = icmp eq i32 %49, 0, !dbg !8410
  br i1 %50, label %34, label %51, !dbg !8411, !llvm.loop !8412

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !8414
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !8415
  call void @llvm.dbg.value(metadata i32 %53, metadata !8363, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.value(metadata i32 %52, metadata !8361, metadata !DIExpression()), !dbg !8371
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !8416

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8417
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !8417
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !8417
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !8419
  br label %70, !dbg !8420

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8421
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !8421
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !8421
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !8422
  br label %70, !dbg !8423

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8424
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !8424
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !8424
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !8425
  br label %70, !dbg !8426

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #21, !dbg !8427
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.107, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.108, i32 0, i32 0)) #23, !dbg !8427
  unreachable, !dbg !8427

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !8431
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !8431
  store i8 %73, i8* %74, align 1, !dbg !8431
  call void @llvm.dbg.value(metadata i32 %53, metadata !8363, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.value(metadata i32 %52, metadata !8361, metadata !DIExpression()), !dbg !8371
  %75 = trunc i32 %19 to i8, !dbg !8432
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !8432

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8433
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !8433
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !8433
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !8435
  br label %91, !dbg !8436

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8437
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !8437
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !8437
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !8438
  br label %91, !dbg !8439

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8440
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !8440
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !8440
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !8441
  br label %91, !dbg !8442

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !8443
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !8443
  store i8 %94, i8* %95, align 1, !dbg !8443
  br label %96, !dbg !8444

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !8362, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.value(metadata i32 %53, metadata !8363, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.value(metadata i32 %16, metadata !8359, metadata !DIExpression()), !dbg !8371
  %97 = icmp eq i32 %53, 0, !dbg !8444
  br i1 %97, label %111, label %98, !dbg !8447

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !8448
  call void @llvm.dbg.value(metadata i8* %99, metadata !8362, metadata !DIExpression()), !dbg !8371
  %100 = ptrtoint i8* %99 to i32, !dbg !8449
  call void @llvm.dbg.value(metadata i32 %100, metadata !8362, metadata !DIExpression()), !dbg !8371
  br label %101, !dbg !8447

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !8363, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.value(metadata i32 %103, metadata !8362, metadata !DIExpression()), !dbg !8371
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #21, !dbg !8450
  br label %104, !dbg !8452

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8453
  call void @llvm.dbg.value(metadata i32 %105, metadata !8359, metadata !DIExpression()), !dbg !8371
  %106 = icmp eq i32 %105, -121, !dbg !8455
  br i1 %106, label %104, label %107, !dbg !8457, !llvm.loop !8458

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !8460
  call void @llvm.dbg.value(metadata i32 %108, metadata !8363, metadata !DIExpression()), !dbg !8371
  %109 = add i32 %103, %52, !dbg !8461
  call void @llvm.dbg.value(metadata i32 %109, metadata !8362, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.value(metadata i32 %105, metadata !8359, metadata !DIExpression()), !dbg !8371
  %110 = icmp eq i32 %108, 0, !dbg !8444
  br i1 %110, label %111, label %101, !dbg !8447, !llvm.loop !8462

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !8371
  store i8 0, i8* %14, align 4, !dbg !8464
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8465
  ret i32 %112, !dbg !8466
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !8467 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8469, metadata !DIExpression()), !dbg !8486
  call void @llvm.dbg.value(metadata i8* %1, metadata !8470, metadata !DIExpression()), !dbg !8486
  call void @llvm.dbg.value(metadata i8* %2, metadata !8471, metadata !DIExpression()), !dbg !8486
  call void @llvm.dbg.value(metadata i32 %3, metadata !8472, metadata !DIExpression()), !dbg !8486
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8487
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !8473, metadata !DIExpression()), !dbg !8486
  %8 = ptrtoint i8* %1 to i32, !dbg !8488
  call void @llvm.dbg.value(metadata i32 %8, metadata !8475, metadata !DIExpression()), !dbg !8486
  %9 = bitcast i8** %5 to i8*, !dbg !8489
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #22, !dbg !8489
  call void @llvm.dbg.value(metadata i8* %2, metadata !8476, metadata !DIExpression()), !dbg !8486
  store i8* %2, i8** %5, align 4, !dbg !8490
  call void @llvm.dbg.value(metadata i32 0, metadata !8478, metadata !DIExpression()), !dbg !8486
  %10 = bitcast i32* %6 to i8*, !dbg !8491
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #22, !dbg !8491
  %11 = bitcast i8* %0 to i32*, !dbg !8492
  %12 = load i32, i32* %11, align 4, !dbg !8492
  %13 = xor i32 %12, -1, !dbg !8492
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8492
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !8492
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !8492
  %17 = ptrtoint %struct.hal_cache_region_config_t* %16 to i32, !dbg !8492
  %18 = icmp eq i32 %13, %17, !dbg !8492
  br i1 %18, label %20, label %19, !dbg !8495

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !8496
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.107, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.108, i32 0, i32 0)) #23, !dbg !8496
  unreachable, !dbg !8496

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8498
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !8499
  store i8 1, i8* %21, align 4, !dbg !8500
  br label %22, !dbg !8501

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8502
  call void @llvm.dbg.value(metadata i32 %23, metadata !8478, metadata !DIExpression()), !dbg !8486
  %24 = icmp eq i32 %23, -121, !dbg !8504
  br i1 %24, label %22, label %25, !dbg !8505, !llvm.loop !8506

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !8508
  br i1 %26, label %104, label %27, !dbg !8509

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !8509

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !8510
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !8486
  call void @llvm.dbg.value(metadata i32 %38, metadata !8475, metadata !DIExpression()), !dbg !8486
  call void @llvm.dbg.value(metadata i32 %37, metadata !8472, metadata !DIExpression()), !dbg !8486
  call void @llvm.dbg.value(metadata i8* %36, metadata !8476, metadata !DIExpression()), !dbg !8486
  call void @llvm.dbg.value(metadata i8* %36, metadata !8477, metadata !DIExpression()), !dbg !8486
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8511
  %40 = shl i32 %39, 1, !dbg !8512
  %41 = add i32 %40, -1, !dbg !8513
  %42 = and i32 %41, %38, !dbg !8514
  %43 = sub i32 %40, %42, !dbg !8515
  %44 = icmp ugt i32 %37, %43, !dbg !8516
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !8517
  call void @llvm.dbg.value(metadata i32 %45, metadata !8479, metadata !DIExpression()), !dbg !8486
  call void @llvm.dbg.value(metadata i32 %45, metadata !8480, metadata !DIExpression()), !dbg !8486
  store i32 %45, i32* %6, align 4, !dbg !8518
  call void @llvm.dbg.value(metadata i8* %36, metadata !8476, metadata !DIExpression()), !dbg !8486
  %46 = ptrtoint i8* %36 to i32, !dbg !8519
  %47 = and i32 %46, 134217728, !dbg !8520
  %48 = icmp eq i32 %47, 0, !dbg !8520
  br i1 %48, label %58, label %49, !dbg !8521

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !8482, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata i32 %45, metadata !8480, metadata !DIExpression()), !dbg !8486
  %50 = icmp eq i32 %45, 0, !dbg !8523
  br i1 %50, label %58, label %51, !dbg !8526

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !8482, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata i8* %36, metadata !8476, metadata !DIExpression()), !dbg !8486
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !8527
  %54 = load i8, i8* %53, align 1, !dbg !8527
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !8529
  store i8 %54, i8* %55, align 1, !dbg !8530
  %56 = add nuw i32 %52, 1, !dbg !8531
  call void @llvm.dbg.value(metadata i32 %56, metadata !8482, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata i32 %45, metadata !8480, metadata !DIExpression()), !dbg !8486
  %57 = icmp eq i32 %56, %45, !dbg !8523
  br i1 %57, label %58, label %51, !dbg !8526, !llvm.loop !8532

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !8534
  call void @llvm.dbg.value(metadata i8* %59, metadata !8477, metadata !DIExpression()), !dbg !8486
  %60 = load i32, i32* %29, align 4, !dbg !8535
  %61 = and i32 %60, 16, !dbg !8537
  %62 = icmp eq i32 %61, 0, !dbg !8537
  br i1 %62, label %63, label %64, !dbg !8538

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #21, !dbg !8539
  br label %64, !dbg !8541

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !8542
  %66 = icmp eq i8 %65, 4, !dbg !8544
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !8545
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !8545
  %69 = load i8, i8* %68, align 1, !dbg !8545
  %70 = zext i8 %69 to i32, !dbg !8545
  br i1 %66, label %71, label %75, !dbg !8546

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !8476, metadata !DIExpression(DW_OP_deref)), !dbg !8486
  call void @llvm.dbg.value(metadata i32* %6, metadata !8480, metadata !DIExpression(DW_OP_deref)), !dbg !8486
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #20, !dbg !8547
  call void @llvm.dbg.value(metadata i32 %72, metadata !8481, metadata !DIExpression()), !dbg !8486
  %73 = load i8*, i8** %5, align 4, !dbg !8549
  call void @llvm.dbg.value(metadata i8* %73, metadata !8476, metadata !DIExpression()), !dbg !8486
  %74 = load i32, i32* %6, align 4, !dbg !8550
  call void @llvm.dbg.value(metadata i32 %74, metadata !8480, metadata !DIExpression()), !dbg !8486
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #20, !dbg !8551
  br label %79, !dbg !8552

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #20, !dbg !8553
  call void @llvm.dbg.value(metadata i32 %76, metadata !8481, metadata !DIExpression()), !dbg !8486
  %77 = load i8*, i8** %5, align 4, !dbg !8555
  call void @llvm.dbg.value(metadata i8* %77, metadata !8476, metadata !DIExpression()), !dbg !8486
  %78 = load i32, i32* %6, align 4, !dbg !8556
  call void @llvm.dbg.value(metadata i32 %78, metadata !8480, metadata !DIExpression()), !dbg !8486
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #20, !dbg !8557
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !8545
  call void @llvm.dbg.value(metadata i32 %80, metadata !8481, metadata !DIExpression()), !dbg !8486
  %81 = call i32 @SaveAndSetIRQMask() #21, !dbg !8558
  call void @llvm.dbg.value(metadata i32 %81, metadata !8474, metadata !DIExpression()), !dbg !8486
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8559
  %82 = load i8, i8* %30, align 1, !dbg !8560
  %83 = zext i8 %82 to i32, !dbg !8561
  %84 = add i32 %45, 1, !dbg !8562
  %85 = add i32 %84, %83, !dbg !8563
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8564
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8565
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !8566
  %86 = load i16, i16* %34, align 2, !dbg !8567
  call void @SFI_MacEnable(i16 noundef zeroext %86) #20, !dbg !8568
  %87 = load i16, i16* %34, align 2, !dbg !8569
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #20, !dbg !8570
  call void @RestoreIRQMask(i32 noundef %81) #21, !dbg !8571
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !8572

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !8573
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #21, !dbg !8575
  call void @llvm.dbg.value(metadata i32 %94, metadata !8478, metadata !DIExpression()), !dbg !8486
  %95 = icmp eq i32 %94, 0, !dbg !8576
  br i1 %95, label %92, label %96, !dbg !8577, !llvm.loop !8578

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !8580
  call void @llvm.dbg.value(metadata i32 %97, metadata !8480, metadata !DIExpression()), !dbg !8486
  %98 = load i8*, i8** %5, align 4, !dbg !8581
  call void @llvm.dbg.value(metadata i8* %98, metadata !8476, metadata !DIExpression()), !dbg !8486
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !8581
  call void @llvm.dbg.value(metadata i8* %99, metadata !8476, metadata !DIExpression()), !dbg !8486
  store i8* %99, i8** %5, align 4, !dbg !8581
  %100 = sub i32 %37, %45, !dbg !8582
  call void @llvm.dbg.value(metadata i32 %100, metadata !8472, metadata !DIExpression()), !dbg !8486
  call void @llvm.dbg.value(metadata i32 undef, metadata !8475, metadata !DIExpression()), !dbg !8486
  %101 = icmp eq i32 %94, 1, !dbg !8583
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !8585
  br i1 %103, label %35, label %104, !dbg !8585, !llvm.loop !8586

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !8486
  call void @llvm.dbg.value(metadata i32 %105, metadata !8478, metadata !DIExpression()), !dbg !8486
  store i8 0, i8* %21, align 4, !dbg !8588
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8589
  %106 = icmp eq i32 %105, 1, !dbg !8590
  %107 = select i1 %106, i32 0, i32 %105, !dbg !8486
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #22, !dbg !8592
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #22, !dbg !8592
  ret i32 %107, !dbg !8592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #10 section ".ram_code" !dbg !8593 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8595, metadata !DIExpression()), !dbg !8597
  call void @llvm.dbg.value(metadata i32 undef, metadata !8596, metadata !DIExpression()), !dbg !8597
  ret i32 -12, !dbg !8598
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8599 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8601, metadata !DIExpression()), !dbg !8611
  call void @llvm.dbg.value(metadata i32 undef, metadata !8602, metadata !DIExpression()), !dbg !8611
  call void @llvm.dbg.value(metadata i32 0, metadata !8604, metadata !DIExpression()), !dbg !8611
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8612
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8605, metadata !DIExpression()), !dbg !8611
  %4 = bitcast i8* %0 to i32*, !dbg !8613
  %5 = load i32, i32* %4, align 4, !dbg !8613
  %6 = xor i32 %5, -1, !dbg !8613
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8613
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !8613
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !8613
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !8613
  %11 = icmp eq i32 %6, %10, !dbg !8613
  br i1 %11, label %13, label %12, !dbg !8616

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !8617
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.107, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.108, i32 0, i32 0)) #23, !dbg !8617
  unreachable, !dbg !8617

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8619
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !8619
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8619
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !8620
  %18 = load i8, i8* %17, align 1, !dbg !8620
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #21, !dbg !8621
  call void @llvm.dbg.value(metadata i32 %19, metadata !8606, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8611
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8622
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !8623
  %22 = load i8, i8* %21, align 1, !dbg !8623
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #21, !dbg !8624
  call void @llvm.dbg.value(metadata i32 %23, metadata !8607, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8611
  %24 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8625
  call void @llvm.dbg.value(metadata i32 %24, metadata !8604, metadata !DIExpression()), !dbg !8611
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8626
  %26 = bitcast i8* %25 to i8**, !dbg !8626
  %27 = load i8*, i8** %26, align 4, !dbg !8626
  %28 = load i8, i8* %27, align 1, !dbg !8627
  %29 = zext i8 %28 to i32, !dbg !8627
  %30 = and i32 %19, %29, !dbg !8628
  %31 = icmp eq i32 %30, 0, !dbg !8629
  br i1 %31, label %32, label %62, !dbg !8630

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !8607, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8611
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !8631
  %34 = load i8, i8* %33, align 1, !dbg !8631
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !8632
  %36 = load i8, i8* %35, align 1, !dbg !8632
  %37 = or i8 %36, %34, !dbg !8633
  call void @llvm.dbg.value(metadata i8 %37, metadata !8608, metadata !DIExpression()), !dbg !8634
  %38 = zext i8 %37 to i32, !dbg !8635
  %39 = and i32 %23, %38, !dbg !8637
  %40 = icmp eq i32 %39, 0, !dbg !8638
  br i1 %40, label %41, label %46, !dbg !8639

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !8640
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !8641
  br i1 %45, label %51, label %46, !dbg !8641

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8642, !range !2654
  %48 = icmp eq i8 %47, 0, !dbg !8642
  br i1 %48, label %49, label %50, !dbg !8646

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #21, !dbg !8647
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.107, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.108, i32 0, i32 0)) #23, !dbg !8647
  unreachable, !dbg !8647

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8649
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8650
  call void @llvm.dbg.value(metadata i32 -121, metadata !8603, metadata !DIExpression()), !dbg !8611
  br label %62, !dbg !8651

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !8652
  %53 = bitcast i8* %52 to i32*, !dbg !8652
  %54 = load i32, i32* %53, align 4, !dbg !8652
  %55 = and i32 %54, 2, !dbg !8655
  %56 = icmp eq i32 %55, 0, !dbg !8655
  br i1 %56, label %63, label %57, !dbg !8656

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !8657
  %59 = bitcast i8* %58 to i16*, !dbg !8657
  %60 = load i16, i16* %59, align 2, !dbg !8657
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #20, !dbg !8659
  %61 = load i16, i16* %59, align 2, !dbg !8660
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #20, !dbg !8661
  br label %63, !dbg !8662

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !8603, metadata !DIExpression()), !dbg !8611
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !8663
  br label %65, !dbg !8664

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8665
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !8666
  call void @llvm.dbg.value(metadata i32 0, metadata !8603, metadata !DIExpression()), !dbg !8611
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !8663
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !8667
  call void @llvm.dbg.value(metadata i32 %64, metadata !8603, metadata !DIExpression()), !dbg !8611
  br label %65, !dbg !8670

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !8611
  call void @llvm.dbg.value(metadata i32 %66, metadata !8603, metadata !DIExpression()), !dbg !8611
  ret i32 %66, !dbg !8671
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8672 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8674, metadata !DIExpression()), !dbg !8679
  call void @llvm.dbg.value(metadata i32 undef, metadata !8675, metadata !DIExpression()), !dbg !8679
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8680
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8676, metadata !DIExpression()), !dbg !8679
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8681
  call void @llvm.dbg.value(metadata i32 %4, metadata !8678, metadata !DIExpression()), !dbg !8679
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #21, !dbg !8682
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !8683

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !8684
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !8686
  %12 = load i8, i8* %11, align 1, !dbg !8686
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #21, !dbg !8687
  call void @llvm.dbg.value(metadata i32 %13, metadata !8677, metadata !DIExpression()), !dbg !8679
  %14 = load i8*, i8** %8, align 4, !dbg !8688
  %15 = load i8, i8* %14, align 1, !dbg !8690
  %16 = zext i8 %15 to i32, !dbg !8690
  %17 = and i32 %13, %16, !dbg !8691
  %18 = icmp eq i32 %17, 0, !dbg !8692
  br i1 %18, label %19, label %9, !dbg !8693, !llvm.loop !8694

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !8696
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !8697
  ret i32 0, !dbg !8698
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8699 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8701, metadata !DIExpression()), !dbg !8704
  call void @llvm.dbg.value(metadata i32 undef, metadata !8702, metadata !DIExpression()), !dbg !8704
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8705
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8703, metadata !DIExpression()), !dbg !8704
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8706
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #21, !dbg !8707
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8708
  ret i32 0, !dbg !8709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #10 section ".ram_code" !dbg !8710 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8712, metadata !DIExpression()), !dbg !8715
  call void @llvm.dbg.value(metadata i8* undef, metadata !8713, metadata !DIExpression()), !dbg !8715
  call void @llvm.dbg.value(metadata i32 undef, metadata !8714, metadata !DIExpression()), !dbg !8715
  ret i32 0, !dbg !8716
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !8717 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8719, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.value(metadata i32 %1, metadata !8720, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.value(metadata i8* undef, metadata !8721, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.value(metadata i8* %0, metadata !8722, metadata !DIExpression()), !dbg !8723
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !8724

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !8722, metadata !DIExpression()), !dbg !8723
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !8725
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !8725
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !8725
  %8 = tail call i32 %7(i8* noundef %0) #20, !dbg !8728
  br label %21, !dbg !8729

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !8730
  %11 = load i8, i8* %10, align 1, !dbg !8734
  %12 = icmp eq i8 %11, -62, !dbg !8735
  br i1 %12, label %13, label %21, !dbg !8736

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8737
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !8737
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !8737
  %17 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %16, i32 0, i32 0, !dbg !8738
  %18 = load i32, i32* %17, align 4, !dbg !8738
  %19 = icmp eq i32 %18, 262144, !dbg !8739
  br i1 %19, label %22, label %21, !dbg !8740

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !8741
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.107, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.108, i32 0, i32 0)) #23, !dbg !8741
  unreachable, !dbg !8741

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !8746

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !8723
  ret i32 %23, !dbg !8747
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8748 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8750, metadata !DIExpression()), !dbg !8753
  call void @llvm.dbg.value(metadata i8* %0, metadata !8751, metadata !DIExpression()), !dbg !8753
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8754
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !8754
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !8754
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !8756
  %6 = load i8, i8* %5, align 1, !dbg !8756
  %7 = icmp eq i8 %6, 0, !dbg !8757
  br i1 %7, label %19, label %8, !dbg !8758

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8759
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !8751, metadata !DIExpression()), !dbg !8753
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #21, !dbg !8760
  call void @llvm.dbg.value(metadata i32 %10, metadata !8752, metadata !DIExpression()), !dbg !8753
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8762
  %12 = bitcast i8* %11 to i8**, !dbg !8762
  %13 = load i8*, i8** %12, align 4, !dbg !8762
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !8764
  %15 = load i8, i8* %14, align 1, !dbg !8764
  %16 = zext i8 %15 to i32, !dbg !8764
  %17 = and i32 %10, %16, !dbg !8765
  %18 = icmp eq i32 %17, 0, !dbg !8765
  br i1 %18, label %19, label %20, !dbg !8766

19:                                               ; preds = %8, %1
  br label %20, !dbg !8767

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !8753
  ret i32 %21, !dbg !8768
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !8769 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8773, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i32 %1, metadata !8774, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i8 %2, metadata !8775, metadata !DIExpression()), !dbg !8781
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8782
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !8777, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i32 0, metadata !8778, metadata !DIExpression()), !dbg !8781
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8783
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !8783
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !8783
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !8784
  %9 = load i8, i8* %8, align 1, !dbg !8784
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #21, !dbg !8785
  call void @llvm.dbg.value(metadata i32 %10, metadata !8780, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8781
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8786, !range !2654
  %12 = icmp eq i8 %11, 0, !dbg !8786
  br i1 %12, label %18, label %13, !dbg !8788

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8789, !range !2654
  %15 = icmp eq i8 %14, 0, !dbg !8789
  br i1 %15, label %16, label %17, !dbg !8793

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #21, !dbg !8794
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.107, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.108, i32 0, i32 0)) #23, !dbg !8794
  unreachable, !dbg !8794

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #21, !dbg !8796
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8797
  br label %42, !dbg !8798

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !8780, metadata !DIExpression()), !dbg !8781
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8799
  %20 = bitcast i8* %19 to i8**, !dbg !8799
  %21 = load i8*, i8** %20, align 4, !dbg !8799
  %22 = load i8, i8* %21, align 1, !dbg !8801
  %23 = zext i8 %22 to i32, !dbg !8801
  %24 = and i32 %10, %23, !dbg !8802
  %25 = icmp eq i32 %24, 0, !dbg !8803
  br i1 %25, label %26, label %42, !dbg !8804

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8805
  call void @llvm.dbg.value(metadata i32 %27, metadata !8776, metadata !DIExpression()), !dbg !8781
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8807
  %28 = inttoptr i32 %1 to i8*, !dbg !8808
  %29 = load volatile i8, i8* %28, align 1, !dbg !8809
  call void @llvm.dbg.value(metadata i8 %29, metadata !8779, metadata !DIExpression()), !dbg !8781
  %30 = icmp eq i8 %29, %2, !dbg !8810
  br i1 %30, label %39, label %31, !dbg !8812

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !8778, metadata !DIExpression()), !dbg !8781
  %32 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !8813
  br i1 %32, label %33, label %38, !dbg !8816

33:                                               ; preds = %31
  %34 = and i32 %1, -32, !dbg !8817
  %35 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %34) #20, !dbg !8819
  %36 = load volatile i8, i8* %28, align 1, !dbg !8820
  %37 = icmp eq i8 %36, %2, !dbg !8822
  br i1 %37, label %39, label %38, !dbg !8823

38:                                               ; preds = %33, %31
  call void @llvm.dbg.value(metadata i32 -1, metadata !8778, metadata !DIExpression()), !dbg !8781
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !8824
  br label %42, !dbg !8825

39:                                               ; preds = %33, %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !8778, metadata !DIExpression()), !dbg !8781
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !8824
  %40 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !8826
  %41 = icmp eq i32 %40, 0, !dbg !8829
  br i1 %41, label %42, label %44, !dbg !8830

42:                                               ; preds = %18, %17, %38, %39
  %43 = phi i32 [ 1, %39 ], [ -1, %38 ], [ 0, %17 ], [ 0, %18 ]
  br label %44, !dbg !8831

44:                                               ; preds = %39, %42
  %45 = phi i32 [ %43, %42 ], [ -1, %39 ], !dbg !8781
  ret i32 %45, !dbg !8832
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !8833 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8837, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata i32 %1, metadata !8838, metadata !DIExpression()), !dbg !8840
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !8841
  %4 = load i32, i32* %3, align 4, !dbg !8841
  %5 = and i32 %4, 16, !dbg !8843
  %6 = icmp eq i32 %5, 0, !dbg !8843
  br i1 %6, label %7, label %8, !dbg !8844

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #21, !dbg !8845
  br label %8, !dbg !8847

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8848
  call void @llvm.dbg.value(metadata i32 %9, metadata !8839, metadata !DIExpression()), !dbg !8840
  tail call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !8849
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8850
  %11 = load i16, i16* %10, align 2, !dbg !8850
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8851
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !8851
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !8852
  %15 = load i8, i8* %14, align 1, !dbg !8852
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !8853
  %17 = load i8, i8* %16, align 1, !dbg !8853
  %18 = zext i8 %17 to i32, !dbg !8854
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #20, !dbg !8855
  tail call void @RestoreIRQMask(i32 noundef %9) #21, !dbg !8856
  ret void, !dbg !8857
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !8858 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8860, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8861, metadata !DIExpression()), !dbg !8863
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !8864
  %4 = load i8, i8* %3, align 1, !dbg !8864
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !8865

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !8866
  %7 = load i32, i32* %6, align 4, !dbg !8868
  %8 = or i32 %7, 4, !dbg !8868
  store i32 %8, i32* %6, align 4, !dbg !8868
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8869
  call void @llvm.dbg.value(metadata i32 0, metadata !8862, metadata !DIExpression()), !dbg !8863
  br label %18, !dbg !8870

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !8871
  %12 = load i32, i32* %11, align 4, !dbg !8872
  %13 = or i32 %12, 2, !dbg !8872
  store i32 %13, i32* %11, align 4, !dbg !8872
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8873
  call void @llvm.dbg.value(metadata i32 0, metadata !8862, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.value(metadata i32 0, metadata !8862, metadata !DIExpression()), !dbg !8863
  br label %18, !dbg !8874

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8875
  call void @llvm.dbg.value(metadata i32 0, metadata !8862, metadata !DIExpression()), !dbg !8863
  br label %18, !dbg !8876

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !8862, metadata !DIExpression()), !dbg !8863
  tail call void @Flash_ReturnReady() #21, !dbg !8877
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.107, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.108, i32 0, i32 0)) #23, !dbg !8877
  unreachable, !dbg !8877

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !8862, metadata !DIExpression()), !dbg !8863
  ret i32 0, !dbg !8881
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !8882 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !8886, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8887, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata i32 %2, metadata !8888, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata i32 %3, metadata !8889, metadata !DIExpression()), !dbg !8891
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !8892
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !8894
  br i1 %7, label %33, label %8, !dbg !8894

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8895
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8895
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !8897
  br i1 %11, label %33, label %12, !dbg !8898

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8899
  %14 = load i8*, i8** %13, align 4, !dbg !8899
  %15 = icmp eq i8* %14, null, !dbg !8900
  br i1 %15, label %33, label %16, !dbg !8901

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !8902
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !8903
  store i8* %17, i8** %18, align 4, !dbg !8904
  %19 = trunc i32 %3 to i16, !dbg !8905
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !8906
  store i16 %19, i16* %20, align 2, !dbg !8907
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8908
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8909
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !8910
  store i8 -81, i8* %23, align 1, !dbg !8911
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !8912
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !8913
  %25 = load i8, i8* %24, align 1, !dbg !8914
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !8916

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #20, !dbg !8917
  br i1 %27, label %31, label %28, !dbg !8918

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8919
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !8921
  store i8 -97, i8* %30, align 1, !dbg !8922
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !8923
  br label %31, !dbg !8924

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8925
  call void @llvm.dbg.value(metadata i32 0, metadata !8890, metadata !DIExpression()), !dbg !8891
  br label %33, !dbg !8926

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !8891
  ret i32 %34, !dbg !8927
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !8928 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8932, metadata !DIExpression()), !dbg !8935
  call void @llvm.dbg.value(metadata i8* %1, metadata !8933, metadata !DIExpression()), !dbg !8935
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !8936
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8937
  %5 = and i32 %4, 1, !dbg !8937
  %6 = icmp eq i32 %5, 0, !dbg !8939
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8940
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !8940
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !8941
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !8941
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !8941
  %12 = load i8, i8* %11, align 1, !dbg !8940
  store i8 %12, i8* %3, align 1, !dbg !8940
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8942
  %14 = load i16, i16* %13, align 2, !dbg !8942
  call void @llvm.dbg.value(metadata i8* %3, metadata !8934, metadata !DIExpression(DW_OP_deref)), !dbg !8935
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8943
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !8944
  ret void, !dbg !8944
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !8945 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8949, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata i8* %1, metadata !8950, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata i8* %2, metadata !8951, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata i16 %3, metadata !8952, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata i16 %4, metadata !8953, metadata !DIExpression()), !dbg !8955
  %6 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8956
  call void @llvm.dbg.value(metadata i32 %6, metadata !8954, metadata !DIExpression()), !dbg !8955
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #20, !dbg !8957
  tail call void @RestoreIRQMask(i32 noundef %6) #21, !dbg !8958
  ret void, !dbg !8959
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !8960 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8962, metadata !DIExpression()), !dbg !8968
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8965, metadata !DIExpression()), !dbg !8968
  call void @llvm.dbg.value(metadata i32 0, metadata !8963, metadata !DIExpression()), !dbg !8968
  br label %6, !dbg !8969

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !8971
  call void @llvm.dbg.value(metadata i32 %3, metadata !8963, metadata !DIExpression()), !dbg !8968
  call void @llvm.dbg.value(metadata i32 %8, metadata !8963, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8968
  %4 = icmp ult i32 %8, 4, !dbg !8973
  %5 = icmp eq i32 %3, 5, !dbg !8973
  br i1 %5, label %26, label %6, !dbg !8969, !llvm.loop !8974

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8963, metadata !DIExpression()), !dbg !8968
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8964, metadata !DIExpression()), !dbg !8968
  %12 = icmp eq i8 %10, 0, !dbg !8976
  br i1 %12, label %23, label %13, !dbg !8980

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8964, metadata !DIExpression()), !dbg !8968
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8981
  %16 = load i8, i8* %15, align 1, !dbg !8981
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !8984
  %18 = load i8, i8* %17, align 1, !dbg !8984
  %19 = icmp eq i8 %16, %18, !dbg !8985
  br i1 %19, label %20, label %23, !dbg !8986

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !8987
  call void @llvm.dbg.value(metadata i32 %21, metadata !8964, metadata !DIExpression()), !dbg !8968
  %22 = icmp eq i32 %21, %11, !dbg !8976
  br i1 %22, label %26, label %13, !dbg !8980, !llvm.loop !8988

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !8990
  %25 = icmp eq i32 %24, %11, !dbg !8991
  call void @llvm.dbg.value(metadata i32 %8, metadata !8963, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8968
  br i1 %25, label %26, label %2, !dbg !8993

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !8973
  ret i1 %27, !dbg !8994
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !8995 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !9007
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9007
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !8999, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9006, metadata !DIExpression()), !dbg !9009
  %3 = load i16, i16* @cmem_index, align 2, !dbg !9010
  %4 = icmp sgt i16 %3, -1, !dbg !9012
  br i1 %4, label %34, label %5, !dbg !9013

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !9014
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #20, !dbg !9015
  call void @llvm.dbg.value(metadata i32 0, metadata !8997, metadata !DIExpression()), !dbg !9009
  br label %7, !dbg !9016

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8997, metadata !DIExpression()), !dbg !9009
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8998, metadata !DIExpression()), !dbg !9009
  %12 = icmp eq i8 %10, 0, !dbg !9018
  br i1 %12, label %24, label %13, !dbg !9023

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8998, metadata !DIExpression()), !dbg !9009
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9024
  %16 = load i8, i8* %15, align 1, !dbg !9024
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !9027
  %18 = load i16, i16* %17, align 2, !dbg !9027
  %19 = zext i8 %16 to i16, !dbg !9028
  %20 = icmp eq i16 %18, %19, !dbg !9028
  br i1 %20, label %21, label %24, !dbg !9029

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !9030
  call void @llvm.dbg.value(metadata i32 %22, metadata !8998, metadata !DIExpression()), !dbg !9009
  %23 = icmp eq i32 %22, %11, !dbg !9018
  br i1 %23, label %27, label %13, !dbg !9023, !llvm.loop !9031

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !9033
  %26 = icmp eq i32 %25, %11, !dbg !9034
  br i1 %26, label %27, label %29, !dbg !9036

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !9037
  store i16 %28, i16* @cmem_index, align 2, !dbg !9039
  br label %34, !dbg !9040

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !9041
  call void @llvm.dbg.value(metadata i32 %30, metadata !8997, metadata !DIExpression()), !dbg !9009
  %31 = icmp eq i32 %30, 5, !dbg !9042
  br i1 %31, label %32, label %7, !dbg !9016, !llvm.loop !9043

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !9045
  br label %34, !dbg !9045

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !9009
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9046
  ret i32 %36, !dbg !9046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #10 !dbg !9047 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9051, metadata !DIExpression()), !dbg !9052
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !9053
  ret %struct.CMEMEntryID* %2, !dbg !9054
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !9055 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !9059, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata i8* undef, metadata !9060, metadata !DIExpression()), !dbg !9066
  call void @llvm.dbg.value(metadata i16* %2, metadata !9061, metadata !DIExpression()), !dbg !9066
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9067
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !9067
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9067
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !9064, metadata !DIExpression()), !dbg !9068
  call void @llvm.dbg.value(metadata i8 -81, metadata !9062, metadata !DIExpression()), !dbg !9069
  store i8 -81, i8* %4, align 1, !dbg !9070
  call void @llvm.dbg.value(metadata i8* %4, metadata !9062, metadata !DIExpression(DW_OP_deref)), !dbg !9069
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9071
  %7 = load i8, i8* %6, align 1, !dbg !9072
  %8 = add i8 %7, 1, !dbg !9074
  %9 = icmp ult i8 %8, 2, !dbg !9074
  br i1 %9, label %12, label %10, !dbg !9074

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #21, !dbg !9075
  br i1 %11, label %13, label %12, !dbg !9076

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !9062, metadata !DIExpression()), !dbg !9069
  store i8 -97, i8* %4, align 1, !dbg !9077
  call void @llvm.dbg.value(metadata i8* %4, metadata !9062, metadata !DIExpression(DW_OP_deref)), !dbg !9069
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9079
  br label %13, !dbg !9080

13:                                               ; preds = %12, %10
  br label %14, !dbg !9081

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !9065, metadata !DIExpression()), !dbg !9069
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !9083
  %17 = load i8, i8* %16, align 1, !dbg !9083
  %18 = zext i8 %17 to i16, !dbg !9083
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !9086
  store i16 %18, i16* %19, align 2, !dbg !9087
  %20 = add nuw nsw i32 %15, 1, !dbg !9088
  call void @llvm.dbg.value(metadata i32 %20, metadata !9065, metadata !DIExpression()), !dbg !9069
  %21 = icmp eq i32 %20, 3, !dbg !9089
  br i1 %21, label %22, label %14, !dbg !9081, !llvm.loop !9090

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9092
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9092
  ret void, !dbg !9093
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 section ".ram_code" !dbg !9094 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9096, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9099, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 0, metadata !9097, metadata !DIExpression()), !dbg !9100
  br label %6, !dbg !9101

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !9103
  call void @llvm.dbg.value(metadata i32 %3, metadata !9097, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %8, metadata !9097, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9100
  %4 = icmp ult i32 %8, 4, !dbg !9105
  %5 = icmp eq i32 %3, 5, !dbg !9105
  br i1 %5, label %26, label %6, !dbg !9101, !llvm.loop !9106

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9097, metadata !DIExpression()), !dbg !9100
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9098, metadata !DIExpression()), !dbg !9100
  %12 = icmp eq i8 %10, 0, !dbg !9108
  br i1 %12, label %23, label %13, !dbg !9112

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9098, metadata !DIExpression()), !dbg !9100
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9113
  %16 = load i8, i8* %15, align 1, !dbg !9113
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !9116
  %18 = load i8, i8* %17, align 1, !dbg !9116
  %19 = icmp eq i8 %16, %18, !dbg !9117
  br i1 %19, label %20, label %23, !dbg !9118

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !9119
  call void @llvm.dbg.value(metadata i32 %21, metadata !9098, metadata !DIExpression()), !dbg !9100
  %22 = icmp eq i32 %21, %11, !dbg !9108
  br i1 %22, label %26, label %13, !dbg !9112, !llvm.loop !9120

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !9122
  %25 = icmp eq i32 %24, %11, !dbg !9123
  call void @llvm.dbg.value(metadata i32 %8, metadata !9097, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9100
  br i1 %25, label %26, label %2, !dbg !9125

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !9105
  ret i1 %27, !dbg !9126
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !9127 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !9133
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9133
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !9131, metadata !DIExpression()), !dbg !9134
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9132, metadata !DIExpression()), !dbg !9135
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !9136
  %4 = icmp sgt i16 %3, -1, !dbg !9138
  br i1 %4, label %34, label %5, !dbg !9139

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !9140
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #21, !dbg !9141
  call void @llvm.dbg.value(metadata i32 0, metadata !9129, metadata !DIExpression()), !dbg !9135
  br label %7, !dbg !9142

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9129, metadata !DIExpression()), !dbg !9135
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9130, metadata !DIExpression()), !dbg !9135
  %12 = icmp eq i8 %10, 0, !dbg !9144
  br i1 %12, label %24, label %13, !dbg !9149

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9130, metadata !DIExpression()), !dbg !9135
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9150
  %16 = load i8, i8* %15, align 1, !dbg !9150
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !9153
  %18 = load i16, i16* %17, align 2, !dbg !9153
  %19 = zext i8 %16 to i16, !dbg !9154
  %20 = icmp eq i16 %18, %19, !dbg !9154
  br i1 %20, label %21, label %24, !dbg !9155

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !9156
  call void @llvm.dbg.value(metadata i32 %22, metadata !9130, metadata !DIExpression()), !dbg !9135
  %23 = icmp eq i32 %22, %11, !dbg !9144
  br i1 %23, label %27, label %13, !dbg !9149, !llvm.loop !9157

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !9159
  %26 = icmp eq i32 %25, %11, !dbg !9160
  br i1 %26, label %27, label %29, !dbg !9162

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !9163
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !9165
  br label %34, !dbg !9166

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !9167
  call void @llvm.dbg.value(metadata i32 %30, metadata !9129, metadata !DIExpression()), !dbg !9135
  %31 = icmp eq i32 %30, 5, !dbg !9168
  br i1 %31, label %32, label %7, !dbg !9142, !llvm.loop !9169

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !9171
  br label %34, !dbg !9171

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !9135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9172
  ret i32 %36, !dbg !9172
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !9173 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !9181, metadata !DIExpression()), !dbg !9189
  call void @llvm.dbg.value(metadata i16* %1, metadata !9182, metadata !DIExpression()), !dbg !9189
  call void @llvm.dbg.value(metadata i16* %2, metadata !9183, metadata !DIExpression()), !dbg !9189
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9190
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !9190
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9190
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !9187, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.value(metadata i8 -81, metadata !9185, metadata !DIExpression()), !dbg !9192
  store i8 -81, i8* %4, align 1, !dbg !9193
  %7 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9194
  call void @llvm.dbg.value(metadata i32 %7, metadata !9184, metadata !DIExpression()), !dbg !9189
  call void @llvm.dbg.value(metadata i8* %4, metadata !9185, metadata !DIExpression(DW_OP_deref)), !dbg !9192
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9195
  call void @RestoreIRQMask(i32 noundef %7) #20, !dbg !9196
  %8 = load i8, i8* %6, align 1, !dbg !9197
  %9 = add i8 %8, 1, !dbg !9199
  %10 = icmp ult i8 %9, 2, !dbg !9199
  br i1 %10, label %13, label %11, !dbg !9199

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #20, !dbg !9200
  br i1 %12, label %15, label %13, !dbg !9201

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !9185, metadata !DIExpression()), !dbg !9192
  store i8 -97, i8* %4, align 1, !dbg !9202
  %14 = call i32 @SaveAndSetIRQMask() #20, !dbg !9204
  call void @llvm.dbg.value(metadata i32 %14, metadata !9184, metadata !DIExpression()), !dbg !9189
  call void @llvm.dbg.value(metadata i8* %4, metadata !9185, metadata !DIExpression(DW_OP_deref)), !dbg !9192
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9205
  call void @RestoreIRQMask(i32 noundef %14) #20, !dbg !9206
  br label %15, !dbg !9207

15:                                               ; preds = %13, %11
  br label %16, !dbg !9208

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !9188, metadata !DIExpression()), !dbg !9192
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !9210
  %19 = load i8, i8* %18, align 1, !dbg !9210
  %20 = zext i8 %19 to i16, !dbg !9210
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !9213
  store i16 %20, i16* %21, align 2, !dbg !9214
  %22 = add nuw nsw i32 %17, 1, !dbg !9215
  call void @llvm.dbg.value(metadata i32 %22, metadata !9188, metadata !DIExpression()), !dbg !9192
  %23 = icmp eq i32 %22, 3, !dbg !9216
  br i1 %23, label %24, label %16, !dbg !9208, !llvm.loop !9217

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9219
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9219
  ret void, !dbg !9220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #10 !dbg !9221 {
  ret i32 3932160, !dbg !9222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #10 !dbg !9223 {
  ret i32 4194304, !dbg !9224
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !9225 {
  %1 = tail call i32 @ComboMem_Initialize() #20, !dbg !9226
  ret void, !dbg !9227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #10 !dbg !9228 {
  ret void, !dbg !9229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #10 !dbg !9230 {
  ret void, !dbg !9231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #10 !dbg !9232 {
  ret i32 3932160, !dbg !9233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #10 !dbg !9234 {
  ret i32 262144, !dbg !9235
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !9236 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #20, !dbg !9237
  ret void, !dbg !9238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #10 !dbg !9239 {
  ret i32 134217728, !dbg !9240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #10 !dbg !9241 {
  ret i32 4194304, !dbg !9242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #6 !dbg !9243 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !9244
  ret i32 134217728, !dbg !9245
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !9246 {
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !9247
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9248
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9249
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !9250
  %4 = load i16, i16* %3, align 2, !dbg !9250
  %5 = zext i16 %4 to i32, !dbg !9248
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9251
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.hal_cache_region_config_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #20, !dbg !9252
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !9253
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !9254
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !9255
  ret i32 0, !dbg !9256
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !9257 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !9260
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !9261
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !9262
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !9263
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !9264
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9265
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !9266
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !9267
  %5 = load i32, i32* %4, align 4, !dbg !9267
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #20, !dbg !9268
  call void @llvm.dbg.value(metadata i32 %6, metadata !9259, metadata !DIExpression()), !dbg !9269
  %7 = icmp eq i32 %6, -120, !dbg !9270
  %8 = select i1 %7, i32 5, i32 0, !dbg !9269
  ret i32 %8, !dbg !9272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #10 !dbg !9273 {
  ret i8 1, !dbg !9275
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !9276 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9280, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9282, metadata !DIExpression()), !dbg !9283
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9284
  call void @llvm.dbg.value(metadata i32 %2, metadata !9281, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9282, metadata !DIExpression()), !dbg !9283
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !9285
  %4 = load i32, i32* %3, align 4, !dbg !9285
  ret i32 %4, !dbg !9286
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !9287 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9291, metadata !DIExpression()), !dbg !9294
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !9292, metadata !DIExpression()), !dbg !9294
  %3 = and i32 %0, 134217727, !dbg !9295
  call void @llvm.dbg.value(metadata i32 %3, metadata !9291, metadata !DIExpression()), !dbg !9294
  call void @llvm.dbg.value(metadata i16 0, metadata !9293, metadata !DIExpression()), !dbg !9294
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 1, i32 1, !dbg !9296
  %5 = load i32, i32* %4, align 4, !dbg !9296
  %6 = icmp eq i32 %5, 0, !dbg !9299
  br i1 %6, label %25, label %7, !dbg !9300

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !9293, metadata !DIExpression()), !dbg !9294
  %11 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %9, i32 0, !dbg !9301
  %12 = load i32, i32* %11, align 4, !dbg !9301
  %13 = icmp ult i32 %3, %12, !dbg !9304
  br i1 %13, label %18, label %14, !dbg !9305

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %8, i32 0, !dbg !9306
  %16 = load i32, i32* %15, align 4, !dbg !9306
  %17 = icmp ult i32 %3, %16, !dbg !9307
  br i1 %17, label %25, label %18, !dbg !9308

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !9309
  call void @llvm.dbg.value(metadata i16 %19, metadata !9293, metadata !DIExpression()), !dbg !9294
  %20 = zext i16 %19 to i32, !dbg !9310
  %21 = add nuw nsw i32 %20, 1, !dbg !9311
  %22 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %21, i32 1, !dbg !9296
  %23 = load i32, i32* %22, align 4, !dbg !9296
  %24 = icmp eq i32 %23, 0, !dbg !9299
  br i1 %24, label %25, label %7, !dbg !9300, !llvm.loop !9312

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !9310
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %26, i32 1, !dbg !9314
  %28 = load i32, i32* %27, align 4, !dbg !9314
  ret i32 %28, !dbg !9315
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #12 !dbg !9316 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9318, metadata !DIExpression()), !dbg !9319
  %2 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9320
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef %2) #21, !dbg !9321
  ret i32 %3, !dbg !9322
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !9323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9325, metadata !DIExpression()), !dbg !9328
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9329
  call void @llvm.dbg.value(metadata i32 %2, metadata !9326, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9327, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9327, metadata !DIExpression()), !dbg !9328
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !9330
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef nonnull %3) #21, !dbg !9331
  ret i32 %4, !dbg !9332
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !9333 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !9339, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i32 0, metadata !9340, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i32 0, metadata !9341, metadata !DIExpression()), !dbg !9342
  %2 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !9343
  %3 = load i32, i32* %2, align 4, !dbg !9343
  %4 = icmp eq i32 %3, 0, !dbg !9346
  br i1 %4, label %17, label %5, !dbg !9347

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9341, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i32 %8, metadata !9340, metadata !DIExpression()), !dbg !9342
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %7, i32 1, !dbg !9348
  %10 = load i32, i32* %9, align 4, !dbg !9348
  %11 = mul i32 %10, %6, !dbg !9350
  %12 = add i32 %11, %8, !dbg !9351
  call void @llvm.dbg.value(metadata i32 %12, metadata !9340, metadata !DIExpression()), !dbg !9342
  %13 = add i32 %7, 1, !dbg !9352
  call void @llvm.dbg.value(metadata i32 %13, metadata !9341, metadata !DIExpression()), !dbg !9342
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 0, !dbg !9343
  %15 = load i32, i32* %14, align 4, !dbg !9343
  %16 = icmp eq i32 %15, 0, !dbg !9346
  br i1 %16, label %17, label %5, !dbg !9347, !llvm.loop !9353

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !9342
  ret i32 %18, !dbg !9355
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !9356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9360, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.value(metadata i32 %1, metadata !9361, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9362, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !9363, metadata !DIExpression()), !dbg !9369
  %5 = add i32 %1, %0, !dbg !9370
  call void @llvm.dbg.value(metadata i32 %5, metadata !9368, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.value(metadata i32 %0, metadata !9364, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.value(metadata i32 0, metadata !9365, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.value(metadata i32 0, metadata !9367, metadata !DIExpression()), !dbg !9369
  %6 = icmp ugt i32 %5, %0, !dbg !9371
  br i1 %6, label %7, label %34, !dbg !9374

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9367, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.value(metadata i32 %9, metadata !9364, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.value(metadata i32 %10, metadata !9365, metadata !DIExpression()), !dbg !9369
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.hal_cache_region_config_t* noundef %3) #21, !dbg !9375
  call void @llvm.dbg.value(metadata i32 %11, metadata !9366, metadata !DIExpression()), !dbg !9369
  %12 = icmp eq i32 %8, 0, !dbg !9377
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 0, !dbg !9379
  br i1 %12, label %14, label %16, !dbg !9380

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !9381
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !9383
  store i32 1, i32* %15, align 4, !dbg !9384
  br label %29, !dbg !9385

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !9386
  %18 = icmp eq i32 %11, %17, !dbg !9388
  br i1 %18, label %19, label %23, !dbg !9389

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !9390
  %21 = load i32, i32* %20, align 4, !dbg !9392
  %22 = add i32 %21, 1, !dbg !9392
  store i32 %22, i32* %20, align 4, !dbg !9392
  br label %29, !dbg !9393

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !9394
  call void @llvm.dbg.value(metadata i32 %24, metadata !9365, metadata !DIExpression()), !dbg !9369
  %25 = icmp eq i32 %24, 9, !dbg !9396
  br i1 %25, label %34, label %26, !dbg !9398

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 0, !dbg !9399
  store i32 %11, i32* %27, align 4, !dbg !9400
  %28 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 1, !dbg !9401
  store i32 1, i32* %28, align 4, !dbg !9402
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !9403
  call void @llvm.dbg.value(metadata i32 %30, metadata !9365, metadata !DIExpression()), !dbg !9369
  %31 = add i32 %11, %9, !dbg !9404
  call void @llvm.dbg.value(metadata i32 %31, metadata !9364, metadata !DIExpression()), !dbg !9369
  %32 = add i32 %8, 1, !dbg !9405
  call void @llvm.dbg.value(metadata i32 %32, metadata !9367, metadata !DIExpression()), !dbg !9369
  %33 = icmp ult i32 %31, %5, !dbg !9371
  br i1 %33, label %7, label %34, !dbg !9374, !llvm.loop !9406

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !9369
  ret i32 %35, !dbg !9408
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2) local_unnamed_addr #0 !dbg !9409 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9413, metadata !DIExpression()), !dbg !9416
  call void @llvm.dbg.value(metadata i32 %1, metadata !9414, metadata !DIExpression()), !dbg !9416
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9415, metadata !DIExpression()), !dbg !9416
  %4 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !9417
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #20, !dbg !9418
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9419
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef %6) #21, !dbg !9420
  ret i32 %7, !dbg !9421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !9422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9424, metadata !DIExpression()), !dbg !9427
  call void @llvm.dbg.value(metadata i32 %1, metadata !9425, metadata !DIExpression()), !dbg !9427
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9426, metadata !DIExpression()), !dbg !9427
  ret i32 0, !dbg !9428
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !9429 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9431, metadata !DIExpression()), !dbg !9436
  call void @llvm.dbg.value(metadata i32 %1, metadata !9432, metadata !DIExpression()), !dbg !9436
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9433, metadata !DIExpression()), !dbg !9436
  %4 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9437
  call void @llvm.dbg.value(metadata i32 %4, metadata !9434, metadata !DIExpression()), !dbg !9436
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9435, metadata !DIExpression()), !dbg !9436
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9435, metadata !DIExpression()), !dbg !9436
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !9438
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef nonnull %5) #21, !dbg !9439
  ret i32 %6, !dbg !9440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !9441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9443, metadata !DIExpression()), !dbg !9446
  call void @llvm.dbg.value(metadata i32 %1, metadata !9444, metadata !DIExpression()), !dbg !9446
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9445, metadata !DIExpression()), !dbg !9446
  ret i32 0, !dbg !9447
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !9448 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9450, metadata !DIExpression()), !dbg !9453
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9454
  call void @llvm.dbg.value(metadata i32 %2, metadata !9451, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9452, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9452, metadata !DIExpression()), !dbg !9453
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !9455
  %4 = load i32, i32* %3, align 4, !dbg !9455
  ret i32 %4, !dbg !9456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.hal_cache_region_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !9457 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !9461, metadata !DIExpression()), !dbg !9464
  call void @llvm.dbg.value(metadata i32* %1, metadata !9462, metadata !DIExpression()), !dbg !9464
  call void @llvm.dbg.value(metadata i32 %2, metadata !9463, metadata !DIExpression()), !dbg !9464
  %4 = load i32, i32* %1, align 4, !dbg !9465
  %5 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 0, !dbg !9467
  %6 = load i32, i32* %5, align 4, !dbg !9467
  %7 = icmp eq i32 %6, %2, !dbg !9468
  br i1 %7, label %8, label %12, !dbg !9469

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 1, !dbg !9470
  %10 = load i32, i32* %9, align 4, !dbg !9472
  %11 = add i32 %10, 1, !dbg !9472
  store i32 %11, i32* %9, align 4, !dbg !9472
  br label %17, !dbg !9473

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !9474
  store i32 %13, i32* %1, align 4, !dbg !9474
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 1, !dbg !9476
  store i32 1, i32* %14, align 4, !dbg !9477
  %15 = load i32, i32* %1, align 4, !dbg !9478
  %16 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %15, i32 0, !dbg !9479
  store i32 %2, i32* %16, align 4, !dbg !9480
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !9481
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !9482 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9486, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 %1, metadata !9487, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9488, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !9489, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 0, metadata !9490, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 0, metadata !9491, metadata !DIExpression()), !dbg !9495
  %5 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !9496
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #20, !dbg !9497
  call void @llvm.dbg.value(metadata i32 0, metadata !9494, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 0, metadata !9493, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 0, metadata !9491, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 0, metadata !9490, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 %0, metadata !9486, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 %1, metadata !9487, metadata !DIExpression()), !dbg !9495
  %7 = icmp eq i32 %1, 0, !dbg !9498
  br i1 %7, label %53, label %8, !dbg !9501

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9494, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 %10, metadata !9493, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 %11, metadata !9491, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 %12, metadata !9490, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 %13, metadata !9486, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 %14, metadata !9487, metadata !DIExpression()), !dbg !9495
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %12, i32 1, !dbg !9502
  %16 = load i32, i32* %15, align 4, !dbg !9502
  %17 = icmp ult i32 %9, %16, !dbg !9505
  %18 = xor i1 %17, true, !dbg !9506
  %19 = zext i1 %18 to i32, !dbg !9506
  %20 = add i32 %12, %19, !dbg !9506
  call void @llvm.dbg.value(metadata i32 undef, metadata !9494, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 %20, metadata !9490, metadata !DIExpression()), !dbg !9495
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %20, i32 0, !dbg !9507
  %22 = load i32, i32* %21, align 4, !dbg !9507
  %23 = add i32 %22, %10, !dbg !9508
  call void @llvm.dbg.value(metadata i32 %23, metadata !9493, metadata !DIExpression()), !dbg !9495
  %24 = icmp ult i32 %23, %13, !dbg !9509
  br i1 %24, label %46, label %25, !dbg !9511

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !9512
  call void @llvm.dbg.value(metadata i32 %26, metadata !9492, metadata !DIExpression()), !dbg !9495
  %27 = icmp ult i32 %14, %26, !dbg !9514
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !9516
  call void @llvm.dbg.value(metadata i32 %28, metadata !9492, metadata !DIExpression()), !dbg !9495
  %29 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 0, !dbg !9517
  %30 = load i32, i32* %29, align 4, !dbg !9517
  %31 = icmp eq i32 %30, %28, !dbg !9519
  br i1 %31, label %32, label %36, !dbg !9520

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 1, !dbg !9521
  %34 = load i32, i32* %33, align 4, !dbg !9523
  %35 = add i32 %34, 1, !dbg !9523
  store i32 %35, i32* %33, align 4, !dbg !9523
  br label %42, !dbg !9524

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !9525
  %38 = zext i1 %37 to i32, !dbg !9528
  %39 = add nsw i32 %11, %38, !dbg !9528
  call void @llvm.dbg.value(metadata i32 %39, metadata !9491, metadata !DIExpression()), !dbg !9495
  %40 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 1, !dbg !9529
  store i32 1, i32* %40, align 4, !dbg !9530
  %41 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 0, !dbg !9531
  store i32 %28, i32* %41, align 4, !dbg !9532
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !9495
  call void @llvm.dbg.value(metadata i32 %43, metadata !9491, metadata !DIExpression()), !dbg !9495
  %44 = add i32 %28, %13, !dbg !9533
  call void @llvm.dbg.value(metadata i32 %44, metadata !9486, metadata !DIExpression()), !dbg !9495
  %45 = sub i32 %14, %28, !dbg !9534
  call void @llvm.dbg.value(metadata i32 %45, metadata !9487, metadata !DIExpression()), !dbg !9495
  br label %46, !dbg !9535

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !9536
  call void @llvm.dbg.value(metadata i32 %49, metadata !9491, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 %48, metadata !9486, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 %47, metadata !9487, metadata !DIExpression()), !dbg !9495
  %50 = add nuw i32 %9, 1, !dbg !9537
  %51 = select i1 %17, i32 %50, i32 1, !dbg !9537
  call void @llvm.dbg.value(metadata i32 %51, metadata !9494, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 %23, metadata !9493, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.value(metadata i32 %20, metadata !9490, metadata !DIExpression()), !dbg !9495
  %52 = icmp eq i32 %47, 0, !dbg !9498
  br i1 %52, label %53, label %8, !dbg !9501, !llvm.loop !9538

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !9540
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !9541 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9545
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9546
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !9545
  store %struct.hal_cache_region_config_t* %3, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9547
  %4 = tail call i32 @custom_get_fat_addr() #20, !dbg !9548
  %5 = tail call i32 @custom_get_fat_len() #20, !dbg !9549
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9550
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !9551
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !9550
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0), %struct.hal_cache_region_config_t* noundef nonnull %8) #21, !dbg !9552
  %10 = tail call i32 @custom_get_fat_addr() #20, !dbg !9553
  %11 = tail call i32 @custom_get_fat_len() #20, !dbg !9554
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0)) #21, !dbg !9555
  call void @llvm.dbg.value(metadata i32 %12, metadata !9543, metadata !DIExpression()), !dbg !9556
  %13 = icmp eq i32 %12, 0, !dbg !9557
  br i1 %13, label %14, label %46, !dbg !9559

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !9544, metadata !DIExpression()), !dbg !9556
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !9560
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !9562
  call void @llvm.dbg.value(metadata i32 0, metadata !9544, metadata !DIExpression()), !dbg !9556
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !9563
  %16 = icmp eq i32 %15, 0, !dbg !9565
  br i1 %16, label %34, label %17, !dbg !9566

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !9544, metadata !DIExpression()), !dbg !9556
  %22 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !9567
  %23 = load i32, i32* %22, align 4, !dbg !9567
  %24 = add i32 %20, %23, !dbg !9569
  %25 = icmp ugt i32 %18, %21, !dbg !9570
  br i1 %25, label %26, label %27, !dbg !9572

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !9573
  br label %27, !dbg !9575

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !9576
  call void @llvm.dbg.value(metadata i32 %29, metadata !9544, metadata !DIExpression()), !dbg !9556
  %30 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !9563
  %31 = load i32, i32* %30, align 4, !dbg !9563
  %32 = icmp eq i32 %31, 0, !dbg !9565
  br i1 %32, label %33, label %17, !dbg !9566, !llvm.loop !9577

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !9569
  br label %34, !dbg !9566

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !9579
  %36 = mul i32 %35, -5, !dbg !9580
  %37 = add i32 %36, 262144, !dbg !9581
  %38 = lshr i32 %37, 9, !dbg !9582
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !9583
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #21, !dbg !9584
  call void @llvm.dbg.value(metadata i32 0, metadata !9543, metadata !DIExpression()), !dbg !9556
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !9585
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !9586
  %42 = load i8, i8* %41, align 1, !dbg !9586
  %43 = icmp eq i8 %42, 3, !dbg !9587
  br i1 %43, label %44, label %46, !dbg !9587

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #21, !dbg !9588
  call void @llvm.dbg.value(metadata i32 %45, metadata !9543, metadata !DIExpression()), !dbg !9556
  br label %46, !dbg !9590

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !9556
  ret i32 %47, !dbg !9591
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !9592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9596, metadata !DIExpression()), !dbg !9597
  %2 = icmp eq i32 %0, 0, !dbg !9598
  br i1 %2, label %3, label %9, !dbg !9600

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #20, !dbg !9601
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !9603
  %5 = icmp slt i32 %4, 0, !dbg !9604
  br i1 %5, label %6, label %7, !dbg !9606

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !9607
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.123, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.124, i32 0, i32 0)) #23, !dbg !9607
  unreachable, !dbg !9607

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #20, !dbg !9612
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !9613
  br label %9, !dbg !9614

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9615
  ret void, !dbg !9616
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !9617 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !9618
  %1 = tail call i32 @CMEM_Init_NOR() #21, !dbg !9619
  ret i32 %1, !dbg !9620
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !9621 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !9624
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9625
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9626
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !9627
  %4 = load i16, i16* %3, align 2, !dbg !9627
  %5 = zext i16 %4 to i32, !dbg !9625
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9628
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !9629
  store %struct.hal_cache_region_config_t* %6, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9630
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !9631
  %8 = bitcast %struct.hal_cache_region_config_t* %7 to i8*, !dbg !9631
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.hal_cache_region_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #20, !dbg !9632
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !9633
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !9634
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !9635
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !9636
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !9637
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9638
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !9639
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !9640
  %13 = load i32, i32* %12, align 4, !dbg !9640
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #20, !dbg !9641
  call void @llvm.dbg.value(metadata i32 %14, metadata !9623, metadata !DIExpression()), !dbg !9642
  %15 = icmp eq i32 %14, -120, !dbg !9643
  br i1 %15, label %16, label %17, !dbg !9646

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !9647
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.123, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.124, i32 0, i32 0)) #23, !dbg !9647
  unreachable, !dbg !9647

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0)) #21, !dbg !9649
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !9650
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #21, !dbg !9651
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !9652
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !9653
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9654
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !9655
  ret i32 0, !dbg !9656
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #10 !dbg !9657 {
  ret void, !dbg !9658
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !9659 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9662
  call void @llvm.dbg.value(metadata i32 %1, metadata !9661, metadata !DIExpression()), !dbg !9663
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !9664
  br i1 %2, label %4, label %3, !dbg !9666

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !9667
  br label %4, !dbg !9669

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !9670
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !9670
  ret i32 %5, !dbg !9671
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !9672 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9675
  call void @llvm.dbg.value(metadata i32 %1, metadata !9674, metadata !DIExpression()), !dbg !9676
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !9677
  br i1 %2, label %3, label %4, !dbg !9679

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !9680
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !9682
  ret void, !dbg !9683

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !9684
  tail call void @Flash_ReturnReady() #20, !dbg !9686
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.129, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.130, i32 0, i32 0)) #23, !dbg !9686
  unreachable, !dbg !9686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #10 !dbg !9690 {
  ret void, !dbg !9691
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !9692 {
  br label %1, !dbg !9695

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #21, !dbg !9696
  call void @llvm.dbg.value(metadata i32 %2, metadata !9694, metadata !DIExpression()), !dbg !9698
  %3 = icmp eq i32 %2, 0, !dbg !9699
  br i1 %3, label %4, label %1, !dbg !9700, !llvm.loop !9701

4:                                                ; preds = %1
  ret void, !dbg !9703
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !9704 {
  tail call void @FreeFDMLock() #21, !dbg !9705
  ret void, !dbg !9706
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9707 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9750, metadata !DIExpression()), !dbg !9756
  call void @llvm.dbg.value(metadata i32 %1, metadata !9751, metadata !DIExpression()), !dbg !9756
  call void @llvm.dbg.value(metadata i8* %2, metadata !9752, metadata !DIExpression()), !dbg !9756
  call void @llvm.dbg.value(metadata i32 %3, metadata !9753, metadata !DIExpression()), !dbg !9756
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !9757
  %6 = load i32, i32* %5, align 4, !dbg !9757
  call void @llvm.dbg.value(metadata i32 %6, metadata !9755, metadata !DIExpression()), !dbg !9756
  %7 = icmp ule i32 %6, %1, !dbg !9758
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !9760
  br i1 %10, label %26, label %11, !dbg !9760

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9761
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !9761
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !9761
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !9762
  %16 = load i8*, i8** %15, align 4, !dbg !9762
  %17 = ptrtoint i8* %16 to i32, !dbg !9763
  %18 = add i32 %17, %1, !dbg !9764
  call void @llvm.dbg.value(metadata i32 %18, metadata !9754, metadata !DIExpression()), !dbg !9756
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9765
  %20 = load i8, i8* %19, align 4, !dbg !9765, !range !2654
  %21 = icmp eq i8 %20, 0, !dbg !9765
  br i1 %21, label %22, label %23, !dbg !9767

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !9768
  br label %23, !dbg !9770

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #21, !dbg !9771
  %24 = inttoptr i32 %18 to i8*, !dbg !9772
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #20, !dbg !9773
  tail call void @release_FDM_lock() #21, !dbg !9774
  br label %26, !dbg !9775

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !9756
  ret i32 %27, !dbg !9776
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !9777 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9781, metadata !DIExpression()), !dbg !9783
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9784
  %3 = load i8, i8* %2, align 4, !dbg !9784, !range !2654
  %4 = icmp eq i8 %3, 0, !dbg !9784
  br i1 %4, label %5, label %18, !dbg !9786

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #21, !dbg !9787
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !9788
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !9788
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !9789
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !9789
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9790
  %11 = load i8*, i8** %10, align 4, !dbg !9790
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !9791
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !9792
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #20, !dbg !9793
  call void @llvm.dbg.value(metadata i32 %14, metadata !9782, metadata !DIExpression()), !dbg !9783
  tail call void @release_FDM_lock() #21, !dbg !9794
  %15 = icmp slt i32 %14, 0, !dbg !9795
  br i1 %15, label %16, label %17, !dbg !9797

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !9798
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.129, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.130, i32 0, i32 0)) #23, !dbg !9798
  unreachable, !dbg !9798

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !9803
  br label %18, !dbg !9804

18:                                               ; preds = %1, %17
  ret void, !dbg !9804
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9805 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9807, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i32 %1, metadata !9808, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i8* %2, metadata !9809, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i32 %3, metadata !9810, metadata !DIExpression()), !dbg !9828
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !9829
  %7 = load i32, i32* %6, align 4, !dbg !9829
  call void @llvm.dbg.value(metadata i32 %7, metadata !9813, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i32 0, metadata !9814, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i32 0, metadata !9815, metadata !DIExpression()), !dbg !9828
  %8 = icmp ugt i32 %7, %1, !dbg !9830
  br i1 %8, label %9, label %101, !dbg !9832

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !9833
  %11 = icmp ugt i32 %10, %7, !dbg !9835
  br i1 %11, label %101, label %12, !dbg !9836

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9837
  %14 = load i8, i8* %13, align 4, !dbg !9837, !range !2654
  %15 = icmp eq i8 %14, 0, !dbg !9837
  br i1 %15, label %16, label %17, !dbg !9839

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !9840
  br label %17, !dbg !9842

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #21, !dbg !9843
  %18 = bitcast i16* %5 to i8*, !dbg !9844
  call void @llvm.dbg.value(metadata i32 0, metadata !9814, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i32 0, metadata !9815, metadata !DIExpression()), !dbg !9828
  %19 = icmp eq i32 %3, 0, !dbg !9845
  br i1 %19, label %99, label %20, !dbg !9846

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !9846

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !9815, metadata !DIExpression()), !dbg !9828
  %27 = load i8*, i8** %21, align 4, !dbg !9847
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !9848
  %29 = bitcast i8* %28 to i8**, !dbg !9848
  %30 = load i8*, i8** %29, align 4, !dbg !9848
  %31 = ptrtoint i8* %30 to i32, !dbg !9849
  %32 = add i32 %31, %1, !dbg !9850
  %33 = add i32 %32, %26, !dbg !9851
  call void @llvm.dbg.value(metadata i32 %33, metadata !9811, metadata !DIExpression()), !dbg !9828
  %34 = add i32 %26, %22, !dbg !9852
  call void @llvm.dbg.value(metadata i32 %34, metadata !9812, metadata !DIExpression()), !dbg !9828
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9853
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !9854
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !9854
  %38 = add i32 %26, %1, !dbg !9855
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #20, !dbg !9856
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #20, !dbg !9857
  %41 = and i32 %33, 1, !dbg !9858
  %42 = icmp eq i32 %41, 0, !dbg !9858
  br i1 %42, label %43, label %46, !dbg !9859

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !9860
  %45 = icmp eq i32 %44, 1, !dbg !9861
  br i1 %45, label %46, label %57, !dbg !9862

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9863
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !9865
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !9865
  %50 = load i8*, i8** %21, align 4, !dbg !9866
  %51 = inttoptr i32 %33 to i8*, !dbg !9867
  %52 = inttoptr i32 %34 to i8*, !dbg !9868
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #20, !dbg !9869
  call void @llvm.dbg.value(metadata i32 %53, metadata !9814, metadata !DIExpression()), !dbg !9828
  %54 = icmp eq i32 %53, 0, !dbg !9870
  br i1 %54, label %55, label %99, !dbg !9872

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !9873
  call void @llvm.dbg.value(metadata i32 %56, metadata !9815, metadata !DIExpression()), !dbg !9828
  br label %96, !dbg !9874

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !9875
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #20, !dbg !9876
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #20, !dbg !9877
  call void @llvm.dbg.value(metadata i32 %60, metadata !9816, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 %44, metadata !9820, metadata !DIExpression()), !dbg !9878
  %61 = add i32 %60, %33, !dbg !9879
  %62 = sub i32 0, %60, !dbg !9880
  %63 = and i32 %61, %62, !dbg !9881
  call void @llvm.dbg.value(metadata i32 %63, metadata !9821, metadata !DIExpression()), !dbg !9878
  %64 = add i32 %32, %3, !dbg !9882
  %65 = icmp ugt i32 %64, %63, !dbg !9884
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !9885
  call void @llvm.dbg.value(metadata i32 %67, metadata !9820, metadata !DIExpression()), !dbg !9878
  %68 = and i32 %67, -2, !dbg !9886
  call void @llvm.dbg.value(metadata i32 %68, metadata !9820, metadata !DIExpression()), !dbg !9878
  %69 = icmp ne i32 %68, 2, !dbg !9887
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !9888
  br i1 %72, label %85, label %73, !dbg !9888

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #22, !dbg !9844
  call void @llvm.dbg.value(metadata i8* %18, metadata !9827, metadata !DIExpression()), !dbg !9889
  %74 = inttoptr i32 %34 to i8*, !dbg !9890
  %75 = load i8, i8* %74, align 1, !dbg !9891
  call void @llvm.dbg.value(metadata i8 undef, metadata !9822, metadata !DIExpression()), !dbg !9889
  store i8 %75, i8* %18, align 2, !dbg !9892
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !9893
  %77 = load i8, i8* %76, align 1, !dbg !9894
  store i8 %77, i8* %24, align 1, !dbg !9895
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9896
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !9897
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !9897
  %81 = load i8*, i8** %21, align 4, !dbg !9898
  %82 = inttoptr i32 %33 to i8*, !dbg !9899
  call void @llvm.dbg.value(metadata i16* %5, metadata !9822, metadata !DIExpression(DW_OP_deref)), !dbg !9889
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #20, !dbg !9900
  call void @llvm.dbg.value(metadata i32 %83, metadata !9814, metadata !DIExpression()), !dbg !9828
  %84 = icmp eq i32 %83, 0, !dbg !9901
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #22, !dbg !9903
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9904
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !9908
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !9908
  %89 = load i8*, i8** %21, align 4, !dbg !9909
  %90 = inttoptr i32 %33 to i8*, !dbg !9910
  %91 = inttoptr i32 %34 to i8*, !dbg !9911
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #20, !dbg !9912
  call void @llvm.dbg.value(metadata i32 %92, metadata !9814, metadata !DIExpression()), !dbg !9828
  %93 = icmp eq i32 %92, 0, !dbg !9913
  br i1 %93, label %94, label %99, !dbg !9915

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !9814, metadata !DIExpression()), !dbg !9828
  %95 = add i32 %68, %26, !dbg !9916
  call void @llvm.dbg.value(metadata i32 %83, metadata !9814, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i32 %26, metadata !9815, metadata !DIExpression()), !dbg !9828
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !9917
  call void @llvm.dbg.value(metadata i32 0, metadata !9814, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i32 %97, metadata !9815, metadata !DIExpression()), !dbg !9828
  %98 = icmp ult i32 %97, %3, !dbg !9845
  br i1 %98, label %25, label %99, !dbg !9846, !llvm.loop !9918

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #21, !dbg !9920
  br label %101, !dbg !9921

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !9828
  ret i32 %102, !dbg !9921
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9922 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9926, metadata !DIExpression()), !dbg !9930
  call void @llvm.dbg.value(metadata i32 %1, metadata !9927, metadata !DIExpression()), !dbg !9930
  %3 = and i32 %1, 16777215, !dbg !9931
  call void @llvm.dbg.value(metadata i32 %3, metadata !9929, metadata !DIExpression()), !dbg !9930
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9932
  %5 = load i8, i8* %4, align 4, !dbg !9932, !range !2654
  %6 = icmp eq i8 %5, 0, !dbg !9932
  br i1 %6, label %7, label %8, !dbg !9934

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !9935
  br label %8, !dbg !9937

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !9938
  %10 = load i32, i32* %9, align 4, !dbg !9938
  %11 = icmp ult i32 %3, %10, !dbg !9940
  br i1 %11, label %12, label %27, !dbg !9941

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #21, !dbg !9942
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !9943
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !9943
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !9944
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !9944
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9945
  %18 = load i8*, i8** %17, align 4, !dbg !9945
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #20, !dbg !9946
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !9947
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !9948
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !9948
  %23 = load i8*, i8** %17, align 4, !dbg !9949
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #20, !dbg !9950
  call void @llvm.dbg.value(metadata i32 %24, metadata !9928, metadata !DIExpression()), !dbg !9930
  tail call void @release_FDM_lock() #21, !dbg !9951
  %25 = icmp eq i32 %24, 0, !dbg !9952
  %26 = select i1 %25, i32 0, i32 6, !dbg !9930
  br label %27, !dbg !9930

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !9930
  ret i32 %28, !dbg !9954
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !9955 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !9956
  br i1 %1, label %3, label %2, !dbg !9958

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #20, !dbg !9959
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #21, !dbg !9961
  store i1 true, i1* @flash_init_status, align 4, !dbg !9962
  br label %3, !dbg !9963

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !9964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #4 section ".ram_code" !dbg !9965 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !9966
  %2 = select i1 %1, i32 0, i32 -5, !dbg !9966
  ret i32 %2, !dbg !9967
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !9968 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9972, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata i32 %1, metadata !9973, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata i8* %2, metadata !9974, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9975, metadata !DIExpression()), !dbg !9979
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9980
  call void @llvm.dbg.value(metadata i8* %4, metadata !9976, metadata !DIExpression()), !dbg !9979
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !9981
  %6 = ptrtoint i8* %5 to i32, !dbg !9982
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9983
  %8 = bitcast i8* %7 to i8**, !dbg !9983
  %9 = load i8*, i8** %8, align 4, !dbg !9983
  %10 = ptrtoint i8* %9 to i32, !dbg !9984
  %11 = shl i32 %1, 9, !dbg !9985
  %12 = add i32 %11, %6, !dbg !9986
  %13 = sub i32 %12, %10, !dbg !9987
  call void @llvm.dbg.value(metadata i32 %13, metadata !9978, metadata !DIExpression()), !dbg !9979
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !9988
  call void @llvm.dbg.value(metadata i32 %14, metadata !9977, metadata !DIExpression()), !dbg !9979
  %15 = icmp eq i32 %14, 0, !dbg !9989
  %16 = select i1 %15, i32 0, i32 -13, !dbg !9979
  ret i32 %16, !dbg !9991
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !9992 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9994, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.value(metadata i32 %1, metadata !9995, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.value(metadata i8* %2, metadata !9996, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9997, metadata !DIExpression()), !dbg !10001
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10002
  call void @llvm.dbg.value(metadata i8* %4, metadata !9998, metadata !DIExpression()), !dbg !10001
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !10003
  %6 = ptrtoint i8* %5 to i32, !dbg !10004
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10005
  %8 = bitcast i8* %7 to i8**, !dbg !10005
  %9 = load i8*, i8** %8, align 4, !dbg !10005
  %10 = ptrtoint i8* %9 to i32, !dbg !10006
  %11 = shl i32 %1, 9, !dbg !10007
  %12 = add i32 %11, %6, !dbg !10008
  %13 = sub i32 %12, %10, !dbg !10009
  call void @llvm.dbg.value(metadata i32 %13, metadata !10000, metadata !DIExpression()), !dbg !10001
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !10010
  call void @llvm.dbg.value(metadata i32 %14, metadata !9999, metadata !DIExpression()), !dbg !10001
  %15 = icmp eq i32 %14, 0, !dbg !10011
  %16 = select i1 %15, i32 0, i32 -14, !dbg !10001
  ret i32 %16, !dbg !10013
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !10014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10018, metadata !DIExpression()), !dbg !10020
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #21, !dbg !10021
  call void @llvm.dbg.value(metadata i32 %2, metadata !10019, metadata !DIExpression()), !dbg !10020
  %3 = icmp eq i32 %2, 0, !dbg !10022
  %4 = select i1 %3, i32 0, i32 -15, !dbg !10020
  ret i32 %4, !dbg !10024
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !10025 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10027, metadata !DIExpression()), !dbg !10030
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10028, metadata !DIExpression()), !dbg !10030
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10031
  call void @llvm.dbg.value(metadata i8* %2, metadata !10029, metadata !DIExpression()), !dbg !10030
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #20, !dbg !10032
  ret i32 %3, !dbg !10033
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !10034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10036, metadata !DIExpression()), !dbg !10039
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10037, metadata !DIExpression()), !dbg !10039
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10040
  call void @llvm.dbg.value(metadata i8* %2, metadata !10038, metadata !DIExpression()), !dbg !10039
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #20, !dbg !10041
  ret i32 %3, !dbg !10042
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !10043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10047, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i32* %1, metadata !10048, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i32* %2, metadata !10049, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10050, metadata !DIExpression()), !dbg !10052
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10053
  call void @llvm.dbg.value(metadata i8* %4, metadata !10051, metadata !DIExpression()), !dbg !10052
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #20, !dbg !10054
  store i32 %5, i32* %1, align 4, !dbg !10055
  %6 = icmp eq i32 %5, -1, !dbg !10056
  br i1 %6, label %10, label %7, !dbg !10058

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #20, !dbg !10059
  %9 = urem i32 %0, %8, !dbg !10060
  store i32 %9, i32* %2, align 4, !dbg !10061
  br label %10, !dbg !10062

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !10052
  ret i32 %11, !dbg !10063
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !10064 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10068, metadata !DIExpression()), !dbg !10073
  call void @llvm.dbg.value(metadata i32 %1, metadata !10069, metadata !DIExpression()), !dbg !10073
  call void @llvm.dbg.value(metadata i32* %2, metadata !10070, metadata !DIExpression()), !dbg !10073
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10071, metadata !DIExpression()), !dbg !10073
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10074
  call void @llvm.dbg.value(metadata i8* %4, metadata !10072, metadata !DIExpression()), !dbg !10073
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !10075
  %6 = ptrtoint i8* %5 to i32, !dbg !10076
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10077
  %8 = bitcast i8* %7 to i8**, !dbg !10077
  %9 = load i8*, i8** %8, align 4, !dbg !10077
  %10 = ptrtoint i8* %9 to i32, !dbg !10078
  %11 = add i32 %6, %1, !dbg !10079
  %12 = sub i32 %11, %10, !dbg !10080
  store i32 %12, i32* %2, align 4, !dbg !10081
  ret i32 0, !dbg !10082
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !10083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10087, metadata !DIExpression()), !dbg !10088
  %2 = add i32 %0, 2, !dbg !10089
  %3 = icmp ult i32 %2, 9, !dbg !10089
  br i1 %3, label %5, label %4, !dbg !10089

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #20, !dbg !10090
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.129, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.130, i32 0, i32 0)) #23, !dbg !10090
  unreachable, !dbg !10090

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !10089
  %7 = lshr i16 433, %6, !dbg !10089
  %8 = and i16 %7, 1, !dbg !10089
  %9 = icmp eq i16 %8, 0, !dbg !10089
  br i1 %9, label %4, label %10, !dbg !10089

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !10089
  %12 = load i32, i32* %11, align 4, !dbg !10089
  ret i32 %12, !dbg !10100
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !10101 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10106, metadata !DIExpression()), !dbg !10109
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !10110
  call void @llvm.dbg.value(metadata i32 %2, metadata !10108, metadata !DIExpression()), !dbg !10109
  %3 = icmp eq i32 %2, -1, !dbg !10111
  br i1 %3, label %4, label %5, !dbg !10113

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !10114
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.129, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.130, i32 0, i32 0)) #23, !dbg !10114
  unreachable, !dbg !10114

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #21, !dbg !10119
  call void @llvm.dbg.value(metadata i32 %6, metadata !10107, metadata !DIExpression()), !dbg !10109
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !10120

7:                                                ; preds = %5
  br label %10, !dbg !10121

8:                                                ; preds = %5
  br label %10, !dbg !10125

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !10128
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.129, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.130, i32 0, i32 0)) #23, !dbg !10128
  unreachable, !dbg !10128

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !10133
  ret i32 %11, !dbg !10134
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !10135 {
  %1 = tail call i32 @NOR_init() #21, !dbg !10136
  ret i32 0, !dbg !10137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #10 !dbg !10138 {
  ret i32 0, !dbg !10139
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10140 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10144, metadata !DIExpression()), !dbg !10149
  call void @llvm.dbg.value(metadata i32 %1, metadata !10145, metadata !DIExpression()), !dbg !10149
  call void @llvm.dbg.value(metadata i32 0, metadata !10148, metadata !DIExpression()), !dbg !10149
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !10150

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !10151
  %5 = icmp eq i32 %4, 0, !dbg !10155
  br i1 %5, label %12, label %22, !dbg !10156

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !10157
  %8 = icmp eq i32 %7, 0, !dbg !10161
  br i1 %8, label %12, label %22, !dbg !10162

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !10163
  %11 = icmp eq i32 %10, 0, !dbg !10167
  br i1 %11, label %12, label %22, !dbg !10168

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !10169
  call void @llvm.dbg.value(metadata i32 %13, metadata !10148, metadata !DIExpression()), !dbg !10149
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !10170
  call void @llvm.dbg.value(metadata i32 %14, metadata !10147, metadata !DIExpression()), !dbg !10149
  %15 = icmp eq i32 %14, -1, !dbg !10171
  br i1 %15, label %22, label %16, !dbg !10173

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !10174
  call void @llvm.dbg.value(metadata i32 %17, metadata !10147, metadata !DIExpression()), !dbg !10149
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #21, !dbg !10175
  call void @llvm.dbg.value(metadata i32 %18, metadata !10146, metadata !DIExpression()), !dbg !10149
  %19 = icmp eq i32 %18, 0, !dbg !10176
  br i1 %19, label %22, label %20, !dbg !10178

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #21, !dbg !10179
  br label %22, !dbg !10181

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !10149
  ret i32 %23, !dbg !10182
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !10183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10187, metadata !DIExpression()), !dbg !10192
  call void @llvm.dbg.value(metadata i8* %1, metadata !10188, metadata !DIExpression()), !dbg !10192
  call void @llvm.dbg.value(metadata i32 %2, metadata !10189, metadata !DIExpression()), !dbg !10192
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10190, metadata !DIExpression()), !dbg !10192
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !10193
  call void @llvm.dbg.value(metadata i32 %4, metadata !10191, metadata !DIExpression()), !dbg !10192
  %5 = icmp eq i32 %4, 0, !dbg !10194
  br i1 %5, label %8, label %6, !dbg !10196

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !10197
  br label %8, !dbg !10199

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !10192
  ret i32 %9, !dbg !10200
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !10201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10205, metadata !DIExpression()), !dbg !10213
  call void @llvm.dbg.value(metadata i8* %1, metadata !10206, metadata !DIExpression()), !dbg !10213
  call void @llvm.dbg.value(metadata i32 %2, metadata !10207, metadata !DIExpression()), !dbg !10213
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10208, metadata !DIExpression()), !dbg !10213
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !10214
  call void @llvm.dbg.value(metadata i32 %4, metadata !10209, metadata !DIExpression()), !dbg !10213
  %5 = icmp eq i32 %4, 0, !dbg !10215
  br i1 %5, label %8, label %6, !dbg !10217

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !10218
  br label %21, !dbg !10220

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) #20, !dbg !10221
  br i1 %9, label %10, label %21, !dbg !10222

10:                                               ; preds = %8
  %11 = and i32 %0, -32, !dbg !10223
  call void @llvm.dbg.value(metadata i32 %11, metadata !10210, metadata !DIExpression()), !dbg !10225
  %12 = add i32 %0, 32
  %13 = add i32 %12, %2
  %14 = and i32 %13, -32
  call void @llvm.dbg.value(metadata i32 %11, metadata !10210, metadata !DIExpression()), !dbg !10225
  %15 = icmp ugt i32 %11, %14, !dbg !10226
  br i1 %15, label %21, label %16, !dbg !10228

16:                                               ; preds = %10, %16
  %17 = phi i32 [ %19, %16 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !10210, metadata !DIExpression()), !dbg !10225
  %18 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %17) #20, !dbg !10229
  %19 = add i32 %17, 32, !dbg !10231
  call void @llvm.dbg.value(metadata i32 %19, metadata !10210, metadata !DIExpression()), !dbg !10225
  %20 = icmp ugt i32 %19, %14, !dbg !10226
  br i1 %20, label %21, label %16, !dbg !10228, !llvm.loop !10232

21:                                               ; preds = %16, %10, %8, %6
  %22 = phi i32 [ %7, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %16 ], !dbg !10213
  ret i32 %22, !dbg !10234
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !10235 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10239, metadata !DIExpression()), !dbg !10245
  call void @llvm.dbg.value(metadata i32 %1, metadata !10240, metadata !DIExpression()), !dbg !10245
  call void @llvm.dbg.value(metadata i8* %0, metadata !10241, metadata !DIExpression()), !dbg !10245
  call void @llvm.dbg.value(metadata i32 0, metadata !10242, metadata !DIExpression()), !dbg !10245
  call void @llvm.dbg.value(metadata i32 0, metadata !10243, metadata !DIExpression()), !dbg !10245
  call void @llvm.dbg.value(metadata i32 0, metadata !10244, metadata !DIExpression()), !dbg !10245
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10246
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !10246
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !10246
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !10247
  %7 = load i32, i32* %6, align 4, !dbg !10247
  call void @llvm.dbg.value(metadata i32 %7, metadata !10244, metadata !DIExpression()), !dbg !10245
  call void @llvm.dbg.value(metadata i32 0, metadata !10243, metadata !DIExpression()), !dbg !10245
  call void @llvm.dbg.value(metadata i32 0, metadata !10242, metadata !DIExpression()), !dbg !10245
  %8 = icmp ugt i32 %7, %1, !dbg !10248
  br i1 %8, label %23, label %9, !dbg !10249

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !10250
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10244, metadata !DIExpression()), !dbg !10245
  call void @llvm.dbg.value(metadata i32 %12, metadata !10243, metadata !DIExpression()), !dbg !10245
  call void @llvm.dbg.value(metadata i32 %13, metadata !10242, metadata !DIExpression()), !dbg !10245
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 0, !dbg !10252
  %15 = load i32, i32* %14, align 4, !dbg !10252
  %16 = mul i32 %15, %10, !dbg !10253
  %17 = add i32 %16, %13, !dbg !10254
  call void @llvm.dbg.value(metadata i32 %17, metadata !10242, metadata !DIExpression()), !dbg !10245
  %18 = add i32 %12, 1, !dbg !10255
  call void @llvm.dbg.value(metadata i32 %18, metadata !10243, metadata !DIExpression()), !dbg !10245
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 1, !dbg !10256
  %20 = load i32, i32* %19, align 4, !dbg !10256
  %21 = add i32 %20, %11, !dbg !10257
  call void @llvm.dbg.value(metadata i32 %21, metadata !10244, metadata !DIExpression()), !dbg !10245
  %22 = icmp ugt i32 %21, %1, !dbg !10248
  br i1 %22, label %23, label %9, !dbg !10249, !llvm.loop !10258

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !10260
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !10245
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !10245
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !10245
  call void @llvm.dbg.value(metadata i8* %0, metadata !10241, metadata !DIExpression()), !dbg !10245
  %28 = sub i32 %1, %27, !dbg !10261
  %29 = add i32 %28, %24, !dbg !10262
  %30 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %26, i32 0, !dbg !10263
  %31 = load i32, i32* %30, align 4, !dbg !10263
  %32 = mul i32 %29, %31, !dbg !10264
  %33 = add i32 %32, %25, !dbg !10265
  call void @llvm.dbg.value(metadata i32 %33, metadata !10242, metadata !DIExpression()), !dbg !10245
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !10266
  %35 = bitcast i8* %34 to i8**, !dbg !10266
  %36 = load i8*, i8** %35, align 4, !dbg !10266
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !10267
  ret i8* %37, !dbg !10268
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !10269 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10271, metadata !DIExpression()), !dbg !10275
  call void @llvm.dbg.value(metadata i32 %1, metadata !10272, metadata !DIExpression()), !dbg !10275
  call void @llvm.dbg.value(metadata i32 %2, metadata !10273, metadata !DIExpression()), !dbg !10275
  call void @llvm.dbg.value(metadata i8* %0, metadata !10274, metadata !DIExpression()), !dbg !10275
  %4 = icmp eq i32 %2, 0, !dbg !10276
  br i1 %4, label %6, label %5, !dbg !10279

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !10280
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.145, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.146, i32 0, i32 0)) #23, !dbg !10280
  unreachable, !dbg !10280

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !10274, metadata !DIExpression()), !dbg !10275
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #21, !dbg !10282
  %8 = inttoptr i32 %7 to i8*, !dbg !10283
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !10284
  %10 = bitcast i8* %9 to i8**, !dbg !10284
  store i8* %8, i8** %10, align 4, !dbg !10285
  ret i8* %8, !dbg !10286
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #13 section ".ram_code" !dbg !1970 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1974, metadata !DIExpression()), !dbg !10287
  call void @llvm.dbg.value(metadata i32 %1, metadata !1975, metadata !DIExpression()), !dbg !10287
  call void @llvm.dbg.value(metadata i8* %0, metadata !1976, metadata !DIExpression()), !dbg !10287
  call void @llvm.dbg.value(metadata i32 0, metadata !2021, metadata !DIExpression()), !dbg !10287
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !10288
  %4 = bitcast i8* %3 to [8 x [2 x %struct.hal_cache_region_config_t]]*, !dbg !10288
  %5 = and i32 %1, 7, !dbg !10290
  %6 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !10291
  %7 = load i32, i32* %6, align 4, !dbg !10291
  %8 = icmp eq i32 %7, -1, !dbg !10292
  br i1 %8, label %62, label %9, !dbg !10293

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !10294
  br i1 %10, label %54, label %11, !dbg !10297

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !10298
  %13 = load i32, i32* %12, align 4, !dbg !10298
  %14 = icmp eq i32 %13, -1, !dbg !10301
  br i1 %14, label %44, label %15, !dbg !10302

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !10303
  br i1 %16, label %35, label %17, !dbg !10306

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10307
  %19 = add i32 %18, 1, !dbg !10307
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !10307
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10309
  %21 = shl nuw nsw i32 1, %5, !dbg !10311
  %22 = and i32 %20, %21, !dbg !10312
  %23 = icmp eq i32 %22, 0, !dbg !10312
  br i1 %23, label %30, label %24, !dbg !10313

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !10314
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10316
  %26 = ptrtoint i8* %25 to i32, !dbg !10317
  %27 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10318
  store i32 %26, i32* %27, align 4, !dbg !10319
  call void @llvm.dbg.value(metadata i32 %26, metadata !2021, metadata !DIExpression()), !dbg !10287
  %28 = xor i32 %21, -1, !dbg !10320
  %29 = and i32 %20, %28, !dbg !10321
  br label %71, !dbg !10322

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !10323
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10325
  %32 = ptrtoint i8* %31 to i32, !dbg !10326
  %33 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10327
  store i32 %32, i32* %33, align 4, !dbg !10328
  call void @llvm.dbg.value(metadata i32 %32, metadata !2021, metadata !DIExpression()), !dbg !10287
  %34 = or i32 %20, %21, !dbg !10329
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !10330
  %37 = add i32 %36, 1, !dbg !10330
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !10330
  %38 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10332
  %39 = load i32, i32* %38, align 4, !dbg !10332
  call void @llvm.dbg.value(metadata i32 %39, metadata !2021, metadata !DIExpression()), !dbg !10287
  %40 = shl nuw nsw i32 1, %5, !dbg !10333
  %41 = xor i32 %40, -1, !dbg !10334
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10335
  %43 = and i32 %42, %41, !dbg !10335
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10336
  %46 = add i32 %45, 1, !dbg !10336
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !10336
  store i32 %1, i32* %12, align 4, !dbg !10338
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10339
  %48 = ptrtoint i8* %47 to i32, !dbg !10340
  %49 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10341
  store i32 %48, i32* %49, align 4, !dbg !10342
  call void @llvm.dbg.value(metadata i32 %48, metadata !2021, metadata !DIExpression()), !dbg !10287
  %50 = shl nuw nsw i32 1, %5, !dbg !10343
  %51 = xor i32 %50, -1, !dbg !10344
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10345
  %53 = and i32 %52, %51, !dbg !10345
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !10346
  %56 = add i32 %55, 1, !dbg !10346
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !10346
  %57 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10348
  %58 = load i32, i32* %57, align 4, !dbg !10348
  call void @llvm.dbg.value(metadata i32 %58, metadata !2021, metadata !DIExpression()), !dbg !10287
  %59 = shl nuw nsw i32 1, %5, !dbg !10349
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10350
  %61 = or i32 %60, %59, !dbg !10350
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10351
  %64 = add i32 %63, 1, !dbg !10351
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !10351
  store i32 %1, i32* %6, align 4, !dbg !10353
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10354
  %66 = ptrtoint i8* %65 to i32, !dbg !10355
  %67 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10356
  store i32 %66, i32* %67, align 4, !dbg !10357
  call void @llvm.dbg.value(metadata i32 %66, metadata !2021, metadata !DIExpression()), !dbg !10287
  %68 = shl nuw nsw i32 1, %5, !dbg !10358
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10359
  %70 = or i32 %69, %68, !dbg !10359
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !10360
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !10360
  call void @llvm.dbg.value(metadata i32 %73, metadata !2021, metadata !DIExpression()), !dbg !10287
  ret i32 %73, !dbg !10361
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !10362 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10364, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata i32 %1, metadata !10365, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata i8* %0, metadata !10366, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata i32 0, metadata !10367, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata i32 0, metadata !10368, metadata !DIExpression()), !dbg !10369
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10370
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !10370
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !10370
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !10371
  %7 = load i32, i32* %6, align 4, !dbg !10371
  call void @llvm.dbg.value(metadata i32 %7, metadata !10368, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata i32 0, metadata !10367, metadata !DIExpression()), !dbg !10369
  %8 = icmp ugt i32 %7, %1, !dbg !10372
  br i1 %8, label %17, label %9, !dbg !10373

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10368, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.value(metadata i32 %11, metadata !10367, metadata !DIExpression()), !dbg !10369
  %12 = add i32 %11, 1, !dbg !10374
  call void @llvm.dbg.value(metadata i32 %12, metadata !10367, metadata !DIExpression()), !dbg !10369
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 1, !dbg !10376
  %14 = load i32, i32* %13, align 4, !dbg !10376
  %15 = add i32 %14, %10, !dbg !10377
  call void @llvm.dbg.value(metadata i32 %15, metadata !10368, metadata !DIExpression()), !dbg !10369
  %16 = icmp ugt i32 %15, %1, !dbg !10372
  br i1 %16, label %17, label %9, !dbg !10373, !llvm.loop !10378

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !10369
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 0, !dbg !10380
  %20 = load i32, i32* %19, align 4, !dbg !10380
  ret i32 %20, !dbg !10381
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !10382 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10384, metadata !DIExpression()), !dbg !10390
  call void @llvm.dbg.value(metadata i32 %1, metadata !10385, metadata !DIExpression()), !dbg !10390
  call void @llvm.dbg.value(metadata i8* %0, metadata !10386, metadata !DIExpression()), !dbg !10390
  call void @llvm.dbg.value(metadata i32 0, metadata !10387, metadata !DIExpression()), !dbg !10390
  call void @llvm.dbg.value(metadata i32 0, metadata !10388, metadata !DIExpression()), !dbg !10390
  call void @llvm.dbg.value(metadata i32 0, metadata !10389, metadata !DIExpression()), !dbg !10390
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10391
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !10391
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !10391
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !10392
  %7 = load i32, i32* %6, align 4, !dbg !10392
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 0, !dbg !10393
  %9 = load i32, i32* %8, align 4, !dbg !10393
  %10 = mul i32 %9, %7, !dbg !10394
  call void @llvm.dbg.value(metadata i32 %10, metadata !10388, metadata !DIExpression()), !dbg !10390
  call void @llvm.dbg.value(metadata i32 0, metadata !10389, metadata !DIExpression()), !dbg !10390
  call void @llvm.dbg.value(metadata i32 0, metadata !10387, metadata !DIExpression()), !dbg !10390
  call void @llvm.dbg.value(metadata i32 %1, metadata !10385, metadata !DIExpression()), !dbg !10390
  %11 = icmp ult i32 %10, %1, !dbg !10395
  br i1 %11, label %12, label %30, !dbg !10396

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !10397
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !10389, metadata !DIExpression()), !dbg !10390
  call void @llvm.dbg.value(metadata i32 %16, metadata !10388, metadata !DIExpression()), !dbg !10390
  call void @llvm.dbg.value(metadata i32 %17, metadata !10387, metadata !DIExpression()), !dbg !10390
  call void @llvm.dbg.value(metadata i32 %18, metadata !10385, metadata !DIExpression()), !dbg !10390
  %19 = icmp eq i32 %14, 0, !dbg !10396
  br i1 %19, label %36, label %20, !dbg !10398

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !10399
  call void @llvm.dbg.value(metadata i32 %21, metadata !10389, metadata !DIExpression()), !dbg !10390
  %22 = sub i32 %18, %16, !dbg !10401
  call void @llvm.dbg.value(metadata i32 %22, metadata !10385, metadata !DIExpression()), !dbg !10390
  %23 = add i32 %17, 1, !dbg !10402
  call void @llvm.dbg.value(metadata i32 %23, metadata !10387, metadata !DIExpression()), !dbg !10390
  %24 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 1, !dbg !10403
  %25 = load i32, i32* %24, align 4, !dbg !10403
  %26 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 0, !dbg !10404
  %27 = load i32, i32* %26, align 4, !dbg !10404
  %28 = mul i32 %27, %25, !dbg !10405
  call void @llvm.dbg.value(metadata i32 %28, metadata !10388, metadata !DIExpression()), !dbg !10390
  %29 = icmp ugt i32 %22, %28, !dbg !10395
  br i1 %29, label %12, label %30, !dbg !10396, !llvm.loop !10406

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !10408
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !10390
  %34 = udiv i32 %32, %31, !dbg !10411
  %35 = add i32 %34, %33, !dbg !10412
  call void @llvm.dbg.value(metadata i32 %35, metadata !10389, metadata !DIExpression()), !dbg !10390
  br label %36, !dbg !10413

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !10414
  call void @llvm.dbg.value(metadata i32 %37, metadata !10389, metadata !DIExpression()), !dbg !10390
  ret i32 %37, !dbg !10415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #10 !dbg !10416 {
  ret i32 134217728, !dbg !10417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #10 !dbg !10418 {
  ret i32 3932160, !dbg !10419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #10 !dbg !10420 {
  ret i32 0, !dbg !10421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #10 !dbg !10422 {
  ret i32 262144, !dbg !10423
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !10424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10426, metadata !DIExpression()), !dbg !10428
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !10429
  call void @llvm.dbg.value(metadata i32 %2, metadata !10427, metadata !DIExpression()), !dbg !10428
  %3 = icmp eq i32 %2, 0, !dbg !10430
  br i1 %3, label %5, label %4, !dbg !10432

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !10433
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.145, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.146, i32 0, i32 0)) #23, !dbg !10433
  unreachable, !dbg !10433

5:                                                ; preds = %1
  ret void, !dbg !10438
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10439 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10443, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i32 %1, metadata !10444, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i8* %2, metadata !10445, metadata !DIExpression()), !dbg !10456
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10457
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10457
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10446, metadata !DIExpression()), !dbg !10458
  %7 = bitcast i32* %5 to i8*, !dbg !10459
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10459
  call void @llvm.dbg.value(metadata i32* %5, metadata !10455, metadata !DIExpression(DW_OP_deref)), !dbg !10456
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !10460
  call void @llvm.va_start(i8* nonnull %6), !dbg !10461
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10462
  %10 = load i32, i32* %9, align 4, !dbg !10462
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10462
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !10462
  call void @llvm.va_end(i8* nonnull %6), !dbg !10463
  %13 = load i32, i32* %5, align 4, !dbg !10464
  call void @llvm.dbg.value(metadata i32 %13, metadata !10455, metadata !DIExpression()), !dbg !10456
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !10465
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10466
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10466
  ret void, !dbg !10466
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #18

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #18

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10467 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10469, metadata !DIExpression()), !dbg !10474
  call void @llvm.dbg.value(metadata i32 %1, metadata !10470, metadata !DIExpression()), !dbg !10474
  call void @llvm.dbg.value(metadata i8* %2, metadata !10471, metadata !DIExpression()), !dbg !10474
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10475
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10475
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10472, metadata !DIExpression()), !dbg !10476
  %7 = bitcast i32* %5 to i8*, !dbg !10477
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10477
  call void @llvm.dbg.value(metadata i32* %5, metadata !10473, metadata !DIExpression(DW_OP_deref)), !dbg !10474
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !10478
  call void @llvm.va_start(i8* nonnull %6), !dbg !10479
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10480
  %10 = load i32, i32* %9, align 4, !dbg !10480
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10480
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !10480
  call void @llvm.va_end(i8* nonnull %6), !dbg !10481
  %13 = load i32, i32* %5, align 4, !dbg !10482
  call void @llvm.dbg.value(metadata i32 %13, metadata !10473, metadata !DIExpression()), !dbg !10474
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !10483
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10484
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10484
  ret void, !dbg !10484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10485 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10487, metadata !DIExpression()), !dbg !10492
  call void @llvm.dbg.value(metadata i32 %1, metadata !10488, metadata !DIExpression()), !dbg !10492
  call void @llvm.dbg.value(metadata i8* %2, metadata !10489, metadata !DIExpression()), !dbg !10492
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10493
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10493
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10490, metadata !DIExpression()), !dbg !10494
  %7 = bitcast i32* %5 to i8*, !dbg !10495
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10495
  call void @llvm.dbg.value(metadata i32* %5, metadata !10491, metadata !DIExpression(DW_OP_deref)), !dbg !10492
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !10496
  call void @llvm.va_start(i8* nonnull %6), !dbg !10497
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10498
  %10 = load i32, i32* %9, align 4, !dbg !10498
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10498
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !10498
  call void @llvm.va_end(i8* nonnull %6), !dbg !10499
  %13 = load i32, i32* %5, align 4, !dbg !10500
  call void @llvm.dbg.value(metadata i32 %13, metadata !10491, metadata !DIExpression()), !dbg !10492
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !10501
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10502
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10502
  ret void, !dbg !10502
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #10 !dbg !10503 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10509, metadata !DIExpression()), !dbg !10514
  call void @llvm.dbg.value(metadata i32 %1, metadata !10510, metadata !DIExpression()), !dbg !10514
  call void @llvm.dbg.value(metadata i8* %2, metadata !10511, metadata !DIExpression()), !dbg !10514
  call void @llvm.dbg.value(metadata i8* %3, metadata !10512, metadata !DIExpression()), !dbg !10514
  call void @llvm.dbg.value(metadata i32 %4, metadata !10513, metadata !DIExpression()), !dbg !10514
  ret void, !dbg !10515
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #2 section ".tcm_code" !dbg !10516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10518, metadata !DIExpression()), !dbg !10520
  %2 = shl i32 %0, 20, !dbg !10521
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10522
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !10523
  store volatile i32 %2, i32* %4, align 4, !dbg !10524
  %5 = load volatile i32, i32* %4, align 4, !dbg !10525
  %6 = or i32 %5, 65536, !dbg !10526
  store volatile i32 %6, i32* %4, align 4, !dbg !10527
  br label %7, !dbg !10528

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !10529
  %9 = and i32 %8, 1, !dbg !10530
  %10 = icmp eq i32 %9, 0, !dbg !10531
  br i1 %10, label %7, label %11, !dbg !10528, !llvm.loop !10532

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !10534
  %13 = lshr i32 %12, 8, !dbg !10535
  %14 = and i32 %13, 255, !dbg !10535
  call void @llvm.dbg.value(metadata i32 %14, metadata !10519, metadata !DIExpression()), !dbg !10520
  ret i32 %14, !dbg !10536
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !10537 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10539, metadata !DIExpression()), !dbg !10541
  call void @llvm.dbg.value(metadata i32 %1, metadata !10540, metadata !DIExpression()), !dbg !10541
  call void @llvm.dbg.value(metadata i32 %1, metadata !10540, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !10541
  %3 = shl i32 %1, 24, !dbg !10542
  %4 = shl i32 %0, 20, !dbg !10543
  %5 = or i32 %4, %3, !dbg !10544
  %6 = or i32 %5, 131072, !dbg !10544
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10545
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !10546
  store volatile i32 %6, i32* %8, align 4, !dbg !10547
  %9 = load volatile i32, i32* %8, align 4, !dbg !10548
  %10 = or i32 %9, 65536, !dbg !10549
  store volatile i32 %10, i32* %8, align 4, !dbg !10550
  br label %11, !dbg !10551

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !10552
  %13 = and i32 %12, 1, !dbg !10553
  %14 = icmp eq i32 %13, 0, !dbg !10554
  br i1 %14, label %11, label %15, !dbg !10551, !llvm.loop !10555

15:                                               ; preds = %11
  ret void, !dbg !10557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #7 section ".tcm_code" !dbg !10558 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !10559
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !10560
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !10561
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !10562
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !10563
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !10564
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !10565
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !10566
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !10567
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !10568
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !10569
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !10570
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !10571
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !10572
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !10573
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !10574
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !10575
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !10576
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !10577
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !10578
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !10579
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !10580
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !10581
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !10582
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !10583
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !10584
  ret void, !dbg !10585
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #2 section ".tcm_code" !dbg !10586 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10589
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10590
  store volatile i32 21553, i32* %2, align 4, !dbg !10591
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10592
  store volatile i32 20489, i32* %3, align 4, !dbg !10593
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10594
  store volatile i32 20550, i32* %4, align 4, !dbg !10595
  ret i32 0, !dbg !10596
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #2 section ".tcm_code" !dbg !10597 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !10601, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.value(metadata i32 0, metadata !10599, metadata !DIExpression()), !dbg !10606
  call void @llvm.dbg.value(metadata i32 16384, metadata !10600, metadata !DIExpression()), !dbg !10606
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10607
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !10608
  store volatile i32 0, i32* %2, align 4, !dbg !10609
  call void @llvm.dbg.value(metadata i32 0, metadata !10603, metadata !DIExpression()), !dbg !10606
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !10603, metadata !DIExpression()), !dbg !10606
  br label %5, !dbg !10610

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !10603, metadata !DIExpression()), !dbg !10606
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !10602, metadata !DIExpression()), !dbg !10606
  br label %8, !dbg !10612

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10602, metadata !DIExpression()), !dbg !10606
  call void @llvm.dbg.value(metadata i32 0, metadata !10604, metadata !DIExpression()), !dbg !10606
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !10616

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !10604, metadata !DIExpression()), !dbg !10606
  %12 = icmp eq i32 %30, 2, !dbg !10620
  br i1 %12, label %31, label %13, !dbg !10616, !llvm.loop !10622

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10604, metadata !DIExpression()), !dbg !10606
  store volatile i32 0, i32* %2, align 4, !dbg !10624
  store volatile i32 63, i32* %3, align 4, !dbg !10626
  %15 = load i32, i32* %10, align 4, !dbg !10627
  %16 = shl i32 %15, 16, !dbg !10628
  %17 = shl nuw nsw i32 %14, 13, !dbg !10629
  %18 = or i32 %17, %7, !dbg !10630
  %19 = or i32 %18, %16, !dbg !10631
  store volatile i32 %19, i32* %2, align 4, !dbg !10632
  %20 = load volatile i32, i32* %2, align 4, !dbg !10633
  %21 = or i32 %20, 805, !dbg !10633
  store volatile i32 %21, i32* %2, align 4, !dbg !10633
  br label %22, !dbg !10634

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !10635
  %24 = and i32 %23, 2, !dbg !10636
  %25 = icmp eq i32 %24, 0, !dbg !10637
  br i1 %25, label %22, label %26, !dbg !10634, !llvm.loop !10638

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !10640
  %28 = and i32 %27, 1, !dbg !10642
  %29 = icmp eq i32 %28, 0, !dbg !10643
  %30 = add nuw nsw i32 %14, 1, !dbg !10644
  call void @llvm.dbg.value(metadata i32 %30, metadata !10604, metadata !DIExpression()), !dbg !10606
  br i1 %29, label %11, label %37, !dbg !10645

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !10646
  call void @llvm.dbg.value(metadata i32 %32, metadata !10602, metadata !DIExpression()), !dbg !10606
  %33 = icmp eq i32 %32, 2, !dbg !10647
  br i1 %33, label %34, label %8, !dbg !10612, !llvm.loop !10648

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !10650
  call void @llvm.dbg.value(metadata i32 %35, metadata !10603, metadata !DIExpression()), !dbg !10606
  %36 = icmp eq i32 %35, 2, !dbg !10651
  br i1 %36, label %37, label %5, !dbg !10610, !llvm.loop !10652

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !10606
  store volatile i32 0, i32* %2, align 4, !dbg !10606
  ret i32 %38, !dbg !10654
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #2 section ".tcm_code" !dbg !10655 {
  %1 = tail call i32 @TestCase_MBIST() #21, !dbg !10656
  %2 = icmp ne i32 %1, 0, !dbg !10658
  %3 = sext i1 %2 to i32, !dbg !10659
  ret i32 %3, !dbg !10660
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #2 section ".tcm_code" !dbg !10661 {
  call void @llvm.dbg.value(metadata i32 31, metadata !10663, metadata !DIExpression()), !dbg !10665
  call void @llvm.dbg.value(metadata i32 0, metadata !10664, metadata !DIExpression()), !dbg !10665
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10666
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !10667
  store volatile i32 0, i32* %2, align 4, !dbg !10668
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10669
  store volatile i32 0, i32* %3, align 4, !dbg !10670
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10671
  store volatile i32 0, i32* %4, align 4, !dbg !10672
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10673
  store volatile i32 0, i32* %5, align 4, !dbg !10674
  call void @llvm.dbg.value(metadata i32 31, metadata !10663, metadata !DIExpression()), !dbg !10665
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10675
  store volatile i32 522133279, i32* %6, align 4, !dbg !10679
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10680
  store volatile i32 522133279, i32* %7, align 4, !dbg !10681
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !10682
  %9 = icmp eq i32 %8, 0, !dbg !10684
  call void @llvm.dbg.value(metadata i32 31, metadata !10663, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10665
  br i1 %9, label %36, label %10, !dbg !10685

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10663, metadata !DIExpression()), !dbg !10665
  call void @llvm.dbg.value(metadata i32 %11, metadata !10663, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10665
  call void @llvm.dbg.value(metadata i32 %11, metadata !10663, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10665
  %12 = icmp eq i32 %11, 0, !dbg !10686
  br i1 %12, label %26, label %13, !dbg !10687, !llvm.loop !10688

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !10690
  call void @llvm.dbg.value(metadata i32 %14, metadata !10663, metadata !DIExpression()), !dbg !10665
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10691
  %16 = shl i32 %14, 24, !dbg !10692
  %17 = shl i32 %14, 16, !dbg !10693
  %18 = shl i32 %14, 8, !dbg !10694
  %19 = or i32 %17, %14, !dbg !10695
  %20 = or i32 %19, %16, !dbg !10696
  %21 = or i32 %20, %18, !dbg !10697
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !10675
  store volatile i32 %21, i32* %22, align 4, !dbg !10679
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !10680
  store volatile i32 %21, i32* %23, align 4, !dbg !10681
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !10682
  %25 = icmp eq i32 %24, 0, !dbg !10684
  call void @llvm.dbg.value(metadata i32 %14, metadata !10663, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10665
  br i1 %25, label %36, label %10, !dbg !10685

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !10664, metadata !DIExpression()), !dbg !10665
  %28 = shl nuw nsw i32 %27, 16, !dbg !10698
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10704
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !10705
  store volatile i32 %28, i32* %30, align 4, !dbg !10706
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !10707
  %32 = icmp eq i32 %31, 0, !dbg !10709
  call void @llvm.dbg.value(metadata i32 %27, metadata !10664, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10665
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !10710
  call void @llvm.dbg.value(metadata i32 %33, metadata !10664, metadata !DIExpression()), !dbg !10665
  call void @llvm.dbg.value(metadata i32 %27, metadata !10664, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10665
  br i1 %35, label %36, label %26, !dbg !10710, !llvm.loop !10711

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !10714
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #2 section ".tcm_code" !dbg !10715 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !10716
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10717
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !10718
  store volatile i32 1, i32* %2, align 4, !dbg !10719
  br label %3, !dbg !10720

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10721
  %5 = and i32 %4, 2, !dbg !10722
  %6 = icmp eq i32 %5, 0, !dbg !10722
  br i1 %6, label %3, label %7, !dbg !10720, !llvm.loop !10723

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !10725
  br label %8, !dbg !10726

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !10727
  %10 = and i32 %9, 2, !dbg !10728
  %11 = icmp eq i32 %10, 0, !dbg !10728
  br i1 %11, label %12, label %8, !dbg !10726, !llvm.loop !10729

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !10731
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !10732
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !10733

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !10734
  %17 = and i32 %16, 1, !dbg !10735
  %18 = icmp eq i32 %17, 0, !dbg !10736
  br i1 %18, label %15, label %19, !dbg !10733, !llvm.loop !10737

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #21, !dbg !10739
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #21, !dbg !10740
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !10741

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !10742
  %24 = and i32 %23, 1, !dbg !10743
  %25 = icmp eq i32 %24, 0, !dbg !10744
  br i1 %25, label %22, label %26, !dbg !10741, !llvm.loop !10745

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !10747
  %28 = icmp eq i32 %27, 9507, !dbg !10749
  br i1 %28, label %29, label %37, !dbg !10750

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !10751
  %31 = and i32 %30, 15, !dbg !10754
  %32 = icmp eq i32 %31, 2, !dbg !10755
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !10756
  %34 = and i32 %33, -128, !dbg !10756
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !10756
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !10756
  br label %37, !dbg !10757

37:                                               ; preds = %29, %26
  ret void, !dbg !10757
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !10758 {
  tail call void @EMI_PowerOn_Init() #21, !dbg !10761
  tail call void @__EMI_SetRegValfromCMCP() #21, !dbg !10762
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #21, !dbg !10763
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !10764
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #21, !dbg !10765
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !10766
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #21, !dbg !10767
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !10768
  ret i8 0, !dbg !10769
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !10770 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !10771
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10772
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !10773
  store volatile i32 %1, i32* %3, align 4, !dbg !10774
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !10775
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !10776
  store volatile i32 %4, i32* %5, align 4, !dbg !10777
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !10778
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !10779
  store volatile i32 %6, i32* %7, align 4, !dbg !10780
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !10781
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !10782
  store volatile i32 %8, i32* %9, align 4, !dbg !10783
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !10784
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !10785
  store volatile i32 %10, i32* %11, align 4, !dbg !10786
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !10787
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !10788
  store volatile i32 %12, i32* %13, align 4, !dbg !10789
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !10790
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !10791
  store volatile i32 %14, i32* %15, align 4, !dbg !10792
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !10793
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !10794
  store volatile i32 %16, i32* %17, align 4, !dbg !10795
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !10796
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !10797
  store volatile i32 %18, i32* %19, align 4, !dbg !10798
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !10799
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !10800
  store volatile i32 %20, i32* %21, align 4, !dbg !10801
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !10802
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !10803
  store volatile i32 %22, i32* %23, align 4, !dbg !10804
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !10805
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !10806
  store volatile i32 %24, i32* %25, align 4, !dbg !10807
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !10808
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !10809
  store volatile i32 %26, i32* %27, align 4, !dbg !10810
  tail call void @__EMI_EnableDataAutoTracking() #21, !dbg !10811
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10812
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !10813
  store volatile i32 806289408, i32* %29, align 4, !dbg !10814
  br label %30, !dbg !10815

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !10816
  %32 = and i32 %31, 128, !dbg !10817
  %33 = icmp eq i32 %32, 0, !dbg !10817
  br i1 %33, label %30, label %34, !dbg !10815, !llvm.loop !10818

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !10820
  br label %35, !dbg !10821

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !10822
  %37 = and i32 %36, 128, !dbg !10823
  %38 = icmp eq i32 %37, 0, !dbg !10823
  br i1 %38, label %39, label %35, !dbg !10821, !llvm.loop !10824

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !10826
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #21, !dbg !10827
  ret i8 0, !dbg !10828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #2 section ".tcm_code" !dbg !10829 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10830
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !10831
  %3 = load volatile i32, i32* %2, align 4, !dbg !10831
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !10832
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !10833
  %5 = load volatile i32, i32* %4, align 4, !dbg !10833
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !10834
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !10835
  %7 = load volatile i32, i32* %6, align 4, !dbg !10835
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !10836
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10837
  %9 = load volatile i32, i32* %8, align 4, !dbg !10837
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !10838
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10839
  %11 = load volatile i32, i32* %10, align 4, !dbg !10839
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !10840
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10841
  %13 = load volatile i32, i32* %12, align 4, !dbg !10841
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !10842
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !10843
  %15 = load volatile i32, i32* %14, align 4, !dbg !10843
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !10844
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !10845
  %17 = load volatile i32, i32* %16, align 4, !dbg !10845
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !10846
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !10847
  %19 = load volatile i32, i32* %18, align 4, !dbg !10847
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !10848
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !10849
  %21 = load volatile i32, i32* %20, align 4, !dbg !10849
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !10850
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !10851
  %23 = load volatile i32, i32* %22, align 4, !dbg !10851
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !10852
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10853
  %25 = load volatile i32, i32* %24, align 4, !dbg !10853
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !10854
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !10855
  %27 = load volatile i32, i32* %26, align 4, !dbg !10855
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !10856
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !10857
  %29 = load volatile i32, i32* %28, align 4, !dbg !10857
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !10858
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10859
  %31 = load volatile i32, i32* %30, align 4, !dbg !10859
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !10860
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10861
  %33 = load volatile i32, i32* %32, align 4, !dbg !10861
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !10862
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10863
  %35 = load volatile i32, i32* %34, align 4, !dbg !10863
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !10864
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !10865
  %37 = load volatile i32, i32* %36, align 4, !dbg !10865
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !10866
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !10867
  %39 = load volatile i32, i32* %38, align 4, !dbg !10867
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !10868
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !10869
  %41 = load volatile i32, i32* %40, align 4, !dbg !10869
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !10870
  ret void, !dbg !10871
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #2 section ".tcm_code" !dbg !10872 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !10873

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10874
  %5 = and i32 %4, 17, !dbg !10875
  %6 = icmp eq i32 %5, 17, !dbg !10876
  br i1 %6, label %7, label %3, !dbg !10873, !llvm.loop !10877

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !10879
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !10880
  store volatile i32 %8, i32* %9, align 4, !dbg !10881
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !10882
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !10883
  store volatile i32 %10, i32* %11, align 4, !dbg !10884
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !10885
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !10886
  store volatile i32 %12, i32* %13, align 4, !dbg !10887
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !10888
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10889
  store volatile i32 %14, i32* %15, align 4, !dbg !10890
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !10891
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10892
  store volatile i32 %16, i32* %17, align 4, !dbg !10893
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !10894
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10895
  store volatile i32 %18, i32* %19, align 4, !dbg !10896
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !10897
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !10898
  store volatile i32 %20, i32* %21, align 4, !dbg !10899
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !10900
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !10901
  store volatile i32 %22, i32* %23, align 4, !dbg !10902
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !10903
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10904
  store volatile i32 %24, i32* %25, align 4, !dbg !10905
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !10906
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !10907
  store volatile i32 %26, i32* %27, align 4, !dbg !10908
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !10909
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !10910
  store volatile i32 %28, i32* %29, align 4, !dbg !10911
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !10912
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !10913
  store volatile i32 %30, i32* %31, align 4, !dbg !10914
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !10915
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !10916
  store volatile i32 %32, i32* %33, align 4, !dbg !10917
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !10918
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !10919
  store volatile i32 %34, i32* %35, align 4, !dbg !10920
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !10921
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10922
  store volatile i32 %36, i32* %37, align 4, !dbg !10923
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !10924
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10925
  store volatile i32 %38, i32* %39, align 4, !dbg !10926
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !10927
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10928
  store volatile i32 %40, i32* %41, align 4, !dbg !10929
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !10930
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !10931
  store volatile i32 %42, i32* %43, align 4, !dbg !10932
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !10933
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !10934
  store volatile i32 %44, i32* %45, align 4, !dbg !10935
  ret void, !dbg !10936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #2 section ".tcm_code" !dbg !10937 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10938
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10939
  %3 = load volatile i32, i32* %2, align 4, !dbg !10939
  %4 = and i32 %3, -2097185, !dbg !10940
  store volatile i32 %4, i32* %2, align 4, !dbg !10941
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !10942
  store volatile i32 1, i32* %5, align 4, !dbg !10943
  br label %6, !dbg !10944

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !10945
  %8 = and i32 %7, 2, !dbg !10946
  %9 = icmp eq i32 %8, 0, !dbg !10946
  br i1 %9, label %6, label %10, !dbg !10944, !llvm.loop !10947

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !10949
  br label %11, !dbg !10950

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !10951
  %13 = and i32 %12, 2, !dbg !10952
  %14 = icmp eq i32 %13, 0, !dbg !10952
  br i1 %14, label %15, label %11, !dbg !10950, !llvm.loop !10953

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #21, !dbg !10955
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10956
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !10957
  store volatile i32 806289408, i32* %17, align 4, !dbg !10958
  br label %18, !dbg !10959

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !10960
  %20 = and i32 %19, 128, !dbg !10961
  %21 = icmp eq i32 %20, 0, !dbg !10961
  br i1 %21, label %18, label %22, !dbg !10959, !llvm.loop !10962

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !10964
  br label %23, !dbg !10965

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !10966
  %25 = and i32 %24, 128, !dbg !10967
  %26 = icmp eq i32 %25, 0, !dbg !10967
  br i1 %26, label %27, label %23, !dbg !10965, !llvm.loop !10968

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !10970
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !10971
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !10972
  store volatile i32 %28, i32* %29, align 4, !dbg !10973
  ret void, !dbg !10974
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #2 section ".tcm_code" !dbg !10975 {
  tail call void @EMI_Setting_Save() #21, !dbg !10976
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !10977

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10978
  %5 = and i32 %4, 17, !dbg !10979
  %6 = icmp eq i32 %5, 17, !dbg !10980
  br i1 %6, label %7, label %3, !dbg !10977, !llvm.loop !10981

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !10983
  %9 = or i32 %8, 1792, !dbg !10984
  store volatile i32 %9, i32* %2, align 4, !dbg !10985
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !10986
  store volatile i32 -261685248, i32* %10, align 4, !dbg !10987
  br label %11, !dbg !10988

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !10989
  %13 = and i32 %12, 1, !dbg !10990
  %14 = icmp eq i32 %13, 0, !dbg !10991
  br i1 %14, label %11, label %15, !dbg !10988, !llvm.loop !10992

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !10994
  store volatile i32 0, i32* %16, align 4, !dbg !10995
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !10996

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !10997
  %20 = and i32 %19, 16, !dbg !10998
  %21 = icmp eq i32 %20, 0, !dbg !10998
  br i1 %21, label %18, label %22, !dbg !10996, !llvm.loop !10999

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !11001
  %24 = load volatile i32, i32* %23, align 4, !dbg !11001
  %25 = or i32 %24, 2097184, !dbg !11002
  store volatile i32 %25, i32* %23, align 4, !dbg !11003
  ret void, !dbg !11004
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !11005 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11010, metadata !DIExpression()), !dbg !11012
  %3 = bitcast i32* %2 to i8*, !dbg !11013
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11013
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11011, metadata !DIExpression()), !dbg !11014
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !11015

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11016
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !11019
  store volatile i32 0, i32* %6, align 4, !dbg !11020
  store volatile i32 806289408, i32* %6, align 4, !dbg !11021
  br label %7, !dbg !11022

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !11023
  %9 = and i32 %8, 128, !dbg !11024
  %10 = icmp eq i32 %9, 0, !dbg !11024
  br i1 %10, label %7, label %11, !dbg !11022, !llvm.loop !11025

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !11027
  br label %12, !dbg !11028

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !11029
  %14 = and i32 %13, 128, !dbg !11030
  %15 = icmp eq i32 %14, 0, !dbg !11030
  br i1 %15, label %16, label %12, !dbg !11028, !llvm.loop !11031

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !11033
  store volatile i32 0, i32* %2, align 4, !dbg !11034
  %17 = load volatile i32, i32* %2, align 4, !dbg !11036
  %18 = icmp ult i32 %17, 255, !dbg !11038
  br i1 %18, label %19, label %25, !dbg !11039

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !11040
  %21 = add i32 %20, 1, !dbg !11040
  store volatile i32 %21, i32* %2, align 4, !dbg !11040
  %22 = load volatile i32, i32* %2, align 4, !dbg !11036
  %23 = icmp ult i32 %22, 255, !dbg !11038
  br i1 %23, label %19, label %25, !dbg !11039, !llvm.loop !11041

24:                                               ; preds = %1
  br label %25, !dbg !11043

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !11012
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11046
  ret i32 %26, !dbg !11046
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !11047 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11048
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !11049
  %3 = load volatile i32, i32* %2, align 4, !dbg !11049
  %4 = or i32 %3, 1792, !dbg !11050
  store volatile i32 %4, i32* %2, align 4, !dbg !11051
  ret void, !dbg !11052
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !11053 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11054
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !11055
  %3 = load volatile i32, i32* %2, align 4, !dbg !11055
  %4 = and i32 %3, -1793, !dbg !11056
  store volatile i32 %4, i32* %2, align 4, !dbg !11057
  ret void, !dbg !11058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #10 section ".tcm_code" !dbg !11059 {
  ret i1 false, !dbg !11060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #10 section ".tcm_code" !dbg !11061 {
  ret i1 false, !dbg !11062
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !11063 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #20, !dbg !11064
  ret void, !dbg !11067
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !11068 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #20, !dbg !11069
  ret void, !dbg !11072
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !11073 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #20, !dbg !11074
  ret void, !dbg !11077
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !11078 {
  tail call void @peri_26m_dcxo() #20, !dbg !11079
  ret void, !dbg !11082
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !11083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11087, metadata !DIExpression()), !dbg !11088
  %2 = trunc i32 %0 to i8, !dbg !11089
  tail call void @hal_uart_put_char(i32 noundef 2, i8 noundef zeroext %2) #20, !dbg !11090
  ret i32 %0, !dbg !11091
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #19 !dbg !11092 {
  tail call fastcc void @SystemClock_Config() #21, !dbg !11093
  tail call void @SystemCoreClockUpdate() #20, !dbg !11094
  tail call fastcc void @prvSetupHardware() #21, !dbg !11095
  tail call void asm sideeffect "cpsie i", "~{memory}"() #22, !dbg !11096, !srcloc !11099
  tail call void asm sideeffect "cpsie f", "~{memory}"() #22, !dbg !11100, !srcloc !11103
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.157, i32 0, i32 0)) #20, !dbg !11104
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.158, i32 0, i32 0)) #20, !dbg !11105
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.157, i32 0, i32 0)) #20, !dbg !11106
  tail call fastcc void @wdt_feed_watchdog_example() #21, !dbg !11107
  br label %4, !dbg !11108

4:                                                ; preds = %4, %0
  br label %4, !dbg !11109, !llvm.loop !11112
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !11115 {
  %1 = tail call i32 @hal_clock_init() #20, !dbg !11116
  ret void, !dbg !11117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !11118 {
  tail call fastcc void @plain_log_uart_init() #21, !dbg !11119
  %1 = tail call i32 @hal_flash_init() #20, !dbg !11120
  %2 = tail call i32 @hal_nvic_init() #20, !dbg !11121
  ret void, !dbg !11122
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @wdt_feed_watchdog_example() unnamed_addr #0 !dbg !11123 {
  %1 = alloca %struct.hal_cache_region_config_t, align 4
  %2 = bitcast %struct.hal_cache_region_config_t* %1 to i8*, !dbg !11132
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !11132
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %1, metadata !11125, metadata !DIExpression()), !dbg !11133
  %3 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !11134
  store i32 0, i32* %3, align 4, !dbg !11135
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !11136
  store i32 4, i32* %4, align 4, !dbg !11137
  %5 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i32 0, i32 0)) #20, !dbg !11138
  %6 = call i32 @hal_wdt_init(%struct.hal_cache_region_config_t* noundef nonnull %1) #20, !dbg !11139
  call void @llvm.dbg.value(metadata i32 %6, metadata !11131, metadata !DIExpression()), !dbg !11140
  %7 = icmp eq i32 %6, 0, !dbg !11141
  br i1 %7, label %8, label %14, !dbg !11143

8:                                                ; preds = %0
  %9 = call i32 @hal_wdt_enable(i32 noundef -889275714) #20, !dbg !11144
  call void @llvm.dbg.value(metadata i32 %9, metadata !11131, metadata !DIExpression()), !dbg !11140
  %10 = icmp eq i32 %9, 0, !dbg !11145
  br i1 %10, label %11, label %14, !dbg !11147

11:                                               ; preds = %8
  %12 = call i32 @hal_gpt_delay_ms(i32 noundef 1000) #20, !dbg !11148
  %13 = call i32 @hal_wdt_feed(i32 noundef -559035650) #20, !dbg !11149
  br label %14, !dbg !11150

14:                                               ; preds = %8, %0, %11
  %15 = phi i8* [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i32 0, i32 0), %11 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i32 0, i32 0), %0 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i32 0, i32 0), %8 ]
  %16 = call i32 (i8*, ...) @printf(i8* noundef %15) #20, !dbg !11140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !11150
  ret void, !dbg !11150
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @plain_log_uart_init() unnamed_addr #0 !dbg !11151 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !11161
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #22, !dbg !11161
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !11153, metadata !DIExpression()), !dbg !11162
  %3 = tail call i32 @hal_gpio_init(i32 noundef 0) #20, !dbg !11163
  %4 = tail call i32 @hal_gpio_init(i32 noundef 1) #20, !dbg !11164
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #20, !dbg !11165
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #20, !dbg !11166
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !11167
  store i32 9, i32* %7, align 4, !dbg !11168
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !11169
  store i32 3, i32* %8, align 4, !dbg !11170
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !11171
  store i32 0, i32* %9, align 4, !dbg !11172
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !11173
  store i32 0, i32* %10, align 4, !dbg !11174
  %11 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #20, !dbg !11175
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #22, !dbg !11176
  ret void, !dbg !11176
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #10 !dbg !11177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11179, metadata !DIExpression()), !dbg !11180
  ret i32 0, !dbg !11181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #10 !dbg !11182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11232, metadata !DIExpression()), !dbg !11234
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !11233, metadata !DIExpression()), !dbg !11234
  ret i32 0, !dbg !11235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #10 !dbg !11236 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11238, metadata !DIExpression()), !dbg !11239
  ret i32 1, !dbg !11240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !11241 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11245, metadata !DIExpression()), !dbg !11248
  call void @llvm.dbg.value(metadata i32 %1, metadata !11246, metadata !DIExpression()), !dbg !11248
  call void @llvm.dbg.value(metadata i32 %2, metadata !11247, metadata !DIExpression()), !dbg !11248
  ret i32 0, !dbg !11249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !11250 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11254, metadata !DIExpression()), !dbg !11257
  call void @llvm.dbg.value(metadata i32 %1, metadata !11255, metadata !DIExpression()), !dbg !11257
  call void @llvm.dbg.value(metadata i32 %2, metadata !11256, metadata !DIExpression()), !dbg !11257
  ret i32 -1, !dbg !11258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #10 !dbg !11259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11263, metadata !DIExpression()), !dbg !11266
  call void @llvm.dbg.value(metadata i8* %1, metadata !11264, metadata !DIExpression()), !dbg !11266
  call void @llvm.dbg.value(metadata i32 %2, metadata !11265, metadata !DIExpression()), !dbg !11266
  ret i32 0, !dbg !11267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_getpid() local_unnamed_addr #10 !dbg !11268 {
  ret i32 1, !dbg !11269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !11270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11274, metadata !DIExpression()), !dbg !11276
  call void @llvm.dbg.value(metadata i32 %1, metadata !11275, metadata !DIExpression()), !dbg !11276
  ret i32 -1, !dbg !11277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #10 !dbg !11278 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11280, metadata !DIExpression()), !dbg !11281
  ret i32 -1, !dbg !11282
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2206 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !2404, metadata !DIExpression()), !dbg !11283
  call void @llvm.dbg.value(metadata i32 %1, metadata !2405, metadata !DIExpression()), !dbg !11283
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #22, !dbg !11284, !srcloc !11285
  call void @llvm.dbg.value(metadata i8* %3, metadata !2407, metadata !DIExpression()), !dbg !11283
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !11286
  %5 = icmp eq i8* %4, null, !dbg !11288
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !11289
  call void @llvm.dbg.value(metadata i8* %6, metadata !2406, metadata !DIExpression()), !dbg !11283
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !11290
  %8 = icmp ult i8* %3, %7, !dbg !11292
  %9 = xor i1 %8, true, !dbg !11293
  %10 = or i1 %5, %9, !dbg !11293
  br i1 %10, label %11, label %13, !dbg !11293

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !11294
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !11293
  br label %13, !dbg !11293

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !11294
  ret i8* %14, !dbg !11293
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !11295 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11297, metadata !DIExpression()), !dbg !11301
  call void @llvm.dbg.value(metadata i8* %1, metadata !11298, metadata !DIExpression()), !dbg !11301
  call void @llvm.dbg.value(metadata i32 %2, metadata !11299, metadata !DIExpression()), !dbg !11301
  call void @llvm.dbg.value(metadata i32 0, metadata !11300, metadata !DIExpression()), !dbg !11301
  %4 = icmp sgt i32 %2, 0, !dbg !11302
  br i1 %4, label %5, label %14, !dbg !11305

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !11300, metadata !DIExpression()), !dbg !11301
  call void @llvm.dbg.value(metadata i8* %7, metadata !11298, metadata !DIExpression()), !dbg !11301
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !11306
  call void @llvm.dbg.value(metadata i8* %8, metadata !11298, metadata !DIExpression()), !dbg !11301
  %9 = load i8, i8* %7, align 1, !dbg !11308
  %10 = zext i8 %9 to i32, !dbg !11308
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #20, !dbg !11309
  %12 = add nuw nsw i32 %6, 1, !dbg !11310
  call void @llvm.dbg.value(metadata i32 %12, metadata !11300, metadata !DIExpression()), !dbg !11301
  %13 = icmp eq i32 %12, %2, !dbg !11302
  br i1 %13, label %14, label %5, !dbg !11305, !llvm.loop !11311

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !11313
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #2 !dbg !11314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11316, metadata !DIExpression()), !dbg !11318
  %2 = add i32 %0, -1, !dbg !11319
  %3 = icmp ugt i32 %2, 16777215, !dbg !11321
  br i1 %3, label %8, label %4, !dbg !11322

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11323
  call void @llvm.dbg.value(metadata i32 %5, metadata !11317, metadata !DIExpression()), !dbg !11318
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11324
  %7 = and i32 %6, -4, !dbg !11324
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11324
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11325
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11326
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11327
  br label %8, !dbg !11328

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !11318
  ret i32 %9, !dbg !11329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #2 !dbg !11330 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !11331
  ret void, !dbg !11332
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #11 !dbg !11333 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !11334
  ret i32 %1, !dbg !11335
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #11 !dbg !11336 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !11339
  %2 = lshr i32 %1, 3, !dbg !11340
  %3 = and i32 %2, 15, !dbg !11340
  call void @llvm.dbg.value(metadata i32 %3, metadata !11338, metadata !DIExpression()), !dbg !11341
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !11342

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !11343

5:                                                ; preds = %0, %0
  br label %9, !dbg !11345

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !11346
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !11347
  br label %15, !dbg !11349

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !11346
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !11347
  %12 = and i32 %11, 1024, !dbg !11350
  %13 = icmp eq i32 %12, 0, !dbg !11350
  br i1 %13, label %15, label %14, !dbg !11349

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !11351
  br label %15, !dbg !11353

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !11354
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !11355 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !11356
  %2 = or i32 %1, 15728640, !dbg !11356
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !11356
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !11357
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11358
  %4 = or i32 %3, 458752, !dbg !11358
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11358
  ret void, !dbg !11359
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #2 !dbg !11360 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11361
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11362
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11363
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !11364
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !11365
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !11366
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11367
  ret void, !dbg !11368
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { argmemonly nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { nofree nosync nounwind willreturn }
attributes #19 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { nobuiltin nounwind optsize "no-builtins" }
attributes #21 = { nobuiltin optsize "no-builtins" }
attributes #22 = { nounwind }
attributes #23 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !2532, !94, !345, !628, !2558, !783, !868, !2562, !918, !2579, !1006, !1105, !1430, !2625, !1518, !1529, !1887, !1948, !2627, !2028, !2194, !2629, !2399, !2410, !2520}
!llvm.ident = !{!2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632, !2632}
!llvm.module.flags = !{!2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !2, file: !3, line: 51, type: !90, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !53, globals: !89, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!4 = !{!5, !17, !37, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 163, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!10 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!11 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!12 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!13 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!14 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!15 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!16 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 186, baseType: !18, size: 32, elements: !19)
!18 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36}
!20 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!21 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!22 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!23 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!24 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!25 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!26 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!27 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!28 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!29 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!30 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!31 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!32 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!33 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!34 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!35 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!36 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 176, baseType: !18, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!40 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!41 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!42 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!43 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 98, baseType: !18, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!46 = !{!47, !48, !49, !50, !51, !52}
!47 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!48 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!49 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!50 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!51 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!52 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!53 = !{!54, !88}
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 32)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !57)
!56 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!57 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !58)
!58 = !{!59, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !78, !79, !83, !87}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !57, file: !56, line: 261, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !62, line: 48, baseType: !63)
!62 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !64, line: 79, baseType: !18)
!64 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!65 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !57, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !57, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !57, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !57, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !57, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !57, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !57, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !57, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !57, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !57, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !76)
!76 = !{!77}
!77 = !DISubrange(count: 1)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !57, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !57, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 16372)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !57, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !85)
!85 = !{!86}
!86 = !DISubrange(count: 16)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !57, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!89 = !{!0}
!90 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !91)
!91 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!92 = !DIGlobalVariableExpression(var: !93, expr: !DIExpression())
!93 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !94, file: !95, line: 48, type: !341, isLocal: false, isDefinition: true)
!94 = distinct !DICompileUnit(language: DW_LANG_C99, file: !95, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !96, retainedTypes: !263, globals: !278, splitDebugInlining: false, nameTableKind: None)
!95 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!96 = !{!97, !157, !162, !168, !245, !254, !259}
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 1170, baseType: !18, size: 32, elements: !99)
!98 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!99 = !{!100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156}
!100 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!101 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!102 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!103 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!104 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!105 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!106 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!107 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!108 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!109 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!110 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!111 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!112 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!113 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!114 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!115 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!116 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!117 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!118 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!119 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!120 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!121 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!122 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!123 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!124 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!125 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!126 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!127 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!128 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!129 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!130 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!131 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!132 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!133 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!134 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!135 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!136 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!137 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!138 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!139 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!140 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!141 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!142 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!143 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!144 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!145 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!146 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!147 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!148 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!149 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!150 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!151 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!152 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!153 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!154 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!155 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!156 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 82, baseType: !18, size: 32, elements: !159)
!158 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!159 = !{!160, !161}
!160 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!161 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!162 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 75, baseType: !18, size: 32, elements: !163)
!163 = !{!164, !165, !166, !167}
!164 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!165 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!166 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!167 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !56, line: 44, baseType: !7, size: 32, elements: !169)
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244}
!170 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!171 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!172 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!173 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!174 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!175 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!176 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!177 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!178 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!179 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!180 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!181 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!182 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!183 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!184 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!185 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!186 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!187 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!188 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!189 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!190 = !DIEnumerator(name: "KP_IRQn", value: 10)
!191 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!192 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!193 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!194 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!195 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!196 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!197 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!198 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!199 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!200 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!201 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!202 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!203 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!204 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!205 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!206 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!207 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!208 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!209 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!210 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!211 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!212 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!213 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!214 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!215 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!216 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!217 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!218 = !DIEnumerator(name: "SF_IRQn", value: 38)
!219 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!220 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!221 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!222 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!223 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!224 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!225 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!226 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!227 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!228 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!229 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!230 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!231 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!232 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!233 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!234 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!235 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!236 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!237 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!238 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!239 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!240 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!241 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!242 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!243 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!244 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!245 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 846, baseType: !18, size: 32, elements: !246)
!246 = !{!247, !248, !249, !250, !251, !252, !253}
!247 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!248 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!249 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!250 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!251 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!252 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!253 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 380, baseType: !18, size: 32, elements: !256)
!255 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!256 = !{!257, !258}
!257 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!258 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 397, baseType: !18, size: 32, elements: !260)
!260 = !{!261, !262}
!261 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!262 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!263 = !{!61, !264, !88}
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !56, line: 1272, baseType: !266)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1262, size: 288, elements: !267)
!267 = !{!268, !269, !270, !271, !273, !274, !275, !276, !277}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !266, file: !56, line: 1263, baseType: !60, size: 32)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !266, file: !56, line: 1264, baseType: !60, size: 32, offset: 32)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !266, file: !56, line: 1265, baseType: !60, size: 32, offset: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !266, file: !56, line: 1266, baseType: !272, size: 32, offset: 96)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !266, file: !56, line: 1267, baseType: !60, size: 32, offset: 128)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !266, file: !56, line: 1268, baseType: !60, size: 32, offset: 160)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !266, file: !56, line: 1269, baseType: !60, size: 32, offset: 192)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !266, file: !56, line: 1270, baseType: !60, size: 32, offset: 224)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !266, file: !56, line: 1271, baseType: !60, size: 32, offset: 256)
!278 = !{!92, !279, !288, !294, !316, !339}
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !94, file: !95, line: 49, type: !281, isLocal: false, isDefinition: true)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !56, line: 1260, baseType: !283)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1256, size: 96, elements: !284)
!284 = !{!285, !286, !287}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !283, file: !56, line: 1257, baseType: !272, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !283, file: !56, line: 1258, baseType: !60, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !283, file: !56, line: 1259, baseType: !60, size: 32, offset: 64)
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "flag", scope: !290, file: !95, line: 88, type: !91, isLocal: true, isDefinition: true)
!290 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !95, file: !95, line: 86, type: !291, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!291 = !DISubroutineType(types: !292)
!292 = !{null}
!293 = !{}
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !94, file: !95, line: 51, type: !296, isLocal: false, isDefinition: true)
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 768, elements: !314)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !158, line: 116, baseType: !298)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 111, size: 128, elements: !299)
!299 = !{!300, !302, !312, !313}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !298, file: !158, line: 112, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !255, line: 400, baseType: !259)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !298, file: !158, line: 113, baseType: !303, size: 64, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !158, line: 109, baseType: !304)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 106, size: 64, elements: !305)
!305 = !{!306, !311}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !304, file: !158, line: 107, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !255, line: 371, baseType: !308)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DISubroutineType(types: !310)
!310 = !{null, !88}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !304, file: !158, line: 108, baseType: !88, size: 32, offset: 32)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !298, file: !158, line: 114, baseType: !91, size: 8, offset: 96)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !298, file: !158, line: 115, baseType: !91, size: 8, offset: 104)
!314 = !{!315}
!315 = !DISubrange(count: 6)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !94, file: !95, line: 52, type: !318, isLocal: false, isDefinition: true)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !158, line: 134, baseType: !319)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 125, size: 4256, elements: !320)
!320 = !{!321, !332, !333, !334, !335, !336, !337, !338}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !319, file: !158, line: 126, baseType: !322, size: 4096)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 4096, elements: !330)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !158, line: 123, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 118, size: 128, elements: !325)
!325 = !{!326, !327, !328, !329}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !324, file: !158, line: 119, baseType: !303, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !324, file: !158, line: 120, baseType: !61, size: 32, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !324, file: !158, line: 121, baseType: !91, size: 8, offset: 96)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !324, file: !158, line: 122, baseType: !91, size: 8, offset: 104)
!330 = !{!331}
!331 = !DISubrange(count: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !319, file: !158, line: 127, baseType: !61, size: 32, offset: 4096)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !319, file: !158, line: 128, baseType: !61, size: 32, offset: 4128)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !319, file: !158, line: 129, baseType: !61, size: 32, offset: 4160)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !319, file: !158, line: 130, baseType: !61, size: 32, offset: 4192)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !319, file: !158, line: 131, baseType: !91, size: 8, offset: 4224)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !319, file: !158, line: 132, baseType: !91, size: 8, offset: 4232)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !319, file: !158, line: 133, baseType: !91, size: 8, offset: 4240)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !94, file: !95, line: 53, type: !61, isLocal: false, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 192, elements: !314)
!342 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !345, file: !346, line: 64, type: !446, isLocal: false, isDefinition: true)
!345 = distinct !DICompileUnit(language: DW_LANG_C99, file: !346, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !347, retainedTypes: !441, globals: !445, splitDebugInlining: false, nameTableKind: None)
!346 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!347 = !{!348, !400, !407, !411, !417, !421, !430, !435}
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 339, baseType: !18, size: 32, elements: !349)
!349 = !{!350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399}
!350 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!351 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!352 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!353 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!354 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!355 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!356 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!357 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!358 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!359 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!360 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!361 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!362 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!363 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!364 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!365 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!366 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!367 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!368 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!369 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!370 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!371 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!372 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!373 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!374 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!375 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!376 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!377 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!378 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!379 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!380 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!381 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!382 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!383 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!384 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!385 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!386 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!387 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!388 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!389 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!390 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!391 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!392 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!393 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!394 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!395 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!396 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!397 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!398 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!399 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!400 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 224, baseType: !7, size: 32, elements: !402)
!401 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!402 = !{!403, !404, !405, !406}
!403 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!404 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!405 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!406 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!407 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 210, baseType: !18, size: 32, elements: !408)
!408 = !{!409, !410}
!409 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!410 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!411 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 233, baseType: !7, size: 32, elements: !412)
!412 = !{!413, !414, !415, !416}
!413 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!414 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!415 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!416 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!417 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 217, baseType: !18, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!420 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!421 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 415, baseType: !18, size: 32, elements: !422)
!422 = !{!423, !424, !425, !426, !427, !428, !429}
!423 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!424 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!425 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!426 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!427 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!428 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!429 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!430 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 427, baseType: !18, size: 32, elements: !431)
!431 = !{!432, !433, !434}
!432 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!433 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!434 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!435 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 242, baseType: !18, size: 32, elements: !436)
!436 = !{!437, !438, !439, !440}
!437 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!438 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!439 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!440 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!441 = !{!88, !442, !443, !444}
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !401, line: 213, baseType: !407)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !401, line: 220, baseType: !417)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !401, line: 247, baseType: !435)
!445 = !{!343}
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !56, line: 1554, baseType: !448)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1522, size: 29440, elements: !449)
!449 = !{!450, !467, !471, !480, !481, !490, !491, !500, !501, !511, !512, !521, !522, !531, !532, !541, !542, !551, !555, !564, !565, !574, !575, !584, !593, !594, !605, !609, !618, !619}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !448, file: !56, line: 1523, baseType: !451, size: 256)
!451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 256, elements: !465)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !56, line: 1400, baseType: !453)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1395, size: 128, elements: !454)
!454 = !{!455, !456, !457, !458}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !453, file: !56, line: 1396, baseType: !60, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !453, file: !56, line: 1397, baseType: !60, size: 32, offset: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !453, file: !56, line: 1398, baseType: !60, size: 32, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !453, file: !56, line: 1399, baseType: !459, size: 32, offset: 96)
!459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 32, elements: !463)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !62, line: 24, baseType: !461)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !64, line: 43, baseType: !462)
!462 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!463 = !{!464}
!464 = !DISubrange(count: 4)
!465 = !{!466}
!466 = !DISubrange(count: 2)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !448, file: !56, line: 1524, baseType: !468, size: 1792, offset: 256)
!468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1792, elements: !469)
!469 = !{!470}
!470 = !DISubrange(count: 224)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !448, file: !56, line: 1525, baseType: !472, size: 256, offset: 2048)
!472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 256, elements: !465)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !56, line: 1409, baseType: !474)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1404, size: 128, elements: !475)
!475 = !{!476, !477, !478, !479}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !474, file: !56, line: 1405, baseType: !60, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !474, file: !56, line: 1406, baseType: !60, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !474, file: !56, line: 1407, baseType: !60, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !474, file: !56, line: 1408, baseType: !459, size: 32, offset: 96)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !448, file: !56, line: 1526, baseType: !468, size: 1792, offset: 2304)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !448, file: !56, line: 1527, baseType: !482, size: 256, offset: 4096)
!482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 256, elements: !465)
!483 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !56, line: 1417, baseType: !484)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1412, size: 128, elements: !485)
!485 = !{!486, !487, !488, !489}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !484, file: !56, line: 1413, baseType: !60, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !484, file: !56, line: 1414, baseType: !60, size: 32, offset: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !484, file: !56, line: 1415, baseType: !60, size: 32, offset: 64)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !484, file: !56, line: 1416, baseType: !459, size: 32, offset: 96)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !448, file: !56, line: 1528, baseType: !468, size: 1792, offset: 4352)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !448, file: !56, line: 1529, baseType: !492, size: 256, offset: 6144)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 256, elements: !465)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !56, line: 1426, baseType: !494)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1421, size: 128, elements: !495)
!495 = !{!496, !497, !498, !499}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !494, file: !56, line: 1422, baseType: !60, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !494, file: !56, line: 1423, baseType: !60, size: 32, offset: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !494, file: !56, line: 1424, baseType: !60, size: 32, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !494, file: !56, line: 1425, baseType: !459, size: 32, offset: 96)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !448, file: !56, line: 1530, baseType: !468, size: 1792, offset: 6400)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !448, file: !56, line: 1531, baseType: !502, size: 256, offset: 8192)
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !503, size: 256, elements: !465)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !56, line: 1432, baseType: !504)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1429, size: 128, elements: !505)
!505 = !{!506, !507}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !504, file: !56, line: 1430, baseType: !60, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !504, file: !56, line: 1431, baseType: !508, size: 96, offset: 32)
!508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 96, elements: !509)
!509 = !{!510}
!510 = !DISubrange(count: 12)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !448, file: !56, line: 1532, baseType: !468, size: 1792, offset: 8448)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !448, file: !56, line: 1533, baseType: !513, size: 256, offset: 10240)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 256, elements: !465)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !56, line: 1440, baseType: !515)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1435, size: 128, elements: !516)
!516 = !{!517, !518, !519, !520}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !515, file: !56, line: 1436, baseType: !60, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !515, file: !56, line: 1437, baseType: !60, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !515, file: !56, line: 1438, baseType: !60, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !515, file: !56, line: 1439, baseType: !459, size: 32, offset: 96)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !448, file: !56, line: 1534, baseType: !468, size: 1792, offset: 10496)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !448, file: !56, line: 1535, baseType: !523, size: 256, offset: 12288)
!523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !524, size: 256, elements: !465)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !56, line: 1448, baseType: !525)
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1443, size: 128, elements: !526)
!526 = !{!527, !528, !529, !530}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !525, file: !56, line: 1444, baseType: !60, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !525, file: !56, line: 1445, baseType: !60, size: 32, offset: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !525, file: !56, line: 1446, baseType: !60, size: 32, offset: 64)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !525, file: !56, line: 1447, baseType: !459, size: 32, offset: 96)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !448, file: !56, line: 1536, baseType: !468, size: 1792, offset: 12544)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !448, file: !56, line: 1537, baseType: !533, size: 256, offset: 14336)
!533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !534, size: 256, elements: !465)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !56, line: 1455, baseType: !535)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1450, size: 128, elements: !536)
!536 = !{!537, !538, !539, !540}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !535, file: !56, line: 1451, baseType: !60, size: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !535, file: !56, line: 1452, baseType: !60, size: 32, offset: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !535, file: !56, line: 1453, baseType: !60, size: 32, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !535, file: !56, line: 1454, baseType: !459, size: 32, offset: 96)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !448, file: !56, line: 1538, baseType: !468, size: 1792, offset: 14592)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !448, file: !56, line: 1539, baseType: !543, size: 512, offset: 16384)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !544, size: 512, elements: !463)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !56, line: 1463, baseType: !545)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1458, size: 128, elements: !546)
!546 = !{!547, !548, !549, !550}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !545, file: !56, line: 1459, baseType: !60, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !545, file: !56, line: 1460, baseType: !60, size: 32, offset: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !545, file: !56, line: 1461, baseType: !60, size: 32, offset: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !545, file: !56, line: 1462, baseType: !459, size: 32, offset: 96)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !448, file: !56, line: 1540, baseType: !552, size: 1536, offset: 16896)
!552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1536, elements: !553)
!553 = !{!554}
!554 = !DISubrange(count: 192)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !448, file: !56, line: 1541, baseType: !556, size: 256, offset: 18432)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !557, size: 256, elements: !465)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !56, line: 1471, baseType: !558)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1466, size: 128, elements: !559)
!559 = !{!560, !561, !562, !563}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !558, file: !56, line: 1467, baseType: !60, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !558, file: !56, line: 1468, baseType: !60, size: 32, offset: 32)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !558, file: !56, line: 1469, baseType: !60, size: 32, offset: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !558, file: !56, line: 1470, baseType: !459, size: 32, offset: 96)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !448, file: !56, line: 1542, baseType: !468, size: 1792, offset: 18688)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !448, file: !56, line: 1543, baseType: !566, size: 256, offset: 20480)
!566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !567, size: 256, elements: !465)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !56, line: 1480, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1475, size: 128, elements: !569)
!569 = !{!570, !571, !572, !573}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !568, file: !56, line: 1476, baseType: !60, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !568, file: !56, line: 1477, baseType: !60, size: 32, offset: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !568, file: !56, line: 1478, baseType: !60, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !568, file: !56, line: 1479, baseType: !459, size: 32, offset: 96)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !448, file: !56, line: 1544, baseType: !468, size: 1792, offset: 20736)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !448, file: !56, line: 1545, baseType: !576, size: 256, offset: 22528)
!576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 256, elements: !465)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !56, line: 1489, baseType: !578)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1484, size: 128, elements: !579)
!579 = !{!580, !581, !582, !583}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !578, file: !56, line: 1485, baseType: !60, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !578, file: !56, line: 1486, baseType: !60, size: 32, offset: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !578, file: !56, line: 1487, baseType: !60, size: 32, offset: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !578, file: !56, line: 1488, baseType: !459, size: 32, offset: 96)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !448, file: !56, line: 1546, baseType: !585, size: 256, offset: 22784)
!585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 256, elements: !465)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !56, line: 1497, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1492, size: 128, elements: !588)
!588 = !{!589, !590, !591, !592}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !587, file: !56, line: 1493, baseType: !60, size: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !587, file: !56, line: 1494, baseType: !60, size: 32, offset: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !587, file: !56, line: 1495, baseType: !60, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !587, file: !56, line: 1496, baseType: !459, size: 32, offset: 96)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !448, file: !56, line: 1547, baseType: !552, size: 1536, offset: 23040)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !448, file: !56, line: 1548, baseType: !595, size: 896, offset: 24576)
!595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !596, size: 896, elements: !603)
!596 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !56, line: 1505, baseType: !597)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1500, size: 128, elements: !598)
!598 = !{!599, !600, !601, !602}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !597, file: !56, line: 1501, baseType: !60, size: 32)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !597, file: !56, line: 1502, baseType: !60, size: 32, offset: 32)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !597, file: !56, line: 1503, baseType: !60, size: 32, offset: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !597, file: !56, line: 1504, baseType: !459, size: 32, offset: 96)
!603 = !{!604}
!604 = !DISubrange(count: 7)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !448, file: !56, line: 1549, baseType: !606, size: 1152, offset: 25472)
!606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1152, elements: !607)
!607 = !{!608}
!608 = !DISubrange(count: 144)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !448, file: !56, line: 1550, baseType: !610, size: 512, offset: 26624)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 512, elements: !463)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !56, line: 1513, baseType: !612)
!612 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1508, size: 128, elements: !613)
!613 = !{!614, !615, !616, !617}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !612, file: !56, line: 1509, baseType: !60, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !612, file: !56, line: 1510, baseType: !60, size: 32, offset: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !612, file: !56, line: 1511, baseType: !60, size: 32, offset: 64)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !612, file: !56, line: 1512, baseType: !459, size: 32, offset: 96)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !448, file: !56, line: 1551, baseType: !552, size: 1536, offset: 27136)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !448, file: !56, line: 1552, baseType: !620, size: 768, offset: 28672)
!620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !621, size: 768, elements: !314)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !56, line: 1519, baseType: !622)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1516, size: 128, elements: !623)
!623 = !{!624, !625}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !622, file: !56, line: 1517, baseType: !60, size: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !622, file: !56, line: 1518, baseType: !508, size: 96, offset: 32)
!626 = !DIGlobalVariableExpression(var: !627, expr: !DIExpression())
!627 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !628, file: !629, line: 101, type: !777, isLocal: true, isDefinition: true)
!628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !629, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !630, retainedTypes: !727, globals: !736, splitDebugInlining: false, nameTableKind: None)
!629 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!630 = !{!631, !638, !653, !659, !665, !670, !677, !693, !699, !703, !708, !715, !723}
!631 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 180, baseType: !18, size: 32, elements: !632)
!632 = !{!633, !634, !635, !636, !637}
!633 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!634 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!635 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!636 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!637 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!638 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 189, baseType: !18, size: 32, elements: !640)
!639 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!640 = !{!641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652}
!641 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!642 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!643 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!644 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!645 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!646 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!647 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!648 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!649 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!650 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!651 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!652 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!653 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 355, baseType: !7, size: 32, elements: !655)
!654 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!655 = !{!656, !657, !658}
!656 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!657 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!658 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!659 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 206, baseType: !7, size: 32, elements: !660)
!660 = !{!661, !662, !663, !664}
!661 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!662 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!663 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!664 = !DIEnumerator(name: "VDMA_OK", value: 0)
!665 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !629, line: 65, baseType: !18, size: 32, elements: !666)
!666 = !{!667, !668, !669}
!667 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!668 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!669 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!670 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 345, baseType: !7, size: 32, elements: !671)
!671 = !{!672, !673, !674, !675, !676}
!672 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!673 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!674 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!675 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!676 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!677 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 302, baseType: !18, size: 32, elements: !678)
!678 = !{!679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692}
!679 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!680 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!681 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!682 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!683 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!684 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!685 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!686 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!687 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!688 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!689 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!690 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!691 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!692 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!693 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 321, baseType: !18, size: 32, elements: !694)
!694 = !{!695, !696, !697, !698}
!695 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!696 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!697 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!698 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!699 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 330, baseType: !18, size: 32, elements: !700)
!700 = !{!701, !702}
!701 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!702 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!703 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 337, baseType: !18, size: 32, elements: !704)
!704 = !{!705, !706, !707}
!705 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!706 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!707 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!708 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !709, line: 101, baseType: !7, size: 32, elements: !710)
!709 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!710 = !{!711, !712, !713, !714}
!711 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!712 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!713 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!714 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!715 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !716, line: 152, baseType: !7, size: 32, elements: !717)
!716 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!717 = !{!718, !719, !720, !721, !722}
!718 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!719 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!720 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!721 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!722 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!723 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 222, baseType: !7, size: 32, elements: !724)
!724 = !{!725, !726}
!725 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!726 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!727 = !{!88, !61, !728}
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !730, line: 96, baseType: !731)
!730 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !730, line: 93, size: 64, elements: !732)
!732 = !{!733, !734}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !731, file: !730, line: 94, baseType: !91, size: 8)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !731, file: !730, line: 95, baseType: !735, size: 32, offset: 32)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !98, line: 186, baseType: !631)
!736 = !{!626, !737, !750, !755, !769, !775}
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !628, file: !629, line: 102, type: !739, isLocal: true, isDefinition: true)
!739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !740, size: 256, elements: !463)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !629, line: 74, baseType: !741)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !629, line: 71, size: 64, elements: !742)
!742 = !{!743, !749}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !741, file: !629, line: 72, baseType: !744, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !654, line: 410, baseType: !745)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32)
!746 = !DISubroutineType(types: !747)
!747 = !{null, !748, !88}
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !654, line: 359, baseType: !653)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !741, file: !629, line: 73, baseType: !88, size: 32, offset: 32)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !628, file: !629, line: 103, type: !752, isLocal: true, isDefinition: true)
!752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !729, size: 512, elements: !753)
!753 = !{!754}
!754 = !DISubrange(count: 8)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !628, file: !629, line: 104, type: !757, isLocal: true, isDefinition: true)
!757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !758, size: 896, elements: !463)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !654, line: 390, baseType: !759)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 382, size: 224, elements: !760)
!760 = !{!761, !763, !764, !765, !766, !767, !768}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !759, file: !654, line: 383, baseType: !762, size: 32)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !759, file: !654, line: 384, baseType: !61, size: 32, offset: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !759, file: !654, line: 385, baseType: !61, size: 32, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !759, file: !654, line: 386, baseType: !762, size: 32, offset: 96)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !759, file: !654, line: 387, baseType: !61, size: 32, offset: 128)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !759, file: !654, line: 388, baseType: !61, size: 32, offset: 160)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !759, file: !654, line: 389, baseType: !61, size: 32, offset: 192)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !628, file: !629, line: 105, type: !771, isLocal: true, isDefinition: true)
!771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !772, size: 416, elements: !773)
!772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !61)
!773 = !{!774}
!774 = !DISubrange(count: 13)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !628, file: !629, line: 90, type: !91, isLocal: true, isDefinition: true)
!777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !778, size: 128, elements: !463)
!778 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !779)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !629, line: 69, baseType: !665)
!780 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !783, file: !784, line: 53, type: !864, isLocal: false, isDefinition: true)
!783 = distinct !DICompileUnit(language: DW_LANG_C99, file: !784, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !785, retainedTypes: !796, globals: !852, splitDebugInlining: false, nameTableKind: None)
!784 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!785 = !{!97, !168, !638, !631, !786}
!786 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !730, line: 46, baseType: !18, size: 32, elements: !787)
!787 = !{!788, !789, !790, !791, !792, !793, !794, !795}
!788 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!789 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!790 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!791 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!792 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!793 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!794 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!795 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!796 = !{!797}
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !799)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !800)
!800 = !{!801, !807, !812, !818, !819, !824, !829, !830, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !799, file: !56, line: 547, baseType: !802, size: 32)
!802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 543, size: 32, elements: !803)
!803 = !{!804, !805, !806}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !802, file: !56, line: 544, baseType: !272, size: 32)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !802, file: !56, line: 545, baseType: !60, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !802, file: !56, line: 546, baseType: !60, size: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !799, file: !56, line: 551, baseType: !808, size: 32, offset: 32)
!808 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 548, size: 32, elements: !809)
!809 = !{!810, !811}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !808, file: !56, line: 549, baseType: !60, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !808, file: !56, line: 550, baseType: !60, size: 32)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !799, file: !56, line: 556, baseType: !813, size: 32, offset: 64)
!813 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 552, size: 32, elements: !814)
!814 = !{!815, !816, !817}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !813, file: !56, line: 553, baseType: !272, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !813, file: !56, line: 554, baseType: !60, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !813, file: !56, line: 555, baseType: !60, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !799, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !799, file: !56, line: 561, baseType: !820, size: 32, offset: 128)
!820 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 558, size: 32, elements: !821)
!821 = !{!822, !823}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !820, file: !56, line: 559, baseType: !60, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !820, file: !56, line: 560, baseType: !60, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !799, file: !56, line: 565, baseType: !825, size: 32, offset: 160)
!825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 562, size: 32, elements: !826)
!826 = !{!827, !828}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !825, file: !56, line: 563, baseType: !272, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !825, file: !56, line: 564, baseType: !60, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !799, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !799, file: !56, line: 570, baseType: !831, size: 32, offset: 224)
!831 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 567, size: 32, elements: !832)
!832 = !{!833, !834}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !831, file: !56, line: 568, baseType: !60, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !831, file: !56, line: 569, baseType: !60, size: 32)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !799, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !799, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !799, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !799, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !799, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !799, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !799, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !799, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !799, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !799, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !799, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !799, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !799, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !799, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !799, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !799, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !799, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!852 = !{!781, !853, !858}
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !783, file: !784, line: 54, type: !855, isLocal: false, isDefinition: true)
!855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !856, size: 128, elements: !463)
!856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !98, line: 1237, baseType: !97)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !783, file: !784, line: 55, type: !860, isLocal: false, isDefinition: true)
!860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !861, size: 128, elements: !463)
!861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !862)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !56, line: 125, baseType: !863)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !56, line: 123, baseType: !168)
!864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !865, size: 128, elements: !463)
!865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !797)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "s_hal_wdt_callback", scope: !868, file: !869, line: 44, type: !907, isLocal: true, isDefinition: true)
!868 = distinct !DICompileUnit(language: DW_LANG_C99, file: !869, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !870, retainedTypes: !886, globals: !906, splitDebugInlining: false, nameTableKind: None)
!869 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_wdt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!870 = !{!871, !877, !168, !881}
!871 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 194, baseType: !7, size: 32, elements: !873)
!872 = !DIFile(filename: "../../../../../driver/chip/inc/hal_wdt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!873 = !{!874, !875, !876}
!874 = !DIEnumerator(name: "HAL_WDT_STATUS_INVALID_PARAMETER", value: -2)
!875 = !DIEnumerator(name: "HAL_WDT_STATUS_INVALID_MAGIC", value: -1)
!876 = !DIEnumerator(name: "HAL_WDT_STATUS_OK", value: 0)
!877 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 210, baseType: !18, size: 32, elements: !878)
!878 = !{!879, !880}
!879 = !DIEnumerator(name: "HAL_WDT_MODE_RESET", value: 0)
!880 = !DIEnumerator(name: "HAL_WDT_MODE_INTERRUPT", value: 1)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 202, baseType: !18, size: 32, elements: !882)
!882 = !{!883, !884, !885}
!883 = !DIEnumerator(name: "HAL_WDT_TIMEOUT_RESET", value: 0)
!884 = !DIEnumerator(name: "HAL_WDT_SOFTWARE_RESET", value: 1)
!885 = !DIEnumerator(name: "HAL_WDT_NONE_RESET", value: 2)
!886 = !{!88, !887, !891, !904, !905}
!887 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !716, line: 175, baseType: !888)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!889 = !DISubroutineType(types: !890)
!890 = !{null, !862}
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 32)
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "WDT_REGISTER_T", file: !56, line: 1898, baseType: !893)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1888, size: 288, elements: !894)
!894 = !{!895, !896, !897, !898, !899, !900, !901, !902, !903}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_MODE", scope: !893, file: !56, line: 1889, baseType: !60, size: 32)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_LENGTH", scope: !893, file: !56, line: 1890, baseType: !60, size: 32, offset: 32)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_RESTART", scope: !893, file: !56, line: 1891, baseType: !60, size: 32, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_STA", scope: !893, file: !56, line: 1892, baseType: !60, size: 32, offset: 96)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !893, file: !56, line: 1893, baseType: !60, size: 32, offset: 128)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !893, file: !56, line: 1894, baseType: !60, size: 32, offset: 160)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_INTERVAL", scope: !893, file: !56, line: 1895, baseType: !60, size: 32, offset: 192)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_SWRST", scope: !893, file: !56, line: 1896, baseType: !60, size: 32, offset: 224)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_CON0", scope: !893, file: !56, line: 1897, baseType: !60, size: 32, offset: 256)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_wdt_reset_status_t", file: !872, line: 206, baseType: !881)
!905 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_wdt_mode_t", file: !872, line: 213, baseType: !877)
!906 = !{!866}
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_wdt_callback_t", file: !872, line: 246, baseType: !908)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 32)
!909 = !DISubroutineType(types: !910)
!910 = !{null, !904}
!911 = !DIGlobalVariableExpression(var: !912, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!912 = distinct !DIGlobalVariable(name: "priority_set", scope: !913, file: !914, line: 128, type: !61, isLocal: true, isDefinition: true)
!913 = distinct !DISubprogram(name: "hal_nvic_init", scope: !914, file: !914, line: 126, type: !915, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !1002)
!914 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!915 = !DISubroutineType(types: !916)
!916 = !{!917}
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !716, line: 158, baseType: !715)
!918 = distinct !DICompileUnit(language: DW_LANG_C99, file: !914, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !919, retainedTypes: !920, globals: !987, splitDebugInlining: false, nameTableKind: None)
!919 = !{!715, !168}
!920 = !{!862, !921, !61, !955, !985}
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !923, line: 418, baseType: !924)
!923 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !923, line: 395, size: 1120, elements: !925)
!925 = !{!926, !927, !928, !929, !930, !931, !932, !935, !936, !937, !938, !939, !940, !941, !942, !944, !945, !946, !948, !952, !954}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !924, file: !923, line: 397, baseType: !272, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !924, file: !923, line: 398, baseType: !60, size: 32, offset: 32)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !924, file: !923, line: 399, baseType: !60, size: 32, offset: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !924, file: !923, line: 400, baseType: !60, size: 32, offset: 96)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !924, file: !923, line: 401, baseType: !60, size: 32, offset: 128)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !924, file: !923, line: 402, baseType: !60, size: 32, offset: 160)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !924, file: !923, line: 403, baseType: !933, size: 96, offset: 192)
!933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 96, elements: !509)
!934 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !460)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !924, file: !923, line: 404, baseType: !60, size: 32, offset: 288)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !924, file: !923, line: 405, baseType: !60, size: 32, offset: 320)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !924, file: !923, line: 406, baseType: !60, size: 32, offset: 352)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !924, file: !923, line: 407, baseType: !60, size: 32, offset: 384)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !924, file: !923, line: 408, baseType: !60, size: 32, offset: 416)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !924, file: !923, line: 409, baseType: !60, size: 32, offset: 448)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !924, file: !923, line: 410, baseType: !60, size: 32, offset: 480)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !924, file: !923, line: 411, baseType: !943, size: 64, offset: 512)
!943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 64, elements: !465)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !924, file: !923, line: 412, baseType: !272, size: 32, offset: 576)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !924, file: !923, line: 413, baseType: !272, size: 32, offset: 608)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !924, file: !923, line: 414, baseType: !947, size: 128, offset: 640)
!947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 128, elements: !463)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !924, file: !923, line: 415, baseType: !949, size: 160, offset: 768)
!949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 160, elements: !950)
!950 = !{!951}
!951 = !DISubrange(count: 5)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !924, file: !923, line: 416, baseType: !953, size: 160, offset: 928)
!953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !950)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !924, file: !923, line: 417, baseType: !60, size: 32, offset: 1088)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !923, line: 378, baseType: !957)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !923, line: 363, size: 28704, elements: !958)
!958 = !{!959, !961, !965, !966, !967, !968, !969, !970, !971, !972, !976, !980, !984}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !957, file: !923, line: 365, baseType: !960, size: 256)
!960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !753)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !957, file: !923, line: 366, baseType: !962, size: 768, offset: 256)
!962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !963)
!963 = !{!964}
!964 = !DISubrange(count: 24)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !957, file: !923, line: 367, baseType: !960, size: 256, offset: 1024)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !957, file: !923, line: 368, baseType: !962, size: 768, offset: 1280)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !957, file: !923, line: 369, baseType: !960, size: 256, offset: 2048)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !957, file: !923, line: 370, baseType: !962, size: 768, offset: 2304)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !957, file: !923, line: 371, baseType: !960, size: 256, offset: 3072)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !957, file: !923, line: 372, baseType: !962, size: 768, offset: 3328)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !957, file: !923, line: 373, baseType: !960, size: 256, offset: 4096)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !957, file: !923, line: 374, baseType: !973, size: 1792, offset: 4352)
!973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !974)
!974 = !{!975}
!975 = !DISubrange(count: 56)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !957, file: !923, line: 375, baseType: !977, size: 1920, offset: 6144)
!977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 1920, elements: !978)
!978 = !{!979}
!979 = !DISubrange(count: 240)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !957, file: !923, line: 376, baseType: !981, size: 20608, offset: 8064)
!981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !982)
!982 = !{!983}
!983 = !DISubrange(count: 644)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !957, file: !923, line: 377, baseType: !60, size: 32, offset: 28672)
!985 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !62, line: 44, baseType: !986)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !64, line: 77, baseType: !7)
!987 = !{!988, !989, !999}
!988 = !DIGlobalVariableExpression(var: !912, expr: !DIExpression())
!989 = !DIGlobalVariableExpression(var: !990, expr: !DIExpression())
!990 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !918, file: !914, line: 119, type: !991, isLocal: false, isDefinition: true)
!991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 4096, elements: !997)
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !914, line: 50, baseType: !993)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !914, line: 47, size: 64, elements: !994)
!994 = !{!995, !996}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !993, file: !914, line: 48, baseType: !888, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !993, file: !914, line: 49, baseType: !61, size: 32, offset: 32)
!997 = !{!998}
!998 = !DISubrange(count: 64)
!999 = !DIGlobalVariableExpression(var: !1000, expr: !DIExpression())
!1000 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !918, file: !914, line: 52, type: !1001, isLocal: true, isDefinition: true)
!1001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !772, size: 2048, elements: !997)
!1002 = !{!1003}
!1003 = !DILocalVariable(name: "i", scope: !913, file: !914, line: 129, type: !61)
!1004 = !DIGlobalVariableExpression(var: !1005, expr: !DIExpression())
!1005 = distinct !DIGlobalVariable(name: "DelayResume", scope: !1006, file: !1007, line: 55, type: !91, isLocal: false, isDefinition: true)
!1006 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1007, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1008, retainedTypes: !1043, globals: !1082, splitDebugInlining: false, nameTableKind: None)
!1007 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1008 = !{!1009, !1017, !1022}
!1009 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !1010, line: 51, baseType: !18, size: 32, elements: !1011)
!1010 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1011 = !{!1012, !1013, !1014, !1015, !1016}
!1012 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!1013 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!1014 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!1015 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!1016 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!1017 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !1010, line: 62, baseType: !18, size: 32, elements: !1018)
!1018 = !{!1019, !1020, !1021}
!1019 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!1020 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!1021 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!1022 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1023, line: 228, baseType: !18, size: 32, elements: !1024)
!1023 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1024 = !{!1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042}
!1025 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!1026 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!1027 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!1028 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!1029 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!1030 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!1031 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!1032 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!1033 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!1034 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!1035 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!1036 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!1037 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!1038 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!1039 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!1040 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!1041 = !DIEnumerator(name: "NR_MUXS", value: 16)
!1042 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!1043 = !{!1044, !1045, !1067, !762, !61, !18, !1073, !1075, !1079, !1081}
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1046 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1047)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1048)
!1048 = !{!1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1047, file: !56, line: 2759, baseType: !60, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1047, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1047, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1047, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1047, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1047, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1047, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1047, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1047, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1047, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1047, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1047, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1047, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1047, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1047, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1047, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1047, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1047, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1069)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1070)
!1070 = !{!1071, !1072}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1069, file: !56, line: 2799, baseType: !60, size: 32)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1069, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !18)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !62, line: 36, baseType: !1077)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !64, line: 57, baseType: !1078)
!1078 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !462)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!1082 = !{!1004, !1083, !1085, !1087, !1089, !1091, !1093, !1095, !1097, !1099, !1101}
!1083 = !DIGlobalVariableExpression(var: !1084, expr: !DIExpression())
!1084 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !1006, file: !1007, line: 604, type: !460, isLocal: false, isDefinition: true)
!1085 = !DIGlobalVariableExpression(var: !1086, expr: !DIExpression())
!1086 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !1006, file: !1007, line: 605, type: !61, isLocal: false, isDefinition: true)
!1087 = !DIGlobalVariableExpression(var: !1088, expr: !DIExpression())
!1088 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !1006, file: !1007, line: 606, type: !61, isLocal: false, isDefinition: true)
!1089 = !DIGlobalVariableExpression(var: !1090, expr: !DIExpression())
!1090 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !1006, file: !1007, line: 607, type: !61, isLocal: false, isDefinition: true)
!1091 = !DIGlobalVariableExpression(var: !1092, expr: !DIExpression())
!1092 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !1006, file: !1007, line: 608, type: !61, isLocal: false, isDefinition: true)
!1093 = !DIGlobalVariableExpression(var: !1094, expr: !DIExpression())
!1094 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !1006, file: !1007, line: 609, type: !61, isLocal: false, isDefinition: true)
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !1006, file: !1007, line: 610, type: !61, isLocal: false, isDefinition: true)
!1097 = !DIGlobalVariableExpression(var: !1098, expr: !DIExpression())
!1098 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !1006, file: !1007, line: 611, type: !61, isLocal: false, isDefinition: true)
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !1006, file: !1007, line: 665, type: !61, isLocal: false, isDefinition: true)
!1101 = !DIGlobalVariableExpression(var: !1102, expr: !DIExpression())
!1102 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !1006, file: !1007, line: 666, type: !61, isLocal: false, isDefinition: true)
!1103 = !DIGlobalVariableExpression(var: !1104, expr: !DIExpression())
!1104 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !1105, file: !1106, line: 334, type: !91, isLocal: false, isDefinition: true)
!1105 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1106, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1107, retainedTypes: !1275, globals: !1415, splitDebugInlining: false, nameTableKind: None)
!1106 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1107 = !{!1108, !1199, !1205, !1212, !1224, !1235, !1244, !1253, !1257, !1261}
!1108 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1109, line: 58, baseType: !7, size: 32, elements: !1110)
!1109 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1110 = !{!1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198}
!1111 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!1112 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!1113 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!1114 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!1115 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!1116 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!1117 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!1118 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!1119 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!1120 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!1121 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!1122 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!1123 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!1124 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!1125 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!1126 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!1127 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!1128 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!1129 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!1130 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!1131 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!1132 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!1133 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!1134 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!1135 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!1136 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!1137 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!1138 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!1139 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!1140 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!1141 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!1142 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!1143 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!1144 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!1145 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!1146 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!1147 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!1148 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!1149 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!1150 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!1151 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!1152 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!1153 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!1154 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!1155 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!1156 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!1157 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!1158 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!1159 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!1160 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!1161 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!1162 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!1163 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!1164 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!1165 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!1166 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!1167 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!1168 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!1169 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!1170 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!1171 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!1172 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!1173 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!1174 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!1175 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!1176 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!1177 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!1178 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!1179 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!1180 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!1181 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!1182 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!1183 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!1184 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!1185 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!1186 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!1187 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!1188 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!1189 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!1190 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!1191 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!1192 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!1193 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!1194 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!1195 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!1196 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!1197 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!1198 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!1199 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1200, line: 81, baseType: !18, size: 32, elements: !1201)
!1200 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1201 = !{!1202, !1203, !1204}
!1202 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!1203 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!1204 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!1205 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1106, line: 298, baseType: !18, size: 32, elements: !1206)
!1206 = !{!1207, !1208, !1209, !1210, !1211}
!1207 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!1208 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!1209 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!1210 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!1211 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!1212 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1213, line: 51, baseType: !18, size: 32, elements: !1214)
!1213 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1214 = !{!1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223}
!1215 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!1216 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!1217 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!1218 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!1219 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!1220 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!1221 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!1222 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!1223 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!1224 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1225, line: 110, baseType: !7, size: 32, elements: !1226)
!1225 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1226 = !{!1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234}
!1227 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1228 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1229 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1230 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1231 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1232 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1233 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1234 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1235 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1213, line: 73, baseType: !18, size: 32, elements: !1236)
!1236 = !{!1237, !1238, !1239, !1240, !1241, !1242, !1243}
!1237 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!1238 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!1239 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!1240 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!1241 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!1242 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!1243 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!1244 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1213, line: 83, baseType: !18, size: 32, elements: !1245)
!1245 = !{!1246, !1247, !1248, !1249, !1250, !1251, !1252}
!1246 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!1247 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!1248 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!1249 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!1250 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!1251 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!1252 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!1253 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1213, line: 98, baseType: !18, size: 32, elements: !1254)
!1254 = !{!1255, !1256}
!1255 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!1256 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!1257 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1200, line: 76, baseType: !18, size: 32, elements: !1258)
!1258 = !{!1259, !1260}
!1259 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!1260 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!1261 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1200, line: 208, baseType: !18, size: 32, elements: !1262)
!1262 = !{!1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274}
!1263 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!1264 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!1265 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!1266 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!1267 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!1268 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!1269 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!1270 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!1271 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!1272 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!1273 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!1274 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!1275 = !{!61, !1044, !1075, !762, !1276, !1386, !1408, !88, !1414, !462}
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1200, line: 193, baseType: !1278)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1200, line: 134, size: 1824, elements: !1279)
!1279 = !{!1280, !1281, !1282, !1289, !1295, !1299, !1307, !1308, !1315, !1316, !1317, !1318, !1326, !1329, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1380, !1381, !1385}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1278, file: !1200, line: 136, baseType: !61, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1278, file: !1200, line: 137, baseType: !762, size: 32, offset: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1278, file: !1200, line: 138, baseType: !1283, size: 32, offset: 64)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1284, line: 56, baseType: !1285)
!1284 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1284, line: 54, size: 8, elements: !1287)
!1287 = !{!1288}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1286, file: !1284, line: 55, baseType: !460, size: 8)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1278, file: !1200, line: 139, baseType: !1290, size: 32, offset: 96)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1284, line: 46, baseType: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1284, line: 44, size: 8, elements: !1293)
!1293 = !{!1294}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1292, file: !1284, line: 45, baseType: !460, size: 8)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1278, file: !1200, line: 140, baseType: !1296, size: 8, offset: 128)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !62, line: 20, baseType: !1297)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !64, line: 41, baseType: !1298)
!1298 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1278, file: !1200, line: 143, baseType: !1300, size: 32, offset: 160)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1302, line: 146, baseType: !1303)
!1302 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 143, size: 64, elements: !1304)
!1304 = !{!1305, !1306}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1303, file: !1302, line: 144, baseType: !61, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1303, file: !1302, line: 145, baseType: !61, size: 32, offset: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1278, file: !1200, line: 144, baseType: !762, size: 32, offset: 192)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1278, file: !1200, line: 145, baseType: !1309, size: 32, offset: 224)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 32)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1302, line: 152, baseType: !1311)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 149, size: 64, elements: !1312)
!1312 = !{!1313, !1314}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1311, file: !1302, line: 150, baseType: !61, size: 32)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1311, file: !1302, line: 151, baseType: !61, size: 32, offset: 32)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1278, file: !1200, line: 146, baseType: !762, size: 32, offset: 256)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1278, file: !1200, line: 147, baseType: !61, size: 32, offset: 288)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1278, file: !1200, line: 148, baseType: !762, size: 32, offset: 320)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1278, file: !1200, line: 151, baseType: !1319, size: 1024, offset: 352)
!1319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1320, size: 1024, elements: !1325)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1302, line: 170, baseType: !1321)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 167, size: 64, elements: !1322)
!1322 = !{!1323, !1324}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1321, file: !1302, line: 168, baseType: !61, size: 32)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1321, file: !1302, line: 169, baseType: !61, size: 32, offset: 32)
!1325 = !{!754, !466}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1278, file: !1200, line: 155, baseType: !1327, size: 32, offset: 1376)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 32)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !1213, line: 120, baseType: !460)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1278, file: !1200, line: 156, baseType: !1330, size: 32, offset: 1408)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 32)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1200, line: 124, baseType: !1332)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1200, line: 90, size: 200, elements: !1333)
!1333 = !{!1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1332, file: !1200, line: 91, baseType: !460, size: 8)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1332, file: !1200, line: 92, baseType: !460, size: 8, offset: 8)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1332, file: !1200, line: 94, baseType: !460, size: 8, offset: 16)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1332, file: !1200, line: 95, baseType: !460, size: 8, offset: 24)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1332, file: !1200, line: 96, baseType: !460, size: 8, offset: 32)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1332, file: !1200, line: 98, baseType: !460, size: 8, offset: 40)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1332, file: !1200, line: 99, baseType: !460, size: 8, offset: 48)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1332, file: !1200, line: 100, baseType: !460, size: 8, offset: 56)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1332, file: !1200, line: 101, baseType: !460, size: 8, offset: 64)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1332, file: !1200, line: 103, baseType: !460, size: 8, offset: 72)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1332, file: !1200, line: 104, baseType: !460, size: 8, offset: 80)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1332, file: !1200, line: 106, baseType: !460, size: 8, offset: 88)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1332, file: !1200, line: 107, baseType: !460, size: 8, offset: 96)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1332, file: !1200, line: 108, baseType: !460, size: 8, offset: 104)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1332, file: !1200, line: 109, baseType: !460, size: 8, offset: 112)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1332, file: !1200, line: 110, baseType: !460, size: 8, offset: 120)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1332, file: !1200, line: 111, baseType: !460, size: 8, offset: 128)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1332, file: !1200, line: 112, baseType: !460, size: 8, offset: 136)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1332, file: !1200, line: 114, baseType: !460, size: 8, offset: 144)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1332, file: !1200, line: 115, baseType: !460, size: 8, offset: 152)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1332, file: !1200, line: 118, baseType: !460, size: 8, offset: 160)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1332, file: !1200, line: 119, baseType: !460, size: 8, offset: 168)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1332, file: !1200, line: 120, baseType: !460, size: 8, offset: 176)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1332, file: !1200, line: 121, baseType: !460, size: 8, offset: 184)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1332, file: !1200, line: 122, baseType: !460, size: 8, offset: 192)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1278, file: !1200, line: 157, baseType: !61, size: 32, offset: 1440)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1278, file: !1200, line: 158, baseType: !1076, size: 16, offset: 1472)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1278, file: !1200, line: 159, baseType: !1076, size: 16, offset: 1488)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1278, file: !1200, line: 163, baseType: !1076, size: 16, offset: 1504)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1278, file: !1200, line: 164, baseType: !1076, size: 16, offset: 1520)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1278, file: !1200, line: 167, baseType: !460, size: 8, offset: 1536)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1278, file: !1200, line: 168, baseType: !1366, size: 24, offset: 1544)
!1366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 24, elements: !1367)
!1367 = !{!1368}
!1368 = !DISubrange(count: 3)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1278, file: !1200, line: 169, baseType: !460, size: 8, offset: 1568)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1278, file: !1200, line: 170, baseType: !460, size: 8, offset: 1576)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1278, file: !1200, line: 173, baseType: !1076, size: 16, offset: 1584)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1278, file: !1200, line: 174, baseType: !61, size: 32, offset: 1600)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1278, file: !1200, line: 175, baseType: !61, size: 32, offset: 1632)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1278, file: !1200, line: 178, baseType: !91, size: 8, offset: 1664)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1278, file: !1200, line: 179, baseType: !91, size: 8, offset: 1672)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1278, file: !1200, line: 182, baseType: !1377, size: 32, offset: 1696)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{!7, !88}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1278, file: !1200, line: 186, baseType: !1377, size: 32, offset: 1728)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1278, file: !1200, line: 187, baseType: !1382, size: 32, offset: 1760)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 32)
!1383 = !DISubroutineType(types: !1384)
!1384 = !{!7, !88, !61, !88, !61}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1278, file: !1200, line: 188, baseType: !1382, size: 32, offset: 1792)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1388)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1389)
!1389 = !{!1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1388, file: !56, line: 2759, baseType: !60, size: 32)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1388, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1388, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1388, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1388, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1388, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1388, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1388, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1388, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1388, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1388, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1388, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1388, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1388, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1388, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1388, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1388, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1388, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1410)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1411)
!1411 = !{!1412, !1413}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1410, file: !56, line: 2799, baseType: !60, size: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1410, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 32)
!1415 = !{!1103, !1416, !1418, !1420, !1425}
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !1105, file: !1106, line: 382, type: !61, isLocal: false, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !1105, file: !1106, line: 383, type: !61, isLocal: false, isDefinition: true)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !1105, file: !1106, line: 369, type: !1422, isLocal: true, isDefinition: true)
!1422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1024, elements: !1423)
!1423 = !{!1424}
!1424 = !DISubrange(count: 128)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !1105, file: !1106, line: 1409, type: !7, isLocal: true, isDefinition: true)
!1427 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !1430, file: !1485, line: 35, type: !1486, isLocal: false, isDefinition: true)
!1430 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1431, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1432, retainedTypes: !1478, globals: !1479, splitDebugInlining: false, nameTableKind: None)
!1431 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1432 = !{!1433}
!1433 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1434, line: 77, baseType: !18, size: 32, elements: !1435)
!1434 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1435 = !{!1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477}
!1436 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!1437 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!1438 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!1439 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!1440 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!1441 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!1442 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!1443 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!1444 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!1445 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!1446 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1447 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1448 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1449 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1450 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1451 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1452 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1453 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1454 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1455 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1456 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1457 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1458 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1459 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1460 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1461 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1462 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1463 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1464 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1465 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1466 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1467 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1468 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1469 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1470 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1471 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1472 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1473 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1474 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1475 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1476 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1477 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1478 = !{!88}
!1479 = !{!1428, !1480, !1483}
!1480 = !DIGlobalVariableExpression(var: !1481, expr: !DIExpression())
!1481 = distinct !DIGlobalVariable(name: "cmem_index", scope: !1430, file: !1431, line: 96, type: !1482, isLocal: true, isDefinition: true)
!1482 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1483 = !DIGlobalVariableExpression(var: !1484, expr: !DIExpression())
!1484 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !1430, file: !1431, line: 94, type: !1482, isLocal: true, isDefinition: true)
!1485 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1487)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !1431, line: 54, baseType: !1488)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1431, line: 51, size: 576, elements: !1489)
!1489 = !{!1490, !1500}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1488, file: !1431, line: 52, baseType: !1491, size: 96)
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1434, line: 152, baseType: !1492)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1434, line: 144, size: 96, elements: !1493)
!1493 = !{!1494, !1496, !1498}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1492, file: !1434, line: 145, baseType: !1495, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !1434, line: 61, baseType: !18)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1492, file: !1434, line: 146, baseType: !1497, size: 16, offset: 32)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !1434, line: 62, baseType: !1078)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1492, file: !1434, line: 150, baseType: !1499, size: 32, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !1434, line: 127, baseType: !1433)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1488, file: !1431, line: 53, baseType: !1501, size: 480, offset: 96)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1502, line: 107, baseType: !1503)
!1502 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1502, line: 103, size: 480, elements: !1504)
!1504 = !{!1505, !1506, !1507}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1503, file: !1502, line: 104, baseType: !18, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1503, file: !1502, line: 105, baseType: !18, size: 32, offset: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1503, file: !1502, line: 106, baseType: !1508, size: 400, offset: 64)
!1508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1509, size: 400, elements: !950)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1502, line: 100, baseType: !1510)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1502, line: 92, size: 80, elements: !1511)
!1511 = !{!1512, !1513, !1514}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1510, file: !1502, line: 93, baseType: !460, size: 8)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1510, file: !1502, line: 94, baseType: !460, size: 8, offset: 8)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1510, file: !1502, line: 96, baseType: !1515, size: 64, offset: 16)
!1515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 64, elements: !753)
!1516 = !DIGlobalVariableExpression(var: !1517, expr: !DIExpression())
!1517 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !1518, file: !1521, line: 96, type: !1522, isLocal: false, isDefinition: true)
!1518 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1519, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1520, splitDebugInlining: false, nameTableKind: None)
!1519 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1520 = !{!1516}
!1521 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1523, size: 152, elements: !1525)
!1523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1524)
!1524 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1525 = !{!1526}
!1526 = !DISubrange(count: 19)
!1527 = !DIGlobalVariableExpression(var: !1528, expr: !DIExpression())
!1528 = distinct !DIGlobalVariable(name: "nor_egid", scope: !1529, file: !1530, line: 168, type: !1880, isLocal: false, isDefinition: true)
!1529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1531, retainedTypes: !1542, globals: !1551, splitDebugInlining: false, nameTableKind: None)
!1530 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1531 = !{!1532, !1108, !1433}
!1532 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1533, line: 49, baseType: !18, size: 32, elements: !1534)
!1533 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1534 = !{!1535, !1536, !1537, !1538, !1539, !1540, !1541}
!1535 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!1536 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!1537 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!1538 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!1539 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!1540 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!1541 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!1542 = !{!1543, !61, !1545}
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !1109, line: 47, baseType: !462)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1302, line: 146, baseType: !1547)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 143, size: 64, elements: !1548)
!1548 = !{!1549, !1550}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1547, file: !1302, line: 144, baseType: !61, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1547, file: !1302, line: 145, baseType: !61, size: 32, offset: 32)
!1551 = !{!1527, !1552, !1554, !1564, !1701, !1703, !1705, !1707, !1709, !1714, !1717, !1726, !1728, !1730, !1738, !1740, !1742, !1825, !1828, !1830, !1832, !1843, !1845, !1858}
!1552 = !DIGlobalVariableExpression(var: !1553, expr: !DIExpression())
!1553 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !1529, file: !1530, line: 94, type: !985, isLocal: true, isDefinition: true)
!1554 = !DIGlobalVariableExpression(var: !1555, expr: !DIExpression())
!1555 = distinct !DIGlobalVariable(name: "cmem_id", scope: !1529, file: !1530, line: 95, type: !1556, isLocal: false, isDefinition: true)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1558)
!1558 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1502, line: 100, baseType: !1559)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1502, line: 92, size: 80, elements: !1560)
!1560 = !{!1561, !1562, !1563}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1559, file: !1502, line: 93, baseType: !460, size: 8)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1559, file: !1502, line: 94, baseType: !460, size: 8, offset: 8)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1559, file: !1502, line: 96, baseType: !1515, size: 64, offset: 16)
!1564 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression())
!1565 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !1529, file: !1530, line: 127, type: !1566, isLocal: false, isDefinition: true)
!1566 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !1302, line: 317, baseType: !1567)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !1302, line: 237, size: 2720, elements: !1568)
!1568 = !{!1569, !1570, !1622, !1623, !1626, !1627, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1668, !1669, !1670, !1675, !1676, !1677, !1678, !1679, !1683, !1687, !1694, !1695, !1696, !1697, !1698, !1699, !1700}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !1567, file: !1302, line: 238, baseType: !61, size: 32)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1567, file: !1302, line: 239, baseType: !1571, size: 32, offset: 32)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1302, line: 121, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 105, size: 480, elements: !1574)
!1574 = !{!1575, !1579, !1580, !1584, !1588, !1592, !1593, !1597, !1598, !1599, !1600, !1605, !1610, !1614, !1618}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !1573, file: !1302, line: 106, baseType: !1576, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 32)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!7, !88, !88}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !1573, file: !1302, line: 107, baseType: !1377, size: 32, offset: 32)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !1573, file: !1302, line: 108, baseType: !1581, size: 32, offset: 64)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{!88, !88, !61, !61}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !1573, file: !1302, line: 109, baseType: !1585, size: 32, offset: 96)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 32)
!1586 = !DISubroutineType(types: !1587)
!1587 = !{!7, !88, !61}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !1573, file: !1302, line: 110, baseType: !1589, size: 32, offset: 128)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 32)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{!7, !88, !88, !88, !61}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !1573, file: !1302, line: 111, baseType: !1585, size: 32, offset: 160)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !1573, file: !1302, line: 112, baseType: !1594, size: 32, offset: 192)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!985, !88, !61}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !1573, file: !1302, line: 113, baseType: !1585, size: 32, offset: 224)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !1573, file: !1302, line: 114, baseType: !1585, size: 32, offset: 256)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !1573, file: !1302, line: 115, baseType: !1585, size: 32, offset: 288)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !1573, file: !1302, line: 116, baseType: !1601, size: 32, offset: 320)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 32)
!1602 = !DISubroutineType(types: !1603)
!1603 = !{!7, !88, !7, !1604, !88, !1604}
!1604 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !1109, line: 50, baseType: !18)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !1573, file: !1302, line: 117, baseType: !1606, size: 32, offset: 352)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 32)
!1607 = !DISubroutineType(types: !1608)
!1608 = !{!7, !88, !1609}
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !1573, file: !1302, line: 118, baseType: !1611, size: 32, offset: 384)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 32)
!1612 = !DISubroutineType(types: !1613)
!1613 = !{!7, !88, !88, !61}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1573, file: !1302, line: 119, baseType: !1615, size: 32, offset: 416)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 32)
!1616 = !DISubroutineType(types: !1617)
!1617 = !{!91, !88, !61}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !1573, file: !1302, line: 120, baseType: !1619, size: 32, offset: 448)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 32)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{!7, !88, !61, !88}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1567, file: !1302, line: 240, baseType: !88, size: 32, offset: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !1567, file: !1302, line: 241, baseType: !1624, size: 32, offset: 96)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !1109, line: 46, baseType: !1078)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !1567, file: !1302, line: 242, baseType: !1624, size: 32, offset: 128)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1567, file: !1302, line: 243, baseType: !1628, size: 928, offset: 160)
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1302, line: 99, baseType: !1629)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 90, size: 928, elements: !1630)
!1630 = !{!1631, !1632, !1634, !1635, !1636, !1637, !1638, !1639}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !1629, file: !1302, line: 91, baseType: !61, size: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1629, file: !1302, line: 92, baseType: !1633, size: 256, offset: 32)
!1633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 256, elements: !753)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !1629, file: !1302, line: 93, baseType: !1633, size: 256, offset: 288)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1629, file: !1302, line: 94, baseType: !1633, size: 256, offset: 544)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !1629, file: !1302, line: 95, baseType: !61, size: 32, offset: 800)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !1629, file: !1302, line: 96, baseType: !1625, size: 16, offset: 832)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !1629, file: !1302, line: 97, baseType: !61, size: 32, offset: 864)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !1629, file: !1302, line: 98, baseType: !61, size: 32, offset: 896)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1567, file: !1302, line: 244, baseType: !1633, size: 256, offset: 1088)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !1567, file: !1302, line: 245, baseType: !1633, size: 256, offset: 1344)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !1567, file: !1302, line: 246, baseType: !61, size: 32, offset: 1600)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !1567, file: !1302, line: 247, baseType: !61, size: 32, offset: 1632)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !1567, file: !1302, line: 248, baseType: !61, size: 32, offset: 1664)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !1567, file: !1302, line: 249, baseType: !61, size: 32, offset: 1696)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !1567, file: !1302, line: 250, baseType: !61, size: 32, offset: 1728)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !1567, file: !1302, line: 252, baseType: !61, size: 32, offset: 1760)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !1567, file: !1302, line: 255, baseType: !61, size: 32, offset: 1792)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !1567, file: !1302, line: 256, baseType: !61, size: 32, offset: 1824)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !1567, file: !1302, line: 257, baseType: !61, size: 32, offset: 1856)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !1567, file: !1302, line: 261, baseType: !61, size: 32, offset: 1888)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !1567, file: !1302, line: 262, baseType: !61, size: 32, offset: 1920)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !1567, file: !1302, line: 263, baseType: !61, size: 32, offset: 1952)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !1567, file: !1302, line: 264, baseType: !61, size: 32, offset: 1984)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !1567, file: !1302, line: 265, baseType: !61, size: 32, offset: 2016)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !1567, file: !1302, line: 266, baseType: !61, size: 32, offset: 2048)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !1567, file: !1302, line: 267, baseType: !61, size: 32, offset: 2080)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !1567, file: !1302, line: 268, baseType: !61, size: 32, offset: 2112)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !1567, file: !1302, line: 270, baseType: !61, size: 32, offset: 2144)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !1567, file: !1302, line: 271, baseType: !61, size: 32, offset: 2176)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !1567, file: !1302, line: 272, baseType: !1662, size: 32, offset: 2208)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !1302, line: 229, baseType: !1664)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 226, size: 64, elements: !1665)
!1665 = !{!1666, !1667}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !1664, file: !1302, line: 227, baseType: !61, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !1664, file: !1302, line: 228, baseType: !61, size: 32, offset: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !1567, file: !1302, line: 273, baseType: !1543, size: 32, offset: 2240)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !1567, file: !1302, line: 274, baseType: !1543, size: 32, offset: 2272)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !1567, file: !1302, line: 276, baseType: !1671, size: 32, offset: 2304)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 32)
!1672 = !DISubroutineType(types: !1673)
!1673 = !{null, !1674}
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !1567, file: !1302, line: 278, baseType: !61, size: 32, offset: 2336)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !1567, file: !1302, line: 280, baseType: !1671, size: 32, offset: 2368)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !1567, file: !1302, line: 281, baseType: !1671, size: 32, offset: 2400)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !1567, file: !1302, line: 283, baseType: !61, size: 32, offset: 2432)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !1567, file: !1302, line: 284, baseType: !1680, size: 32, offset: 2464)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 32)
!1681 = !DISubroutineType(types: !1682)
!1682 = !{!61, !1674}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !1567, file: !1302, line: 285, baseType: !1684, size: 32, offset: 2496)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 32)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{!61, !1674, !61, !61}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !1567, file: !1302, line: 293, baseType: !1688, size: 32, offset: 2528)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 32)
!1689 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !1302, line: 162, baseType: !1690)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 159, size: 64, elements: !1691)
!1691 = !{!1692, !1693}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1690, file: !1302, line: 160, baseType: !61, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !1690, file: !1302, line: 161, baseType: !61, size: 32, offset: 32)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !1567, file: !1302, line: 295, baseType: !61, size: 32, offset: 2560)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !1567, file: !1302, line: 296, baseType: !61, size: 32, offset: 2592)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !1567, file: !1302, line: 297, baseType: !61, size: 32, offset: 2624)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !1567, file: !1302, line: 298, baseType: !1625, size: 16, offset: 2656)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !1567, file: !1302, line: 302, baseType: !1625, size: 16, offset: 2672)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !1567, file: !1302, line: 310, baseType: !91, size: 8, offset: 2688)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1567, file: !1302, line: 313, baseType: !91, size: 8, offset: 2696)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !1529, file: !1530, line: 129, type: !61, isLocal: false, isDefinition: true)
!1703 = !DIGlobalVariableExpression(var: !1704, expr: !DIExpression())
!1704 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !1529, file: !1530, line: 130, type: !61, isLocal: false, isDefinition: true)
!1705 = !DIGlobalVariableExpression(var: !1706, expr: !DIExpression())
!1706 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !1529, file: !1530, line: 131, type: !61, isLocal: false, isDefinition: true)
!1707 = !DIGlobalVariableExpression(var: !1708, expr: !DIExpression())
!1708 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !1529, file: !1530, line: 132, type: !1076, isLocal: true, isDefinition: true)
!1709 = !DIGlobalVariableExpression(var: !1710, expr: !DIExpression())
!1710 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !1529, file: !1530, line: 136, type: !1711, isLocal: false, isDefinition: true)
!1711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 4096, elements: !1712)
!1712 = !{!1713}
!1713 = !DISubrange(count: 512)
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !1529, file: !1530, line: 146, type: !1716, isLocal: true, isDefinition: true)
!1716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1546, size: 512, elements: !753)
!1717 = !DIGlobalVariableExpression(var: !1718, expr: !DIExpression())
!1718 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !1529, file: !1530, line: 152, type: !1719, isLocal: true, isDefinition: true)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 32)
!1720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1721)
!1721 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1502, line: 116, baseType: !1722)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1502, line: 113, size: 64, elements: !1723)
!1723 = !{!1724, !1725}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !1722, file: !1502, line: 114, baseType: !61, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !1722, file: !1502, line: 115, baseType: !61, size: 32, offset: 32)
!1726 = !DIGlobalVariableExpression(var: !1727, expr: !DIExpression())
!1727 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !1529, file: !1530, line: 156, type: !61, isLocal: false, isDefinition: true)
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression())
!1729 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !1529, file: !1530, line: 157, type: !61, isLocal: false, isDefinition: true)
!1730 = !DIGlobalVariableExpression(var: !1731, expr: !DIExpression())
!1731 = distinct !DIGlobalVariable(name: "BankInfo", scope: !1529, file: !1530, line: 160, type: !1732, isLocal: true, isDefinition: true)
!1732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1733, size: 512, elements: !753)
!1733 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1302, line: 152, baseType: !1734)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 149, size: 64, elements: !1735)
!1735 = !{!1736, !1737}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1734, file: !1302, line: 150, baseType: !61, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1734, file: !1302, line: 151, baseType: !61, size: 32, offset: 32)
!1738 = !DIGlobalVariableExpression(var: !1739, expr: !DIExpression())
!1739 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !1529, file: !1530, line: 173, type: !61, isLocal: false, isDefinition: true)
!1740 = !DIGlobalVariableExpression(var: !1741, expr: !DIExpression())
!1741 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !1529, file: !1530, line: 176, type: !1572, isLocal: false, isDefinition: true)
!1742 = !DIGlobalVariableExpression(var: !1743, expr: !DIExpression())
!1743 = distinct !DIGlobalVariable(name: "mtdflash", scope: !1529, file: !1530, line: 177, type: !1744, isLocal: false, isDefinition: true)
!1744 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1200, line: 193, baseType: !1745)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1200, line: 134, size: 1824, elements: !1746)
!1746 = !{!1747, !1748, !1749, !1755, !1761, !1762, !1763, !1764, !1766, !1767, !1768, !1769, !1776, !1777, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1745, file: !1200, line: 136, baseType: !61, size: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1745, file: !1200, line: 137, baseType: !762, size: 32, offset: 32)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1745, file: !1200, line: 138, baseType: !1750, size: 32, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1284, line: 56, baseType: !1751)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 32)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1284, line: 54, size: 8, elements: !1753)
!1753 = !{!1754}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1752, file: !1284, line: 55, baseType: !460, size: 8)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1745, file: !1200, line: 139, baseType: !1756, size: 32, offset: 96)
!1756 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1284, line: 46, baseType: !1757)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 32)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1284, line: 44, size: 8, elements: !1759)
!1759 = !{!1760}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1758, file: !1284, line: 45, baseType: !460, size: 8)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1745, file: !1200, line: 140, baseType: !1296, size: 8, offset: 128)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1745, file: !1200, line: 143, baseType: !1545, size: 32, offset: 160)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1745, file: !1200, line: 144, baseType: !762, size: 32, offset: 192)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1745, file: !1200, line: 145, baseType: !1765, size: 32, offset: 224)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1745, file: !1200, line: 146, baseType: !762, size: 32, offset: 256)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1745, file: !1200, line: 147, baseType: !61, size: 32, offset: 288)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1745, file: !1200, line: 148, baseType: !762, size: 32, offset: 320)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1745, file: !1200, line: 151, baseType: !1770, size: 1024, offset: 352)
!1770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1771, size: 1024, elements: !1325)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1302, line: 170, baseType: !1772)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 167, size: 64, elements: !1773)
!1773 = !{!1774, !1775}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1772, file: !1302, line: 168, baseType: !61, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1772, file: !1302, line: 169, baseType: !61, size: 32, offset: 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1745, file: !1200, line: 155, baseType: !1327, size: 32, offset: 1376)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1745, file: !1200, line: 156, baseType: !1778, size: 32, offset: 1408)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1200, line: 124, baseType: !1780)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1200, line: 90, size: 200, elements: !1781)
!1781 = !{!1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1780, file: !1200, line: 91, baseType: !460, size: 8)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1780, file: !1200, line: 92, baseType: !460, size: 8, offset: 8)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1780, file: !1200, line: 94, baseType: !460, size: 8, offset: 16)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1780, file: !1200, line: 95, baseType: !460, size: 8, offset: 24)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1780, file: !1200, line: 96, baseType: !460, size: 8, offset: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1780, file: !1200, line: 98, baseType: !460, size: 8, offset: 40)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1780, file: !1200, line: 99, baseType: !460, size: 8, offset: 48)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1780, file: !1200, line: 100, baseType: !460, size: 8, offset: 56)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1780, file: !1200, line: 101, baseType: !460, size: 8, offset: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1780, file: !1200, line: 103, baseType: !460, size: 8, offset: 72)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1780, file: !1200, line: 104, baseType: !460, size: 8, offset: 80)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1780, file: !1200, line: 106, baseType: !460, size: 8, offset: 88)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1780, file: !1200, line: 107, baseType: !460, size: 8, offset: 96)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1780, file: !1200, line: 108, baseType: !460, size: 8, offset: 104)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1780, file: !1200, line: 109, baseType: !460, size: 8, offset: 112)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1780, file: !1200, line: 110, baseType: !460, size: 8, offset: 120)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1780, file: !1200, line: 111, baseType: !460, size: 8, offset: 128)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1780, file: !1200, line: 112, baseType: !460, size: 8, offset: 136)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1780, file: !1200, line: 114, baseType: !460, size: 8, offset: 144)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1780, file: !1200, line: 115, baseType: !460, size: 8, offset: 152)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1780, file: !1200, line: 118, baseType: !460, size: 8, offset: 160)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1780, file: !1200, line: 119, baseType: !460, size: 8, offset: 168)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1780, file: !1200, line: 120, baseType: !460, size: 8, offset: 176)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1780, file: !1200, line: 121, baseType: !460, size: 8, offset: 184)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1780, file: !1200, line: 122, baseType: !460, size: 8, offset: 192)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1745, file: !1200, line: 157, baseType: !61, size: 32, offset: 1440)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1745, file: !1200, line: 158, baseType: !1076, size: 16, offset: 1472)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1745, file: !1200, line: 159, baseType: !1076, size: 16, offset: 1488)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1745, file: !1200, line: 163, baseType: !1076, size: 16, offset: 1504)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1745, file: !1200, line: 164, baseType: !1076, size: 16, offset: 1520)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1745, file: !1200, line: 167, baseType: !460, size: 8, offset: 1536)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1745, file: !1200, line: 168, baseType: !1366, size: 24, offset: 1544)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1745, file: !1200, line: 169, baseType: !460, size: 8, offset: 1568)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1745, file: !1200, line: 170, baseType: !460, size: 8, offset: 1576)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1745, file: !1200, line: 173, baseType: !1076, size: 16, offset: 1584)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1745, file: !1200, line: 174, baseType: !61, size: 32, offset: 1600)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1745, file: !1200, line: 175, baseType: !61, size: 32, offset: 1632)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1745, file: !1200, line: 178, baseType: !91, size: 8, offset: 1664)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1745, file: !1200, line: 179, baseType: !91, size: 8, offset: 1672)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1745, file: !1200, line: 182, baseType: !1377, size: 32, offset: 1696)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1745, file: !1200, line: 186, baseType: !1377, size: 32, offset: 1728)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1745, file: !1200, line: 187, baseType: !1382, size: 32, offset: 1760)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1745, file: !1200, line: 188, baseType: !1382, size: 32, offset: 1792)
!1825 = !DIGlobalVariableExpression(var: !1826, expr: !DIExpression())
!1826 = distinct !DIGlobalVariable(name: "StatusMap", scope: !1529, file: !1530, line: 178, type: !1827, isLocal: false, isDefinition: true)
!1827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1328, size: 64, elements: !753)
!1828 = !DIGlobalVariableExpression(var: !1829, expr: !DIExpression())
!1829 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !1529, file: !1530, line: 179, type: !1779, isLocal: false, isDefinition: true)
!1830 = !DIGlobalVariableExpression(var: !1831, expr: !DIExpression())
!1831 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !1529, file: !1530, line: 204, type: !1716, isLocal: true, isDefinition: true)
!1832 = !DIGlobalVariableExpression(var: !1833, expr: !DIExpression())
!1833 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !1529, file: !1530, line: 205, type: !1834, isLocal: false, isDefinition: true)
!1834 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1835, line: 93, baseType: !1836)
!1835 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1835, line: 83, size: 1056, elements: !1837)
!1837 = !{!1838, !1839, !1840, !1841, !1842}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !1836, file: !1835, line: 84, baseType: !61, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1836, file: !1835, line: 85, baseType: !1571, size: 32, offset: 32)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1836, file: !1835, line: 86, baseType: !88, size: 32, offset: 64)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1836, file: !1835, line: 87, baseType: !1628, size: 928, offset: 96)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !1836, file: !1835, line: 92, baseType: !91, size: 8, offset: 1024)
!1843 = !DIGlobalVariableExpression(var: !1844, expr: !DIExpression())
!1844 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !1529, file: !1530, line: 208, type: !1744, isLocal: false, isDefinition: true)
!1845 = !DIGlobalVariableExpression(var: !1846, expr: !DIExpression())
!1846 = distinct !DIGlobalVariable(name: "nor_list", scope: !1529, file: !1530, line: 114, type: !1847, isLocal: true, isDefinition: true)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1849)
!1849 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1502, line: 125, baseType: !1850)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1502, line: 119, size: 1088, elements: !1851)
!1851 = !{!1852, !1853, !1854, !1855, !1857}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !1850, file: !1502, line: 120, baseType: !1076, size: 16)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !1850, file: !1502, line: 121, baseType: !1076, size: 16, offset: 16)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !1850, file: !1502, line: 122, baseType: !61, size: 32, offset: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !1850, file: !1502, line: 123, baseType: !1856, size: 512, offset: 64)
!1856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1721, size: 512, elements: !753)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1850, file: !1502, line: 124, baseType: !1732, size: 512, offset: 576)
!1858 = !DIGlobalVariableExpression(var: !1859, expr: !DIExpression())
!1859 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !1529, file: !1860, line: 42, type: !1861, isLocal: true, isDefinition: true)
!1860 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1862)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !1530, line: 66, baseType: !1863)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1530, line: 63, size: 5600, elements: !1864)
!1864 = !{!1865, !1872}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1863, file: !1530, line: 64, baseType: !1866, size: 96)
!1866 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1434, line: 152, baseType: !1867)
!1867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1434, line: 144, size: 96, elements: !1868)
!1868 = !{!1869, !1870, !1871}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1867, file: !1434, line: 145, baseType: !1495, size: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1867, file: !1434, line: 146, baseType: !1497, size: 16, offset: 32)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1867, file: !1434, line: 150, baseType: !1499, size: 32, offset: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1863, file: !1530, line: 65, baseType: !1873, size: 5504, offset: 96)
!1873 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1502, line: 132, baseType: !1874)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1502, line: 128, size: 5504, elements: !1875)
!1875 = !{!1876, !1877, !1878}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1874, file: !1502, line: 129, baseType: !18, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1874, file: !1502, line: 130, baseType: !18, size: 32, offset: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1874, file: !1502, line: 131, baseType: !1879, size: 5440, offset: 64)
!1879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1849, size: 5440, elements: !950)
!1880 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !1284, line: 79, baseType: !1881)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 32)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1284, line: 77, size: 8, elements: !1883)
!1883 = !{!1884}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1882, file: !1284, line: 78, baseType: !460, size: 8)
!1885 = !DIGlobalVariableExpression(var: !1886, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1886 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !1887, file: !1888, line: 82, type: !7, isLocal: true, isDefinition: true)
!1887 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1888, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1889, retainedTypes: !1895, globals: !1940, splitDebugInlining: false, nameTableKind: None)
!1888 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1889 = !{!1224, !1108, !1890}
!1890 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1225, line: 123, baseType: !18, size: 32, elements: !1891)
!1891 = !{!1892, !1893, !1894}
!1892 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!1893 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!1894 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!1895 = !{!61, !1896, !88, !762}
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1302, line: 190, baseType: !1898)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 173, size: 1376, elements: !1899)
!1899 = !{!1900, !1901, !1902, !1908, !1914, !1915, !1922, !1923, !1930, !1931, !1932, !1933}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1898, file: !1302, line: 174, baseType: !61, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1898, file: !1302, line: 175, baseType: !1543, size: 32, offset: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1898, file: !1302, line: 176, baseType: !1903, size: 32, offset: 64)
!1903 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1284, line: 56, baseType: !1904)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 32)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1284, line: 54, size: 8, elements: !1906)
!1906 = !{!1907}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1905, file: !1284, line: 55, baseType: !460, size: 8)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1898, file: !1302, line: 177, baseType: !1909, size: 32, offset: 96)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1284, line: 46, baseType: !1910)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 32)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1284, line: 44, size: 8, elements: !1912)
!1912 = !{!1913}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1911, file: !1284, line: 45, baseType: !460, size: 8)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1898, file: !1302, line: 178, baseType: !1296, size: 8, offset: 128)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1898, file: !1302, line: 180, baseType: !1916, size: 32, offset: 160)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1302, line: 146, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 143, size: 64, elements: !1919)
!1919 = !{!1920, !1921}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1918, file: !1302, line: 144, baseType: !61, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1918, file: !1302, line: 145, baseType: !61, size: 32, offset: 32)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1898, file: !1302, line: 181, baseType: !1543, size: 32, offset: 192)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1898, file: !1302, line: 182, baseType: !1924, size: 32, offset: 224)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1302, line: 152, baseType: !1926)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 149, size: 64, elements: !1927)
!1927 = !{!1928, !1929}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1926, file: !1302, line: 150, baseType: !61, size: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1926, file: !1302, line: 151, baseType: !61, size: 32, offset: 32)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1898, file: !1302, line: 183, baseType: !1543, size: 32, offset: 256)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1898, file: !1302, line: 184, baseType: !61, size: 32, offset: 288)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1898, file: !1302, line: 185, baseType: !1543, size: 32, offset: 320)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1898, file: !1302, line: 188, baseType: !1934, size: 1024, offset: 352)
!1934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1935, size: 1024, elements: !1325)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1302, line: 170, baseType: !1936)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 167, size: 64, elements: !1937)
!1937 = !{!1938, !1939}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1936, file: !1302, line: 168, baseType: !61, size: 32)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1936, file: !1302, line: 169, baseType: !61, size: 32, offset: 32)
!1940 = !{!1941, !1942}
!1941 = !DIGlobalVariableExpression(var: !1886, expr: !DIExpression())
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !1887, file: !1888, line: 432, type: !1944, isLocal: true, isDefinition: true)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !1225, line: 119, baseType: !1224)
!1945 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!1946 = !DIGlobalVariableExpression(var: !1947, expr: !DIExpression())
!1947 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !1948, file: !1949, line: 60, type: !61, isLocal: false, isDefinition: true)
!1948 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1949, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1950, retainedTypes: !1958, globals: !1959, splitDebugInlining: false, nameTableKind: None)
!1949 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!1950 = !{!1951}
!1951 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 387, baseType: !7, size: 32, elements: !1952)
!1952 = !{!1953, !1954, !1955, !1956, !1957}
!1953 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!1954 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!1955 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!1956 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!1957 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!1958 = !{!88, !61}
!1959 = !{!1946, !1960, !1962, !1964, !1966, !1968, !2022, !2024}
!1960 = !DIGlobalVariableExpression(var: !1961, expr: !DIExpression())
!1961 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !1948, file: !1949, line: 61, type: !61, isLocal: false, isDefinition: true)
!1962 = !DIGlobalVariableExpression(var: !1963, expr: !DIExpression())
!1963 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !1948, file: !1949, line: 107, type: !61, isLocal: false, isDefinition: true)
!1964 = !DIGlobalVariableExpression(var: !1965, expr: !DIExpression())
!1965 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !1948, file: !1949, line: 132, type: !91, isLocal: false, isDefinition: true)
!1966 = !DIGlobalVariableExpression(var: !1967, expr: !DIExpression())
!1967 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !1948, file: !1949, line: 133, type: !91, isLocal: false, isDefinition: true)
!1968 = !DIGlobalVariableExpression(var: !1969, expr: !DIExpression())
!1969 = distinct !DIGlobalVariable(name: "replaced", scope: !1970, file: !1949, line: 139, type: !61, isLocal: true, isDefinition: true)
!1970 = distinct !DISubprogram(name: "LookupAddress", scope: !1949, file: !1949, line: 135, type: !1971, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1948, retainedNodes: !1973)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!61, !88, !61}
!1973 = !{!1974, !1975, !1976, !2021}
!1974 = !DILocalVariable(name: "DriveData", arg: 1, scope: !1970, file: !1949, line: 135, type: !88)
!1975 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !1970, file: !1949, line: 135, type: !61)
!1976 = !DILocalVariable(name: "D", scope: !1970, file: !1949, line: 137, type: !1977)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1302, line: 190, baseType: !1979)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 173, size: 1376, elements: !1980)
!1980 = !{!1981, !1982, !1983, !1989, !1995, !1996, !2003, !2004, !2011, !2012, !2013, !2014}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1979, file: !1302, line: 174, baseType: !61, size: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1979, file: !1302, line: 175, baseType: !1543, size: 32, offset: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1979, file: !1302, line: 176, baseType: !1984, size: 32, offset: 64)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1284, line: 56, baseType: !1985)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 32)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1284, line: 54, size: 8, elements: !1987)
!1987 = !{!1988}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1986, file: !1284, line: 55, baseType: !460, size: 8)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1979, file: !1302, line: 177, baseType: !1990, size: 32, offset: 96)
!1990 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1284, line: 46, baseType: !1991)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1284, line: 44, size: 8, elements: !1993)
!1993 = !{!1994}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1992, file: !1284, line: 45, baseType: !460, size: 8)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1979, file: !1302, line: 178, baseType: !1296, size: 8, offset: 128)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1979, file: !1302, line: 180, baseType: !1997, size: 32, offset: 160)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1302, line: 146, baseType: !1999)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 143, size: 64, elements: !2000)
!2000 = !{!2001, !2002}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1999, file: !1302, line: 144, baseType: !61, size: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1999, file: !1302, line: 145, baseType: !61, size: 32, offset: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1979, file: !1302, line: 181, baseType: !1543, size: 32, offset: 192)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1979, file: !1302, line: 182, baseType: !2005, size: 32, offset: 224)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1302, line: 152, baseType: !2007)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 149, size: 64, elements: !2008)
!2008 = !{!2009, !2010}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2007, file: !1302, line: 150, baseType: !61, size: 32)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2007, file: !1302, line: 151, baseType: !61, size: 32, offset: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1979, file: !1302, line: 183, baseType: !1543, size: 32, offset: 256)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1979, file: !1302, line: 184, baseType: !61, size: 32, offset: 288)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1979, file: !1302, line: 185, baseType: !1543, size: 32, offset: 320)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1979, file: !1302, line: 188, baseType: !2015, size: 1024, offset: 352)
!2015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2016, size: 1024, elements: !1325)
!2016 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1302, line: 170, baseType: !2017)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 167, size: 64, elements: !2018)
!2018 = !{!2019, !2020}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2017, file: !1302, line: 168, baseType: !61, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2017, file: !1302, line: 169, baseType: !61, size: 32, offset: 32)
!2021 = !DILocalVariable(name: "addr", scope: !1970, file: !1949, line: 138, type: !61)
!2022 = !DIGlobalVariableExpression(var: !2023, expr: !DIExpression())
!2023 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !1970, file: !1949, line: 140, type: !61, isLocal: true, isDefinition: true)
!2024 = !DIGlobalVariableExpression(var: !2025, expr: !DIExpression())
!2025 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !1970, file: !1949, line: 141, type: !61, isLocal: true, isDefinition: true)
!2026 = !DIGlobalVariableExpression(var: !2027, expr: !DIExpression())
!2027 = distinct !DIGlobalVariable(name: "emi_settings", scope: !2028, file: !2029, line: 44, type: !2175, isLocal: false, isDefinition: true)
!2028 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2029, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2030, retainedTypes: !2036, globals: !2037, splitDebugInlining: false, nameTableKind: None)
!2029 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!2030 = !{!2031}
!2031 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !2032, line: 40, baseType: !18, size: 32, elements: !2033)
!2032 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!2033 = !{!2034, !2035}
!2034 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!2035 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!2036 = !{!1081}
!2037 = !{!2026, !2038, !2040, !2042, !2044, !2145, !2147, !2149, !2151, !2153, !2155, !2157, !2159, !2161, !2163, !2165, !2167, !2169, !2171, !2173}
!2038 = !DIGlobalVariableExpression(var: !2039, expr: !DIExpression())
!2039 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !2028, file: !2029, line: 65, type: !61, isLocal: false, isDefinition: true)
!2040 = !DIGlobalVariableExpression(var: !2041, expr: !DIExpression())
!2041 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !2028, file: !2029, line: 66, type: !61, isLocal: false, isDefinition: true)
!2042 = !DIGlobalVariableExpression(var: !2043, expr: !DIExpression())
!2043 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !2028, file: !2029, line: 67, type: !61, isLocal: false, isDefinition: true)
!2044 = !DIGlobalVariableExpression(var: !2045, expr: !DIExpression())
!2045 = distinct !DIGlobalVariable(name: "emi_register", scope: !2028, file: !2029, line: 83, type: !2046, isLocal: false, isDefinition: true)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !56, line: 2524, baseType: !2048)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2447, size: 6752, elements: !2049)
!2049 = !{!2050, !2054, !2055, !2056, !2057, !2061, !2062, !2064, !2065, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2048, file: !56, line: 2448, baseType: !2051, size: 768)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 768, elements: !2052)
!2052 = !{!2053}
!2053 = !DISubrange(count: 96)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !2048, file: !56, line: 2449, baseType: !60, size: 32, offset: 768)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2048, file: !56, line: 2450, baseType: !933, size: 96, offset: 800)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !2048, file: !56, line: 2451, baseType: !60, size: 32, offset: 896)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2048, file: !56, line: 2452, baseType: !2058, size: 160, offset: 928)
!2058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 160, elements: !2059)
!2059 = !{!2060}
!2060 = !DISubrange(count: 20)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !2048, file: !56, line: 2453, baseType: !60, size: 32, offset: 1088)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2048, file: !56, line: 2454, baseType: !2063, size: 32, offset: 1120)
!2063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 32, elements: !463)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !2048, file: !56, line: 2455, baseType: !60, size: 32, offset: 1152)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2048, file: !56, line: 2456, baseType: !2066, size: 480, offset: 1184)
!2066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 480, elements: !2067)
!2067 = !{!2068}
!2068 = !DISubrange(count: 60)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !2048, file: !56, line: 2457, baseType: !60, size: 32, offset: 1664)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2048, file: !56, line: 2458, baseType: !2063, size: 32, offset: 1696)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !2048, file: !56, line: 2459, baseType: !60, size: 32, offset: 1728)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2048, file: !56, line: 2460, baseType: !2063, size: 32, offset: 1760)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !2048, file: !56, line: 2461, baseType: !60, size: 32, offset: 1792)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2048, file: !56, line: 2462, baseType: !2058, size: 160, offset: 1824)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !2048, file: !56, line: 2463, baseType: !60, size: 32, offset: 1984)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2048, file: !56, line: 2464, baseType: !2063, size: 32, offset: 2016)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !2048, file: !56, line: 2465, baseType: !60, size: 32, offset: 2048)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2048, file: !56, line: 2466, baseType: !2063, size: 32, offset: 2080)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !2048, file: !56, line: 2467, baseType: !60, size: 32, offset: 2112)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2048, file: !56, line: 2468, baseType: !2063, size: 32, offset: 2144)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !2048, file: !56, line: 2469, baseType: !60, size: 32, offset: 2176)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2048, file: !56, line: 2470, baseType: !2083, size: 224, offset: 2208)
!2083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 224, elements: !2084)
!2084 = !{!2085}
!2085 = !DISubrange(count: 28)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !2048, file: !56, line: 2471, baseType: !60, size: 32, offset: 2432)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !2048, file: !56, line: 2472, baseType: !2063, size: 32, offset: 2464)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !2048, file: !56, line: 2473, baseType: !60, size: 32, offset: 2496)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !2048, file: !56, line: 2474, baseType: !933, size: 96, offset: 2528)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !2048, file: !56, line: 2475, baseType: !60, size: 32, offset: 2624)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !2048, file: !56, line: 2476, baseType: !2063, size: 32, offset: 2656)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !2048, file: !56, line: 2477, baseType: !60, size: 32, offset: 2688)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !2048, file: !56, line: 2478, baseType: !2063, size: 32, offset: 2720)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !2048, file: !56, line: 2479, baseType: !60, size: 32, offset: 2752)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !2048, file: !56, line: 2480, baseType: !2063, size: 32, offset: 2784)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !2048, file: !56, line: 2481, baseType: !60, size: 32, offset: 2816)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !2048, file: !56, line: 2482, baseType: !933, size: 96, offset: 2848)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !2048, file: !56, line: 2483, baseType: !60, size: 32, offset: 2944)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !2048, file: !56, line: 2484, baseType: !2063, size: 32, offset: 2976)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !2048, file: !56, line: 2485, baseType: !60, size: 32, offset: 3008)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !2048, file: !56, line: 2486, baseType: !2063, size: 32, offset: 3040)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !2048, file: !56, line: 2487, baseType: !60, size: 32, offset: 3072)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !2048, file: !56, line: 2488, baseType: !2058, size: 160, offset: 3104)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !2048, file: !56, line: 2489, baseType: !60, size: 32, offset: 3264)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !2048, file: !56, line: 2490, baseType: !2063, size: 32, offset: 3296)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !2048, file: !56, line: 2491, baseType: !60, size: 32, offset: 3328)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !2048, file: !56, line: 2492, baseType: !2108, size: 736, offset: 3360)
!2108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 736, elements: !2109)
!2109 = !{!2110}
!2110 = !DISubrange(count: 92)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !2048, file: !56, line: 2493, baseType: !60, size: 32, offset: 4096)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !2048, file: !56, line: 2494, baseType: !2063, size: 32, offset: 4128)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !2048, file: !56, line: 2495, baseType: !60, size: 32, offset: 4160)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !2048, file: !56, line: 2496, baseType: !2063, size: 32, offset: 4192)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !2048, file: !56, line: 2497, baseType: !60, size: 32, offset: 4224)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !2048, file: !56, line: 2498, baseType: !2063, size: 32, offset: 4256)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !2048, file: !56, line: 2499, baseType: !60, size: 32, offset: 4288)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !2048, file: !56, line: 2500, baseType: !2063, size: 32, offset: 4320)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !2048, file: !56, line: 2501, baseType: !60, size: 32, offset: 4352)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !2048, file: !56, line: 2502, baseType: !2063, size: 32, offset: 4384)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !2048, file: !56, line: 2503, baseType: !60, size: 32, offset: 4416)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !2048, file: !56, line: 2504, baseType: !2063, size: 32, offset: 4448)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !2048, file: !56, line: 2505, baseType: !60, size: 32, offset: 4480)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !2048, file: !56, line: 2506, baseType: !2063, size: 32, offset: 4512)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !2048, file: !56, line: 2507, baseType: !60, size: 32, offset: 4544)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !2048, file: !56, line: 2508, baseType: !2063, size: 32, offset: 4576)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !2048, file: !56, line: 2509, baseType: !60, size: 32, offset: 4608)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !2048, file: !56, line: 2510, baseType: !2066, size: 480, offset: 4640)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !2048, file: !56, line: 2511, baseType: !60, size: 32, offset: 5120)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !2048, file: !56, line: 2512, baseType: !2131, size: 992, offset: 5152)
!2131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 992, elements: !2132)
!2132 = !{!2133}
!2133 = !DISubrange(count: 124)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !2048, file: !56, line: 2513, baseType: !60, size: 32, offset: 6144)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !2048, file: !56, line: 2514, baseType: !2063, size: 32, offset: 6176)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !2048, file: !56, line: 2515, baseType: !60, size: 32, offset: 6208)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !2048, file: !56, line: 2516, baseType: !2063, size: 32, offset: 6240)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !2048, file: !56, line: 2517, baseType: !60, size: 32, offset: 6272)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !2048, file: !56, line: 2518, baseType: !2063, size: 32, offset: 6304)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !2048, file: !56, line: 2519, baseType: !60, size: 32, offset: 6336)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !2048, file: !56, line: 2520, baseType: !2058, size: 160, offset: 6368)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !2048, file: !56, line: 2521, baseType: !60, size: 32, offset: 6528)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !2048, file: !56, line: 2522, baseType: !2058, size: 160, offset: 6560)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !2048, file: !56, line: 2523, baseType: !60, size: 32, offset: 6720)
!2145 = !DIGlobalVariableExpression(var: !2146, expr: !DIExpression())
!2146 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !2028, file: !2029, line: 485, type: !60, isLocal: false, isDefinition: true)
!2147 = !DIGlobalVariableExpression(var: !2148, expr: !DIExpression())
!2148 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !2028, file: !2029, line: 68, type: !61, isLocal: false, isDefinition: true)
!2149 = !DIGlobalVariableExpression(var: !2150, expr: !DIExpression())
!2150 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !2028, file: !2029, line: 69, type: !61, isLocal: false, isDefinition: true)
!2151 = !DIGlobalVariableExpression(var: !2152, expr: !DIExpression())
!2152 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !2028, file: !2029, line: 70, type: !61, isLocal: false, isDefinition: true)
!2153 = !DIGlobalVariableExpression(var: !2154, expr: !DIExpression())
!2154 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !2028, file: !2029, line: 71, type: !61, isLocal: false, isDefinition: true)
!2155 = !DIGlobalVariableExpression(var: !2156, expr: !DIExpression())
!2156 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !2028, file: !2029, line: 72, type: !61, isLocal: false, isDefinition: true)
!2157 = !DIGlobalVariableExpression(var: !2158, expr: !DIExpression())
!2158 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !2028, file: !2029, line: 73, type: !61, isLocal: false, isDefinition: true)
!2159 = !DIGlobalVariableExpression(var: !2160, expr: !DIExpression())
!2160 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !2028, file: !2029, line: 74, type: !61, isLocal: false, isDefinition: true)
!2161 = !DIGlobalVariableExpression(var: !2162, expr: !DIExpression())
!2162 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !2028, file: !2029, line: 75, type: !61, isLocal: false, isDefinition: true)
!2163 = !DIGlobalVariableExpression(var: !2164, expr: !DIExpression())
!2164 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !2028, file: !2029, line: 76, type: !61, isLocal: false, isDefinition: true)
!2165 = !DIGlobalVariableExpression(var: !2166, expr: !DIExpression())
!2166 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !2028, file: !2029, line: 77, type: !61, isLocal: false, isDefinition: true)
!2167 = !DIGlobalVariableExpression(var: !2168, expr: !DIExpression())
!2168 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !2028, file: !2029, line: 78, type: !61, isLocal: false, isDefinition: true)
!2169 = !DIGlobalVariableExpression(var: !2170, expr: !DIExpression())
!2170 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !2028, file: !2029, line: 79, type: !61, isLocal: false, isDefinition: true)
!2171 = !DIGlobalVariableExpression(var: !2172, expr: !DIExpression())
!2172 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !2028, file: !2029, line: 80, type: !61, isLocal: false, isDefinition: true)
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !2028, file: !2029, line: 84, type: !2047, isLocal: false, isDefinition: true)
!2175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2176, size: 416, elements: !76)
!2176 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !2032, line: 60, baseType: !2177)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2032, line: 45, size: 416, elements: !2178)
!2178 = !{!2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !2177, file: !2032, line: 46, baseType: !61, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !2177, file: !2032, line: 47, baseType: !61, size: 32, offset: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !2177, file: !2032, line: 48, baseType: !61, size: 32, offset: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !2177, file: !2032, line: 49, baseType: !61, size: 32, offset: 96)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !2177, file: !2032, line: 50, baseType: !61, size: 32, offset: 128)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !2177, file: !2032, line: 51, baseType: !61, size: 32, offset: 160)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !2177, file: !2032, line: 52, baseType: !61, size: 32, offset: 192)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !2177, file: !2032, line: 53, baseType: !61, size: 32, offset: 224)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !2177, file: !2032, line: 54, baseType: !61, size: 32, offset: 256)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !2177, file: !2032, line: 55, baseType: !61, size: 32, offset: 288)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !2177, file: !2032, line: 56, baseType: !61, size: 32, offset: 320)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !2177, file: !2032, line: 57, baseType: !61, size: 32, offset: 352)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !2177, file: !2032, line: 58, baseType: !61, size: 32, offset: 384)
!2192 = !DIGlobalVariableExpression(var: !2193, expr: !DIExpression())
!2193 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !2194, file: !2195, line: 48, type: !2203, isLocal: false, isDefinition: true)
!2194 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2195, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2196, globals: !2202, splitDebugInlining: false, nameTableKind: None)
!2195 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!2196 = !{!2197}
!2197 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1023, line: 100, baseType: !18, size: 32, elements: !2198)
!2198 = !{!2199, !2200, !2201}
!2199 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!2200 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!2201 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!2202 = !{!2192}
!2203 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !1023, line: 104, baseType: !2197)
!2204 = !DIGlobalVariableExpression(var: !2205, expr: !DIExpression())
!2205 = distinct !DIGlobalVariable(name: "heap_end", scope: !2206, file: !2207, line: 69, type: !2212, isLocal: true, isDefinition: true)
!2206 = distinct !DISubprogram(name: "_sbrk_r", scope: !2207, file: !2207, line: 66, type: !2208, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !2403)
!2207 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!2208 = !DISubroutineType(types: !2209)
!2209 = !{!2210, !2213, !2398}
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !2211, line: 123, baseType: !2212)
!2211 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 32)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !2215, line: 377, size: 1920, elements: !2216)
!2215 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!2216 = !{!2217, !2218, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2297, !2318, !2322, !2323, !2324, !2325, !2335, !2348, !2349, !2354, !2372, !2373, !2380, !2381, !2397}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !2214, file: !2215, line: 381, baseType: !7, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !2214, file: !2215, line: 386, baseType: !2219, size: 32, offset: 32)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !2215, line: 292, baseType: !2221)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !2215, line: 186, size: 832, elements: !2222)
!2222 = !{!2223, !2225, !2226, !2227, !2228, !2229, !2234, !2235, !2236, !2237, !2241, !2246, !2253, !2257, !2258, !2259, !2260, !2262, !2264, !2265, !2266, !2268, !2274, !2287}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !2221, file: !2215, line: 187, baseType: !2224, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !2221, file: !2215, line: 188, baseType: !7, size: 32, offset: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !2221, file: !2215, line: 189, baseType: !7, size: 32, offset: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2221, file: !2215, line: 190, baseType: !1482, size: 16, offset: 96)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !2221, file: !2215, line: 191, baseType: !1482, size: 16, offset: 112)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !2221, file: !2215, line: 192, baseType: !2230, size: 64, offset: 128)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !2215, line: 122, size: 64, elements: !2231)
!2231 = !{!2232, !2233}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !2230, file: !2215, line: 123, baseType: !2224, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !2230, file: !2215, line: 124, baseType: !7, size: 32, offset: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !2221, file: !2215, line: 193, baseType: !7, size: 32, offset: 192)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !2221, file: !2215, line: 196, baseType: !2213, size: 32, offset: 224)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !2221, file: !2215, line: 200, baseType: !88, size: 32, offset: 256)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !2221, file: !2215, line: 202, baseType: !2238, size: 32, offset: 288)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 32)
!2239 = !DISubroutineType(types: !2240)
!2240 = !{!7, !2213, !88, !2212, !7}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !2221, file: !2215, line: 204, baseType: !2242, size: 32, offset: 320)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 32)
!2243 = !DISubroutineType(types: !2244)
!2244 = !{!7, !2213, !88, !2245, !7}
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !2221, file: !2215, line: 207, baseType: !2247, size: 32, offset: 352)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 32)
!2248 = !DISubroutineType(types: !2249)
!2249 = !{!2250, !2213, !88, !2250, !7}
!2250 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !2251, line: 116, baseType: !2252)
!2251 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!2252 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !2221, file: !2215, line: 208, baseType: !2254, size: 32, offset: 384)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 32)
!2255 = !DISubroutineType(types: !2256)
!2256 = !{!7, !2213, !88}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !2221, file: !2215, line: 211, baseType: !2230, size: 64, offset: 416)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !2221, file: !2215, line: 212, baseType: !2224, size: 32, offset: 480)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !2221, file: !2215, line: 213, baseType: !7, size: 32, offset: 512)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !2221, file: !2215, line: 216, baseType: !2261, size: 24, offset: 544)
!2261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 24, elements: !1367)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !2221, file: !2215, line: 217, baseType: !2263, size: 8, offset: 568)
!2263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 8, elements: !76)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !2221, file: !2215, line: 220, baseType: !2230, size: 64, offset: 576)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !2221, file: !2215, line: 223, baseType: !7, size: 32, offset: 640)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2221, file: !2215, line: 224, baseType: !2267, size: 32, offset: 672)
!2267 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !2251, line: 46, baseType: !2252)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2221, file: !2215, line: 231, baseType: !2269, size: 32, offset: 704)
!2269 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !2215, line: 35, baseType: !2270)
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !2271, line: 34, baseType: !2272)
!2271 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 32)
!2273 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !2271, line: 33, flags: DIFlagFwdDecl)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !2221, file: !2215, line: 233, baseType: !2275, size: 64, offset: 736)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !2251, line: 170, baseType: !2276)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2251, line: 162, size: 64, elements: !2277)
!2277 = !{!2278, !2279}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2276, file: !2251, line: 164, baseType: !7, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2276, file: !2251, line: 169, baseType: !2280, size: 32, offset: 32)
!2280 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2276, file: !2251, line: 165, size: 32, elements: !2281)
!2281 = !{!2282, !2285}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2280, file: !2251, line: 167, baseType: !2283, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2284, line: 116, baseType: !7)
!2284 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2280, file: !2251, line: 168, baseType: !2286, size: 32)
!2286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 32, elements: !463)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2221, file: !2215, line: 234, baseType: !7, size: 32, offset: 800)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !2214, file: !2215, line: 386, baseType: !2219, size: 32, offset: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !2214, file: !2215, line: 386, baseType: !2219, size: 32, offset: 96)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !2214, file: !2215, line: 388, baseType: !7, size: 32, offset: 128)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !2214, file: !2215, line: 390, baseType: !2212, size: 32, offset: 160)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !2214, file: !2215, line: 392, baseType: !7, size: 32, offset: 192)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !2214, file: !2215, line: 394, baseType: !7, size: 32, offset: 224)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !2214, file: !2215, line: 395, baseType: !2295, size: 32, offset: 256)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2296 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !2215, line: 45, flags: DIFlagFwdDecl)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !2214, file: !2215, line: 397, baseType: !2298, size: 32, offset: 288)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 32)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !2215, line: 349, size: 128, elements: !2300)
!2300 = !{!2301, !2314, !2315, !2316}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !2299, file: !2215, line: 352, baseType: !2302, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 32)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !2215, line: 52, size: 192, elements: !2304)
!2304 = !{!2305, !2306, !2307, !2308, !2309, !2310}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2303, file: !2215, line: 54, baseType: !2302, size: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !2303, file: !2215, line: 55, baseType: !7, size: 32, offset: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !2303, file: !2215, line: 55, baseType: !7, size: 32, offset: 64)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !2303, file: !2215, line: 55, baseType: !7, size: 32, offset: 96)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !2303, file: !2215, line: 55, baseType: !7, size: 32, offset: 128)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !2303, file: !2215, line: 56, baseType: !2311, size: 32, offset: 160)
!2311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2312, size: 32, elements: !76)
!2312 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !2215, line: 22, baseType: !2313)
!2313 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !2299, file: !2215, line: 353, baseType: !7, size: 32, offset: 32)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !2299, file: !2215, line: 354, baseType: !2302, size: 32, offset: 64)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !2299, file: !2215, line: 355, baseType: !2317, size: 32, offset: 96)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !2214, file: !2215, line: 399, baseType: !2319, size: 32, offset: 320)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 32)
!2320 = !DISubroutineType(types: !2321)
!2321 = !{null, !2213}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !2214, file: !2215, line: 401, baseType: !7, size: 32, offset: 352)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !2214, file: !2215, line: 404, baseType: !7, size: 32, offset: 384)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !2214, file: !2215, line: 405, baseType: !2212, size: 32, offset: 416)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !2214, file: !2215, line: 407, baseType: !2326, size: 32, offset: 448)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 32)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !2215, line: 324, size: 192, elements: !2328)
!2328 = !{!2329, !2331, !2332, !2333}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !2327, file: !2215, line: 325, baseType: !2330, size: 48)
!2330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1078, size: 48, elements: !1367)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !2327, file: !2215, line: 326, baseType: !2330, size: 48, offset: 48)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !2327, file: !2215, line: 327, baseType: !1078, size: 16, offset: 96)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !2327, file: !2215, line: 330, baseType: !2334, size: 64, offset: 128)
!2334 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !2214, file: !2215, line: 408, baseType: !2336, size: 32, offset: 480)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 32)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !2215, line: 60, size: 288, elements: !2338)
!2338 = !{!2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !2337, file: !2215, line: 62, baseType: !7, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !2337, file: !2215, line: 63, baseType: !7, size: 32, offset: 32)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !2337, file: !2215, line: 64, baseType: !7, size: 32, offset: 64)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !2337, file: !2215, line: 65, baseType: !7, size: 32, offset: 96)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !2337, file: !2215, line: 66, baseType: !7, size: 32, offset: 128)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !2337, file: !2215, line: 67, baseType: !7, size: 32, offset: 160)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !2337, file: !2215, line: 68, baseType: !7, size: 32, offset: 192)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !2337, file: !2215, line: 69, baseType: !7, size: 32, offset: 224)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !2337, file: !2215, line: 70, baseType: !7, size: 32, offset: 256)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !2214, file: !2215, line: 409, baseType: !2212, size: 32, offset: 512)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !2214, file: !2215, line: 412, baseType: !2350, size: 32, offset: 544)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 32)
!2352 = !DISubroutineType(types: !2353)
!2353 = !{null, !7}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !2214, file: !2215, line: 416, baseType: !2355, size: 32, offset: 576)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 32)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !2215, line: 90, size: 1120, elements: !2357)
!2357 = !{!2358, !2359, !2360, !2363}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2356, file: !2215, line: 91, baseType: !2355, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !2356, file: !2215, line: 92, baseType: !7, size: 32, offset: 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !2356, file: !2215, line: 93, baseType: !2361, size: 1024, offset: 64)
!2361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2362, size: 1024, elements: !330)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !2356, file: !2215, line: 94, baseType: !2364, size: 32, offset: 1088)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 32)
!2365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !2215, line: 79, size: 2112, elements: !2366)
!2366 = !{!2367, !2369, !2370, !2371}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !2365, file: !2215, line: 80, baseType: !2368, size: 1024)
!2368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 1024, elements: !330)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !2365, file: !2215, line: 81, baseType: !2368, size: 1024, offset: 1024)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !2365, file: !2215, line: 83, baseType: !2312, size: 32, offset: 2048)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !2365, file: !2215, line: 86, baseType: !2312, size: 32, offset: 2080)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !2214, file: !2215, line: 417, baseType: !2356, size: 1120, offset: 608)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !2214, file: !2215, line: 420, baseType: !2374, size: 96, offset: 1728)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !2215, line: 296, size: 96, elements: !2375)
!2375 = !{!2376, !2378, !2379}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2374, file: !2215, line: 298, baseType: !2377, size: 32)
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !2374, file: !2215, line: 299, baseType: !7, size: 32, offset: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !2374, file: !2215, line: 300, baseType: !2219, size: 32, offset: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !2214, file: !2215, line: 421, baseType: !2219, size: 32, offset: 1824)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !2214, file: !2215, line: 422, baseType: !2382, size: 32, offset: 1856)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 32)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !2215, line: 359, size: 640, elements: !2384)
!2384 = !{!2385, !2386, !2387, !2388, !2389, !2391, !2392, !2393, !2394, !2395, !2396}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !2383, file: !2215, line: 362, baseType: !2212, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !2383, file: !2215, line: 363, baseType: !2275, size: 64, offset: 32)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !2383, file: !2215, line: 364, baseType: !2275, size: 64, offset: 96)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !2383, file: !2215, line: 365, baseType: !2275, size: 64, offset: 160)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !2383, file: !2215, line: 366, baseType: !2390, size: 64, offset: 224)
!2390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1524, size: 64, elements: !753)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !2383, file: !2215, line: 367, baseType: !7, size: 32, offset: 288)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !2383, file: !2215, line: 368, baseType: !2275, size: 64, offset: 320)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !2383, file: !2215, line: 369, baseType: !2275, size: 64, offset: 384)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !2383, file: !2215, line: 370, baseType: !2275, size: 64, offset: 448)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !2383, file: !2215, line: 371, baseType: !2275, size: 64, offset: 512)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !2383, file: !2215, line: 372, baseType: !2275, size: 64, offset: 576)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !2214, file: !2215, line: 423, baseType: !2212, size: 32, offset: 1888)
!2398 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2284, line: 46, baseType: !18)
!2399 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2400, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2401, globals: !2402, splitDebugInlining: false, nameTableKind: None)
!2400 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!2401 = !{!2212, !2210}
!2402 = !{!2204}
!2403 = !{!2404, !2405, !2406, !2407}
!2404 = !DILocalVariable(name: "r", arg: 1, scope: !2206, file: !2207, line: 66, type: !2213)
!2405 = !DILocalVariable(name: "nbytes", arg: 2, scope: !2206, file: !2207, line: 66, type: !2398)
!2406 = !DILocalVariable(name: "prev_heap_end", scope: !2206, file: !2207, line: 70, type: !2212)
!2407 = !DILocalVariable(name: "stack", scope: !2206, file: !2207, line: 71, type: !2212)
!2408 = !DIGlobalVariableExpression(var: !2409, expr: !DIExpression())
!2409 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !2410, file: !2411, line: 52, type: !60, isLocal: true, isDefinition: true)
!2410 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2411, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2412, globals: !2515, splitDebugInlining: false, nameTableKind: None)
!2411 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/wdt_feed_watchdog/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!2412 = !{!2413, !2421, !61, !2466, !2471, !2496}
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 32)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !923, line: 656, baseType: !2415)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !923, line: 650, size: 128, elements: !2416)
!2416 = !{!2417, !2418, !2419, !2420}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2415, file: !923, line: 652, baseType: !60, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2415, file: !923, line: 653, baseType: !60, size: 32, offset: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2415, file: !923, line: 654, baseType: !60, size: 32, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2415, file: !923, line: 655, baseType: !272, size: 32, offset: 96)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 32)
!2422 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !56, line: 1952, baseType: !2423)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1921, size: 8288, elements: !2424)
!2424 = !{!2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2435, !2436, !2440, !2441, !2443, !2444, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2463, !2464, !2465}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !2423, file: !56, line: 1922, baseType: !60, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !2423, file: !56, line: 1923, baseType: !60, size: 32, offset: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !2423, file: !56, line: 1924, baseType: !60, size: 32, offset: 64)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !2423, file: !56, line: 1925, baseType: !60, size: 32, offset: 96)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !2423, file: !56, line: 1926, baseType: !60, size: 32, offset: 128)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !2423, file: !56, line: 1927, baseType: !60, size: 32, offset: 160)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !2423, file: !56, line: 1928, baseType: !60, size: 32, offset: 192)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !2423, file: !56, line: 1929, baseType: !60, size: 32, offset: 224)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !2423, file: !56, line: 1930, baseType: !2434, size: 768, offset: 256)
!2434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 768, elements: !963)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !2423, file: !56, line: 1931, baseType: !60, size: 32, offset: 1024)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !2423, file: !56, line: 1932, baseType: !2437, size: 992, offset: 1056)
!2437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 992, elements: !2438)
!2438 = !{!2439}
!2439 = !DISubrange(count: 31)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !2423, file: !56, line: 1933, baseType: !60, size: 32, offset: 2048)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !2423, file: !56, line: 1934, baseType: !2442, size: 416, offset: 2080)
!2442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 416, elements: !773)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !2423, file: !56, line: 1935, baseType: !60, size: 32, offset: 2496)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !2423, file: !56, line: 1936, baseType: !2445, size: 1568, offset: 2528)
!2445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 1568, elements: !2446)
!2446 = !{!2447}
!2447 = !DISubrange(count: 49)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !2423, file: !56, line: 1937, baseType: !272, size: 32, offset: 4096)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !2423, file: !56, line: 1938, baseType: !272, size: 32, offset: 4128)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !2423, file: !56, line: 1939, baseType: !272, size: 32, offset: 4160)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !2423, file: !56, line: 1940, baseType: !60, size: 32, offset: 4192)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !2423, file: !56, line: 1941, baseType: !60, size: 32, offset: 4224)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !2423, file: !56, line: 1942, baseType: !60, size: 32, offset: 4256)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !2423, file: !56, line: 1943, baseType: !60, size: 32, offset: 4288)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !2423, file: !56, line: 1944, baseType: !60, size: 32, offset: 4320)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !2423, file: !56, line: 1945, baseType: !60, size: 32, offset: 4352)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !2423, file: !56, line: 1946, baseType: !60, size: 32, offset: 4384)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !2423, file: !56, line: 1947, baseType: !60, size: 32, offset: 4416)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !2423, file: !56, line: 1948, baseType: !2460, size: 3744, offset: 4448)
!2460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 3744, elements: !2461)
!2461 = !{!2462}
!2462 = !DISubrange(count: 117)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !2423, file: !56, line: 1949, baseType: !60, size: 32, offset: 8192)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !2423, file: !56, line: 1950, baseType: !60, size: 32, offset: 8224)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !2423, file: !56, line: 1951, baseType: !272, size: 32, offset: 8256)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !56, line: 2158, baseType: !2468)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2156, size: 32, elements: !2469)
!2469 = !{!2470}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !2468, file: !56, line: 2157, baseType: !60, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !923, line: 418, baseType: !2473)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !923, line: 395, size: 1120, elements: !2474)
!2474 = !{!2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2473, file: !923, line: 397, baseType: !272, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2473, file: !923, line: 398, baseType: !60, size: 32, offset: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2473, file: !923, line: 399, baseType: !60, size: 32, offset: 64)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2473, file: !923, line: 400, baseType: !60, size: 32, offset: 96)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2473, file: !923, line: 401, baseType: !60, size: 32, offset: 128)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2473, file: !923, line: 402, baseType: !60, size: 32, offset: 160)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2473, file: !923, line: 403, baseType: !933, size: 96, offset: 192)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2473, file: !923, line: 404, baseType: !60, size: 32, offset: 288)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2473, file: !923, line: 405, baseType: !60, size: 32, offset: 320)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2473, file: !923, line: 406, baseType: !60, size: 32, offset: 352)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2473, file: !923, line: 407, baseType: !60, size: 32, offset: 384)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2473, file: !923, line: 408, baseType: !60, size: 32, offset: 416)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2473, file: !923, line: 409, baseType: !60, size: 32, offset: 448)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2473, file: !923, line: 410, baseType: !60, size: 32, offset: 480)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2473, file: !923, line: 411, baseType: !943, size: 64, offset: 512)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2473, file: !923, line: 412, baseType: !272, size: 32, offset: 576)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2473, file: !923, line: 413, baseType: !272, size: 32, offset: 608)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2473, file: !923, line: 414, baseType: !947, size: 128, offset: 640)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2473, file: !923, line: 415, baseType: !949, size: 160, offset: 768)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2473, file: !923, line: 416, baseType: !953, size: 160, offset: 928)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2473, file: !923, line: 417, baseType: !60, size: 32, offset: 1088)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !2498)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !2499)
!2499 = !{!2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !2498, file: !56, line: 261, baseType: !60, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !2498, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !2498, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !2498, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !2498, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !2498, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !2498, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !2498, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !2498, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !2498, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2498, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !2498, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2498, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !2498, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !2498, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!2515 = !{!2516, !2408}
!2516 = !DIGlobalVariableExpression(var: !2517, expr: !DIExpression())
!2517 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2410, file: !2411, line: 50, type: !61, isLocal: false, isDefinition: true)
!2518 = !DIGlobalVariableExpression(var: !2519, expr: !DIExpression())
!2519 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2520, file: !2525, line: 4, type: !2531, isLocal: false, isDefinition: true)
!2520 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2521, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2522, splitDebugInlining: false, nameTableKind: None)
!2521 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!2522 = !{!2518, !2523, !2529}
!2523 = !DIGlobalVariableExpression(var: !2524, expr: !DIExpression())
!2524 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2520, file: !2525, line: 5, type: !2526, isLocal: false, isDefinition: true)
!2525 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!2526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1524, size: 88, elements: !2527)
!2527 = !{!2528}
!2528 = !DISubrange(count: 11)
!2529 = !DIGlobalVariableExpression(var: !2530, expr: !DIExpression())
!2530 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2520, file: !2525, line: 6, type: !2526, isLocal: false, isDefinition: true)
!2531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1524, size: 248, elements: !2438)
!2532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2533, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2534, retainedTypes: !2557, splitDebugInlining: false, nameTableKind: None)
!2533 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!2534 = !{!1951, !245, !259, !2535, !2539, !254, !157}
!2535 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 857, baseType: !18, size: 32, elements: !2536)
!2536 = !{!2537, !2538}
!2537 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!2538 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!2539 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 87, baseType: !18, size: 32, elements: !2540)
!2540 = !{!2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556}
!2541 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!2542 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!2543 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!2544 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!2545 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!2546 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!2547 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!2548 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!2549 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!2550 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!2551 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!2552 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!2553 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!2554 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!2555 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!2556 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!2557 = !{!61, !88, !307}
!2558 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2559, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2560, retainedTypes: !2561, splitDebugInlining: false, nameTableKind: None)
!2559 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!2560 = !{!693, !699, !703, !786}
!2561 = !{!460}
!2562 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2563, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2564, retainedTypes: !2565, splitDebugInlining: false, nameTableKind: None)
!2563 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_wdt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!2564 = !{!881}
!2565 = !{!2566}
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_typedef, name: "WDT_REGISTER_T", file: !56, line: 1898, baseType: !2568)
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1888, size: 288, elements: !2569)
!2569 = !{!2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_MODE", scope: !2568, file: !56, line: 1889, baseType: !60, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_LENGTH", scope: !2568, file: !56, line: 1890, baseType: !60, size: 32, offset: 32)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_RESTART", scope: !2568, file: !56, line: 1891, baseType: !60, size: 32, offset: 64)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_STA", scope: !2568, file: !56, line: 1892, baseType: !60, size: 32, offset: 96)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !2568, file: !56, line: 1893, baseType: !60, size: 32, offset: 128)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !2568, file: !56, line: 1894, baseType: !60, size: 32, offset: 160)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_INTERVAL", scope: !2568, file: !56, line: 1895, baseType: !60, size: 32, offset: 192)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_SWRST", scope: !2568, file: !56, line: 1896, baseType: !60, size: 32, offset: 224)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_CON0", scope: !2568, file: !56, line: 1897, baseType: !60, size: 32, offset: 256)
!2579 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2580, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2581, retainedTypes: !2582, splitDebugInlining: false, nameTableKind: None)
!2580 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!2581 = !{!168, !715}
!2582 = !{!862, !2583, !61, !2608, !985}
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 32)
!2584 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !923, line: 418, baseType: !2585)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !923, line: 395, size: 1120, elements: !2586)
!2586 = !{!2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2585, file: !923, line: 397, baseType: !272, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2585, file: !923, line: 398, baseType: !60, size: 32, offset: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2585, file: !923, line: 399, baseType: !60, size: 32, offset: 64)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2585, file: !923, line: 400, baseType: !60, size: 32, offset: 96)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2585, file: !923, line: 401, baseType: !60, size: 32, offset: 128)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2585, file: !923, line: 402, baseType: !60, size: 32, offset: 160)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2585, file: !923, line: 403, baseType: !933, size: 96, offset: 192)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2585, file: !923, line: 404, baseType: !60, size: 32, offset: 288)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2585, file: !923, line: 405, baseType: !60, size: 32, offset: 320)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2585, file: !923, line: 406, baseType: !60, size: 32, offset: 352)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2585, file: !923, line: 407, baseType: !60, size: 32, offset: 384)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2585, file: !923, line: 408, baseType: !60, size: 32, offset: 416)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2585, file: !923, line: 409, baseType: !60, size: 32, offset: 448)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2585, file: !923, line: 410, baseType: !60, size: 32, offset: 480)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2585, file: !923, line: 411, baseType: !943, size: 64, offset: 512)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2585, file: !923, line: 412, baseType: !272, size: 32, offset: 576)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2585, file: !923, line: 413, baseType: !272, size: 32, offset: 608)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2585, file: !923, line: 414, baseType: !947, size: 128, offset: 640)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2585, file: !923, line: 415, baseType: !949, size: 160, offset: 768)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2585, file: !923, line: 416, baseType: !953, size: 160, offset: 928)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2585, file: !923, line: 417, baseType: !60, size: 32, offset: 1088)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !923, line: 378, baseType: !2610)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !923, line: 363, size: 28704, elements: !2611)
!2611 = !{!2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2610, file: !923, line: 365, baseType: !960, size: 256)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2610, file: !923, line: 366, baseType: !962, size: 768, offset: 256)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2610, file: !923, line: 367, baseType: !960, size: 256, offset: 1024)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !2610, file: !923, line: 368, baseType: !962, size: 768, offset: 1280)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2610, file: !923, line: 369, baseType: !960, size: 256, offset: 2048)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2610, file: !923, line: 370, baseType: !962, size: 768, offset: 2304)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2610, file: !923, line: 371, baseType: !960, size: 256, offset: 3072)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2610, file: !923, line: 372, baseType: !962, size: 768, offset: 3328)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2610, file: !923, line: 373, baseType: !960, size: 256, offset: 4096)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2610, file: !923, line: 374, baseType: !973, size: 1792, offset: 4352)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2610, file: !923, line: 375, baseType: !977, size: 1920, offset: 6144)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2610, file: !923, line: 376, baseType: !981, size: 20608, offset: 8064)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2610, file: !923, line: 377, baseType: !60, size: 32, offset: 28672)
!2625 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2626, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2626 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!2627 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2628, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2628 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!2629 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2630, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2631, splitDebugInlining: false, nameTableKind: None)
!2630 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/wdt_feed_watchdog/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!2631 = !{!631, !677, !693, !699, !703, !348, !877, !871}
!2632 = !{!"Ubuntu clang version 14.0.6"}
!2633 = !{i32 7, !"Dwarf Version", i32 2}
!2634 = !{i32 2, !"Debug Info Version", i32 3}
!2635 = !{i32 1, !"wchar_size", i32 4}
!2636 = !{i32 1, !"min_enum_size", i32 4}
!2637 = !{i32 1, !"branch-target-enforcement", i32 0}
!2638 = !{i32 1, !"sign-return-address", i32 0}
!2639 = !{i32 1, !"sign-return-address-all", i32 0}
!2640 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2641 = !{i32 7, !"frame-pointer", i32 2}
!2642 = distinct !DISubprogram(name: "hal_cache_init", scope: !3, file: !3, line: 53, type: !2643, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2646)
!2643 = !DISubroutineType(types: !2644)
!2644 = !{!2645}
!2645 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !6, line: 172, baseType: !5)
!2646 = !{!2647, !2649}
!2647 = !DILocalVariable(name: "region", scope: !2642, file: !3, line: 55, type: !2648)
!2648 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !6, line: 204, baseType: !17)
!2649 = !DILocalVariable(name: "irq_flag", scope: !2642, file: !3, line: 56, type: !61)
!2650 = !DILocation(line: 59, column: 16, scope: !2642)
!2651 = !DILocation(line: 0, scope: !2642)
!2652 = !DILocation(line: 62, column: 9, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2642, file: !3, line: 62, column: 9)
!2654 = !{i8 0, i8 2}
!2655 = !DILocation(line: 62, column: 9, scope: !2642)
!2656 = !DILocation(line: 64, column: 9, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2653, file: !3, line: 62, column: 39)
!2658 = !DILocation(line: 66, column: 9, scope: !2657)
!2659 = !DILocation(line: 69, column: 24, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !2653, file: !3, line: 67, column: 12)
!2661 = !DILocation(line: 72, column: 9, scope: !2660)
!2662 = !DILocation(line: 77, column: 5, scope: !2642)
!2663 = !DILocation(line: 80, column: 22, scope: !2642)
!2664 = !DILocation(line: 81, column: 28, scope: !2642)
!2665 = !DILocation(line: 84, column: 19, scope: !2642)
!2666 = !DILocation(line: 85, column: 23, scope: !2642)
!2667 = !DILocation(line: 88, column: 5, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2642, file: !3, line: 88, column: 5)
!2669 = !DILocation(line: 90, column: 9, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2671, file: !3, line: 88, column: 81)
!2671 = distinct !DILexicalBlock(scope: !2668, file: !3, line: 88, column: 5)
!2672 = !DILocation(line: 90, column: 38, scope: !2670)
!2673 = !DILocation(line: 91, column: 9, scope: !2670)
!2674 = !DILocation(line: 91, column: 42, scope: !2670)
!2675 = !DILocation(line: 94, column: 45, scope: !2670)
!2676 = !DILocation(line: 94, column: 47, scope: !2670)
!2677 = !DILocation(line: 95, column: 49, scope: !2670)
!2678 = !DILocation(line: 95, column: 51, scope: !2670)
!2679 = !DILocation(line: 88, column: 77, scope: !2671)
!2680 = !DILocation(line: 88, column: 46, scope: !2671)
!2681 = distinct !{!2681, !2667, !2682}
!2682 = !DILocation(line: 96, column: 5, scope: !2668)
!2683 = !DILocation(line: 99, column: 1, scope: !2642)
!2684 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !3, file: !3, line: 327, type: !2643, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2685)
!2685 = !{!2686}
!2686 = !DILocalVariable(name: "irq_flag", scope: !2684, file: !3, line: 329, type: !61)
!2687 = !DILocation(line: 332, column: 16, scope: !2684)
!2688 = !DILocation(line: 0, scope: !2684)
!2689 = !DILocation(line: 335, column: 21, scope: !2684)
!2690 = !DILocation(line: 336, column: 21, scope: !2684)
!2691 = !DILocation(line: 339, column: 21, scope: !2684)
!2692 = !DILocation(line: 340, column: 21, scope: !2684)
!2693 = !DILocation(line: 434, column: 3, scope: !2694, inlinedAt: !2696)
!2694 = distinct !DISubprogram(name: "__ISB", scope: !2695, file: !2695, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2695 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!2696 = distinct !DILocation(line: 343, column: 5, scope: !2684)
!2697 = !{i64 442812}
!2698 = !DILocation(line: 346, column: 5, scope: !2684)
!2699 = !DILocation(line: 348, column: 5, scope: !2684)
!2700 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !3, file: !3, line: 101, type: !2643, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2701)
!2701 = !{!2702}
!2702 = !DILocalVariable(name: "region", scope: !2700, file: !3, line: 103, type: !2648)
!2703 = !DILocation(line: 107, column: 5, scope: !2700)
!2704 = !DILocation(line: 110, column: 22, scope: !2700)
!2705 = !DILocation(line: 111, column: 28, scope: !2700)
!2706 = !DILocation(line: 114, column: 19, scope: !2700)
!2707 = !DILocation(line: 115, column: 23, scope: !2700)
!2708 = !DILocation(line: 0, scope: !2700)
!2709 = !DILocation(line: 118, column: 5, scope: !2710)
!2710 = distinct !DILexicalBlock(scope: !2700, file: !3, line: 118, column: 5)
!2711 = !DILocation(line: 120, column: 9, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 118, column: 81)
!2713 = distinct !DILexicalBlock(scope: !2710, file: !3, line: 118, column: 5)
!2714 = !DILocation(line: 120, column: 38, scope: !2712)
!2715 = !DILocation(line: 121, column: 9, scope: !2712)
!2716 = !DILocation(line: 121, column: 42, scope: !2712)
!2717 = !DILocation(line: 124, column: 45, scope: !2712)
!2718 = !DILocation(line: 124, column: 47, scope: !2712)
!2719 = !DILocation(line: 125, column: 49, scope: !2712)
!2720 = !DILocation(line: 125, column: 51, scope: !2712)
!2721 = !DILocation(line: 118, column: 77, scope: !2713)
!2722 = !DILocation(line: 118, column: 46, scope: !2713)
!2723 = distinct !{!2723, !2709, !2724}
!2724 = !DILocation(line: 126, column: 5, scope: !2710)
!2725 = !DILocation(line: 129, column: 20, scope: !2700)
!2726 = !DILocation(line: 131, column: 5, scope: !2700)
!2727 = distinct !DISubprogram(name: "hal_cache_enable", scope: !3, file: !3, line: 134, type: !2643, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2728 = !DILocation(line: 137, column: 45, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2727, file: !3, line: 137, column: 9)
!2730 = !DILocation(line: 137, column: 28, scope: !2729)
!2731 = !DILocation(line: 137, column: 9, scope: !2727)
!2732 = !DILocation(line: 142, column: 22, scope: !2727)
!2733 = !DILocation(line: 145, column: 28, scope: !2727)
!2734 = !DILocation(line: 145, column: 19, scope: !2727)
!2735 = !DILocation(line: 147, column: 5, scope: !2727)
!2736 = !DILocation(line: 0, scope: !2727)
!2737 = !DILocation(line: 148, column: 1, scope: !2727)
!2738 = distinct !DISubprogram(name: "hal_cache_disable", scope: !3, file: !3, line: 150, type: !2643, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2739)
!2739 = !{!2740}
!2740 = !DILocalVariable(name: "irq_flag", scope: !2738, file: !3, line: 152, type: !61)
!2741 = !DILocation(line: 155, column: 16, scope: !2738)
!2742 = !DILocation(line: 0, scope: !2738)
!2743 = !DILocation(line: 158, column: 16, scope: !2744)
!2744 = distinct !DILexicalBlock(scope: !2738, file: !3, line: 158, column: 9)
!2745 = !DILocation(line: 158, column: 26, scope: !2744)
!2746 = !DILocation(line: 158, column: 9, scope: !2738)
!2747 = !DILocation(line: 160, column: 9, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2744, file: !3, line: 158, column: 49)
!2749 = !DILocation(line: 161, column: 5, scope: !2748)
!2750 = !DILocation(line: 164, column: 22, scope: !2738)
!2751 = !DILocation(line: 167, column: 28, scope: !2738)
!2752 = !DILocation(line: 167, column: 19, scope: !2738)
!2753 = !DILocation(line: 170, column: 5, scope: !2738)
!2754 = !DILocation(line: 172, column: 5, scope: !2738)
!2755 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !3, file: !3, line: 175, type: !2756, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2758)
!2756 = !DISubroutineType(types: !2757)
!2757 = !{!2645, !2648}
!2758 = !{!2759}
!2759 = !DILocalVariable(name: "region", arg: 1, scope: !2755, file: !3, line: 175, type: !2648)
!2760 = !DILocation(line: 0, scope: !2755)
!2761 = !DILocation(line: 178, column: 16, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 178, column: 9)
!2763 = !DILocation(line: 178, column: 9, scope: !2755)
!2764 = !DILocation(line: 183, column: 9, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 183, column: 9)
!2766 = !DILocation(line: 183, column: 38, scope: !2765)
!2767 = !DILocation(line: 183, column: 9, scope: !2755)
!2768 = !DILocation(line: 184, column: 38, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2765, file: !3, line: 183, column: 62)
!2770 = !DILocation(line: 184, column: 32, scope: !2769)
!2771 = !DILocation(line: 190, column: 32, scope: !2755)
!2772 = !DILocation(line: 190, column: 23, scope: !2755)
!2773 = !DILocation(line: 192, column: 5, scope: !2755)
!2774 = !DILocation(line: 193, column: 1, scope: !2755)
!2775 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !3, file: !3, line: 195, type: !2756, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2776)
!2776 = !{!2777}
!2777 = !DILocalVariable(name: "region", arg: 1, scope: !2775, file: !3, line: 195, type: !2648)
!2778 = !DILocation(line: 0, scope: !2775)
!2779 = !DILocation(line: 198, column: 16, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !2775, file: !3, line: 198, column: 9)
!2781 = !DILocation(line: 198, column: 9, scope: !2775)
!2782 = !DILocation(line: 203, column: 35, scope: !2775)
!2783 = !DILocation(line: 203, column: 31, scope: !2775)
!2784 = !DILocation(line: 203, column: 28, scope: !2775)
!2785 = !DILocation(line: 206, column: 32, scope: !2775)
!2786 = !DILocation(line: 206, column: 23, scope: !2775)
!2787 = !DILocation(line: 209, column: 41, scope: !2775)
!2788 = !DILocation(line: 209, column: 43, scope: !2775)
!2789 = !DILocation(line: 210, column: 45, scope: !2775)
!2790 = !DILocation(line: 210, column: 47, scope: !2775)
!2791 = !DILocation(line: 212, column: 5, scope: !2775)
!2792 = !DILocation(line: 213, column: 1, scope: !2775)
!2793 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !3, file: !3, line: 215, type: !2794, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2797)
!2794 = !DISubroutineType(types: !2795)
!2795 = !{!2645, !2796}
!2796 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !6, line: 182, baseType: !37)
!2797 = !{!2798}
!2798 = !DILocalVariable(name: "cache_size", arg: 1, scope: !2793, file: !3, line: 215, type: !2796)
!2799 = !DILocation(line: 0, scope: !2793)
!2800 = !DILocation(line: 218, column: 20, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2793, file: !3, line: 218, column: 9)
!2802 = !DILocation(line: 218, column: 9, scope: !2793)
!2803 = !DILocation(line: 223, column: 22, scope: !2793)
!2804 = !DILocation(line: 224, column: 37, scope: !2793)
!2805 = !DILocation(line: 224, column: 22, scope: !2793)
!2806 = !DILocation(line: 227, column: 20, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2793, file: !3, line: 227, column: 9)
!2808 = !DILocation(line: 227, column: 9, scope: !2793)
!2809 = !DILocation(line: 228, column: 26, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2807, file: !3, line: 227, column: 43)
!2811 = !DILocation(line: 229, column: 5, scope: !2810)
!2812 = !DILocation(line: 232, column: 28, scope: !2793)
!2813 = !DILocation(line: 232, column: 19, scope: !2793)
!2814 = !DILocation(line: 234, column: 5, scope: !2793)
!2815 = !DILocation(line: 235, column: 1, scope: !2793)
!2816 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !3, file: !3, line: 237, type: !2817, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2826)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!2645, !2648, !2819}
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2821)
!2821 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !6, line: 222, baseType: !2822)
!2822 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 219, size: 64, elements: !2823)
!2823 = !{!2824, !2825}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !2822, file: !6, line: 220, baseType: !61, size: 32)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !2822, file: !6, line: 221, baseType: !61, size: 32, offset: 32)
!2826 = !{!2827, !2828}
!2827 = !DILocalVariable(name: "region", arg: 1, scope: !2816, file: !3, line: 237, type: !2648)
!2828 = !DILocalVariable(name: "region_config", arg: 2, scope: !2816, file: !3, line: 237, type: !2819)
!2829 = !DILocation(line: 0, scope: !2816)
!2830 = !DILocation(line: 240, column: 16, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !2816, file: !3, line: 240, column: 9)
!2832 = !DILocation(line: 240, column: 9, scope: !2816)
!2833 = !DILocation(line: 245, column: 23, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2816, file: !3, line: 245, column: 9)
!2835 = !DILocation(line: 245, column: 9, scope: !2816)
!2836 = !DILocation(line: 250, column: 24, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2816, file: !3, line: 250, column: 9)
!2838 = !DILocation(line: 250, column: 45, scope: !2837)
!2839 = !DILocation(line: 250, column: 9, scope: !2816)
!2840 = !DILocation(line: 251, column: 9, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2837, file: !3, line: 250, column: 81)
!2842 = !DILocation(line: 256, column: 24, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2816, file: !3, line: 256, column: 9)
!2844 = !DILocation(line: 256, column: 42, scope: !2843)
!2845 = !DILocation(line: 256, column: 9, scope: !2816)
!2846 = !DILocation(line: 257, column: 9, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2843, file: !3, line: 256, column: 78)
!2848 = !DILocation(line: 262, column: 5, scope: !2816)
!2849 = !DILocation(line: 262, column: 34, scope: !2816)
!2850 = !DILocation(line: 263, column: 55, scope: !2816)
!2851 = !DILocation(line: 263, column: 93, scope: !2816)
!2852 = !DILocation(line: 263, column: 76, scope: !2816)
!2853 = !DILocation(line: 263, column: 5, scope: !2816)
!2854 = !DILocation(line: 263, column: 38, scope: !2816)
!2855 = !DILocation(line: 266, column: 34, scope: !2816)
!2856 = !DILocation(line: 269, column: 45, scope: !2816)
!2857 = !DILocation(line: 269, column: 41, scope: !2816)
!2858 = !DILocation(line: 269, column: 43, scope: !2816)
!2859 = !DILocation(line: 270, column: 49, scope: !2816)
!2860 = !DILocation(line: 270, column: 45, scope: !2816)
!2861 = !DILocation(line: 270, column: 47, scope: !2816)
!2862 = !DILocation(line: 272, column: 5, scope: !2816)
!2863 = !DILocation(line: 273, column: 1, scope: !2816)
!2864 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !3, file: !3, line: 275, type: !2865, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2867)
!2865 = !DISubroutineType(types: !2866)
!2866 = !{!2645, !61}
!2867 = !{!2868, !2869}
!2868 = !DILocalVariable(name: "address", arg: 1, scope: !2864, file: !3, line: 275, type: !61)
!2869 = !DILocalVariable(name: "irq_flag", scope: !2864, file: !3, line: 277, type: !61)
!2870 = !DILocation(line: 0, scope: !2864)
!2871 = !DILocation(line: 280, column: 17, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2864, file: !3, line: 280, column: 9)
!2873 = !DILocation(line: 280, column: 9, scope: !2864)
!2874 = !DILocation(line: 284, column: 16, scope: !2864)
!2875 = !DILocation(line: 287, column: 32, scope: !2864)
!2876 = !DILocation(line: 287, column: 21, scope: !2864)
!2877 = !DILocation(line: 288, column: 21, scope: !2864)
!2878 = !DILocation(line: 434, column: 3, scope: !2694, inlinedAt: !2879)
!2879 = distinct !DILocation(line: 291, column: 5, scope: !2864)
!2880 = !DILocation(line: 294, column: 5, scope: !2864)
!2881 = !DILocation(line: 296, column: 5, scope: !2864)
!2882 = !DILocation(line: 297, column: 1, scope: !2864)
!2883 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !3, file: !3, line: 299, type: !2884, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2886)
!2884 = !DISubroutineType(types: !2885)
!2885 = !{!2645, !61, !61}
!2886 = !{!2887, !2888, !2889, !2890}
!2887 = !DILocalVariable(name: "address", arg: 1, scope: !2883, file: !3, line: 299, type: !61)
!2888 = !DILocalVariable(name: "length", arg: 2, scope: !2883, file: !3, line: 299, type: !61)
!2889 = !DILocalVariable(name: "irq_flag", scope: !2883, file: !3, line: 301, type: !61)
!2890 = !DILocalVariable(name: "end_address", scope: !2883, file: !3, line: 302, type: !61)
!2891 = !DILocation(line: 0, scope: !2883)
!2892 = !DILocation(line: 302, column: 36, scope: !2883)
!2893 = !DILocation(line: 305, column: 47, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2883, file: !3, line: 305, column: 9)
!2895 = !DILocation(line: 310, column: 16, scope: !2883)
!2896 = !DILocation(line: 313, column: 20, scope: !2883)
!2897 = !DILocation(line: 313, column: 5, scope: !2883)
!2898 = !DILocation(line: 314, column: 9, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2883, file: !3, line: 313, column: 35)
!2900 = !DILocation(line: 315, column: 17, scope: !2899)
!2901 = distinct !{!2901, !2897, !2902}
!2902 = !DILocation(line: 316, column: 5, scope: !2883)
!2903 = !DILocation(line: 434, column: 3, scope: !2694, inlinedAt: !2904)
!2904 = distinct !DILocation(line: 319, column: 5, scope: !2883)
!2905 = !DILocation(line: 322, column: 5, scope: !2883)
!2906 = !DILocation(line: 324, column: 5, scope: !2883)
!2907 = !DILocation(line: 325, column: 1, scope: !2883)
!2908 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !3, file: !3, line: 351, type: !2865, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2909)
!2909 = !{!2910, !2911}
!2910 = !DILocalVariable(name: "address", arg: 1, scope: !2908, file: !3, line: 351, type: !61)
!2911 = !DILocalVariable(name: "irq_flag", scope: !2908, file: !3, line: 353, type: !61)
!2912 = !DILocation(line: 0, scope: !2908)
!2913 = !DILocation(line: 356, column: 17, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2908, file: !3, line: 356, column: 9)
!2915 = !DILocation(line: 356, column: 9, scope: !2908)
!2916 = !DILocation(line: 361, column: 16, scope: !2908)
!2917 = !DILocation(line: 364, column: 32, scope: !2908)
!2918 = !DILocation(line: 364, column: 21, scope: !2908)
!2919 = !DILocation(line: 365, column: 21, scope: !2908)
!2920 = !DILocation(line: 434, column: 3, scope: !2694, inlinedAt: !2921)
!2921 = distinct !DILocation(line: 368, column: 5, scope: !2908)
!2922 = !DILocation(line: 371, column: 5, scope: !2908)
!2923 = !DILocation(line: 373, column: 5, scope: !2908)
!2924 = !DILocation(line: 374, column: 1, scope: !2908)
!2925 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !3, file: !3, line: 376, type: !2884, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2926)
!2926 = !{!2927, !2928, !2929, !2930}
!2927 = !DILocalVariable(name: "address", arg: 1, scope: !2925, file: !3, line: 376, type: !61)
!2928 = !DILocalVariable(name: "length", arg: 2, scope: !2925, file: !3, line: 376, type: !61)
!2929 = !DILocalVariable(name: "irq_flag", scope: !2925, file: !3, line: 378, type: !61)
!2930 = !DILocalVariable(name: "end_address", scope: !2925, file: !3, line: 379, type: !61)
!2931 = !DILocation(line: 0, scope: !2925)
!2932 = !DILocation(line: 379, column: 36, scope: !2925)
!2933 = !DILocation(line: 382, column: 47, scope: !2934)
!2934 = distinct !DILexicalBlock(scope: !2925, file: !3, line: 382, column: 9)
!2935 = !DILocation(line: 387, column: 16, scope: !2925)
!2936 = !DILocation(line: 390, column: 20, scope: !2925)
!2937 = !DILocation(line: 390, column: 5, scope: !2925)
!2938 = !DILocation(line: 391, column: 9, scope: !2939)
!2939 = distinct !DILexicalBlock(scope: !2925, file: !3, line: 390, column: 35)
!2940 = !DILocation(line: 392, column: 17, scope: !2939)
!2941 = distinct !{!2941, !2937, !2942}
!2942 = !DILocation(line: 393, column: 5, scope: !2925)
!2943 = !DILocation(line: 434, column: 3, scope: !2694, inlinedAt: !2944)
!2944 = distinct !DILocation(line: 396, column: 5, scope: !2925)
!2945 = !DILocation(line: 399, column: 5, scope: !2925)
!2946 = !DILocation(line: 401, column: 5, scope: !2925)
!2947 = !DILocation(line: 402, column: 1, scope: !2925)
!2948 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !3, file: !3, line: 404, type: !2643, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2949)
!2949 = !{!2950}
!2950 = !DILocalVariable(name: "irq_flag", scope: !2948, file: !3, line: 406, type: !61)
!2951 = !DILocation(line: 409, column: 16, scope: !2948)
!2952 = !DILocation(line: 0, scope: !2948)
!2953 = !DILocation(line: 412, column: 21, scope: !2948)
!2954 = !DILocation(line: 413, column: 21, scope: !2948)
!2955 = !DILocation(line: 434, column: 3, scope: !2694, inlinedAt: !2956)
!2956 = distinct !DILocation(line: 416, column: 5, scope: !2948)
!2957 = !DILocation(line: 419, column: 5, scope: !2948)
!2958 = !DILocation(line: 421, column: 5, scope: !2948)
!2959 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !3, file: !3, line: 424, type: !2960, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2962)
!2960 = !DISubroutineType(types: !2961)
!2961 = !{!91, !61}
!2962 = !{!2963, !2964}
!2963 = !DILocalVariable(name: "address", arg: 1, scope: !2959, file: !3, line: 424, type: !61)
!2964 = !DILocalVariable(name: "region", scope: !2959, file: !3, line: 426, type: !2648)
!2965 = !DILocation(line: 0, scope: !2959)
!2966 = !DILocation(line: 429, column: 18, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2959, file: !3, line: 429, column: 9)
!2968 = !DILocation(line: 429, column: 28, scope: !2967)
!2969 = !DILocation(line: 429, column: 9, scope: !2959)
!2970 = !DILocation(line: 435, column: 20, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 435, column: 13)
!2972 = distinct !DILexicalBlock(scope: !2973, file: !3, line: 433, column: 81)
!2973 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 433, column: 5)
!2974 = distinct !DILexicalBlock(scope: !2959, file: !3, line: 433, column: 5)
!2975 = !DILocation(line: 435, column: 41, scope: !2971)
!2976 = !DILocation(line: 435, column: 36, scope: !2971)
!2977 = !DILocation(line: 435, column: 13, scope: !2972)
!2978 = !DILocation(line: 436, column: 30, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 436, column: 17)
!2980 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 435, column: 53)
!2981 = !DILocation(line: 436, column: 59, scope: !2979)
!2982 = !DILocation(line: 436, column: 26, scope: !2979)
!2983 = !DILocation(line: 436, column: 85, scope: !2979)
!2984 = !DILocation(line: 436, column: 99, scope: !2979)
!2985 = !DILocation(line: 436, column: 97, scope: !2979)
!2986 = !DILocation(line: 436, column: 17, scope: !2980)
!2987 = !DILocation(line: 433, column: 77, scope: !2973)
!2988 = !DILocation(line: 433, column: 46, scope: !2973)
!2989 = !DILocation(line: 433, column: 5, scope: !2974)
!2990 = distinct !{!2990, !2989, !2991}
!2991 = !DILocation(line: 440, column: 5, scope: !2974)
!2992 = !DILocation(line: 442, column: 1, scope: !2959)
!2993 = distinct !DISubprogram(name: "hal_gpt_init", scope: !2533, file: !2533, line: 95, type: !2994, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !2998)
!2994 = !DISubroutineType(types: !2995)
!2995 = !{!2996, !2997}
!2996 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !255, line: 393, baseType: !1951)
!2997 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !98, line: 854, baseType: !245)
!2998 = !{!2999}
!2999 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2993, file: !2533, line: 95, type: !2997)
!3000 = !DILocation(line: 0, scope: !2993)
!3001 = !DILocation(line: 98, column: 9, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2993, file: !2533, line: 98, column: 9)
!3003 = !DILocation(line: 98, column: 9, scope: !2993)
!3004 = !DILocation(line: 102, column: 10, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !2993, file: !2533, line: 102, column: 9)
!3006 = !DILocation(line: 102, column: 34, scope: !3005)
!3007 = !DILocation(line: 102, column: 49, scope: !3005)
!3008 = !DILocation(line: 102, column: 69, scope: !3005)
!3009 = !DILocation(line: 103, column: 38, scope: !3005)
!3010 = !DILocation(line: 102, column: 9, scope: !2993)
!3011 = !DILocation(line: 109, column: 12, scope: !2993)
!3012 = !DILocation(line: 109, column: 5, scope: !2993)
!3013 = !DILocation(line: 112, column: 5, scope: !2993)
!3014 = !DILocation(line: 115, column: 44, scope: !2993)
!3015 = !DILocation(line: 118, column: 5, scope: !2993)
!3016 = !DILocation(line: 118, column: 23, scope: !2993)
!3017 = !DILocation(line: 118, column: 35, scope: !2993)
!3018 = !DILocation(line: 121, column: 42, scope: !2993)
!3019 = !DILocation(line: 121, column: 38, scope: !2993)
!3020 = !DILocation(line: 121, column: 5, scope: !2993)
!3021 = !DILocation(line: 121, column: 17, scope: !2993)
!3022 = !DILocation(line: 121, column: 35, scope: !2993)
!3023 = !DILocation(line: 129, column: 5, scope: !2993)
!3024 = !DILocation(line: 131, column: 1, scope: !2993)
!3025 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !2533, file: !2533, line: 81, type: !3026, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !3028)
!3026 = !DISubroutineType(types: !3027)
!3027 = !{!91, !2997}
!3028 = !{!3029}
!3029 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3025, file: !2533, line: 81, type: !2997)
!3030 = !DILocation(line: 0, scope: !3025)
!3031 = !DILocation(line: 84, column: 25, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !3025, file: !2533, line: 84, column: 9)
!3033 = !DILocation(line: 84, column: 35, scope: !3032)
!3034 = !DILocation(line: 84, column: 45, scope: !3032)
!3035 = !DILocation(line: 93, column: 1, scope: !3025)
!3036 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !2533, file: !2533, line: 133, type: !2994, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !3037)
!3037 = !{!3038}
!3038 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3036, file: !2533, line: 133, type: !2997)
!3039 = !DILocation(line: 0, scope: !3036)
!3040 = !DILocation(line: 136, column: 9, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3036, file: !2533, line: 136, column: 9)
!3042 = !DILocation(line: 136, column: 9, scope: !3036)
!3043 = !DILocation(line: 140, column: 9, scope: !3044)
!3044 = distinct !DILexicalBlock(scope: !3036, file: !2533, line: 140, column: 9)
!3045 = !DILocation(line: 140, column: 33, scope: !3044)
!3046 = !DILocation(line: 140, column: 48, scope: !3044)
!3047 = !DILocation(line: 140, column: 9, scope: !3036)
!3048 = !DILocation(line: 146, column: 12, scope: !3036)
!3049 = !DILocation(line: 146, column: 5, scope: !3036)
!3050 = !DILocation(line: 149, column: 29, scope: !3036)
!3051 = !DILocation(line: 149, column: 44, scope: !3036)
!3052 = !DILocation(line: 151, column: 29, scope: !3036)
!3053 = !DILocation(line: 151, column: 5, scope: !3036)
!3054 = !DILocation(line: 159, column: 5, scope: !3036)
!3055 = !DILocation(line: 160, column: 1, scope: !3036)
!3056 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !2533, file: !2533, line: 163, type: !3057, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !3060)
!3057 = !DISubroutineType(types: !3058)
!3058 = !{!2996, !3059, !1044}
!3059 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !98, line: 860, baseType: !2535)
!3060 = !{!3061, !3062}
!3061 = !DILocalVariable(name: "clock_source", arg: 1, scope: !3056, file: !2533, line: 163, type: !3059)
!3062 = !DILocalVariable(name: "count", arg: 2, scope: !3056, file: !2533, line: 163, type: !1044)
!3063 = !DILocation(line: 0, scope: !3056)
!3064 = !DILocation(line: 166, column: 9, scope: !3056)
!3065 = !DILocation(line: 167, column: 44, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !3067, file: !2533, line: 167, column: 13)
!3067 = distinct !DILexicalBlock(scope: !3068, file: !2533, line: 166, column: 51)
!3068 = distinct !DILexicalBlock(scope: !3056, file: !2533, line: 166, column: 9)
!3069 = !DILocation(line: 167, column: 59, scope: !3066)
!3070 = !DILocation(line: 167, column: 13, scope: !3067)
!3071 = !DILocation(line: 170, column: 38, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3066, file: !2533, line: 167, column: 79)
!3073 = !DILocation(line: 170, column: 13, scope: !3072)
!3074 = !DILocation(line: 172, column: 59, scope: !3072)
!3075 = !DILocation(line: 173, column: 9, scope: !3072)
!3076 = !DILocation(line: 175, column: 36, scope: !3067)
!3077 = !DILocation(line: 175, column: 18, scope: !3067)
!3078 = !DILocation(line: 177, column: 5, scope: !3067)
!3079 = !DILocation(line: 179, column: 44, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3081, file: !2533, line: 179, column: 13)
!3081 = distinct !DILexicalBlock(scope: !3082, file: !2533, line: 178, column: 55)
!3082 = distinct !DILexicalBlock(scope: !3068, file: !2533, line: 178, column: 14)
!3083 = !DILocation(line: 179, column: 59, scope: !3080)
!3084 = !DILocation(line: 179, column: 13, scope: !3081)
!3085 = !DILocation(line: 182, column: 38, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3080, file: !2533, line: 179, column: 79)
!3087 = !DILocation(line: 182, column: 13, scope: !3086)
!3088 = !DILocation(line: 184, column: 59, scope: !3086)
!3089 = !DILocation(line: 186, column: 9, scope: !3086)
!3090 = !DILocation(line: 188, column: 68, scope: !3081)
!3091 = !DILocation(line: 188, column: 50, scope: !3081)
!3092 = !DILocation(line: 188, column: 18, scope: !3081)
!3093 = !DILocation(line: 0, scope: !3068)
!3094 = !DILocation(line: 193, column: 5, scope: !3056)
!3095 = !DILocation(line: 194, column: 1, scope: !3056)
!3096 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !2533, file: !2533, line: 196, type: !3097, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !3099)
!3097 = !DISubroutineType(types: !3098)
!3098 = !{!2996, !61, !61, !1044}
!3099 = !{!3100, !3101, !3102}
!3100 = !DILocalVariable(name: "start_count", arg: 1, scope: !3096, file: !2533, line: 196, type: !61)
!3101 = !DILocalVariable(name: "end_count", arg: 2, scope: !3096, file: !2533, line: 196, type: !61)
!3102 = !DILocalVariable(name: "duration_count", arg: 3, scope: !3096, file: !2533, line: 196, type: !1044)
!3103 = !DILocation(line: 0, scope: !3096)
!3104 = !DILocation(line: 198, column: 24, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3096, file: !2533, line: 198, column: 9)
!3106 = !DILocation(line: 198, column: 9, scope: !3096)
!3107 = !DILocation(line: 0, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3096, file: !2533, line: 202, column: 9)
!3109 = !DILocation(line: 208, column: 5, scope: !3096)
!3110 = !DILocation(line: 209, column: 1, scope: !3096)
!3111 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !2533, file: !2533, line: 211, type: !3112, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !3115)
!3112 = !DISubroutineType(types: !3113)
!3113 = !{!2996, !2997, !3114}
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!3115 = !{!3116, !3117}
!3116 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3111, file: !2533, line: 211, type: !2997)
!3117 = !DILocalVariable(name: "running_status", arg: 2, scope: !3111, file: !2533, line: 211, type: !3114)
!3118 = !DILocation(line: 0, scope: !3111)
!3119 = !DILocation(line: 213, column: 18, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3111, file: !2533, line: 213, column: 9)
!3121 = !DILocation(line: 213, column: 9, scope: !3111)
!3122 = !DILocation(line: 217, column: 47, scope: !3111)
!3123 = !DILocation(line: 217, column: 21, scope: !3111)
!3124 = !DILocation(line: 219, column: 5, scope: !3111)
!3125 = !DILocation(line: 220, column: 1, scope: !3111)
!3126 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !2533, file: !2533, line: 222, type: !3127, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !3129)
!3127 = !DISubroutineType(types: !3128)
!3128 = !{!2996, !2997, !307, !88}
!3129 = !{!3130, !3131, !3132}
!3130 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3126, file: !2533, line: 222, type: !2997)
!3131 = !DILocalVariable(name: "callback", arg: 2, scope: !3126, file: !2533, line: 223, type: !307)
!3132 = !DILocalVariable(name: "user_data", arg: 3, scope: !3126, file: !2533, line: 224, type: !88)
!3133 = !DILocation(line: 0, scope: !3126)
!3134 = !DILocation(line: 227, column: 9, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3126, file: !2533, line: 227, column: 9)
!3136 = !DILocation(line: 227, column: 9, scope: !3126)
!3137 = !DILocation(line: 231, column: 34, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3126, file: !2533, line: 231, column: 9)
!3139 = !DILocation(line: 231, column: 49, scope: !3138)
!3140 = !DILocation(line: 231, column: 69, scope: !3138)
!3141 = !DILocation(line: 232, column: 38, scope: !3138)
!3142 = !DILocation(line: 232, column: 53, scope: !3138)
!3143 = !DILocation(line: 231, column: 9, scope: !3126)
!3144 = !DILocation(line: 237, column: 18, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3126, file: !2533, line: 237, column: 9)
!3146 = !DILocation(line: 237, column: 9, scope: !3126)
!3147 = !DILocation(line: 245, column: 46, scope: !3126)
!3148 = !DILocation(line: 245, column: 56, scope: !3126)
!3149 = !DILocation(line: 246, column: 46, scope: !3126)
!3150 = !DILocation(line: 246, column: 56, scope: !3126)
!3151 = !DILocation(line: 248, column: 5, scope: !3126)
!3152 = !DILocation(line: 250, column: 5, scope: !3126)
!3153 = !DILocation(line: 252, column: 1, scope: !3126)
!3154 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !2533, file: !2533, line: 256, type: !3155, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !3158)
!3155 = !DISubroutineType(types: !3156)
!3156 = !{!2996, !2997, !61, !3157}
!3157 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !255, line: 383, baseType: !254)
!3158 = !{!3159, !3160, !3161, !3162}
!3159 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3154, file: !2533, line: 256, type: !2997)
!3160 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3154, file: !2533, line: 256, type: !61)
!3161 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3154, file: !2533, line: 256, type: !3157)
!3162 = !DILocalVariable(name: "mask", scope: !3154, file: !2533, line: 259, type: !60)
!3163 = !DILocation(line: 0, scope: !3154)
!3164 = !DILocation(line: 259, column: 5, scope: !3154)
!3165 = !DILocation(line: 259, column: 23, scope: !3154)
!3166 = !DILocation(line: 261, column: 9, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3154, file: !2533, line: 261, column: 9)
!3168 = !DILocation(line: 261, column: 9, scope: !3154)
!3169 = !DILocation(line: 265, column: 34, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !3154, file: !2533, line: 265, column: 9)
!3171 = !DILocation(line: 265, column: 49, scope: !3170)
!3172 = !DILocation(line: 266, column: 13, scope: !3170)
!3173 = !DILocation(line: 266, column: 41, scope: !3170)
!3174 = !DILocation(line: 266, column: 56, scope: !3170)
!3175 = !DILocation(line: 265, column: 9, scope: !3154)
!3176 = !DILocation(line: 271, column: 25, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3154, file: !2533, line: 271, column: 9)
!3178 = !DILocation(line: 271, column: 9, scope: !3154)
!3179 = !DILocation(line: 282, column: 12, scope: !3154)
!3180 = !DILocation(line: 282, column: 10, scope: !3154)
!3181 = !DILocation(line: 284, column: 5, scope: !3154)
!3182 = !DILocation(line: 286, column: 5, scope: !3154)
!3183 = !DILocation(line: 286, column: 23, scope: !3154)
!3184 = !DILocation(line: 286, column: 34, scope: !3154)
!3185 = !DILocation(line: 287, column: 5, scope: !3154)
!3186 = !DILocation(line: 287, column: 23, scope: !3154)
!3187 = !DILocation(line: 287, column: 34, scope: !3154)
!3188 = !DILocation(line: 290, column: 5, scope: !3154)
!3189 = !DILocation(line: 290, column: 23, scope: !3154)
!3190 = !DILocation(line: 290, column: 37, scope: !3154)
!3191 = !DILocation(line: 291, column: 39, scope: !3154)
!3192 = !DILocation(line: 291, column: 5, scope: !3154)
!3193 = !DILocation(line: 291, column: 23, scope: !3154)
!3194 = !DILocation(line: 291, column: 37, scope: !3154)
!3195 = !DILocation(line: 292, column: 5, scope: !3154)
!3196 = !DILocation(line: 292, column: 23, scope: !3154)
!3197 = !DILocation(line: 292, column: 37, scope: !3154)
!3198 = !DILocation(line: 297, column: 47, scope: !3154)
!3199 = !DILocation(line: 298, column: 33, scope: !3154)
!3200 = !DILocation(line: 296, column: 5, scope: !3154)
!3201 = !DILocation(line: 296, column: 23, scope: !3154)
!3202 = !DILocation(line: 296, column: 31, scope: !3154)
!3203 = !DILocation(line: 300, column: 5, scope: !3154)
!3204 = !DILocation(line: 300, column: 29, scope: !3154)
!3205 = distinct !{!3205, !3203, !3206}
!3206 = !DILocation(line: 300, column: 39, scope: !3154)
!3207 = !DILocation(line: 301, column: 23, scope: !3154)
!3208 = !DILocation(line: 301, column: 33, scope: !3154)
!3209 = !DILocation(line: 302, column: 5, scope: !3154)
!3210 = !DILocation(line: 302, column: 23, scope: !3154)
!3211 = !DILocation(line: 302, column: 34, scope: !3154)
!3212 = !DILocation(line: 303, column: 44, scope: !3154)
!3213 = !DILocation(line: 305, column: 28, scope: !3154)
!3214 = !DILocation(line: 305, column: 5, scope: !3154)
!3215 = !DILocation(line: 306, column: 5, scope: !3154)
!3216 = !DILocation(line: 307, column: 1, scope: !3154)
!3217 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !2533, file: !2533, line: 310, type: !3218, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !3220)
!3218 = !DISubroutineType(types: !3219)
!3219 = !{!2996, !61}
!3220 = !{!3221}
!3221 = !DILocalVariable(name: "ms", arg: 1, scope: !3217, file: !2533, line: 310, type: !61)
!3222 = !DILocation(line: 0, scope: !3217)
!3223 = !DILocation(line: 313, column: 40, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3217, file: !2533, line: 313, column: 9)
!3225 = !DILocation(line: 313, column: 55, scope: !3224)
!3226 = !DILocation(line: 313, column: 9, scope: !3217)
!3227 = !DILocation(line: 316, column: 34, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3224, file: !2533, line: 313, column: 75)
!3229 = !DILocation(line: 316, column: 9, scope: !3228)
!3230 = !DILocation(line: 317, column: 55, scope: !3228)
!3231 = !DILocation(line: 318, column: 5, scope: !3228)
!3232 = !DILocation(line: 320, column: 20, scope: !3217)
!3233 = !DILocation(line: 320, column: 45, scope: !3217)
!3234 = !DILocation(line: 320, column: 5, scope: !3217)
!3235 = !DILocation(line: 322, column: 5, scope: !3217)
!3236 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !2533, file: !2533, line: 327, type: !3155, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !3237)
!3237 = !{!3238, !3239, !3240, !3241}
!3238 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3236, file: !2533, line: 327, type: !2997)
!3239 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !3236, file: !2533, line: 327, type: !61)
!3240 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3236, file: !2533, line: 327, type: !3157)
!3241 = !DILocalVariable(name: "mask", scope: !3236, file: !2533, line: 329, type: !60)
!3242 = !DILocation(line: 0, scope: !3236)
!3243 = !DILocation(line: 329, column: 5, scope: !3236)
!3244 = !DILocation(line: 329, column: 23, scope: !3236)
!3245 = !DILocation(line: 331, column: 9, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3236, file: !2533, line: 331, column: 9)
!3247 = !DILocation(line: 331, column: 9, scope: !3236)
!3248 = !DILocation(line: 336, column: 34, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3236, file: !2533, line: 336, column: 9)
!3250 = !DILocation(line: 336, column: 49, scope: !3249)
!3251 = !DILocation(line: 337, column: 13, scope: !3249)
!3252 = !DILocation(line: 337, column: 41, scope: !3249)
!3253 = !DILocation(line: 337, column: 56, scope: !3249)
!3254 = !DILocation(line: 336, column: 9, scope: !3236)
!3255 = !DILocation(line: 349, column: 29, scope: !3236)
!3256 = !DILocation(line: 349, column: 49, scope: !3236)
!3257 = !DILocation(line: 351, column: 12, scope: !3236)
!3258 = !DILocation(line: 351, column: 10, scope: !3236)
!3259 = !DILocation(line: 353, column: 5, scope: !3236)
!3260 = !DILocation(line: 355, column: 5, scope: !3236)
!3261 = !DILocation(line: 355, column: 23, scope: !3236)
!3262 = !DILocation(line: 355, column: 34, scope: !3236)
!3263 = !DILocation(line: 356, column: 5, scope: !3236)
!3264 = !DILocation(line: 356, column: 23, scope: !3236)
!3265 = !DILocation(line: 356, column: 34, scope: !3236)
!3266 = !DILocation(line: 359, column: 5, scope: !3236)
!3267 = !DILocation(line: 359, column: 23, scope: !3236)
!3268 = !DILocation(line: 359, column: 37, scope: !3236)
!3269 = !DILocation(line: 360, column: 39, scope: !3236)
!3270 = !DILocation(line: 360, column: 5, scope: !3236)
!3271 = !DILocation(line: 360, column: 23, scope: !3236)
!3272 = !DILocation(line: 360, column: 37, scope: !3236)
!3273 = !DILocation(line: 361, column: 5, scope: !3236)
!3274 = !DILocation(line: 361, column: 23, scope: !3236)
!3275 = !DILocation(line: 361, column: 37, scope: !3236)
!3276 = !DILocation(line: 366, column: 47, scope: !3236)
!3277 = !DILocation(line: 367, column: 33, scope: !3236)
!3278 = !DILocation(line: 365, column: 5, scope: !3236)
!3279 = !DILocation(line: 365, column: 23, scope: !3236)
!3280 = !DILocation(line: 365, column: 31, scope: !3236)
!3281 = !DILocation(line: 369, column: 5, scope: !3236)
!3282 = !DILocation(line: 369, column: 29, scope: !3236)
!3283 = distinct !{!3283, !3281, !3284}
!3284 = !DILocation(line: 369, column: 39, scope: !3236)
!3285 = !DILocation(line: 370, column: 23, scope: !3236)
!3286 = !DILocation(line: 370, column: 33, scope: !3236)
!3287 = !DILocation(line: 371, column: 5, scope: !3236)
!3288 = !DILocation(line: 371, column: 23, scope: !3236)
!3289 = !DILocation(line: 371, column: 34, scope: !3236)
!3290 = !DILocation(line: 373, column: 28, scope: !3236)
!3291 = !DILocation(line: 373, column: 5, scope: !3236)
!3292 = !DILocation(line: 375, column: 44, scope: !3236)
!3293 = !DILocation(line: 377, column: 5, scope: !3236)
!3294 = !DILocation(line: 378, column: 1, scope: !3236)
!3295 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !2533, file: !2533, line: 382, type: !3218, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !3296)
!3296 = !{!3297}
!3297 = !DILocalVariable(name: "us", arg: 1, scope: !3295, file: !2533, line: 382, type: !61)
!3298 = !DILocation(line: 0, scope: !3295)
!3299 = !DILocation(line: 385, column: 40, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3295, file: !2533, line: 385, column: 9)
!3301 = !DILocation(line: 385, column: 55, scope: !3300)
!3302 = !DILocation(line: 385, column: 9, scope: !3295)
!3303 = !DILocation(line: 388, column: 34, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3300, file: !2533, line: 385, column: 75)
!3305 = !DILocation(line: 388, column: 9, scope: !3304)
!3306 = !DILocation(line: 390, column: 55, scope: !3304)
!3307 = !DILocation(line: 391, column: 5, scope: !3304)
!3308 = !DILocation(line: 392, column: 20, scope: !3295)
!3309 = !DILocation(line: 392, column: 45, scope: !3295)
!3310 = !DILocation(line: 392, column: 5, scope: !3295)
!3311 = !DILocation(line: 394, column: 5, scope: !3295)
!3312 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !2533, file: !2533, line: 398, type: !2994, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !3313)
!3313 = !{!3314, !3315}
!3314 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3312, file: !2533, line: 398, type: !2997)
!3315 = !DILocalVariable(name: "mask", scope: !3312, file: !2533, line: 400, type: !60)
!3316 = !DILocation(line: 0, scope: !3312)
!3317 = !DILocation(line: 400, column: 5, scope: !3312)
!3318 = !DILocation(line: 400, column: 23, scope: !3312)
!3319 = !DILocation(line: 402, column: 9, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3312, file: !2533, line: 402, column: 9)
!3321 = !DILocation(line: 402, column: 9, scope: !3312)
!3322 = !DILocation(line: 413, column: 12, scope: !3312)
!3323 = !DILocation(line: 413, column: 10, scope: !3312)
!3324 = !DILocation(line: 415, column: 5, scope: !3312)
!3325 = !DILocation(line: 415, column: 23, scope: !3312)
!3326 = !DILocation(line: 415, column: 34, scope: !3312)
!3327 = !DILocation(line: 418, column: 5, scope: !3312)
!3328 = !DILocation(line: 418, column: 23, scope: !3312)
!3329 = !DILocation(line: 418, column: 34, scope: !3312)
!3330 = !DILocation(line: 420, column: 5, scope: !3312)
!3331 = !DILocation(line: 420, column: 23, scope: !3312)
!3332 = !DILocation(line: 420, column: 35, scope: !3312)
!3333 = !DILocation(line: 422, column: 29, scope: !3312)
!3334 = !DILocation(line: 422, column: 44, scope: !3312)
!3335 = !DILocation(line: 423, column: 28, scope: !3312)
!3336 = !DILocation(line: 423, column: 5, scope: !3312)
!3337 = !DILocation(line: 425, column: 33, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3312, file: !2533, line: 425, column: 9)
!3339 = !DILocation(line: 425, column: 9, scope: !3312)
!3340 = !DILocation(line: 427, column: 53, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3338, file: !2533, line: 425, column: 62)
!3342 = !DILocation(line: 428, column: 5, scope: !3341)
!3343 = !DILocation(line: 430, column: 1, scope: !3312)
!3344 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !2533, file: !2533, line: 434, type: !3345, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !3347)
!3345 = !DISubroutineType(types: !3346)
!3346 = !{!2996, !1044}
!3347 = !{!3348, !3349, !3350}
!3348 = !DILocalVariable(name: "handle", arg: 1, scope: !3344, file: !2533, line: 434, type: !1044)
!3349 = !DILocalVariable(name: "timer", scope: !3344, file: !2533, line: 436, type: !61)
!3350 = !DILocalVariable(name: "mask", scope: !3344, file: !2533, line: 437, type: !61)
!3351 = !DILocation(line: 0, scope: !3344)
!3352 = !DILocation(line: 439, column: 24, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3344, file: !2533, line: 439, column: 9)
!3354 = !DILocation(line: 439, column: 41, scope: !3353)
!3355 = !DILocation(line: 439, column: 9, scope: !3344)
!3356 = !DILocation(line: 443, column: 16, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3344, file: !2533, line: 443, column: 9)
!3358 = !DILocation(line: 443, column: 9, scope: !3344)
!3359 = !DILocation(line: 448, column: 12, scope: !3344)
!3360 = !DILocation(line: 450, column: 15, scope: !3344)
!3361 = !DILocation(line: 451, column: 21, scope: !3344)
!3362 = !DILocation(line: 451, column: 13, scope: !3344)
!3363 = !DILocation(line: 452, column: 33, scope: !3344)
!3364 = !DILocation(line: 452, column: 41, scope: !3344)
!3365 = !DILocation(line: 453, column: 36, scope: !3344)
!3366 = !DILocation(line: 455, column: 5, scope: !3344)
!3367 = !DILocation(line: 456, column: 5, scope: !3344)
!3368 = !DILocation(line: 457, column: 1, scope: !3344)
!3369 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !2533, file: !2533, line: 459, type: !3218, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !3370)
!3370 = !{!3371, !3372}
!3371 = !DILocalVariable(name: "handle", arg: 1, scope: !3369, file: !2533, line: 459, type: !61)
!3372 = !DILocalVariable(name: "timer", scope: !3369, file: !2533, line: 461, type: !60)
!3373 = !DILocation(line: 0, scope: !3369)
!3374 = !DILocation(line: 461, column: 5, scope: !3369)
!3375 = !DILocation(line: 461, column: 23, scope: !3369)
!3376 = !DILocation(line: 463, column: 17, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3369, file: !2533, line: 463, column: 9)
!3378 = !DILocation(line: 463, column: 37, scope: !3377)
!3379 = !DILocation(line: 463, column: 9, scope: !3369)
!3380 = !DILocation(line: 467, column: 20, scope: !3369)
!3381 = !DILocation(line: 467, column: 11, scope: !3369)
!3382 = !DILocation(line: 469, column: 24, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3369, file: !2533, line: 469, column: 9)
!3384 = !DILocation(line: 469, column: 41, scope: !3383)
!3385 = !DILocation(line: 469, column: 9, scope: !3369)
!3386 = !DILocation(line: 473, column: 30, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3369, file: !2533, line: 473, column: 9)
!3388 = !DILocation(line: 473, column: 37, scope: !3387)
!3389 = !DILocation(line: 473, column: 9, scope: !3369)
!3390 = !DILocation(line: 477, column: 30, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3369, file: !2533, line: 477, column: 9)
!3392 = !DILocation(line: 477, column: 37, scope: !3391)
!3393 = !DILocation(line: 477, column: 45, scope: !3391)
!3394 = !DILocation(line: 477, column: 9, scope: !3369)
!3395 = !DILocation(line: 481, column: 26, scope: !3369)
!3396 = !DILocation(line: 481, column: 33, scope: !3369)
!3397 = !DILocation(line: 481, column: 41, scope: !3369)
!3398 = !DILocation(line: 482, column: 36, scope: !3369)
!3399 = !DILocation(line: 484, column: 5, scope: !3369)
!3400 = !DILocation(line: 485, column: 1, scope: !3369)
!3401 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !2533, file: !2533, line: 487, type: !3402, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !3404)
!3402 = !DISubroutineType(types: !3403)
!3403 = !{!2996, !61, !61, !307, !88}
!3404 = !{!3405, !3406, !3407, !3408, !3409, !3410, !3411}
!3405 = !DILocalVariable(name: "handle", arg: 1, scope: !3401, file: !2533, line: 487, type: !61)
!3406 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3401, file: !2533, line: 487, type: !61)
!3407 = !DILocalVariable(name: "callback", arg: 3, scope: !3401, file: !2533, line: 487, type: !307)
!3408 = !DILocalVariable(name: "user_data", arg: 4, scope: !3401, file: !2533, line: 487, type: !88)
!3409 = !DILocalVariable(name: "current_time", scope: !3401, file: !2533, line: 489, type: !61)
!3410 = !DILocalVariable(name: "mask", scope: !3401, file: !2533, line: 490, type: !61)
!3411 = !DILocalVariable(name: "timer", scope: !3401, file: !2533, line: 491, type: !61)
!3412 = !DILocation(line: 0, scope: !3401)
!3413 = !DILocation(line: 493, column: 17, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3401, file: !2533, line: 493, column: 9)
!3415 = !DILocation(line: 493, column: 37, scope: !3414)
!3416 = !DILocation(line: 493, column: 9, scope: !3401)
!3417 = !DILocation(line: 497, column: 20, scope: !3401)
!3418 = !DILocation(line: 503, column: 37, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3401, file: !2533, line: 503, column: 9)
!3420 = !DILocation(line: 503, column: 9, scope: !3401)
!3421 = !DILocation(line: 507, column: 37, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3401, file: !2533, line: 507, column: 9)
!3423 = !DILocation(line: 507, column: 45, scope: !3422)
!3424 = !DILocation(line: 507, column: 9, scope: !3401)
!3425 = !DILocation(line: 511, column: 25, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3401, file: !2533, line: 511, column: 9)
!3427 = !DILocation(line: 511, column: 9, scope: !3401)
!3428 = !DILocation(line: 516, column: 12, scope: !3401)
!3429 = !DILocation(line: 519, column: 30, scope: !3401)
!3430 = !DILocation(line: 521, column: 24, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3401, file: !2533, line: 521, column: 9)
!3432 = !DILocation(line: 521, column: 38, scope: !3431)
!3433 = !DILocation(line: 521, column: 9, scope: !3401)
!3434 = !DILocation(line: 522, column: 9, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3431, file: !2533, line: 521, column: 48)
!3436 = !DILocation(line: 523, column: 9, scope: !3435)
!3437 = !DILocation(line: 524, column: 38, scope: !3435)
!3438 = !DILocation(line: 525, column: 5, scope: !3435)
!3439 = !DILocation(line: 526, column: 5, scope: !3401)
!3440 = !DILocation(line: 528, column: 23, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3401, file: !2533, line: 528, column: 8)
!3442 = !DILocation(line: 528, column: 41, scope: !3441)
!3443 = !DILocation(line: 528, column: 8, scope: !3401)
!3444 = !DILocation(line: 529, column: 51, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3441, file: !2533, line: 528, column: 51)
!3446 = !DILocation(line: 529, column: 24, scope: !3445)
!3447 = !DILocation(line: 530, column: 5, scope: !3445)
!3448 = !DILocation(line: 0, scope: !3441)
!3449 = !DILocation(line: 534, column: 34, scope: !3401)
!3450 = !DILocation(line: 535, column: 39, scope: !3401)
!3451 = !DILocation(line: 537, column: 49, scope: !3401)
!3452 = !DILocation(line: 538, column: 80, scope: !3401)
!3453 = !DILocation(line: 538, column: 33, scope: !3401)
!3454 = !DILocation(line: 538, column: 49, scope: !3401)
!3455 = !DILocation(line: 539, column: 50, scope: !3401)
!3456 = !DILocation(line: 539, column: 61, scope: !3401)
!3457 = !DILocation(line: 540, column: 50, scope: !3401)
!3458 = !DILocation(line: 540, column: 61, scope: !3401)
!3459 = !DILocation(line: 542, column: 5, scope: !3401)
!3460 = !DILocation(line: 546, column: 30, scope: !3401)
!3461 = !DILocation(line: 548, column: 5, scope: !3401)
!3462 = !DILocation(line: 550, column: 5, scope: !3401)
!3463 = !DILocation(line: 551, column: 1, scope: !3401)
!3464 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !2533, file: !2533, line: 553, type: !3218, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !3465)
!3465 = !{!3466, !3467, !3468, !3469}
!3466 = !DILocalVariable(name: "handle", arg: 1, scope: !3464, file: !2533, line: 553, type: !61)
!3467 = !DILocalVariable(name: "current_time", scope: !3464, file: !2533, line: 555, type: !61)
!3468 = !DILocalVariable(name: "mask", scope: !3464, file: !2533, line: 556, type: !61)
!3469 = !DILocalVariable(name: "timer", scope: !3464, file: !2533, line: 557, type: !61)
!3470 = !DILocation(line: 0, scope: !3464)
!3471 = !DILocation(line: 559, column: 17, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3464, file: !2533, line: 559, column: 9)
!3473 = !DILocation(line: 559, column: 37, scope: !3472)
!3474 = !DILocation(line: 559, column: 9, scope: !3464)
!3475 = !DILocation(line: 563, column: 20, scope: !3464)
!3476 = !DILocation(line: 565, column: 37, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3464, file: !2533, line: 565, column: 9)
!3478 = !DILocation(line: 565, column: 48, scope: !3477)
!3479 = !DILocation(line: 565, column: 9, scope: !3464)
!3480 = !DILocation(line: 569, column: 37, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3464, file: !2533, line: 569, column: 9)
!3482 = !DILocation(line: 569, column: 45, scope: !3481)
!3483 = !DILocation(line: 569, column: 9, scope: !3464)
!3484 = !DILocation(line: 574, column: 12, scope: !3464)
!3485 = !DILocation(line: 577, column: 30, scope: !3464)
!3486 = !DILocation(line: 578, column: 5, scope: !3464)
!3487 = !DILocation(line: 579, column: 30, scope: !3464)
!3488 = !DILocation(line: 581, column: 23, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3464, file: !2533, line: 581, column: 8)
!3490 = !DILocation(line: 581, column: 41, scope: !3489)
!3491 = !DILocation(line: 581, column: 8, scope: !3464)
!3492 = !DILocation(line: 582, column: 51, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3489, file: !2533, line: 581, column: 51)
!3494 = !DILocation(line: 582, column: 24, scope: !3493)
!3495 = !DILocation(line: 583, column: 5, scope: !3493)
!3496 = !DILocation(line: 0, scope: !3489)
!3497 = !DILocation(line: 587, column: 34, scope: !3464)
!3498 = !DILocation(line: 588, column: 39, scope: !3464)
!3499 = !DILocation(line: 590, column: 44, scope: !3464)
!3500 = !DILocation(line: 592, column: 24, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3464, file: !2533, line: 592, column: 9)
!3502 = !DILocation(line: 592, column: 44, scope: !3501)
!3503 = !DILocation(line: 592, column: 9, scope: !3464)
!3504 = !DILocation(line: 593, column: 9, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3501, file: !2533, line: 592, column: 50)
!3506 = !DILocation(line: 594, column: 5, scope: !3505)
!3507 = !DILocation(line: 598, column: 30, scope: !3464)
!3508 = !DILocation(line: 599, column: 5, scope: !3464)
!3509 = !DILocation(line: 601, column: 5, scope: !3464)
!3510 = !DILocation(line: 603, column: 1, scope: !3464)
!3511 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !2533, file: !2533, line: 605, type: !3512, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !3514)
!3512 = !DISubroutineType(types: !3513)
!3513 = !{!2996, !61, !1044}
!3514 = !{!3515, !3516, !3517, !3518, !3519}
!3515 = !DILocalVariable(name: "handle", arg: 1, scope: !3511, file: !2533, line: 605, type: !61)
!3516 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !3511, file: !2533, line: 605, type: !1044)
!3517 = !DILocalVariable(name: "current_time", scope: !3511, file: !2533, line: 607, type: !61)
!3518 = !DILocalVariable(name: "mask", scope: !3511, file: !2533, line: 608, type: !61)
!3519 = !DILocalVariable(name: "timer", scope: !3511, file: !2533, line: 609, type: !61)
!3520 = !DILocation(line: 0, scope: !3511)
!3521 = !DILocation(line: 611, column: 17, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3511, file: !2533, line: 611, column: 9)
!3523 = !DILocation(line: 611, column: 37, scope: !3522)
!3524 = !DILocation(line: 611, column: 9, scope: !3511)
!3525 = !DILocation(line: 615, column: 20, scope: !3511)
!3526 = !DILocation(line: 617, column: 37, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3511, file: !2533, line: 617, column: 9)
!3528 = !DILocation(line: 617, column: 45, scope: !3527)
!3529 = !DILocation(line: 617, column: 9, scope: !3511)
!3530 = !DILocation(line: 622, column: 12, scope: !3511)
!3531 = !DILocation(line: 624, column: 35, scope: !3511)
!3532 = !DILocation(line: 624, column: 51, scope: !3511)
!3533 = !DILocation(line: 624, column: 76, scope: !3511)
!3534 = !DILocation(line: 624, column: 49, scope: !3511)
!3535 = !DILocation(line: 626, column: 37, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3511, file: !2533, line: 626, column: 9)
!3537 = !DILocation(line: 626, column: 9, scope: !3511)
!3538 = !DILocation(line: 0, scope: !3536)
!3539 = !DILocation(line: 632, column: 5, scope: !3511)
!3540 = !DILocation(line: 634, column: 5, scope: !3511)
!3541 = !DILocation(line: 636, column: 1, scope: !3511)
!3542 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !95, file: !95, line: 56, type: !3543, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3545)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{!61, !61, !61, !61}
!3545 = !{!3546, !3547, !3548, !3549, !3551, !3552}
!3546 = !DILocalVariable(name: "mul1", arg: 1, scope: !3542, file: !95, line: 56, type: !61)
!3547 = !DILocalVariable(name: "mul2", arg: 2, scope: !3542, file: !95, line: 56, type: !61)
!3548 = !DILocalVariable(name: "div", arg: 3, scope: !3542, file: !95, line: 56, type: !61)
!3549 = !DILocalVariable(name: "data1", scope: !3542, file: !95, line: 58, type: !3550)
!3550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 64, elements: !465)
!3551 = !DILocalVariable(name: "data2", scope: !3542, file: !95, line: 59, type: !3550)
!3552 = !DILocalVariable(name: "result", scope: !3542, file: !95, line: 60, type: !3550)
!3553 = !DILocation(line: 0, scope: !3542)
!3554 = !DILocation(line: 63, column: 22, scope: !3542)
!3555 = !DILocation(line: 63, column: 32, scope: !3542)
!3556 = !DILocation(line: 64, column: 23, scope: !3542)
!3557 = !DILocation(line: 64, column: 40, scope: !3542)
!3558 = !DILocation(line: 66, column: 27, scope: !3542)
!3559 = !DILocation(line: 67, column: 27, scope: !3542)
!3560 = !DILocation(line: 67, column: 44, scope: !3542)
!3561 = !DILocation(line: 69, column: 26, scope: !3542)
!3562 = !DILocation(line: 70, column: 36, scope: !3542)
!3563 = !DILocation(line: 70, column: 43, scope: !3542)
!3564 = !DILocation(line: 70, column: 55, scope: !3542)
!3565 = !DILocation(line: 72, column: 34, scope: !3542)
!3566 = !DILocation(line: 72, column: 41, scope: !3542)
!3567 = !DILocation(line: 72, column: 5, scope: !3542)
!3568 = distinct !DISubprogram(name: "gpt_current_count", scope: !95, file: !95, line: 75, type: !3569, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3571)
!3569 = !DISubroutineType(types: !3570)
!3570 = !{!61, !264}
!3571 = !{!3572}
!3572 = !DILocalVariable(name: "gpt", arg: 1, scope: !3568, file: !95, line: 75, type: !264)
!3573 = !DILocation(line: 0, scope: !3568)
!3574 = !DILocation(line: 77, column: 17, scope: !3568)
!3575 = !DILocation(line: 77, column: 5, scope: !3568)
!3576 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !95, file: !95, line: 81, type: !3577, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3579)
!3577 = !DISubroutineType(types: !3578)
!3578 = !{!61, !61}
!3579 = !{!3580}
!3580 = !DILocalVariable(name: "ms", arg: 1, scope: !3576, file: !95, line: 81, type: !61)
!3581 = !DILocation(line: 0, scope: !3576)
!3582 = !DILocation(line: 83, column: 27, scope: !3576)
!3583 = !DILocation(line: 83, column: 37, scope: !3576)
!3584 = !DILocation(line: 83, column: 43, scope: !3576)
!3585 = !DILocation(line: 83, column: 32, scope: !3576)
!3586 = !DILocation(line: 83, column: 53, scope: !3576)
!3587 = !DILocation(line: 83, column: 59, scope: !3576)
!3588 = !DILocation(line: 83, column: 48, scope: !3576)
!3589 = !DILocation(line: 83, column: 70, scope: !3576)
!3590 = !DILocation(line: 83, column: 76, scope: !3576)
!3591 = !DILocation(line: 83, column: 65, scope: !3576)
!3592 = !DILocation(line: 83, column: 5, scope: !3576)
!3593 = !DILocation(line: 90, column: 9, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !290, file: !95, line: 90, column: 9)
!3595 = !DILocation(line: 90, column: 9, scope: !290)
!3596 = !DILocation(line: 91, column: 13, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3598, file: !95, line: 91, column: 13)
!3598 = distinct !DILexicalBlock(scope: !3594, file: !95, line: 90, column: 24)
!3599 = !DILocation(line: 91, column: 13, scope: !3598)
!3600 = !DILocation(line: 92, column: 32, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3597, file: !95, line: 91, column: 41)
!3602 = !DILocation(line: 92, column: 30, scope: !3601)
!3603 = !DILocation(line: 93, column: 41, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3601, file: !95, line: 93, column: 17)
!3605 = !DILocation(line: 0, scope: !3597)
!3606 = !DILocation(line: 105, column: 1, scope: !290)
!3607 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !95, file: !95, line: 107, type: !291, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3608 = !DILocation(line: 109, column: 9, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3607, file: !95, line: 109, column: 9)
!3610 = !DILocation(line: 109, column: 9, scope: !3607)
!3611 = !DILocation(line: 110, column: 9, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3609, file: !95, line: 109, column: 61)
!3613 = !DILocation(line: 111, column: 5, scope: !3612)
!3614 = !DILocation(line: 112, column: 1, scope: !3607)
!3615 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !95, file: !95, line: 114, type: !3577, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3616)
!3616 = !{!3617}
!3617 = !DILocalVariable(name: "time_us", arg: 1, scope: !3615, file: !95, line: 114, type: !61)
!3618 = !DILocation(line: 0, scope: !3615)
!3619 = !DILocation(line: 116, column: 5, scope: !3615)
!3620 = !DILocation(line: 118, column: 9, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3615, file: !95, line: 118, column: 9)
!3622 = !DILocation(line: 118, column: 9, scope: !3615)
!3623 = !DILocation(line: 120, column: 49, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3621, file: !95, line: 118, column: 37)
!3625 = !DILocation(line: 120, column: 16, scope: !3624)
!3626 = !DILocation(line: 120, column: 9, scope: !3624)
!3627 = !DILocation(line: 0, scope: !3621)
!3628 = !DILocation(line: 125, column: 1, scope: !3615)
!3629 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !95, file: !95, line: 127, type: !3577, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3630)
!3630 = !{!3631}
!3631 = !DILocalVariable(name: "count", arg: 1, scope: !3629, file: !95, line: 127, type: !61)
!3632 = !DILocation(line: 0, scope: !3629)
!3633 = !DILocation(line: 129, column: 5, scope: !3629)
!3634 = !DILocation(line: 131, column: 9, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3629, file: !95, line: 131, column: 9)
!3636 = !DILocation(line: 131, column: 9, scope: !3629)
!3637 = !DILocation(line: 133, column: 69, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3635, file: !95, line: 131, column: 37)
!3639 = !DILocation(line: 133, column: 16, scope: !3638)
!3640 = !DILocation(line: 133, column: 9, scope: !3638)
!3641 = !DILocation(line: 0, scope: !3635)
!3642 = !DILocation(line: 138, column: 1, scope: !3629)
!3643 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !95, file: !95, line: 141, type: !3644, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3646)
!3644 = !DISubroutineType(types: !3645)
!3645 = !{null, !264, !61, !61}
!3646 = !{!3647, !3648, !3649}
!3647 = !DILocalVariable(name: "gpt", arg: 1, scope: !3643, file: !95, line: 141, type: !264)
!3648 = !DILocalVariable(name: "clock_source", arg: 2, scope: !3643, file: !95, line: 141, type: !61)
!3649 = !DILocalVariable(name: "divide", arg: 3, scope: !3643, file: !95, line: 141, type: !61)
!3650 = !DILocation(line: 0, scope: !3643)
!3651 = !DILocation(line: 143, column: 5, scope: !3643)
!3652 = !DILocation(line: 145, column: 33, scope: !3643)
!3653 = !DILocation(line: 145, column: 10, scope: !3643)
!3654 = !DILocation(line: 145, column: 18, scope: !3643)
!3655 = !DILocation(line: 148, column: 10, scope: !3643)
!3656 = !DILocation(line: 148, column: 18, scope: !3643)
!3657 = !DILocation(line: 149, column: 1, scope: !3643)
!3658 = distinct !DISubprogram(name: "gpt_delay_time", scope: !95, file: !95, line: 151, type: !3659, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3661)
!3659 = !DISubroutineType(types: !3660)
!3660 = !{null, !264, !772}
!3661 = !{!3662, !3663, !3664, !3665}
!3662 = !DILocalVariable(name: "gpt", arg: 1, scope: !3658, file: !95, line: 151, type: !264)
!3663 = !DILocalVariable(name: "count", arg: 2, scope: !3658, file: !95, line: 151, type: !772)
!3664 = !DILocalVariable(name: "end_count", scope: !3658, file: !95, line: 153, type: !61)
!3665 = !DILocalVariable(name: "current", scope: !3658, file: !95, line: 153, type: !61)
!3666 = !DILocation(line: 0, scope: !3658)
!3667 = !DILocation(line: 155, column: 17, scope: !3658)
!3668 = !DILocation(line: 156, column: 25, scope: !3658)
!3669 = !DILocation(line: 156, column: 33, scope: !3658)
!3670 = !DILocation(line: 159, column: 19, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3658, file: !95, line: 159, column: 9)
!3672 = !DILocation(line: 159, column: 9, scope: !3658)
!3673 = !DILocation(line: 160, column: 16, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3671, file: !95, line: 159, column: 30)
!3675 = !DILocation(line: 160, column: 39, scope: !3674)
!3676 = !DILocation(line: 160, column: 9, scope: !3674)
!3677 = distinct !{!3677, !3676, !3678}
!3678 = !DILocation(line: 160, column: 51, scope: !3674)
!3679 = !DILocation(line: 162, column: 16, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3671, file: !95, line: 161, column: 12)
!3681 = !DILocation(line: 162, column: 39, scope: !3680)
!3682 = !DILocation(line: 162, column: 9, scope: !3680)
!3683 = distinct !{!3683, !3682, !3684}
!3684 = !DILocation(line: 162, column: 50, scope: !3680)
!3685 = !DILocation(line: 163, column: 16, scope: !3680)
!3686 = !DILocation(line: 163, column: 39, scope: !3680)
!3687 = !DILocation(line: 163, column: 9, scope: !3680)
!3688 = distinct !{!3688, !3687, !3689}
!3689 = !DILocation(line: 163, column: 51, scope: !3680)
!3690 = !DILocation(line: 165, column: 1, scope: !3658)
!3691 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !95, file: !95, line: 166, type: !3692, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3694)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{null, !264}
!3694 = !{!3695}
!3695 = !DILocalVariable(name: "gpt", arg: 1, scope: !3691, file: !95, line: 166, type: !264)
!3696 = !DILocation(line: 0, scope: !3691)
!3697 = !DILocation(line: 168, column: 10, scope: !3691)
!3698 = !DILocation(line: 168, column: 22, scope: !3691)
!3699 = !DILocation(line: 169, column: 10, scope: !3691)
!3700 = !DILocation(line: 169, column: 22, scope: !3691)
!3701 = !DILocation(line: 170, column: 21, scope: !3691)
!3702 = !DILocation(line: 171, column: 5, scope: !3691)
!3703 = !DILocation(line: 171, column: 16, scope: !3691)
!3704 = distinct !{!3704, !3702, !3705}
!3705 = !DILocation(line: 171, column: 26, scope: !3691)
!3706 = !DILocation(line: 172, column: 10, scope: !3691)
!3707 = !DILocation(line: 172, column: 22, scope: !3691)
!3708 = !DILocation(line: 173, column: 10, scope: !3691)
!3709 = !DILocation(line: 173, column: 22, scope: !3691)
!3710 = !DILocation(line: 174, column: 10, scope: !3691)
!3711 = !DILocation(line: 174, column: 22, scope: !3691)
!3712 = !DILocation(line: 176, column: 13, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3691, file: !95, line: 176, column: 9)
!3714 = !DILocation(line: 176, column: 9, scope: !3691)
!3715 = !DILocation(line: 177, column: 27, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3713, file: !95, line: 176, column: 22)
!3717 = !DILocation(line: 178, column: 5, scope: !3716)
!3718 = !DILocation(line: 179, column: 1, scope: !3691)
!3719 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !95, file: !95, line: 181, type: !3569, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3720)
!3720 = !{!3721, !3722}
!3721 = !DILocalVariable(name: "gpt", arg: 1, scope: !3719, file: !95, line: 181, type: !264)
!3722 = !DILocalVariable(name: "mask", scope: !3719, file: !95, line: 183, type: !60)
!3723 = !DILocation(line: 0, scope: !3719)
!3724 = !DILocation(line: 183, column: 5, scope: !3719)
!3725 = !DILocation(line: 183, column: 23, scope: !3719)
!3726 = !DILocation(line: 185, column: 17, scope: !3719)
!3727 = !DILocation(line: 185, column: 10, scope: !3719)
!3728 = !DILocation(line: 187, column: 22, scope: !3719)
!3729 = !DILocation(line: 189, column: 12, scope: !3719)
!3730 = !DILocation(line: 190, column: 1, scope: !3719)
!3731 = !DILocation(line: 189, column: 5, scope: !3719)
!3732 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !95, file: !95, line: 192, type: !3733, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3735)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{null, !264, !61}
!3735 = !{!3736, !3737}
!3736 = !DILocalVariable(name: "gpt", arg: 1, scope: !3732, file: !95, line: 192, type: !264)
!3737 = !DILocalVariable(name: "mask", arg: 2, scope: !3732, file: !95, line: 192, type: !61)
!3738 = !DILocation(line: 0, scope: !3732)
!3739 = !DILocation(line: 194, column: 10, scope: !3732)
!3740 = !DILocation(line: 194, column: 21, scope: !3732)
!3741 = !DILocation(line: 195, column: 1, scope: !3732)
!3742 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !95, file: !95, line: 197, type: !889, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3743)
!3743 = !{!3744, !3745, !3746, !3747, !3748}
!3744 = !DILocalVariable(name: "irq_number", arg: 1, scope: !3742, file: !95, line: 197, type: !862)
!3745 = !DILocalVariable(name: "i", scope: !3742, file: !95, line: 199, type: !61)
!3746 = !DILocalVariable(name: "mask", scope: !3742, file: !95, line: 200, type: !60)
!3747 = !DILocalVariable(name: "state", scope: !3742, file: !95, line: 201, type: !60)
!3748 = !DILocalVariable(name: "enable", scope: !3742, file: !95, line: 202, type: !60)
!3749 = !DILocation(line: 0, scope: !3742)
!3750 = !DILocation(line: 200, column: 5, scope: !3742)
!3751 = !DILocation(line: 200, column: 23, scope: !3742)
!3752 = !DILocation(line: 201, column: 5, scope: !3742)
!3753 = !DILocation(line: 201, column: 23, scope: !3742)
!3754 = !DILocation(line: 202, column: 5, scope: !3742)
!3755 = !DILocation(line: 202, column: 23, scope: !3742)
!3756 = !DILocation(line: 207, column: 5, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3742, file: !95, line: 207, column: 5)
!3758 = !DILocation(line: 209, column: 18, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !95, line: 207, column: 44)
!3760 = distinct !DILexicalBlock(scope: !3757, file: !95, line: 207, column: 5)
!3761 = !DILocation(line: 209, column: 29, scope: !3759)
!3762 = !DILocation(line: 209, column: 16, scope: !3759)
!3763 = !DILocation(line: 210, column: 29, scope: !3759)
!3764 = !DILocation(line: 210, column: 16, scope: !3759)
!3765 = !DILocation(line: 212, column: 16, scope: !3759)
!3766 = !DILocation(line: 212, column: 14, scope: !3759)
!3767 = !DILocation(line: 214, column: 9, scope: !3759)
!3768 = !DILocation(line: 214, column: 20, scope: !3759)
!3769 = !DILocation(line: 214, column: 32, scope: !3759)
!3770 = !DILocation(line: 216, column: 14, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3759, file: !95, line: 216, column: 13)
!3772 = !DILocation(line: 216, column: 20, scope: !3771)
!3773 = !DILocation(line: 216, column: 40, scope: !3771)
!3774 = !DILocation(line: 216, column: 44, scope: !3771)
!3775 = !DILocation(line: 216, column: 51, scope: !3771)
!3776 = !DILocation(line: 216, column: 13, scope: !3759)
!3777 = !DILocation(line: 224, column: 51, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3779, file: !95, line: 224, column: 17)
!3779 = distinct !DILexicalBlock(scope: !3771, file: !95, line: 216, column: 70)
!3780 = !DILocation(line: 224, column: 60, scope: !3778)
!3781 = !DILocation(line: 224, column: 17, scope: !3779)
!3782 = !DILocation(line: 225, column: 94, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3778, file: !95, line: 224, column: 69)
!3784 = !DILocation(line: 225, column: 17, scope: !3783)
!3785 = !DILocation(line: 226, column: 13, scope: !3783)
!3786 = !DILocation(line: 229, column: 31, scope: !3759)
!3787 = !DILocation(line: 229, column: 42, scope: !3759)
!3788 = !DILocation(line: 229, column: 9, scope: !3759)
!3789 = !DILocation(line: 207, column: 40, scope: !3760)
!3790 = !DILocation(line: 207, column: 19, scope: !3760)
!3791 = distinct !{!3791, !3756, !3792}
!3792 = !DILocation(line: 231, column: 5, scope: !3757)
!3793 = !DILocation(line: 233, column: 1, scope: !3742)
!3794 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !95, file: !95, line: 236, type: !291, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3795 = !DILocation(line: 238, column: 5, scope: !3794)
!3796 = !DILocation(line: 239, column: 5, scope: !3794)
!3797 = !DILocation(line: 240, column: 5, scope: !3794)
!3798 = !DILocation(line: 241, column: 1, scope: !3794)
!3799 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !95, file: !95, line: 242, type: !3569, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3800)
!3800 = !{!3801, !3802, !3803, !3804, !3805}
!3801 = !DILocalVariable(name: "gpt", arg: 1, scope: !3799, file: !95, line: 242, type: !264)
!3802 = !DILocalVariable(name: "time", scope: !3799, file: !95, line: 244, type: !60)
!3803 = !DILocalVariable(name: "count", scope: !3799, file: !95, line: 245, type: !61)
!3804 = !DILocalVariable(name: "time_s", scope: !3799, file: !95, line: 245, type: !61)
!3805 = !DILocalVariable(name: "time_ms", scope: !3799, file: !95, line: 245, type: !61)
!3806 = !DILocation(line: 0, scope: !3799)
!3807 = !DILocation(line: 244, column: 5, scope: !3799)
!3808 = !DILocation(line: 244, column: 23, scope: !3799)
!3809 = !DILocation(line: 247, column: 13, scope: !3799)
!3810 = !DILocation(line: 248, column: 20, scope: !3799)
!3811 = !DILocation(line: 249, column: 23, scope: !3799)
!3812 = !DILocation(line: 249, column: 32, scope: !3799)
!3813 = !DILocation(line: 249, column: 39, scope: !3799)
!3814 = !DILocation(line: 249, column: 48, scope: !3799)
!3815 = !DILocation(line: 250, column: 19, scope: !3799)
!3816 = !DILocation(line: 250, column: 26, scope: !3799)
!3817 = !DILocation(line: 250, column: 10, scope: !3799)
!3818 = !DILocation(line: 253, column: 5, scope: !3799)
!3819 = !DILocation(line: 253, column: 30, scope: !3799)
!3820 = !DILocation(line: 253, column: 38, scope: !3799)
!3821 = !DILocation(line: 254, column: 5, scope: !3799)
!3822 = !DILocation(line: 254, column: 36, scope: !3799)
!3823 = distinct !{!3823, !3821, !3824}
!3824 = !DILocation(line: 254, column: 46, scope: !3799)
!3825 = !DILocation(line: 255, column: 12, scope: !3799)
!3826 = !DILocation(line: 256, column: 1, scope: !3799)
!3827 = !DILocation(line: 255, column: 5, scope: !3799)
!3828 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !95, file: !95, line: 258, type: !3829, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3831)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{!61}
!3831 = !{!3832}
!3832 = !DILocalVariable(name: "i", scope: !3828, file: !95, line: 260, type: !61)
!3833 = !DILocation(line: 0, scope: !3828)
!3834 = !DILocation(line: 262, column: 5, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3828, file: !95, line: 262, column: 5)
!3836 = !DILocation(line: 263, column: 37, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3838, file: !95, line: 263, column: 13)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !95, line: 262, column: 45)
!3839 = distinct !DILexicalBlock(scope: !3835, file: !95, line: 262, column: 5)
!3840 = !DILocation(line: 263, column: 45, scope: !3837)
!3841 = !DILocation(line: 263, column: 13, scope: !3838)
!3842 = !DILocation(line: 262, column: 41, scope: !3839)
!3843 = !DILocation(line: 262, column: 19, scope: !3839)
!3844 = distinct !{!3844, !3834, !3845}
!3845 = !DILocation(line: 266, column: 5, scope: !3835)
!3846 = !DILocation(line: 269, column: 1, scope: !3828)
!3847 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !95, file: !95, line: 271, type: !291, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3848)
!3848 = !{!3849, !3850}
!3849 = !DILocalVariable(name: "minimum_time", scope: !3847, file: !95, line: 273, type: !61)
!3850 = !DILocalVariable(name: "current_timer", scope: !3847, file: !95, line: 273, type: !61)
!3851 = !DILocation(line: 273, column: 5, scope: !3847)
!3852 = !DILocation(line: 275, column: 24, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3847, file: !95, line: 275, column: 9)
!3854 = !DILocation(line: 275, column: 9, scope: !3847)
!3855 = !DILocation(line: 0, scope: !3847)
!3856 = !DILocation(line: 279, column: 5, scope: !3847)
!3857 = !DILocation(line: 282, column: 56, scope: !3847)
!3858 = !DILocation(line: 282, column: 39, scope: !3847)
!3859 = !DILocation(line: 284, column: 30, scope: !3847)
!3860 = !DILocation(line: 285, column: 45, scope: !3847)
!3861 = !DILocation(line: 285, column: 5, scope: !3847)
!3862 = !DILocation(line: 286, column: 30, scope: !3847)
!3863 = !DILocation(line: 287, column: 1, scope: !3847)
!3864 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !95, file: !95, line: 308, type: !3865, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3867)
!3865 = !DISubroutineType(types: !3866)
!3866 = !{null, !1044, !1044}
!3867 = !{!3868, !3869, !3870, !3871, !3872}
!3868 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !3864, file: !95, line: 308, type: !1044)
!3869 = !DILocalVariable(name: "number", arg: 2, scope: !3864, file: !95, line: 308, type: !1044)
!3870 = !DILocalVariable(name: "i", scope: !3864, file: !95, line: 310, type: !61)
!3871 = !DILocalVariable(name: "minimum", scope: !3864, file: !95, line: 311, type: !61)
!3872 = !DILocalVariable(name: "data", scope: !3864, file: !95, line: 312, type: !61)
!3873 = !DILocation(line: 0, scope: !3864)
!3874 = !DILocation(line: 314, column: 5, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3864, file: !95, line: 314, column: 5)
!3876 = !DILocation(line: 315, column: 37, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3878, file: !95, line: 315, column: 13)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !95, line: 314, column: 45)
!3879 = distinct !DILexicalBlock(scope: !3875, file: !95, line: 314, column: 5)
!3880 = !DILocation(line: 315, column: 13, scope: !3878)
!3881 = !DILocation(line: 316, column: 20, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3877, file: !95, line: 315, column: 57)
!3883 = !DILocation(line: 318, column: 22, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3882, file: !95, line: 318, column: 17)
!3885 = !DILocation(line: 318, column: 17, scope: !3882)
!3886 = !DILocation(line: 320, column: 25, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3884, file: !95, line: 318, column: 33)
!3888 = !DILocation(line: 321, column: 13, scope: !3887)
!3889 = !DILocation(line: 314, column: 41, scope: !3879)
!3890 = !DILocation(line: 314, column: 19, scope: !3879)
!3891 = distinct !{!3891, !3874, !3892}
!3892 = !DILocation(line: 323, column: 5, scope: !3875)
!3893 = !DILocation(line: 325, column: 19, scope: !3864)
!3894 = !DILocation(line: 326, column: 1, scope: !3864)
!3895 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !95, file: !95, line: 289, type: !3577, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3896)
!3896 = !{!3897, !3898, !3899, !3900}
!3897 = !DILocalVariable(name: "timer_number", arg: 1, scope: !3895, file: !95, line: 289, type: !61)
!3898 = !DILocalVariable(name: "time_out_delta", scope: !3895, file: !95, line: 291, type: !61)
!3899 = !DILocalVariable(name: "current_delta", scope: !3895, file: !95, line: 292, type: !61)
!3900 = !DILocalVariable(name: "ret_value", scope: !3895, file: !95, line: 293, type: !61)
!3901 = !DILocation(line: 0, scope: !3895)
!3902 = !DILocation(line: 295, column: 22, scope: !3895)
!3903 = !DILocation(line: 296, column: 22, scope: !3895)
!3904 = !DILocation(line: 298, column: 24, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3895, file: !95, line: 298, column: 9)
!3906 = !DILocation(line: 298, column: 9, scope: !3895)
!3907 = !DILocation(line: 306, column: 5, scope: !3895)
!3908 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !95, file: !95, line: 329, type: !309, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3909)
!3909 = !{!3910, !3911, !3912, !3913}
!3910 = !DILocalVariable(name: "parameter", arg: 1, scope: !3908, file: !95, line: 329, type: !88)
!3911 = !DILocalVariable(name: "i", scope: !3908, file: !95, line: 331, type: !61)
!3912 = !DILocalVariable(name: "time_ms", scope: !3908, file: !95, line: 332, type: !60)
!3913 = !DILocalVariable(name: "data", scope: !3908, file: !95, line: 333, type: !60)
!3914 = !DILocation(line: 0, scope: !3908)
!3915 = !DILocation(line: 332, column: 5, scope: !3908)
!3916 = !DILocation(line: 332, column: 23, scope: !3908)
!3917 = !DILocation(line: 333, column: 5, scope: !3908)
!3918 = !DILocation(line: 333, column: 23, scope: !3908)
!3919 = !DILocation(line: 336, column: 24, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3908, file: !95, line: 336, column: 9)
!3921 = !DILocation(line: 336, column: 41, scope: !3920)
!3922 = !DILocation(line: 336, column: 9, scope: !3908)
!3923 = !DILocation(line: 338, column: 34, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3920, file: !95, line: 336, column: 47)
!3925 = !DILocation(line: 339, column: 9, scope: !3924)
!3926 = !DILocation(line: 340, column: 34, scope: !3924)
!3927 = !DILocation(line: 342, column: 46, scope: !3924)
!3928 = !DILocation(line: 342, column: 19, scope: !3924)
!3929 = !DILocation(line: 342, column: 17, scope: !3924)
!3930 = !DILocation(line: 344, column: 41, scope: !3924)
!3931 = !DILocation(line: 344, column: 38, scope: !3924)
!3932 = !DILocation(line: 345, column: 42, scope: !3924)
!3933 = !DILocation(line: 347, column: 9, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3924, file: !95, line: 347, column: 9)
!3935 = !DILocation(line: 348, column: 41, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3937, file: !95, line: 348, column: 17)
!3937 = distinct !DILexicalBlock(scope: !3938, file: !95, line: 347, column: 49)
!3938 = distinct !DILexicalBlock(scope: !3934, file: !95, line: 347, column: 9)
!3939 = !DILocation(line: 348, column: 17, scope: !3937)
!3940 = !DILocation(line: 350, column: 24, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3936, file: !95, line: 348, column: 61)
!3942 = !DILocation(line: 350, column: 22, scope: !3941)
!3943 = !DILocation(line: 352, column: 21, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3941, file: !95, line: 352, column: 21)
!3945 = !DILocation(line: 352, column: 26, scope: !3944)
!3946 = !DILocation(line: 352, column: 21, scope: !3941)
!3947 = !DILocation(line: 353, column: 56, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3944, file: !95, line: 352, column: 32)
!3949 = !DILocation(line: 354, column: 55, scope: !3948)
!3950 = !DILocation(line: 356, column: 62, scope: !3948)
!3951 = !DILocation(line: 356, column: 112, scope: !3948)
!3952 = !DILocation(line: 356, column: 21, scope: !3948)
!3953 = !DILocation(line: 357, column: 17, scope: !3948)
!3954 = !DILocation(line: 347, column: 45, scope: !3938)
!3955 = !DILocation(line: 347, column: 23, scope: !3938)
!3956 = distinct !{!3956, !3933, !3957}
!3957 = !DILocation(line: 360, column: 9, scope: !3934)
!3958 = !DILocation(line: 362, column: 42, scope: !3924)
!3959 = !DILocation(line: 364, column: 28, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3924, file: !95, line: 364, column: 13)
!3961 = !DILocation(line: 364, column: 48, scope: !3960)
!3962 = !DILocation(line: 364, column: 13, scope: !3924)
!3963 = !DILocation(line: 365, column: 13, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3960, file: !95, line: 364, column: 54)
!3965 = !DILocation(line: 366, column: 9, scope: !3964)
!3966 = !DILocation(line: 369, column: 1, scope: !3908)
!3967 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !346, file: !346, line: 50, type: !3968, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !3971)
!3968 = !DISubroutineType(types: !3969)
!3969 = !{!61, !3970}
!3970 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !98, line: 390, baseType: !348)
!3971 = !{!3972, !3973, !3974}
!3972 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3967, file: !346, line: 50, type: !3970)
!3973 = !DILocalVariable(name: "i", scope: !3967, file: !346, line: 52, type: !61)
!3974 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !3967, file: !346, line: 53, type: !953)
!3975 = !DILocation(line: 0, scope: !3967)
!3976 = !DILocation(line: 53, column: 14, scope: !3967)
!3977 = !DILocation(line: 55, column: 5, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3967, file: !346, line: 55, column: 5)
!3979 = !DILocation(line: 55, column: 25, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3978, file: !346, line: 55, column: 5)
!3981 = !DILocation(line: 55, column: 19, scope: !3980)
!3982 = distinct !{!3982, !3977, !3983}
!3983 = !DILocation(line: 59, column: 5, scope: !3978)
!3984 = !DILocation(line: 56, column: 13, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !346, line: 56, column: 13)
!3986 = distinct !DILexicalBlock(scope: !3980, file: !346, line: 55, column: 29)
!3987 = !DILocation(line: 56, column: 40, scope: !3985)
!3988 = !DILocation(line: 56, column: 13, scope: !3986)
!3989 = !DILocation(line: 61, column: 1, scope: !3967)
!3990 = distinct !DISubprogram(name: "hal_gpio_init", scope: !346, file: !346, line: 66, type: !3991, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !3994)
!3991 = !DISubroutineType(types: !3992)
!3992 = !{!3993, !3970}
!3993 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !401, line: 229, baseType: !400)
!3994 = !{!3995}
!3995 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3990, file: !346, line: 66, type: !3970)
!3996 = !DILocation(line: 0, scope: !3990)
!3997 = !DILocation(line: 68, column: 5, scope: !3990)
!3998 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !346, file: !346, line: 72, type: !3991, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !3999)
!3999 = !{!4000}
!4000 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3998, file: !346, line: 72, type: !3970)
!4001 = !DILocation(line: 0, scope: !3998)
!4002 = !DILocation(line: 74, column: 5, scope: !3998)
!4003 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !346, file: !346, line: 79, type: !4004, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4006)
!4004 = !DISubroutineType(types: !4005)
!4005 = !{!3993, !3970, !442}
!4006 = !{!4007, !4008, !4009, !4010}
!4007 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4003, file: !346, line: 79, type: !3970)
!4008 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4003, file: !346, line: 79, type: !442)
!4009 = !DILocalVariable(name: "no", scope: !4003, file: !346, line: 81, type: !61)
!4010 = !DILocalVariable(name: "remainder", scope: !4003, file: !346, line: 82, type: !61)
!4011 = !DILocation(line: 0, scope: !4003)
!4012 = !DILocation(line: 84, column: 18, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4003, file: !346, line: 84, column: 9)
!4014 = !DILocation(line: 84, column: 9, scope: !4003)
!4015 = !DILocation(line: 89, column: 19, scope: !4003)
!4016 = !DILocation(line: 92, column: 26, scope: !4003)
!4017 = !DILocation(line: 94, column: 24, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4003, file: !346, line: 94, column: 9)
!4019 = !DILocation(line: 0, scope: !4018)
!4020 = !DILocation(line: 94, column: 9, scope: !4003)
!4021 = !DILocation(line: 101, column: 1, scope: !4003)
!4022 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !346, file: !346, line: 105, type: !4023, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4026)
!4023 = !DISubroutineType(types: !4024)
!4024 = !{!3993, !3970, !4025}
!4025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 32)
!4026 = !{!4027, !4028, !4029, !4030, !4031}
!4027 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4022, file: !346, line: 105, type: !3970)
!4028 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4022, file: !346, line: 105, type: !4025)
!4029 = !DILocalVariable(name: "no", scope: !4022, file: !346, line: 107, type: !61)
!4030 = !DILocalVariable(name: "remainder", scope: !4022, file: !346, line: 108, type: !61)
!4031 = !DILocalVariable(name: "temp", scope: !4022, file: !346, line: 109, type: !61)
!4032 = !DILocation(line: 0, scope: !4022)
!4033 = !DILocation(line: 111, column: 18, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4022, file: !346, line: 111, column: 9)
!4035 = !DILocation(line: 111, column: 9, scope: !4022)
!4036 = !DILocation(line: 115, column: 14, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4022, file: !346, line: 115, column: 9)
!4038 = !DILocation(line: 115, column: 9, scope: !4022)
!4039 = !DILocation(line: 120, column: 19, scope: !4022)
!4040 = !DILocation(line: 123, column: 26, scope: !4022)
!4041 = !DILocation(line: 125, column: 12, scope: !4022)
!4042 = !DILocation(line: 125, column: 54, scope: !4022)
!4043 = !DILocation(line: 126, column: 45, scope: !4022)
!4044 = !DILocation(line: 126, column: 17, scope: !4022)
!4045 = !DILocation(line: 127, column: 51, scope: !4022)
!4046 = !DILocation(line: 127, column: 21, scope: !4022)
!4047 = !DILocation(line: 128, column: 5, scope: !4022)
!4048 = !DILocation(line: 130, column: 1, scope: !4022)
!4049 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !346, file: !346, line: 134, type: !4050, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4053)
!4050 = !DISubroutineType(types: !4051)
!4051 = !{!4052, !3970, !460}
!4052 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !401, line: 238, baseType: !411)
!4053 = !{!4054, !4055, !4056, !4057, !4058}
!4054 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4049, file: !346, line: 134, type: !3970)
!4055 = !DILocalVariable(name: "function_index", arg: 2, scope: !4049, file: !346, line: 134, type: !460)
!4056 = !DILocalVariable(name: "no", scope: !4049, file: !346, line: 136, type: !61)
!4057 = !DILocalVariable(name: "remainder", scope: !4049, file: !346, line: 137, type: !61)
!4058 = !DILocalVariable(name: "irq_status", scope: !4049, file: !346, line: 138, type: !61)
!4059 = !DILocation(line: 0, scope: !4049)
!4060 = !DILocation(line: 140, column: 18, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4049, file: !346, line: 140, column: 9)
!4062 = !DILocation(line: 140, column: 9, scope: !4049)
!4063 = !DILocation(line: 145, column: 24, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4049, file: !346, line: 145, column: 9)
!4065 = !DILocation(line: 145, column: 9, scope: !4049)
!4066 = !DILocation(line: 145, column: 9, scope: !4064)
!4067 = !DILocation(line: 150, column: 19, scope: !4049)
!4068 = !DILocation(line: 156, column: 18, scope: !4049)
!4069 = !DILocation(line: 157, column: 105, scope: !4049)
!4070 = !DILocation(line: 157, column: 91, scope: !4049)
!4071 = !DILocation(line: 157, column: 5, scope: !4049)
!4072 = !DILocation(line: 157, column: 48, scope: !4049)
!4073 = !DILocation(line: 157, column: 62, scope: !4049)
!4074 = !DILocation(line: 158, column: 80, scope: !4049)
!4075 = !DILocation(line: 158, column: 5, scope: !4049)
!4076 = !DILocation(line: 158, column: 48, scope: !4049)
!4077 = !DILocation(line: 158, column: 62, scope: !4049)
!4078 = !DILocation(line: 159, column: 5, scope: !4049)
!4079 = !DILocation(line: 160, column: 5, scope: !4049)
!4080 = !DILocation(line: 162, column: 1, scope: !4049)
!4081 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !346, file: !346, line: 166, type: !4082, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4085)
!4082 = !DISubroutineType(types: !4083)
!4083 = !{!3993, !3970, !4084}
!4084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 32)
!4085 = !{!4086, !4087, !4088, !4089, !4090}
!4086 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4081, file: !346, line: 166, type: !3970)
!4087 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4081, file: !346, line: 166, type: !4084)
!4088 = !DILocalVariable(name: "no", scope: !4081, file: !346, line: 168, type: !61)
!4089 = !DILocalVariable(name: "remainder", scope: !4081, file: !346, line: 169, type: !61)
!4090 = !DILocalVariable(name: "temp", scope: !4081, file: !346, line: 170, type: !61)
!4091 = !DILocation(line: 0, scope: !4081)
!4092 = !DILocation(line: 172, column: 18, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4081, file: !346, line: 172, column: 9)
!4094 = !DILocation(line: 172, column: 9, scope: !4081)
!4095 = !DILocation(line: 176, column: 14, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4081, file: !346, line: 176, column: 9)
!4097 = !DILocation(line: 176, column: 9, scope: !4081)
!4098 = !DILocation(line: 181, column: 19, scope: !4081)
!4099 = !DILocation(line: 184, column: 26, scope: !4081)
!4100 = !DILocation(line: 186, column: 12, scope: !4081)
!4101 = !DILocation(line: 186, column: 54, scope: !4081)
!4102 = !DILocation(line: 187, column: 45, scope: !4081)
!4103 = !DILocation(line: 187, column: 17, scope: !4081)
!4104 = !DILocation(line: 188, column: 41, scope: !4081)
!4105 = !DILocation(line: 188, column: 16, scope: !4081)
!4106 = !DILocation(line: 189, column: 5, scope: !4081)
!4107 = !DILocation(line: 191, column: 1, scope: !4081)
!4108 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !346, file: !346, line: 195, type: !4109, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4111)
!4109 = !DISubroutineType(types: !4110)
!4110 = !{!3993, !3970, !443}
!4111 = !{!4112, !4113, !4114, !4115}
!4112 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4108, file: !346, line: 195, type: !3970)
!4113 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4108, file: !346, line: 195, type: !443)
!4114 = !DILocalVariable(name: "no", scope: !4108, file: !346, line: 197, type: !61)
!4115 = !DILocalVariable(name: "remainder", scope: !4108, file: !346, line: 198, type: !61)
!4116 = !DILocation(line: 0, scope: !4108)
!4117 = !DILocation(line: 200, column: 18, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4108, file: !346, line: 200, column: 9)
!4119 = !DILocation(line: 200, column: 9, scope: !4108)
!4120 = !DILocation(line: 205, column: 19, scope: !4108)
!4121 = !DILocation(line: 208, column: 26, scope: !4108)
!4122 = !DILocation(line: 210, column: 9, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4108, file: !346, line: 210, column: 9)
!4124 = !DILocation(line: 0, scope: !4123)
!4125 = !DILocation(line: 210, column: 9, scope: !4108)
!4126 = !DILocation(line: 216, column: 1, scope: !4108)
!4127 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !346, file: !346, line: 220, type: !4082, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4128)
!4128 = !{!4129, !4130, !4131, !4132, !4133}
!4129 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4127, file: !346, line: 220, type: !3970)
!4130 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4127, file: !346, line: 220, type: !4084)
!4131 = !DILocalVariable(name: "no", scope: !4127, file: !346, line: 222, type: !61)
!4132 = !DILocalVariable(name: "remainder", scope: !4127, file: !346, line: 223, type: !61)
!4133 = !DILocalVariable(name: "temp", scope: !4127, file: !346, line: 224, type: !61)
!4134 = !DILocation(line: 0, scope: !4127)
!4135 = !DILocation(line: 226, column: 18, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4127, file: !346, line: 226, column: 9)
!4137 = !DILocation(line: 226, column: 9, scope: !4127)
!4138 = !DILocation(line: 230, column: 14, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4127, file: !346, line: 230, column: 9)
!4140 = !DILocation(line: 230, column: 9, scope: !4127)
!4141 = !DILocation(line: 235, column: 19, scope: !4127)
!4142 = !DILocation(line: 238, column: 26, scope: !4127)
!4143 = !DILocation(line: 240, column: 12, scope: !4127)
!4144 = !DILocation(line: 240, column: 55, scope: !4127)
!4145 = !DILocation(line: 241, column: 45, scope: !4127)
!4146 = !DILocation(line: 241, column: 17, scope: !4127)
!4147 = !DILocation(line: 242, column: 41, scope: !4127)
!4148 = !DILocation(line: 242, column: 16, scope: !4127)
!4149 = !DILocation(line: 243, column: 5, scope: !4127)
!4150 = !DILocation(line: 245, column: 1, scope: !4127)
!4151 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !346, file: !346, line: 249, type: !3991, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4152)
!4152 = !{!4153, !4154, !4155, !4156}
!4153 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4151, file: !346, line: 249, type: !3970)
!4154 = !DILocalVariable(name: "no", scope: !4151, file: !346, line: 251, type: !61)
!4155 = !DILocalVariable(name: "remainder", scope: !4151, file: !346, line: 252, type: !61)
!4156 = !DILocalVariable(name: "temp", scope: !4151, file: !346, line: 253, type: !61)
!4157 = !DILocation(line: 0, scope: !4151)
!4158 = !DILocation(line: 255, column: 18, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4151, file: !346, line: 255, column: 9)
!4160 = !DILocation(line: 255, column: 9, scope: !4151)
!4161 = !DILocation(line: 260, column: 19, scope: !4151)
!4162 = !DILocation(line: 263, column: 26, scope: !4151)
!4163 = !DILocation(line: 265, column: 12, scope: !4151)
!4164 = !DILocation(line: 265, column: 55, scope: !4151)
!4165 = !DILocation(line: 266, column: 45, scope: !4151)
!4166 = !DILocation(line: 266, column: 17, scope: !4151)
!4167 = !DILocation(line: 267, column: 15, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4151, file: !346, line: 267, column: 9)
!4169 = !DILocation(line: 267, column: 9, scope: !4151)
!4170 = !DILocation(line: 0, scope: !4168)
!4171 = !DILocation(line: 273, column: 1, scope: !4151)
!4172 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !346, file: !346, line: 278, type: !3991, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4173)
!4173 = !{!4174, !4175, !4176}
!4174 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4172, file: !346, line: 278, type: !3970)
!4175 = !DILocalVariable(name: "no", scope: !4172, file: !346, line: 280, type: !61)
!4176 = !DILocalVariable(name: "remainder", scope: !4172, file: !346, line: 281, type: !61)
!4177 = !DILocation(line: 0, scope: !4172)
!4178 = !DILocation(line: 283, column: 18, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4172, file: !346, line: 283, column: 9)
!4180 = !DILocation(line: 283, column: 9, scope: !4172)
!4181 = !DILocation(line: 288, column: 19, scope: !4172)
!4182 = !DILocation(line: 291, column: 26, scope: !4172)
!4183 = !DILocation(line: 293, column: 90, scope: !4172)
!4184 = !DILocation(line: 293, column: 5, scope: !4172)
!4185 = !DILocation(line: 293, column: 48, scope: !4172)
!4186 = !DILocation(line: 293, column: 62, scope: !4172)
!4187 = !DILocation(line: 294, column: 5, scope: !4172)
!4188 = !DILocation(line: 295, column: 1, scope: !4172)
!4189 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !346, file: !346, line: 299, type: !3991, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4190)
!4190 = !{!4191, !4192, !4193}
!4191 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4189, file: !346, line: 299, type: !3970)
!4192 = !DILocalVariable(name: "no", scope: !4189, file: !346, line: 301, type: !61)
!4193 = !DILocalVariable(name: "remainder", scope: !4189, file: !346, line: 302, type: !61)
!4194 = !DILocation(line: 0, scope: !4189)
!4195 = !DILocation(line: 304, column: 18, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4189, file: !346, line: 304, column: 9)
!4197 = !DILocation(line: 304, column: 9, scope: !4189)
!4198 = !DILocation(line: 309, column: 19, scope: !4189)
!4199 = !DILocation(line: 312, column: 26, scope: !4189)
!4200 = !DILocation(line: 314, column: 90, scope: !4189)
!4201 = !DILocation(line: 314, column: 5, scope: !4189)
!4202 = !DILocation(line: 314, column: 48, scope: !4189)
!4203 = !DILocation(line: 314, column: 62, scope: !4189)
!4204 = !DILocation(line: 315, column: 5, scope: !4189)
!4205 = !DILocation(line: 316, column: 1, scope: !4189)
!4206 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !346, file: !346, line: 321, type: !3991, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4207)
!4207 = !{!4208, !4209, !4210}
!4208 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4206, file: !346, line: 321, type: !3970)
!4209 = !DILocalVariable(name: "no", scope: !4206, file: !346, line: 323, type: !61)
!4210 = !DILocalVariable(name: "remainder", scope: !4206, file: !346, line: 324, type: !61)
!4211 = !DILocation(line: 0, scope: !4206)
!4212 = !DILocation(line: 326, column: 19, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4206, file: !346, line: 326, column: 9)
!4214 = !DILocation(line: 326, column: 36, scope: !4213)
!4215 = !DILocation(line: 326, column: 41, scope: !4213)
!4216 = !DILocation(line: 326, column: 9, scope: !4206)
!4217 = !DILocation(line: 331, column: 19, scope: !4206)
!4218 = !DILocation(line: 334, column: 26, scope: !4206)
!4219 = !DILocation(line: 336, column: 94, scope: !4206)
!4220 = !DILocation(line: 336, column: 5, scope: !4206)
!4221 = !DILocation(line: 336, column: 50, scope: !4206)
!4222 = !DILocation(line: 336, column: 66, scope: !4206)
!4223 = !DILocation(line: 337, column: 5, scope: !4206)
!4224 = !DILocation(line: 337, column: 51, scope: !4206)
!4225 = !DILocation(line: 337, column: 68, scope: !4206)
!4226 = !DILocation(line: 338, column: 5, scope: !4206)
!4227 = !DILocation(line: 339, column: 1, scope: !4206)
!4228 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !346, file: !346, line: 343, type: !3991, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4229)
!4229 = !{!4230, !4231, !4232}
!4230 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4228, file: !346, line: 343, type: !3970)
!4231 = !DILocalVariable(name: "no", scope: !4228, file: !346, line: 345, type: !61)
!4232 = !DILocalVariable(name: "remainder", scope: !4228, file: !346, line: 346, type: !61)
!4233 = !DILocation(line: 0, scope: !4228)
!4234 = !DILocation(line: 348, column: 19, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4228, file: !346, line: 348, column: 9)
!4236 = !DILocation(line: 348, column: 36, scope: !4235)
!4237 = !DILocation(line: 348, column: 41, scope: !4235)
!4238 = !DILocation(line: 348, column: 9, scope: !4228)
!4239 = !DILocation(line: 353, column: 19, scope: !4228)
!4240 = !DILocation(line: 356, column: 26, scope: !4228)
!4241 = !DILocation(line: 358, column: 94, scope: !4228)
!4242 = !DILocation(line: 358, column: 5, scope: !4228)
!4243 = !DILocation(line: 358, column: 50, scope: !4228)
!4244 = !DILocation(line: 358, column: 66, scope: !4228)
!4245 = !DILocation(line: 359, column: 5, scope: !4228)
!4246 = !DILocation(line: 359, column: 51, scope: !4228)
!4247 = !DILocation(line: 359, column: 68, scope: !4228)
!4248 = !DILocation(line: 360, column: 5, scope: !4228)
!4249 = !DILocation(line: 361, column: 1, scope: !4228)
!4250 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !346, file: !346, line: 365, type: !3991, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4251)
!4251 = !{!4252, !4253, !4254}
!4252 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4250, file: !346, line: 365, type: !3970)
!4253 = !DILocalVariable(name: "no", scope: !4250, file: !346, line: 367, type: !61)
!4254 = !DILocalVariable(name: "remainder", scope: !4250, file: !346, line: 368, type: !61)
!4255 = !DILocation(line: 0, scope: !4250)
!4256 = !DILocation(line: 370, column: 19, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4250, file: !346, line: 370, column: 9)
!4258 = !DILocation(line: 370, column: 36, scope: !4257)
!4259 = !DILocation(line: 370, column: 41, scope: !4257)
!4260 = !DILocation(line: 370, column: 9, scope: !4250)
!4261 = !DILocation(line: 375, column: 19, scope: !4250)
!4262 = !DILocation(line: 378, column: 26, scope: !4250)
!4263 = !DILocation(line: 380, column: 94, scope: !4250)
!4264 = !DILocation(line: 380, column: 5, scope: !4250)
!4265 = !DILocation(line: 380, column: 50, scope: !4250)
!4266 = !DILocation(line: 380, column: 66, scope: !4250)
!4267 = !DILocation(line: 381, column: 5, scope: !4250)
!4268 = !DILocation(line: 382, column: 1, scope: !4250)
!4269 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !346, file: !346, line: 387, type: !4270, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4274)
!4270 = !DISubroutineType(types: !4271)
!4271 = !{!3993, !4272, !4273}
!4272 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !98, line: 423, baseType: !421)
!4273 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !98, line: 431, baseType: !430)
!4274 = !{!4275, !4276}
!4275 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !4269, file: !346, line: 387, type: !4272)
!4276 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !4269, file: !346, line: 387, type: !4273)
!4277 = !DILocation(line: 0, scope: !4269)
!4278 = !DILocation(line: 390, column: 24, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4269, file: !346, line: 390, column: 9)
!4280 = !DILocation(line: 390, column: 9, scope: !4269)
!4281 = !DILocation(line: 394, column: 5, scope: !4269)
!4282 = !DILocation(line: 394, column: 62, scope: !4269)
!4283 = !DILocation(line: 394, column: 74, scope: !4269)
!4284 = !DILocation(line: 395, column: 5, scope: !4269)
!4285 = !DILocation(line: 396, column: 1, scope: !4269)
!4286 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !346, file: !346, line: 403, type: !4287, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4289)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{!3993, !3970, !460, !460, !460}
!4289 = !{!4290, !4291, !4292, !4293, !4294, !4295}
!4290 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4286, file: !346, line: 403, type: !3970)
!4291 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !4286, file: !346, line: 403, type: !460)
!4292 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !4286, file: !346, line: 403, type: !460)
!4293 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !4286, file: !346, line: 403, type: !460)
!4294 = !DILocalVariable(name: "no", scope: !4286, file: !346, line: 405, type: !61)
!4295 = !DILocalVariable(name: "remainder", scope: !4286, file: !346, line: 406, type: !61)
!4296 = !DILocation(line: 0, scope: !4286)
!4297 = !DILocation(line: 408, column: 19, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4286, file: !346, line: 408, column: 9)
!4299 = !DILocation(line: 408, column: 36, scope: !4298)
!4300 = !DILocation(line: 408, column: 40, scope: !4298)
!4301 = !DILocation(line: 408, column: 9, scope: !4286)
!4302 = !DILocation(line: 413, column: 19, scope: !4286)
!4303 = !DILocation(line: 416, column: 26, scope: !4286)
!4304 = !DILocation(line: 418, column: 9, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4286, file: !346, line: 418, column: 9)
!4306 = !DILocation(line: 0, scope: !4305)
!4307 = !DILocation(line: 418, column: 9, scope: !4286)
!4308 = !DILocation(line: 424, column: 9, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4286, file: !346, line: 424, column: 9)
!4310 = !DILocation(line: 0, scope: !4309)
!4311 = !DILocation(line: 424, column: 9, scope: !4286)
!4312 = !DILocation(line: 430, column: 9, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4286, file: !346, line: 430, column: 9)
!4314 = !DILocation(line: 0, scope: !4313)
!4315 = !DILocation(line: 430, column: 9, scope: !4286)
!4316 = !DILocation(line: 436, column: 1, scope: !4286)
!4317 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !346, file: !346, line: 441, type: !3991, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4318)
!4318 = !{!4319, !4320, !4321, !4322, !4323, !4324, !4325}
!4319 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4317, file: !346, line: 441, type: !3970)
!4320 = !DILocalVariable(name: "no1", scope: !4317, file: !346, line: 443, type: !61)
!4321 = !DILocalVariable(name: "no2", scope: !4317, file: !346, line: 443, type: !61)
!4322 = !DILocalVariable(name: "no3", scope: !4317, file: !346, line: 443, type: !61)
!4323 = !DILocalVariable(name: "remainder1", scope: !4317, file: !346, line: 444, type: !61)
!4324 = !DILocalVariable(name: "remainder2", scope: !4317, file: !346, line: 444, type: !61)
!4325 = !DILocalVariable(name: "remainder3", scope: !4317, file: !346, line: 444, type: !61)
!4326 = !DILocation(line: 0, scope: !4317)
!4327 = !DILocation(line: 446, column: 18, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4317, file: !346, line: 446, column: 9)
!4329 = !DILocation(line: 446, column: 9, scope: !4317)
!4330 = !DILocation(line: 451, column: 20, scope: !4317)
!4331 = !DILocation(line: 454, column: 27, scope: !4317)
!4332 = !DILocation(line: 457, column: 20, scope: !4317)
!4333 = !DILocation(line: 463, column: 20, scope: !4317)
!4334 = !DILocation(line: 469, column: 107, scope: !4317)
!4335 = !DILocation(line: 469, column: 92, scope: !4317)
!4336 = !DILocation(line: 469, column: 5, scope: !4317)
!4337 = !DILocation(line: 469, column: 49, scope: !4317)
!4338 = !DILocation(line: 469, column: 63, scope: !4317)
!4339 = !DILocation(line: 472, column: 89, scope: !4317)
!4340 = !DILocation(line: 472, column: 5, scope: !4317)
!4341 = !DILocation(line: 472, column: 48, scope: !4317)
!4342 = !DILocation(line: 472, column: 61, scope: !4317)
!4343 = !DILocation(line: 475, column: 5, scope: !4317)
!4344 = !DILocation(line: 475, column: 48, scope: !4317)
!4345 = !DILocation(line: 475, column: 61, scope: !4317)
!4346 = !DILocation(line: 478, column: 9, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4317, file: !346, line: 478, column: 9)
!4348 = !DILocation(line: 0, scope: !4347)
!4349 = !DILocation(line: 478, column: 9, scope: !4317)
!4350 = !DILocation(line: 479, column: 55, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4347, file: !346, line: 478, column: 40)
!4352 = !DILocation(line: 480, column: 5, scope: !4351)
!4353 = !DILocation(line: 483, column: 53, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4347, file: !346, line: 482, column: 10)
!4355 = !DILocation(line: 483, column: 67, scope: !4354)
!4356 = !DILocation(line: 484, column: 9, scope: !4354)
!4357 = !DILocation(line: 484, column: 55, scope: !4354)
!4358 = !DILocation(line: 484, column: 71, scope: !4354)
!4359 = !DILocation(line: 485, column: 9, scope: !4354)
!4360 = !DILocation(line: 485, column: 55, scope: !4354)
!4361 = !DILocation(line: 490, column: 5, scope: !4317)
!4362 = !DILocation(line: 490, column: 48, scope: !4317)
!4363 = !DILocation(line: 490, column: 61, scope: !4317)
!4364 = !DILocation(line: 493, column: 5, scope: !4317)
!4365 = !DILocation(line: 493, column: 47, scope: !4317)
!4366 = !DILocation(line: 493, column: 59, scope: !4317)
!4367 = !DILocation(line: 496, column: 108, scope: !4317)
!4368 = !DILocation(line: 496, column: 93, scope: !4317)
!4369 = !DILocation(line: 496, column: 5, scope: !4317)
!4370 = !DILocation(line: 496, column: 50, scope: !4317)
!4371 = !DILocation(line: 496, column: 65, scope: !4317)
!4372 = !DILocation(line: 498, column: 5, scope: !4317)
!4373 = !DILocation(line: 499, column: 1, scope: !4317)
!4374 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !346, file: !346, line: 502, type: !3991, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4375)
!4375 = !{!4376, !4377, !4378, !4379, !4380}
!4376 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4374, file: !346, line: 502, type: !3970)
!4377 = !DILocalVariable(name: "no1", scope: !4374, file: !346, line: 504, type: !61)
!4378 = !DILocalVariable(name: "no2", scope: !4374, file: !346, line: 504, type: !61)
!4379 = !DILocalVariable(name: "remainder1", scope: !4374, file: !346, line: 505, type: !61)
!4380 = !DILocalVariable(name: "remainder2", scope: !4374, file: !346, line: 505, type: !61)
!4381 = !DILocation(line: 0, scope: !4374)
!4382 = !DILocation(line: 507, column: 18, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4374, file: !346, line: 507, column: 9)
!4384 = !DILocation(line: 507, column: 9, scope: !4374)
!4385 = !DILocation(line: 512, column: 20, scope: !4374)
!4386 = !DILocation(line: 515, column: 27, scope: !4374)
!4387 = !DILocation(line: 518, column: 20, scope: !4374)
!4388 = !DILocation(line: 524, column: 107, scope: !4374)
!4389 = !DILocation(line: 524, column: 92, scope: !4374)
!4390 = !DILocation(line: 524, column: 5, scope: !4374)
!4391 = !DILocation(line: 524, column: 49, scope: !4374)
!4392 = !DILocation(line: 524, column: 63, scope: !4374)
!4393 = !DILocation(line: 527, column: 89, scope: !4374)
!4394 = !DILocation(line: 527, column: 5, scope: !4374)
!4395 = !DILocation(line: 527, column: 48, scope: !4374)
!4396 = !DILocation(line: 527, column: 61, scope: !4374)
!4397 = !DILocation(line: 530, column: 9, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4374, file: !346, line: 530, column: 9)
!4399 = !DILocation(line: 0, scope: !4398)
!4400 = !DILocation(line: 530, column: 9, scope: !4374)
!4401 = !DILocation(line: 531, column: 55, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4398, file: !346, line: 530, column: 40)
!4403 = !DILocation(line: 531, column: 71, scope: !4402)
!4404 = !DILocation(line: 532, column: 9, scope: !4402)
!4405 = !DILocation(line: 532, column: 56, scope: !4402)
!4406 = !DILocation(line: 533, column: 5, scope: !4402)
!4407 = !DILocation(line: 536, column: 53, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4398, file: !346, line: 535, column: 10)
!4409 = !DILocation(line: 536, column: 67, scope: !4408)
!4410 = !DILocation(line: 537, column: 9, scope: !4408)
!4411 = !DILocation(line: 537, column: 55, scope: !4408)
!4412 = !DILocation(line: 537, column: 71, scope: !4408)
!4413 = !DILocation(line: 538, column: 9, scope: !4408)
!4414 = !DILocation(line: 538, column: 55, scope: !4408)
!4415 = !DILocation(line: 543, column: 5, scope: !4374)
!4416 = !DILocation(line: 543, column: 48, scope: !4374)
!4417 = !DILocation(line: 543, column: 61, scope: !4374)
!4418 = !DILocation(line: 546, column: 5, scope: !4374)
!4419 = !DILocation(line: 546, column: 47, scope: !4374)
!4420 = !DILocation(line: 546, column: 59, scope: !4374)
!4421 = !DILocation(line: 549, column: 5, scope: !4374)
!4422 = !DILocation(line: 550, column: 1, scope: !4374)
!4423 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !346, file: !346, line: 554, type: !4424, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4426)
!4424 = !DISubroutineType(types: !4425)
!4425 = !{!3993, !3970, !444}
!4426 = !{!4427, !4428, !4429, !4430}
!4427 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4423, file: !346, line: 554, type: !3970)
!4428 = !DILocalVariable(name: "driving", arg: 2, scope: !4423, file: !346, line: 554, type: !444)
!4429 = !DILocalVariable(name: "no", scope: !4423, file: !346, line: 556, type: !61)
!4430 = !DILocalVariable(name: "remainder", scope: !4423, file: !346, line: 557, type: !61)
!4431 = !DILocation(line: 0, scope: !4423)
!4432 = !DILocation(line: 559, column: 19, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4423, file: !346, line: 559, column: 9)
!4434 = !DILocation(line: 559, column: 9, scope: !4423)
!4435 = !DILocation(line: 564, column: 19, scope: !4423)
!4436 = !DILocation(line: 569, column: 102, scope: !4423)
!4437 = !DILocation(line: 569, column: 88, scope: !4423)
!4438 = !DILocation(line: 569, column: 5, scope: !4423)
!4439 = !DILocation(line: 569, column: 47, scope: !4423)
!4440 = !DILocation(line: 569, column: 60, scope: !4423)
!4441 = !DILocation(line: 570, column: 71, scope: !4423)
!4442 = !DILocation(line: 570, column: 5, scope: !4423)
!4443 = !DILocation(line: 570, column: 47, scope: !4423)
!4444 = !DILocation(line: 570, column: 60, scope: !4423)
!4445 = !DILocation(line: 571, column: 5, scope: !4423)
!4446 = !DILocation(line: 572, column: 1, scope: !4423)
!4447 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !346, file: !346, line: 575, type: !4448, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4451)
!4448 = !DISubroutineType(types: !4449)
!4449 = !{!3993, !3970, !4450}
!4450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 32)
!4451 = !{!4452, !4453, !4454, !4455, !4456}
!4452 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4447, file: !346, line: 575, type: !3970)
!4453 = !DILocalVariable(name: "driving", arg: 2, scope: !4447, file: !346, line: 575, type: !4450)
!4454 = !DILocalVariable(name: "no", scope: !4447, file: !346, line: 577, type: !61)
!4455 = !DILocalVariable(name: "remainder", scope: !4447, file: !346, line: 578, type: !61)
!4456 = !DILocalVariable(name: "temp", scope: !4447, file: !346, line: 579, type: !61)
!4457 = !DILocation(line: 0, scope: !4447)
!4458 = !DILocation(line: 581, column: 19, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4447, file: !346, line: 581, column: 9)
!4460 = !DILocation(line: 581, column: 9, scope: !4447)
!4461 = !DILocation(line: 585, column: 14, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4447, file: !346, line: 585, column: 9)
!4463 = !DILocation(line: 585, column: 9, scope: !4447)
!4464 = !DILocation(line: 590, column: 19, scope: !4447)
!4465 = !DILocation(line: 595, column: 12, scope: !4447)
!4466 = !DILocation(line: 595, column: 54, scope: !4447)
!4467 = !DILocation(line: 596, column: 59, scope: !4447)
!4468 = !DILocation(line: 596, column: 45, scope: !4447)
!4469 = !DILocation(line: 596, column: 17, scope: !4447)
!4470 = !DILocation(line: 597, column: 18, scope: !4447)
!4471 = !DILocation(line: 600, column: 56, scope: !4447)
!4472 = !DILocation(line: 600, column: 14, scope: !4447)
!4473 = !DILocation(line: 602, column: 5, scope: !4447)
!4474 = !DILocation(line: 603, column: 1, scope: !4447)
!4475 = distinct !DISubprogram(name: "uart_receive_handler", scope: !629, file: !629, line: 146, type: !4476, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4478)
!4476 = !DISubroutineType(types: !4477)
!4477 = !{null, !735, !91}
!4478 = !{!4479, !4480, !4481, !4483, !4484, !4485, !4486, !4542}
!4479 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4475, file: !629, line: 146, type: !735)
!4480 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !4475, file: !629, line: 146, type: !91)
!4481 = !DILocalVariable(name: "channel", scope: !4475, file: !629, line: 148, type: !4482)
!4482 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !639, line: 203, baseType: !638)
!4483 = !DILocalVariable(name: "avail_bytes", scope: !4475, file: !629, line: 149, type: !61)
!4484 = !DILocalVariable(name: "callback", scope: !4475, file: !629, line: 150, type: !744)
!4485 = !DILocalVariable(name: "arg", scope: !4475, file: !629, line: 151, type: !88)
!4486 = !DILocalVariable(name: "uartx", scope: !4475, file: !629, line: 152, type: !4487)
!4487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4488, size: 32)
!4488 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !4489)
!4489 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !4490)
!4490 = !{!4491, !4497, !4502, !4508, !4509, !4514, !4519, !4520, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4541}
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !4489, file: !56, line: 547, baseType: !4492, size: 32)
!4492 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4489, file: !56, line: 543, size: 32, elements: !4493)
!4493 = !{!4494, !4495, !4496}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !4492, file: !56, line: 544, baseType: !272, size: 32)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !4492, file: !56, line: 545, baseType: !60, size: 32)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !4492, file: !56, line: 546, baseType: !60, size: 32)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !4489, file: !56, line: 551, baseType: !4498, size: 32, offset: 32)
!4498 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4489, file: !56, line: 548, size: 32, elements: !4499)
!4499 = !{!4500, !4501}
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !4498, file: !56, line: 549, baseType: !60, size: 32)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !4498, file: !56, line: 550, baseType: !60, size: 32)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !4489, file: !56, line: 556, baseType: !4503, size: 32, offset: 64)
!4503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4489, file: !56, line: 552, size: 32, elements: !4504)
!4504 = !{!4505, !4506, !4507}
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !4503, file: !56, line: 553, baseType: !272, size: 32)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !4503, file: !56, line: 554, baseType: !60, size: 32)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !4503, file: !56, line: 555, baseType: !60, size: 32)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !4489, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !4489, file: !56, line: 561, baseType: !4510, size: 32, offset: 128)
!4510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4489, file: !56, line: 558, size: 32, elements: !4511)
!4511 = !{!4512, !4513}
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !4510, file: !56, line: 559, baseType: !60, size: 32)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !4510, file: !56, line: 560, baseType: !60, size: 32)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !4489, file: !56, line: 565, baseType: !4515, size: 32, offset: 160)
!4515 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4489, file: !56, line: 562, size: 32, elements: !4516)
!4516 = !{!4517, !4518}
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !4515, file: !56, line: 563, baseType: !272, size: 32)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !4515, file: !56, line: 564, baseType: !60, size: 32)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !4489, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !4489, file: !56, line: 570, baseType: !4521, size: 32, offset: 224)
!4521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4489, file: !56, line: 567, size: 32, elements: !4522)
!4522 = !{!4523, !4524}
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !4521, file: !56, line: 568, baseType: !60, size: 32)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !4521, file: !56, line: 569, baseType: !60, size: 32)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !4489, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !4489, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !4489, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !4489, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !4489, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !4489, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !4489, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !4489, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !4489, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !4489, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !4489, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !4489, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !4489, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !4489, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !4489, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !4489, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !4489, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!4542 = !DILocalVariable(name: "status", scope: !4475, file: !629, line: 153, type: !4543)
!4543 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !639, line: 211, baseType: !659)
!4544 = !DILocation(line: 0, scope: !4475)
!4545 = !DILocation(line: 149, column: 5, scope: !4475)
!4546 = !DILocation(line: 155, column: 9, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4475, file: !629, line: 155, column: 9)
!4548 = !DILocation(line: 155, column: 36, scope: !4547)
!4549 = !DILocation(line: 155, column: 9, scope: !4475)
!4550 = !DILocation(line: 156, column: 9, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4547, file: !629, line: 155, column: 70)
!4552 = !DILocation(line: 160, column: 13, scope: !4475)
!4553 = !DILocation(line: 161, column: 15, scope: !4475)
!4554 = !DILocation(line: 163, column: 9, scope: !4475)
!4555 = !DILocation(line: 164, column: 9, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4557, file: !629, line: 163, column: 29)
!4557 = distinct !DILexicalBlock(scope: !4475, file: !629, line: 163, column: 9)
!4558 = !DILocation(line: 165, column: 5, scope: !4556)
!4559 = !DILocation(line: 167, column: 14, scope: !4475)
!4560 = !DILocation(line: 168, column: 16, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4475, file: !629, line: 168, column: 9)
!4562 = !DILocation(line: 168, column: 9, scope: !4475)
!4563 = !DILocation(line: 169, column: 9, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4561, file: !629, line: 168, column: 28)
!4565 = !DILocation(line: 172, column: 9, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4475, file: !629, line: 172, column: 9)
!4567 = !DILocation(line: 172, column: 21, scope: !4566)
!4568 = !DILocation(line: 172, column: 9, scope: !4475)
!4569 = !DILocation(line: 176, column: 43, scope: !4475)
!4570 = !DILocation(line: 178, column: 18, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4475, file: !629, line: 178, column: 9)
!4572 = !DILocation(line: 178, column: 9, scope: !4475)
!4573 = !DILocation(line: 179, column: 9, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4571, file: !629, line: 178, column: 27)
!4575 = !DILocation(line: 177, column: 38, scope: !4475)
!4576 = !DILocation(line: 183, column: 5, scope: !4475)
!4577 = !DILocation(line: 184, column: 5, scope: !4475)
!4578 = !DILocation(line: 185, column: 5, scope: !4475)
!4579 = !DILocation(line: 187, column: 14, scope: !4475)
!4580 = !DILocation(line: 188, column: 16, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4475, file: !629, line: 188, column: 9)
!4582 = !DILocation(line: 188, column: 9, scope: !4475)
!4583 = !DILocation(line: 189, column: 9, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4581, file: !629, line: 188, column: 28)
!4585 = !DILocation(line: 192, column: 9, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4475, file: !629, line: 192, column: 9)
!4587 = !DILocation(line: 192, column: 53, scope: !4586)
!4588 = !DILocation(line: 192, column: 21, scope: !4586)
!4589 = !DILocation(line: 192, column: 9, scope: !4475)
!4590 = !DILocation(line: 193, column: 18, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4586, file: !629, line: 192, column: 83)
!4592 = !DILocation(line: 194, column: 20, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4591, file: !629, line: 194, column: 13)
!4594 = !DILocation(line: 194, column: 13, scope: !4591)
!4595 = !DILocation(line: 195, column: 13, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4593, file: !629, line: 194, column: 32)
!4597 = !DILocation(line: 199, column: 1, scope: !4475)
!4598 = distinct !DISubprogram(name: "uart_send_handler", scope: !629, file: !629, line: 210, type: !4476, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4599)
!4599 = !{!4600, !4601, !4602, !4603, !4604, !4605, !4606, !4607}
!4600 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4598, file: !629, line: 210, type: !735)
!4601 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !4598, file: !629, line: 210, type: !91)
!4602 = !DILocalVariable(name: "channel", scope: !4598, file: !629, line: 212, type: !4482)
!4603 = !DILocalVariable(name: "status", scope: !4598, file: !629, line: 213, type: !4543)
!4604 = !DILocalVariable(name: "compare_space", scope: !4598, file: !629, line: 214, type: !61)
!4605 = !DILocalVariable(name: "avail_space", scope: !4598, file: !629, line: 214, type: !61)
!4606 = !DILocalVariable(name: "callback", scope: !4598, file: !629, line: 215, type: !744)
!4607 = !DILocalVariable(name: "arg", scope: !4598, file: !629, line: 216, type: !88)
!4608 = !DILocation(line: 0, scope: !4598)
!4609 = !DILocation(line: 214, column: 5, scope: !4598)
!4610 = !DILocation(line: 221, column: 9, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4598, file: !629, line: 221, column: 9)
!4612 = !DILocation(line: 221, column: 36, scope: !4611)
!4613 = !DILocation(line: 221, column: 9, scope: !4598)
!4614 = !DILocation(line: 222, column: 9, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4611, file: !629, line: 221, column: 70)
!4616 = !DILocation(line: 226, column: 15, scope: !4598)
!4617 = !DILocation(line: 228, column: 9, scope: !4598)
!4618 = !DILocation(line: 253, column: 47, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4620, file: !629, line: 252, column: 12)
!4620 = distinct !DILexicalBlock(scope: !4598, file: !629, line: 228, column: 9)
!4621 = !DILocation(line: 255, column: 22, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4619, file: !629, line: 255, column: 13)
!4623 = !DILocation(line: 255, column: 13, scope: !4619)
!4624 = !DILocation(line: 256, column: 13, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4622, file: !629, line: 255, column: 31)
!4626 = !DILocation(line: 254, column: 42, scope: !4619)
!4627 = !DILocation(line: 260, column: 9, scope: !4619)
!4628 = !DILocation(line: 261, column: 9, scope: !4619)
!4629 = !DILocation(line: 262, column: 9, scope: !4619)
!4630 = !DILocation(line: 264, column: 18, scope: !4619)
!4631 = !DILocation(line: 265, column: 20, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4619, file: !629, line: 265, column: 13)
!4633 = !DILocation(line: 265, column: 13, scope: !4619)
!4634 = !DILocation(line: 266, column: 13, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4632, file: !629, line: 265, column: 32)
!4636 = !DILocation(line: 269, column: 54, scope: !4619)
!4637 = !DILocation(line: 270, column: 56, scope: !4619)
!4638 = !DILocation(line: 270, column: 25, scope: !4619)
!4639 = !DILocation(line: 271, column: 13, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4619, file: !629, line: 271, column: 13)
!4641 = !DILocation(line: 271, column: 25, scope: !4640)
!4642 = !DILocation(line: 271, column: 13, scope: !4619)
!4643 = !DILocation(line: 272, column: 22, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4640, file: !629, line: 271, column: 43)
!4645 = !DILocation(line: 273, column: 24, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4644, file: !629, line: 273, column: 17)
!4647 = !DILocation(line: 273, column: 17, scope: !4644)
!4648 = !DILocation(line: 274, column: 17, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4646, file: !629, line: 273, column: 36)
!4650 = !DILocation(line: 279, column: 1, scope: !4598)
!4651 = distinct !DISubprogram(name: "uart_error_handler", scope: !629, file: !629, line: 282, type: !4652, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4654)
!4652 = !DISubroutineType(types: !4653)
!4653 = !{null, !735}
!4654 = !{!4655, !4656, !4657, !4658}
!4655 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4651, file: !629, line: 282, type: !735)
!4656 = !DILocalVariable(name: "uartx", scope: !4651, file: !629, line: 284, type: !4487)
!4657 = !DILocalVariable(name: "callback", scope: !4651, file: !629, line: 285, type: !744)
!4658 = !DILocalVariable(name: "arg", scope: !4651, file: !629, line: 286, type: !88)
!4659 = !DILocation(line: 0, scope: !4651)
!4660 = !DILocation(line: 288, column: 13, scope: !4651)
!4661 = !DILocation(line: 290, column: 10, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4651, file: !629, line: 290, column: 9)
!4663 = !DILocation(line: 290, column: 9, scope: !4651)
!4664 = !DILocation(line: 291, column: 9, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4662, file: !629, line: 290, column: 36)
!4666 = !DILocation(line: 292, column: 9, scope: !4665)
!4667 = !DILocation(line: 293, column: 47, scope: !4665)
!4668 = !DILocation(line: 295, column: 22, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4665, file: !629, line: 295, column: 13)
!4670 = !DILocation(line: 295, column: 13, scope: !4665)
!4671 = !DILocation(line: 296, column: 13, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4669, file: !629, line: 295, column: 31)
!4673 = !DILocation(line: 294, column: 42, scope: !4665)
!4674 = !DILocation(line: 299, column: 9, scope: !4665)
!4675 = !DILocation(line: 300, column: 5, scope: !4665)
!4676 = !DILocation(line: 301, column: 1, scope: !4651)
!4677 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !629, file: !629, line: 416, type: !4678, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4682)
!4678 = !DISubroutineType(types: !4679)
!4679 = !{!4680, !735, !4681}
!4680 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !654, line: 351, baseType: !670)
!4681 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !654, line: 317, baseType: !677)
!4682 = !{!4683, !4684, !4685, !4686, !4687}
!4683 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4677, file: !629, line: 416, type: !735)
!4684 = !DILocalVariable(name: "baudrate", arg: 2, scope: !4677, file: !629, line: 416, type: !4681)
!4685 = !DILocalVariable(name: "actual_baudrate", scope: !4677, file: !629, line: 418, type: !61)
!4686 = !DILocalVariable(name: "irq_status", scope: !4677, file: !629, line: 418, type: !61)
!4687 = !DILocalVariable(name: "uartx", scope: !4677, file: !629, line: 419, type: !4487)
!4688 = !DILocation(line: 0, scope: !4677)
!4689 = !DILocation(line: 421, column: 11, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4677, file: !629, line: 421, column: 9)
!4691 = !DILocation(line: 421, column: 42, scope: !4690)
!4692 = !DILocation(line: 422, column: 11, scope: !4690)
!4693 = !DILocation(line: 421, column: 9, scope: !4677)
!4694 = !DILocation(line: 426, column: 9, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4677, file: !629, line: 426, column: 9)
!4696 = !DILocation(line: 426, column: 36, scope: !4695)
!4697 = !DILocation(line: 426, column: 9, scope: !4677)
!4698 = !DILocation(line: 430, column: 18, scope: !4677)
!4699 = !DILocation(line: 434, column: 5, scope: !4677)
!4700 = !DILocation(line: 436, column: 13, scope: !4677)
!4701 = !DILocation(line: 437, column: 23, scope: !4677)
!4702 = !DILocation(line: 439, column: 5, scope: !4677)
!4703 = !DILocation(line: 441, column: 5, scope: !4677)
!4704 = !DILocation(line: 442, column: 1, scope: !4677)
!4705 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !629, file: !629, line: 120, type: !4706, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4708)
!4706 = !DISubroutineType(types: !4707)
!4707 = !{!91, !735}
!4708 = !{!4709}
!4709 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4705, file: !629, line: 120, type: !735)
!4710 = !DILocation(line: 0, scope: !4705)
!4711 = !DILocation(line: 122, column: 23, scope: !4705)
!4712 = !DILocation(line: 122, column: 5, scope: !4705)
!4713 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !629, file: !629, line: 125, type: !4714, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4716)
!4714 = !DISubroutineType(types: !4715)
!4715 = !{!91, !4681}
!4716 = !{!4717}
!4717 = !DILocalVariable(name: "baudrate", arg: 1, scope: !4713, file: !629, line: 125, type: !4681)
!4718 = !DILocation(line: 0, scope: !4713)
!4719 = !DILocation(line: 127, column: 22, scope: !4713)
!4720 = !DILocation(line: 127, column: 5, scope: !4713)
!4721 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !629, file: !629, line: 444, type: !4722, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4736)
!4722 = !DISubroutineType(types: !4723)
!4723 = !{!4680, !735, !4724}
!4724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4725, size: 32)
!4725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4726)
!4726 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !654, line: 378, baseType: !4727)
!4727 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 373, size: 128, elements: !4728)
!4728 = !{!4729, !4730, !4732, !4734}
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !4727, file: !654, line: 374, baseType: !4681, size: 32)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !4727, file: !654, line: 375, baseType: !4731, size: 32, offset: 32)
!4731 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !654, line: 326, baseType: !693)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !4727, file: !654, line: 376, baseType: !4733, size: 32, offset: 64)
!4733 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !654, line: 333, baseType: !699)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4727, file: !654, line: 377, baseType: !4735, size: 32, offset: 96)
!4735 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !654, line: 341, baseType: !703)
!4736 = !{!4737, !4738, !4739, !4740}
!4737 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4721, file: !629, line: 444, type: !735)
!4738 = !DILocalVariable(name: "config", arg: 2, scope: !4721, file: !629, line: 445, type: !4724)
!4739 = !DILocalVariable(name: "irq_status", scope: !4721, file: !629, line: 447, type: !61)
!4740 = !DILocalVariable(name: "uartx", scope: !4721, file: !629, line: 448, type: !4487)
!4741 = !DILocation(line: 0, scope: !4721)
!4742 = !DILocation(line: 450, column: 11, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4721, file: !629, line: 450, column: 9)
!4744 = !DILocation(line: 450, column: 42, scope: !4743)
!4745 = !DILocation(line: 451, column: 11, scope: !4743)
!4746 = !DILocation(line: 450, column: 9, scope: !4721)
!4747 = !DILocation(line: 455, column: 9, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4721, file: !629, line: 455, column: 9)
!4749 = !DILocation(line: 455, column: 36, scope: !4748)
!4750 = !DILocation(line: 455, column: 9, scope: !4721)
!4751 = !DILocation(line: 459, column: 18, scope: !4721)
!4752 = !DILocation(line: 466, column: 5, scope: !4721)
!4753 = !DILocation(line: 468, column: 13, scope: !4721)
!4754 = !DILocation(line: 470, column: 46, scope: !4721)
!4755 = !DILocation(line: 470, column: 5, scope: !4721)
!4756 = !DILocation(line: 471, column: 36, scope: !4721)
!4757 = !DILocation(line: 471, column: 57, scope: !4721)
!4758 = !DILocation(line: 471, column: 75, scope: !4721)
!4759 = !DILocation(line: 471, column: 5, scope: !4721)
!4760 = !DILocation(line: 473, column: 5, scope: !4721)
!4761 = !DILocation(line: 474, column: 1, scope: !4721)
!4762 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !629, file: !629, line: 130, type: !4763, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4765)
!4763 = !DISubroutineType(types: !4764)
!4764 = !{!91, !4724}
!4765 = !{!4766}
!4766 = !DILocalVariable(name: "config", arg: 1, scope: !4762, file: !629, line: 130, type: !4724)
!4767 = !DILocation(line: 0, scope: !4762)
!4768 = !DILocation(line: 132, column: 22, scope: !4762)
!4769 = !DILocation(line: 132, column: 31, scope: !4762)
!4770 = !DILocation(line: 132, column: 56, scope: !4762)
!4771 = !DILocation(line: 133, column: 22, scope: !4762)
!4772 = !DILocation(line: 133, column: 34, scope: !4762)
!4773 = !DILocation(line: 133, column: 61, scope: !4762)
!4774 = !DILocation(line: 134, column: 22, scope: !4762)
!4775 = !DILocation(line: 134, column: 31, scope: !4762)
!4776 = !DILocation(line: 134, column: 55, scope: !4762)
!4777 = !DILocation(line: 135, column: 22, scope: !4762)
!4778 = !DILocation(line: 135, column: 29, scope: !4762)
!4779 = !DILocation(line: 132, column: 5, scope: !4762)
!4780 = distinct !DISubprogram(name: "hal_uart_init", scope: !629, file: !629, line: 476, type: !4781, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4784)
!4781 = !DISubroutineType(types: !4782)
!4782 = !{!4680, !735, !4783}
!4783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4726, size: 32)
!4784 = !{!4785, !4786, !4787, !4788, !4789, !4790, !4791}
!4785 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4780, file: !629, line: 476, type: !735)
!4786 = !DILocalVariable(name: "uart_config", arg: 2, scope: !4780, file: !629, line: 476, type: !4783)
!4787 = !DILocalVariable(name: "uartx", scope: !4780, file: !629, line: 478, type: !4487)
!4788 = !DILocalVariable(name: "i", scope: !4780, file: !629, line: 479, type: !61)
!4789 = !DILocalVariable(name: "actual_baudrate", scope: !4780, file: !629, line: 479, type: !61)
!4790 = !DILocalVariable(name: "irq_status", scope: !4780, file: !629, line: 479, type: !61)
!4791 = !DILocalVariable(name: "status", scope: !4780, file: !629, line: 480, type: !4792)
!4792 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !709, line: 106, baseType: !708)
!4793 = !DILocation(line: 0, scope: !4780)
!4794 = !DILocation(line: 482, column: 11, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4780, file: !629, line: 482, column: 9)
!4796 = !DILocation(line: 482, column: 42, scope: !4795)
!4797 = !DILocation(line: 483, column: 11, scope: !4795)
!4798 = !DILocation(line: 482, column: 9, scope: !4780)
!4799 = !DILocation(line: 487, column: 18, scope: !4780)
!4800 = !DILocation(line: 488, column: 9, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4780, file: !629, line: 488, column: 9)
!4802 = !DILocation(line: 488, column: 36, scope: !4801)
!4803 = !DILocation(line: 488, column: 9, scope: !4780)
!4804 = !DILocation(line: 489, column: 9, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4801, file: !629, line: 488, column: 68)
!4806 = !DILocation(line: 490, column: 9, scope: !4805)
!4807 = !DILocation(line: 502, column: 9, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4780, file: !629, line: 502, column: 9)
!4809 = !DILocation(line: 502, column: 9, scope: !4780)
!4810 = !DILocation(line: 504, column: 13, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4812, file: !629, line: 503, column: 44)
!4812 = distinct !DILexicalBlock(scope: !4813, file: !629, line: 503, column: 9)
!4813 = distinct !DILexicalBlock(scope: !4814, file: !629, line: 503, column: 9)
!4814 = distinct !DILexicalBlock(scope: !4808, file: !629, line: 502, column: 50)
!4815 = !DILocation(line: 504, column: 32, scope: !4811)
!4816 = !DILocation(line: 510, column: 32, scope: !4811)
!4817 = !DILocation(line: 510, column: 36, scope: !4811)
!4818 = !DILocation(line: 511, column: 32, scope: !4811)
!4819 = !DILocation(line: 511, column: 37, scope: !4811)
!4820 = !DILocation(line: 503, column: 40, scope: !4812)
!4821 = !DILocation(line: 503, column: 23, scope: !4812)
!4822 = !DILocation(line: 503, column: 9, scope: !4813)
!4823 = distinct !{!4823, !4822, !4824}
!4824 = !DILocation(line: 512, column: 9, scope: !4813)
!4825 = !DILocation(line: 513, column: 40, scope: !4814)
!4826 = !DILocation(line: 514, column: 5, scope: !4814)
!4827 = !DILocation(line: 521, column: 32, scope: !4780)
!4828 = !DILocation(line: 522, column: 5, scope: !4780)
!4829 = !DILocation(line: 524, column: 31, scope: !4780)
!4830 = !DILocation(line: 524, column: 14, scope: !4780)
!4831 = !DILocation(line: 525, column: 16, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4780, file: !629, line: 525, column: 9)
!4833 = !DILocation(line: 525, column: 9, scope: !4780)
!4834 = !DILocation(line: 526, column: 9, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4832, file: !629, line: 525, column: 40)
!4836 = !DILocation(line: 530, column: 13, scope: !4780)
!4837 = !DILocation(line: 532, column: 5, scope: !4780)
!4838 = !DILocation(line: 533, column: 56, scope: !4780)
!4839 = !DILocation(line: 533, column: 23, scope: !4780)
!4840 = !DILocation(line: 534, column: 5, scope: !4780)
!4841 = !DILocation(line: 535, column: 41, scope: !4780)
!4842 = !DILocation(line: 535, column: 67, scope: !4780)
!4843 = !DILocation(line: 535, column: 90, scope: !4780)
!4844 = !DILocation(line: 535, column: 5, scope: !4780)
!4845 = !DILocation(line: 536, column: 5, scope: !4780)
!4846 = !DILocation(line: 541, column: 5, scope: !4780)
!4847 = !DILocation(line: 542, column: 1, scope: !4780)
!4848 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !629, file: !629, line: 544, type: !4849, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4851)
!4849 = !DISubroutineType(types: !4850)
!4850 = !{!4680, !735}
!4851 = !{!4852, !4853, !4854, !4855, !4856, !4857, !4858}
!4852 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4848, file: !629, line: 544, type: !735)
!4853 = !DILocalVariable(name: "uartx", scope: !4848, file: !629, line: 546, type: !4487)
!4854 = !DILocalVariable(name: "tx_dma_channel", scope: !4848, file: !629, line: 547, type: !4482)
!4855 = !DILocalVariable(name: "rx_dma_channel", scope: !4848, file: !629, line: 547, type: !4482)
!4856 = !DILocalVariable(name: "irq_status", scope: !4848, file: !629, line: 548, type: !61)
!4857 = !DILocalVariable(name: "status", scope: !4848, file: !629, line: 549, type: !4543)
!4858 = !DILocalVariable(name: "clock_status", scope: !4848, file: !629, line: 550, type: !4792)
!4859 = !DILocation(line: 0, scope: !4848)
!4860 = !DILocation(line: 552, column: 10, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4848, file: !629, line: 552, column: 9)
!4862 = !DILocation(line: 552, column: 9, scope: !4848)
!4863 = !DILocation(line: 556, column: 18, scope: !4848)
!4864 = !DILocation(line: 557, column: 9, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4848, file: !629, line: 557, column: 9)
!4866 = !DILocation(line: 557, column: 36, scope: !4865)
!4867 = !DILocation(line: 557, column: 9, scope: !4848)
!4868 = !DILocation(line: 562, column: 13, scope: !4848)
!4869 = !DILocation(line: 565, column: 5, scope: !4848)
!4870 = !DILocation(line: 568, column: 9, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4848, file: !629, line: 568, column: 9)
!4872 = !DILocation(line: 568, column: 36, scope: !4871)
!4873 = !DILocation(line: 568, column: 9, scope: !4848)
!4874 = !DILocation(line: 569, column: 26, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4871, file: !629, line: 568, column: 70)
!4876 = !DILocation(line: 570, column: 26, scope: !4875)
!4877 = !DILocation(line: 572, column: 18, scope: !4875)
!4878 = !DILocation(line: 573, column: 20, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4875, file: !629, line: 573, column: 13)
!4880 = !DILocation(line: 573, column: 13, scope: !4875)
!4881 = !DILocation(line: 574, column: 13, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4879, file: !629, line: 573, column: 32)
!4883 = !DILocation(line: 575, column: 13, scope: !4882)
!4884 = !DILocation(line: 578, column: 18, scope: !4875)
!4885 = !DILocation(line: 579, column: 20, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4875, file: !629, line: 579, column: 13)
!4887 = !DILocation(line: 579, column: 13, scope: !4875)
!4888 = !DILocation(line: 580, column: 13, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4886, file: !629, line: 579, column: 32)
!4890 = !DILocation(line: 581, column: 13, scope: !4889)
!4891 = !DILocation(line: 584, column: 18, scope: !4875)
!4892 = !DILocation(line: 585, column: 20, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4875, file: !629, line: 585, column: 13)
!4894 = !DILocation(line: 585, column: 13, scope: !4875)
!4895 = !DILocation(line: 586, column: 13, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4893, file: !629, line: 585, column: 32)
!4897 = !DILocation(line: 587, column: 13, scope: !4896)
!4898 = !DILocation(line: 590, column: 18, scope: !4875)
!4899 = !DILocation(line: 591, column: 20, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4875, file: !629, line: 591, column: 13)
!4901 = !DILocation(line: 591, column: 13, scope: !4875)
!4902 = !DILocation(line: 592, column: 13, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4900, file: !629, line: 591, column: 32)
!4904 = !DILocation(line: 593, column: 13, scope: !4903)
!4905 = !DILocation(line: 596, column: 18, scope: !4875)
!4906 = !DILocation(line: 597, column: 20, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4875, file: !629, line: 597, column: 13)
!4908 = !DILocation(line: 597, column: 13, scope: !4875)
!4909 = !DILocation(line: 598, column: 13, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4907, file: !629, line: 597, column: 32)
!4911 = !DILocation(line: 599, column: 13, scope: !4910)
!4912 = !DILocation(line: 602, column: 18, scope: !4875)
!4913 = !DILocation(line: 603, column: 20, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4875, file: !629, line: 603, column: 13)
!4915 = !DILocation(line: 603, column: 13, scope: !4875)
!4916 = !DILocation(line: 604, column: 13, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4914, file: !629, line: 603, column: 32)
!4918 = !DILocation(line: 605, column: 13, scope: !4917)
!4919 = !DILocation(line: 608, column: 30, scope: !4875)
!4920 = !DILocation(line: 608, column: 9, scope: !4875)
!4921 = !DILocation(line: 609, column: 5, scope: !4875)
!4922 = !DILocation(line: 610, column: 5, scope: !4848)
!4923 = !DILocation(line: 611, column: 38, scope: !4848)
!4924 = !DILocation(line: 611, column: 20, scope: !4848)
!4925 = !DILocation(line: 612, column: 22, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4848, file: !629, line: 612, column: 9)
!4927 = !DILocation(line: 612, column: 9, scope: !4848)
!4928 = !DILocation(line: 613, column: 9, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4926, file: !629, line: 612, column: 46)
!4930 = !DILocation(line: 614, column: 9, scope: !4929)
!4931 = !DILocation(line: 618, column: 32, scope: !4848)
!4932 = !DILocation(line: 618, column: 37, scope: !4848)
!4933 = !DILocation(line: 619, column: 32, scope: !4848)
!4934 = !DILocation(line: 619, column: 36, scope: !4848)
!4935 = !DILocation(line: 635, column: 32, scope: !4848)
!4936 = !DILocation(line: 639, column: 5, scope: !4848)
!4937 = !DILocation(line: 640, column: 1, scope: !4848)
!4938 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !629, file: !629, line: 642, type: !4939, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4941)
!4939 = !DISubroutineType(types: !4940)
!4940 = !{null, !735, !1524}
!4941 = !{!4942, !4943, !4944}
!4942 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4938, file: !629, line: 642, type: !735)
!4943 = !DILocalVariable(name: "byte", arg: 2, scope: !4938, file: !629, line: 642, type: !1524)
!4944 = !DILocalVariable(name: "uartx", scope: !4938, file: !629, line: 644, type: !4487)
!4945 = !DILocation(line: 0, scope: !4938)
!4946 = !DILocation(line: 646, column: 10, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4938, file: !629, line: 646, column: 9)
!4948 = !DILocation(line: 646, column: 9, scope: !4938)
!4949 = !DILocation(line: 650, column: 9, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4938, file: !629, line: 650, column: 9)
!4951 = !DILocation(line: 650, column: 36, scope: !4950)
!4952 = !DILocation(line: 650, column: 9, scope: !4938)
!4953 = !DILocation(line: 654, column: 13, scope: !4938)
!4954 = !DILocation(line: 655, column: 5, scope: !4938)
!4955 = !DILocation(line: 656, column: 1, scope: !4938)
!4956 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !629, file: !629, line: 658, type: !4957, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4961)
!4957 = !DISubroutineType(types: !4958)
!4958 = !{!61, !735, !4959, !61}
!4959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4960, size: 32)
!4960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !460)
!4961 = !{!4962, !4963, !4964, !4965}
!4962 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4956, file: !629, line: 658, type: !735)
!4963 = !DILocalVariable(name: "data", arg: 2, scope: !4956, file: !629, line: 658, type: !4959)
!4964 = !DILocalVariable(name: "size", arg: 3, scope: !4956, file: !629, line: 658, type: !61)
!4965 = !DILocalVariable(name: "i", scope: !4956, file: !629, line: 660, type: !61)
!4966 = !DILocation(line: 0, scope: !4956)
!4967 = !DILocation(line: 662, column: 11, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4956, file: !629, line: 662, column: 9)
!4969 = !DILocation(line: 662, column: 42, scope: !4968)
!4970 = !DILocation(line: 666, column: 9, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4956, file: !629, line: 666, column: 9)
!4972 = !DILocation(line: 666, column: 36, scope: !4971)
!4973 = !DILocation(line: 666, column: 9, scope: !4956)
!4974 = !DILocation(line: 671, column: 38, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4976, file: !629, line: 670, column: 32)
!4976 = distinct !DILexicalBlock(scope: !4977, file: !629, line: 670, column: 5)
!4977 = distinct !DILexicalBlock(scope: !4956, file: !629, line: 670, column: 5)
!4978 = !DILocation(line: 671, column: 9, scope: !4975)
!4979 = !DILocation(line: 672, column: 13, scope: !4975)
!4980 = !DILocation(line: 670, column: 28, scope: !4976)
!4981 = !DILocation(line: 670, column: 19, scope: !4976)
!4982 = !DILocation(line: 670, column: 5, scope: !4977)
!4983 = distinct !{!4983, !4982, !4984}
!4984 = !DILocation(line: 673, column: 5, scope: !4977)
!4985 = !DILocation(line: 676, column: 1, scope: !4956)
!4986 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !629, file: !629, line: 678, type: !4957, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4987)
!4987 = !{!4988, !4989, !4990, !4991, !4992, !4993, !4994, !4995}
!4988 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4986, file: !629, line: 678, type: !735)
!4989 = !DILocalVariable(name: "data", arg: 2, scope: !4986, file: !629, line: 678, type: !4959)
!4990 = !DILocalVariable(name: "size", arg: 3, scope: !4986, file: !629, line: 678, type: !61)
!4991 = !DILocalVariable(name: "channel", scope: !4986, file: !629, line: 680, type: !4482)
!4992 = !DILocalVariable(name: "i", scope: !4986, file: !629, line: 681, type: !61)
!4993 = !DILocalVariable(name: "real_count", scope: !4986, file: !629, line: 681, type: !61)
!4994 = !DILocalVariable(name: "avail_space", scope: !4986, file: !629, line: 681, type: !61)
!4995 = !DILocalVariable(name: "status", scope: !4986, file: !629, line: 682, type: !4543)
!4996 = !DILocation(line: 0, scope: !4986)
!4997 = !DILocation(line: 681, column: 5, scope: !4986)
!4998 = !DILocation(line: 687, column: 11, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4986, file: !629, line: 687, column: 9)
!5000 = !DILocation(line: 687, column: 42, scope: !4999)
!5001 = !DILocation(line: 691, column: 9, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4986, file: !629, line: 691, column: 9)
!5003 = !DILocation(line: 691, column: 36, scope: !5002)
!5004 = !DILocation(line: 691, column: 9, scope: !4986)
!5005 = !DILocation(line: 704, column: 15, scope: !4986)
!5006 = !DILocation(line: 706, column: 14, scope: !4986)
!5007 = !DILocation(line: 707, column: 16, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !4986, file: !629, line: 707, column: 9)
!5009 = !DILocation(line: 707, column: 9, scope: !4986)
!5010 = !DILocation(line: 708, column: 9, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5008, file: !629, line: 707, column: 28)
!5012 = !DILocation(line: 712, column: 9, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !4986, file: !629, line: 712, column: 9)
!5014 = !DILocation(line: 712, column: 21, scope: !5013)
!5015 = !DILocation(line: 717, column: 19, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5017, file: !629, line: 717, column: 5)
!5017 = distinct !DILexicalBlock(scope: !4986, file: !629, line: 717, column: 5)
!5018 = !DILocation(line: 717, column: 5, scope: !5017)
!5019 = distinct !{!5019, !5018, !5020}
!5020 = !DILocation(line: 723, column: 5, scope: !5017)
!5021 = !DILocation(line: 718, column: 42, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5016, file: !629, line: 717, column: 38)
!5023 = !DILocation(line: 718, column: 18, scope: !5022)
!5024 = !DILocation(line: 719, column: 20, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5022, file: !629, line: 719, column: 13)
!5026 = !DILocation(line: 717, column: 34, scope: !5016)
!5027 = !DILocation(line: 719, column: 13, scope: !5022)
!5028 = !DILocation(line: 720, column: 13, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5025, file: !629, line: 719, column: 32)
!5030 = !DILocation(line: 728, column: 23, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !4986, file: !629, line: 728, column: 9)
!5032 = !DILocation(line: 728, column: 20, scope: !5031)
!5033 = !DILocation(line: 728, column: 9, scope: !4986)
!5034 = !DILocation(line: 729, column: 18, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5031, file: !629, line: 728, column: 36)
!5036 = !DILocation(line: 730, column: 20, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5035, file: !629, line: 730, column: 13)
!5038 = !DILocation(line: 730, column: 13, scope: !5035)
!5039 = !DILocation(line: 731, column: 13, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5037, file: !629, line: 730, column: 32)
!5041 = !DILocation(line: 737, column: 1, scope: !4986)
!5042 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !629, file: !629, line: 739, type: !5043, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5045)
!5043 = !DISubroutineType(types: !5044)
!5044 = !{!1524, !735}
!5045 = !{!5046, !5047, !5048}
!5046 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5042, file: !629, line: 739, type: !735)
!5047 = !DILocalVariable(name: "data", scope: !5042, file: !629, line: 741, type: !1524)
!5048 = !DILocalVariable(name: "uartx", scope: !5042, file: !629, line: 742, type: !4487)
!5049 = !DILocation(line: 0, scope: !5042)
!5050 = !DILocation(line: 744, column: 10, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5042, file: !629, line: 744, column: 9)
!5052 = !DILocation(line: 744, column: 9, scope: !5042)
!5053 = !DILocation(line: 748, column: 9, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5042, file: !629, line: 748, column: 9)
!5055 = !DILocation(line: 748, column: 36, scope: !5054)
!5056 = !DILocation(line: 748, column: 9, scope: !5042)
!5057 = !DILocation(line: 752, column: 13, scope: !5042)
!5058 = !DILocation(line: 754, column: 12, scope: !5042)
!5059 = !DILocation(line: 756, column: 5, scope: !5042)
!5060 = !DILocation(line: 757, column: 1, scope: !5042)
!5061 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !629, file: !629, line: 759, type: !5062, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5064)
!5062 = !DISubroutineType(types: !5063)
!5063 = !{!61, !735}
!5064 = !{!5065, !5066, !5067}
!5065 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5061, file: !629, line: 759, type: !735)
!5066 = !DILocalVariable(name: "data", scope: !5061, file: !629, line: 761, type: !61)
!5067 = !DILocalVariable(name: "uartx", scope: !5061, file: !629, line: 762, type: !4487)
!5068 = !DILocation(line: 0, scope: !5061)
!5069 = !DILocation(line: 764, column: 10, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5061, file: !629, line: 764, column: 9)
!5071 = !DILocation(line: 764, column: 9, scope: !5061)
!5072 = !DILocation(line: 768, column: 9, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5061, file: !629, line: 768, column: 9)
!5074 = !DILocation(line: 768, column: 36, scope: !5073)
!5075 = !DILocation(line: 768, column: 9, scope: !5061)
!5076 = !DILocation(line: 772, column: 13, scope: !5061)
!5077 = !DILocation(line: 774, column: 12, scope: !5061)
!5078 = !DILocation(line: 776, column: 5, scope: !5061)
!5079 = !DILocation(line: 777, column: 1, scope: !5061)
!5080 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !629, file: !629, line: 779, type: !5081, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5083)
!5081 = !DISubroutineType(types: !5082)
!5082 = !{!61, !735, !762, !61}
!5083 = !{!5084, !5085, !5086, !5087, !5088}
!5084 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5080, file: !629, line: 779, type: !735)
!5085 = !DILocalVariable(name: "buffer", arg: 2, scope: !5080, file: !629, line: 779, type: !762)
!5086 = !DILocalVariable(name: "size", arg: 3, scope: !5080, file: !629, line: 779, type: !61)
!5087 = !DILocalVariable(name: "i", scope: !5080, file: !629, line: 781, type: !61)
!5088 = !DILocalVariable(name: "pbuf", scope: !5080, file: !629, line: 782, type: !762)
!5089 = !DILocation(line: 0, scope: !5080)
!5090 = !DILocation(line: 784, column: 11, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5080, file: !629, line: 784, column: 9)
!5092 = !DILocation(line: 784, column: 42, scope: !5091)
!5093 = !DILocation(line: 789, column: 9, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5080, file: !629, line: 789, column: 9)
!5095 = !DILocation(line: 789, column: 36, scope: !5094)
!5096 = !DILocation(line: 789, column: 9, scope: !5080)
!5097 = !DILocation(line: 794, column: 19, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5099, file: !629, line: 793, column: 32)
!5099 = distinct !DILexicalBlock(scope: !5100, file: !629, line: 793, column: 5)
!5100 = distinct !DILexicalBlock(scope: !5080, file: !629, line: 793, column: 5)
!5101 = !DILocation(line: 794, column: 9, scope: !5098)
!5102 = !DILocation(line: 794, column: 17, scope: !5098)
!5103 = !DILocation(line: 793, column: 28, scope: !5099)
!5104 = !DILocation(line: 793, column: 19, scope: !5099)
!5105 = !DILocation(line: 793, column: 5, scope: !5100)
!5106 = distinct !{!5106, !5105, !5107}
!5107 = !DILocation(line: 795, column: 5, scope: !5100)
!5108 = !DILocation(line: 798, column: 1, scope: !5080)
!5109 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !629, file: !629, line: 800, type: !5081, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5110)
!5110 = !{!5111, !5112, !5113, !5114, !5115, !5116, !5117, !5118}
!5111 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5109, file: !629, line: 800, type: !735)
!5112 = !DILocalVariable(name: "buffer", arg: 2, scope: !5109, file: !629, line: 800, type: !762)
!5113 = !DILocalVariable(name: "size", arg: 3, scope: !5109, file: !629, line: 800, type: !61)
!5114 = !DILocalVariable(name: "channel", scope: !5109, file: !629, line: 802, type: !4482)
!5115 = !DILocalVariable(name: "receive_count", scope: !5109, file: !629, line: 803, type: !61)
!5116 = !DILocalVariable(name: "avail_count", scope: !5109, file: !629, line: 803, type: !61)
!5117 = !DILocalVariable(name: "index", scope: !5109, file: !629, line: 804, type: !61)
!5118 = !DILocalVariable(name: "status", scope: !5109, file: !629, line: 805, type: !4543)
!5119 = !DILocation(line: 0, scope: !5109)
!5120 = !DILocation(line: 803, column: 5, scope: !5109)
!5121 = !DILocation(line: 807, column: 11, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5109, file: !629, line: 807, column: 9)
!5123 = !DILocation(line: 807, column: 42, scope: !5122)
!5124 = !DILocation(line: 813, column: 9, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5109, file: !629, line: 813, column: 9)
!5126 = !DILocation(line: 813, column: 36, scope: !5125)
!5127 = !DILocation(line: 813, column: 9, scope: !5109)
!5128 = !DILocation(line: 817, column: 15, scope: !5109)
!5129 = !DILocation(line: 819, column: 14, scope: !5109)
!5130 = !DILocation(line: 820, column: 16, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5109, file: !629, line: 820, column: 9)
!5132 = !DILocation(line: 820, column: 9, scope: !5109)
!5133 = !DILocation(line: 821, column: 9, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5131, file: !629, line: 820, column: 28)
!5135 = !DILocation(line: 825, column: 9, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5109, file: !629, line: 825, column: 9)
!5137 = !DILocation(line: 825, column: 21, scope: !5136)
!5138 = !DILocation(line: 830, column: 27, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5140, file: !629, line: 830, column: 5)
!5140 = distinct !DILexicalBlock(scope: !5109, file: !629, line: 830, column: 5)
!5141 = !DILocation(line: 830, column: 5, scope: !5140)
!5142 = distinct !{!5142, !5141, !5143}
!5143 = !DILocation(line: 836, column: 5, scope: !5140)
!5144 = !DILocation(line: 831, column: 42, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5139, file: !629, line: 830, column: 53)
!5146 = !DILocation(line: 831, column: 18, scope: !5145)
!5147 = !DILocation(line: 832, column: 20, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5145, file: !629, line: 832, column: 13)
!5149 = !DILocation(line: 830, column: 49, scope: !5139)
!5150 = !DILocation(line: 832, column: 13, scope: !5145)
!5151 = !DILocation(line: 833, column: 13, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5148, file: !629, line: 832, column: 32)
!5153 = !DILocation(line: 841, column: 26, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5109, file: !629, line: 841, column: 9)
!5155 = !DILocation(line: 841, column: 23, scope: !5154)
!5156 = !DILocation(line: 841, column: 9, scope: !5109)
!5157 = !DILocation(line: 842, column: 18, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5154, file: !629, line: 841, column: 39)
!5159 = !DILocation(line: 843, column: 20, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5158, file: !629, line: 843, column: 13)
!5161 = !DILocation(line: 843, column: 13, scope: !5158)
!5162 = !DILocation(line: 844, column: 13, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5160, file: !629, line: 843, column: 32)
!5164 = !DILocation(line: 850, column: 1, scope: !5109)
!5165 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !629, file: !629, line: 891, type: !5166, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5168)
!5166 = !DISubroutineType(types: !5167)
!5167 = !{!4680, !735, !744, !88}
!5168 = !{!5169, !5170, !5171, !5172, !5173, !5174, !5175, !5176}
!5169 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5165, file: !629, line: 891, type: !735)
!5170 = !DILocalVariable(name: "user_callback", arg: 2, scope: !5165, file: !629, line: 892, type: !744)
!5171 = !DILocalVariable(name: "user_data", arg: 3, scope: !5165, file: !629, line: 893, type: !88)
!5172 = !DILocalVariable(name: "tx_dma_channel", scope: !5165, file: !629, line: 895, type: !4482)
!5173 = !DILocalVariable(name: "rx_dma_channel", scope: !5165, file: !629, line: 895, type: !4482)
!5174 = !DILocalVariable(name: "irq_status", scope: !5165, file: !629, line: 896, type: !61)
!5175 = !DILocalVariable(name: "status", scope: !5165, file: !629, line: 897, type: !4543)
!5176 = !DILocalVariable(name: "nvic_status", scope: !5165, file: !629, line: 898, type: !917)
!5177 = !DILocation(line: 0, scope: !5165)
!5178 = !DILocation(line: 900, column: 11, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5165, file: !629, line: 900, column: 9)
!5180 = !DILocation(line: 900, column: 42, scope: !5179)
!5181 = !DILocation(line: 905, column: 18, scope: !5165)
!5182 = !DILocation(line: 906, column: 9, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5165, file: !629, line: 906, column: 9)
!5184 = !DILocation(line: 906, column: 36, scope: !5183)
!5185 = !DILocation(line: 906, column: 9, scope: !5165)
!5186 = !DILocation(line: 911, column: 22, scope: !5165)
!5187 = !DILocation(line: 912, column: 22, scope: !5165)
!5188 = !DILocation(line: 914, column: 32, scope: !5165)
!5189 = !DILocation(line: 914, column: 37, scope: !5165)
!5190 = !DILocation(line: 915, column: 32, scope: !5165)
!5191 = !DILocation(line: 915, column: 36, scope: !5165)
!5192 = !DILocation(line: 917, column: 91, scope: !5165)
!5193 = !DILocation(line: 917, column: 56, scope: !5165)
!5194 = !DILocation(line: 917, column: 5, scope: !5165)
!5195 = !DILocation(line: 918, column: 80, scope: !5165)
!5196 = !DILocation(line: 918, column: 14, scope: !5165)
!5197 = !DILocation(line: 919, column: 16, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5165, file: !629, line: 919, column: 9)
!5199 = !DILocation(line: 919, column: 9, scope: !5165)
!5200 = !DILocation(line: 920, column: 9, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5198, file: !629, line: 919, column: 28)
!5202 = !DILocation(line: 921, column: 9, scope: !5201)
!5203 = !DILocation(line: 924, column: 97, scope: !5165)
!5204 = !DILocation(line: 924, column: 56, scope: !5165)
!5205 = !DILocation(line: 924, column: 5, scope: !5165)
!5206 = !DILocation(line: 925, column: 80, scope: !5165)
!5207 = !DILocation(line: 925, column: 14, scope: !5165)
!5208 = !DILocation(line: 926, column: 16, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5165, file: !629, line: 926, column: 9)
!5210 = !DILocation(line: 926, column: 9, scope: !5165)
!5211 = !DILocation(line: 927, column: 9, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5209, file: !629, line: 926, column: 28)
!5213 = !DILocation(line: 928, column: 9, scope: !5212)
!5214 = !DILocation(line: 931, column: 49, scope: !5165)
!5215 = !DILocation(line: 931, column: 19, scope: !5165)
!5216 = !DILocation(line: 932, column: 21, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5165, file: !629, line: 932, column: 9)
!5218 = !DILocation(line: 932, column: 9, scope: !5165)
!5219 = !DILocation(line: 933, column: 9, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5217, file: !629, line: 932, column: 44)
!5221 = !DILocation(line: 934, column: 9, scope: !5220)
!5222 = !DILocation(line: 938, column: 5, scope: !5165)
!5223 = !DILocation(line: 940, column: 32, scope: !5165)
!5224 = !DILocation(line: 944, column: 5, scope: !5165)
!5225 = !DILocation(line: 945, column: 1, scope: !5165)
!5226 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !629, file: !629, line: 303, type: !5227, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5230)
!5227 = !DISubroutineType(types: !5228)
!5228 = !{null, !5229, !88}
!5229 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !639, line: 225, baseType: !723)
!5230 = !{!5231, !5232, !5233}
!5231 = !DILocalVariable(name: "event", arg: 1, scope: !5226, file: !629, line: 303, type: !5229)
!5232 = !DILocalVariable(name: "user_data", arg: 2, scope: !5226, file: !629, line: 303, type: !88)
!5233 = !DILocalVariable(name: "callback_data", scope: !5226, file: !629, line: 305, type: !728)
!5234 = !DILocation(line: 0, scope: !5226)
!5235 = !DILocation(line: 307, column: 24, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5226, file: !629, line: 307, column: 9)
!5237 = !DILocation(line: 0, scope: !5236)
!5238 = !DILocation(line: 307, column: 9, scope: !5226)
!5239 = !DILocation(line: 308, column: 9, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5236, file: !629, line: 307, column: 39)
!5241 = !DILocation(line: 309, column: 5, scope: !5240)
!5242 = !DILocation(line: 310, column: 9, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5236, file: !629, line: 309, column: 12)
!5244 = !DILocation(line: 312, column: 1, scope: !5226)
!5245 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !629, file: !629, line: 852, type: !4652, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5246)
!5246 = !{!5247, !5248, !5249, !5250, !5251}
!5247 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5245, file: !629, line: 852, type: !735)
!5248 = !DILocalVariable(name: "uartx", scope: !5245, file: !629, line: 854, type: !4487)
!5249 = !DILocalVariable(name: "tx_dma_channel", scope: !5245, file: !629, line: 855, type: !4482)
!5250 = !DILocalVariable(name: "rx_dma_channel", scope: !5245, file: !629, line: 855, type: !4482)
!5251 = !DILocalVariable(name: "status", scope: !5245, file: !629, line: 856, type: !4543)
!5252 = !DILocation(line: 0, scope: !5245)
!5253 = !DILocation(line: 858, column: 13, scope: !5245)
!5254 = !DILocation(line: 859, column: 22, scope: !5245)
!5255 = !DILocation(line: 860, column: 22, scope: !5245)
!5256 = !DILocation(line: 866, column: 5, scope: !5245)
!5257 = !DILocation(line: 867, column: 25, scope: !5245)
!5258 = !DILocation(line: 867, column: 5, scope: !5245)
!5259 = !DILocation(line: 868, column: 14, scope: !5245)
!5260 = !DILocation(line: 869, column: 16, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5245, file: !629, line: 869, column: 9)
!5262 = !DILocation(line: 869, column: 9, scope: !5245)
!5263 = !DILocation(line: 870, column: 9, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5261, file: !629, line: 869, column: 28)
!5265 = !DILocation(line: 873, column: 14, scope: !5245)
!5266 = !DILocation(line: 874, column: 16, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5245, file: !629, line: 874, column: 9)
!5268 = !DILocation(line: 874, column: 9, scope: !5245)
!5269 = !DILocation(line: 875, column: 9, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5267, file: !629, line: 874, column: 28)
!5271 = !DILocation(line: 878, column: 14, scope: !5245)
!5272 = !DILocation(line: 879, column: 16, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5245, file: !629, line: 879, column: 9)
!5274 = !DILocation(line: 879, column: 9, scope: !5245)
!5275 = !DILocation(line: 880, column: 9, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5273, file: !629, line: 879, column: 28)
!5277 = !DILocation(line: 883, column: 14, scope: !5245)
!5278 = !DILocation(line: 884, column: 16, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5245, file: !629, line: 884, column: 9)
!5280 = !DILocation(line: 884, column: 9, scope: !5245)
!5281 = !DILocation(line: 885, column: 9, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5279, file: !629, line: 884, column: 28)
!5283 = !DILocation(line: 888, column: 5, scope: !5245)
!5284 = !DILocation(line: 889, column: 1, scope: !5245)
!5285 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !629, file: !629, line: 947, type: !5062, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5286)
!5286 = !{!5287, !5288, !5289, !5290}
!5287 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5285, file: !629, line: 947, type: !735)
!5288 = !DILocalVariable(name: "channel", scope: !5285, file: !629, line: 949, type: !4482)
!5289 = !DILocalVariable(name: "roomleft", scope: !5285, file: !629, line: 950, type: !61)
!5290 = !DILocalVariable(name: "status", scope: !5285, file: !629, line: 951, type: !4543)
!5291 = !DILocation(line: 0, scope: !5285)
!5292 = !DILocation(line: 950, column: 5, scope: !5285)
!5293 = !DILocation(line: 953, column: 10, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5285, file: !629, line: 953, column: 9)
!5295 = !DILocation(line: 953, column: 9, scope: !5285)
!5296 = !DILocation(line: 957, column: 9, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5285, file: !629, line: 957, column: 9)
!5298 = !DILocation(line: 957, column: 36, scope: !5297)
!5299 = !DILocation(line: 957, column: 9, scope: !5285)
!5300 = !DILocation(line: 961, column: 15, scope: !5285)
!5301 = !DILocation(line: 962, column: 14, scope: !5285)
!5302 = !DILocation(line: 963, column: 16, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5285, file: !629, line: 963, column: 9)
!5304 = !DILocation(line: 963, column: 9, scope: !5285)
!5305 = !DILocation(line: 964, column: 9, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5303, file: !629, line: 963, column: 28)
!5307 = !DILocation(line: 968, column: 12, scope: !5285)
!5308 = !DILocation(line: 968, column: 5, scope: !5285)
!5309 = !DILocation(line: 969, column: 1, scope: !5285)
!5310 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !629, file: !629, line: 971, type: !5062, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5311)
!5311 = !{!5312, !5313, !5314, !5315}
!5312 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5310, file: !629, line: 971, type: !735)
!5313 = !DILocalVariable(name: "channel", scope: !5310, file: !629, line: 973, type: !4482)
!5314 = !DILocalVariable(name: "avail", scope: !5310, file: !629, line: 974, type: !61)
!5315 = !DILocalVariable(name: "status", scope: !5310, file: !629, line: 975, type: !4543)
!5316 = !DILocation(line: 0, scope: !5310)
!5317 = !DILocation(line: 974, column: 5, scope: !5310)
!5318 = !DILocation(line: 977, column: 10, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5310, file: !629, line: 977, column: 9)
!5320 = !DILocation(line: 977, column: 9, scope: !5310)
!5321 = !DILocation(line: 981, column: 9, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5310, file: !629, line: 981, column: 9)
!5323 = !DILocation(line: 981, column: 36, scope: !5322)
!5324 = !DILocation(line: 981, column: 9, scope: !5310)
!5325 = !DILocation(line: 985, column: 15, scope: !5310)
!5326 = !DILocation(line: 986, column: 14, scope: !5310)
!5327 = !DILocation(line: 987, column: 16, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5310, file: !629, line: 987, column: 9)
!5329 = !DILocation(line: 987, column: 9, scope: !5310)
!5330 = !DILocation(line: 988, column: 9, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5328, file: !629, line: 987, column: 28)
!5332 = !DILocation(line: 992, column: 12, scope: !5310)
!5333 = !DILocation(line: 992, column: 5, scope: !5310)
!5334 = !DILocation(line: 993, column: 1, scope: !5310)
!5335 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !629, file: !629, line: 995, type: !4849, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5336)
!5336 = !{!5337, !5338}
!5337 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5335, file: !629, line: 995, type: !735)
!5338 = !DILocalVariable(name: "uartx", scope: !5335, file: !629, line: 997, type: !4487)
!5339 = !DILocation(line: 0, scope: !5335)
!5340 = !DILocation(line: 999, column: 10, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5335, file: !629, line: 999, column: 9)
!5342 = !DILocation(line: 999, column: 9, scope: !5335)
!5343 = !DILocation(line: 1003, column: 9, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5335, file: !629, line: 1003, column: 9)
!5345 = !DILocation(line: 1003, column: 36, scope: !5344)
!5346 = !DILocation(line: 1003, column: 9, scope: !5335)
!5347 = !DILocation(line: 1007, column: 13, scope: !5335)
!5348 = !DILocation(line: 1009, column: 5, scope: !5335)
!5349 = !DILocation(line: 1015, column: 5, scope: !5335)
!5350 = !DILocation(line: 1016, column: 1, scope: !5335)
!5351 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !629, file: !629, line: 1018, type: !5352, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5354)
!5352 = !DISubroutineType(types: !5353)
!5353 = !{!4680, !735, !460, !460, !460}
!5354 = !{!5355, !5356, !5357, !5358, !5359}
!5355 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5351, file: !629, line: 1018, type: !735)
!5356 = !DILocalVariable(name: "xon", arg: 2, scope: !5351, file: !629, line: 1019, type: !460)
!5357 = !DILocalVariable(name: "xoff", arg: 3, scope: !5351, file: !629, line: 1020, type: !460)
!5358 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5351, file: !629, line: 1021, type: !460)
!5359 = !DILocalVariable(name: "uartx", scope: !5351, file: !629, line: 1023, type: !4487)
!5360 = !DILocation(line: 0, scope: !5351)
!5361 = !DILocation(line: 1025, column: 10, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5351, file: !629, line: 1025, column: 9)
!5363 = !DILocation(line: 1025, column: 9, scope: !5351)
!5364 = !DILocation(line: 1029, column: 9, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5351, file: !629, line: 1029, column: 9)
!5366 = !DILocation(line: 1029, column: 36, scope: !5365)
!5367 = !DILocation(line: 1029, column: 9, scope: !5351)
!5368 = !DILocation(line: 1033, column: 13, scope: !5351)
!5369 = !DILocation(line: 1035, column: 5, scope: !5351)
!5370 = !DILocation(line: 1044, column: 5, scope: !5351)
!5371 = !DILocation(line: 1045, column: 1, scope: !5351)
!5372 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !629, file: !629, line: 1047, type: !4849, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5373)
!5373 = !{!5374, !5375}
!5374 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5372, file: !629, line: 1047, type: !735)
!5375 = !DILocalVariable(name: "uartx", scope: !5372, file: !629, line: 1049, type: !4487)
!5376 = !DILocation(line: 0, scope: !5372)
!5377 = !DILocation(line: 1051, column: 10, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5372, file: !629, line: 1051, column: 9)
!5379 = !DILocation(line: 1051, column: 9, scope: !5372)
!5380 = !DILocation(line: 1055, column: 9, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5372, file: !629, line: 1055, column: 9)
!5382 = !DILocation(line: 1055, column: 36, scope: !5381)
!5383 = !DILocation(line: 1055, column: 9, scope: !5372)
!5384 = !DILocation(line: 1059, column: 13, scope: !5372)
!5385 = !DILocation(line: 1061, column: 5, scope: !5372)
!5386 = !DILocation(line: 1067, column: 5, scope: !5372)
!5387 = !DILocation(line: 1068, column: 1, scope: !5372)
!5388 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !629, file: !629, line: 1071, type: !5389, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5393)
!5389 = !DISubroutineType(types: !5390)
!5390 = !{!4680, !735, !5391}
!5391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5392, size: 32)
!5392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !758)
!5393 = !{!5394, !5395, !5396, !5397, !5403, !5404, !5405}
!5394 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5388, file: !629, line: 1071, type: !735)
!5395 = !DILocalVariable(name: "dma_config", arg: 2, scope: !5388, file: !629, line: 1071, type: !5391)
!5396 = !DILocalVariable(name: "irq_status", scope: !5388, file: !629, line: 1073, type: !61)
!5397 = !DILocalVariable(name: "internal_dma_config", scope: !5388, file: !629, line: 1074, type: !5398)
!5398 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !639, line: 283, baseType: !5399)
!5399 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !639, line: 280, size: 64, elements: !5400)
!5400 = !{!5401, !5402}
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !5399, file: !639, line: 281, baseType: !61, size: 32)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5399, file: !639, line: 282, baseType: !61, size: 32, offset: 32)
!5403 = !DILocalVariable(name: "tx_dma_channel", scope: !5388, file: !629, line: 1075, type: !4482)
!5404 = !DILocalVariable(name: "rx_dma_channel", scope: !5388, file: !629, line: 1075, type: !4482)
!5405 = !DILocalVariable(name: "status", scope: !5388, file: !629, line: 1076, type: !4543)
!5406 = !DILocation(line: 0, scope: !5388)
!5407 = !DILocation(line: 1074, column: 5, scope: !5388)
!5408 = !DILocation(line: 1074, column: 19, scope: !5388)
!5409 = !DILocation(line: 1078, column: 10, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5388, file: !629, line: 1078, column: 9)
!5411 = !DILocation(line: 1078, column: 9, scope: !5388)
!5412 = !DILocation(line: 1081, column: 22, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5388, file: !629, line: 1081, column: 9)
!5414 = !DILocation(line: 1081, column: 40, scope: !5413)
!5415 = !DILocation(line: 1081, column: 49, scope: !5413)
!5416 = !DILocation(line: 1082, column: 22, scope: !5413)
!5417 = !DILocation(line: 1082, column: 43, scope: !5413)
!5418 = !DILocation(line: 1081, column: 9, scope: !5388)
!5419 = !DILocation(line: 1085, column: 22, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5388, file: !629, line: 1085, column: 9)
!5421 = !DILocation(line: 1085, column: 45, scope: !5420)
!5422 = !DILocation(line: 1085, column: 76, scope: !5420)
!5423 = !DILocation(line: 1086, column: 22, scope: !5420)
!5424 = !DILocation(line: 1086, column: 48, scope: !5420)
!5425 = !DILocation(line: 1086, column: 79, scope: !5420)
!5426 = !DILocation(line: 1090, column: 22, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5388, file: !629, line: 1090, column: 9)
!5428 = !DILocation(line: 1090, column: 48, scope: !5427)
!5429 = !DILocation(line: 1090, column: 79, scope: !5427)
!5430 = !DILocation(line: 1091, column: 22, scope: !5427)
!5431 = !DILocation(line: 1091, column: 51, scope: !5427)
!5432 = !DILocation(line: 1091, column: 82, scope: !5427)
!5433 = !DILocation(line: 1092, column: 22, scope: !5427)
!5434 = !DILocation(line: 1092, column: 47, scope: !5427)
!5435 = !DILocation(line: 1092, column: 78, scope: !5427)
!5436 = !DILocation(line: 1098, column: 9, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5388, file: !629, line: 1098, column: 9)
!5438 = !DILocation(line: 1098, column: 36, scope: !5437)
!5439 = !DILocation(line: 1098, column: 9, scope: !5388)
!5440 = !DILocation(line: 1102, column: 22, scope: !5388)
!5441 = !DILocation(line: 1103, column: 22, scope: !5388)
!5442 = !DILocation(line: 1105, column: 14, scope: !5388)
!5443 = !DILocation(line: 1106, column: 16, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5388, file: !629, line: 1106, column: 9)
!5445 = !DILocation(line: 1106, column: 9, scope: !5388)
!5446 = !DILocation(line: 1107, column: 9, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5444, file: !629, line: 1106, column: 28)
!5448 = !DILocation(line: 1110, column: 62, scope: !5388)
!5449 = !DILocation(line: 1110, column: 40, scope: !5388)
!5450 = !DILocation(line: 1110, column: 25, scope: !5388)
!5451 = !DILocation(line: 1110, column: 38, scope: !5388)
!5452 = !DILocation(line: 1111, column: 44, scope: !5388)
!5453 = !DILocation(line: 1111, column: 25, scope: !5388)
!5454 = !DILocation(line: 1111, column: 30, scope: !5388)
!5455 = !DILocation(line: 1112, column: 14, scope: !5388)
!5456 = !DILocation(line: 1113, column: 16, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5388, file: !629, line: 1113, column: 9)
!5458 = !DILocation(line: 1113, column: 9, scope: !5388)
!5459 = !DILocation(line: 1114, column: 9, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5457, file: !629, line: 1113, column: 28)
!5461 = !DILocation(line: 1117, column: 61, scope: !5388)
!5462 = !DILocation(line: 1117, column: 14, scope: !5388)
!5463 = !DILocation(line: 1118, column: 16, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5388, file: !629, line: 1118, column: 9)
!5465 = !DILocation(line: 1118, column: 9, scope: !5388)
!5466 = !DILocation(line: 1119, column: 9, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5464, file: !629, line: 1118, column: 28)
!5468 = !DILocation(line: 1123, column: 14, scope: !5388)
!5469 = !DILocation(line: 1124, column: 16, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5388, file: !629, line: 1124, column: 9)
!5471 = !DILocation(line: 1124, column: 9, scope: !5388)
!5472 = !DILocation(line: 1125, column: 9, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5470, file: !629, line: 1124, column: 28)
!5474 = !DILocation(line: 1128, column: 62, scope: !5388)
!5475 = !DILocation(line: 1128, column: 40, scope: !5388)
!5476 = !DILocation(line: 1128, column: 38, scope: !5388)
!5477 = !DILocation(line: 1129, column: 44, scope: !5388)
!5478 = !DILocation(line: 1129, column: 30, scope: !5388)
!5479 = !DILocation(line: 1130, column: 14, scope: !5388)
!5480 = !DILocation(line: 1131, column: 16, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5388, file: !629, line: 1131, column: 9)
!5482 = !DILocation(line: 1131, column: 9, scope: !5388)
!5483 = !DILocation(line: 1132, column: 9, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5481, file: !629, line: 1131, column: 28)
!5485 = !DILocation(line: 1135, column: 61, scope: !5388)
!5486 = !DILocation(line: 1135, column: 14, scope: !5388)
!5487 = !DILocation(line: 1136, column: 16, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5388, file: !629, line: 1136, column: 9)
!5489 = !DILocation(line: 1136, column: 9, scope: !5388)
!5490 = !DILocation(line: 1137, column: 9, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5488, file: !629, line: 1136, column: 28)
!5492 = !DILocation(line: 1140, column: 64, scope: !5388)
!5493 = !DILocation(line: 1140, column: 14, scope: !5388)
!5494 = !DILocation(line: 1141, column: 16, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5388, file: !629, line: 1141, column: 9)
!5496 = !DILocation(line: 1141, column: 9, scope: !5388)
!5497 = !DILocation(line: 1142, column: 9, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5495, file: !629, line: 1141, column: 28)
!5499 = !DILocation(line: 1146, column: 18, scope: !5388)
!5500 = !DILocation(line: 1147, column: 66, scope: !5388)
!5501 = !DILocation(line: 1147, column: 34, scope: !5388)
!5502 = !DILocation(line: 1147, column: 52, scope: !5388)
!5503 = !DILocation(line: 1148, column: 71, scope: !5388)
!5504 = !DILocation(line: 1148, column: 34, scope: !5388)
!5505 = !DILocation(line: 1148, column: 57, scope: !5388)
!5506 = !DILocation(line: 1149, column: 74, scope: !5388)
!5507 = !DILocation(line: 1149, column: 34, scope: !5388)
!5508 = !DILocation(line: 1149, column: 60, scope: !5388)
!5509 = !DILocation(line: 1150, column: 73, scope: !5388)
!5510 = !DILocation(line: 1150, column: 34, scope: !5388)
!5511 = !DILocation(line: 1150, column: 59, scope: !5388)
!5512 = !DILocation(line: 1151, column: 69, scope: !5388)
!5513 = !DILocation(line: 1151, column: 34, scope: !5388)
!5514 = !DILocation(line: 1151, column: 55, scope: !5388)
!5515 = !DILocation(line: 1152, column: 74, scope: !5388)
!5516 = !DILocation(line: 1152, column: 34, scope: !5388)
!5517 = !DILocation(line: 1152, column: 60, scope: !5388)
!5518 = !DILocation(line: 1153, column: 77, scope: !5388)
!5519 = !DILocation(line: 1153, column: 34, scope: !5388)
!5520 = !DILocation(line: 1153, column: 63, scope: !5388)
!5521 = !DILocation(line: 1154, column: 5, scope: !5388)
!5522 = !DILocation(line: 1156, column: 5, scope: !5388)
!5523 = !DILocation(line: 1157, column: 1, scope: !5388)
!5524 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !2559, file: !2559, line: 52, type: !5525, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !5582)
!5525 = !DISubroutineType(types: !5526)
!5526 = !{null, !5527, !61}
!5527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5528, size: 32)
!5528 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !5529)
!5529 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !5530)
!5530 = !{!5531, !5537, !5542, !5548, !5549, !5554, !5559, !5560, !5565, !5566, !5567, !5568, !5569, !5570, !5571, !5572, !5573, !5574, !5575, !5576, !5577, !5578, !5579, !5580, !5581}
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !5529, file: !56, line: 547, baseType: !5532, size: 32)
!5532 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5529, file: !56, line: 543, size: 32, elements: !5533)
!5533 = !{!5534, !5535, !5536}
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !5532, file: !56, line: 544, baseType: !272, size: 32)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !5532, file: !56, line: 545, baseType: !60, size: 32)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !5532, file: !56, line: 546, baseType: !60, size: 32)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !5529, file: !56, line: 551, baseType: !5538, size: 32, offset: 32)
!5538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5529, file: !56, line: 548, size: 32, elements: !5539)
!5539 = !{!5540, !5541}
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !5538, file: !56, line: 549, baseType: !60, size: 32)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !5538, file: !56, line: 550, baseType: !60, size: 32)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !5529, file: !56, line: 556, baseType: !5543, size: 32, offset: 64)
!5543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5529, file: !56, line: 552, size: 32, elements: !5544)
!5544 = !{!5545, !5546, !5547}
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !5543, file: !56, line: 553, baseType: !272, size: 32)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !5543, file: !56, line: 554, baseType: !60, size: 32)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !5543, file: !56, line: 555, baseType: !60, size: 32)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !5529, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !5529, file: !56, line: 561, baseType: !5550, size: 32, offset: 128)
!5550 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5529, file: !56, line: 558, size: 32, elements: !5551)
!5551 = !{!5552, !5553}
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !5550, file: !56, line: 559, baseType: !60, size: 32)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !5550, file: !56, line: 560, baseType: !60, size: 32)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !5529, file: !56, line: 565, baseType: !5555, size: 32, offset: 160)
!5555 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5529, file: !56, line: 562, size: 32, elements: !5556)
!5556 = !{!5557, !5558}
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !5555, file: !56, line: 563, baseType: !272, size: 32)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !5555, file: !56, line: 564, baseType: !60, size: 32)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !5529, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !5529, file: !56, line: 570, baseType: !5561, size: 32, offset: 224)
!5561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5529, file: !56, line: 567, size: 32, elements: !5562)
!5562 = !{!5563, !5564}
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !5561, file: !56, line: 568, baseType: !60, size: 32)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !5561, file: !56, line: 569, baseType: !60, size: 32)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !5529, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !5529, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !5529, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !5529, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !5529, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !5529, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !5529, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !5529, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !5529, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !5529, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !5529, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !5529, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !5529, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !5529, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !5529, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !5529, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !5529, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!5582 = !{!5583, !5584, !5585, !5586, !5587, !5588, !5589, !5590, !5591, !5592, !5593, !5597}
!5583 = !DILocalVariable(name: "uartx", arg: 1, scope: !5524, file: !2559, line: 52, type: !5527)
!5584 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !5524, file: !2559, line: 52, type: !61)
!5585 = !DILocalVariable(name: "uart_clock", scope: !5524, file: !2559, line: 54, type: !61)
!5586 = !DILocalVariable(name: "integer", scope: !5524, file: !2559, line: 54, type: !61)
!5587 = !DILocalVariable(name: "remainder", scope: !5524, file: !2559, line: 54, type: !61)
!5588 = !DILocalVariable(name: "fraction", scope: !5524, file: !2559, line: 54, type: !61)
!5589 = !DILocalVariable(name: "dll_dlm", scope: !5524, file: !2559, line: 55, type: !61)
!5590 = !DILocalVariable(name: "sample_count", scope: !5524, file: !2559, line: 55, type: !61)
!5591 = !DILocalVariable(name: "sample_point", scope: !5524, file: !2559, line: 55, type: !61)
!5592 = !DILocalVariable(name: "temp_lcr", scope: !5524, file: !2559, line: 55, type: !61)
!5593 = !DILocalVariable(name: "fraction_L_mapping", scope: !5524, file: !2559, line: 56, type: !5594)
!5594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !5595)
!5595 = !{!5596}
!5596 = !DISubrange(count: 10)
!5597 = !DILocalVariable(name: "fraction_M_mapping", scope: !5524, file: !2559, line: 57, type: !5594)
!5598 = !DILocation(line: 0, scope: !5524)
!5599 = !DILocation(line: 56, column: 14, scope: !5524)
!5600 = !DILocation(line: 57, column: 5, scope: !5524)
!5601 = !DILocation(line: 57, column: 14, scope: !5524)
!5602 = !DILocation(line: 59, column: 12, scope: !5524)
!5603 = !DILocation(line: 59, column: 23, scope: !5524)
!5604 = !DILocation(line: 60, column: 12, scope: !5524)
!5605 = !DILocation(line: 60, column: 22, scope: !5524)
!5606 = !DILocation(line: 61, column: 12, scope: !5524)
!5607 = !DILocation(line: 61, column: 22, scope: !5524)
!5608 = !DILocation(line: 63, column: 9, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5524, file: !2559, line: 63, column: 9)
!5610 = !DILocation(line: 63, column: 9, scope: !5524)
!5611 = !DILocation(line: 64, column: 22, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5609, file: !2559, line: 63, column: 37)
!5613 = !DILocation(line: 64, column: 45, scope: !5612)
!5614 = !DILocation(line: 65, column: 5, scope: !5612)
!5615 = !DILocation(line: 0, scope: !5609)
!5616 = !DILocation(line: 69, column: 45, scope: !5524)
!5617 = !DILocation(line: 69, column: 26, scope: !5524)
!5618 = !DILocation(line: 70, column: 30, scope: !5524)
!5619 = !DILocation(line: 70, column: 36, scope: !5524)
!5620 = !DILocation(line: 70, column: 63, scope: !5524)
!5621 = !DILocation(line: 71, column: 20, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5524, file: !2559, line: 71, column: 9)
!5623 = !DILocation(line: 71, column: 26, scope: !5622)
!5624 = !DILocation(line: 77, column: 5, scope: !5524)
!5625 = !DILocation(line: 77, column: 25, scope: !5524)
!5626 = !DILocation(line: 78, column: 16, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5524, file: !2559, line: 77, column: 32)
!5628 = distinct !{!5628, !5624, !5629}
!5629 = !DILocation(line: 80, column: 5, scope: !5524)
!5630 = !DILocation(line: 82, column: 35, scope: !5524)
!5631 = !DILocation(line: 82, column: 66, scope: !5524)
!5632 = !DILocation(line: 84, column: 18, scope: !5524)
!5633 = !DILocation(line: 85, column: 34, scope: !5524)
!5634 = !DILocation(line: 85, column: 39, scope: !5524)
!5635 = !DILocation(line: 87, column: 12, scope: !5524)
!5636 = !DILocation(line: 87, column: 22, scope: !5524)
!5637 = !DILocation(line: 89, column: 23, scope: !5524)
!5638 = !DILocation(line: 90, column: 27, scope: !5524)
!5639 = !DILocation(line: 90, column: 16, scope: !5524)
!5640 = !DILocation(line: 91, column: 38, scope: !5524)
!5641 = !DILocation(line: 91, column: 24, scope: !5524)
!5642 = !DILocation(line: 91, column: 28, scope: !5524)
!5643 = !DILocation(line: 92, column: 35, scope: !5524)
!5644 = !DILocation(line: 92, column: 41, scope: !5524)
!5645 = !DILocation(line: 92, column: 20, scope: !5524)
!5646 = !DILocation(line: 92, column: 24, scope: !5524)
!5647 = !DILocation(line: 93, column: 16, scope: !5524)
!5648 = !DILocation(line: 95, column: 12, scope: !5524)
!5649 = !DILocation(line: 95, column: 25, scope: !5524)
!5650 = !DILocation(line: 96, column: 12, scope: !5524)
!5651 = !DILocation(line: 96, column: 25, scope: !5524)
!5652 = !DILocation(line: 98, column: 24, scope: !5524)
!5653 = !DILocation(line: 98, column: 22, scope: !5524)
!5654 = !DILocation(line: 99, column: 24, scope: !5524)
!5655 = !DILocation(line: 99, column: 22, scope: !5524)
!5656 = !DILocation(line: 101, column: 25, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5524, file: !2559, line: 101, column: 9)
!5658 = !DILocation(line: 101, column: 9, scope: !5524)
!5659 = !DILocation(line: 102, column: 16, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5657, file: !2559, line: 101, column: 37)
!5661 = !DILocation(line: 102, column: 22, scope: !5660)
!5662 = !DILocation(line: 103, column: 5, scope: !5660)
!5663 = !DILocation(line: 104, column: 1, scope: !5524)
!5664 = distinct !DISubprogram(name: "uart_set_format", scope: !2559, file: !2559, line: 106, type: !5665, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !5667)
!5665 = !DISubroutineType(types: !5666)
!5666 = !{null, !5527, !4731, !4733, !4735}
!5667 = !{!5668, !5669, !5670, !5671, !5672}
!5668 = !DILocalVariable(name: "uartx", arg: 1, scope: !5664, file: !2559, line: 106, type: !5527)
!5669 = !DILocalVariable(name: "word_length", arg: 2, scope: !5664, file: !2559, line: 107, type: !4731)
!5670 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !5664, file: !2559, line: 108, type: !4733)
!5671 = !DILocalVariable(name: "parity", arg: 4, scope: !5664, file: !2559, line: 109, type: !4735)
!5672 = !DILocalVariable(name: "byte", scope: !5664, file: !2559, line: 111, type: !1076)
!5673 = !DILocation(line: 0, scope: !5664)
!5674 = !DILocation(line: 114, column: 19, scope: !5664)
!5675 = !DILocation(line: 115, column: 16, scope: !5664)
!5676 = !DILocation(line: 118, column: 10, scope: !5664)
!5677 = !DILocation(line: 119, column: 5, scope: !5664)
!5678 = !DILocation(line: 124, column: 18, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5664, file: !2559, line: 119, column: 26)
!5680 = !DILocation(line: 125, column: 13, scope: !5679)
!5681 = !DILocation(line: 127, column: 18, scope: !5679)
!5682 = !DILocation(line: 128, column: 13, scope: !5679)
!5683 = !DILocation(line: 130, column: 18, scope: !5679)
!5684 = !DILocation(line: 131, column: 13, scope: !5679)
!5685 = !DILocation(line: 137, column: 10, scope: !5664)
!5686 = !DILocation(line: 138, column: 5, scope: !5664)
!5687 = !DILocation(line: 151, column: 5, scope: !5664)
!5688 = !DILocation(line: 166, column: 18, scope: !5664)
!5689 = !DILocation(line: 166, column: 16, scope: !5664)
!5690 = !DILocation(line: 167, column: 1, scope: !5664)
!5691 = distinct !DISubprogram(name: "uart_put_char_block", scope: !2559, file: !2559, line: 169, type: !5692, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !5694)
!5692 = !DISubroutineType(types: !5693)
!5693 = !{null, !5527, !460}
!5694 = !{!5695, !5696, !5697}
!5695 = !DILocalVariable(name: "uartx", arg: 1, scope: !5691, file: !2559, line: 169, type: !5527)
!5696 = !DILocalVariable(name: "byte", arg: 2, scope: !5691, file: !2559, line: 169, type: !460)
!5697 = !DILocalVariable(name: "LSR", scope: !5691, file: !2559, line: 171, type: !1076)
!5698 = !DILocation(line: 0, scope: !5691)
!5699 = !DILocation(line: 173, column: 5, scope: !5691)
!5700 = !DILocation(line: 174, column: 31, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5691, file: !2559, line: 173, column: 15)
!5702 = !DILocation(line: 175, column: 17, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5701, file: !2559, line: 175, column: 13)
!5704 = !DILocation(line: 175, column: 13, scope: !5701)
!5705 = distinct !{!5705, !5699, !5706}
!5706 = !DILocation(line: 179, column: 5, scope: !5691)
!5707 = !DILocation(line: 176, column: 38, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5703, file: !2559, line: 175, column: 39)
!5709 = !DILocation(line: 176, column: 32, scope: !5708)
!5710 = !DILocation(line: 176, column: 36, scope: !5708)
!5711 = !DILocation(line: 180, column: 1, scope: !5691)
!5712 = distinct !DISubprogram(name: "uart_get_char_block", scope: !2559, file: !2559, line: 182, type: !5713, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !5715)
!5713 = !DISubroutineType(types: !5714)
!5714 = !{!460, !5527}
!5715 = !{!5716, !5717, !5718}
!5716 = !DILocalVariable(name: "uartx", arg: 1, scope: !5712, file: !2559, line: 182, type: !5527)
!5717 = !DILocalVariable(name: "LSR", scope: !5712, file: !2559, line: 184, type: !1076)
!5718 = !DILocalVariable(name: "byte", scope: !5712, file: !2559, line: 185, type: !460)
!5719 = !DILocation(line: 0, scope: !5712)
!5720 = !DILocation(line: 187, column: 5, scope: !5712)
!5721 = !DILocation(line: 188, column: 31, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5712, file: !2559, line: 187, column: 15)
!5723 = !DILocation(line: 189, column: 17, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5722, file: !2559, line: 189, column: 13)
!5725 = !DILocation(line: 189, column: 13, scope: !5722)
!5726 = distinct !{!5726, !5720, !5727}
!5727 = !DILocation(line: 193, column: 5, scope: !5712)
!5728 = !DILocation(line: 190, column: 48, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5724, file: !2559, line: 189, column: 37)
!5730 = !DILocation(line: 190, column: 20, scope: !5729)
!5731 = !DILocation(line: 195, column: 5, scope: !5712)
!5732 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !2559, file: !2559, line: 198, type: !5733, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !5735)
!5733 = !DISubroutineType(types: !5734)
!5734 = !{!61, !5527}
!5735 = !{!5736, !5737, !5738}
!5736 = !DILocalVariable(name: "uartx", arg: 1, scope: !5732, file: !2559, line: 198, type: !5527)
!5737 = !DILocalVariable(name: "LSR", scope: !5732, file: !2559, line: 200, type: !1076)
!5738 = !DILocalVariable(name: "value", scope: !5732, file: !2559, line: 201, type: !61)
!5739 = !DILocation(line: 0, scope: !5732)
!5740 = !DILocation(line: 203, column: 27, scope: !5732)
!5741 = !DILocation(line: 204, column: 13, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5732, file: !2559, line: 204, column: 9)
!5743 = !DILocation(line: 204, column: 9, scope: !5732)
!5744 = !DILocation(line: 205, column: 36, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5742, file: !2559, line: 204, column: 33)
!5746 = !DILocation(line: 206, column: 5, scope: !5745)
!5747 = !DILocation(line: 0, scope: !5742)
!5748 = !DILocation(line: 210, column: 5, scope: !5732)
!5749 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !2559, file: !2559, line: 213, type: !5750, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !5752)
!5750 = !DISubroutineType(types: !5751)
!5751 = !{null, !5527}
!5752 = !{!5753, !5754, !5755}
!5753 = !DILocalVariable(name: "uartx", arg: 1, scope: !5749, file: !2559, line: 213, type: !5527)
!5754 = !DILocalVariable(name: "EFR", scope: !5749, file: !2559, line: 215, type: !1076)
!5755 = !DILocalVariable(name: "LCR", scope: !5749, file: !2559, line: 215, type: !1076)
!5756 = !DILocation(line: 0, scope: !5749)
!5757 = !DILocation(line: 217, column: 18, scope: !5749)
!5758 = !DILocation(line: 219, column: 16, scope: !5749)
!5759 = !DILocation(line: 220, column: 30, scope: !5749)
!5760 = !DILocation(line: 222, column: 30, scope: !5749)
!5761 = !DILocation(line: 222, column: 28, scope: !5749)
!5762 = !DILocation(line: 223, column: 12, scope: !5749)
!5763 = !DILocation(line: 223, column: 22, scope: !5749)
!5764 = !DILocation(line: 225, column: 16, scope: !5749)
!5765 = !DILocation(line: 226, column: 21, scope: !5749)
!5766 = !DILocation(line: 226, column: 25, scope: !5749)
!5767 = !DILocation(line: 228, column: 18, scope: !5749)
!5768 = !DILocation(line: 228, column: 16, scope: !5749)
!5769 = !DILocation(line: 229, column: 1, scope: !5749)
!5770 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !2559, file: !2559, line: 231, type: !5771, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !5773)
!5771 = !DISubroutineType(types: !5772)
!5772 = !{null, !5527, !460, !460, !460}
!5773 = !{!5774, !5775, !5776, !5777, !5778, !5779}
!5774 = !DILocalVariable(name: "uartx", arg: 1, scope: !5770, file: !2559, line: 231, type: !5527)
!5775 = !DILocalVariable(name: "xon", arg: 2, scope: !5770, file: !2559, line: 232, type: !460)
!5776 = !DILocalVariable(name: "xoff", arg: 3, scope: !5770, file: !2559, line: 233, type: !460)
!5777 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5770, file: !2559, line: 234, type: !460)
!5778 = !DILocalVariable(name: "EFR", scope: !5770, file: !2559, line: 236, type: !1076)
!5779 = !DILocalVariable(name: "LCR", scope: !5770, file: !2559, line: 236, type: !1076)
!5780 = !DILocation(line: 0, scope: !5770)
!5781 = !DILocation(line: 238, column: 18, scope: !5770)
!5782 = !DILocation(line: 240, column: 16, scope: !5770)
!5783 = !DILocation(line: 241, column: 28, scope: !5770)
!5784 = !DILocation(line: 241, column: 21, scope: !5770)
!5785 = !DILocation(line: 241, column: 26, scope: !5770)
!5786 = !DILocation(line: 242, column: 20, scope: !5770)
!5787 = !DILocation(line: 242, column: 12, scope: !5770)
!5788 = !DILocation(line: 242, column: 18, scope: !5770)
!5789 = !DILocation(line: 243, column: 30, scope: !5770)
!5790 = !DILocation(line: 245, column: 30, scope: !5770)
!5791 = !DILocation(line: 245, column: 28, scope: !5770)
!5792 = !DILocation(line: 246, column: 25, scope: !5770)
!5793 = !DILocation(line: 246, column: 12, scope: !5770)
!5794 = !DILocation(line: 246, column: 23, scope: !5770)
!5795 = !DILocation(line: 247, column: 12, scope: !5770)
!5796 = !DILocation(line: 247, column: 22, scope: !5770)
!5797 = !DILocation(line: 249, column: 18, scope: !5770)
!5798 = !DILocation(line: 249, column: 16, scope: !5770)
!5799 = !DILocation(line: 250, column: 1, scope: !5770)
!5800 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !2559, file: !2559, line: 252, type: !5750, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !5801)
!5801 = !{!5802, !5803}
!5802 = !DILocalVariable(name: "uartx", arg: 1, scope: !5800, file: !2559, line: 252, type: !5527)
!5803 = !DILocalVariable(name: "LCR", scope: !5800, file: !2559, line: 254, type: !1076)
!5804 = !DILocation(line: 0, scope: !5800)
!5805 = !DILocation(line: 256, column: 18, scope: !5800)
!5806 = !DILocation(line: 258, column: 16, scope: !5800)
!5807 = !DILocation(line: 259, column: 24, scope: !5800)
!5808 = !DILocation(line: 259, column: 28, scope: !5800)
!5809 = !DILocation(line: 261, column: 16, scope: !5800)
!5810 = !DILocation(line: 262, column: 18, scope: !5800)
!5811 = !DILocation(line: 262, column: 16, scope: !5800)
!5812 = !DILocation(line: 263, column: 1, scope: !5800)
!5813 = distinct !DISubprogram(name: "uart_set_fifo", scope: !2559, file: !2559, line: 265, type: !5750, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !5814)
!5814 = !{!5815, !5816, !5817}
!5815 = !DILocalVariable(name: "uartx", arg: 1, scope: !5813, file: !2559, line: 265, type: !5527)
!5816 = !DILocalVariable(name: "EFR", scope: !5813, file: !2559, line: 267, type: !1076)
!5817 = !DILocalVariable(name: "LCR", scope: !5813, file: !2559, line: 267, type: !1076)
!5818 = !DILocation(line: 0, scope: !5813)
!5819 = !DILocation(line: 269, column: 18, scope: !5813)
!5820 = !DILocation(line: 271, column: 16, scope: !5813)
!5821 = !DILocation(line: 272, column: 30, scope: !5813)
!5822 = !DILocation(line: 274, column: 30, scope: !5813)
!5823 = !DILocation(line: 274, column: 28, scope: !5813)
!5824 = !DILocation(line: 276, column: 16, scope: !5813)
!5825 = !DILocation(line: 277, column: 28, scope: !5813)
!5826 = !DILocation(line: 283, column: 18, scope: !5813)
!5827 = !DILocation(line: 283, column: 16, scope: !5813)
!5828 = !DILocation(line: 284, column: 1, scope: !5813)
!5829 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !2559, file: !2559, line: 307, type: !5750, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !5830)
!5830 = !{!5831, !5832, !5833}
!5831 = !DILocalVariable(name: "uartx", arg: 1, scope: !5829, file: !2559, line: 307, type: !5527)
!5832 = !DILocalVariable(name: "IER", scope: !5829, file: !2559, line: 309, type: !1076)
!5833 = !DILocalVariable(name: "LCR", scope: !5829, file: !2559, line: 309, type: !1076)
!5834 = !DILocation(line: 0, scope: !5829)
!5835 = !DILocation(line: 311, column: 18, scope: !5829)
!5836 = !DILocation(line: 313, column: 16, scope: !5829)
!5837 = !DILocation(line: 314, column: 26, scope: !5829)
!5838 = !DILocation(line: 316, column: 26, scope: !5829)
!5839 = !DILocation(line: 316, column: 24, scope: !5829)
!5840 = !DILocation(line: 318, column: 19, scope: !5829)
!5841 = !DILocation(line: 318, column: 16, scope: !5829)
!5842 = !DILocation(line: 319, column: 1, scope: !5829)
!5843 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !2559, file: !2559, line: 321, type: !5844, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !5846)
!5844 = !DISubroutineType(types: !5845)
!5845 = !{null, !5527, !985}
!5846 = !{!5847, !5848, !5849}
!5847 = !DILocalVariable(name: "uartx", arg: 1, scope: !5843, file: !2559, line: 321, type: !5527)
!5848 = !DILocalVariable(name: "is_rx", arg: 2, scope: !5843, file: !2559, line: 321, type: !985)
!5849 = !DILocalVariable(name: "FCR", scope: !5843, file: !2559, line: 323, type: !1076)
!5850 = !DILocation(line: 0, scope: !5843)
!5851 = !DILocation(line: 327, column: 9, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5843, file: !2559, line: 327, column: 9)
!5853 = !DILocation(line: 333, column: 24, scope: !5843)
!5854 = !DILocation(line: 333, column: 28, scope: !5843)
!5855 = !DILocation(line: 334, column: 1, scope: !5843)
!5856 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !2559, file: !2559, line: 336, type: !5857, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !5860)
!5857 = !DISubroutineType(types: !5858)
!5858 = !{!5859, !5527}
!5859 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !730, line: 55, baseType: !786)
!5860 = !{!5861, !5862, !5863, !5864}
!5861 = !DILocalVariable(name: "uartx", arg: 1, scope: !5856, file: !2559, line: 336, type: !5527)
!5862 = !DILocalVariable(name: "IIR", scope: !5856, file: !2559, line: 338, type: !1076)
!5863 = !DILocalVariable(name: "LSR", scope: !5856, file: !2559, line: 338, type: !1076)
!5864 = !DILocalVariable(name: "type", scope: !5856, file: !2559, line: 339, type: !5859)
!5865 = !DILocation(line: 0, scope: !5856)
!5866 = !DILocation(line: 341, column: 30, scope: !5856)
!5867 = !DILocation(line: 342, column: 13, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5856, file: !2559, line: 342, column: 9)
!5869 = !DILocation(line: 342, column: 9, scope: !5856)
!5870 = !DILocation(line: 346, column: 17, scope: !5856)
!5871 = !DILocation(line: 346, column: 5, scope: !5856)
!5872 = !DILocation(line: 350, column: 13, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5856, file: !2559, line: 346, column: 37)
!5874 = !DILocation(line: 353, column: 35, scope: !5873)
!5875 = !DILocation(line: 354, column: 21, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5873, file: !2559, line: 354, column: 17)
!5877 = !DILocation(line: 363, column: 13, scope: !5873)
!5878 = !DILocation(line: 369, column: 1, scope: !5856)
!5879 = distinct !DISubprogram(name: "uart_verify_error", scope: !2559, file: !2559, line: 371, type: !5880, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !5882)
!5880 = !DISubroutineType(types: !5881)
!5881 = !{!985, !5527}
!5882 = !{!5883, !5884, !5885}
!5883 = !DILocalVariable(name: "uartx", arg: 1, scope: !5879, file: !2559, line: 371, type: !5527)
!5884 = !DILocalVariable(name: "LSR", scope: !5879, file: !2559, line: 373, type: !1076)
!5885 = !DILocalVariable(name: "ret", scope: !5879, file: !2559, line: 374, type: !985)
!5886 = !DILocation(line: 0, scope: !5879)
!5887 = !DILocation(line: 376, column: 27, scope: !5879)
!5888 = !DILocation(line: 377, column: 15, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5879, file: !2559, line: 377, column: 9)
!5890 = !DILocation(line: 377, column: 9, scope: !5879)
!5891 = !DILocation(line: 381, column: 5, scope: !5879)
!5892 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !2559, file: !2559, line: 384, type: !5750, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !5893)
!5893 = !{!5894, !5895}
!5894 = !DILocalVariable(name: "uartx", arg: 1, scope: !5892, file: !2559, line: 384, type: !5527)
!5895 = !DILocalVariable(name: "DMA_EN", scope: !5892, file: !2559, line: 386, type: !1076)
!5896 = !DILocation(line: 0, scope: !5892)
!5897 = !DILocation(line: 388, column: 21, scope: !5892)
!5898 = !DILocation(line: 390, column: 1, scope: !5892)
!5899 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !2559, file: !2559, line: 392, type: !5750, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !5900)
!5900 = !{!5901}
!5901 = !DILocalVariable(name: "uartx", arg: 1, scope: !5899, file: !2559, line: 392, type: !5527)
!5902 = !DILocation(line: 0, scope: !5899)
!5903 = !DILocation(line: 394, column: 12, scope: !5899)
!5904 = !DILocation(line: 394, column: 16, scope: !5899)
!5905 = !DILocation(line: 395, column: 24, scope: !5899)
!5906 = !DILocation(line: 395, column: 28, scope: !5899)
!5907 = !DILocation(line: 396, column: 21, scope: !5899)
!5908 = !DILocation(line: 396, column: 26, scope: !5899)
!5909 = !DILocation(line: 397, column: 12, scope: !5899)
!5910 = !DILocation(line: 397, column: 18, scope: !5899)
!5911 = !DILocation(line: 399, column: 16, scope: !5899)
!5912 = !DILocation(line: 400, column: 24, scope: !5899)
!5913 = !DILocation(line: 400, column: 28, scope: !5899)
!5914 = !DILocation(line: 401, column: 20, scope: !5899)
!5915 = !DILocation(line: 401, column: 24, scope: !5899)
!5916 = !DILocation(line: 403, column: 16, scope: !5899)
!5917 = !DILocation(line: 404, column: 24, scope: !5899)
!5918 = !DILocation(line: 405, column: 28, scope: !5899)
!5919 = !DILocation(line: 407, column: 16, scope: !5899)
!5920 = !DILocation(line: 408, column: 28, scope: !5899)
!5921 = !DILocation(line: 409, column: 16, scope: !5899)
!5922 = !DILocation(line: 411, column: 25, scope: !5899)
!5923 = !DILocation(line: 412, column: 22, scope: !5899)
!5924 = !DILocation(line: 412, column: 26, scope: !5899)
!5925 = !DILocation(line: 413, column: 12, scope: !5899)
!5926 = !DILocation(line: 413, column: 24, scope: !5899)
!5927 = !DILocation(line: 414, column: 12, scope: !5899)
!5928 = !DILocation(line: 414, column: 22, scope: !5899)
!5929 = !DILocation(line: 415, column: 12, scope: !5899)
!5930 = !DILocation(line: 415, column: 25, scope: !5899)
!5931 = !DILocation(line: 416, column: 12, scope: !5899)
!5932 = !DILocation(line: 416, column: 25, scope: !5899)
!5933 = !DILocation(line: 417, column: 12, scope: !5899)
!5934 = !DILocation(line: 417, column: 23, scope: !5899)
!5935 = !DILocation(line: 418, column: 12, scope: !5899)
!5936 = !DILocation(line: 418, column: 27, scope: !5899)
!5937 = !DILocation(line: 419, column: 12, scope: !5899)
!5938 = !DILocation(line: 419, column: 18, scope: !5899)
!5939 = !DILocation(line: 420, column: 12, scope: !5899)
!5940 = !DILocation(line: 420, column: 23, scope: !5899)
!5941 = !DILocation(line: 421, column: 12, scope: !5899)
!5942 = !DILocation(line: 421, column: 22, scope: !5899)
!5943 = !DILocation(line: 422, column: 12, scope: !5899)
!5944 = !DILocation(line: 422, column: 21, scope: !5899)
!5945 = !DILocation(line: 423, column: 12, scope: !5899)
!5946 = !DILocation(line: 423, column: 19, scope: !5899)
!5947 = !DILocation(line: 424, column: 23, scope: !5899)
!5948 = !DILocation(line: 425, column: 12, scope: !5899)
!5949 = !DILocation(line: 425, column: 22, scope: !5899)
!5950 = !DILocation(line: 426, column: 12, scope: !5899)
!5951 = !DILocation(line: 426, column: 22, scope: !5899)
!5952 = !DILocation(line: 427, column: 1, scope: !5899)
!5953 = distinct !DISubprogram(name: "uart_query_empty", scope: !2559, file: !2559, line: 429, type: !5750, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !5954)
!5954 = !{!5955}
!5955 = !DILocalVariable(name: "uartx", arg: 1, scope: !5953, file: !2559, line: 429, type: !5527)
!5956 = !DILocation(line: 0, scope: !5953)
!5957 = !DILocation(line: 431, column: 5, scope: !5953)
!5958 = !DILocation(line: 431, column: 31, scope: !5953)
!5959 = !DILocation(line: 431, column: 36, scope: !5953)
!5960 = !DILocation(line: 431, column: 12, scope: !5953)
!5961 = distinct !{!5961, !5957, !5962}
!5962 = !DILocation(line: 431, column: 44, scope: !5953)
!5963 = !DILocation(line: 432, column: 1, scope: !5953)
!5964 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !784, file: !784, line: 134, type: !5965, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !5967)
!5965 = !DISubroutineType(types: !5966)
!5966 = !{!4482, !735, !985}
!5967 = !{!5968, !5969, !5970}
!5968 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5964, file: !784, line: 134, type: !735)
!5969 = !DILocalVariable(name: "is_rx", arg: 2, scope: !5964, file: !784, line: 134, type: !985)
!5970 = !DILocalVariable(name: "dma_channel", scope: !5964, file: !784, line: 136, type: !4482)
!5971 = !DILocation(line: 0, scope: !5964)
!5972 = !DILocation(line: 138, column: 5, scope: !5964)
!5973 = !DILocation(line: 140, column: 17, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5975, file: !784, line: 140, column: 17)
!5975 = distinct !DILexicalBlock(scope: !5964, file: !784, line: 138, column: 24)
!5976 = !DILocation(line: 147, column: 17, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5975, file: !784, line: 147, column: 17)
!5978 = !DILocation(line: 154, column: 17, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5975, file: !784, line: 154, column: 17)
!5980 = !DILocation(line: 161, column: 17, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5975, file: !784, line: 161, column: 17)
!5982 = !DILocation(line: 171, column: 5, scope: !5964)
!5983 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !784, file: !784, line: 174, type: !5984, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !5992)
!5984 = !DISubroutineType(types: !5985)
!5985 = !{null, !4482, !5986}
!5986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5987, size: 32)
!5987 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !730, line: 96, baseType: !5988)
!5988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !730, line: 93, size: 64, elements: !5989)
!5989 = !{!5990, !5991}
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !5988, file: !730, line: 94, baseType: !91, size: 8)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !5988, file: !730, line: 95, baseType: !735, size: 32, offset: 32)
!5992 = !{!5993, !5994}
!5993 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !5983, file: !784, line: 174, type: !4482)
!5994 = !DILocalVariable(name: "user_data", arg: 2, scope: !5983, file: !784, line: 174, type: !5986)
!5995 = !DILocation(line: 0, scope: !5983)
!5996 = !DILocation(line: 176, column: 5, scope: !5983)
!5997 = !DILocation(line: 0, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5983, file: !784, line: 176, column: 26)
!5999 = !DILocation(line: 212, column: 1, scope: !5983)
!6000 = distinct !DISubprogram(name: "uart_enable_dma", scope: !784, file: !784, line: 214, type: !6001, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !6003)
!6001 = !DISubroutineType(types: !6002)
!6002 = !{null, !797}
!6003 = !{!6004}
!6004 = !DILocalVariable(name: "uartx", arg: 1, scope: !6000, file: !784, line: 214, type: !797)
!6005 = !DILocation(line: 0, scope: !6000)
!6006 = !DILocation(line: 216, column: 12, scope: !6000)
!6007 = !DILocation(line: 216, column: 19, scope: !6000)
!6008 = !DILocation(line: 217, column: 1, scope: !6000)
!6009 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !784, file: !784, line: 219, type: !889, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !6010)
!6010 = !{!6011, !6012, !6013, !6014}
!6011 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6009, file: !784, line: 219, type: !862)
!6012 = !DILocalVariable(name: "uart_port", scope: !6009, file: !784, line: 221, type: !735)
!6013 = !DILocalVariable(name: "type", scope: !6009, file: !784, line: 222, type: !5859)
!6014 = !DILocalVariable(name: "uartx", scope: !6009, file: !784, line: 223, type: !797)
!6015 = !DILocation(line: 0, scope: !6009)
!6016 = !DILocation(line: 225, column: 5, scope: !6009)
!6017 = !DILocation(line: 242, column: 13, scope: !6009)
!6018 = !DILocation(line: 243, column: 12, scope: !6009)
!6019 = !DILocation(line: 245, column: 5, scope: !6009)
!6020 = !DILocation(line: 248, column: 13, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6009, file: !784, line: 245, column: 19)
!6022 = !DILocation(line: 249, column: 13, scope: !6021)
!6023 = !DILocation(line: 252, column: 13, scope: !6021)
!6024 = !DILocation(line: 253, column: 13, scope: !6021)
!6025 = !DILocation(line: 263, column: 13, scope: !6021)
!6026 = !DILocation(line: 264, column: 13, scope: !6021)
!6027 = !DILocation(line: 276, column: 13, scope: !6021)
!6028 = !DILocation(line: 278, column: 1, scope: !6009)
!6029 = distinct !DISubprogram(name: "hal_wdt_init", scope: !869, file: !869, line: 54, type: !6030, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6039)
!6030 = !DISubroutineType(types: !6031)
!6031 = !{!6032, !6033}
!6032 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_wdt_status_t", file: !872, line: 198, baseType: !871)
!6033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6034, size: 32)
!6034 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_wdt_config_t", file: !872, line: 228, baseType: !6035)
!6035 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 225, size: 64, elements: !6036)
!6036 = !{!6037, !6038}
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6035, file: !872, line: 226, baseType: !905, size: 32)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "seconds", scope: !6035, file: !872, line: 227, baseType: !61, size: 32, offset: 32)
!6039 = !{!6040}
!6040 = !DILocalVariable(name: "wdt_config", arg: 1, scope: !6029, file: !869, line: 54, type: !6033)
!6041 = !DILocation(line: 0, scope: !6029)
!6042 = !DILocation(line: 57, column: 20, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6029, file: !869, line: 57, column: 9)
!6044 = !DILocation(line: 57, column: 28, scope: !6043)
!6045 = !DILocation(line: 57, column: 66, scope: !6043)
!6046 = !DILocation(line: 57, column: 71, scope: !6043)
!6047 = !DILocation(line: 61, column: 21, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6029, file: !869, line: 61, column: 9)
!6049 = !DILocation(line: 61, column: 29, scope: !6048)
!6050 = !DILocation(line: 61, column: 9, scope: !6029)
!6051 = !DILocation(line: 65, column: 24, scope: !6029)
!6052 = !DILocation(line: 69, column: 5, scope: !6029)
!6053 = !DILocation(line: 72, column: 60, scope: !6029)
!6054 = !DILocation(line: 72, column: 5, scope: !6029)
!6055 = !DILocation(line: 75, column: 47, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6029, file: !869, line: 75, column: 9)
!6057 = !DILocation(line: 75, column: 32, scope: !6056)
!6058 = !DILocation(line: 75, column: 9, scope: !6029)
!6059 = !DILocation(line: 78, column: 9, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6056, file: !869, line: 75, column: 53)
!6061 = !DILocation(line: 79, column: 9, scope: !6060)
!6062 = !DILocation(line: 80, column: 5, scope: !6060)
!6063 = !DILocation(line: 84, column: 5, scope: !6029)
!6064 = !DILocation(line: 86, column: 5, scope: !6029)
!6065 = !DILocation(line: 87, column: 1, scope: !6029)
!6066 = distinct !DISubprogram(name: "hal_wdt_isr", scope: !869, file: !869, line: 205, type: !291, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6067)
!6067 = !{!6068}
!6068 = !DILocalVariable(name: "wdt_reset_status", scope: !6066, file: !869, line: 207, type: !904)
!6069 = !DILocation(line: 209, column: 48, scope: !6066)
!6070 = !DILocation(line: 0, scope: !6066)
!6071 = !DILocation(line: 210, column: 17, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6066, file: !869, line: 210, column: 9)
!6073 = !DILocation(line: 210, column: 14, scope: !6072)
!6074 = !DILocation(line: 210, column: 9, scope: !6066)
!6075 = !DILocation(line: 211, column: 9, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6072, file: !869, line: 210, column: 37)
!6077 = !DILocation(line: 212, column: 5, scope: !6076)
!6078 = !DILocation(line: 214, column: 5, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6066, file: !869, line: 214, column: 5)
!6080 = !DILocation(line: 215, column: 1, scope: !6066)
!6081 = distinct !DISubprogram(name: "hal_wdt_deinit", scope: !869, file: !869, line: 90, type: !6082, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !293)
!6082 = !DISubroutineType(types: !6083)
!6083 = !{!6032}
!6084 = !DILocation(line: 93, column: 5, scope: !6081)
!6085 = !DILocation(line: 95, column: 24, scope: !6081)
!6086 = !DILocation(line: 97, column: 5, scope: !6081)
!6087 = distinct !DISubprogram(name: "hal_wdt_register_callback", scope: !869, file: !869, line: 102, type: !6088, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6090)
!6088 = !DISubroutineType(types: !6089)
!6089 = !{!907, !907}
!6090 = !{!6091, !6092}
!6091 = !DILocalVariable(name: "wdt_callback", arg: 1, scope: !6087, file: !869, line: 102, type: !907)
!6092 = !DILocalVariable(name: "current_wdt_callback", scope: !6087, file: !869, line: 104, type: !907)
!6093 = !DILocation(line: 0, scope: !6087)
!6094 = !DILocation(line: 106, column: 28, scope: !6087)
!6095 = !DILocation(line: 108, column: 24, scope: !6087)
!6096 = !DILocation(line: 110, column: 5, scope: !6087)
!6097 = distinct !DISubprogram(name: "hal_wdt_feed", scope: !869, file: !869, line: 115, type: !6098, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6100)
!6098 = !DISubroutineType(types: !6099)
!6099 = !{!6032, !61}
!6100 = !{!6101}
!6101 = !DILocalVariable(name: "magic", arg: 1, scope: !6097, file: !869, line: 115, type: !61)
!6102 = !DILocation(line: 0, scope: !6097)
!6103 = !DILocation(line: 117, column: 28, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6097, file: !869, line: 117, column: 9)
!6105 = !DILocation(line: 117, column: 9, scope: !6097)
!6106 = !DILocation(line: 122, column: 5, scope: !6097)
!6107 = !DILocation(line: 125, column: 5, scope: !6097)
!6108 = !DILocation(line: 127, column: 5, scope: !6097)
!6109 = !DILocation(line: 128, column: 1, scope: !6097)
!6110 = distinct !DISubprogram(name: "hal_wdt_software_reset", scope: !869, file: !869, line: 132, type: !6082, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !293)
!6111 = !DILocation(line: 134, column: 5, scope: !6110)
!6112 = !DILocation(line: 135, column: 5, scope: !6110)
!6113 = distinct !DISubprogram(name: "hal_wdt_enable", scope: !869, file: !869, line: 140, type: !6098, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6114)
!6114 = !{!6115}
!6115 = !DILocalVariable(name: "magic", arg: 1, scope: !6113, file: !869, line: 140, type: !61)
!6116 = !DILocation(line: 0, scope: !6113)
!6117 = !DILocation(line: 142, column: 30, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6113, file: !869, line: 142, column: 9)
!6119 = !DILocation(line: 142, column: 9, scope: !6113)
!6120 = !DILocation(line: 146, column: 5, scope: !6113)
!6121 = !DILocation(line: 147, column: 5, scope: !6113)
!6122 = !DILocation(line: 149, column: 5, scope: !6113)
!6123 = !DILocation(line: 151, column: 5, scope: !6113)
!6124 = !DILocation(line: 152, column: 1, scope: !6113)
!6125 = distinct !DISubprogram(name: "hal_wdt_disable", scope: !869, file: !869, line: 156, type: !6098, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6126)
!6126 = !{!6127}
!6127 = !DILocalVariable(name: "magic", arg: 1, scope: !6125, file: !869, line: 156, type: !61)
!6128 = !DILocation(line: 0, scope: !6125)
!6129 = !DILocation(line: 158, column: 31, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6125, file: !869, line: 158, column: 9)
!6131 = !DILocation(line: 158, column: 9, scope: !6125)
!6132 = !DILocation(line: 162, column: 5, scope: !6125)
!6133 = !DILocation(line: 163, column: 5, scope: !6125)
!6134 = !DILocation(line: 165, column: 5, scope: !6125)
!6135 = !DILocation(line: 166, column: 1, scope: !6125)
!6136 = distinct !DISubprogram(name: "hal_wdt_get_reset_status", scope: !869, file: !869, line: 170, type: !6137, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6139)
!6137 = !DISubroutineType(types: !6138)
!6138 = !{!904}
!6139 = !{!6140}
!6140 = !DILocalVariable(name: "status", scope: !6136, file: !869, line: 172, type: !904)
!6141 = !DILocation(line: 174, column: 38, scope: !6136)
!6142 = !DILocation(line: 0, scope: !6136)
!6143 = !DILocation(line: 176, column: 5, scope: !6136)
!6144 = distinct !DISubprogram(name: "hal_wdt_get_enable_status", scope: !869, file: !869, line: 181, type: !6145, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6147)
!6145 = !DISubroutineType(types: !6146)
!6146 = !{!91}
!6147 = !{!6148}
!6148 = !DILocalVariable(name: "wdt_status", scope: !6144, file: !869, line: 183, type: !91)
!6149 = !DILocation(line: 0, scope: !6144)
!6150 = !DILocation(line: 185, column: 18, scope: !6144)
!6151 = !DILocation(line: 187, column: 5, scope: !6144)
!6152 = distinct !DISubprogram(name: "hal_wdt_get_mode", scope: !869, file: !869, line: 192, type: !6153, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6155)
!6153 = !DISubroutineType(types: !6154)
!6154 = !{!905}
!6155 = !{!6156}
!6156 = !DILocalVariable(name: "wdt_mode", scope: !6152, file: !869, line: 194, type: !905)
!6157 = !DILocation(line: 0, scope: !6152)
!6158 = !DILocation(line: 196, column: 32, scope: !6152)
!6159 = !DILocation(line: 198, column: 5, scope: !6152)
!6160 = distinct !DISubprogram(name: "wdt_set_length", scope: !2563, file: !2563, line: 45, type: !6161, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2562, retainedNodes: !6163)
!6161 = !DISubroutineType(types: !6162)
!6162 = !{null, !61}
!6163 = !{!6164, !6165}
!6164 = !DILocalVariable(name: "seconds", arg: 1, scope: !6160, file: !2563, line: 45, type: !61)
!6165 = !DILocalVariable(name: "length_register_value", scope: !6160, file: !2563, line: 47, type: !61)
!6166 = !DILocation(line: 0, scope: !6160)
!6167 = !DILocation(line: 49, column: 38, scope: !6160)
!6168 = !DILocation(line: 49, column: 47, scope: !6160)
!6169 = !DILocation(line: 50, column: 27, scope: !6160)
!6170 = !DILocation(line: 51, column: 27, scope: !6160)
!6171 = !DILocation(line: 54, column: 30, scope: !6160)
!6172 = !DILocation(line: 57, column: 31, scope: !6160)
!6173 = !DILocation(line: 58, column: 1, scope: !6160)
!6174 = distinct !DISubprogram(name: "wdt_set_mode_register_by_bit", scope: !2563, file: !2563, line: 60, type: !6175, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2562, retainedNodes: !6177)
!6175 = !DISubroutineType(types: !6176)
!6176 = !{null, !61, !61}
!6177 = !{!6178, !6179, !6180}
!6178 = !DILocalVariable(name: "bit_offset", arg: 1, scope: !6174, file: !2563, line: 60, type: !61)
!6179 = !DILocalVariable(name: "value", arg: 2, scope: !6174, file: !2563, line: 60, type: !61)
!6180 = !DILocalVariable(name: "mode_register_value", scope: !6174, file: !2563, line: 62, type: !61)
!6181 = !DILocation(line: 0, scope: !6174)
!6182 = !DILocation(line: 64, column: 41, scope: !6174)
!6183 = !DILocation(line: 66, column: 11, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6174, file: !2563, line: 66, column: 9)
!6185 = !DILocation(line: 0, scope: !6184)
!6186 = !DILocation(line: 66, column: 9, scope: !6174)
!6187 = !DILocation(line: 72, column: 25, scope: !6174)
!6188 = !DILocation(line: 73, column: 25, scope: !6174)
!6189 = !DILocation(line: 74, column: 28, scope: !6174)
!6190 = !DILocation(line: 77, column: 5, scope: !6174)
!6191 = !DILocation(line: 80, column: 1, scope: !6174)
!6192 = distinct !DISubprogram(name: "wdt_get_reset_status", scope: !2563, file: !2563, line: 82, type: !3829, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2562, retainedNodes: !6193)
!6193 = !{!6194}
!6194 = !DILocalVariable(name: "status_register_value", scope: !6192, file: !2563, line: 84, type: !61)
!6195 = !DILocation(line: 0, scope: !6192)
!6196 = !DILocation(line: 86, column: 43, scope: !6192)
!6197 = !DILocation(line: 88, column: 37, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6192, file: !2563, line: 88, column: 9)
!6199 = !DILocation(line: 88, column: 11, scope: !6198)
!6200 = !DILocation(line: 88, column: 9, scope: !6192)
!6201 = !DILocation(line: 95, column: 1, scope: !6192)
!6202 = !DILocation(line: 131, column: 9, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !913, file: !914, line: 131, column: 9)
!6204 = !DILocation(line: 131, column: 9, scope: !913)
!6205 = !DILocation(line: 0, scope: !913)
!6206 = !DILocation(line: 134, column: 49, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6208, file: !914, line: 133, column: 46)
!6208 = distinct !DILexicalBlock(scope: !6209, file: !914, line: 133, column: 9)
!6209 = distinct !DILexicalBlock(scope: !6210, file: !914, line: 133, column: 9)
!6210 = distinct !DILexicalBlock(scope: !6203, file: !914, line: 131, column: 28)
!6211 = !DILocation(line: 134, column: 13, scope: !6207)
!6212 = !DILocation(line: 133, column: 42, scope: !6208)
!6213 = !DILocation(line: 133, column: 23, scope: !6208)
!6214 = !DILocation(line: 133, column: 9, scope: !6209)
!6215 = distinct !{!6215, !6214, !6216}
!6216 = !DILocation(line: 135, column: 9, scope: !6209)
!6217 = !DILocation(line: 136, column: 22, scope: !6210)
!6218 = !DILocation(line: 137, column: 5, scope: !6210)
!6219 = !DILocation(line: 138, column: 5, scope: !913)
!6220 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !923, file: !923, line: 1577, type: !6221, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6223)
!6221 = !DISubroutineType(types: !6222)
!6222 = !{null, !863, !61}
!6223 = !{!6224, !6225}
!6224 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6220, file: !923, line: 1577, type: !863)
!6225 = !DILocalVariable(name: "priority", arg: 2, scope: !6220, file: !923, line: 1577, type: !61)
!6226 = !DILocation(line: 0, scope: !6220)
!6227 = !DILocation(line: 1582, column: 34, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6229, file: !923, line: 1581, column: 8)
!6229 = distinct !DILexicalBlock(scope: !6220, file: !923, line: 1579, column: 6)
!6230 = !DILocation(line: 1582, column: 5, scope: !6228)
!6231 = !DILocation(line: 1582, column: 32, scope: !6228)
!6232 = !DILocation(line: 1583, column: 1, scope: !6220)
!6233 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !914, file: !914, line: 141, type: !6234, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6236)
!6234 = !DISubroutineType(types: !6235)
!6235 = !{!917, !862}
!6236 = !{!6237, !6238}
!6237 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6233, file: !914, line: 141, type: !862)
!6238 = !DILocalVariable(name: "status", scope: !6233, file: !914, line: 143, type: !917)
!6239 = !DILocation(line: 0, scope: !6233)
!6240 = !DILocation(line: 145, column: 40, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6233, file: !914, line: 145, column: 9)
!6242 = !DILocation(line: 149, column: 9, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6241, file: !914, line: 148, column: 12)
!6244 = !DILocation(line: 153, column: 5, scope: !6233)
!6245 = !DILocation(line: 154, column: 1, scope: !6233)
!6246 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !923, file: !923, line: 1494, type: !6247, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6249)
!6247 = !DISubroutineType(types: !6248)
!6248 = !{null, !863}
!6249 = !{!6250}
!6250 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6246, file: !923, line: 1494, type: !863)
!6251 = !DILocation(line: 0, scope: !6246)
!6252 = !DILocation(line: 1497, column: 91, scope: !6246)
!6253 = !DILocation(line: 1497, column: 61, scope: !6246)
!6254 = !DILocation(line: 1497, column: 40, scope: !6246)
!6255 = !DILocation(line: 1497, column: 3, scope: !6246)
!6256 = !DILocation(line: 1497, column: 46, scope: !6246)
!6257 = !DILocation(line: 1498, column: 1, scope: !6246)
!6258 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !914, file: !914, line: 156, type: !6234, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6259)
!6259 = !{!6260, !6261}
!6260 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6258, file: !914, line: 156, type: !862)
!6261 = !DILocalVariable(name: "status", scope: !6258, file: !914, line: 158, type: !917)
!6262 = !DILocation(line: 0, scope: !6258)
!6263 = !DILocation(line: 160, column: 40, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6258, file: !914, line: 160, column: 9)
!6265 = !DILocation(line: 164, column: 9, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6264, file: !914, line: 163, column: 12)
!6267 = !DILocation(line: 168, column: 5, scope: !6258)
!6268 = !DILocation(line: 169, column: 1, scope: !6258)
!6269 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !923, file: !923, line: 1507, type: !6247, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6270)
!6270 = !{!6271}
!6271 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6269, file: !923, line: 1507, type: !863)
!6272 = !DILocation(line: 0, scope: !6269)
!6273 = !DILocation(line: 1509, column: 65, scope: !6269)
!6274 = !DILocation(line: 1509, column: 44, scope: !6269)
!6275 = !DILocation(line: 1509, column: 32, scope: !6269)
!6276 = !DILocation(line: 1509, column: 3, scope: !6269)
!6277 = !DILocation(line: 1509, column: 39, scope: !6269)
!6278 = !DILocation(line: 1510, column: 1, scope: !6269)
!6279 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !914, file: !914, line: 171, type: !6280, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6282)
!6280 = !DISubroutineType(types: !6281)
!6281 = !{!61, !862}
!6282 = !{!6283, !6284}
!6283 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6279, file: !914, line: 171, type: !862)
!6284 = !DILocalVariable(name: "ret", scope: !6279, file: !914, line: 173, type: !61)
!6285 = !DILocation(line: 0, scope: !6279)
!6286 = !DILocation(line: 175, column: 40, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6279, file: !914, line: 175, column: 9)
!6288 = !DILocation(line: 178, column: 15, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6287, file: !914, line: 177, column: 12)
!6290 = !DILocation(line: 181, column: 5, scope: !6279)
!6291 = !DILocation(line: 182, column: 1, scope: !6279)
!6292 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !923, file: !923, line: 1523, type: !6293, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6295)
!6293 = !DISubroutineType(types: !6294)
!6294 = !{!61, !863}
!6295 = !{!6296}
!6296 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6292, file: !923, line: 1523, type: !863)
!6297 = !DILocation(line: 0, scope: !6292)
!6298 = !DILocation(line: 1525, column: 51, scope: !6292)
!6299 = !DILocation(line: 1525, column: 23, scope: !6292)
!6300 = !DILocation(line: 1525, column: 83, scope: !6292)
!6301 = !DILocation(line: 1525, column: 22, scope: !6292)
!6302 = !DILocation(line: 1525, column: 3, scope: !6292)
!6303 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !914, file: !914, line: 184, type: !6234, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6304)
!6304 = !{!6305, !6306}
!6305 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6303, file: !914, line: 184, type: !862)
!6306 = !DILocalVariable(name: "status", scope: !6303, file: !914, line: 186, type: !917)
!6307 = !DILocation(line: 0, scope: !6303)
!6308 = !DILocation(line: 188, column: 40, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6303, file: !914, line: 188, column: 9)
!6310 = !DILocation(line: 192, column: 9, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6309, file: !914, line: 191, column: 12)
!6312 = !DILocation(line: 196, column: 5, scope: !6303)
!6313 = !DILocation(line: 197, column: 1, scope: !6303)
!6314 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !923, file: !923, line: 1535, type: !6247, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6315)
!6315 = !{!6316}
!6316 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6314, file: !923, line: 1535, type: !863)
!6317 = !DILocation(line: 0, scope: !6314)
!6318 = !DILocation(line: 1537, column: 65, scope: !6314)
!6319 = !DILocation(line: 1537, column: 44, scope: !6314)
!6320 = !DILocation(line: 1537, column: 32, scope: !6314)
!6321 = !DILocation(line: 1537, column: 3, scope: !6314)
!6322 = !DILocation(line: 1537, column: 39, scope: !6314)
!6323 = !DILocation(line: 1538, column: 1, scope: !6314)
!6324 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !914, file: !914, line: 199, type: !6234, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6325)
!6325 = !{!6326, !6327}
!6326 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6324, file: !914, line: 199, type: !862)
!6327 = !DILocalVariable(name: "status", scope: !6324, file: !914, line: 201, type: !917)
!6328 = !DILocation(line: 0, scope: !6324)
!6329 = !DILocation(line: 203, column: 40, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6324, file: !914, line: 203, column: 9)
!6331 = !DILocation(line: 207, column: 9, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6330, file: !914, line: 206, column: 12)
!6333 = !DILocation(line: 211, column: 5, scope: !6324)
!6334 = !DILocation(line: 212, column: 1, scope: !6324)
!6335 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !923, file: !923, line: 1547, type: !6247, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6336)
!6336 = !{!6337}
!6337 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6335, file: !923, line: 1547, type: !863)
!6338 = !DILocation(line: 0, scope: !6335)
!6339 = !DILocation(line: 1549, column: 65, scope: !6335)
!6340 = !DILocation(line: 1549, column: 44, scope: !6335)
!6341 = !DILocation(line: 1549, column: 32, scope: !6335)
!6342 = !DILocation(line: 1549, column: 3, scope: !6335)
!6343 = !DILocation(line: 1549, column: 39, scope: !6335)
!6344 = !DILocation(line: 1550, column: 1, scope: !6335)
!6345 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !914, file: !914, line: 214, type: !6346, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6348)
!6346 = !DISubroutineType(types: !6347)
!6347 = !{!917, !862, !61}
!6348 = !{!6349, !6350, !6351}
!6349 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6345, file: !914, line: 214, type: !862)
!6350 = !DILocalVariable(name: "priority", arg: 2, scope: !6345, file: !914, line: 214, type: !61)
!6351 = !DILocalVariable(name: "status", scope: !6345, file: !914, line: 216, type: !917)
!6352 = !DILocation(line: 0, scope: !6345)
!6353 = !DILocation(line: 218, column: 40, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6345, file: !914, line: 218, column: 9)
!6355 = !DILocation(line: 222, column: 9, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6354, file: !914, line: 221, column: 12)
!6357 = !DILocation(line: 226, column: 5, scope: !6345)
!6358 = !DILocation(line: 227, column: 1, scope: !6345)
!6359 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !914, file: !914, line: 229, type: !6280, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6360)
!6360 = !{!6361, !6362}
!6361 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6359, file: !914, line: 229, type: !862)
!6362 = !DILocalVariable(name: "ret", scope: !6359, file: !914, line: 231, type: !61)
!6363 = !DILocation(line: 0, scope: !6359)
!6364 = !DILocation(line: 233, column: 40, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6359, file: !914, line: 233, column: 9)
!6366 = !DILocation(line: 236, column: 15, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6365, file: !914, line: 235, column: 12)
!6368 = !DILocation(line: 239, column: 5, scope: !6359)
!6369 = !DILocation(line: 240, column: 1, scope: !6359)
!6370 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !923, file: !923, line: 1597, type: !6293, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6371)
!6371 = !{!6372}
!6372 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6370, file: !923, line: 1597, type: !863)
!6373 = !DILocation(line: 0, scope: !6370)
!6374 = !DILocation(line: 1603, column: 23, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6376, file: !923, line: 1602, column: 8)
!6376 = distinct !DILexicalBlock(scope: !6370, file: !923, line: 1600, column: 6)
!6377 = !DILocation(line: 1603, column: 60, scope: !6375)
!6378 = !DILocation(line: 1604, column: 1, scope: !6370)
!6379 = distinct !DISubprogram(name: "isrC_main", scope: !914, file: !914, line: 248, type: !915, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6380)
!6380 = !{!6381, !6382}
!6381 = !DILocalVariable(name: "status", scope: !6379, file: !914, line: 250, type: !917)
!6382 = !DILocalVariable(name: "irq_number", scope: !6379, file: !914, line: 251, type: !862)
!6383 = !DILocation(line: 0, scope: !6379)
!6384 = !DILocation(line: 253, column: 5, scope: !6379)
!6385 = !DILocation(line: 255, column: 35, scope: !6379)
!6386 = !DILocation(line: 256, column: 40, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6379, file: !914, line: 256, column: 9)
!6388 = !DILocation(line: 259, column: 48, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6387, file: !914, line: 259, column: 16)
!6390 = !DILocation(line: 259, column: 62, scope: !6389)
!6391 = !DILocation(line: 259, column: 16, scope: !6387)
!6392 = !DILocation(line: 261, column: 9, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6389, file: !914, line: 259, column: 71)
!6394 = !DILocation(line: 262, column: 9, scope: !6393)
!6395 = !DILocation(line: 264, column: 55, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6389, file: !914, line: 263, column: 12)
!6397 = !DILocation(line: 264, column: 41, scope: !6396)
!6398 = !DILocation(line: 264, column: 53, scope: !6396)
!6399 = !DILocation(line: 265, column: 41, scope: !6396)
!6400 = !DILocation(line: 265, column: 9, scope: !6396)
!6401 = !DILocation(line: 269, column: 5, scope: !6379)
!6402 = !DILocation(line: 270, column: 1, scope: !6379)
!6403 = distinct !DISubprogram(name: "get_current_irq", scope: !914, file: !914, line: 242, type: !3829, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6404)
!6404 = !{!6405}
!6405 = !DILocalVariable(name: "irq_num", scope: !6403, file: !914, line: 244, type: !61)
!6406 = !DILocation(line: 244, column: 31, scope: !6403)
!6407 = !DILocation(line: 244, column: 36, scope: !6403)
!6408 = !DILocation(line: 0, scope: !6403)
!6409 = !DILocation(line: 245, column: 21, scope: !6403)
!6410 = !DILocation(line: 245, column: 5, scope: !6403)
!6411 = distinct !DISubprogram(name: "get_pending_irq", scope: !914, file: !914, line: 121, type: !3829, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !293)
!6412 = !DILocation(line: 123, column: 19, scope: !6411)
!6413 = !DILocation(line: 123, column: 51, scope: !6411)
!6414 = !DILocation(line: 123, column: 5, scope: !6411)
!6415 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !914, file: !914, line: 272, type: !6416, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6418)
!6416 = !DISubroutineType(types: !6417)
!6417 = !{!917, !862, !887}
!6418 = !{!6419, !6420, !6421}
!6419 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6415, file: !914, line: 272, type: !862)
!6420 = !DILocalVariable(name: "callback", arg: 2, scope: !6415, file: !914, line: 272, type: !887)
!6421 = !DILocalVariable(name: "mask", scope: !6415, file: !914, line: 274, type: !61)
!6422 = !DILocation(line: 0, scope: !6415)
!6423 = !DILocation(line: 276, column: 40, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6415, file: !914, line: 276, column: 9)
!6425 = !DILocation(line: 280, column: 12, scope: !6415)
!6426 = !DILocation(line: 281, column: 5, scope: !6415)
!6427 = !DILocation(line: 282, column: 37, scope: !6415)
!6428 = !DILocation(line: 282, column: 51, scope: !6415)
!6429 = !DILocation(line: 283, column: 37, scope: !6415)
!6430 = !DILocation(line: 283, column: 49, scope: !6415)
!6431 = !DILocation(line: 284, column: 5, scope: !6415)
!6432 = !DILocation(line: 286, column: 5, scope: !6415)
!6433 = !DILocation(line: 287, column: 1, scope: !6415)
!6434 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !914, file: !914, line: 289, type: !6435, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6437)
!6435 = !DISubroutineType(types: !6436)
!6436 = !{!917, !1044}
!6437 = !{!6438}
!6438 = !DILocalVariable(name: "mask", arg: 1, scope: !6434, file: !914, line: 289, type: !1044)
!6439 = !DILocation(line: 0, scope: !6434)
!6440 = !DILocation(line: 291, column: 13, scope: !6434)
!6441 = !DILocation(line: 291, column: 11, scope: !6434)
!6442 = !DILocation(line: 292, column: 5, scope: !6434)
!6443 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !914, file: !914, line: 295, type: !6444, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !918, retainedNodes: !6446)
!6444 = !DISubroutineType(types: !6445)
!6445 = !{!917, !61}
!6446 = !{!6447}
!6447 = !DILocalVariable(name: "mask", arg: 1, scope: !6443, file: !914, line: 295, type: !61)
!6448 = !DILocation(line: 0, scope: !6443)
!6449 = !DILocation(line: 297, column: 5, scope: !6443)
!6450 = !DILocation(line: 298, column: 5, scope: !6443)
!6451 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2580, file: !2580, line: 51, type: !3829, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !6452)
!6452 = !{!6453, !6454}
!6453 = !DILocalVariable(name: "mask", scope: !6451, file: !2580, line: 53, type: !61)
!6454 = !DILocalVariable(name: "priority", scope: !6451, file: !2580, line: 55, type: !61)
!6455 = !DILocation(line: 521, column: 3, scope: !6456, inlinedAt: !6460)
!6456 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !6457, file: !6457, line: 517, type: !3829, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !6458)
!6457 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!6458 = !{!6459}
!6459 = !DILocalVariable(name: "result", scope: !6456, file: !6457, line: 519, type: !61)
!6460 = distinct !DILocation(line: 53, column: 21, scope: !6451)
!6461 = !{i64 457576}
!6462 = !DILocation(line: 0, scope: !6456, inlinedAt: !6460)
!6463 = !DILocation(line: 0, scope: !6451)
!6464 = !DILocalVariable(name: "value", arg: 1, scope: !6465, file: !6457, line: 532, type: !61)
!6465 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !6457, file: !6457, line: 532, type: !6161, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !6466)
!6466 = !{!6464}
!6467 = !DILocation(line: 0, scope: !6465, inlinedAt: !6468)
!6468 = distinct !DILocation(line: 56, column: 5, scope: !6451)
!6469 = !DILocation(line: 534, column: 3, scope: !6465, inlinedAt: !6468)
!6470 = !{i64 457909}
!6471 = !DILocation(line: 456, column: 3, scope: !6472, inlinedAt: !6473)
!6472 = distinct !DISubprogram(name: "__DMB", scope: !2695, file: !2695, line: 454, type: !291, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !293)
!6473 = distinct !DILocation(line: 57, column: 5, scope: !6451)
!6474 = !{i64 430665}
!6475 = !DILocation(line: 434, column: 3, scope: !6476, inlinedAt: !6477)
!6476 = distinct !DISubprogram(name: "__ISB", scope: !2695, file: !2695, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !293)
!6477 = distinct !DILocation(line: 58, column: 5, scope: !6451)
!6478 = !{i64 430080}
!6479 = !DILocation(line: 59, column: 5, scope: !6451)
!6480 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2580, file: !2580, line: 62, type: !6161, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !6481)
!6481 = !{!6482}
!6482 = !DILocalVariable(name: "mask", arg: 1, scope: !6480, file: !2580, line: 62, type: !61)
!6483 = !DILocation(line: 0, scope: !6480)
!6484 = !DILocation(line: 0, scope: !6465, inlinedAt: !6485)
!6485 = distinct !DILocation(line: 64, column: 5, scope: !6480)
!6486 = !DILocation(line: 534, column: 3, scope: !6465, inlinedAt: !6485)
!6487 = !DILocation(line: 456, column: 3, scope: !6472, inlinedAt: !6488)
!6488 = distinct !DILocation(line: 65, column: 5, scope: !6480)
!6489 = !DILocation(line: 434, column: 3, scope: !6476, inlinedAt: !6490)
!6490 = distinct !DILocation(line: 66, column: 5, scope: !6480)
!6491 = !DILocation(line: 67, column: 1, scope: !6480)
!6492 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !2580, file: !2580, line: 69, type: !291, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !6493)
!6493 = !{!6494, !6495}
!6494 = !DILocalVariable(name: "irq_number", scope: !6492, file: !2580, line: 71, type: !862)
!6495 = !DILocalVariable(name: "mask", scope: !6492, file: !2580, line: 72, type: !61)
!6496 = !DILocation(line: 72, column: 21, scope: !6492)
!6497 = !DILocation(line: 0, scope: !6492)
!6498 = !DILocation(line: 73, column: 5, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6492, file: !2580, line: 73, column: 5)
!6500 = !DILocation(line: 74, column: 9, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6502, file: !2580, line: 73, column: 85)
!6502 = distinct !DILexicalBlock(scope: !6499, file: !2580, line: 73, column: 5)
!6503 = !DILocation(line: 73, column: 81, scope: !6502)
!6504 = !DILocation(line: 73, column: 53, scope: !6502)
!6505 = distinct !{!6505, !6498, !6506}
!6506 = !DILocation(line: 75, column: 5, scope: !6499)
!6507 = !DILocation(line: 76, column: 5, scope: !6492)
!6508 = !DILocation(line: 77, column: 1, scope: !6492)
!6509 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !923, file: !923, line: 1507, type: !6247, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !6510)
!6510 = !{!6511}
!6511 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6509, file: !923, line: 1507, type: !863)
!6512 = !DILocation(line: 0, scope: !6509)
!6513 = !DILocation(line: 1509, column: 65, scope: !6509)
!6514 = !DILocation(line: 1509, column: 44, scope: !6509)
!6515 = !DILocation(line: 1509, column: 32, scope: !6509)
!6516 = !DILocation(line: 1509, column: 3, scope: !6509)
!6517 = !DILocation(line: 1509, column: 39, scope: !6509)
!6518 = !DILocation(line: 1510, column: 1, scope: !6509)
!6519 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !2580, file: !2580, line: 79, type: !291, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !6520)
!6520 = !{!6521, !6522}
!6521 = !DILocalVariable(name: "irq_number", scope: !6519, file: !2580, line: 81, type: !862)
!6522 = !DILocalVariable(name: "mask", scope: !6519, file: !2580, line: 82, type: !61)
!6523 = !DILocation(line: 82, column: 21, scope: !6519)
!6524 = !DILocation(line: 0, scope: !6519)
!6525 = !DILocation(line: 84, column: 5, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6519, file: !2580, line: 84, column: 5)
!6527 = !DILocation(line: 85, column: 9, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6529, file: !2580, line: 84, column: 85)
!6529 = distinct !DILexicalBlock(scope: !6526, file: !2580, line: 84, column: 5)
!6530 = !DILocation(line: 84, column: 81, scope: !6529)
!6531 = !DILocation(line: 84, column: 53, scope: !6529)
!6532 = distinct !{!6532, !6525, !6533}
!6533 = !DILocation(line: 86, column: 5, scope: !6526)
!6534 = !DILocation(line: 87, column: 5, scope: !6519)
!6535 = !DILocation(line: 88, column: 1, scope: !6519)
!6536 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !923, file: !923, line: 1494, type: !6247, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !6537)
!6537 = !{!6538}
!6538 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6536, file: !923, line: 1494, type: !863)
!6539 = !DILocation(line: 0, scope: !6536)
!6540 = !DILocation(line: 1497, column: 91, scope: !6536)
!6541 = !DILocation(line: 1497, column: 61, scope: !6536)
!6542 = !DILocation(line: 1497, column: 40, scope: !6536)
!6543 = !DILocation(line: 1497, column: 3, scope: !6536)
!6544 = !DILocation(line: 1497, column: 46, scope: !6536)
!6545 = !DILocation(line: 1498, column: 1, scope: !6536)
!6546 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !2580, file: !2580, line: 90, type: !291, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !6547)
!6547 = !{!6548}
!6548 = !DILocalVariable(name: "irq_number", scope: !6546, file: !2580, line: 92, type: !862)
!6549 = !DILocation(line: 0, scope: !6546)
!6550 = !DILocation(line: 93, column: 5, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6546, file: !2580, line: 93, column: 5)
!6552 = !DILocation(line: 94, column: 9, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6554, file: !2580, line: 93, column: 85)
!6554 = distinct !DILexicalBlock(scope: !6551, file: !2580, line: 93, column: 5)
!6555 = !DILocation(line: 93, column: 81, scope: !6554)
!6556 = !DILocation(line: 93, column: 53, scope: !6554)
!6557 = distinct !{!6557, !6550, !6558}
!6558 = !DILocation(line: 95, column: 5, scope: !6551)
!6559 = !DILocation(line: 96, column: 1, scope: !6546)
!6560 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !923, file: !923, line: 1547, type: !6247, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !6561)
!6561 = !{!6562}
!6562 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6560, file: !923, line: 1547, type: !863)
!6563 = !DILocation(line: 0, scope: !6560)
!6564 = !DILocation(line: 1549, column: 65, scope: !6560)
!6565 = !DILocation(line: 1549, column: 44, scope: !6560)
!6566 = !DILocation(line: 1549, column: 32, scope: !6560)
!6567 = !DILocation(line: 1549, column: 3, scope: !6560)
!6568 = !DILocation(line: 1549, column: 39, scope: !6560)
!6569 = !DILocation(line: 1550, column: 1, scope: !6560)
!6570 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !2580, file: !2580, line: 98, type: !6234, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !6571)
!6571 = !{!6572}
!6572 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6570, file: !2580, line: 98, type: !862)
!6573 = !DILocation(line: 0, scope: !6570)
!6574 = !DILocation(line: 100, column: 24, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6570, file: !2580, line: 100, column: 9)
!6576 = !DILocation(line: 104, column: 5, scope: !6570)
!6577 = !DILocation(line: 105, column: 5, scope: !6570)
!6578 = !DILocation(line: 106, column: 1, scope: !6570)
!6579 = distinct !DISubprogram(name: "software_trigger_irq", scope: !2580, file: !2580, line: 45, type: !889, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !6580)
!6580 = !{!6581}
!6581 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6579, file: !2580, line: 45, type: !862)
!6582 = !DILocation(line: 0, scope: !6579)
!6583 = !DILocation(line: 47, column: 54, scope: !6579)
!6584 = !DILocation(line: 47, column: 16, scope: !6579)
!6585 = !DILocation(line: 445, column: 3, scope: !6586, inlinedAt: !6587)
!6586 = distinct !DISubprogram(name: "__DSB", scope: !2695, file: !2695, line: 443, type: !291, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !293)
!6587 = distinct !DILocation(line: 48, column: 5, scope: !6579)
!6588 = !{i64 430376}
!6589 = !DILocation(line: 49, column: 1, scope: !6579)
!6590 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !2580, file: !2580, line: 114, type: !3829, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2579, retainedNodes: !293)
!6591 = !DILocation(line: 116, column: 19, scope: !6590)
!6592 = !DILocation(line: 116, column: 24, scope: !6590)
!6593 = !DILocation(line: 116, column: 5, scope: !6590)
!6594 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !1007, file: !1007, line: 71, type: !6595, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !6597)
!6595 = !DISubroutineType(types: !6596)
!6596 = !{null, !88, !61}
!6597 = !{!6598, !6599, !6600, !6694, !6695, !6696}
!6598 = !DILocalVariable(name: "MTDData", arg: 1, scope: !6594, file: !1007, line: 71, type: !88)
!6599 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !6594, file: !1007, line: 71, type: !61)
!6600 = !DILocalVariable(name: "D", scope: !6594, file: !1007, line: 73, type: !6601)
!6601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6602, size: 32)
!6602 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1200, line: 193, baseType: !6603)
!6603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1200, line: 134, size: 1824, elements: !6604)
!6604 = !{!6605, !6606, !6607, !6613, !6619, !6620, !6627, !6628, !6635, !6636, !6637, !6638, !6645, !6646, !6676, !6677, !6678, !6679, !6680, !6681, !6682, !6683, !6684, !6685, !6686, !6687, !6688, !6689, !6690, !6691, !6692, !6693}
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !6603, file: !1200, line: 136, baseType: !61, size: 32)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !6603, file: !1200, line: 137, baseType: !762, size: 32, offset: 32)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !6603, file: !1200, line: 138, baseType: !6608, size: 32, offset: 64)
!6608 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1284, line: 56, baseType: !6609)
!6609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6610, size: 32)
!6610 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1284, line: 54, size: 8, elements: !6611)
!6611 = !{!6612}
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !6610, file: !1284, line: 55, baseType: !460, size: 8)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !6603, file: !1200, line: 139, baseType: !6614, size: 32, offset: 96)
!6614 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1284, line: 46, baseType: !6615)
!6615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6616, size: 32)
!6616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1284, line: 44, size: 8, elements: !6617)
!6617 = !{!6618}
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !6616, file: !1284, line: 45, baseType: !460, size: 8)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !6603, file: !1200, line: 140, baseType: !1296, size: 8, offset: 128)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !6603, file: !1200, line: 143, baseType: !6621, size: 32, offset: 160)
!6621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6622, size: 32)
!6622 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1302, line: 146, baseType: !6623)
!6623 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 143, size: 64, elements: !6624)
!6624 = !{!6625, !6626}
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !6623, file: !1302, line: 144, baseType: !61, size: 32)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !6623, file: !1302, line: 145, baseType: !61, size: 32, offset: 32)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !6603, file: !1200, line: 144, baseType: !762, size: 32, offset: 192)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !6603, file: !1200, line: 145, baseType: !6629, size: 32, offset: 224)
!6629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6630, size: 32)
!6630 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1302, line: 152, baseType: !6631)
!6631 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 149, size: 64, elements: !6632)
!6632 = !{!6633, !6634}
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !6631, file: !1302, line: 150, baseType: !61, size: 32)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !6631, file: !1302, line: 151, baseType: !61, size: 32, offset: 32)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !6603, file: !1200, line: 146, baseType: !762, size: 32, offset: 256)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !6603, file: !1200, line: 147, baseType: !61, size: 32, offset: 288)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !6603, file: !1200, line: 148, baseType: !762, size: 32, offset: 320)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !6603, file: !1200, line: 151, baseType: !6639, size: 1024, offset: 352)
!6639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6640, size: 1024, elements: !1325)
!6640 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1302, line: 170, baseType: !6641)
!6641 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 167, size: 64, elements: !6642)
!6642 = !{!6643, !6644}
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !6641, file: !1302, line: 168, baseType: !61, size: 32)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !6641, file: !1302, line: 169, baseType: !61, size: 32, offset: 32)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !6603, file: !1200, line: 155, baseType: !1327, size: 32, offset: 1376)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !6603, file: !1200, line: 156, baseType: !6647, size: 32, offset: 1408)
!6647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6648, size: 32)
!6648 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1200, line: 124, baseType: !6649)
!6649 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1200, line: 90, size: 200, elements: !6650)
!6650 = !{!6651, !6652, !6653, !6654, !6655, !6656, !6657, !6658, !6659, !6660, !6661, !6662, !6663, !6664, !6665, !6666, !6667, !6668, !6669, !6670, !6671, !6672, !6673, !6674, !6675}
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !6649, file: !1200, line: 91, baseType: !460, size: 8)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !6649, file: !1200, line: 92, baseType: !460, size: 8, offset: 8)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !6649, file: !1200, line: 94, baseType: !460, size: 8, offset: 16)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !6649, file: !1200, line: 95, baseType: !460, size: 8, offset: 24)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !6649, file: !1200, line: 96, baseType: !460, size: 8, offset: 32)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !6649, file: !1200, line: 98, baseType: !460, size: 8, offset: 40)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !6649, file: !1200, line: 99, baseType: !460, size: 8, offset: 48)
!6658 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !6649, file: !1200, line: 100, baseType: !460, size: 8, offset: 56)
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !6649, file: !1200, line: 101, baseType: !460, size: 8, offset: 64)
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !6649, file: !1200, line: 103, baseType: !460, size: 8, offset: 72)
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !6649, file: !1200, line: 104, baseType: !460, size: 8, offset: 80)
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !6649, file: !1200, line: 106, baseType: !460, size: 8, offset: 88)
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !6649, file: !1200, line: 107, baseType: !460, size: 8, offset: 96)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !6649, file: !1200, line: 108, baseType: !460, size: 8, offset: 104)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !6649, file: !1200, line: 109, baseType: !460, size: 8, offset: 112)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !6649, file: !1200, line: 110, baseType: !460, size: 8, offset: 120)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !6649, file: !1200, line: 111, baseType: !460, size: 8, offset: 128)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !6649, file: !1200, line: 112, baseType: !460, size: 8, offset: 136)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !6649, file: !1200, line: 114, baseType: !460, size: 8, offset: 144)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !6649, file: !1200, line: 115, baseType: !460, size: 8, offset: 152)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !6649, file: !1200, line: 118, baseType: !460, size: 8, offset: 160)
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !6649, file: !1200, line: 119, baseType: !460, size: 8, offset: 168)
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !6649, file: !1200, line: 120, baseType: !460, size: 8, offset: 176)
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !6649, file: !1200, line: 121, baseType: !460, size: 8, offset: 184)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !6649, file: !1200, line: 122, baseType: !460, size: 8, offset: 192)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !6603, file: !1200, line: 157, baseType: !61, size: 32, offset: 1440)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !6603, file: !1200, line: 158, baseType: !1076, size: 16, offset: 1472)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !6603, file: !1200, line: 159, baseType: !1076, size: 16, offset: 1488)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !6603, file: !1200, line: 163, baseType: !1076, size: 16, offset: 1504)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !6603, file: !1200, line: 164, baseType: !1076, size: 16, offset: 1520)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !6603, file: !1200, line: 167, baseType: !460, size: 8, offset: 1536)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !6603, file: !1200, line: 168, baseType: !1366, size: 24, offset: 1544)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !6603, file: !1200, line: 169, baseType: !460, size: 8, offset: 1568)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !6603, file: !1200, line: 170, baseType: !460, size: 8, offset: 1576)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !6603, file: !1200, line: 173, baseType: !1076, size: 16, offset: 1584)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !6603, file: !1200, line: 174, baseType: !61, size: 32, offset: 1600)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !6603, file: !1200, line: 175, baseType: !61, size: 32, offset: 1632)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !6603, file: !1200, line: 178, baseType: !91, size: 8, offset: 1664)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !6603, file: !1200, line: 179, baseType: !91, size: 8, offset: 1672)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !6603, file: !1200, line: 182, baseType: !1377, size: 32, offset: 1696)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !6603, file: !1200, line: 186, baseType: !1377, size: 32, offset: 1728)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !6603, file: !1200, line: 187, baseType: !1382, size: 32, offset: 1760)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !6603, file: !1200, line: 188, baseType: !1382, size: 32, offset: 1792)
!6694 = !DILocalVariable(name: "i", scope: !6594, file: !1007, line: 74, type: !61)
!6695 = !DILocalVariable(name: "data_cnt", scope: !6594, file: !1007, line: 74, type: !61)
!6696 = !DILocalVariable(name: "p_data", scope: !6594, file: !1007, line: 75, type: !1044)
!6697 = !DILocation(line: 0, scope: !6594)
!6698 = !DILocation(line: 77, column: 16, scope: !6594)
!6699 = !DILocation(line: 79, column: 53, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6701, file: !1007, line: 79, column: 5)
!6701 = distinct !DILexicalBlock(scope: !6594, file: !1007, line: 79, column: 5)
!6702 = !DILocation(line: 79, column: 5, scope: !6701)
!6703 = !DILocation(line: 79, column: 41, scope: !6701)
!6704 = !DILocation(line: 77, column: 47, scope: !6594)
!6705 = !DILocation(line: 80, column: 13, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6707, file: !1007, line: 80, column: 13)
!6707 = distinct !DILexicalBlock(scope: !6700, file: !1007, line: 79, column: 80)
!6708 = !DILocation(line: 80, column: 21, scope: !6706)
!6709 = !DILocation(line: 80, column: 13, scope: !6707)
!6710 = !DILocation(line: 81, column: 13, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6712, file: !1007, line: 81, column: 13)
!6712 = distinct !DILexicalBlock(scope: !6713, file: !1007, line: 81, column: 13)
!6713 = distinct !DILexicalBlock(scope: !6714, file: !1007, line: 81, column: 13)
!6714 = distinct !DILexicalBlock(scope: !6706, file: !1007, line: 80, column: 36)
!6715 = !DILocation(line: 79, column: 65, scope: !6700)
!6716 = !DILocation(line: 79, column: 70, scope: !6700)
!6717 = distinct !{!6717, !6702, !6718}
!6718 = !DILocation(line: 84, column: 5, scope: !6701)
!6719 = !DILocation(line: 85, column: 1, scope: !6594)
!6720 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !1007, file: !1007, line: 93, type: !3577, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !6721)
!6721 = !{!6722, !6723}
!6722 = !DILocalVariable(name: "num", arg: 1, scope: !6720, file: !1007, line: 93, type: !61)
!6723 = !DILocalVariable(name: "ret", scope: !6720, file: !1007, line: 95, type: !18)
!6724 = !DILocation(line: 0, scope: !6720)
!6725 = !DILocation(line: 100, column: 9, scope: !6720)
!6726 = !DILocation(line: 102, column: 5, scope: !6720)
!6727 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !1007, file: !1007, line: 110, type: !6728, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !6731)
!6728 = !DISubroutineType(types: !6729)
!6729 = !{null, !6730}
!6730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1076)
!6731 = !{!6732, !6733}
!6732 = !DILocalVariable(name: "CS", arg: 1, scope: !6727, file: !1007, line: 110, type: !6730)
!6733 = !DILocalVariable(name: "val", scope: !6727, file: !1007, line: 112, type: !61)
!6734 = !DILocation(line: 0, scope: !6727)
!6735 = !DILocation(line: 114, column: 5, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6737, file: !1007, line: 114, column: 5)
!6737 = distinct !DILexicalBlock(scope: !6727, file: !1007, line: 114, column: 5)
!6738 = !DILocation(line: 116, column: 16, scope: !6727)
!6739 = !DILocation(line: 117, column: 9, scope: !6727)
!6740 = !DILocation(line: 122, column: 13, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6742, file: !1007, line: 121, column: 27)
!6742 = distinct !DILexicalBlock(scope: !6743, file: !1007, line: 121, column: 16)
!6743 = distinct !DILexicalBlock(scope: !6727, file: !1007, line: 117, column: 9)
!6744 = !DILocation(line: 127, column: 9, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !1007, line: 127, column: 9)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !1007, line: 127, column: 9)
!6747 = distinct !DILexicalBlock(scope: !6748, file: !1007, line: 127, column: 9)
!6748 = distinct !DILexicalBlock(scope: !6742, file: !1007, line: 125, column: 12)
!6749 = !DILocation(line: 0, scope: !6743)
!6750 = !DILocation(line: 134, column: 5, scope: !6727)
!6751 = !DILocation(line: 134, column: 19, scope: !6727)
!6752 = !DILocation(line: 134, column: 35, scope: !6727)
!6753 = !DILocation(line: 134, column: 12, scope: !6727)
!6754 = distinct !{!6754, !6750, !6755}
!6755 = !DILocation(line: 134, column: 57, scope: !6727)
!6756 = !DILocation(line: 135, column: 19, scope: !6727)
!6757 = !DILocation(line: 135, column: 34, scope: !6727)
!6758 = !DILocation(line: 135, column: 12, scope: !6727)
!6759 = !DILocation(line: 135, column: 5, scope: !6727)
!6760 = distinct !{!6760, !6759, !6761}
!6761 = !DILocation(line: 135, column: 50, scope: !6727)
!6762 = !DILocation(line: 130, column: 9, scope: !6727)
!6763 = !DILocation(line: 138, column: 24, scope: !6727)
!6764 = !DILocation(line: 139, column: 1, scope: !6727)
!6765 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !1007, file: !1007, line: 148, type: !6728, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !6766)
!6766 = !{!6767, !6768}
!6767 = !DILocalVariable(name: "CS", arg: 1, scope: !6765, file: !1007, line: 148, type: !6730)
!6768 = !DILocalVariable(name: "val", scope: !6765, file: !1007, line: 150, type: !61)
!6769 = !DILocation(line: 0, scope: !6765)
!6770 = !DILocation(line: 153, column: 16, scope: !6765)
!6771 = !DILocation(line: 154, column: 9, scope: !6765)
!6772 = !DILocation(line: 155, column: 24, scope: !6765)
!6773 = !DILocation(line: 158, column: 5, scope: !6765)
!6774 = !DILocation(line: 158, column: 18, scope: !6765)
!6775 = !DILocation(line: 158, column: 32, scope: !6765)
!6776 = distinct !{!6776, !6773, !6777}
!6777 = !DILocation(line: 158, column: 49, scope: !6765)
!6778 = !DILocation(line: 163, column: 16, scope: !6765)
!6779 = !DILocation(line: 164, column: 9, scope: !6765)
!6780 = !DILocation(line: 165, column: 24, scope: !6765)
!6781 = !DILocation(line: 168, column: 5, scope: !6765)
!6782 = !DILocation(line: 168, column: 18, scope: !6765)
!6783 = !DILocation(line: 168, column: 32, scope: !6765)
!6784 = distinct !{!6784, !6781, !6785}
!6785 = !DILocation(line: 168, column: 46, scope: !6765)
!6786 = !DILocation(line: 174, column: 10, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6765, file: !1007, line: 174, column: 9)
!6788 = !DILocation(line: 174, column: 25, scope: !6787)
!6789 = !DILocation(line: 174, column: 9, scope: !6765)
!6790 = !DILocation(line: 175, column: 9, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6792, file: !1007, line: 175, column: 9)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !1007, line: 175, column: 9)
!6793 = distinct !DILexicalBlock(scope: !6787, file: !1007, line: 174, column: 36)
!6794 = !DILocation(line: 176, column: 5, scope: !6793)
!6795 = !DILocation(line: 179, column: 1, scope: !6765)
!6796 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !1007, file: !1007, line: 186, type: !6797, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !6799)
!6797 = !DISubroutineType(types: !6798)
!6798 = !{!61, !6730}
!6799 = !{!6800, !6801, !6802}
!6800 = !DILocalVariable(name: "CS", arg: 1, scope: !6796, file: !1007, line: 186, type: !6730)
!6801 = !DILocalVariable(name: "val", scope: !6796, file: !1007, line: 188, type: !61)
!6802 = !DILocalVariable(name: "misc_ctl", scope: !6796, file: !1007, line: 189, type: !61)
!6803 = !DILocation(line: 0, scope: !6796)
!6804 = !DILocation(line: 204, column: 16, scope: !6796)
!6805 = !DILocation(line: 208, column: 12, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6796, file: !1007, line: 208, column: 9)
!6807 = !DILocation(line: 208, column: 9, scope: !6796)
!6808 = !DILocation(line: 212, column: 20, scope: !6796)
!6809 = !DILocation(line: 215, column: 1, scope: !6796)
!6810 = !DILocation(line: 215, column: 15, scope: !6796)
!6811 = !DILocation(line: 215, column: 29, scope: !6796)
!6812 = !DILocation(line: 215, column: 8, scope: !6796)
!6813 = distinct !{!6813, !6809, !6814}
!6814 = !DILocation(line: 215, column: 46, scope: !6796)
!6815 = !DILocation(line: 216, column: 22, scope: !6796)
!6816 = !DILocation(line: 216, column: 36, scope: !6796)
!6817 = !DILocation(line: 216, column: 9, scope: !6796)
!6818 = distinct !{!6818, !6817, !6819}
!6819 = !DILocation(line: 216, column: 47, scope: !6796)
!6820 = !DILocation(line: 218, column: 13, scope: !6796)
!6821 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !1007, file: !1007, line: 227, type: !6728, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !6822)
!6822 = !{!6823}
!6823 = !DILocalVariable(name: "CS", arg: 1, scope: !6821, file: !1007, line: 227, type: !6730)
!6824 = !DILocation(line: 0, scope: !6821)
!6825 = !DILocation(line: 235, column: 5, scope: !6821)
!6826 = !DILocation(line: 236, column: 5, scope: !6821)
!6827 = !DILocation(line: 238, column: 1, scope: !6821)
!6828 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !1007, file: !1007, line: 249, type: !6829, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !6831)
!6829 = !DISubroutineType(types: !6830)
!6830 = !{null, !6730, !772}
!6831 = !{!6832, !6833, !6834, !6835, !6836}
!6832 = !DILocalVariable(name: "CS", arg: 1, scope: !6828, file: !1007, line: 249, type: !6730)
!6833 = !DILocalVariable(name: "cmd", arg: 2, scope: !6828, file: !1007, line: 249, type: !772)
!6834 = !DILocalVariable(name: "cmdi", scope: !6828, file: !1007, line: 251, type: !61)
!6835 = !DILocalVariable(name: "cmdo", scope: !6828, file: !1007, line: 251, type: !61)
!6836 = !DILocalVariable(name: "len", scope: !6828, file: !1007, line: 252, type: !460)
!6837 = !DILocation(line: 0, scope: !6828)
!6838 = !DILocation(line: 254, column: 46, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !1007, line: 254, column: 5)
!6840 = distinct !DILexicalBlock(scope: !6828, file: !1007, line: 254, column: 5)
!6841 = !DILocation(line: 254, column: 5, scope: !6840)
!6842 = !DILocation(line: 255, column: 22, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6839, file: !1007, line: 254, column: 103)
!6844 = !DILocation(line: 255, column: 59, scope: !6843)
!6845 = !DILocation(line: 255, column: 51, scope: !6843)
!6846 = !DILocation(line: 254, column: 65, scope: !6839)
!6847 = !DILocation(line: 254, column: 97, scope: !6839)
!6848 = distinct !{!6848, !6841, !6849}
!6849 = !DILocation(line: 256, column: 5, scope: !6840)
!6850 = !DILocation(line: 258, column: 9, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6828, file: !1007, line: 258, column: 9)
!6852 = !DILocation(line: 262, column: 5, scope: !6828)
!6853 = !DILocation(line: 263, column: 33, scope: !6828)
!6854 = !DILocation(line: 264, column: 25, scope: !6828)
!6855 = !DILocation(line: 265, column: 24, scope: !6828)
!6856 = !DILocation(line: 266, column: 5, scope: !6828)
!6857 = !DILocation(line: 268, column: 5, scope: !6828)
!6858 = !DILocation(line: 269, column: 1, scope: !6828)
!6859 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !1007, file: !1007, line: 281, type: !6860, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !6862)
!6860 = !DISubroutineType(types: !6861)
!6861 = !{null, !6730, !4960, !772, !772}
!6862 = !{!6863, !6864, !6865, !6866, !6867, !6868}
!6863 = !DILocalVariable(name: "CS", arg: 1, scope: !6859, file: !1007, line: 281, type: !6730)
!6864 = !DILocalVariable(name: "cmd", arg: 2, scope: !6859, file: !1007, line: 281, type: !4960)
!6865 = !DILocalVariable(name: "address", arg: 3, scope: !6859, file: !1007, line: 281, type: !772)
!6866 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !6859, file: !1007, line: 281, type: !772)
!6867 = !DILocalVariable(name: "cmd1", scope: !6859, file: !1007, line: 283, type: !61)
!6868 = !DILocalVariable(name: "cmd2", scope: !6859, file: !1007, line: 283, type: !61)
!6869 = !DILocation(line: 0, scope: !6859)
!6870 = !DILocation(line: 285, column: 12, scope: !6859)
!6871 = !DILocation(line: 287, column: 23, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6859, file: !1007, line: 287, column: 9)
!6873 = !DILocation(line: 287, column: 9, scope: !6859)
!6874 = !DILocation(line: 288, column: 22, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6872, file: !1007, line: 287, column: 31)
!6876 = !DILocation(line: 288, column: 55, scope: !6875)
!6877 = !DILocation(line: 288, column: 53, scope: !6875)
!6878 = !DILocation(line: 289, column: 5, scope: !6875)
!6879 = !DILocation(line: 290, column: 22, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6872, file: !1007, line: 289, column: 12)
!6881 = !DILocation(line: 290, column: 53, scope: !6880)
!6882 = !DILocation(line: 290, column: 51, scope: !6880)
!6883 = !DILocation(line: 291, column: 21, scope: !6880)
!6884 = !DILocation(line: 0, scope: !6872)
!6885 = !DILocation(line: 294, column: 33, scope: !6859)
!6886 = !DILocation(line: 295, column: 38, scope: !6859)
!6887 = !DILocation(line: 296, column: 41, scope: !6859)
!6888 = !DILocation(line: 296, column: 25, scope: !6859)
!6889 = !DILocation(line: 297, column: 24, scope: !6859)
!6890 = !DILocation(line: 299, column: 5, scope: !6859)
!6891 = !DILocation(line: 300, column: 5, scope: !6859)
!6892 = !DILocation(line: 302, column: 1, scope: !6859)
!6893 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !1007, file: !1007, line: 312, type: !6894, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !6896)
!6894 = !DISubroutineType(types: !6895)
!6895 = !{!61, !772, !772}
!6896 = !{!6897, !6898}
!6897 = !DILocalVariable(name: "cmd", arg: 1, scope: !6893, file: !1007, line: 312, type: !772)
!6898 = !DILocalVariable(name: "address", arg: 2, scope: !6893, file: !1007, line: 312, type: !772)
!6899 = !DILocation(line: 0, scope: !6893)
!6900 = !DILocation(line: 314, column: 14, scope: !6893)
!6901 = !DILocation(line: 314, column: 44, scope: !6893)
!6902 = !DILocation(line: 314, column: 82, scope: !6893)
!6903 = !DILocation(line: 314, column: 75, scope: !6893)
!6904 = !DILocation(line: 314, column: 5, scope: !6893)
!6905 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !1007, file: !1007, line: 332, type: !6906, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !6909)
!6906 = !DISubroutineType(types: !6907)
!6907 = !{!61, !772, !772, !6908, !1044}
!6908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 32)
!6909 = !{!6910, !6911, !6912, !6913, !6914, !6922, !6923, !6924}
!6910 = !DILocalVariable(name: "cmd", arg: 1, scope: !6905, file: !1007, line: 332, type: !772)
!6911 = !DILocalVariable(name: "address", arg: 2, scope: !6905, file: !1007, line: 332, type: !772)
!6912 = !DILocalVariable(name: "p_data", arg: 3, scope: !6905, file: !1007, line: 332, type: !6908)
!6913 = !DILocalVariable(name: "length", arg: 4, scope: !6905, file: !1007, line: 332, type: !1044)
!6914 = !DILocalVariable(name: "tmp", scope: !6905, file: !1007, line: 334, type: !6915)
!6915 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !1200, line: 202, baseType: !6916)
!6916 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1200, line: 198, size: 32, elements: !6917)
!6917 = !{!6918, !6919, !6921}
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !6916, file: !1200, line: 199, baseType: !61, size: 32)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !6916, file: !1200, line: 200, baseType: !6920, size: 32)
!6920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1076, size: 32, elements: !465)
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !6916, file: !1200, line: 201, baseType: !459, size: 32)
!6922 = !DILocalVariable(name: "cmd1", scope: !6905, file: !1007, line: 335, type: !61)
!6923 = !DILocalVariable(name: "cmd2", scope: !6905, file: !1007, line: 335, type: !61)
!6924 = !DILocalVariable(name: "i", scope: !6905, file: !1007, line: 336, type: !61)
!6925 = !DILocation(line: 0, scope: !6905)
!6926 = !DILocation(line: 334, column: 5, scope: !6905)
!6927 = !DILocation(line: 334, column: 16, scope: !6905)
!6928 = !DILocation(line: 338, column: 12, scope: !6905)
!6929 = !DILocation(line: 340, column: 17, scope: !6905)
!6930 = !DILocation(line: 342, column: 17, scope: !6905)
!6931 = !DILocation(line: 342, column: 9, scope: !6905)
!6932 = !DILocation(line: 342, column: 15, scope: !6905)
!6933 = !DILocation(line: 344, column: 22, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6935, file: !1007, line: 343, column: 29)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !1007, line: 343, column: 5)
!6936 = distinct !DILexicalBlock(scope: !6905, file: !1007, line: 343, column: 5)
!6937 = !DILocation(line: 343, column: 5, scope: !6936)
!6938 = !DILocation(line: 344, column: 21, scope: !6934)
!6939 = !DILocation(line: 344, column: 9, scope: !6934)
!6940 = !DILocation(line: 344, column: 19, scope: !6934)
!6941 = !DILocation(line: 345, column: 18, scope: !6934)
!6942 = !DILocation(line: 343, column: 25, scope: !6935)
!6943 = !DILocation(line: 343, column: 19, scope: !6935)
!6944 = distinct !{!6944, !6937, !6945}
!6945 = !DILocation(line: 346, column: 5, scope: !6936)
!6946 = !DILocation(line: 347, column: 16, scope: !6905)
!6947 = !DILocation(line: 348, column: 16, scope: !6905)
!6948 = !DILocation(line: 348, column: 15, scope: !6905)
!6949 = !DILocation(line: 339, column: 17, scope: !6905)
!6950 = !DILocation(line: 339, column: 52, scope: !6905)
!6951 = !DILocation(line: 339, column: 45, scope: !6905)
!6952 = !DILocation(line: 348, column: 13, scope: !6905)
!6953 = !DILocation(line: 349, column: 38, scope: !6905)
!6954 = !DILocation(line: 351, column: 1, scope: !6905)
!6955 = !DILocation(line: 350, column: 5, scope: !6905)
!6956 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !1007, file: !1007, line: 367, type: !6957, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !6959)
!6957 = !DISubroutineType(types: !6958)
!6958 = !{null, !61, !88, !985}
!6959 = !{!6960, !6961, !6962, !6963, !6964, !6965}
!6960 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !6956, file: !1007, line: 367, type: !61)
!6961 = !DILocalVariable(name: "buff", arg: 2, scope: !6956, file: !1007, line: 367, type: !88)
!6962 = !DILocalVariable(name: "length", arg: 3, scope: !6956, file: !1007, line: 367, type: !985)
!6963 = !DILocalVariable(name: "i", scope: !6956, file: !1007, line: 369, type: !61)
!6964 = !DILocalVariable(name: "p_data", scope: !6956, file: !1007, line: 370, type: !762)
!6965 = !DILocalVariable(name: "tmp", scope: !6956, file: !1007, line: 371, type: !6915)
!6966 = !DILocation(line: 0, scope: !6956)
!6967 = !DILocation(line: 371, column: 5, scope: !6956)
!6968 = !DILocation(line: 371, column: 13, scope: !6956)
!6969 = !DILocation(line: 373, column: 18, scope: !6956)
!6970 = !DILocation(line: 376, column: 15, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6956, file: !1007, line: 376, column: 9)
!6972 = !DILocation(line: 376, column: 30, scope: !6971)
!6973 = !DILocation(line: 376, column: 11, scope: !6971)
!6974 = !DILocation(line: 376, column: 9, scope: !6956)
!6975 = !DILocation(line: 377, column: 23, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6977, file: !1007, line: 377, column: 9)
!6977 = distinct !DILexicalBlock(scope: !6978, file: !1007, line: 377, column: 9)
!6978 = distinct !DILexicalBlock(scope: !6971, file: !1007, line: 376, column: 41)
!6979 = !DILocation(line: 377, column: 9, scope: !6977)
!6980 = !DILocation(line: 378, column: 13, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6976, file: !1007, line: 377, column: 80)
!6982 = !DILocation(line: 377, column: 41, scope: !6976)
!6983 = !DILocation(line: 377, column: 54, scope: !6976)
!6984 = !DILocation(line: 377, column: 67, scope: !6976)
!6985 = distinct !{!6985, !6979, !6986}
!6986 = !DILocation(line: 379, column: 9, scope: !6977)
!6987 = !DILocation(line: 382, column: 37, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6971, file: !1007, line: 382, column: 14)
!6989 = !DILocation(line: 382, column: 16, scope: !6988)
!6990 = !DILocation(line: 0, scope: !6988)
!6991 = !DILocation(line: 382, column: 14, scope: !6971)
!6992 = !DILocation(line: 391, column: 9, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6994, file: !1007, line: 391, column: 9)
!6994 = distinct !DILexicalBlock(scope: !6988, file: !1007, line: 390, column: 13)
!6995 = !DILocation(line: 383, column: 9, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6997, file: !1007, line: 383, column: 9)
!6997 = distinct !DILexicalBlock(scope: !6988, file: !1007, line: 382, column: 49)
!6998 = !DILocation(line: 384, column: 26, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !7000, file: !1007, line: 383, column: 80)
!7000 = distinct !DILexicalBlock(scope: !6996, file: !1007, line: 383, column: 9)
!7001 = !DILocation(line: 384, column: 24, scope: !6999)
!7002 = !DILocation(line: 385, column: 47, scope: !6999)
!7003 = !DILocation(line: 385, column: 26, scope: !6999)
!7004 = !DILocation(line: 385, column: 24, scope: !6999)
!7005 = !DILocation(line: 386, column: 13, scope: !6999)
!7006 = !DILocation(line: 383, column: 41, scope: !7000)
!7007 = !DILocation(line: 383, column: 54, scope: !7000)
!7008 = !DILocation(line: 383, column: 67, scope: !7000)
!7009 = !DILocation(line: 383, column: 23, scope: !7000)
!7010 = distinct !{!7010, !6995, !7011}
!7011 = !DILocation(line: 387, column: 9, scope: !6996)
!7012 = !DILocation(line: 392, column: 13, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7014, file: !1007, line: 392, column: 13)
!7014 = distinct !DILexicalBlock(scope: !7015, file: !1007, line: 391, column: 61)
!7015 = distinct !DILexicalBlock(scope: !6993, file: !1007, line: 391, column: 9)
!7016 = !DILocation(line: 393, column: 36, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !1007, line: 392, column: 51)
!7018 = distinct !DILexicalBlock(scope: !7013, file: !1007, line: 392, column: 13)
!7019 = !DILocation(line: 393, column: 29, scope: !7017)
!7020 = !DILocation(line: 393, column: 17, scope: !7017)
!7021 = !DILocation(line: 393, column: 27, scope: !7017)
!7022 = !DILocation(line: 392, column: 47, scope: !7018)
!7023 = !DILocation(line: 392, column: 27, scope: !7018)
!7024 = !DILocation(line: 392, column: 31, scope: !7018)
!7025 = distinct !{!7025, !7012, !7026}
!7026 = !DILocation(line: 394, column: 13, scope: !7013)
!7027 = !DILocation(line: 395, column: 13, scope: !7014)
!7028 = !DILocation(line: 391, column: 41, scope: !7015)
!7029 = !DILocation(line: 391, column: 54, scope: !7015)
!7030 = !DILocation(line: 391, column: 23, scope: !7015)
!7031 = distinct !{!7031, !6992, !7032}
!7032 = !DILocation(line: 396, column: 9, scope: !6993)
!7033 = !DILocation(line: 398, column: 1, scope: !6956)
!7034 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !1007, file: !1007, line: 414, type: !7035, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7037)
!7035 = !DISubroutineType(types: !7036)
!7036 = !{null, !6730, !4959, !762, !6730, !6730}
!7037 = !{!7038, !7039, !7040, !7041, !7042, !7043, !7044, !7045, !7046, !7047}
!7038 = !DILocalVariable(name: "CS", arg: 1, scope: !7034, file: !1007, line: 414, type: !6730)
!7039 = !DILocalVariable(name: "cmd", arg: 2, scope: !7034, file: !1007, line: 414, type: !4959)
!7040 = !DILocalVariable(name: "data", arg: 3, scope: !7034, file: !1007, line: 414, type: !762)
!7041 = !DILocalVariable(name: "outl", arg: 4, scope: !7034, file: !1007, line: 414, type: !6730)
!7042 = !DILocalVariable(name: "inl", arg: 5, scope: !7034, file: !1007, line: 414, type: !6730)
!7043 = !DILocalVariable(name: "tmp", scope: !7034, file: !1007, line: 416, type: !61)
!7044 = !DILocalVariable(name: "i", scope: !7034, file: !1007, line: 417, type: !61)
!7045 = !DILocalVariable(name: "j", scope: !7034, file: !1007, line: 417, type: !61)
!7046 = !DILocalVariable(name: "p_data", scope: !7034, file: !1007, line: 418, type: !762)
!7047 = !DILocalVariable(name: "p_tmp", scope: !7034, file: !1007, line: 418, type: !762)
!7048 = !DILocation(line: 0, scope: !7034)
!7049 = !DILocation(line: 416, column: 5, scope: !7034)
!7050 = !DILocation(line: 422, column: 60, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7052, file: !1007, line: 422, column: 5)
!7052 = distinct !DILexicalBlock(scope: !7034, file: !1007, line: 422, column: 5)
!7053 = !DILocation(line: 422, column: 5, scope: !7052)
!7054 = !DILocation(line: 423, column: 25, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7056, file: !1007, line: 423, column: 9)
!7056 = distinct !DILexicalBlock(scope: !7051, file: !1007, line: 422, column: 83)
!7057 = !DILocation(line: 423, column: 32, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7055, file: !1007, line: 423, column: 9)
!7059 = !DILocation(line: 423, column: 9, scope: !7055)
!7060 = !DILocation(line: 424, column: 24, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7058, file: !1007, line: 423, column: 59)
!7062 = !DILocation(line: 424, column: 13, scope: !7061)
!7063 = !DILocation(line: 424, column: 22, scope: !7061)
!7064 = !DILocation(line: 423, column: 50, scope: !7058)
!7065 = !DILocation(line: 423, column: 55, scope: !7058)
!7066 = !DILocation(line: 423, column: 39, scope: !7058)
!7067 = distinct !{!7067, !7059, !7068}
!7068 = !DILocation(line: 425, column: 9, scope: !7055)
!7069 = !DILocation(line: 426, column: 9, scope: !7056)
!7070 = !DILocation(line: 0, scope: !7052)
!7071 = !DILocation(line: 422, column: 75, scope: !7051)
!7072 = distinct !{!7072, !7053, !7073}
!7073 = !DILocation(line: 427, column: 5, scope: !7052)
!7074 = !DILocation(line: 428, column: 25, scope: !7034)
!7075 = !DILocation(line: 429, column: 26, scope: !7034)
!7076 = !DILocation(line: 429, column: 24, scope: !7034)
!7077 = !DILocation(line: 430, column: 5, scope: !7034)
!7078 = !DILocation(line: 431, column: 5, scope: !7034)
!7079 = !DILocation(line: 433, column: 67, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7081, file: !1007, line: 433, column: 5)
!7081 = distinct !DILexicalBlock(scope: !7034, file: !1007, line: 433, column: 5)
!7082 = !DILocation(line: 433, column: 5, scope: !7081)
!7083 = !DILocation(line: 433, column: 56, scope: !7081)
!7084 = !DILocation(line: 434, column: 17, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7080, file: !1007, line: 433, column: 100)
!7086 = !DILocation(line: 434, column: 15, scope: !7085)
!7087 = !DILocation(line: 433, column: 74, scope: !7080)
!7088 = !DILocation(line: 433, column: 79, scope: !7080)
!7089 = !DILocation(line: 433, column: 87, scope: !7080)
!7090 = distinct !{!7090, !7082, !7091}
!7091 = !DILocation(line: 435, column: 5, scope: !7081)
!7092 = !DILocation(line: 437, column: 1, scope: !7034)
!7093 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !1007, file: !1007, line: 462, type: !7094, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7096)
!7094 = !DISubroutineType(types: !7095)
!7095 = !{null, !6730, !4959}
!7096 = !{!7097, !7098, !7099, !7100, !7101}
!7097 = !DILocalVariable(name: "CS", arg: 1, scope: !7093, file: !1007, line: 462, type: !6730)
!7098 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !7093, file: !1007, line: 462, type: !4959)
!7099 = !DILocalVariable(name: "i", scope: !7093, file: !1007, line: 464, type: !61)
!7100 = !DILocalVariable(name: "val", scope: !7093, file: !1007, line: 465, type: !61)
!7101 = !DILocalVariable(name: "status", scope: !7102, file: !1007, line: 492, type: !460)
!7102 = distinct !DILexicalBlock(scope: !7103, file: !1007, line: 491, column: 47)
!7103 = distinct !DILexicalBlock(scope: !7104, file: !1007, line: 491, column: 13)
!7104 = distinct !DILexicalBlock(scope: !7093, file: !1007, line: 477, column: 17)
!7105 = !DILocation(line: 0, scope: !7093)
!7106 = !DILocation(line: 467, column: 17, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7093, file: !1007, line: 467, column: 9)
!7108 = !DILocation(line: 467, column: 9, scope: !7093)
!7109 = !DILocation(line: 474, column: 11, scope: !7093)
!7110 = !DILocation(line: 477, column: 5, scope: !7093)
!7111 = !DILocation(line: 478, column: 17, scope: !7104)
!7112 = !DILocation(line: 478, column: 9, scope: !7104)
!7113 = !DILocation(line: 481, column: 17, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7115, file: !1007, line: 481, column: 17)
!7115 = distinct !DILexicalBlock(scope: !7104, file: !1007, line: 478, column: 29)
!7116 = !DILocation(line: 481, column: 17, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7118, file: !1007, line: 481, column: 17)
!7118 = distinct !DILexicalBlock(scope: !7119, file: !1007, line: 481, column: 17)
!7119 = distinct !DILexicalBlock(scope: !7114, file: !1007, line: 481, column: 17)
!7120 = !DILocation(line: 481, column: 17, scope: !7118)
!7121 = !DILocation(line: 481, column: 17, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7123, file: !1007, line: 481, column: 17)
!7123 = distinct !DILexicalBlock(scope: !7119, file: !1007, line: 481, column: 17)
!7124 = !DILocation(line: 484, column: 17, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7115, file: !1007, line: 484, column: 17)
!7126 = !DILocation(line: 484, column: 17, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7128, file: !1007, line: 484, column: 17)
!7128 = distinct !DILexicalBlock(scope: !7129, file: !1007, line: 484, column: 17)
!7129 = distinct !DILexicalBlock(scope: !7125, file: !1007, line: 484, column: 17)
!7130 = !DILocation(line: 484, column: 17, scope: !7128)
!7131 = !DILocation(line: 484, column: 17, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7133, file: !1007, line: 484, column: 17)
!7133 = distinct !DILexicalBlock(scope: !7129, file: !1007, line: 484, column: 17)
!7134 = !DILocation(line: 0, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7136, file: !1007, line: 487, column: 17)
!7136 = distinct !DILexicalBlock(scope: !7115, file: !1007, line: 487, column: 17)
!7137 = !DILocation(line: 487, column: 17, scope: !7136)
!7138 = !DILocation(line: 487, column: 17, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7140, file: !1007, line: 487, column: 17)
!7140 = distinct !DILexicalBlock(scope: !7135, file: !1007, line: 487, column: 17)
!7141 = !DILocation(line: 487, column: 17, scope: !7140)
!7142 = !DILocation(line: 487, column: 17, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7144, file: !1007, line: 487, column: 17)
!7144 = distinct !DILexicalBlock(scope: !7135, file: !1007, line: 487, column: 17)
!7145 = !DILocation(line: 487, column: 17, scope: !7144)
!7146 = !DILocation(line: 491, column: 23, scope: !7103)
!7147 = !DILocation(line: 491, column: 13, scope: !7103)
!7148 = !DILocation(line: 491, column: 28, scope: !7103)
!7149 = !DILocation(line: 491, column: 13, scope: !7104)
!7150 = !DILocation(line: 492, column: 13, scope: !7102)
!7151 = !DILocation(line: 494, column: 13, scope: !7102)
!7152 = !DILocation(line: 0, scope: !7102)
!7153 = !DILocation(line: 495, column: 17, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7102, file: !1007, line: 494, column: 16)
!7155 = !DILocation(line: 496, column: 22, scope: !7102)
!7156 = !DILocation(line: 496, column: 31, scope: !7102)
!7157 = !DILocation(line: 496, column: 29, scope: !7102)
!7158 = !DILocation(line: 496, column: 13, scope: !7154)
!7159 = distinct !{!7159, !7151, !7160}
!7160 = !DILocation(line: 496, column: 45, scope: !7102)
!7161 = !DILocation(line: 497, column: 9, scope: !7103)
!7162 = !DILocation(line: 503, column: 25, scope: !7104)
!7163 = !DILocation(line: 497, column: 9, scope: !7102)
!7164 = !DILocation(line: 500, column: 70, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7103, file: !1007, line: 499, column: 14)
!7166 = !DILocation(line: 500, column: 60, scope: !7165)
!7167 = !DILocation(line: 500, column: 13, scope: !7165)
!7168 = !DILocation(line: 503, column: 15, scope: !7104)
!7169 = !DILocation(line: 503, column: 11, scope: !7104)
!7170 = distinct !{!7170, !7110, !7171}
!7171 = !DILocation(line: 504, column: 5, scope: !7093)
!7172 = !DILocation(line: 505, column: 1, scope: !7093)
!7173 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !1007, file: !1007, line: 514, type: !7174, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7176)
!7174 = !DISubroutineType(types: !7175)
!7175 = !{null, !6730, !762, !460}
!7176 = !{!7177, !7178, !7179}
!7177 = !DILocalVariable(name: "CS", arg: 1, scope: !7173, file: !1007, line: 514, type: !6730)
!7178 = !DILocalVariable(name: "id", arg: 2, scope: !7173, file: !1007, line: 514, type: !762)
!7179 = !DILocalVariable(name: "cmd", arg: 3, scope: !7173, file: !1007, line: 514, type: !460)
!7180 = !DILocation(line: 0, scope: !7173)
!7181 = !DILocation(line: 517, column: 5, scope: !7173)
!7182 = !DILocation(line: 518, column: 1, scope: !7173)
!7183 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !1007, file: !1007, line: 521, type: !7184, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7186)
!7184 = !DISubroutineType(types: !7185)
!7185 = !{null, !6730, !762}
!7186 = !{!7187, !7188}
!7187 = !DILocalVariable(name: "CS", arg: 1, scope: !7183, file: !1007, line: 521, type: !6730)
!7188 = !DILocalVariable(name: "id", arg: 2, scope: !7183, file: !1007, line: 521, type: !762)
!7189 = !DILocation(line: 0, scope: !7183)
!7190 = !DILocation(line: 523, column: 5, scope: !7183)
!7191 = !DILocation(line: 524, column: 1, scope: !7183)
!7192 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !1007, file: !1007, line: 536, type: !7193, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !293)
!7193 = !DISubroutineType(types: !7194)
!7194 = !{!7195}
!7195 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !1010, line: 57, baseType: !1009)
!7196 = !DILocation(line: 540, column: 5, scope: !7192)
!7197 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !1007, file: !1007, line: 561, type: !7198, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !293)
!7198 = !DISubroutineType(types: !7199)
!7199 = !{!7200}
!7200 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !1010, line: 66, baseType: !1017)
!7201 = !DILocation(line: 564, column: 15, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7197, file: !1007, line: 564, column: 9)
!7203 = !DILocation(line: 564, column: 31, scope: !7202)
!7204 = !DILocation(line: 564, column: 45, scope: !7202)
!7205 = !DILocation(line: 0, scope: !7202)
!7206 = !DILocation(line: 569, column: 1, scope: !7197)
!7207 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !1007, file: !1007, line: 580, type: !7208, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7210)
!7208 = !DISubroutineType(types: !7209)
!7209 = !{!91, !762}
!7210 = !{!7211, !7212}
!7211 = !DILocalVariable(name: "buffer", arg: 1, scope: !7207, file: !1007, line: 580, type: !762)
!7212 = !DILocalVariable(name: "i", scope: !7207, file: !1007, line: 582, type: !7)
!7213 = !DILocation(line: 0, scope: !7207)
!7214 = !DILocation(line: 583, column: 5, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7207, file: !1007, line: 583, column: 5)
!7216 = !DILocation(line: 584, column: 9, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7218, file: !1007, line: 583, column: 29)
!7218 = distinct !DILexicalBlock(scope: !7215, file: !1007, line: 583, column: 5)
!7219 = !DILocation(line: 584, column: 19, scope: !7217)
!7220 = !DILocation(line: 583, column: 25, scope: !7218)
!7221 = !DILocation(line: 583, column: 19, scope: !7218)
!7222 = distinct !{!7222, !7214, !7223}
!7223 = !DILocation(line: 585, column: 5, scope: !7215)
!7224 = !DILocation(line: 586, column: 5, scope: !7207)
!7225 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !1007, file: !1007, line: 613, type: !291, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !7226)
!7226 = !{!7227}
!7227 = !DILocalVariable(name: "D", scope: !7225, file: !1007, line: 615, type: !6601)
!7228 = !DILocation(line: 0, scope: !7225)
!7229 = !DILocation(line: 616, column: 32, scope: !7225)
!7230 = !DILocation(line: 616, column: 37, scope: !7225)
!7231 = !DILocation(line: 616, column: 27, scope: !7225)
!7232 = !DILocation(line: 617, column: 44, scope: !7225)
!7233 = !DILocation(line: 617, column: 31, scope: !7225)
!7234 = !DILocation(line: 617, column: 28, scope: !7225)
!7235 = !DILocation(line: 618, column: 32, scope: !7225)
!7236 = !DILocation(line: 618, column: 31, scope: !7225)
!7237 = !DILocation(line: 618, column: 29, scope: !7225)
!7238 = !DILocation(line: 621, column: 31, scope: !7225)
!7239 = !DILocation(line: 621, column: 24, scope: !7225)
!7240 = !DILocation(line: 622, column: 34, scope: !7225)
!7241 = !DILocation(line: 622, column: 27, scope: !7225)
!7242 = !DILocation(line: 623, column: 32, scope: !7225)
!7243 = !DILocation(line: 623, column: 25, scope: !7225)
!7244 = !DILocation(line: 624, column: 33, scope: !7225)
!7245 = !DILocation(line: 624, column: 26, scope: !7225)
!7246 = !DILocation(line: 625, column: 33, scope: !7225)
!7247 = !DILocation(line: 625, column: 26, scope: !7225)
!7248 = !DILocation(line: 629, column: 32, scope: !7225)
!7249 = !DILocation(line: 629, column: 47, scope: !7225)
!7250 = !DILocation(line: 629, column: 25, scope: !7225)
!7251 = !DILocation(line: 630, column: 32, scope: !7225)
!7252 = !DILocation(line: 630, column: 47, scope: !7225)
!7253 = !DILocation(line: 630, column: 25, scope: !7225)
!7254 = !DILocation(line: 633, column: 24, scope: !7225)
!7255 = !DILocation(line: 633, column: 31, scope: !7225)
!7256 = !DILocation(line: 633, column: 36, scope: !7225)
!7257 = !DILocation(line: 633, column: 28, scope: !7225)
!7258 = !DILocation(line: 633, column: 5, scope: !7225)
!7259 = !DILocation(line: 635, column: 5, scope: !7225)
!7260 = !DILocation(line: 636, column: 1, scope: !7225)
!7261 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !1007, file: !1007, line: 641, type: !291, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !293)
!7262 = !DILocation(line: 644, column: 26, scope: !7261)
!7263 = !DILocation(line: 644, column: 24, scope: !7261)
!7264 = !DILocation(line: 645, column: 29, scope: !7261)
!7265 = !DILocation(line: 645, column: 27, scope: !7261)
!7266 = !DILocation(line: 646, column: 27, scope: !7261)
!7267 = !DILocation(line: 646, column: 25, scope: !7261)
!7268 = !DILocation(line: 647, column: 28, scope: !7261)
!7269 = !DILocation(line: 647, column: 26, scope: !7261)
!7270 = !DILocation(line: 648, column: 27, scope: !7261)
!7271 = !DILocation(line: 648, column: 25, scope: !7261)
!7272 = !DILocation(line: 652, column: 32, scope: !7261)
!7273 = !DILocation(line: 652, column: 47, scope: !7261)
!7274 = !DILocation(line: 652, column: 25, scope: !7261)
!7275 = !DILocation(line: 655, column: 24, scope: !7261)
!7276 = !DILocation(line: 655, column: 5, scope: !7261)
!7277 = !DILocation(line: 657, column: 5, scope: !7261)
!7278 = !DILocation(line: 660, column: 9, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7261, file: !1007, line: 660, column: 9)
!7280 = !DILocation(line: 660, column: 59, scope: !7279)
!7281 = !DILocation(line: 660, column: 38, scope: !7279)
!7282 = !DILocation(line: 660, column: 37, scope: !7279)
!7283 = !DILocation(line: 660, column: 33, scope: !7279)
!7284 = !DILocation(line: 660, column: 9, scope: !7261)
!7285 = !DILocation(line: 661, column: 9, scope: !7279)
!7286 = distinct !{!7286, !7285, !7287}
!7287 = !DILocation(line: 661, column: 18, scope: !7279)
!7288 = !DILocation(line: 662, column: 1, scope: !7261)
!7289 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !1007, file: !1007, line: 668, type: !291, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !293)
!7290 = !DILocation(line: 671, column: 9, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7289, file: !1007, line: 671, column: 9)
!7292 = !DILocation(line: 671, column: 40, scope: !7291)
!7293 = !DILocation(line: 671, column: 9, scope: !7289)
!7294 = !DILocation(line: 672, column: 47, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7291, file: !1007, line: 671, column: 46)
!7296 = !DILocation(line: 672, column: 40, scope: !7295)
!7297 = !DILocation(line: 673, column: 5, scope: !7295)
!7298 = !DILocation(line: 674, column: 9, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7289, file: !1007, line: 674, column: 9)
!7300 = !DILocation(line: 674, column: 41, scope: !7299)
!7301 = !DILocation(line: 674, column: 9, scope: !7289)
!7302 = !DILocation(line: 675, column: 48, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7299, file: !1007, line: 674, column: 47)
!7304 = !DILocation(line: 675, column: 41, scope: !7303)
!7305 = !DILocation(line: 676, column: 5, scope: !7303)
!7306 = !DILocation(line: 679, column: 33, scope: !7289)
!7307 = !DILocation(line: 679, column: 48, scope: !7289)
!7308 = !DILocation(line: 679, column: 25, scope: !7289)
!7309 = !DILocation(line: 680, column: 25, scope: !7289)
!7310 = !DILocation(line: 686, column: 5, scope: !7289)
!7311 = !DILocation(line: 688, column: 1, scope: !7289)
!7312 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !1007, file: !1007, line: 689, type: !291, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1006, retainedNodes: !293)
!7313 = !DILocation(line: 692, column: 9, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7312, file: !1007, line: 692, column: 9)
!7315 = !DILocation(line: 692, column: 40, scope: !7314)
!7316 = !DILocation(line: 692, column: 9, scope: !7312)
!7317 = !DILocation(line: 693, column: 29, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7314, file: !1007, line: 692, column: 46)
!7319 = !DILocation(line: 694, column: 5, scope: !7318)
!7320 = !DILocation(line: 695, column: 9, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7312, file: !1007, line: 695, column: 9)
!7322 = !DILocation(line: 695, column: 41, scope: !7321)
!7323 = !DILocation(line: 695, column: 9, scope: !7312)
!7324 = !DILocation(line: 696, column: 29, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7321, file: !1007, line: 695, column: 47)
!7326 = !DILocation(line: 697, column: 5, scope: !7325)
!7327 = !DILocation(line: 698, column: 5, scope: !7312)
!7328 = !DILocation(line: 699, column: 1, scope: !7312)
!7329 = distinct !DISubprogram(name: "ust_get_current_time", scope: !1106, file: !1106, line: 91, type: !3829, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7330)
!7330 = !{!7331}
!7331 = !DILocalVariable(name: "counter", scope: !7329, file: !1106, line: 102, type: !61)
!7332 = !DILocation(line: 0, scope: !7329)
!7333 = !DILocation(line: 110, column: 5, scope: !7329)
!7334 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !1106, file: !1106, line: 114, type: !3829, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7335)
!7335 = !{!7336}
!7336 = !DILocalVariable(name: "counter", scope: !7334, file: !1106, line: 125, type: !61)
!7337 = !DILocation(line: 0, scope: !7334)
!7338 = !DILocation(line: 133, column: 5, scope: !7334)
!7339 = distinct !DISubprogram(name: "ust_busy_wait", scope: !1106, file: !1106, line: 137, type: !6161, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7340)
!7340 = !{!7341}
!7341 = !DILocalVariable(name: "delay_us", arg: 1, scope: !7339, file: !1106, line: 137, type: !61)
!7342 = !DILocation(line: 0, scope: !7339)
!7343 = !DILocation(line: 142, column: 5, scope: !7339)
!7344 = !DILocation(line: 144, column: 1, scope: !7339)
!7345 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !1106, file: !1106, line: 163, type: !3829, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7346)
!7346 = !{!7347}
!7347 = !DILocalVariable(name: "mask", scope: !7345, file: !1106, line: 165, type: !61)
!7348 = !DILocation(line: 166, column: 12, scope: !7345)
!7349 = !DILocation(line: 0, scope: !7345)
!7350 = !DILocation(line: 167, column: 5, scope: !7345)
!7351 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !1106, file: !1106, line: 171, type: !6161, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7352)
!7352 = !{!7353}
!7353 = !DILocalVariable(name: "mask", arg: 1, scope: !7351, file: !1106, line: 171, type: !61)
!7354 = !DILocation(line: 0, scope: !7351)
!7355 = !DILocation(line: 173, column: 5, scope: !7351)
!7356 = !DILocation(line: 174, column: 1, scope: !7351)
!7357 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !1106, file: !1106, line: 199, type: !1378, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7358)
!7358 = !{!7359}
!7359 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7357, file: !1106, line: 199, type: !88)
!7360 = !DILocation(line: 0, scope: !7357)
!7361 = !DILocation(line: 201, column: 5, scope: !7357)
!7362 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !1106, file: !1106, line: 388, type: !7363, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !293)
!7363 = !DISubroutineType(types: !7364)
!7364 = !{!985}
!7365 = !DILocation(line: 390, column: 5, scope: !7362)
!7366 = distinct !DISubprogram(name: "CompareData", scope: !1106, file: !1106, line: 872, type: !7367, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7369)
!7367 = !DISubroutineType(types: !7368)
!7368 = !{!91, !88, !88, !61}
!7369 = !{!7370, !7371, !7372, !7373, !7374, !7377, !7378, !7381, !7382, !7384}
!7370 = !DILocalVariable(name: "Address", arg: 1, scope: !7366, file: !1106, line: 872, type: !88)
!7371 = !DILocalVariable(name: "Data", arg: 2, scope: !7366, file: !1106, line: 872, type: !88)
!7372 = !DILocalVariable(name: "Length", arg: 3, scope: !7366, file: !1106, line: 872, type: !61)
!7373 = !DILocalVariable(name: "i", scope: !7366, file: !1106, line: 874, type: !61)
!7374 = !DILocalVariable(name: "Source", scope: !7375, file: !1106, line: 877, type: !1044)
!7375 = distinct !DILexicalBlock(scope: !7376, file: !1106, line: 876, column: 74)
!7376 = distinct !DILexicalBlock(scope: !7366, file: !1106, line: 876, column: 9)
!7377 = !DILocalVariable(name: "Dest", scope: !7375, file: !1106, line: 878, type: !1044)
!7378 = !DILocalVariable(name: "Source", scope: !7379, file: !1106, line: 885, type: !1075)
!7379 = distinct !DILexicalBlock(scope: !7380, file: !1106, line: 884, column: 79)
!7380 = distinct !DILexicalBlock(scope: !7376, file: !1106, line: 884, column: 16)
!7381 = !DILocalVariable(name: "Dest", scope: !7379, file: !1106, line: 886, type: !1075)
!7382 = !DILocalVariable(name: "Source", scope: !7383, file: !1106, line: 893, type: !762)
!7383 = distinct !DILexicalBlock(scope: !7380, file: !1106, line: 892, column: 12)
!7384 = !DILocalVariable(name: "Dest", scope: !7383, file: !1106, line: 894, type: !762)
!7385 = !DILocation(line: 0, scope: !7366)
!7386 = !DILocation(line: 876, column: 11, scope: !7376)
!7387 = !DILocation(line: 876, column: 42, scope: !7376)
!7388 = !DILocation(line: 877, column: 28, scope: !7375)
!7389 = !DILocation(line: 0, scope: !7375)
!7390 = !DILocation(line: 878, column: 26, scope: !7375)
!7391 = !DILocation(line: 879, column: 23, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7393, file: !1106, line: 879, column: 9)
!7393 = distinct !DILexicalBlock(scope: !7375, file: !1106, line: 879, column: 9)
!7394 = !DILocation(line: 879, column: 9, scope: !7393)
!7395 = !DILocation(line: 880, column: 17, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7397, file: !1106, line: 880, column: 17)
!7397 = distinct !DILexicalBlock(scope: !7392, file: !1106, line: 879, column: 68)
!7398 = !DILocation(line: 880, column: 30, scope: !7396)
!7399 = !DILocation(line: 880, column: 27, scope: !7396)
!7400 = !DILocation(line: 879, column: 64, scope: !7392)
!7401 = !DILocation(line: 880, column: 17, scope: !7397)
!7402 = distinct !{!7402, !7394, !7403}
!7403 = !DILocation(line: 883, column: 9, scope: !7393)
!7404 = !DILocation(line: 884, column: 47, scope: !7380)
!7405 = !DILocation(line: 895, column: 23, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7407, file: !1106, line: 895, column: 9)
!7407 = distinct !DILexicalBlock(scope: !7383, file: !1106, line: 895, column: 9)
!7408 = !DILocation(line: 895, column: 9, scope: !7407)
!7409 = !DILocation(line: 885, column: 28, scope: !7379)
!7410 = !DILocation(line: 0, scope: !7379)
!7411 = !DILocation(line: 886, column: 26, scope: !7379)
!7412 = !DILocation(line: 887, column: 23, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7414, file: !1106, line: 887, column: 9)
!7414 = distinct !DILexicalBlock(scope: !7379, file: !1106, line: 887, column: 9)
!7415 = !DILocation(line: 887, column: 9, scope: !7414)
!7416 = !DILocation(line: 888, column: 17, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7418, file: !1106, line: 888, column: 17)
!7418 = distinct !DILexicalBlock(scope: !7413, file: !1106, line: 887, column: 68)
!7419 = !DILocation(line: 888, column: 30, scope: !7417)
!7420 = !DILocation(line: 888, column: 27, scope: !7417)
!7421 = !DILocation(line: 887, column: 64, scope: !7413)
!7422 = !DILocation(line: 888, column: 17, scope: !7418)
!7423 = distinct !{!7423, !7415, !7424}
!7424 = !DILocation(line: 891, column: 9, scope: !7414)
!7425 = !DILocation(line: 896, column: 17, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7427, file: !1106, line: 896, column: 17)
!7427 = distinct !DILexicalBlock(scope: !7406, file: !1106, line: 895, column: 38)
!7428 = !DILocation(line: 896, column: 30, scope: !7426)
!7429 = !DILocation(line: 896, column: 27, scope: !7426)
!7430 = !DILocation(line: 895, column: 34, scope: !7406)
!7431 = !DILocation(line: 896, column: 17, scope: !7427)
!7432 = distinct !{!7432, !7408, !7433}
!7433 = !DILocation(line: 899, column: 9, scope: !7407)
!7434 = !DILocation(line: 902, column: 1, scope: !7366)
!7435 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !1106, file: !1106, line: 919, type: !7436, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7438)
!7436 = !DISubroutineType(types: !7437)
!7437 = !{null, !88, !88, !61}
!7438 = !{!7439, !7440, !7441, !7442, !7443, !7444, !7445, !7446, !7447, !7448, !7449}
!7439 = !DILocalVariable(name: "Target", arg: 1, scope: !7435, file: !1106, line: 919, type: !88)
!7440 = !DILocalVariable(name: "Data", arg: 2, scope: !7435, file: !1106, line: 919, type: !88)
!7441 = !DILocalVariable(name: "Size", arg: 3, scope: !7435, file: !1106, line: 919, type: !61)
!7442 = !DILocalVariable(name: "D", scope: !7435, file: !1106, line: 921, type: !1276)
!7443 = !DILocalVariable(name: "address", scope: !7435, file: !1106, line: 922, type: !61)
!7444 = !DILocalVariable(name: "p_data", scope: !7435, file: !1106, line: 923, type: !762)
!7445 = !DILocalVariable(name: "cmd1", scope: !7435, file: !1106, line: 924, type: !61)
!7446 = !DILocalVariable(name: "length", scope: !7435, file: !1106, line: 924, type: !61)
!7447 = !DILocalVariable(name: "written", scope: !7435, file: !1106, line: 924, type: !61)
!7448 = !DILocalVariable(name: "status", scope: !7435, file: !1106, line: 925, type: !1328)
!7449 = !DILocalVariable(name: "savedMask", scope: !7435, file: !1106, line: 926, type: !61)
!7450 = !DILocation(line: 0, scope: !7435)
!7451 = !DILocation(line: 921, column: 60, scope: !7435)
!7452 = !DILocation(line: 923, column: 5, scope: !7435)
!7453 = !DILocation(line: 923, column: 19, scope: !7435)
!7454 = !DILocation(line: 924, column: 5, scope: !7435)
!7455 = !DILocation(line: 932, column: 9, scope: !7435)
!7456 = !DILocation(line: 933, column: 8, scope: !7435)
!7457 = !DILocation(line: 933, column: 21, scope: !7435)
!7458 = !DILocation(line: 935, column: 14, scope: !7435)
!7459 = !DILocation(line: 935, column: 5, scope: !7435)
!7460 = !DILocation(line: 922, column: 29, scope: !7435)
!7461 = !DILocation(line: 937, column: 18, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7435, file: !1106, line: 935, column: 23)
!7463 = !DILocation(line: 937, column: 35, scope: !7462)
!7464 = !DILocation(line: 937, column: 74, scope: !7462)
!7465 = !DILocation(line: 937, column: 50, scope: !7462)
!7466 = !DILocation(line: 937, column: 39, scope: !7462)
!7467 = !DILocation(line: 940, column: 35, scope: !7462)
!7468 = !DILocation(line: 940, column: 29, scope: !7462)
!7469 = !DILocation(line: 940, column: 16, scope: !7462)
!7470 = !DILocation(line: 942, column: 18, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7462, file: !1106, line: 942, column: 13)
!7472 = !DILocation(line: 942, column: 29, scope: !7471)
!7473 = !DILocation(line: 942, column: 13, scope: !7462)
!7474 = !DILocation(line: 943, column: 13, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7471, file: !1106, line: 942, column: 55)
!7476 = !DILocation(line: 944, column: 9, scope: !7475)
!7477 = !DILocation(line: 947, column: 16, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7462, file: !1106, line: 947, column: 13)
!7479 = !DILocation(line: 947, column: 29, scope: !7478)
!7480 = !DILocation(line: 0, scope: !7478)
!7481 = !DILocation(line: 947, column: 13, scope: !7462)
!7482 = !DILocation(line: 948, column: 20, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7478, file: !1106, line: 947, column: 35)
!7484 = !DILocation(line: 949, column: 32, scope: !7483)
!7485 = !DILocation(line: 949, column: 40, scope: !7483)
!7486 = !DILocation(line: 949, column: 13, scope: !7483)
!7487 = !DILocation(line: 950, column: 9, scope: !7483)
!7488 = !DILocation(line: 953, column: 20, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7478, file: !1106, line: 952, column: 9)
!7490 = !DILocation(line: 954, column: 32, scope: !7489)
!7491 = !DILocation(line: 954, column: 40, scope: !7489)
!7492 = !DILocation(line: 954, column: 13, scope: !7489)
!7493 = !DILocation(line: 957, column: 21, scope: !7462)
!7494 = !DILocation(line: 963, column: 45, scope: !7462)
!7495 = !DILocation(line: 963, column: 42, scope: !7462)
!7496 = !DILocation(line: 963, column: 40, scope: !7462)
!7497 = !DILocation(line: 963, column: 58, scope: !7462)
!7498 = !DILocation(line: 963, column: 29, scope: !7462)
!7499 = !DILocation(line: 964, column: 28, scope: !7462)
!7500 = !DILocation(line: 965, column: 37, scope: !7462)
!7501 = !DILocation(line: 966, column: 9, scope: !7462)
!7502 = !DILocation(line: 967, column: 26, scope: !7462)
!7503 = !DILocation(line: 967, column: 9, scope: !7462)
!7504 = !DILocation(line: 968, column: 29, scope: !7462)
!7505 = !DILocation(line: 968, column: 9, scope: !7462)
!7506 = !DILocation(line: 972, column: 9, scope: !7462)
!7507 = !DILocation(line: 978, column: 9, scope: !7462)
!7508 = !DILocation(line: 979, column: 50, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7462, file: !1106, line: 978, column: 22)
!7510 = !DILocation(line: 979, column: 55, scope: !7509)
!7511 = !DILocation(line: 979, column: 22, scope: !7509)
!7512 = !DILocation(line: 980, column: 35, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7509, file: !1106, line: 980, column: 17)
!7514 = !DILocation(line: 980, column: 32, scope: !7513)
!7515 = !DILocation(line: 980, column: 30, scope: !7513)
!7516 = !DILocation(line: 980, column: 19, scope: !7513)
!7517 = !DILocation(line: 980, column: 17, scope: !7509)
!7518 = distinct !{!7518, !7507, !7519}
!7519 = !DILocation(line: 983, column: 9, scope: !7462)
!7520 = !DILocation(line: 991, column: 9, scope: !7462)
!7521 = !DILocation(line: 993, column: 19, scope: !7462)
!7522 = !DILocation(line: 993, column: 16, scope: !7462)
!7523 = !DILocation(line: 994, column: 14, scope: !7462)
!7524 = !DILocation(line: 995, column: 17, scope: !7462)
!7525 = distinct !{!7525, !7459, !7526}
!7526 = !DILocation(line: 996, column: 5, scope: !7435)
!7527 = !DILocation(line: 998, column: 21, scope: !7435)
!7528 = !DILocation(line: 1005, column: 9, scope: !7435)
!7529 = !DILocation(line: 1008, column: 1, scope: !7435)
!7530 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !1106, file: !1106, line: 1427, type: !7531, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7533)
!7531 = !DISubroutineType(types: !7532)
!7532 = !{null, !1276}
!7533 = !{!7534, !7535}
!7534 = !DILocalVariable(name: "D", arg: 1, scope: !7530, file: !1106, line: 1427, type: !1276)
!7535 = !DILocalVariable(name: "Result", scope: !7530, file: !1106, line: 1429, type: !1944)
!7536 = !DILocation(line: 0, scope: !7530)
!7537 = !DILocation(line: 1430, column: 5, scope: !7530)
!7538 = !DILocation(line: 1431, column: 18, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7530, file: !1106, line: 1430, column: 8)
!7540 = !DILocation(line: 1432, column: 21, scope: !7530)
!7541 = !DILocation(line: 1432, column: 5, scope: !7539)
!7542 = distinct !{!7542, !7537, !7543}
!7543 = !DILocation(line: 1432, column: 43, scope: !7530)
!7544 = !DILocation(line: 1433, column: 1, scope: !7530)
!7545 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !1106, file: !1106, line: 3478, type: !7531, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7546)
!7546 = !{!7547}
!7547 = !DILocalVariable(name: "D", arg: 1, scope: !7545, file: !1106, line: 3478, type: !1276)
!7548 = !DILocation(line: 0, scope: !7545)
!7549 = !DILocation(line: 3480, column: 30, scope: !7545)
!7550 = !DILocation(line: 3480, column: 35, scope: !7545)
!7551 = !DILocation(line: 3480, column: 27, scope: !7545)
!7552 = !DILocation(line: 3480, column: 5, scope: !7545)
!7553 = !DILocation(line: 3481, column: 1, scope: !7545)
!7554 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !1106, file: !1106, line: 2382, type: !291, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7555)
!7555 = !{!7556}
!7556 = !DILocalVariable(name: "savedMask", scope: !7554, file: !1106, line: 2384, type: !61)
!7557 = !DILocation(line: 2385, column: 17, scope: !7554)
!7558 = !DILocation(line: 0, scope: !7554)
!7559 = !DILocation(line: 2390, column: 20, scope: !7554)
!7560 = !DILocation(line: 2391, column: 5, scope: !7554)
!7561 = !DILocation(line: 2392, column: 1, scope: !7554)
!7562 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !1106, file: !1106, line: 3536, type: !7563, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7565)
!7563 = !DISubroutineType(types: !7564)
!7564 = !{!61, !1276, !460}
!7565 = !{!7566, !7567, !7568, !7569}
!7566 = !DILocalVariable(name: "D", arg: 1, scope: !7562, file: !1106, line: 3536, type: !1276)
!7567 = !DILocalVariable(name: "cmd", arg: 2, scope: !7562, file: !1106, line: 3536, type: !460)
!7568 = !DILocalVariable(name: "savedMask", scope: !7562, file: !1106, line: 3538, type: !61)
!7569 = !DILocalVariable(name: "result", scope: !7562, file: !1106, line: 3539, type: !61)
!7570 = !DILocation(line: 0, scope: !7562)
!7571 = !DILocation(line: 3541, column: 17, scope: !7562)
!7572 = !DILocation(line: 3542, column: 22, scope: !7562)
!7573 = !DILocation(line: 3542, column: 5, scope: !7562)
!7574 = !DILocation(line: 3543, column: 35, scope: !7562)
!7575 = !DILocation(line: 3543, column: 33, scope: !7562)
!7576 = !DILocation(line: 3544, column: 25, scope: !7562)
!7577 = !DILocation(line: 3545, column: 24, scope: !7562)
!7578 = !DILocation(line: 3546, column: 25, scope: !7562)
!7579 = !DILocation(line: 3546, column: 5, scope: !7562)
!7580 = !DILocation(line: 3547, column: 42, scope: !7562)
!7581 = !DILocation(line: 3547, column: 60, scope: !7562)
!7582 = !DILocation(line: 3547, column: 14, scope: !7562)
!7583 = !DILocation(line: 3548, column: 5, scope: !7562)
!7584 = !DILocation(line: 3550, column: 5, scope: !7562)
!7585 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !1106, file: !1106, line: 2393, type: !291, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7586)
!7586 = !{!7587}
!7587 = !DILocalVariable(name: "savedMask", scope: !7585, file: !1106, line: 2395, type: !61)
!7588 = !DILocation(line: 2396, column: 17, scope: !7585)
!7589 = !DILocation(line: 0, scope: !7585)
!7590 = !DILocation(line: 2401, column: 20, scope: !7585)
!7591 = !DILocation(line: 2402, column: 5, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7593, file: !1106, line: 2402, column: 5)
!7593 = distinct !DILexicalBlock(scope: !7585, file: !1106, line: 2402, column: 5)
!7594 = !DILocation(line: 2403, column: 5, scope: !7585)
!7595 = !DILocation(line: 2404, column: 1, scope: !7585)
!7596 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !1106, file: !1106, line: 1440, type: !7531, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7597)
!7597 = !{!7598, !7599}
!7598 = !DILocalVariable(name: "D", arg: 1, scope: !7596, file: !1106, line: 1440, type: !1276)
!7599 = !DILocalVariable(name: "savedMask", scope: !7596, file: !1106, line: 1442, type: !985)
!7600 = !DILocation(line: 0, scope: !7596)
!7601 = !DILocation(line: 1443, column: 17, scope: !7596)
!7602 = !DILocation(line: 1444, column: 9, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7596, file: !1106, line: 1444, column: 9)
!7604 = !DILocation(line: 1444, column: 9, scope: !7596)
!7605 = !DILocation(line: 1445, column: 17, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7603, file: !1106, line: 1444, column: 24)
!7607 = !DILocation(line: 1446, column: 9, scope: !7606)
!7608 = !DILocation(line: 1451, column: 1, scope: !7596)
!7609 = !DILocation(line: 1448, column: 9, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7603, file: !1106, line: 1447, column: 12)
!7611 = !DILocation(line: 1449, column: 9, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !1106, line: 1449, column: 9)
!7613 = distinct !DILexicalBlock(scope: !7614, file: !1106, line: 1449, column: 9)
!7614 = distinct !DILexicalBlock(scope: !7610, file: !1106, line: 1449, column: 9)
!7615 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !1106, file: !1106, line: 1027, type: !291, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7616)
!7616 = !{!7617, !7618, !7619, !7620}
!7617 = !DILocalVariable(name: "D", scope: !7615, file: !1106, line: 1029, type: !1276)
!7618 = !DILocalVariable(name: "status", scope: !7615, file: !1106, line: 1030, type: !1328)
!7619 = !DILocalVariable(name: "savedMask", scope: !7615, file: !1106, line: 1031, type: !61)
!7620 = !DILocalVariable(name: "duration", scope: !7621, file: !1106, line: 1231, type: !61)
!7621 = distinct !DILexicalBlock(scope: !7615, file: !1106, line: 1230, column: 5)
!7622 = !DILocation(line: 0, scope: !7615)
!7623 = !DILocation(line: 1033, column: 17, scope: !7615)
!7624 = !DILocation(line: 1034, column: 8, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7615, file: !1106, line: 1034, column: 8)
!7626 = !DILocation(line: 1034, column: 30, scope: !7625)
!7627 = !DILocation(line: 1034, column: 8, scope: !7615)
!7628 = !DILocation(line: 1039, column: 27, scope: !7615)
!7629 = !DILocation(line: 1058, column: 48, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7615, file: !1106, line: 1055, column: 5)
!7631 = !DILocation(line: 1069, column: 5, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7633, file: !1106, line: 1069, column: 5)
!7633 = distinct !DILexicalBlock(scope: !7615, file: !1106, line: 1069, column: 5)
!7634 = !DILocation(line: 1069, column: 5, scope: !7633)
!7635 = !DILocation(line: 1069, column: 5, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7632, file: !1106, line: 1069, column: 5)
!7637 = !DILocation(line: 1075, column: 10, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7615, file: !1106, line: 1075, column: 9)
!7639 = !DILocation(line: 1075, column: 27, scope: !7638)
!7640 = !DILocation(line: 1075, column: 33, scope: !7638)
!7641 = !DILocation(line: 1075, column: 40, scope: !7638)
!7642 = !DILocation(line: 1075, column: 53, scope: !7638)
!7643 = !DILocation(line: 1075, column: 9, scope: !7615)
!7644 = !DILocation(line: 1084, column: 9, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7638, file: !1106, line: 1083, column: 11)
!7646 = !DILocation(line: 1085, column: 50, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7645, file: !1106, line: 1084, column: 21)
!7648 = !DILocation(line: 1085, column: 55, scope: !7647)
!7649 = !DILocation(line: 1085, column: 22, scope: !7647)
!7650 = !DILocation(line: 1086, column: 35, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7647, file: !1106, line: 1086, column: 17)
!7652 = !DILocation(line: 1086, column: 32, scope: !7651)
!7653 = !DILocation(line: 1086, column: 30, scope: !7651)
!7654 = !DILocation(line: 1086, column: 19, scope: !7651)
!7655 = !DILocation(line: 1086, column: 17, scope: !7647)
!7656 = distinct !{!7656, !7644, !7657}
!7657 = !DILocation(line: 1089, column: 9, scope: !7645)
!7658 = !DILocation(line: 1107, column: 11, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7615, file: !1106, line: 1107, column: 9)
!7660 = !DILocation(line: 1107, column: 30, scope: !7659)
!7661 = !DILocation(line: 1117, column: 46, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7659, file: !1106, line: 1107, column: 53)
!7663 = !DILocation(line: 1117, column: 51, scope: !7662)
!7664 = !DILocation(line: 1117, column: 18, scope: !7662)
!7665 = !DILocation(line: 1120, column: 31, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7662, file: !1106, line: 1120, column: 13)
!7667 = !DILocation(line: 1120, column: 28, scope: !7666)
!7668 = !DILocation(line: 1120, column: 26, scope: !7666)
!7669 = !DILocation(line: 1120, column: 15, scope: !7666)
!7670 = !DILocation(line: 1120, column: 13, scope: !7662)
!7671 = !DILocation(line: 1128, column: 13, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7666, file: !1106, line: 1120, column: 55)
!7673 = !DILocation(line: 1131, column: 13, scope: !7672)
!7674 = !DILocation(line: 1132, column: 54, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7672, file: !1106, line: 1131, column: 23)
!7676 = !DILocation(line: 1132, column: 59, scope: !7675)
!7677 = !DILocation(line: 1132, column: 26, scope: !7675)
!7678 = !DILocation(line: 1133, column: 39, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7675, file: !1106, line: 1133, column: 21)
!7680 = !DILocation(line: 1133, column: 36, scope: !7679)
!7681 = !DILocation(line: 1133, column: 34, scope: !7679)
!7682 = !DILocation(line: 1133, column: 23, scope: !7679)
!7683 = !DILocation(line: 1133, column: 21, scope: !7675)
!7684 = distinct !{!7684, !7673, !7685}
!7685 = !DILocation(line: 1158, column: 13, scope: !7672)
!7686 = !DILocation(line: 1162, column: 21, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7672, file: !1106, line: 1162, column: 17)
!7688 = !DILocation(line: 1162, column: 32, scope: !7687)
!7689 = !DILocation(line: 1162, column: 51, scope: !7687)
!7690 = !DILocation(line: 1162, column: 58, scope: !7687)
!7691 = !DILocation(line: 1162, column: 71, scope: !7687)
!7692 = !DILocation(line: 1162, column: 17, scope: !7672)
!7693 = !DILocation(line: 1164, column: 45, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7687, file: !1106, line: 1162, column: 91)
!7695 = !DILocation(line: 1165, column: 36, scope: !7694)
!7696 = !DILocation(line: 1166, column: 37, scope: !7694)
!7697 = !DILocation(line: 1167, column: 34, scope: !7694)
!7698 = !DILocation(line: 1167, column: 17, scope: !7694)
!7699 = !DILocation(line: 1168, column: 37, scope: !7694)
!7700 = !DILocation(line: 1168, column: 17, scope: !7694)
!7701 = !DILocation(line: 1171, column: 50, scope: !7694)
!7702 = !DILocation(line: 1172, column: 37, scope: !7694)
!7703 = !DILocation(line: 1173, column: 45, scope: !7694)
!7704 = !DILocation(line: 1174, column: 34, scope: !7694)
!7705 = !DILocation(line: 1174, column: 17, scope: !7694)
!7706 = !DILocation(line: 1175, column: 37, scope: !7694)
!7707 = !DILocation(line: 1175, column: 17, scope: !7694)
!7708 = !DILocation(line: 1178, column: 17, scope: !7694)
!7709 = !DILocation(line: 1179, column: 49, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7694, file: !1106, line: 1178, column: 20)
!7711 = !DILocation(line: 1180, column: 40, scope: !7710)
!7712 = !DILocation(line: 1181, column: 41, scope: !7710)
!7713 = !DILocation(line: 1182, column: 38, scope: !7710)
!7714 = !DILocation(line: 1182, column: 21, scope: !7710)
!7715 = !DILocation(line: 1183, column: 41, scope: !7710)
!7716 = !DILocation(line: 1183, column: 21, scope: !7710)
!7717 = !DILocation(line: 1184, column: 43, scope: !7710)
!7718 = !DILocation(line: 1185, column: 17, scope: !7710)
!7719 = distinct !{!7719, !7708, !7720}
!7720 = !DILocation(line: 1185, column: 32, scope: !7694)
!7721 = !DILocation(line: 1194, column: 13, scope: !7672)
!7722 = !DILocation(line: 1195, column: 9, scope: !7672)
!7723 = !DILocation(line: 1197, column: 21, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7725, file: !1106, line: 1197, column: 17)
!7725 = distinct !DILexicalBlock(scope: !7666, file: !1106, line: 1195, column: 16)
!7726 = !DILocation(line: 1197, column: 32, scope: !7724)
!7727 = !DILocation(line: 1197, column: 53, scope: !7724)
!7728 = !DILocation(line: 1197, column: 60, scope: !7724)
!7729 = !DILocation(line: 1197, column: 76, scope: !7724)
!7730 = !DILocation(line: 1197, column: 17, scope: !7725)
!7731 = !DILocation(line: 1198, column: 54, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7724, file: !1106, line: 1197, column: 98)
!7733 = !DILocation(line: 1198, column: 59, scope: !7732)
!7734 = !DILocation(line: 1198, column: 26, scope: !7732)
!7735 = !DILocation(line: 1199, column: 40, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7732, file: !1106, line: 1199, column: 21)
!7737 = !DILocation(line: 1199, column: 37, scope: !7736)
!7738 = !DILocation(line: 1199, column: 35, scope: !7736)
!7739 = !DILocation(line: 1199, column: 24, scope: !7736)
!7740 = !DILocation(line: 1199, column: 63, scope: !7736)
!7741 = !DILocation(line: 1200, column: 41, scope: !7736)
!7742 = !DILocation(line: 1200, column: 39, scope: !7736)
!7743 = !DILocation(line: 1200, column: 28, scope: !7736)
!7744 = !DILocation(line: 1199, column: 21, scope: !7732)
!7745 = !DILocation(line: 1201, column: 40, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7736, file: !1106, line: 1200, column: 68)
!7747 = !DILocation(line: 1201, column: 21, scope: !7746)
!7748 = !DILocation(line: 1202, column: 40, scope: !7746)
!7749 = !DILocation(line: 1202, column: 21, scope: !7746)
!7750 = !DILocation(line: 1203, column: 17, scope: !7746)
!7751 = !DILocation(line: 1206, column: 13, scope: !7725)
!7752 = !DILocation(line: 1228, column: 25, scope: !7615)
!7753 = !DILocation(line: 1231, column: 29, scope: !7621)
!7754 = !DILocation(line: 0, scope: !7621)
!7755 = !DILocation(line: 1232, column: 13, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7621, file: !1106, line: 1232, column: 13)
!7757 = !DILocation(line: 1232, column: 43, scope: !7756)
!7758 = !DILocation(line: 1232, column: 13, scope: !7621)
!7759 = !DILocation(line: 1233, column: 43, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7756, file: !1106, line: 1232, column: 55)
!7761 = !DILocation(line: 1234, column: 9, scope: !7760)
!7762 = !DILocation(line: 1237, column: 5, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7764, file: !1106, line: 1237, column: 5)
!7764 = distinct !DILexicalBlock(scope: !7615, file: !1106, line: 1237, column: 5)
!7765 = !DILocation(line: 1240, column: 5, scope: !7615)
!7766 = !DILocation(line: 1241, column: 1, scope: !7615)
!7767 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !1106, file: !1106, line: 3421, type: !7531, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7768)
!7768 = !{!7769, !7770, !7771, !7772}
!7769 = !DILocalVariable(name: "D", arg: 1, scope: !7767, file: !1106, line: 3421, type: !1276)
!7770 = !DILocalVariable(name: "savedMask", scope: !7767, file: !1106, line: 3423, type: !61)
!7771 = !DILocalVariable(name: "currtime", scope: !7767, file: !1106, line: 3424, type: !61)
!7772 = !DILocalVariable(name: "difftime", scope: !7767, file: !1106, line: 3424, type: !61)
!7773 = !DILocation(line: 0, scope: !7767)
!7774 = !DILocation(line: 3427, column: 9, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7767, file: !1106, line: 3427, column: 9)
!7776 = !DILocation(line: 3427, column: 28, scope: !7775)
!7777 = !DILocation(line: 3427, column: 9, scope: !7767)
!7778 = !DILocation(line: 3429, column: 20, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7775, file: !1106, line: 3427, column: 59)
!7780 = !DILocation(line: 3430, column: 27, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7779, file: !1106, line: 3430, column: 13)
!7782 = !DILocation(line: 3430, column: 24, scope: !7781)
!7783 = !DILocation(line: 3430, column: 22, scope: !7781)
!7784 = !DILocation(line: 3430, column: 13, scope: !7779)
!7785 = !DILocation(line: 3431, column: 47, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7781, file: !1106, line: 3430, column: 46)
!7787 = !DILocation(line: 3431, column: 13, scope: !7786)
!7788 = !DILocation(line: 3432, column: 9, scope: !7786)
!7789 = !DILocation(line: 3435, column: 17, scope: !7767)
!7790 = !DILocation(line: 3436, column: 24, scope: !7767)
!7791 = !DILocation(line: 3436, column: 31, scope: !7767)
!7792 = !DILocation(line: 3436, column: 36, scope: !7767)
!7793 = !DILocation(line: 3436, column: 28, scope: !7767)
!7794 = !DILocation(line: 3436, column: 5, scope: !7767)
!7795 = !DILocation(line: 3442, column: 5, scope: !7767)
!7796 = !DILocation(line: 3443, column: 1, scope: !7767)
!7797 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !1106, file: !1106, line: 2405, type: !291, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7798)
!7798 = !{!7799}
!7799 = !DILocalVariable(name: "savedMask", scope: !7797, file: !1106, line: 2407, type: !61)
!7800 = !DILocation(line: 2408, column: 17, scope: !7797)
!7801 = !DILocation(line: 0, scope: !7797)
!7802 = !DILocation(line: 2413, column: 25, scope: !7797)
!7803 = !DILocation(line: 2414, column: 5, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7805, file: !1106, line: 2414, column: 5)
!7805 = distinct !DILexicalBlock(scope: !7797, file: !1106, line: 2414, column: 5)
!7806 = !DILocation(line: 2415, column: 5, scope: !7797)
!7807 = !DILocation(line: 2416, column: 1, scope: !7797)
!7808 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !1106, file: !1106, line: 3561, type: !7809, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7811)
!7809 = !DISubroutineType(types: !7810)
!7810 = !{null, !1276, !772, !460}
!7811 = !{!7812, !7813, !7814, !7815}
!7812 = !DILocalVariable(name: "D", arg: 1, scope: !7808, file: !1106, line: 3561, type: !1276)
!7813 = !DILocalVariable(name: "cmd", arg: 2, scope: !7808, file: !1106, line: 3561, type: !772)
!7814 = !DILocalVariable(name: "outlen", arg: 3, scope: !7808, file: !1106, line: 3561, type: !460)
!7815 = !DILocalVariable(name: "savedMask", scope: !7808, file: !1106, line: 3563, type: !61)
!7816 = !DILocation(line: 0, scope: !7808)
!7817 = !DILocation(line: 3565, column: 17, scope: !7808)
!7818 = !DILocation(line: 3566, column: 22, scope: !7808)
!7819 = !DILocation(line: 3566, column: 5, scope: !7808)
!7820 = !DILocation(line: 3567, column: 33, scope: !7808)
!7821 = !DILocation(line: 3568, column: 27, scope: !7808)
!7822 = !DILocation(line: 3568, column: 25, scope: !7808)
!7823 = !DILocation(line: 3569, column: 24, scope: !7808)
!7824 = !DILocation(line: 3570, column: 25, scope: !7808)
!7825 = !DILocation(line: 3570, column: 5, scope: !7808)
!7826 = !DILocation(line: 3571, column: 5, scope: !7808)
!7827 = !DILocation(line: 3573, column: 1, scope: !7808)
!7828 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !1106, file: !1106, line: 1410, type: !7829, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7831)
!7829 = !DISubroutineType(types: !7830)
!7830 = !{!1944}
!7831 = !{!7832}
!7832 = !DILocalVariable(name: "savedMask", scope: !7828, file: !1106, line: 1412, type: !985)
!7833 = !DILocation(line: 1413, column: 17, scope: !7828)
!7834 = !DILocation(line: 0, scope: !7828)
!7835 = !DILocation(line: 1414, column: 9, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7828, file: !1106, line: 1414, column: 9)
!7837 = !DILocation(line: 1414, column: 9, scope: !7828)
!7838 = !DILocation(line: 1415, column: 17, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7836, file: !1106, line: 1414, column: 24)
!7840 = !DILocation(line: 1417, column: 9, scope: !7839)
!7841 = !DILocation(line: 0, scope: !7836)
!7842 = !DILocation(line: 1425, column: 1, scope: !7828)
!7843 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !1106, file: !1106, line: 1257, type: !6145, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7844)
!7844 = !{!7845, !7846, !7847}
!7845 = !DILocalVariable(name: "D", scope: !7843, file: !1106, line: 1259, type: !1276)
!7846 = !DILocalVariable(name: "status", scope: !7843, file: !1106, line: 1260, type: !1328)
!7847 = !DILocalVariable(name: "result", scope: !7843, file: !1106, line: 1261, type: !91)
!7848 = !DILocation(line: 1259, column: 57, scope: !7843)
!7849 = !DILocation(line: 0, scope: !7843)
!7850 = !DILocation(line: 1263, column: 5, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7852, file: !1106, line: 1263, column: 5)
!7852 = distinct !DILexicalBlock(scope: !7843, file: !1106, line: 1263, column: 5)
!7853 = !DILocation(line: 1263, column: 5, scope: !7852)
!7854 = !DILocation(line: 1263, column: 5, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7851, file: !1106, line: 1263, column: 5)
!7856 = !DILocation(line: 1265, column: 5, scope: !7843)
!7857 = !DILocation(line: 1267, column: 42, scope: !7843)
!7858 = !DILocation(line: 1267, column: 47, scope: !7843)
!7859 = !DILocation(line: 1267, column: 14, scope: !7843)
!7860 = !DILocation(line: 1269, column: 27, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7843, file: !1106, line: 1269, column: 9)
!7862 = !DILocation(line: 1269, column: 24, scope: !7861)
!7863 = !DILocation(line: 1269, column: 22, scope: !7861)
!7864 = !DILocation(line: 1269, column: 11, scope: !7861)
!7865 = !DILocation(line: 1269, column: 9, scope: !7843)
!7866 = !DILocation(line: 1270, column: 9, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7861, file: !1106, line: 1269, column: 51)
!7868 = !DILocation(line: 1272, column: 5, scope: !7867)
!7869 = !DILocation(line: 1274, column: 5, scope: !7843)
!7870 = !DILocation(line: 1276, column: 5, scope: !7843)
!7871 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !1106, file: !1106, line: 1289, type: !291, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7872)
!7872 = !{!7873}
!7873 = !DILocalVariable(name: "D", scope: !7871, file: !1106, line: 1291, type: !1276)
!7874 = !DILocation(line: 0, scope: !7871)
!7875 = !DILocation(line: 1293, column: 5, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7877, file: !1106, line: 1293, column: 5)
!7877 = distinct !DILexicalBlock(scope: !7871, file: !1106, line: 1293, column: 5)
!7878 = !DILocation(line: 1293, column: 5, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7876, file: !1106, line: 1293, column: 5)
!7880 = !DILocation(line: 1293, column: 5, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7882, file: !1106, line: 1293, column: 5)
!7882 = distinct !DILexicalBlock(scope: !7883, file: !1106, line: 1293, column: 5)
!7883 = distinct !DILexicalBlock(scope: !7879, file: !1106, line: 1293, column: 5)
!7884 = !DILocation(line: 1291, column: 60, scope: !7871)
!7885 = !DILocation(line: 1295, column: 5, scope: !7871)
!7886 = !DILocation(line: 1296, column: 1, scope: !7871)
!7887 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !1106, file: !1106, line: 3452, type: !7531, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7888)
!7888 = !{!7889, !7890}
!7889 = !DILocalVariable(name: "D", arg: 1, scope: !7887, file: !1106, line: 3452, type: !1276)
!7890 = !DILocalVariable(name: "savedMask", scope: !7887, file: !1106, line: 3454, type: !61)
!7891 = !DILocation(line: 0, scope: !7887)
!7892 = !DILocation(line: 3456, column: 17, scope: !7887)
!7893 = !DILocation(line: 3462, column: 24, scope: !7887)
!7894 = !DILocation(line: 3462, column: 31, scope: !7887)
!7895 = !DILocation(line: 3462, column: 36, scope: !7887)
!7896 = !DILocation(line: 3462, column: 28, scope: !7887)
!7897 = !DILocation(line: 3462, column: 5, scope: !7887)
!7898 = !DILocation(line: 3463, column: 12, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7887, file: !1106, line: 3463, column: 9)
!7900 = !DILocation(line: 3463, column: 27, scope: !7899)
!7901 = !DILocation(line: 3463, column: 9, scope: !7887)
!7902 = !DILocation(line: 3464, column: 28, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7899, file: !1106, line: 3463, column: 33)
!7904 = !DILocation(line: 3465, column: 5, scope: !7903)
!7905 = !DILocation(line: 3467, column: 5, scope: !7887)
!7906 = !DILocation(line: 3468, column: 5, scope: !7887)
!7907 = !DILocation(line: 3469, column: 1, scope: !7887)
!7908 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !1106, file: !1106, line: 2417, type: !291, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7909)
!7909 = !{!7910}
!7910 = !DILocalVariable(name: "savedMask", scope: !7908, file: !1106, line: 2419, type: !61)
!7911 = !DILocation(line: 2420, column: 17, scope: !7908)
!7912 = !DILocation(line: 0, scope: !7908)
!7913 = !DILocation(line: 2425, column: 25, scope: !7908)
!7914 = !DILocation(line: 2426, column: 5, scope: !7908)
!7915 = !DILocation(line: 2427, column: 1, scope: !7908)
!7916 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !1106, file: !1106, line: 1308, type: !291, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7917)
!7917 = !{!7918, !7919}
!7918 = !DILocalVariable(name: "D", scope: !7916, file: !1106, line: 1310, type: !1276)
!7919 = !DILocalVariable(name: "status", scope: !7916, file: !1106, line: 1311, type: !1328)
!7920 = !DILocation(line: 1310, column: 60, scope: !7916)
!7921 = !DILocation(line: 0, scope: !7916)
!7922 = !DILocation(line: 1313, column: 5, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7924, file: !1106, line: 1313, column: 5)
!7924 = distinct !DILexicalBlock(scope: !7916, file: !1106, line: 1313, column: 5)
!7925 = !DILocation(line: 1313, column: 5, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7923, file: !1106, line: 1313, column: 5)
!7927 = !DILocation(line: 1313, column: 5, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7929, file: !1106, line: 1313, column: 5)
!7929 = distinct !DILexicalBlock(scope: !7930, file: !1106, line: 1313, column: 5)
!7930 = distinct !DILexicalBlock(scope: !7926, file: !1106, line: 1313, column: 5)
!7931 = !DILocation(line: 1315, column: 5, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7933, file: !1106, line: 1315, column: 5)
!7933 = distinct !DILexicalBlock(scope: !7916, file: !1106, line: 1315, column: 5)
!7934 = !DILocation(line: 1315, column: 5, scope: !7933)
!7935 = !DILocation(line: 1315, column: 5, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7932, file: !1106, line: 1315, column: 5)
!7937 = !DILocation(line: 1317, column: 5, scope: !7916)
!7938 = !DILocation(line: 1319, column: 5, scope: !7916)
!7939 = !DILocation(line: 1320, column: 46, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7916, file: !1106, line: 1319, column: 15)
!7941 = !DILocation(line: 1320, column: 51, scope: !7940)
!7942 = !DILocation(line: 1320, column: 18, scope: !7940)
!7943 = !DILocation(line: 1322, column: 31, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7940, file: !1106, line: 1322, column: 13)
!7945 = !DILocation(line: 1322, column: 28, scope: !7944)
!7946 = !DILocation(line: 1322, column: 26, scope: !7944)
!7947 = !DILocation(line: 1322, column: 15, scope: !7944)
!7948 = !DILocation(line: 1322, column: 13, scope: !7940)
!7949 = distinct !{!7949, !7938, !7950}
!7950 = !DILocation(line: 1325, column: 5, scope: !7916)
!7951 = !DILocation(line: 1327, column: 5, scope: !7916)
!7952 = !DILocation(line: 1328, column: 1, scope: !7916)
!7953 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !1106, file: !1106, line: 1394, type: !7531, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7954)
!7954 = !{!7955}
!7955 = !DILocalVariable(name: "D", arg: 1, scope: !7953, file: !1106, line: 1394, type: !1276)
!7956 = !DILocation(line: 0, scope: !7953)
!7957 = !DILocation(line: 1401, column: 1, scope: !7953)
!7958 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !1106, file: !1106, line: 1556, type: !7959, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7980)
!7959 = !DISubroutineType(types: !7960)
!7960 = !{!985, !7961, !1276}
!7961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7962, size: 32)
!7962 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1302, line: 121, baseType: !7963)
!7963 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 105, size: 480, elements: !7964)
!7964 = !{!7965, !7966, !7967, !7968, !7969, !7970, !7971, !7972, !7973, !7974, !7975, !7976, !7977, !7978, !7979}
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !7963, file: !1302, line: 106, baseType: !1576, size: 32)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !7963, file: !1302, line: 107, baseType: !1377, size: 32, offset: 32)
!7967 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !7963, file: !1302, line: 108, baseType: !1581, size: 32, offset: 64)
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !7963, file: !1302, line: 109, baseType: !1585, size: 32, offset: 96)
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !7963, file: !1302, line: 110, baseType: !1589, size: 32, offset: 128)
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !7963, file: !1302, line: 111, baseType: !1585, size: 32, offset: 160)
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !7963, file: !1302, line: 112, baseType: !1594, size: 32, offset: 192)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !7963, file: !1302, line: 113, baseType: !1585, size: 32, offset: 224)
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !7963, file: !1302, line: 114, baseType: !1585, size: 32, offset: 256)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !7963, file: !1302, line: 115, baseType: !1585, size: 32, offset: 288)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !7963, file: !1302, line: 116, baseType: !1601, size: 32, offset: 320)
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !7963, file: !1302, line: 117, baseType: !1606, size: 32, offset: 352)
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !7963, file: !1302, line: 118, baseType: !1611, size: 32, offset: 384)
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !7963, file: !1302, line: 119, baseType: !1615, size: 32, offset: 416)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !7963, file: !1302, line: 120, baseType: !1619, size: 32, offset: 448)
!7980 = !{!7981, !7982, !7983}
!7981 = !DILocalVariable(name: "driver", arg: 1, scope: !7958, file: !1106, line: 1556, type: !7961)
!7982 = !DILocalVariable(name: "D", arg: 2, scope: !7958, file: !1106, line: 1556, type: !1276)
!7983 = !DILocalVariable(name: "smap", scope: !7958, file: !1106, line: 1558, type: !1327)
!7984 = !DILocation(line: 0, scope: !7958)
!7985 = !DILocation(line: 1561, column: 15, scope: !7958)
!7986 = !DILocation(line: 1562, column: 22, scope: !7958)
!7987 = !DILocation(line: 1563, column: 5, scope: !7958)
!7988 = !DILocation(line: 1563, column: 22, scope: !7958)
!7989 = !DILocation(line: 1565, column: 5, scope: !7958)
!7990 = !DILocation(line: 1565, column: 22, scope: !7958)
!7991 = !DILocation(line: 1566, column: 5, scope: !7958)
!7992 = !DILocation(line: 1566, column: 22, scope: !7958)
!7993 = !DILocation(line: 1568, column: 5, scope: !7958)
!7994 = !DILocation(line: 1568, column: 22, scope: !7958)
!7995 = !DILocation(line: 1569, column: 5, scope: !7958)
!7996 = !DILocation(line: 1569, column: 22, scope: !7958)
!7997 = !DILocation(line: 1570, column: 5, scope: !7958)
!7998 = !DILocation(line: 1570, column: 22, scope: !7958)
!7999 = !DILocation(line: 1573, column: 8, scope: !7958)
!8000 = !DILocation(line: 1573, column: 13, scope: !7958)
!8001 = !DILocation(line: 1573, column: 28, scope: !7958)
!8002 = !DILocation(line: 1574, column: 8, scope: !7958)
!8003 = !DILocation(line: 1574, column: 13, scope: !7958)
!8004 = !DILocation(line: 1574, column: 29, scope: !7958)
!8005 = !DILocation(line: 1575, column: 8, scope: !7958)
!8006 = !DILocation(line: 1575, column: 13, scope: !7958)
!8007 = !DILocation(line: 1575, column: 30, scope: !7958)
!8008 = !DILocation(line: 1576, column: 8, scope: !7958)
!8009 = !DILocation(line: 1576, column: 13, scope: !7958)
!8010 = !DILocation(line: 1576, column: 23, scope: !7958)
!8011 = !DILocation(line: 1577, column: 8, scope: !7958)
!8012 = !DILocation(line: 1577, column: 13, scope: !7958)
!8013 = !DILocation(line: 1577, column: 24, scope: !7958)
!8014 = !DILocation(line: 1578, column: 8, scope: !7958)
!8015 = !DILocation(line: 1578, column: 13, scope: !7958)
!8016 = !DILocation(line: 1578, column: 25, scope: !7958)
!8017 = !DILocation(line: 1579, column: 8, scope: !7958)
!8018 = !DILocation(line: 1579, column: 23, scope: !7958)
!8019 = !DILocation(line: 1583, column: 10, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !7958, file: !1106, line: 1583, column: 9)
!8021 = !DILocation(line: 1583, column: 24, scope: !8020)
!8022 = !DILocation(line: 1583, column: 32, scope: !8020)
!8023 = !DILocation(line: 1583, column: 35, scope: !8020)
!8024 = !DILocation(line: 1583, column: 49, scope: !8020)
!8025 = !DILocation(line: 1583, column: 9, scope: !7958)
!8026 = !DILocation(line: 1586, column: 12, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8020, file: !1106, line: 1583, column: 59)
!8028 = !DILocation(line: 1586, column: 17, scope: !8027)
!8029 = !DILocation(line: 1586, column: 25, scope: !8027)
!8030 = !DILocation(line: 1587, column: 12, scope: !8027)
!8031 = !DILocation(line: 1587, column: 17, scope: !8027)
!8032 = !DILocation(line: 1587, column: 24, scope: !8027)
!8033 = !DILocation(line: 1591, column: 10, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !7958, file: !1106, line: 1591, column: 9)
!8035 = !DILocation(line: 1589, column: 5, scope: !8027)
!8036 = !DILocation(line: 1600, column: 32, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !7958, file: !1106, line: 1600, column: 9)
!8038 = !DILocation(line: 1600, column: 35, scope: !8037)
!8039 = !DILocation(line: 1600, column: 49, scope: !8037)
!8040 = !DILocation(line: 1600, column: 9, scope: !7958)
!8041 = !DILocation(line: 1601, column: 12, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8037, file: !1106, line: 1600, column: 59)
!8043 = !DILocation(line: 1601, column: 17, scope: !8042)
!8044 = !DILocation(line: 1601, column: 25, scope: !8042)
!8045 = !DILocation(line: 1602, column: 12, scope: !8042)
!8046 = !DILocation(line: 1602, column: 17, scope: !8042)
!8047 = !DILocation(line: 1602, column: 24, scope: !8042)
!8048 = !DILocation(line: 1603, column: 5, scope: !8042)
!8049 = !DILocation(line: 1607, column: 8, scope: !7958)
!8050 = !DILocation(line: 1607, column: 20, scope: !7958)
!8051 = !DILocation(line: 1622, column: 5, scope: !7958)
!8052 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !1106, file: !1106, line: 4553, type: !1378, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8053)
!8053 = !{!8054, !8055, !8056, !8057}
!8054 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8052, file: !1106, line: 4553, type: !88)
!8055 = !DILocalVariable(name: "D", scope: !8052, file: !1106, line: 4555, type: !1276)
!8056 = !DILocalVariable(name: "unlock", scope: !8052, file: !1106, line: 4556, type: !61)
!8057 = !DILocalVariable(name: "cmd", scope: !8052, file: !1106, line: 4557, type: !460)
!8058 = !DILocation(line: 0, scope: !8052)
!8059 = !DILocation(line: 4555, column: 24, scope: !8052)
!8060 = !DILocation(line: 4557, column: 5, scope: !8052)
!8061 = !DILocation(line: 4558, column: 12, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8052, file: !1106, line: 4558, column: 9)
!8063 = !DILocation(line: 4558, column: 9, scope: !8062)
!8064 = !DILocation(line: 4558, column: 23, scope: !8062)
!8065 = !DILocation(line: 4558, column: 31, scope: !8062)
!8066 = !DILocation(line: 4558, column: 34, scope: !8062)
!8067 = !DILocation(line: 4558, column: 48, scope: !8062)
!8068 = !DILocation(line: 4558, column: 56, scope: !8062)
!8069 = !DILocation(line: 4558, column: 59, scope: !8062)
!8070 = !DILocation(line: 4558, column: 73, scope: !8062)
!8071 = !DILocation(line: 4558, column: 9, scope: !8052)
!8072 = !DILocation(line: 4563, column: 24, scope: !8052)
!8073 = !DILocation(line: 4563, column: 31, scope: !8052)
!8074 = !DILocation(line: 4563, column: 36, scope: !8052)
!8075 = !DILocation(line: 4563, column: 28, scope: !8052)
!8076 = !DILocation(line: 4563, column: 5, scope: !8052)
!8077 = !DILocation(line: 4564, column: 5, scope: !8052)
!8078 = !DILocation(line: 4567, column: 28, scope: !8052)
!8079 = !DILocation(line: 4567, column: 36, scope: !8052)
!8080 = !DILocation(line: 4567, column: 41, scope: !8052)
!8081 = !DILocation(line: 4567, column: 5, scope: !8052)
!8082 = !DILocation(line: 4568, column: 17, scope: !8052)
!8083 = !DILocation(line: 4568, column: 22, scope: !8052)
!8084 = !DILocation(line: 4568, column: 14, scope: !8052)
!8085 = !DILocation(line: 4569, column: 22, scope: !8052)
!8086 = !DILocation(line: 4569, column: 54, scope: !8052)
!8087 = !DILocation(line: 4569, column: 65, scope: !8052)
!8088 = !DILocation(line: 4569, column: 62, scope: !8052)
!8089 = !DILocation(line: 4569, column: 87, scope: !8052)
!8090 = !DILocation(line: 4569, column: 85, scope: !8052)
!8091 = !DILocation(line: 4569, column: 60, scope: !8052)
!8092 = !DILocation(line: 4569, column: 58, scope: !8052)
!8093 = !DILocation(line: 4569, column: 51, scope: !8052)
!8094 = !DILocation(line: 4572, column: 24, scope: !8052)
!8095 = !DILocation(line: 4572, column: 5, scope: !8052)
!8096 = !DILocation(line: 4573, column: 5, scope: !8052)
!8097 = !DILocation(line: 4575, column: 5, scope: !8052)
!8098 = !DILocation(line: 4576, column: 1, scope: !8052)
!8099 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !1106, file: !1106, line: 4488, type: !7531, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8100)
!8100 = !{!8101, !8102}
!8101 = !DILocalVariable(name: "D", arg: 1, scope: !8099, file: !1106, line: 4488, type: !1276)
!8102 = !DILocalVariable(name: "status", scope: !8099, file: !1106, line: 4490, type: !1328)
!8103 = !DILocation(line: 0, scope: !8099)
!8104 = !DILocation(line: 4490, column: 5, scope: !8099)
!8105 = !DILocation(line: 4491, column: 5, scope: !8099)
!8106 = !DILocation(line: 4492, column: 32, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8099, file: !1106, line: 4491, column: 10)
!8108 = !DILocation(line: 4492, column: 40, scope: !8107)
!8109 = !DILocation(line: 4492, column: 45, scope: !8107)
!8110 = !DILocation(line: 4492, column: 9, scope: !8107)
!8111 = !DILocation(line: 4493, column: 20, scope: !8099)
!8112 = !DILocation(line: 4493, column: 32, scope: !8099)
!8113 = !DILocation(line: 4493, column: 29, scope: !8099)
!8114 = !DILocation(line: 4493, column: 27, scope: !8099)
!8115 = !DILocation(line: 4493, column: 16, scope: !8099)
!8116 = !DILocation(line: 4493, column: 5, scope: !8107)
!8117 = distinct !{!8117, !8105, !8118}
!8118 = !DILocation(line: 4493, column: 54, scope: !8099)
!8119 = !DILocation(line: 4494, column: 1, scope: !8099)
!8120 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !1106, file: !1106, line: 1742, type: !7959, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8121)
!8121 = !{!8122, !8123, !8124}
!8122 = !DILocalVariable(name: "driver", arg: 1, scope: !8120, file: !1106, line: 1742, type: !7961)
!8123 = !DILocalVariable(name: "D", arg: 2, scope: !8120, file: !1106, line: 1742, type: !1276)
!8124 = !DILocalVariable(name: "smap", scope: !8120, file: !1106, line: 1744, type: !1327)
!8125 = !DILocation(line: 0, scope: !8120)
!8126 = !DILocation(line: 1747, column: 15, scope: !8120)
!8127 = !DILocation(line: 1748, column: 22, scope: !8120)
!8128 = !DILocation(line: 1749, column: 5, scope: !8120)
!8129 = !DILocation(line: 1749, column: 22, scope: !8120)
!8130 = !DILocation(line: 1750, column: 5, scope: !8120)
!8131 = !DILocation(line: 1750, column: 22, scope: !8120)
!8132 = !DILocation(line: 1751, column: 5, scope: !8120)
!8133 = !DILocation(line: 1751, column: 22, scope: !8120)
!8134 = !DILocation(line: 1752, column: 5, scope: !8120)
!8135 = !DILocation(line: 1752, column: 22, scope: !8120)
!8136 = !DILocation(line: 1753, column: 5, scope: !8120)
!8137 = !DILocation(line: 1753, column: 22, scope: !8120)
!8138 = !DILocation(line: 1756, column: 8, scope: !8120)
!8139 = !DILocation(line: 1756, column: 13, scope: !8120)
!8140 = !DILocation(line: 1756, column: 24, scope: !8120)
!8141 = !DILocation(line: 1758, column: 8, scope: !8120)
!8142 = !DILocation(line: 1758, column: 13, scope: !8120)
!8143 = !DILocation(line: 1758, column: 28, scope: !8120)
!8144 = !DILocation(line: 1759, column: 8, scope: !8120)
!8145 = !DILocation(line: 1759, column: 13, scope: !8120)
!8146 = !DILocation(line: 1759, column: 29, scope: !8120)
!8147 = !DILocation(line: 1760, column: 8, scope: !8120)
!8148 = !DILocation(line: 1760, column: 13, scope: !8120)
!8149 = !DILocation(line: 1760, column: 23, scope: !8120)
!8150 = !DILocation(line: 1761, column: 8, scope: !8120)
!8151 = !DILocation(line: 1761, column: 13, scope: !8120)
!8152 = !DILocation(line: 1761, column: 24, scope: !8120)
!8153 = !DILocation(line: 1762, column: 8, scope: !8120)
!8154 = !DILocation(line: 1762, column: 13, scope: !8120)
!8155 = !DILocation(line: 1762, column: 21, scope: !8120)
!8156 = !DILocation(line: 1763, column: 8, scope: !8120)
!8157 = !DILocation(line: 1763, column: 13, scope: !8120)
!8158 = !DILocation(line: 1763, column: 20, scope: !8120)
!8159 = !DILocation(line: 1764, column: 8, scope: !8120)
!8160 = !DILocation(line: 1764, column: 23, scope: !8120)
!8161 = !DILocation(line: 1768, column: 8, scope: !8120)
!8162 = !DILocation(line: 1768, column: 20, scope: !8120)
!8163 = !DILocation(line: 1770, column: 5, scope: !8120)
!8164 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !1106, file: !1106, line: 1775, type: !7959, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8165)
!8165 = !{!8166, !8167}
!8166 = !DILocalVariable(name: "driver", arg: 1, scope: !8164, file: !1106, line: 1775, type: !7961)
!8167 = !DILocalVariable(name: "D", arg: 2, scope: !8164, file: !1106, line: 1775, type: !1276)
!8168 = !DILocation(line: 0, scope: !8164)
!8169 = !DILocation(line: 1793, column: 5, scope: !8164)
!8170 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !1106, file: !1106, line: 1932, type: !7959, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8171)
!8171 = !{!8172, !8173}
!8172 = !DILocalVariable(name: "driver", arg: 1, scope: !8170, file: !1106, line: 1932, type: !7961)
!8173 = !DILocalVariable(name: "D", arg: 2, scope: !8170, file: !1106, line: 1932, type: !1276)
!8174 = !DILocation(line: 0, scope: !8170)
!8175 = !DILocation(line: 1935, column: 13, scope: !8170)
!8176 = !DILocation(line: 1935, column: 25, scope: !8170)
!8177 = !DILocation(line: 1936, column: 13, scope: !8170)
!8178 = !DILocation(line: 1936, column: 22, scope: !8170)
!8179 = !DILocation(line: 1937, column: 13, scope: !8170)
!8180 = !DILocation(line: 1937, column: 23, scope: !8170)
!8181 = !DILocation(line: 1939, column: 13, scope: !8170)
!8182 = !DILocation(line: 1939, column: 24, scope: !8170)
!8183 = !DILocation(line: 1940, column: 13, scope: !8170)
!8184 = !DILocation(line: 1940, column: 25, scope: !8170)
!8185 = !DILocation(line: 1945, column: 13, scope: !8170)
!8186 = !DILocation(line: 1945, column: 32, scope: !8170)
!8187 = !DILocation(line: 1946, column: 13, scope: !8170)
!8188 = !DILocation(line: 1946, column: 30, scope: !8170)
!8189 = !DILocation(line: 1947, column: 13, scope: !8170)
!8190 = !DILocation(line: 1947, column: 26, scope: !8170)
!8191 = !DILocation(line: 1948, column: 13, scope: !8170)
!8192 = !DILocation(line: 1948, column: 25, scope: !8170)
!8193 = !DILocation(line: 1949, column: 13, scope: !8170)
!8194 = !DILocation(line: 1949, column: 24, scope: !8170)
!8195 = !DILocation(line: 1956, column: 13, scope: !8170)
!8196 = !DILocation(line: 1956, column: 23, scope: !8170)
!8197 = !DILocation(line: 1957, column: 13, scope: !8170)
!8198 = !DILocation(line: 1957, column: 28, scope: !8170)
!8199 = !DILocation(line: 1960, column: 13, scope: !8170)
!8200 = !DILocation(line: 1960, column: 30, scope: !8170)
!8201 = !DILocation(line: 1961, column: 13, scope: !8170)
!8202 = !DILocation(line: 1961, column: 30, scope: !8170)
!8203 = !DILocation(line: 1962, column: 13, scope: !8170)
!8204 = !DILocation(line: 1962, column: 20, scope: !8170)
!8205 = !DILocation(line: 1968, column: 9, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8170, file: !1106, line: 1968, column: 9)
!8207 = !DILocation(line: 1968, column: 36, scope: !8206)
!8208 = !DILocation(line: 1968, column: 9, scope: !8170)
!8209 = !DILocation(line: 1971, column: 12, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8206, file: !1106, line: 1970, column: 5)
!8211 = !DILocation(line: 1971, column: 25, scope: !8210)
!8212 = !DILocation(line: 1979, column: 8, scope: !8170)
!8213 = !DILocation(line: 1979, column: 13, scope: !8170)
!8214 = !DILocation(line: 1979, column: 25, scope: !8170)
!8215 = !DILocation(line: 1980, column: 8, scope: !8170)
!8216 = !DILocation(line: 1980, column: 13, scope: !8170)
!8217 = !DILocation(line: 1980, column: 24, scope: !8170)
!8218 = !DILocation(line: 1981, column: 8, scope: !8170)
!8219 = !DILocation(line: 1981, column: 13, scope: !8170)
!8220 = !DILocation(line: 1981, column: 24, scope: !8170)
!8221 = !DILocation(line: 1982, column: 8, scope: !8170)
!8222 = !DILocation(line: 1982, column: 13, scope: !8170)
!8223 = !DILocation(line: 1982, column: 22, scope: !8170)
!8224 = !DILocation(line: 1983, column: 8, scope: !8170)
!8225 = !DILocation(line: 1983, column: 13, scope: !8170)
!8226 = !DILocation(line: 1983, column: 21, scope: !8170)
!8227 = !DILocation(line: 1984, column: 8, scope: !8170)
!8228 = !DILocation(line: 1984, column: 13, scope: !8170)
!8229 = !DILocation(line: 1984, column: 22, scope: !8170)
!8230 = !DILocation(line: 1985, column: 8, scope: !8170)
!8231 = !DILocation(line: 1985, column: 13, scope: !8170)
!8232 = !DILocation(line: 1985, column: 22, scope: !8170)
!8233 = !DILocation(line: 1986, column: 8, scope: !8170)
!8234 = !DILocation(line: 1986, column: 13, scope: !8170)
!8235 = !DILocation(line: 1986, column: 21, scope: !8170)
!8236 = !DILocation(line: 1987, column: 8, scope: !8170)
!8237 = !DILocation(line: 1987, column: 13, scope: !8170)
!8238 = !DILocation(line: 1987, column: 20, scope: !8170)
!8239 = !DILocation(line: 1988, column: 8, scope: !8170)
!8240 = !DILocation(line: 1988, column: 13, scope: !8170)
!8241 = !DILocation(line: 1988, column: 25, scope: !8170)
!8242 = !DILocation(line: 1989, column: 8, scope: !8170)
!8243 = !DILocation(line: 1989, column: 13, scope: !8170)
!8244 = !DILocation(line: 1989, column: 22, scope: !8170)
!8245 = !DILocation(line: 1990, column: 8, scope: !8170)
!8246 = !DILocation(line: 1990, column: 13, scope: !8170)
!8247 = !DILocation(line: 1990, column: 22, scope: !8170)
!8248 = !DILocation(line: 1993, column: 8, scope: !8170)
!8249 = !DILocation(line: 1993, column: 13, scope: !8170)
!8250 = !DILocation(line: 1993, column: 26, scope: !8170)
!8251 = !DILocation(line: 1996, column: 8, scope: !8170)
!8252 = !DILocation(line: 1996, column: 20, scope: !8170)
!8253 = !DILocation(line: 1999, column: 8, scope: !8170)
!8254 = !DILocation(line: 1999, column: 24, scope: !8170)
!8255 = !DILocation(line: 2000, column: 8, scope: !8170)
!8256 = !DILocation(line: 2000, column: 19, scope: !8170)
!8257 = !DILocation(line: 2001, column: 8, scope: !8170)
!8258 = !DILocation(line: 2001, column: 24, scope: !8170)
!8259 = !DILocation(line: 2002, column: 8, scope: !8170)
!8260 = !DILocation(line: 2002, column: 23, scope: !8170)
!8261 = !DILocation(line: 2004, column: 5, scope: !8170)
!8262 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !1106, file: !1106, line: 2160, type: !1577, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8263)
!8263 = !{!8264, !8265, !8266, !8279, !8280, !8281}
!8264 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8262, file: !1106, line: 2160, type: !88)
!8265 = !DILocalVariable(name: "Info", arg: 2, scope: !8262, file: !1106, line: 2160, type: !88)
!8266 = !DILocalVariable(name: "FlashInfo", scope: !8262, file: !1106, line: 2162, type: !8267)
!8267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8268, size: 32)
!8268 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1302, line: 99, baseType: !8269)
!8269 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 90, size: 928, elements: !8270)
!8270 = !{!8271, !8272, !8273, !8274, !8275, !8276, !8277, !8278}
!8271 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !8269, file: !1302, line: 91, baseType: !61, size: 32)
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !8269, file: !1302, line: 92, baseType: !1633, size: 256, offset: 32)
!8273 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !8269, file: !1302, line: 93, baseType: !1633, size: 256, offset: 288)
!8274 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !8269, file: !1302, line: 94, baseType: !1633, size: 256, offset: 544)
!8275 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !8269, file: !1302, line: 95, baseType: !61, size: 32, offset: 800)
!8276 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !8269, file: !1302, line: 96, baseType: !1625, size: 16, offset: 832)
!8277 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !8269, file: !1302, line: 97, baseType: !61, size: 32, offset: 864)
!8278 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !8269, file: !1302, line: 98, baseType: !61, size: 32, offset: 896)
!8279 = !DILocalVariable(name: "D", scope: !8262, file: !1106, line: 2163, type: !1276)
!8280 = !DILocalVariable(name: "i", scope: !8262, file: !1106, line: 2164, type: !61)
!8281 = !DILocalVariable(name: "result", scope: !8262, file: !1106, line: 2166, type: !985)
!8282 = !DILocation(line: 0, scope: !8262)
!8283 = !DILocation(line: 2163, column: 37, scope: !8262)
!8284 = !DILocation(line: 2202, column: 16, scope: !8262)
!8285 = !DILocation(line: 2202, column: 28, scope: !8262)
!8286 = !DILocation(line: 2204, column: 15, scope: !8262)
!8287 = !DILocation(line: 2204, column: 29, scope: !8262)
!8288 = !DILocation(line: 2204, column: 39, scope: !8262)
!8289 = !DILocation(line: 2204, column: 5, scope: !8262)
!8290 = !DILocation(line: 2205, column: 9, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8262, file: !1106, line: 2204, column: 45)
!8292 = !DILocation(line: 2205, column: 33, scope: !8291)
!8293 = !DILocation(line: 2206, column: 41, scope: !8291)
!8294 = !DILocation(line: 2206, column: 55, scope: !8291)
!8295 = !DILocation(line: 2206, column: 9, scope: !8291)
!8296 = !DILocation(line: 2206, column: 36, scope: !8291)
!8297 = !DILocation(line: 2207, column: 38, scope: !8291)
!8298 = !DILocation(line: 2207, column: 52, scope: !8291)
!8299 = !DILocation(line: 2207, column: 32, scope: !8291)
!8300 = !DILocation(line: 2209, column: 10, scope: !8291)
!8301 = distinct !{!8301, !8289, !8302}
!8302 = !DILocation(line: 2210, column: 5, scope: !8262)
!8303 = !DILocation(line: 2212, column: 16, scope: !8262)
!8304 = !DILocation(line: 2212, column: 32, scope: !8262)
!8305 = !DILocation(line: 2213, column: 16, scope: !8262)
!8306 = !DILocation(line: 2213, column: 25, scope: !8262)
!8307 = !DILocation(line: 2236, column: 5, scope: !8262)
!8308 = !DILocation(line: 2238, column: 5, scope: !8262)
!8309 = !DILocation(line: 2239, column: 18, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8262, file: !1106, line: 2238, column: 10)
!8311 = !DILocation(line: 2240, column: 34, scope: !8262)
!8312 = !DILocation(line: 2240, column: 5, scope: !8310)
!8313 = distinct !{!8313, !8308, !8314}
!8314 = !DILocation(line: 2240, column: 43, scope: !8262)
!8315 = !DILocation(line: 2259, column: 5, scope: !8262)
!8316 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !1106, file: !1106, line: 2275, type: !1378, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8317)
!8317 = !{!8318, !8319, !8320, !8321}
!8318 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8316, file: !1106, line: 2275, type: !88)
!8319 = !DILocalVariable(name: "D", scope: !8316, file: !1106, line: 2278, type: !1276)
!8320 = !DILocalVariable(name: "status", scope: !8316, file: !1106, line: 2279, type: !1328)
!8321 = !DILocalVariable(name: "saved_mask", scope: !8316, file: !1106, line: 2280, type: !61)
!8322 = !DILocation(line: 0, scope: !8316)
!8323 = !DILocation(line: 2278, column: 33, scope: !8316)
!8324 = !DILocation(line: 2286, column: 5, scope: !8316)
!8325 = !DILocation(line: 2293, column: 9, scope: !8316)
!8326 = !DILocation(line: 2294, column: 26, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8316, file: !1106, line: 2293, column: 19)
!8328 = !DILocation(line: 2297, column: 17, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8327, file: !1106, line: 2297, column: 17)
!8330 = !DILocation(line: 2297, column: 17, scope: !8327)
!8331 = !DILocation(line: 2298, column: 17, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8329, file: !1106, line: 2297, column: 36)
!8333 = !DILocation(line: 2299, column: 37, scope: !8332)
!8334 = !DILocation(line: 2300, column: 13, scope: !8332)
!8335 = !DILocation(line: 2303, column: 50, scope: !8327)
!8336 = !DILocation(line: 2303, column: 55, scope: !8327)
!8337 = !DILocation(line: 2303, column: 22, scope: !8327)
!8338 = !DILocation(line: 2306, column: 35, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8327, file: !1106, line: 2306, column: 17)
!8340 = !DILocation(line: 2306, column: 32, scope: !8339)
!8341 = !DILocation(line: 2306, column: 30, scope: !8339)
!8342 = !DILocation(line: 2306, column: 19, scope: !8339)
!8343 = !DILocation(line: 2306, column: 17, scope: !8327)
!8344 = !DILocation(line: 2307, column: 17, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8339, file: !1106, line: 2306, column: 59)
!8346 = !DILocation(line: 2308, column: 17, scope: !8345)
!8347 = !DILocation(line: 2315, column: 12, scope: !8316)
!8348 = !DILocation(line: 2315, column: 21, scope: !8316)
!8349 = !DILocation(line: 2325, column: 9, scope: !8316)
!8350 = !DILocation(line: 2326, column: 5, scope: !8316)
!8351 = !DILocation(line: 2311, column: 17, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8339, file: !1106, line: 2310, column: 20)
!8353 = distinct !{!8353, !8325, !8354}
!8354 = !DILocation(line: 2313, column: 9, scope: !8316)
!8355 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !1106, file: !1106, line: 2819, type: !1586, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8356)
!8356 = !{!8357, !8358, !8359, !8360, !8361, !8362, !8363, !8364, !8365, !8366, !8369, !8370}
!8357 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8355, file: !1106, line: 2819, type: !88)
!8358 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8355, file: !1106, line: 2819, type: !61)
!8359 = !DILocalVariable(name: "result", scope: !8355, file: !1106, line: 2821, type: !985)
!8360 = !DILocalVariable(name: "blocksize", scope: !8355, file: !1106, line: 2822, type: !61)
!8361 = !DILocalVariable(name: "eraseunit", scope: !8355, file: !1106, line: 2823, type: !61)
!8362 = !DILocalVariable(name: "eraseaddr", scope: !8355, file: !1106, line: 2824, type: !61)
!8363 = !DILocalVariable(name: "iteration", scope: !8355, file: !1106, line: 2825, type: !61)
!8364 = !DILocalVariable(name: "D", scope: !8355, file: !1106, line: 2826, type: !1276)
!8365 = !DILocalVariable(name: "erase_block", scope: !8355, file: !1106, line: 2827, type: !61)
!8366 = !DILocalVariable(name: "a", scope: !8367, file: !1106, line: 2853, type: !61)
!8367 = distinct !DILexicalBlock(scope: !8368, file: !1106, line: 2852, column: 56)
!8368 = distinct !DILexicalBlock(scope: !8355, file: !1106, line: 2852, column: 9)
!8369 = !DILocalVariable(name: "b", scope: !8367, file: !1106, line: 2853, type: !61)
!8370 = !DILocalVariable(name: "c", scope: !8367, file: !1106, line: 2853, type: !61)
!8371 = !DILocation(line: 0, scope: !8355)
!8372 = !DILocation(line: 2826, column: 30, scope: !8355)
!8373 = !DILocation(line: 2829, column: 5, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8375, file: !1106, line: 2829, column: 5)
!8375 = distinct !DILexicalBlock(scope: !8355, file: !1106, line: 2829, column: 5)
!8376 = !DILocation(line: 2829, column: 5, scope: !8375)
!8377 = !DILocation(line: 2829, column: 5, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8374, file: !1106, line: 2829, column: 5)
!8379 = !DILocation(line: 2836, column: 9, scope: !8355)
!8380 = !DILocation(line: 2838, column: 8, scope: !8355)
!8381 = !DILocation(line: 2838, column: 21, scope: !8355)
!8382 = !DILocation(line: 2847, column: 5, scope: !8355)
!8383 = !DILocation(line: 2848, column: 18, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8355, file: !1106, line: 2847, column: 10)
!8385 = !DILocation(line: 2850, column: 34, scope: !8355)
!8386 = !DILocation(line: 2850, column: 5, scope: !8384)
!8387 = distinct !{!8387, !8382, !8388}
!8388 = !DILocation(line: 2850, column: 43, scope: !8355)
!8389 = !DILocation(line: 2839, column: 32, scope: !8355)
!8390 = !DILocation(line: 2861, column: 53, scope: !8367)
!8391 = !DILocation(line: 2861, column: 40, scope: !8367)
!8392 = !DILocation(line: 2861, column: 25, scope: !8367)
!8393 = !DILocation(line: 2874, column: 16, scope: !8367)
!8394 = !DILocation(line: 2874, column: 13, scope: !8367)
!8395 = !DILocation(line: 0, scope: !8367)
!8396 = !DILocation(line: 2875, column: 24, scope: !8367)
!8397 = !DILocation(line: 2877, column: 21, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8367, file: !1106, line: 2877, column: 13)
!8399 = !DILocation(line: 2877, column: 13, scope: !8367)
!8400 = !DILocation(line: 2879, column: 23, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8402, file: !1106, line: 2879, column: 21)
!8402 = distinct !DILexicalBlock(scope: !8403, file: !1106, line: 2878, column: 120)
!8403 = distinct !DILexicalBlock(scope: !8404, file: !1106, line: 2878, column: 13)
!8404 = distinct !DILexicalBlock(scope: !8405, file: !1106, line: 2878, column: 13)
!8405 = distinct !DILexicalBlock(scope: !8398, file: !1106, line: 2877, column: 27)
!8406 = !DILocation(line: 2879, column: 21, scope: !8402)
!8407 = !DILocation(line: 2878, column: 48, scope: !8403)
!8408 = !DILocation(line: 2878, column: 83, scope: !8403)
!8409 = !DILocation(line: 2878, column: 113, scope: !8403)
!8410 = !DILocation(line: 2878, column: 35, scope: !8403)
!8411 = !DILocation(line: 2878, column: 13, scope: !8404)
!8412 = distinct !{!8412, !8411, !8413}
!8413 = !DILocation(line: 2883, column: 13, scope: !8404)
!8414 = !DILocation(line: 2863, column: 19, scope: !8367)
!8415 = !DILocation(line: 2825, column: 24, scope: !8355)
!8416 = !DILocation(line: 2886, column: 9, scope: !8367)
!8417 = !DILocation(line: 2888, column: 36, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8367, file: !1106, line: 2886, column: 31)
!8419 = !DILocation(line: 2888, column: 41, scope: !8418)
!8420 = !DILocation(line: 2889, column: 17, scope: !8418)
!8421 = !DILocation(line: 2891, column: 36, scope: !8418)
!8422 = !DILocation(line: 2891, column: 41, scope: !8418)
!8423 = !DILocation(line: 2892, column: 17, scope: !8418)
!8424 = !DILocation(line: 2894, column: 36, scope: !8418)
!8425 = !DILocation(line: 2894, column: 41, scope: !8418)
!8426 = !DILocation(line: 2895, column: 17, scope: !8418)
!8427 = !DILocation(line: 2897, column: 17, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8429, file: !1106, line: 2897, column: 17)
!8429 = distinct !DILexicalBlock(scope: !8430, file: !1106, line: 2897, column: 17)
!8430 = distinct !DILexicalBlock(scope: !8418, file: !1106, line: 2897, column: 17)
!8431 = !DILocation(line: 0, scope: !8418)
!8432 = !DILocation(line: 2906, column: 5, scope: !8355)
!8433 = !DILocation(line: 2908, column: 32, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8355, file: !1106, line: 2906, column: 27)
!8435 = !DILocation(line: 2908, column: 37, scope: !8434)
!8436 = !DILocation(line: 2909, column: 13, scope: !8434)
!8437 = !DILocation(line: 2911, column: 32, scope: !8434)
!8438 = !DILocation(line: 2911, column: 37, scope: !8434)
!8439 = !DILocation(line: 2912, column: 13, scope: !8434)
!8440 = !DILocation(line: 2914, column: 32, scope: !8434)
!8441 = !DILocation(line: 2914, column: 37, scope: !8434)
!8442 = !DILocation(line: 2915, column: 13, scope: !8434)
!8443 = !DILocation(line: 0, scope: !8434)
!8444 = !DILocation(line: 2921, column: 56, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8446, file: !1106, line: 2921, column: 5)
!8446 = distinct !DILexicalBlock(scope: !8355, file: !1106, line: 2921, column: 5)
!8447 = !DILocation(line: 2921, column: 5, scope: !8446)
!8448 = !DILocation(line: 2921, column: 35, scope: !8446)
!8449 = !DILocation(line: 2921, column: 22, scope: !8446)
!8450 = !DILocation(line: 2922, column: 9, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8445, file: !1106, line: 2921, column: 99)
!8452 = !DILocation(line: 2929, column: 9, scope: !8451)
!8453 = !DILocation(line: 2938, column: 26, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8451, file: !1106, line: 2929, column: 26)
!8455 = !DILocation(line: 2939, column: 37, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8454, file: !1106, line: 2939, column: 17)
!8457 = !DILocation(line: 2939, column: 17, scope: !8454)
!8458 = distinct !{!8458, !8452, !8459}
!8459 = !DILocation(line: 2943, column: 9, scope: !8451)
!8460 = !DILocation(line: 2921, column: 71, scope: !8445)
!8461 = !DILocation(line: 2921, column: 85, scope: !8445)
!8462 = distinct !{!8462, !8447, !8463}
!8463 = !DILocation(line: 2983, column: 5, scope: !8446)
!8464 = !DILocation(line: 2985, column: 21, scope: !8355)
!8465 = !DILocation(line: 2992, column: 9, scope: !8355)
!8466 = !DILocation(line: 3000, column: 5, scope: !8355)
!8467 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !1106, file: !1106, line: 2533, type: !1590, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8468)
!8468 = !{!8469, !8470, !8471, !8472, !8473, !8474, !8475, !8476, !8477, !8478, !8479, !8480, !8481, !8482}
!8469 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8467, file: !1106, line: 2533, type: !88)
!8470 = !DILocalVariable(name: "Address", arg: 2, scope: !8467, file: !1106, line: 2533, type: !88)
!8471 = !DILocalVariable(name: "Data", arg: 3, scope: !8467, file: !1106, line: 2533, type: !88)
!8472 = !DILocalVariable(name: "Length", arg: 4, scope: !8467, file: !1106, line: 2533, type: !61)
!8473 = !DILocalVariable(name: "D", scope: !8467, file: !1106, line: 2535, type: !1276)
!8474 = !DILocalVariable(name: "savedMask", scope: !8467, file: !1106, line: 2536, type: !61)
!8475 = !DILocalVariable(name: "address", scope: !8467, file: !1106, line: 2537, type: !61)
!8476 = !DILocalVariable(name: "p_data", scope: !8467, file: !1106, line: 2538, type: !762)
!8477 = !DILocalVariable(name: "p_data_first", scope: !8467, file: !1106, line: 2539, type: !762)
!8478 = !DILocalVariable(name: "result", scope: !8467, file: !1106, line: 2540, type: !985)
!8479 = !DILocalVariable(name: "written", scope: !8467, file: !1106, line: 2541, type: !61)
!8480 = !DILocalVariable(name: "length", scope: !8467, file: !1106, line: 2542, type: !61)
!8481 = !DILocalVariable(name: "cmd1", scope: !8467, file: !1106, line: 2543, type: !61)
!8482 = !DILocalVariable(name: "j", scope: !8483, file: !1106, line: 2599, type: !61)
!8483 = distinct !DILexicalBlock(scope: !8484, file: !1106, line: 2597, column: 61)
!8484 = distinct !DILexicalBlock(scope: !8485, file: !1106, line: 2597, column: 13)
!8485 = distinct !DILexicalBlock(scope: !8467, file: !1106, line: 2583, column: 25)
!8486 = !DILocation(line: 0, scope: !8467)
!8487 = !DILocation(line: 2535, column: 26, scope: !8467)
!8488 = !DILocation(line: 2537, column: 37, scope: !8467)
!8489 = !DILocation(line: 2538, column: 5, scope: !8467)
!8490 = !DILocation(line: 2538, column: 19, scope: !8467)
!8491 = !DILocation(line: 2542, column: 5, scope: !8467)
!8492 = !DILocation(line: 2545, column: 5, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8494, file: !1106, line: 2545, column: 5)
!8494 = distinct !DILexicalBlock(scope: !8467, file: !1106, line: 2545, column: 5)
!8495 = !DILocation(line: 2545, column: 5, scope: !8494)
!8496 = !DILocation(line: 2545, column: 5, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8493, file: !1106, line: 2545, column: 5)
!8498 = !DILocation(line: 2567, column: 9, scope: !8467)
!8499 = !DILocation(line: 2569, column: 8, scope: !8467)
!8500 = !DILocation(line: 2569, column: 21, scope: !8467)
!8501 = !DILocation(line: 2576, column: 5, scope: !8467)
!8502 = !DILocation(line: 2577, column: 18, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8467, file: !1106, line: 2576, column: 10)
!8504 = !DILocation(line: 2579, column: 34, scope: !8467)
!8505 = !DILocation(line: 2579, column: 5, scope: !8503)
!8506 = distinct !{!8506, !8501, !8507}
!8507 = !DILocation(line: 2579, column: 43, scope: !8467)
!8508 = !DILocation(line: 2583, column: 14, scope: !8467)
!8509 = !DILocation(line: 2583, column: 5, scope: !8467)
!8510 = !DILocation(line: 2584, column: 27, scope: !8485)
!8511 = !DILocation(line: 2592, column: 18, scope: !8485)
!8512 = !DILocation(line: 2592, column: 35, scope: !8485)
!8513 = !DILocation(line: 2592, column: 74, scope: !8485)
!8514 = !DILocation(line: 2592, column: 50, scope: !8485)
!8515 = !DILocation(line: 2592, column: 39, scope: !8485)
!8516 = !DILocation(line: 2595, column: 37, scope: !8485)
!8517 = !DILocation(line: 2595, column: 29, scope: !8485)
!8518 = !DILocation(line: 2595, column: 16, scope: !8485)
!8519 = !DILocation(line: 2597, column: 13, scope: !8484)
!8520 = !DILocation(line: 2597, column: 30, scope: !8484)
!8521 = !DILocation(line: 2597, column: 13, scope: !8485)
!8522 = !DILocation(line: 0, scope: !8483)
!8523 = !DILocation(line: 2600, column: 27, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8525, file: !1106, line: 2600, column: 13)
!8525 = distinct !DILexicalBlock(scope: !8483, file: !1106, line: 2600, column: 13)
!8526 = !DILocation(line: 2600, column: 13, scope: !8525)
!8527 = !DILocation(line: 2601, column: 38, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8524, file: !1106, line: 2600, column: 42)
!8529 = !DILocation(line: 2601, column: 17, scope: !8528)
!8530 = !DILocation(line: 2601, column: 36, scope: !8528)
!8531 = !DILocation(line: 2600, column: 38, scope: !8524)
!8532 = distinct !{!8532, !8526, !8533}
!8533 = !DILocation(line: 2602, column: 13, scope: !8525)
!8534 = !DILocation(line: 0, scope: !8485)
!8535 = !DILocation(line: 2606, column: 18, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8485, file: !1106, line: 2606, column: 13)
!8537 = !DILocation(line: 2606, column: 29, scope: !8536)
!8538 = !DILocation(line: 2606, column: 13, scope: !8485)
!8539 = !DILocation(line: 2607, column: 13, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8536, file: !1106, line: 2606, column: 55)
!8541 = !DILocation(line: 2608, column: 9, scope: !8540)
!8542 = !DILocation(line: 2613, column: 16, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8485, file: !1106, line: 2613, column: 13)
!8544 = !DILocation(line: 2613, column: 29, scope: !8543)
!8545 = !DILocation(line: 0, scope: !8543)
!8546 = !DILocation(line: 2613, column: 13, scope: !8485)
!8547 = !DILocation(line: 2614, column: 20, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8543, file: !1106, line: 2613, column: 35)
!8549 = !DILocation(line: 2615, column: 32, scope: !8548)
!8550 = !DILocation(line: 2615, column: 40, scope: !8548)
!8551 = !DILocation(line: 2615, column: 13, scope: !8548)
!8552 = !DILocation(line: 2616, column: 9, scope: !8548)
!8553 = !DILocation(line: 2619, column: 20, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8543, file: !1106, line: 2618, column: 9)
!8555 = !DILocation(line: 2620, column: 32, scope: !8554)
!8556 = !DILocation(line: 2620, column: 40, scope: !8554)
!8557 = !DILocation(line: 2620, column: 13, scope: !8554)
!8558 = !DILocation(line: 2626, column: 21, scope: !8485)
!8559 = !DILocation(line: 2633, column: 37, scope: !8485)
!8560 = !DILocation(line: 2634, column: 45, scope: !8485)
!8561 = !DILocation(line: 2634, column: 42, scope: !8485)
!8562 = !DILocation(line: 2634, column: 40, scope: !8485)
!8563 = !DILocation(line: 2634, column: 58, scope: !8485)
!8564 = !DILocation(line: 2634, column: 29, scope: !8485)
!8565 = !DILocation(line: 2635, column: 28, scope: !8485)
!8566 = !DILocation(line: 2636, column: 9, scope: !8485)
!8567 = !DILocation(line: 2638, column: 26, scope: !8485)
!8568 = !DILocation(line: 2638, column: 9, scope: !8485)
!8569 = !DILocation(line: 2639, column: 29, scope: !8485)
!8570 = !DILocation(line: 2639, column: 9, scope: !8485)
!8571 = !DILocation(line: 2662, column: 9, scope: !8485)
!8572 = !DILocation(line: 2670, column: 9, scope: !8485)
!8573 = !DILocation(line: 2676, column: 89, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8485, file: !1106, line: 2670, column: 13)
!8575 = !DILocation(line: 2676, column: 26, scope: !8574)
!8576 = !DILocation(line: 2678, column: 36, scope: !8485)
!8577 = !DILocation(line: 2678, column: 9, scope: !8574)
!8578 = distinct !{!8578, !8572, !8579}
!8579 = !DILocation(line: 2678, column: 45, scope: !8485)
!8580 = !DILocation(line: 2718, column: 19, scope: !8485)
!8581 = !DILocation(line: 2718, column: 16, scope: !8485)
!8582 = !DILocation(line: 2719, column: 16, scope: !8485)
!8583 = !DILocation(line: 2722, column: 31, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8485, file: !1106, line: 2722, column: 13)
!8585 = !DILocation(line: 2722, column: 13, scope: !8485)
!8586 = distinct !{!8586, !8509, !8587}
!8587 = !DILocation(line: 2725, column: 5, scope: !8467)
!8588 = !DILocation(line: 2748, column: 21, scope: !8467)
!8589 = !DILocation(line: 2755, column: 9, scope: !8467)
!8590 = !DILocation(line: 2757, column: 16, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8467, file: !1106, line: 2757, column: 9)
!8592 = !DILocation(line: 2761, column: 1, scope: !8467)
!8593 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !1106, file: !1106, line: 3019, type: !1586, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8594)
!8594 = !{!8595, !8596}
!8595 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8593, file: !1106, line: 3019, type: !88)
!8596 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8593, file: !1106, line: 3019, type: !61)
!8597 = !DILocation(line: 0, scope: !8593)
!8598 = !DILocation(line: 3021, column: 5, scope: !8593)
!8599 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !1106, file: !1106, line: 3124, type: !1595, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8600)
!8600 = !{!8601, !8602, !8603, !8604, !8605, !8606, !8607, !8608}
!8601 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8599, file: !1106, line: 3124, type: !88)
!8602 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8599, file: !1106, line: 3124, type: !61)
!8603 = !DILocalVariable(name: "result", scope: !8599, file: !1106, line: 3126, type: !985)
!8604 = !DILocalVariable(name: "savedMask", scope: !8599, file: !1106, line: 3127, type: !61)
!8605 = !DILocalVariable(name: "D", scope: !8599, file: !1106, line: 3128, type: !1276)
!8606 = !DILocalVariable(name: "status_busy", scope: !8599, file: !1106, line: 3129, type: !1328)
!8607 = !DILocalVariable(name: "status_suspend", scope: !8599, file: !1106, line: 3129, type: !1328)
!8608 = !DILocalVariable(name: "check_status", scope: !8609, file: !1106, line: 3141, type: !1328)
!8609 = distinct !DILexicalBlock(scope: !8610, file: !1106, line: 3140, column: 56)
!8610 = distinct !DILexicalBlock(scope: !8599, file: !1106, line: 3140, column: 9)
!8611 = !DILocation(line: 0, scope: !8599)
!8612 = !DILocation(line: 3128, column: 47, scope: !8599)
!8613 = !DILocation(line: 3131, column: 5, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8615, file: !1106, line: 3131, column: 5)
!8615 = distinct !DILexicalBlock(scope: !8599, file: !1106, line: 3131, column: 5)
!8616 = !DILocation(line: 3131, column: 5, scope: !8615)
!8617 = !DILocation(line: 3131, column: 5, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8614, file: !1106, line: 3131, column: 5)
!8619 = !DILocation(line: 3134, column: 50, scope: !8599)
!8620 = !DILocation(line: 3134, column: 55, scope: !8599)
!8621 = !DILocation(line: 3134, column: 22, scope: !8599)
!8622 = !DILocation(line: 3135, column: 50, scope: !8599)
!8623 = !DILocation(line: 3135, column: 55, scope: !8599)
!8624 = !DILocation(line: 3135, column: 22, scope: !8599)
!8625 = !DILocation(line: 3138, column: 17, scope: !8599)
!8626 = !DILocation(line: 3140, column: 32, scope: !8610)
!8627 = !DILocation(line: 3140, column: 29, scope: !8610)
!8628 = !DILocation(line: 3140, column: 27, scope: !8610)
!8629 = !DILocation(line: 3140, column: 11, scope: !8610)
!8630 = !DILocation(line: 3140, column: 9, scope: !8599)
!8631 = !DILocation(line: 3141, column: 34, scope: !8609)
!8632 = !DILocation(line: 3141, column: 60, scope: !8609)
!8633 = !DILocation(line: 3141, column: 58, scope: !8609)
!8634 = !DILocation(line: 0, scope: !8609)
!8635 = !DILocation(line: 3144, column: 37, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8609, file: !1106, line: 3144, column: 13)
!8637 = !DILocation(line: 3144, column: 35, scope: !8636)
!8638 = !DILocation(line: 3144, column: 16, scope: !8636)
!8639 = !DILocation(line: 3144, column: 52, scope: !8636)
!8640 = !DILocation(line: 3145, column: 21, scope: !8636)
!8641 = !DILocation(line: 3145, column: 38, scope: !8636)
!8642 = !DILocation(line: 3147, column: 13, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8644, file: !1106, line: 3147, column: 13)
!8644 = distinct !DILexicalBlock(scope: !8645, file: !1106, line: 3147, column: 13)
!8645 = distinct !DILexicalBlock(scope: !8636, file: !1106, line: 3145, column: 61)
!8646 = !DILocation(line: 3147, column: 13, scope: !8644)
!8647 = !DILocation(line: 3147, column: 13, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8643, file: !1106, line: 3147, column: 13)
!8649 = !DILocation(line: 3150, column: 13, scope: !8645)
!8650 = !DILocation(line: 3151, column: 33, scope: !8645)
!8651 = !DILocation(line: 3153, column: 9, scope: !8645)
!8652 = !DILocation(line: 3155, column: 20, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8654, file: !1106, line: 3155, column: 17)
!8654 = distinct !DILexicalBlock(scope: !8636, file: !1106, line: 3153, column: 16)
!8655 = !DILocation(line: 3155, column: 31, scope: !8653)
!8656 = !DILocation(line: 3155, column: 17, scope: !8654)
!8657 = !DILocation(line: 3156, column: 36, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8653, file: !1106, line: 3155, column: 54)
!8659 = !DILocation(line: 3156, column: 17, scope: !8658)
!8660 = !DILocation(line: 3157, column: 36, scope: !8658)
!8661 = !DILocation(line: 3157, column: 17, scope: !8658)
!8662 = !DILocation(line: 3158, column: 13, scope: !8658)
!8663 = !DILocation(line: 3191, column: 5, scope: !8599)
!8664 = !DILocation(line: 3193, column: 9, scope: !8599)
!8665 = !DILocation(line: 3160, column: 13, scope: !8654)
!8666 = !DILocation(line: 3173, column: 13, scope: !8654)
!8667 = !DILocation(line: 3194, column: 18, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8669, file: !1106, line: 3193, column: 32)
!8669 = distinct !DILexicalBlock(scope: !8599, file: !1106, line: 3193, column: 9)
!8670 = !DILocation(line: 3195, column: 5, scope: !8668)
!8671 = !DILocation(line: 3197, column: 5, scope: !8599)
!8672 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !1106, file: !1106, line: 3225, type: !1586, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8673)
!8673 = !{!8674, !8675, !8676, !8677, !8678}
!8674 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8672, file: !1106, line: 3225, type: !88)
!8675 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8672, file: !1106, line: 3225, type: !61)
!8676 = !DILocalVariable(name: "D", scope: !8672, file: !1106, line: 3227, type: !1276)
!8677 = !DILocalVariable(name: "status", scope: !8672, file: !1106, line: 3228, type: !1328)
!8678 = !DILocalVariable(name: "savedMask", scope: !8672, file: !1106, line: 3229, type: !61)
!8679 = !DILocation(line: 0, scope: !8672)
!8680 = !DILocation(line: 3227, column: 30, scope: !8672)
!8681 = !DILocation(line: 3231, column: 17, scope: !8672)
!8682 = !DILocation(line: 3234, column: 5, scope: !8672)
!8683 = !DILocation(line: 3238, column: 5, scope: !8672)
!8684 = !DILocation(line: 3239, column: 46, scope: !8685)
!8685 = distinct !DILexicalBlock(scope: !8672, file: !1106, line: 3238, column: 15)
!8686 = !DILocation(line: 3239, column: 51, scope: !8685)
!8687 = !DILocation(line: 3239, column: 18, scope: !8685)
!8688 = !DILocation(line: 3241, column: 31, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8685, file: !1106, line: 3241, column: 13)
!8690 = !DILocation(line: 3241, column: 28, scope: !8689)
!8691 = !DILocation(line: 3241, column: 26, scope: !8689)
!8692 = !DILocation(line: 3241, column: 15, scope: !8689)
!8693 = !DILocation(line: 3241, column: 13, scope: !8685)
!8694 = distinct !{!8694, !8683, !8695}
!8695 = !DILocation(line: 3244, column: 5, scope: !8672)
!8696 = !DILocation(line: 3246, column: 5, scope: !8672)
!8697 = !DILocation(line: 3248, column: 5, scope: !8672)
!8698 = !DILocation(line: 3250, column: 5, scope: !8672)
!8699 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !1106, file: !1106, line: 3277, type: !1586, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8700)
!8700 = !{!8701, !8702, !8703}
!8701 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8699, file: !1106, line: 3277, type: !88)
!8702 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8699, file: !1106, line: 3277, type: !61)
!8703 = !DILocalVariable(name: "D", scope: !8699, file: !1106, line: 3279, type: !1276)
!8704 = !DILocation(line: 0, scope: !8699)
!8705 = !DILocation(line: 3279, column: 29, scope: !8699)
!8706 = !DILocation(line: 3281, column: 5, scope: !8699)
!8707 = !DILocation(line: 3282, column: 5, scope: !8699)
!8708 = !DILocation(line: 3283, column: 5, scope: !8699)
!8709 = !DILocation(line: 3285, column: 5, scope: !8699)
!8710 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !1106, file: !1106, line: 3332, type: !1612, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8711)
!8711 = !{!8712, !8713, !8714}
!8712 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8710, file: !1106, line: 3332, type: !88)
!8713 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !8710, file: !1106, line: 3332, type: !88)
!8714 = !DILocalVariable(name: "ACTION", arg: 3, scope: !8710, file: !1106, line: 3332, type: !61)
!8715 = !DILocation(line: 0, scope: !8710)
!8716 = !DILocation(line: 3334, column: 5, scope: !8710)
!8717 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !1106, file: !1106, line: 2350, type: !1620, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8718)
!8718 = !{!8719, !8720, !8721, !8722}
!8719 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8717, file: !1106, line: 2350, type: !88)
!8720 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !8717, file: !1106, line: 2350, type: !61)
!8721 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !8717, file: !1106, line: 2350, type: !88)
!8722 = !DILocalVariable(name: "D", scope: !8717, file: !1106, line: 2352, type: !1276)
!8723 = !DILocation(line: 0, scope: !8717)
!8724 = !DILocation(line: 2353, column: 9, scope: !8717)
!8725 = !DILocation(line: 2354, column: 12, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8727, file: !1106, line: 2353, column: 51)
!8727 = distinct !DILexicalBlock(scope: !8717, file: !1106, line: 2353, column: 9)
!8728 = !DILocation(line: 2354, column: 9, scope: !8726)
!8729 = !DILocation(line: 2355, column: 5, scope: !8726)
!8730 = !DILocation(line: 2356, column: 17, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8732, file: !1106, line: 2356, column: 13)
!8732 = distinct !DILexicalBlock(scope: !8733, file: !1106, line: 2355, column: 71)
!8733 = distinct !DILexicalBlock(scope: !8727, file: !1106, line: 2355, column: 16)
!8734 = !DILocation(line: 2356, column: 14, scope: !8731)
!8735 = !DILocation(line: 2356, column: 28, scope: !8731)
!8736 = !DILocation(line: 2356, column: 49, scope: !8731)
!8737 = !DILocation(line: 2356, column: 56, scope: !8731)
!8738 = !DILocation(line: 2356, column: 70, scope: !8731)
!8739 = !DILocation(line: 2356, column: 80, scope: !8731)
!8740 = !DILocation(line: 2356, column: 13, scope: !8732)
!8741 = !DILocation(line: 2361, column: 9, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8743, file: !1106, line: 2361, column: 9)
!8743 = distinct !DILexicalBlock(scope: !8744, file: !1106, line: 2361, column: 9)
!8744 = distinct !DILexicalBlock(scope: !8745, file: !1106, line: 2361, column: 9)
!8745 = distinct !DILexicalBlock(scope: !8733, file: !1106, line: 2359, column: 12)
!8746 = !DILocation(line: 2363, column: 5, scope: !8717)
!8747 = !DILocation(line: 2364, column: 1, scope: !8717)
!8748 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !1106, file: !1106, line: 3355, type: !1378, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8749)
!8749 = !{!8750, !8751, !8752}
!8750 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8748, file: !1106, line: 3355, type: !88)
!8751 = !DILocalVariable(name: "D", scope: !8748, file: !1106, line: 3357, type: !1276)
!8752 = !DILocalVariable(name: "status", scope: !8748, file: !1106, line: 3358, type: !1076)
!8753 = !DILocation(line: 0, scope: !8748)
!8754 = !DILocation(line: 3366, column: 12, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8748, file: !1106, line: 3366, column: 9)
!8756 = !DILocation(line: 3366, column: 17, scope: !8755)
!8757 = !DILocation(line: 3366, column: 9, scope: !8755)
!8758 = !DILocation(line: 3366, column: 9, scope: !8748)
!8759 = !DILocation(line: 3357, column: 25, scope: !8748)
!8760 = !DILocation(line: 3367, column: 18, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8755, file: !1106, line: 3366, column: 33)
!8762 = !DILocation(line: 3368, column: 25, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8761, file: !1106, line: 3368, column: 13)
!8764 = !DILocation(line: 3368, column: 22, scope: !8763)
!8765 = !DILocation(line: 3368, column: 20, scope: !8763)
!8766 = !DILocation(line: 3368, column: 13, scope: !8761)
!8767 = !DILocation(line: 3373, column: 5, scope: !8748)
!8768 = !DILocation(line: 3374, column: 1, scope: !8748)
!8769 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !1106, file: !1106, line: 3044, type: !8770, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8772)
!8770 = !DISubroutineType(types: !8771)
!8771 = !{!985, !88, !61, !460}
!8772 = !{!8773, !8774, !8775, !8776, !8777, !8778, !8779, !8780}
!8773 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8769, file: !1106, line: 3044, type: !88)
!8774 = !DILocalVariable(name: "addr", arg: 2, scope: !8769, file: !1106, line: 3044, type: !61)
!8775 = !DILocalVariable(name: "data", arg: 3, scope: !8769, file: !1106, line: 3044, type: !460)
!8776 = !DILocalVariable(name: "savedMask", scope: !8769, file: !1106, line: 3046, type: !61)
!8777 = !DILocalVariable(name: "D", scope: !8769, file: !1106, line: 3047, type: !1276)
!8778 = !DILocalVariable(name: "result", scope: !8769, file: !1106, line: 3048, type: !985)
!8779 = !DILocalVariable(name: "check_data", scope: !8769, file: !1106, line: 3049, type: !460)
!8780 = !DILocalVariable(name: "status_busy", scope: !8769, file: !1106, line: 3050, type: !1076)
!8781 = !DILocation(line: 0, scope: !8769)
!8782 = !DILocation(line: 3047, column: 43, scope: !8769)
!8783 = !DILocation(line: 3053, column: 47, scope: !8769)
!8784 = !DILocation(line: 3053, column: 52, scope: !8769)
!8785 = !DILocation(line: 3053, column: 19, scope: !8769)
!8786 = !DILocation(line: 3056, column: 9, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8769, file: !1106, line: 3056, column: 9)
!8788 = !DILocation(line: 3056, column: 9, scope: !8769)
!8789 = !DILocation(line: 3058, column: 9, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8791, file: !1106, line: 3058, column: 9)
!8791 = distinct !DILexicalBlock(scope: !8792, file: !1106, line: 3058, column: 9)
!8792 = distinct !DILexicalBlock(scope: !8787, file: !1106, line: 3056, column: 28)
!8793 = !DILocation(line: 3058, column: 9, scope: !8791)
!8794 = !DILocation(line: 3058, column: 9, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8790, file: !1106, line: 3058, column: 9)
!8796 = !DILocation(line: 3060, column: 9, scope: !8792)
!8797 = !DILocation(line: 3062, column: 29, scope: !8792)
!8798 = !DILocation(line: 3063, column: 5, scope: !8792)
!8799 = !DILocation(line: 3065, column: 38, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8787, file: !1106, line: 3065, column: 15)
!8801 = !DILocation(line: 3065, column: 35, scope: !8800)
!8802 = !DILocation(line: 3065, column: 33, scope: !8800)
!8803 = !DILocation(line: 3065, column: 17, scope: !8800)
!8804 = !DILocation(line: 3065, column: 15, scope: !8787)
!8805 = !DILocation(line: 3066, column: 21, scope: !8806)
!8806 = distinct !DILexicalBlock(scope: !8800, file: !1106, line: 3065, column: 62)
!8807 = !DILocation(line: 3068, column: 9, scope: !8806)
!8808 = !DILocation(line: 3071, column: 23, scope: !8806)
!8809 = !DILocation(line: 3071, column: 22, scope: !8806)
!8810 = !DILocation(line: 3073, column: 24, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8806, file: !1106, line: 3073, column: 13)
!8812 = !DILocation(line: 3073, column: 13, scope: !8806)
!8813 = !DILocation(line: 3078, column: 16, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8815, file: !1106, line: 3078, column: 16)
!8815 = distinct !DILexicalBlock(scope: !8811, file: !1106, line: 3075, column: 16)
!8816 = !DILocation(line: 3078, column: 16, scope: !8815)
!8817 = !DILocation(line: 3081, column: 58, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8814, file: !1106, line: 3078, column: 46)
!8819 = !DILocation(line: 3081, column: 17, scope: !8818)
!8820 = !DILocation(line: 3082, column: 22, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8818, file: !1106, line: 3082, column: 21)
!8822 = !DILocation(line: 3082, column: 49, scope: !8821)
!8823 = !DILocation(line: 3082, column: 21, scope: !8818)
!8824 = !DILocation(line: 3088, column: 9, scope: !8806)
!8825 = !DILocation(line: 3091, column: 9, scope: !8769)
!8826 = !DILocation(line: 3092, column: 13, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8828, file: !1106, line: 3092, column: 13)
!8828 = distinct !DILexicalBlock(scope: !8769, file: !1106, line: 3091, column: 9)
!8829 = !DILocation(line: 3092, column: 33, scope: !8827)
!8830 = !DILocation(line: 3092, column: 13, scope: !8828)
!8831 = !DILocation(line: 3106, column: 5, scope: !8769)
!8832 = !DILocation(line: 3107, column: 1, scope: !8769)
!8833 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !1106, file: !1106, line: 3497, type: !8834, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8836)
!8834 = !DISubroutineType(types: !8835)
!8835 = !{null, !1276, !61}
!8836 = !{!8837, !8838, !8839}
!8837 = !DILocalVariable(name: "D", arg: 1, scope: !8833, file: !1106, line: 3497, type: !1276)
!8838 = !DILocalVariable(name: "addr", arg: 2, scope: !8833, file: !1106, line: 3497, type: !61)
!8839 = !DILocalVariable(name: "savedMask", scope: !8833, file: !1106, line: 3499, type: !61)
!8840 = !DILocation(line: 0, scope: !8833)
!8841 = !DILocation(line: 3501, column: 14, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8833, file: !1106, line: 3501, column: 9)
!8843 = !DILocation(line: 3501, column: 25, scope: !8842)
!8844 = !DILocation(line: 3501, column: 9, scope: !8833)
!8845 = !DILocation(line: 3502, column: 9, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8842, file: !1106, line: 3501, column: 51)
!8847 = !DILocation(line: 3503, column: 5, scope: !8846)
!8848 = !DILocation(line: 3507, column: 17, scope: !8833)
!8849 = !DILocation(line: 3516, column: 5, scope: !8833)
!8850 = !DILocation(line: 3517, column: 31, scope: !8833)
!8851 = !DILocation(line: 3517, column: 38, scope: !8833)
!8852 = !DILocation(line: 3517, column: 43, scope: !8833)
!8853 = !DILocation(line: 3517, column: 59, scope: !8833)
!8854 = !DILocation(line: 3517, column: 56, scope: !8833)
!8855 = !DILocation(line: 3517, column: 5, scope: !8833)
!8856 = !DILocation(line: 3523, column: 5, scope: !8833)
!8857 = !DILocation(line: 3524, column: 1, scope: !8833)
!8858 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !1106, file: !1106, line: 2018, type: !7959, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8859)
!8859 = !{!8860, !8861, !8862}
!8860 = !DILocalVariable(name: "driver", arg: 1, scope: !8858, file: !1106, line: 2018, type: !7961)
!8861 = !DILocalVariable(name: "D", arg: 2, scope: !8858, file: !1106, line: 2018, type: !1276)
!8862 = !DILocalVariable(name: "result", scope: !8858, file: !1106, line: 2020, type: !985)
!8863 = !DILocation(line: 0, scope: !8858)
!8864 = !DILocation(line: 2022, column: 13, scope: !8858)
!8865 = !DILocation(line: 2022, column: 5, scope: !8858)
!8866 = !DILocation(line: 2031, column: 16, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8858, file: !1106, line: 2022, column: 31)
!8868 = !DILocation(line: 2031, column: 27, scope: !8867)
!8869 = !DILocation(line: 2033, column: 22, scope: !8867)
!8870 = !DILocation(line: 2034, column: 13, scope: !8867)
!8871 = !DILocation(line: 2049, column: 16, scope: !8867)
!8872 = !DILocation(line: 2049, column: 27, scope: !8867)
!8873 = !DILocation(line: 2051, column: 23, scope: !8867)
!8874 = !DILocation(line: 2053, column: 13, scope: !8867)
!8875 = !DILocation(line: 2058, column: 22, scope: !8867)
!8876 = !DILocation(line: 2059, column: 13, scope: !8867)
!8877 = !DILocation(line: 2079, column: 13, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8879, file: !1106, line: 2079, column: 13)
!8879 = distinct !DILexicalBlock(scope: !8880, file: !1106, line: 2079, column: 13)
!8880 = distinct !DILexicalBlock(scope: !8867, file: !1106, line: 2079, column: 13)
!8881 = !DILocation(line: 2083, column: 5, scope: !8858)
!8882 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !1106, file: !1106, line: 2100, type: !8883, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8885)
!8883 = !DISubroutineType(types: !8884)
!8884 = !{!985, !7961, !1276, !61, !61}
!8885 = !{!8886, !8887, !8888, !8889, !8890}
!8886 = !DILocalVariable(name: "driver", arg: 1, scope: !8882, file: !1106, line: 2100, type: !7961)
!8887 = !DILocalVariable(name: "D", arg: 2, scope: !8882, file: !1106, line: 2100, type: !1276)
!8888 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !8882, file: !1106, line: 2100, type: !61)
!8889 = !DILocalVariable(name: "parameter", arg: 4, scope: !8882, file: !1106, line: 2100, type: !61)
!8890 = !DILocalVariable(name: "result", scope: !8882, file: !1106, line: 2102, type: !985)
!8891 = !DILocation(line: 0, scope: !8882)
!8892 = !DILocation(line: 2105, column: 16, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8882, file: !1106, line: 2105, column: 9)
!8894 = !DILocation(line: 2105, column: 24, scope: !8893)
!8895 = !DILocation(line: 2109, column: 12, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8882, file: !1106, line: 2109, column: 9)
!8897 = !DILocation(line: 2109, column: 16, scope: !8896)
!8898 = !DILocation(line: 2109, column: 24, scope: !8896)
!8899 = !DILocation(line: 2109, column: 30, scope: !8896)
!8900 = !DILocation(line: 2109, column: 40, scope: !8896)
!8901 = !DILocation(line: 2109, column: 9, scope: !8882)
!8902 = !DILocation(line: 2118, column: 19, scope: !8882)
!8903 = !DILocation(line: 2118, column: 8, scope: !8882)
!8904 = !DILocation(line: 2118, column: 17, scope: !8882)
!8905 = !DILocation(line: 2119, column: 23, scope: !8882)
!8906 = !DILocation(line: 2119, column: 8, scope: !8882)
!8907 = !DILocation(line: 2119, column: 21, scope: !8882)
!8908 = !DILocation(line: 2122, column: 5, scope: !8882)
!8909 = !DILocation(line: 2125, column: 8, scope: !8882)
!8910 = !DILocation(line: 2125, column: 13, scope: !8882)
!8911 = !DILocation(line: 2125, column: 24, scope: !8882)
!8912 = !DILocation(line: 2126, column: 26, scope: !8882)
!8913 = !DILocation(line: 2126, column: 5, scope: !8882)
!8914 = !DILocation(line: 2128, column: 9, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8882, file: !1106, line: 2128, column: 9)
!8916 = !DILocation(line: 2128, column: 31, scope: !8915)
!8917 = !DILocation(line: 2128, column: 60, scope: !8915)
!8918 = !DILocation(line: 2128, column: 9, scope: !8882)
!8919 = !DILocation(line: 2129, column: 12, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8915, file: !1106, line: 2128, column: 110)
!8921 = !DILocation(line: 2129, column: 17, scope: !8920)
!8922 = !DILocation(line: 2129, column: 28, scope: !8920)
!8923 = !DILocation(line: 2130, column: 9, scope: !8920)
!8924 = !DILocation(line: 2131, column: 5, scope: !8920)
!8925 = !DILocation(line: 2134, column: 14, scope: !8882)
!8926 = !DILocation(line: 2136, column: 5, scope: !8882)
!8927 = !DILocation(line: 2137, column: 1, scope: !8882)
!8928 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !1106, file: !1106, line: 3387, type: !8929, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8931)
!8929 = !DISubroutineType(types: !8930)
!8930 = !{null, !1276, !762}
!8931 = !{!8932, !8933, !8934}
!8932 = !DILocalVariable(name: "D", arg: 1, scope: !8928, file: !1106, line: 3387, type: !1276)
!8933 = !DILocalVariable(name: "id", arg: 2, scope: !8928, file: !1106, line: 3387, type: !762)
!8934 = !DILocalVariable(name: "cmd", scope: !8928, file: !1106, line: 3389, type: !460)
!8935 = !DILocation(line: 0, scope: !8928)
!8936 = !DILocation(line: 3389, column: 5, scope: !8928)
!8937 = !DILocation(line: 3405, column: 9, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8928, file: !1106, line: 3405, column: 9)
!8939 = !DILocation(line: 3405, column: 21, scope: !8938)
!8940 = !DILocation(line: 0, scope: !8938)
!8941 = !DILocation(line: 3405, column: 9, scope: !8928)
!8942 = !DILocation(line: 3411, column: 31, scope: !8928)
!8943 = !DILocation(line: 3411, column: 5, scope: !8928)
!8944 = !DILocation(line: 3412, column: 1, scope: !8928)
!8945 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !1106, file: !1106, line: 3585, type: !8946, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !8948)
!8946 = !DISubroutineType(types: !8947)
!8947 = !{null, !6730, !762, !762, !6730, !6730}
!8948 = !{!8949, !8950, !8951, !8952, !8953, !8954}
!8949 = !DILocalVariable(name: "CS", arg: 1, scope: !8945, file: !1106, line: 3585, type: !6730)
!8950 = !DILocalVariable(name: "cmd", arg: 2, scope: !8945, file: !1106, line: 3585, type: !762)
!8951 = !DILocalVariable(name: "data", arg: 3, scope: !8945, file: !1106, line: 3585, type: !762)
!8952 = !DILocalVariable(name: "outl", arg: 4, scope: !8945, file: !1106, line: 3585, type: !6730)
!8953 = !DILocalVariable(name: "inl", arg: 5, scope: !8945, file: !1106, line: 3585, type: !6730)
!8954 = !DILocalVariable(name: "savedMask", scope: !8945, file: !1106, line: 3587, type: !61)
!8955 = !DILocation(line: 0, scope: !8945)
!8956 = !DILocation(line: 3589, column: 17, scope: !8945)
!8957 = !DILocation(line: 3590, column: 5, scope: !8945)
!8958 = !DILocation(line: 3591, column: 5, scope: !8945)
!8959 = !DILocation(line: 3593, column: 1, scope: !8945)
!8960 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !1431, file: !1431, line: 110, type: !7208, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !8961)
!8961 = !{!8962, !8963, !8964, !8965}
!8962 = !DILocalVariable(name: "id", arg: 1, scope: !8960, file: !1431, line: 110, type: !762)
!8963 = !DILocalVariable(name: "i", scope: !8960, file: !1431, line: 114, type: !985)
!8964 = !DILocalVariable(name: "j", scope: !8960, file: !1431, line: 114, type: !985)
!8965 = !DILocalVariable(name: "id_list", scope: !8960, file: !1431, line: 115, type: !8966)
!8966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8967, size: 32)
!8967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1509)
!8968 = !DILocation(line: 0, scope: !8960)
!8969 = !DILocation(line: 119, column: 5, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8960, file: !1431, line: 119, column: 5)
!8971 = !DILocation(line: 119, column: 46, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8970, file: !1431, line: 119, column: 5)
!8973 = !DILocation(line: 119, column: 19, scope: !8972)
!8974 = distinct !{!8974, !8969, !8975}
!8975 = !DILocation(line: 131, column: 5, scope: !8970)
!8976 = !DILocation(line: 121, column: 23, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8978, file: !1431, line: 121, column: 9)
!8978 = distinct !DILexicalBlock(scope: !8979, file: !1431, line: 121, column: 9)
!8979 = distinct !DILexicalBlock(scope: !8972, file: !1431, line: 119, column: 50)
!8980 = !DILocation(line: 121, column: 9, scope: !8978)
!8981 = !DILocation(line: 122, column: 17, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8983, file: !1431, line: 122, column: 17)
!8983 = distinct !DILexicalBlock(scope: !8977, file: !1431, line: 121, column: 51)
!8984 = !DILocation(line: 122, column: 37, scope: !8982)
!8985 = !DILocation(line: 122, column: 34, scope: !8982)
!8986 = !DILocation(line: 122, column: 17, scope: !8983)
!8987 = !DILocation(line: 121, column: 47, scope: !8977)
!8988 = distinct !{!8988, !8980, !8989}
!8989 = !DILocation(line: 125, column: 9, scope: !8978)
!8990 = !DILocation(line: 0, scope: !8978)
!8991 = !DILocation(line: 127, column: 15, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8979, file: !1431, line: 127, column: 13)
!8993 = !DILocation(line: 127, column: 13, scope: !8979)
!8994 = !DILocation(line: 134, column: 1, scope: !8960)
!8995 = distinct !DISubprogram(name: "CMEM_Index", scope: !1431, file: !1431, line: 153, type: !7363, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !8996)
!8996 = !{!8997, !8998, !8999, !9006}
!8997 = !DILocalVariable(name: "i", scope: !8995, file: !1431, line: 156, type: !985)
!8998 = !DILocalVariable(name: "j", scope: !8995, file: !1431, line: 156, type: !985)
!8999 = !DILocalVariable(name: "id", scope: !8995, file: !1431, line: 157, type: !9000)
!9000 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1502, line: 89, baseType: !9001)
!9001 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1502, line: 86, size: 64, elements: !9002)
!9002 = !{!9003, !9004}
!9003 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !9001, file: !1502, line: 87, baseType: !1515, size: 64)
!9004 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !9001, file: !1502, line: 88, baseType: !9005, size: 64)
!9005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1076, size: 64, elements: !463)
!9006 = !DILocalVariable(name: "id_list", scope: !8995, file: !1431, line: 158, type: !8966)
!9007 = !DILocation(line: 157, column: 5, scope: !8995)
!9008 = !DILocation(line: 157, column: 17, scope: !8995)
!9009 = !DILocation(line: 0, scope: !8995)
!9010 = !DILocation(line: 161, column: 9, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !8995, file: !1431, line: 161, column: 9)
!9012 = !DILocation(line: 161, column: 20, scope: !9011)
!9013 = !DILocation(line: 161, column: 9, scope: !8995)
!9014 = !DILocation(line: 172, column: 58, scope: !8995)
!9015 = !DILocation(line: 172, column: 5, scope: !8995)
!9016 = !DILocation(line: 178, column: 5, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !8995, file: !1431, line: 178, column: 5)
!9018 = !DILocation(line: 180, column: 23, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !9020, file: !1431, line: 180, column: 9)
!9020 = distinct !DILexicalBlock(scope: !9021, file: !1431, line: 180, column: 9)
!9021 = distinct !DILexicalBlock(scope: !9022, file: !1431, line: 178, column: 53)
!9022 = distinct !DILexicalBlock(scope: !9017, file: !1431, line: 178, column: 5)
!9023 = !DILocation(line: 180, column: 9, scope: !9020)
!9024 = !DILocation(line: 181, column: 17, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9026, file: !1431, line: 181, column: 17)
!9026 = distinct !DILexicalBlock(scope: !9019, file: !1431, line: 180, column: 51)
!9027 = !DILocation(line: 181, column: 37, scope: !9025)
!9028 = !DILocation(line: 181, column: 34, scope: !9025)
!9029 = !DILocation(line: 181, column: 17, scope: !9026)
!9030 = !DILocation(line: 180, column: 47, scope: !9019)
!9031 = distinct !{!9031, !9023, !9032}
!9032 = !DILocation(line: 184, column: 9, scope: !9020)
!9033 = !DILocation(line: 0, scope: !9020)
!9034 = !DILocation(line: 186, column: 15, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9021, file: !1431, line: 186, column: 13)
!9036 = !DILocation(line: 186, column: 13, scope: !9021)
!9037 = !DILocation(line: 188, column: 26, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9035, file: !1431, line: 186, column: 41)
!9039 = !DILocation(line: 188, column: 24, scope: !9038)
!9040 = !DILocation(line: 189, column: 13, scope: !9038)
!9041 = !DILocation(line: 178, column: 46, scope: !9022)
!9042 = !DILocation(line: 178, column: 19, scope: !9022)
!9043 = distinct !{!9043, !9016, !9044}
!9044 = !DILocation(line: 191, column: 5, scope: !9017)
!9045 = !DILocation(line: 222, column: 12, scope: !8995)
!9046 = !DILocation(line: 223, column: 1, scope: !8995)
!9047 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !1431, file: !1431, line: 240, type: !9048, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9050)
!9048 = !DISubroutineType(types: !9049)
!9049 = !{!8966, !61}
!9050 = !{!9051}
!9051 = !DILocalVariable(name: "index", arg: 1, scope: !9047, file: !1431, line: 240, type: !61)
!9052 = !DILocation(line: 0, scope: !9047)
!9053 = !DILocation(line: 242, column: 13, scope: !9047)
!9054 = !DILocation(line: 242, column: 5, scope: !9047)
!9055 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !1431, file: !1431, line: 254, type: !9056, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9058)
!9056 = !DISubroutineType(types: !9057)
!9057 = !{null, !6730, !88, !1075}
!9058 = !{!9059, !9060, !9061, !9062, !9064, !9065}
!9059 = !DILocalVariable(name: "CS", arg: 1, scope: !9055, file: !1431, line: 254, type: !6730)
!9060 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !9055, file: !1431, line: 254, type: !88)
!9061 = !DILocalVariable(name: "flashid", arg: 3, scope: !9055, file: !1431, line: 254, type: !1075)
!9062 = !DILocalVariable(name: "cmd", scope: !9063, file: !1431, line: 258, type: !460)
!9063 = distinct !DILexicalBlock(scope: !9055, file: !1431, line: 257, column: 5)
!9064 = !DILocalVariable(name: "id", scope: !9063, file: !1431, line: 258, type: !1366)
!9065 = !DILocalVariable(name: "i", scope: !9063, file: !1431, line: 258, type: !460)
!9066 = !DILocation(line: 0, scope: !9055)
!9067 = !DILocation(line: 258, column: 9, scope: !9063)
!9068 = !DILocation(line: 258, column: 22, scope: !9063)
!9069 = !DILocation(line: 0, scope: !9063)
!9070 = !DILocation(line: 260, column: 13, scope: !9063)
!9071 = !DILocation(line: 261, column: 9, scope: !9063)
!9072 = !DILocation(line: 263, column: 13, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9063, file: !1431, line: 263, column: 13)
!9074 = !DILocation(line: 263, column: 27, scope: !9073)
!9075 = !DILocation(line: 263, column: 48, scope: !9073)
!9076 = !DILocation(line: 263, column: 13, scope: !9063)
!9077 = !DILocation(line: 264, column: 17, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9073, file: !1431, line: 263, column: 95)
!9079 = !DILocation(line: 265, column: 13, scope: !9078)
!9080 = !DILocation(line: 266, column: 9, scope: !9078)
!9081 = !DILocation(line: 268, column: 9, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9063, file: !1431, line: 268, column: 9)
!9083 = !DILocation(line: 269, column: 26, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9085, file: !1431, line: 268, column: 50)
!9085 = distinct !DILexicalBlock(scope: !9082, file: !1431, line: 268, column: 9)
!9086 = !DILocation(line: 269, column: 13, scope: !9084)
!9087 = !DILocation(line: 269, column: 24, scope: !9084)
!9088 = !DILocation(line: 268, column: 46, scope: !9085)
!9089 = !DILocation(line: 268, column: 23, scope: !9085)
!9090 = distinct !{!9090, !9081, !9091}
!9091 = !DILocation(line: 270, column: 9, scope: !9082)
!9092 = !DILocation(line: 271, column: 5, scope: !9055)
!9093 = !DILocation(line: 272, column: 5, scope: !9055)
!9094 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !1431, file: !1431, line: 285, type: !7208, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9095)
!9095 = !{!9096, !9097, !9098, !9099}
!9096 = !DILocalVariable(name: "id", arg: 1, scope: !9094, file: !1431, line: 285, type: !762)
!9097 = !DILocalVariable(name: "i", scope: !9094, file: !1431, line: 289, type: !985)
!9098 = !DILocalVariable(name: "j", scope: !9094, file: !1431, line: 289, type: !985)
!9099 = !DILocalVariable(name: "id_list", scope: !9094, file: !1431, line: 290, type: !8966)
!9100 = !DILocation(line: 0, scope: !9094)
!9101 = !DILocation(line: 294, column: 5, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9094, file: !1431, line: 294, column: 5)
!9103 = !DILocation(line: 294, column: 46, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9102, file: !1431, line: 294, column: 5)
!9105 = !DILocation(line: 294, column: 19, scope: !9104)
!9106 = distinct !{!9106, !9101, !9107}
!9107 = !DILocation(line: 306, column: 5, scope: !9102)
!9108 = !DILocation(line: 296, column: 23, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9110, file: !1431, line: 296, column: 9)
!9110 = distinct !DILexicalBlock(scope: !9111, file: !1431, line: 296, column: 9)
!9111 = distinct !DILexicalBlock(scope: !9104, file: !1431, line: 294, column: 53)
!9112 = !DILocation(line: 296, column: 9, scope: !9110)
!9113 = !DILocation(line: 297, column: 17, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9115, file: !1431, line: 297, column: 17)
!9115 = distinct !DILexicalBlock(scope: !9109, file: !1431, line: 296, column: 51)
!9116 = !DILocation(line: 297, column: 37, scope: !9114)
!9117 = !DILocation(line: 297, column: 34, scope: !9114)
!9118 = !DILocation(line: 297, column: 17, scope: !9115)
!9119 = !DILocation(line: 296, column: 47, scope: !9109)
!9120 = distinct !{!9120, !9112, !9121}
!9121 = !DILocation(line: 300, column: 9, scope: !9110)
!9122 = !DILocation(line: 0, scope: !9110)
!9123 = !DILocation(line: 302, column: 15, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9111, file: !1431, line: 302, column: 13)
!9125 = !DILocation(line: 302, column: 13, scope: !9111)
!9126 = !DILocation(line: 310, column: 1, scope: !9094)
!9127 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !1431, file: !1431, line: 328, type: !7363, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1430, retainedNodes: !9128)
!9128 = !{!9129, !9130, !9131, !9132}
!9129 = !DILocalVariable(name: "i", scope: !9127, file: !1431, line: 331, type: !985)
!9130 = !DILocalVariable(name: "j", scope: !9127, file: !1431, line: 331, type: !985)
!9131 = !DILocalVariable(name: "id", scope: !9127, file: !1431, line: 332, type: !9000)
!9132 = !DILocalVariable(name: "id_list", scope: !9127, file: !1431, line: 333, type: !8966)
!9133 = !DILocation(line: 332, column: 5, scope: !9127)
!9134 = !DILocation(line: 332, column: 17, scope: !9127)
!9135 = !DILocation(line: 0, scope: !9127)
!9136 = !DILocation(line: 336, column: 9, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9127, file: !1431, line: 336, column: 9)
!9138 = !DILocation(line: 336, column: 28, scope: !9137)
!9139 = !DILocation(line: 336, column: 9, scope: !9127)
!9140 = !DILocation(line: 344, column: 60, scope: !9127)
!9141 = !DILocation(line: 344, column: 5, scope: !9127)
!9142 = !DILocation(line: 350, column: 5, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9127, file: !1431, line: 350, column: 5)
!9144 = !DILocation(line: 352, column: 23, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9146, file: !1431, line: 352, column: 9)
!9146 = distinct !DILexicalBlock(scope: !9147, file: !1431, line: 352, column: 9)
!9147 = distinct !DILexicalBlock(scope: !9148, file: !1431, line: 350, column: 53)
!9148 = distinct !DILexicalBlock(scope: !9143, file: !1431, line: 350, column: 5)
!9149 = !DILocation(line: 352, column: 9, scope: !9146)
!9150 = !DILocation(line: 353, column: 17, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9152, file: !1431, line: 353, column: 17)
!9152 = distinct !DILexicalBlock(scope: !9145, file: !1431, line: 352, column: 51)
!9153 = !DILocation(line: 353, column: 37, scope: !9151)
!9154 = !DILocation(line: 353, column: 34, scope: !9151)
!9155 = !DILocation(line: 353, column: 17, scope: !9152)
!9156 = !DILocation(line: 352, column: 47, scope: !9145)
!9157 = distinct !{!9157, !9149, !9158}
!9158 = !DILocation(line: 356, column: 9, scope: !9146)
!9159 = !DILocation(line: 0, scope: !9146)
!9160 = !DILocation(line: 358, column: 15, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9147, file: !1431, line: 358, column: 13)
!9162 = !DILocation(line: 358, column: 13, scope: !9147)
!9163 = !DILocation(line: 360, column: 34, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9161, file: !1431, line: 358, column: 41)
!9165 = !DILocation(line: 360, column: 32, scope: !9164)
!9166 = !DILocation(line: 361, column: 13, scope: !9164)
!9167 = !DILocation(line: 350, column: 46, scope: !9148)
!9168 = !DILocation(line: 350, column: 19, scope: !9148)
!9169 = distinct !{!9169, !9142, !9170}
!9170 = !DILocation(line: 363, column: 5, scope: !9143)
!9171 = !DILocation(line: 364, column: 12, scope: !9127)
!9172 = !DILocation(line: 365, column: 1, scope: !9127)
!9173 = distinct !DISubprogram(name: "NOR_ReadID", scope: !2626, file: !2626, line: 64, type: !9174, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !9180)
!9174 = !DISubroutineType(types: !9175)
!9175 = !{null, !6730, !9176, !1075}
!9176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9177, size: 32)
!9177 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !9178)
!9178 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !9179, line: 158, baseType: !1076)
!9179 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!9180 = !{!9181, !9182, !9183, !9184, !9185, !9187, !9188}
!9181 = !DILocalVariable(name: "CS", arg: 1, scope: !9173, file: !2626, line: 64, type: !6730)
!9182 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !9173, file: !2626, line: 64, type: !9176)
!9183 = !DILocalVariable(name: "flashid", arg: 3, scope: !9173, file: !2626, line: 64, type: !1075)
!9184 = !DILocalVariable(name: "savedMask", scope: !9173, file: !2626, line: 66, type: !61)
!9185 = !DILocalVariable(name: "cmd", scope: !9186, file: !2626, line: 70, type: !460)
!9186 = distinct !DILexicalBlock(scope: !9173, file: !2626, line: 69, column: 5)
!9187 = !DILocalVariable(name: "id", scope: !9186, file: !2626, line: 70, type: !1366)
!9188 = !DILocalVariable(name: "i", scope: !9186, file: !2626, line: 70, type: !460)
!9189 = !DILocation(line: 0, scope: !9173)
!9190 = !DILocation(line: 70, column: 9, scope: !9186)
!9191 = !DILocation(line: 70, column: 22, scope: !9186)
!9192 = !DILocation(line: 0, scope: !9186)
!9193 = !DILocation(line: 72, column: 13, scope: !9186)
!9194 = !DILocation(line: 73, column: 21, scope: !9186)
!9195 = !DILocation(line: 74, column: 9, scope: !9186)
!9196 = !DILocation(line: 75, column: 9, scope: !9186)
!9197 = !DILocation(line: 77, column: 13, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9186, file: !2626, line: 77, column: 13)
!9199 = !DILocation(line: 77, column: 27, scope: !9198)
!9200 = !DILocation(line: 77, column: 48, scope: !9198)
!9201 = !DILocation(line: 77, column: 13, scope: !9186)
!9202 = !DILocation(line: 78, column: 17, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9198, file: !2626, line: 77, column: 87)
!9204 = !DILocation(line: 79, column: 25, scope: !9203)
!9205 = !DILocation(line: 80, column: 13, scope: !9203)
!9206 = !DILocation(line: 81, column: 13, scope: !9203)
!9207 = !DILocation(line: 82, column: 9, scope: !9203)
!9208 = !DILocation(line: 84, column: 9, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9186, file: !2626, line: 84, column: 9)
!9210 = !DILocation(line: 85, column: 26, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9212, file: !2626, line: 84, column: 50)
!9212 = distinct !DILexicalBlock(scope: !9209, file: !2626, line: 84, column: 9)
!9213 = !DILocation(line: 85, column: 13, scope: !9211)
!9214 = !DILocation(line: 85, column: 24, scope: !9211)
!9215 = !DILocation(line: 84, column: 46, scope: !9212)
!9216 = !DILocation(line: 84, column: 23, scope: !9212)
!9217 = distinct !{!9217, !9208, !9218}
!9218 = !DILocation(line: 86, column: 9, scope: !9209)
!9219 = !DILocation(line: 87, column: 5, scope: !9173)
!9220 = !DILocation(line: 89, column: 1, scope: !9173)
!9221 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !1519, file: !1519, line: 248, type: !3829, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1518, retainedNodes: !293)
!9222 = !DILocation(line: 250, column: 5, scope: !9221)
!9223 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !1519, file: !1519, line: 270, type: !3829, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1518, retainedNodes: !293)
!9224 = !DILocation(line: 272, column: 5, scope: !9223)
!9225 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !1519, file: !1519, line: 294, type: !291, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1518, retainedNodes: !293)
!9226 = !DILocation(line: 296, column: 5, scope: !9225)
!9227 = !DILocation(line: 297, column: 5, scope: !9225)
!9228 = distinct !DISubprogram(name: "nor_sweep_device", scope: !1519, file: !1519, line: 304, type: !291, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1518, retainedNodes: !293)
!9229 = !DILocation(line: 309, column: 5, scope: !9228)
!9230 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !1519, file: !1519, line: 312, type: !291, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1518, retainedNodes: !293)
!9231 = !DILocation(line: 317, column: 5, scope: !9230)
!9232 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !1519, file: !1519, line: 334, type: !3829, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1518, retainedNodes: !293)
!9233 = !DILocation(line: 336, column: 5, scope: !9232)
!9234 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !1519, file: !1519, line: 353, type: !3829, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1518, retainedNodes: !293)
!9235 = !DILocation(line: 355, column: 5, scope: !9234)
!9236 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !1519, file: !1519, line: 374, type: !291, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1518, retainedNodes: !293)
!9237 = !DILocation(line: 376, column: 5, scope: !9236)
!9238 = !DILocation(line: 377, column: 1, scope: !9236)
!9239 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !1519, file: !1519, line: 395, type: !3829, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1518, retainedNodes: !293)
!9240 = !DILocation(line: 397, column: 5, scope: !9239)
!9241 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !1519, file: !1519, line: 416, type: !3829, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1518, retainedNodes: !293)
!9242 = !DILocation(line: 418, column: 5, scope: !9241)
!9243 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !1530, file: !1530, line: 254, type: !3829, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !293)
!9244 = !DILocation(line: 256, column: 32, scope: !9243)
!9245 = !DILocation(line: 257, column: 5, scope: !9243)
!9246 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !1530, file: !1530, line: 269, type: !7363, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !293)
!9247 = !DILocation(line: 275, column: 24, scope: !9246)
!9248 = !DILocation(line: 278, column: 24, scope: !9246)
!9249 = !DILocation(line: 278, column: 33, scope: !9246)
!9250 = !DILocation(line: 278, column: 49, scope: !9246)
!9251 = !DILocation(line: 278, column: 22, scope: !9246)
!9252 = !DILocation(line: 281, column: 5, scope: !9246)
!9253 = !DILocation(line: 283, column: 34, scope: !9246)
!9254 = !DILocation(line: 283, column: 23, scope: !9246)
!9255 = !DILocation(line: 286, column: 25, scope: !9246)
!9256 = !DILocation(line: 321, column: 5, scope: !9246)
!9257 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !1530, file: !1530, line: 332, type: !7363, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !9258)
!9258 = !{!9259}
!9259 = !DILocalVariable(name: "result", scope: !9257, file: !1530, line: 334, type: !985)
!9260 = !DILocation(line: 340, column: 30, scope: !9257)
!9261 = !DILocation(line: 343, column: 24, scope: !9257)
!9262 = !DILocation(line: 344, column: 18, scope: !9257)
!9263 = !DILocation(line: 348, column: 17, scope: !9257)
!9264 = !DILocation(line: 353, column: 19, scope: !9257)
!9265 = !DILocation(line: 354, column: 18, scope: !9257)
!9266 = !DILocation(line: 354, column: 27, scope: !9257)
!9267 = !DILocation(line: 354, column: 43, scope: !9257)
!9268 = !DILocation(line: 350, column: 14, scope: !9257)
!9269 = !DILocation(line: 0, scope: !9257)
!9270 = !DILocation(line: 356, column: 16, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9257, file: !1530, line: 356, column: 9)
!9272 = !DILocation(line: 395, column: 1, scope: !9257)
!9273 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !1530, file: !1530, line: 406, type: !9274, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !293)
!9274 = !DISubroutineType(types: !2561)
!9275 = !DILocation(line: 408, column: 5, scope: !9273)
!9276 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !1530, file: !1530, line: 420, type: !9277, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !9279)
!9277 = !DISubroutineType(types: !9278)
!9278 = !{!61, !460}
!9279 = !{!9280, !9281, !9282}
!9280 = !DILocalVariable(name: "CS", arg: 1, scope: !9276, file: !1530, line: 420, type: !460)
!9281 = !DILocalVariable(name: "index", scope: !9276, file: !1530, line: 422, type: !61)
!9282 = !DILocalVariable(name: "list", scope: !9276, file: !1530, line: 423, type: !1847)
!9283 = !DILocation(line: 0, scope: !9276)
!9284 = !DILocation(line: 427, column: 13, scope: !9276)
!9285 = !DILocation(line: 430, column: 34, scope: !9276)
!9286 = !DILocation(line: 430, column: 5, scope: !9276)
!9287 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !1530, file: !1530, line: 442, type: !9288, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !9290)
!9288 = !DISubroutineType(types: !9289)
!9289 = !{!61, !61, !1719}
!9290 = !{!9291, !9292, !9293}
!9291 = !DILocalVariable(name: "address", arg: 1, scope: !9287, file: !1530, line: 442, type: !61)
!9292 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !9287, file: !1530, line: 442, type: !1719)
!9293 = !DILocalVariable(name: "i", scope: !9287, file: !1530, line: 444, type: !1076)
!9294 = !DILocation(line: 0, scope: !9287)
!9295 = !DILocation(line: 446, column: 23, scope: !9287)
!9296 = !DILocation(line: 448, column: 36, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9298, file: !1530, line: 448, column: 5)
!9298 = distinct !DILexicalBlock(scope: !9287, file: !1530, line: 448, column: 5)
!9299 = !DILocation(line: 448, column: 41, scope: !9297)
!9300 = !DILocation(line: 448, column: 5, scope: !9298)
!9301 = !DILocation(line: 449, column: 39, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9303, file: !1530, line: 449, column: 13)
!9303 = distinct !DILexicalBlock(scope: !9297, file: !1530, line: 448, column: 54)
!9304 = !DILocation(line: 449, column: 21, scope: !9302)
!9305 = !DILocation(line: 449, column: 46, scope: !9302)
!9306 = !DILocation(line: 450, column: 46, scope: !9302)
!9307 = !DILocation(line: 450, column: 25, scope: !9302)
!9308 = !DILocation(line: 449, column: 13, scope: !9303)
!9309 = !DILocation(line: 448, column: 48, scope: !9297)
!9310 = !DILocation(line: 448, column: 29, scope: !9297)
!9311 = !DILocation(line: 448, column: 31, scope: !9297)
!9312 = distinct !{!9312, !9300, !9313}
!9313 = !DILocation(line: 453, column: 5, scope: !9298)
!9314 = !DILocation(line: 454, column: 27, scope: !9287)
!9315 = !DILocation(line: 454, column: 5, scope: !9287)
!9316 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !1530, file: !1530, line: 462, type: !3577, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !9317)
!9317 = !{!9318}
!9318 = !DILocalVariable(name: "address", arg: 1, scope: !9316, file: !1530, line: 462, type: !61)
!9319 = !DILocation(line: 0, scope: !9316)
!9320 = !DILocation(line: 464, column: 45, scope: !9316)
!9321 = !DILocation(line: 464, column: 12, scope: !9316)
!9322 = !DILocation(line: 464, column: 5, scope: !9316)
!9323 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !1530, file: !1530, line: 487, type: !3577, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !9324)
!9324 = !{!9325, !9326, !9327}
!9325 = !DILocalVariable(name: "address", arg: 1, scope: !9323, file: !1530, line: 487, type: !61)
!9326 = !DILocalVariable(name: "index", scope: !9323, file: !1530, line: 490, type: !61)
!9327 = !DILocalVariable(name: "list", scope: !9323, file: !1530, line: 491, type: !1847)
!9328 = !DILocation(line: 0, scope: !9323)
!9329 = !DILocation(line: 490, column: 22, scope: !9323)
!9330 = !DILocation(line: 495, column: 45, scope: !9323)
!9331 = !DILocation(line: 495, column: 12, scope: !9323)
!9332 = !DILocation(line: 495, column: 5, scope: !9323)
!9333 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !1530, file: !1530, line: 517, type: !9334, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !9338)
!9334 = !DISubroutineType(types: !9335)
!9335 = !{!985, !9336}
!9336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9337, size: 32)
!9337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1733)
!9338 = !{!9339, !9340, !9341}
!9339 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !9333, file: !1530, line: 517, type: !9336)
!9340 = !DILocalVariable(name: "result", scope: !9333, file: !1530, line: 519, type: !61)
!9341 = !DILocalVariable(name: "i", scope: !9333, file: !1530, line: 519, type: !61)
!9342 = !DILocation(line: 0, scope: !9333)
!9343 = !DILocation(line: 522, column: 29, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9345, file: !1530, line: 522, column: 5)
!9345 = distinct !DILexicalBlock(scope: !9333, file: !1530, line: 522, column: 5)
!9346 = !DILocation(line: 522, column: 38, scope: !9344)
!9347 = !DILocation(line: 522, column: 5, scope: !9345)
!9348 = !DILocation(line: 523, column: 31, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9344, file: !1530, line: 522, column: 51)
!9350 = !DILocation(line: 523, column: 37, scope: !9349)
!9351 = !DILocation(line: 523, column: 16, scope: !9349)
!9352 = !DILocation(line: 522, column: 45, scope: !9344)
!9353 = distinct !{!9353, !9347, !9354}
!9354 = !DILocation(line: 524, column: 5, scope: !9345)
!9355 = !DILocation(line: 525, column: 5, scope: !9333)
!9356 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !1530, file: !1530, line: 535, type: !9357, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !9359)
!9357 = !DISubroutineType(types: !9358)
!9358 = !{!61, !61, !61, !1545, !1719}
!9359 = !{!9360, !9361, !9362, !9363, !9364, !9365, !9366, !9367, !9368}
!9360 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9356, file: !1530, line: 536, type: !61)
!9361 = !DILocalVariable(name: "length", arg: 2, scope: !9356, file: !1530, line: 537, type: !61)
!9362 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9356, file: !1530, line: 538, type: !1545)
!9363 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !9356, file: !1530, line: 539, type: !1719)
!9364 = !DILocalVariable(name: "addr", scope: !9356, file: !1530, line: 541, type: !61)
!9365 = !DILocalVariable(name: "ptr", scope: !9356, file: !1530, line: 541, type: !61)
!9366 = !DILocalVariable(name: "blksize", scope: !9356, file: !1530, line: 541, type: !61)
!9367 = !DILocalVariable(name: "total_blocks", scope: !9356, file: !1530, line: 541, type: !61)
!9368 = !DILocalVariable(name: "endaddr", scope: !9356, file: !1530, line: 542, type: !61)
!9369 = !DILocation(line: 0, scope: !9356)
!9370 = !DILocation(line: 542, column: 33, scope: !9356)
!9371 = !DILocation(line: 557, column: 59, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9373, file: !1530, line: 557, column: 5)
!9373 = distinct !DILexicalBlock(scope: !9356, file: !1530, line: 557, column: 5)
!9374 = !DILocation(line: 557, column: 5, scope: !9373)
!9375 = !DILocation(line: 560, column: 19, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9372, file: !1530, line: 559, column: 5)
!9377 = !DILocation(line: 562, column: 26, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9376, file: !1530, line: 562, column: 13)
!9379 = !DILocation(line: 0, scope: !9378)
!9380 = !DILocation(line: 562, column: 13, scope: !9376)
!9381 = !DILocation(line: 563, column: 39, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9378, file: !1530, line: 562, column: 34)
!9383 = !DILocation(line: 564, column: 29, scope: !9382)
!9384 = !DILocation(line: 564, column: 42, scope: !9382)
!9385 = !DILocation(line: 565, column: 9, scope: !9382)
!9386 = !DILocation(line: 567, column: 45, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9378, file: !1530, line: 567, column: 18)
!9388 = !DILocation(line: 567, column: 26, scope: !9387)
!9389 = !DILocation(line: 567, column: 18, scope: !9378)
!9390 = !DILocation(line: 568, column: 29, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9387, file: !1530, line: 567, column: 59)
!9392 = !DILocation(line: 568, column: 41, scope: !9391)
!9393 = !DILocation(line: 569, column: 9, scope: !9391)
!9394 = !DILocation(line: 572, column: 16, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9387, file: !1530, line: 571, column: 14)
!9396 = !DILocation(line: 573, column: 21, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9395, file: !1530, line: 573, column: 17)
!9398 = !DILocation(line: 573, column: 17, scope: !9395)
!9399 = !DILocation(line: 576, column: 29, scope: !9395)
!9400 = !DILocation(line: 576, column: 39, scope: !9395)
!9401 = !DILocation(line: 577, column: 29, scope: !9395)
!9402 = !DILocation(line: 577, column: 42, scope: !9395)
!9403 = !DILocation(line: 0, scope: !9373)
!9404 = !DILocation(line: 579, column: 14, scope: !9376)
!9405 = !DILocation(line: 580, column: 21, scope: !9376)
!9406 = distinct !{!9406, !9374, !9407}
!9407 = !DILocation(line: 581, column: 5, scope: !9373)
!9408 = !DILocation(line: 586, column: 1, scope: !9356)
!9409 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !1530, file: !1530, line: 593, type: !9410, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !9412)
!9410 = !DISubroutineType(types: !9411)
!9411 = !{!985, !61, !61, !1545}
!9412 = !{!9413, !9414, !9415}
!9413 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9409, file: !1530, line: 593, type: !61)
!9414 = !DILocalVariable(name: "length", arg: 2, scope: !9409, file: !1530, line: 593, type: !61)
!9415 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9409, file: !1530, line: 593, type: !1545)
!9416 = !DILocation(line: 0, scope: !9409)
!9417 = !DILocation(line: 595, column: 12, scope: !9409)
!9418 = !DILocation(line: 595, column: 5, scope: !9409)
!9419 = !DILocation(line: 597, column: 81, scope: !9409)
!9420 = !DILocation(line: 597, column: 12, scope: !9409)
!9421 = !DILocation(line: 597, column: 5, scope: !9409)
!9422 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !1530, file: !1530, line: 606, type: !9410, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !9423)
!9423 = !{!9424, !9425, !9426}
!9424 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9422, file: !1530, line: 606, type: !61)
!9425 = !DILocalVariable(name: "length", arg: 2, scope: !9422, file: !1530, line: 606, type: !61)
!9426 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9422, file: !1530, line: 606, type: !1545)
!9427 = !DILocation(line: 0, scope: !9422)
!9428 = !DILocation(line: 624, column: 5, scope: !9422)
!9429 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !1530, file: !1530, line: 637, type: !9410, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !9430)
!9430 = !{!9431, !9432, !9433, !9434, !9435}
!9431 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9429, file: !1530, line: 637, type: !61)
!9432 = !DILocalVariable(name: "length", arg: 2, scope: !9429, file: !1530, line: 637, type: !61)
!9433 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9429, file: !1530, line: 637, type: !1545)
!9434 = !DILocalVariable(name: "index", scope: !9429, file: !1530, line: 642, type: !61)
!9435 = !DILocalVariable(name: "list", scope: !9429, file: !1530, line: 644, type: !1847)
!9436 = !DILocation(line: 0, scope: !9429)
!9437 = !DILocation(line: 642, column: 22, scope: !9429)
!9438 = !DILocation(line: 648, column: 81, scope: !9429)
!9439 = !DILocation(line: 648, column: 12, scope: !9429)
!9440 = !DILocation(line: 648, column: 5, scope: !9429)
!9441 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !1530, file: !1530, line: 658, type: !9410, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !9442)
!9442 = !{!9443, !9444, !9445}
!9443 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9441, file: !1530, line: 658, type: !61)
!9444 = !DILocalVariable(name: "length", arg: 2, scope: !9441, file: !1530, line: 658, type: !61)
!9445 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9441, file: !1530, line: 658, type: !1545)
!9446 = !DILocation(line: 0, scope: !9441)
!9447 = !DILocation(line: 688, column: 5, scope: !9441)
!9448 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !1530, file: !1530, line: 700, type: !6797, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !9449)
!9449 = !{!9450, !9451, !9452}
!9450 = !DILocalVariable(name: "CS", arg: 1, scope: !9448, file: !1530, line: 700, type: !6730)
!9451 = !DILocalVariable(name: "index", scope: !9448, file: !1530, line: 705, type: !61)
!9452 = !DILocalVariable(name: "list", scope: !9448, file: !1530, line: 707, type: !1847)
!9453 = !DILocation(line: 0, scope: !9448)
!9454 = !DILocation(line: 705, column: 22, scope: !9448)
!9455 = !DILocation(line: 711, column: 24, scope: !9448)
!9456 = !DILocation(line: 711, column: 5, scope: !9448)
!9457 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !1530, file: !1530, line: 721, type: !9458, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !9460)
!9458 = !DISubroutineType(types: !9459)
!9459 = !{null, !1765, !1044, !61}
!9460 = !{!9461, !9462, !9463}
!9461 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !9457, file: !1530, line: 721, type: !1765)
!9462 = !DILocalVariable(name: "index", arg: 2, scope: !9457, file: !1530, line: 721, type: !1044)
!9463 = !DILocalVariable(name: "bankSize", arg: 3, scope: !9457, file: !1530, line: 721, type: !61)
!9464 = !DILocation(line: 0, scope: !9457)
!9465 = !DILocation(line: 723, column: 18, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9457, file: !1530, line: 723, column: 9)
!9467 = !DILocation(line: 723, column: 26, scope: !9466)
!9468 = !DILocation(line: 723, column: 35, scope: !9466)
!9469 = !DILocation(line: 723, column: 9, scope: !9457)
!9470 = !DILocation(line: 724, column: 26, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9466, file: !1530, line: 723, column: 48)
!9472 = !DILocation(line: 724, column: 32, scope: !9471)
!9473 = !DILocation(line: 725, column: 5, scope: !9471)
!9474 = !DILocation(line: 726, column: 18, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9466, file: !1530, line: 725, column: 12)
!9476 = !DILocation(line: 727, column: 26, scope: !9475)
!9477 = !DILocation(line: 727, column: 32, scope: !9475)
!9478 = !DILocation(line: 728, column: 18, scope: !9475)
!9479 = !DILocation(line: 728, column: 26, scope: !9475)
!9480 = !DILocation(line: 728, column: 35, scope: !9475)
!9481 = !DILocation(line: 731, column: 1, scope: !9457)
!9482 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !1530, file: !1530, line: 739, type: !9483, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !9485)
!9483 = !DISubroutineType(types: !9484)
!9484 = !{!61, !61, !61, !1765, !9336}
!9485 = !{!9486, !9487, !9488, !9489, !9490, !9491, !9492, !9493, !9494}
!9486 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9482, file: !1530, line: 740, type: !61)
!9487 = !DILocalVariable(name: "length", arg: 2, scope: !9482, file: !1530, line: 741, type: !61)
!9488 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !9482, file: !1530, line: 742, type: !1765)
!9489 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !9482, file: !1530, line: 743, type: !9336)
!9490 = !DILocalVariable(name: "Partition", scope: !9482, file: !1530, line: 745, type: !61)
!9491 = !DILocalVariable(name: "Index", scope: !9482, file: !1530, line: 746, type: !985)
!9492 = !DILocalVariable(name: "bankSize", scope: !9482, file: !1530, line: 747, type: !61)
!9493 = !DILocalVariable(name: "NextBankAddr", scope: !9482, file: !1530, line: 748, type: !61)
!9494 = !DILocalVariable(name: "srcBankIdx", scope: !9482, file: !1530, line: 748, type: !61)
!9495 = !DILocation(line: 0, scope: !9482)
!9496 = !DILocation(line: 750, column: 12, scope: !9482)
!9497 = !DILocation(line: 750, column: 5, scope: !9482)
!9498 = !DILocation(line: 752, column: 51, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9500, file: !1530, line: 752, column: 5)
!9500 = distinct !DILexicalBlock(scope: !9482, file: !1530, line: 752, column: 5)
!9501 = !DILocation(line: 752, column: 5, scope: !9500)
!9502 = !DILocation(line: 753, column: 51, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9504, file: !1530, line: 753, column: 13)
!9504 = distinct !DILexicalBlock(scope: !9499, file: !1530, line: 752, column: 70)
!9505 = !DILocation(line: 753, column: 24, scope: !9503)
!9506 = !DILocation(line: 753, column: 13, scope: !9504)
!9507 = !DILocation(line: 758, column: 49, scope: !9504)
!9508 = !DILocation(line: 758, column: 22, scope: !9504)
!9509 = !DILocation(line: 760, column: 22, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9504, file: !1530, line: 760, column: 13)
!9511 = !DILocation(line: 760, column: 13, scope: !9504)
!9512 = !DILocation(line: 761, column: 37, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9510, file: !1530, line: 760, column: 39)
!9514 = !DILocation(line: 762, column: 24, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9513, file: !1530, line: 762, column: 17)
!9516 = !DILocation(line: 762, column: 17, scope: !9513)
!9517 = !DILocation(line: 767, column: 33, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9513, file: !1530, line: 767, column: 17)
!9519 = !DILocation(line: 767, column: 42, scope: !9518)
!9520 = !DILocation(line: 767, column: 17, scope: !9513)
!9521 = !DILocation(line: 768, column: 33, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9518, file: !1530, line: 767, column: 55)
!9523 = !DILocation(line: 768, column: 39, scope: !9522)
!9524 = !DILocation(line: 769, column: 13, scope: !9522)
!9525 = !DILocation(line: 770, column: 46, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9527, file: !1530, line: 770, column: 21)
!9527 = distinct !DILexicalBlock(scope: !9518, file: !1530, line: 769, column: 20)
!9528 = !DILocation(line: 770, column: 21, scope: !9527)
!9529 = !DILocation(line: 773, column: 33, scope: !9527)
!9530 = !DILocation(line: 773, column: 39, scope: !9527)
!9531 = !DILocation(line: 774, column: 33, scope: !9527)
!9532 = !DILocation(line: 774, column: 42, scope: !9527)
!9533 = !DILocation(line: 777, column: 22, scope: !9513)
!9534 = !DILocation(line: 778, column: 20, scope: !9513)
!9535 = !DILocation(line: 779, column: 9, scope: !9513)
!9536 = !DILocation(line: 746, column: 13, scope: !9482)
!9537 = !DILocation(line: 752, column: 66, scope: !9499)
!9538 = distinct !{!9538, !9501, !9539}
!9539 = !DILocation(line: 781, column: 5, scope: !9500)
!9540 = !DILocation(line: 784, column: 5, scope: !9482)
!9541 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !1530, file: !1530, line: 796, type: !7363, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !9542)
!9542 = !{!9543, !9544}
!9543 = !DILocalVariable(name: "result", scope: !9541, file: !1530, line: 798, type: !985)
!9544 = !DILocalVariable(name: "i", scope: !9541, file: !1530, line: 799, type: !985)
!9545 = !DILocation(line: 803, column: 19, scope: !9541)
!9546 = !DILocation(line: 803, column: 28, scope: !9541)
!9547 = !DILocation(line: 803, column: 17, scope: !9541)
!9548 = !DILocation(line: 822, column: 33, scope: !9541)
!9549 = !DILocation(line: 822, column: 56, scope: !9541)
!9550 = !DILocation(line: 822, column: 88, scope: !9541)
!9551 = !DILocation(line: 822, column: 97, scope: !9541)
!9552 = !DILocation(line: 822, column: 5, scope: !9541)
!9553 = !DILocation(line: 829, column: 39, scope: !9541)
!9554 = !DILocation(line: 829, column: 62, scope: !9541)
!9555 = !DILocation(line: 829, column: 14, scope: !9541)
!9556 = !DILocation(line: 0, scope: !9541)
!9557 = !DILocation(line: 834, column: 16, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9541, file: !1530, line: 834, column: 9)
!9559 = !DILocation(line: 834, column: 9, scope: !9541)
!9560 = !DILocation(line: 838, column: 30, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9541, file: !1530, line: 838, column: 5)
!9562 = !DILocation(line: 838, column: 58, scope: !9561)
!9563 = !DILocation(line: 838, column: 78, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9561, file: !1530, line: 838, column: 5)
!9565 = !DILocation(line: 838, column: 88, scope: !9564)
!9566 = !DILocation(line: 838, column: 5, scope: !9561)
!9567 = !DILocation(line: 839, column: 39, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9564, file: !1530, line: 838, column: 102)
!9569 = !DILocation(line: 839, column: 22, scope: !9568)
!9570 = !DILocation(line: 840, column: 37, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9568, file: !1530, line: 840, column: 13)
!9572 = !DILocation(line: 840, column: 13, scope: !9568)
!9573 = !DILocation(line: 841, column: 36, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9571, file: !1530, line: 840, column: 63)
!9575 = !DILocation(line: 842, column: 9, scope: !9574)
!9576 = !DILocation(line: 838, column: 95, scope: !9564)
!9577 = distinct !{!9577, !9566, !9578}
!9578 = !DILocation(line: 843, column: 5, scope: !9561)
!9579 = !DILocation(line: 871, column: 49, scope: !9541)
!9580 = !DILocation(line: 871, column: 72, scope: !9541)
!9581 = !DILocation(line: 871, column: 47, scope: !9541)
!9582 = !DILocation(line: 871, column: 97, scope: !9541)
!9583 = !DILocation(line: 871, column: 19, scope: !9541)
!9584 = !DILocation(line: 882, column: 14, scope: !9541)
!9585 = !DILocation(line: 887, column: 13, scope: !9541)
!9586 = !DILocation(line: 887, column: 22, scope: !9541)
!9587 = !DILocation(line: 887, column: 5, scope: !9541)
!9588 = !DILocation(line: 889, column: 22, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9541, file: !1530, line: 887, column: 34)
!9590 = !DILocation(line: 890, column: 13, scope: !9589)
!9591 = !DILocation(line: 902, column: 1, scope: !9541)
!9592 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !1530, file: !1530, line: 912, type: !9593, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !9595)
!9593 = !DISubroutineType(types: !9594)
!9594 = !{null, !772}
!9595 = !{!9596}
!9596 = !DILocalVariable(name: "CS", arg: 1, scope: !9592, file: !1530, line: 912, type: !772)
!9597 = !DILocation(line: 0, scope: !9592)
!9598 = !DILocation(line: 914, column: 12, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9592, file: !1530, line: 914, column: 9)
!9600 = !DILocation(line: 914, column: 9, scope: !9592)
!9601 = !DILocation(line: 918, column: 26, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9599, file: !1530, line: 914, column: 18)
!9603 = !DILocation(line: 918, column: 24, scope: !9602)
!9604 = !DILocation(line: 920, column: 28, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9602, file: !1530, line: 920, column: 13)
!9606 = !DILocation(line: 920, column: 13, scope: !9602)
!9607 = !DILocation(line: 921, column: 13, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9609, file: !1530, line: 921, column: 13)
!9609 = distinct !DILexicalBlock(scope: !9610, file: !1530, line: 921, column: 13)
!9610 = distinct !DILexicalBlock(scope: !9611, file: !1530, line: 921, column: 13)
!9611 = distinct !DILexicalBlock(scope: !9605, file: !1530, line: 920, column: 33)
!9612 = !DILocation(line: 923, column: 19, scope: !9602)
!9613 = !DILocation(line: 923, column: 17, scope: !9602)
!9614 = !DILocation(line: 924, column: 5, scope: !9602)
!9615 = !DILocation(line: 935, column: 14, scope: !9592)
!9616 = !DILocation(line: 936, column: 1, scope: !9592)
!9617 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !1530, file: !1530, line: 952, type: !7363, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !293)
!9618 = !DILocation(line: 955, column: 5, scope: !9617)
!9619 = !DILocation(line: 956, column: 12, scope: !9617)
!9620 = !DILocation(line: 956, column: 5, scope: !9617)
!9621 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !1530, file: !1530, line: 974, type: !7363, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !9622)
!9622 = !{!9623}
!9623 = !DILocalVariable(name: "result", scope: !9621, file: !1530, line: 976, type: !985)
!9624 = !DILocation(line: 981, column: 5, scope: !9621)
!9625 = !DILocation(line: 986, column: 24, scope: !9621)
!9626 = !DILocation(line: 986, column: 33, scope: !9621)
!9627 = !DILocation(line: 986, column: 49, scope: !9621)
!9628 = !DILocation(line: 986, column: 22, scope: !9621)
!9629 = !DILocation(line: 1002, column: 19, scope: !9621)
!9630 = !DILocation(line: 1002, column: 17, scope: !9621)
!9631 = !DILocation(line: 1014, column: 22, scope: !9621)
!9632 = !DILocation(line: 1014, column: 5, scope: !9621)
!9633 = !DILocation(line: 1024, column: 33, scope: !9621)
!9634 = !DILocation(line: 1026, column: 27, scope: !9621)
!9635 = !DILocation(line: 1027, column: 26, scope: !9621)
!9636 = !DILocation(line: 1042, column: 33, scope: !9621)
!9637 = !DILocation(line: 1044, column: 32, scope: !9621)
!9638 = !DILocation(line: 1052, column: 18, scope: !9621)
!9639 = !DILocation(line: 1052, column: 27, scope: !9621)
!9640 = !DILocation(line: 1052, column: 43, scope: !9621)
!9641 = !DILocation(line: 1048, column: 14, scope: !9621)
!9642 = !DILocation(line: 0, scope: !9621)
!9643 = !DILocation(line: 1063, column: 5, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9645, file: !1530, line: 1063, column: 5)
!9645 = distinct !DILexicalBlock(scope: !9621, file: !1530, line: 1063, column: 5)
!9646 = !DILocation(line: 1063, column: 5, scope: !9645)
!9647 = !DILocation(line: 1063, column: 5, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9644, file: !1530, line: 1063, column: 5)
!9649 = !DILocation(line: 1096, column: 36, scope: !9621)
!9650 = !DILocation(line: 1096, column: 34, scope: !9621)
!9651 = !DILocation(line: 1101, column: 5, scope: !9621)
!9652 = !DILocation(line: 1103, column: 34, scope: !9621)
!9653 = !DILocation(line: 1109, column: 35, scope: !9621)
!9654 = !DILocation(line: 1110, column: 33, scope: !9621)
!9655 = !DILocation(line: 1111, column: 34, scope: !9621)
!9656 = !DILocation(line: 1113, column: 5, scope: !9621)
!9657 = distinct !DISubprogram(name: "CreateFDMLock", scope: !1888, file: !1888, line: 84, type: !291, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !293)
!9658 = !DILocation(line: 86, column: 1, scope: !9657)
!9659 = distinct !DISubprogram(name: "GetFDMLock", scope: !1888, file: !1888, line: 87, type: !7829, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !9660)
!9660 = !{!9661}
!9661 = !DILocalVariable(name: "savedMask", scope: !9659, file: !1888, line: 89, type: !985)
!9662 = !DILocation(line: 90, column: 17, scope: !9659)
!9663 = !DILocation(line: 0, scope: !9659)
!9664 = !DILocation(line: 91, column: 9, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9659, file: !1888, line: 91, column: 9)
!9666 = !DILocation(line: 91, column: 9, scope: !9659)
!9667 = !DILocation(line: 92, column: 17, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9665, file: !1888, line: 91, column: 24)
!9669 = !DILocation(line: 94, column: 9, scope: !9668)
!9670 = !DILocation(line: 0, scope: !9665)
!9671 = !DILocation(line: 102, column: 1, scope: !9659)
!9672 = distinct !DISubprogram(name: "FreeFDMLock", scope: !1888, file: !1888, line: 103, type: !291, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !9673)
!9673 = !{!9674}
!9674 = !DILocalVariable(name: "savedMask", scope: !9672, file: !1888, line: 105, type: !985)
!9675 = !DILocation(line: 106, column: 17, scope: !9672)
!9676 = !DILocation(line: 0, scope: !9672)
!9677 = !DILocation(line: 107, column: 9, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9672, file: !1888, line: 107, column: 9)
!9679 = !DILocation(line: 107, column: 9, scope: !9672)
!9680 = !DILocation(line: 108, column: 17, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9678, file: !1888, line: 107, column: 24)
!9682 = !DILocation(line: 109, column: 9, scope: !9681)
!9683 = !DILocation(line: 114, column: 1, scope: !9672)
!9684 = !DILocation(line: 111, column: 9, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9678, file: !1888, line: 110, column: 12)
!9686 = !DILocation(line: 112, column: 9, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9688, file: !1888, line: 112, column: 9)
!9688 = distinct !DILexicalBlock(scope: !9689, file: !1888, line: 112, column: 9)
!9689 = distinct !DILexicalBlock(scope: !9685, file: !1888, line: 112, column: 9)
!9690 = distinct !DISubprogram(name: "create_FDM_lock", scope: !1888, file: !1888, line: 119, type: !291, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !293)
!9691 = !DILocation(line: 123, column: 1, scope: !9690)
!9692 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !1888, file: !1888, line: 130, type: !291, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !9693)
!9693 = !{!9694}
!9694 = !DILocalVariable(name: "Result", scope: !9692, file: !1888, line: 132, type: !1944)
!9695 = !DILocation(line: 133, column: 5, scope: !9692)
!9696 = !DILocation(line: 134, column: 18, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9692, file: !1888, line: 133, column: 8)
!9698 = !DILocation(line: 0, scope: !9692)
!9699 = !DILocation(line: 135, column: 21, scope: !9692)
!9700 = !DILocation(line: 135, column: 5, scope: !9697)
!9701 = distinct !{!9701, !9695, !9702}
!9702 = !DILocation(line: 135, column: 43, scope: !9692)
!9703 = !DILocation(line: 136, column: 1, scope: !9692)
!9704 = distinct !DISubprogram(name: "release_FDM_lock", scope: !1888, file: !1888, line: 143, type: !291, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !293)
!9705 = !DILocation(line: 147, column: 5, scope: !9704)
!9706 = !DILocation(line: 148, column: 1, scope: !9704)
!9707 = distinct !DISubprogram(name: "readRawDiskData", scope: !1888, file: !1888, line: 216, type: !9708, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !9749)
!9708 = !DISubroutineType(types: !9709)
!9709 = !{!985, !9710, !61, !762, !61}
!9710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9711, size: 32)
!9711 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1835, line: 93, baseType: !9712)
!9712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1835, line: 83, size: 1056, elements: !9713)
!9713 = !{!9714, !9715, !9735, !9736, !9748}
!9714 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !9712, file: !1835, line: 84, baseType: !61, size: 32)
!9715 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !9712, file: !1835, line: 85, baseType: !9716, size: 32, offset: 32)
!9716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9717, size: 32)
!9717 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1302, line: 121, baseType: !9718)
!9718 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 105, size: 480, elements: !9719)
!9719 = !{!9720, !9721, !9722, !9723, !9724, !9725, !9726, !9727, !9728, !9729, !9730, !9731, !9732, !9733, !9734}
!9720 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !9718, file: !1302, line: 106, baseType: !1576, size: 32)
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !9718, file: !1302, line: 107, baseType: !1377, size: 32, offset: 32)
!9722 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !9718, file: !1302, line: 108, baseType: !1581, size: 32, offset: 64)
!9723 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !9718, file: !1302, line: 109, baseType: !1585, size: 32, offset: 96)
!9724 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !9718, file: !1302, line: 110, baseType: !1589, size: 32, offset: 128)
!9725 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !9718, file: !1302, line: 111, baseType: !1585, size: 32, offset: 160)
!9726 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !9718, file: !1302, line: 112, baseType: !1594, size: 32, offset: 192)
!9727 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !9718, file: !1302, line: 113, baseType: !1585, size: 32, offset: 224)
!9728 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !9718, file: !1302, line: 114, baseType: !1585, size: 32, offset: 256)
!9729 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !9718, file: !1302, line: 115, baseType: !1585, size: 32, offset: 288)
!9730 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !9718, file: !1302, line: 116, baseType: !1601, size: 32, offset: 320)
!9731 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !9718, file: !1302, line: 117, baseType: !1606, size: 32, offset: 352)
!9732 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !9718, file: !1302, line: 118, baseType: !1611, size: 32, offset: 384)
!9733 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !9718, file: !1302, line: 119, baseType: !1615, size: 32, offset: 416)
!9734 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !9718, file: !1302, line: 120, baseType: !1619, size: 32, offset: 448)
!9735 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !9712, file: !1835, line: 86, baseType: !88, size: 32, offset: 64)
!9736 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !9712, file: !1835, line: 87, baseType: !9737, size: 928, offset: 96)
!9737 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1302, line: 99, baseType: !9738)
!9738 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1302, line: 90, size: 928, elements: !9739)
!9739 = !{!9740, !9741, !9742, !9743, !9744, !9745, !9746, !9747}
!9740 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !9738, file: !1302, line: 91, baseType: !61, size: 32)
!9741 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !9738, file: !1302, line: 92, baseType: !1633, size: 256, offset: 32)
!9742 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !9738, file: !1302, line: 93, baseType: !1633, size: 256, offset: 288)
!9743 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !9738, file: !1302, line: 94, baseType: !1633, size: 256, offset: 544)
!9744 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !9738, file: !1302, line: 95, baseType: !61, size: 32, offset: 800)
!9745 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !9738, file: !1302, line: 96, baseType: !1625, size: 16, offset: 832)
!9746 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !9738, file: !1302, line: 97, baseType: !61, size: 32, offset: 864)
!9747 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !9738, file: !1302, line: 98, baseType: !61, size: 32, offset: 896)
!9748 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !9712, file: !1835, line: 92, baseType: !91, size: 8, offset: 1024)
!9749 = !{!9750, !9751, !9752, !9753, !9754, !9755}
!9750 = !DILocalVariable(name: "D", arg: 1, scope: !9707, file: !1888, line: 216, type: !9710)
!9751 = !DILocalVariable(name: "addr", arg: 2, scope: !9707, file: !1888, line: 216, type: !61)
!9752 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9707, file: !1888, line: 216, type: !762)
!9753 = !DILocalVariable(name: "len", arg: 4, scope: !9707, file: !1888, line: 216, type: !61)
!9754 = !DILocalVariable(name: "phyAddr", scope: !9707, file: !1888, line: 219, type: !61)
!9755 = !DILocalVariable(name: "diskSize", scope: !9707, file: !1888, line: 220, type: !61)
!9756 = !DILocation(line: 0, scope: !9707)
!9757 = !DILocation(line: 220, column: 28, scope: !9707)
!9758 = !DILocation(line: 222, column: 14, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9707, file: !1888, line: 222, column: 9)
!9760 = !DILocation(line: 222, column: 26, scope: !9759)
!9761 = !DILocation(line: 225, column: 51, scope: !9707)
!9762 = !DILocation(line: 225, column: 61, scope: !9707)
!9763 = !DILocation(line: 225, column: 15, scope: !9707)
!9764 = !DILocation(line: 225, column: 70, scope: !9707)
!9765 = !DILocation(line: 227, column: 13, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9707, file: !1888, line: 227, column: 9)
!9767 = !DILocation(line: 227, column: 9, scope: !9707)
!9768 = !DILocation(line: 228, column: 9, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9766, file: !1888, line: 227, column: 23)
!9770 = !DILocation(line: 229, column: 5, scope: !9769)
!9771 = !DILocation(line: 231, column: 5, scope: !9707)
!9772 = !DILocation(line: 233, column: 22, scope: !9707)
!9773 = !DILocation(line: 233, column: 5, scope: !9707)
!9774 = !DILocation(line: 235, column: 5, scope: !9707)
!9775 = !DILocation(line: 237, column: 5, scope: !9707)
!9776 = !DILocation(line: 238, column: 1, scope: !9707)
!9777 = distinct !DISubprogram(name: "MountDevice", scope: !1888, file: !1888, line: 165, type: !9778, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !9780)
!9778 = !DISubroutineType(types: !9779)
!9779 = !{null, !9710}
!9780 = !{!9781, !9782}
!9781 = !DILocalVariable(name: "D", arg: 1, scope: !9777, file: !1888, line: 165, type: !9710)
!9782 = !DILocalVariable(name: "Result", scope: !9777, file: !1888, line: 167, type: !985)
!9783 = !DILocation(line: 0, scope: !9777)
!9784 = !DILocation(line: 171, column: 12, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9777, file: !1888, line: 171, column: 9)
!9786 = !DILocation(line: 171, column: 9, scope: !9777)
!9787 = !DILocation(line: 176, column: 5, scope: !9777)
!9788 = !DILocation(line: 186, column: 17, scope: !9777)
!9789 = !DILocation(line: 186, column: 28, scope: !9777)
!9790 = !DILocation(line: 186, column: 43, scope: !9777)
!9791 = !DILocation(line: 186, column: 64, scope: !9777)
!9792 = !DILocation(line: 186, column: 52, scope: !9777)
!9793 = !DILocation(line: 186, column: 14, scope: !9777)
!9794 = !DILocation(line: 188, column: 5, scope: !9777)
!9795 = !DILocation(line: 190, column: 16, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9777, file: !1888, line: 190, column: 9)
!9797 = !DILocation(line: 190, column: 9, scope: !9777)
!9798 = !DILocation(line: 191, column: 9, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9800, file: !1888, line: 191, column: 9)
!9800 = distinct !DILexicalBlock(scope: !9801, file: !1888, line: 191, column: 9)
!9801 = distinct !DILexicalBlock(scope: !9802, file: !1888, line: 191, column: 9)
!9802 = distinct !DILexicalBlock(scope: !9796, file: !1888, line: 190, column: 31)
!9803 = !DILocation(line: 194, column: 17, scope: !9777)
!9804 = !DILocation(line: 195, column: 1, scope: !9777)
!9805 = distinct !DISubprogram(name: "writeRawDiskData", scope: !1888, file: !1888, line: 277, type: !9708, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !9806)
!9806 = !{!9807, !9808, !9809, !9810, !9811, !9812, !9813, !9814, !9815, !9816, !9820, !9821, !9822, !9827}
!9807 = !DILocalVariable(name: "D", arg: 1, scope: !9805, file: !1888, line: 277, type: !9710)
!9808 = !DILocalVariable(name: "addr", arg: 2, scope: !9805, file: !1888, line: 277, type: !61)
!9809 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9805, file: !1888, line: 277, type: !762)
!9810 = !DILocalVariable(name: "len", arg: 4, scope: !9805, file: !1888, line: 277, type: !61)
!9811 = !DILocalVariable(name: "dest", scope: !9805, file: !1888, line: 279, type: !61)
!9812 = !DILocalVariable(name: "src", scope: !9805, file: !1888, line: 279, type: !61)
!9813 = !DILocalVariable(name: "diskSize", scope: !9805, file: !1888, line: 280, type: !61)
!9814 = !DILocalVariable(name: "result", scope: !9805, file: !1888, line: 281, type: !985)
!9815 = !DILocalVariable(name: "DoneLength", scope: !9805, file: !1888, line: 282, type: !61)
!9816 = !DILocalVariable(name: "blockSize", scope: !9817, file: !1888, line: 313, type: !61)
!9817 = distinct !DILexicalBlock(scope: !9818, file: !1888, line: 312, column: 14)
!9818 = distinct !DILexicalBlock(scope: !9819, file: !1888, line: 305, column: 13)
!9819 = distinct !DILexicalBlock(scope: !9805, file: !1888, line: 298, column: 30)
!9820 = !DILocalVariable(name: "programBytes", scope: !9817, file: !1888, line: 314, type: !61)
!9821 = !DILocalVariable(name: "nextBlkAddr", scope: !9817, file: !1888, line: 316, type: !61)
!9822 = !DILocalVariable(name: "Cell", scope: !9823, file: !1888, line: 346, type: !9825)
!9823 = distinct !DILexicalBlock(scope: !9824, file: !1888, line: 345, column: 83)
!9824 = distinct !DILexicalBlock(scope: !9817, file: !1888, line: 345, column: 17)
!9825 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !9826, line: 76, baseType: !1076)
!9826 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/wdt_feed_watchdog/GCC")
!9827 = !DILocalVariable(name: "b", scope: !9823, file: !1888, line: 347, type: !762)
!9828 = !DILocation(line: 0, scope: !9805)
!9829 = !DILocation(line: 280, column: 28, scope: !9805)
!9830 = !DILocation(line: 284, column: 14, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9805, file: !1888, line: 284, column: 9)
!9832 = !DILocation(line: 284, column: 9, scope: !9805)
!9833 = !DILocation(line: 288, column: 14, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9805, file: !1888, line: 288, column: 9)
!9835 = !DILocation(line: 288, column: 20, scope: !9834)
!9836 = !DILocation(line: 288, column: 9, scope: !9805)
!9837 = !DILocation(line: 292, column: 13, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9805, file: !1888, line: 292, column: 9)
!9839 = !DILocation(line: 292, column: 9, scope: !9805)
!9840 = !DILocation(line: 293, column: 9, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9838, file: !1888, line: 292, column: 23)
!9842 = !DILocation(line: 294, column: 5, scope: !9841)
!9843 = !DILocation(line: 296, column: 5, scope: !9805)
!9844 = !DILocation(line: 346, column: 17, scope: !9823)
!9845 = !DILocation(line: 298, column: 23, scope: !9805)
!9846 = !DILocation(line: 298, column: 5, scope: !9805)
!9847 = !DILocation(line: 299, column: 52, scope: !9819)
!9848 = !DILocation(line: 299, column: 62, scope: !9819)
!9849 = !DILocation(line: 299, column: 16, scope: !9819)
!9850 = !DILocation(line: 299, column: 71, scope: !9819)
!9851 = !DILocation(line: 299, column: 78, scope: !9819)
!9852 = !DILocation(line: 300, column: 34, scope: !9819)
!9853 = !DILocation(line: 302, column: 12, scope: !9819)
!9854 = !DILocation(line: 302, column: 23, scope: !9819)
!9855 = !DILocation(line: 302, column: 81, scope: !9819)
!9856 = !DILocation(line: 302, column: 45, scope: !9819)
!9857 = !DILocation(line: 302, column: 9, scope: !9819)
!9858 = !DILocation(line: 305, column: 29, scope: !9818)
!9859 = !DILocation(line: 305, column: 57, scope: !9818)
!9860 = !DILocation(line: 305, column: 66, scope: !9818)
!9861 = !DILocation(line: 305, column: 80, scope: !9818)
!9862 = !DILocation(line: 305, column: 13, scope: !9819)
!9863 = !DILocation(line: 306, column: 25, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9818, file: !1888, line: 305, column: 87)
!9865 = !DILocation(line: 306, column: 36, scope: !9864)
!9866 = !DILocation(line: 306, column: 51, scope: !9864)
!9867 = !DILocation(line: 306, column: 60, scope: !9864)
!9868 = !DILocation(line: 306, column: 74, scope: !9864)
!9869 = !DILocation(line: 306, column: 22, scope: !9864)
!9870 = !DILocation(line: 307, column: 24, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9864, file: !1888, line: 307, column: 17)
!9872 = !DILocation(line: 307, column: 17, scope: !9864)
!9873 = !DILocation(line: 310, column: 23, scope: !9864)
!9874 = !DILocation(line: 311, column: 9, scope: !9864)
!9875 = !DILocation(line: 313, column: 47, scope: !9817)
!9876 = !DILocation(line: 313, column: 56, scope: !9817)
!9877 = !DILocation(line: 313, column: 34, scope: !9817)
!9878 = !DILocation(line: 0, scope: !9817)
!9879 = !DILocation(line: 316, column: 42, scope: !9817)
!9880 = !DILocation(line: 316, column: 58, scope: !9817)
!9881 = !DILocation(line: 316, column: 55, scope: !9817)
!9882 = !DILocation(line: 326, column: 22, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9817, file: !1888, line: 326, column: 17)
!9884 = !DILocation(line: 326, column: 37, scope: !9883)
!9885 = !DILocation(line: 326, column: 17, scope: !9817)
!9886 = !DILocation(line: 332, column: 43, scope: !9817)
!9887 = !DILocation(line: 345, column: 30, scope: !9824)
!9888 = !DILocation(line: 345, column: 52, scope: !9824)
!9889 = !DILocation(line: 0, scope: !9823)
!9890 = !DILocation(line: 348, column: 26, scope: !9823)
!9891 = !DILocation(line: 348, column: 24, scope: !9823)
!9892 = !DILocation(line: 348, column: 22, scope: !9823)
!9893 = !DILocation(line: 349, column: 41, scope: !9823)
!9894 = !DILocation(line: 349, column: 24, scope: !9823)
!9895 = !DILocation(line: 349, column: 22, scope: !9823)
!9896 = !DILocation(line: 350, column: 29, scope: !9823)
!9897 = !DILocation(line: 350, column: 40, scope: !9823)
!9898 = !DILocation(line: 350, column: 55, scope: !9823)
!9899 = !DILocation(line: 350, column: 64, scope: !9823)
!9900 = !DILocation(line: 350, column: 26, scope: !9823)
!9901 = !DILocation(line: 351, column: 28, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9823, file: !1888, line: 351, column: 21)
!9903 = !DILocation(line: 354, column: 13, scope: !9824)
!9904 = !DILocation(line: 362, column: 33, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9906, file: !1888, line: 361, column: 24)
!9906 = distinct !DILexicalBlock(scope: !9907, file: !1888, line: 355, column: 21)
!9907 = distinct !DILexicalBlock(scope: !9824, file: !1888, line: 354, column: 20)
!9908 = !DILocation(line: 362, column: 44, scope: !9905)
!9909 = !DILocation(line: 362, column: 59, scope: !9905)
!9910 = !DILocation(line: 362, column: 68, scope: !9905)
!9911 = !DILocation(line: 362, column: 82, scope: !9905)
!9912 = !DILocation(line: 362, column: 30, scope: !9905)
!9913 = !DILocation(line: 364, column: 28, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9907, file: !1888, line: 364, column: 21)
!9915 = !DILocation(line: 364, column: 21, scope: !9907)
!9916 = !DILocation(line: 368, column: 24, scope: !9817)
!9917 = !DILocation(line: 0, scope: !9818)
!9918 = distinct !{!9918, !9846, !9919}
!9919 = !DILocation(line: 370, column: 5, scope: !9805)
!9920 = !DILocation(line: 372, column: 5, scope: !9805)
!9921 = !DILocation(line: 379, column: 1, scope: !9805)
!9922 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !1888, file: !1888, line: 398, type: !9923, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !9925)
!9923 = !DISubroutineType(types: !9924)
!9924 = !{!985, !9710, !61}
!9925 = !{!9926, !9927, !9928, !9929}
!9926 = !DILocalVariable(name: "D", arg: 1, scope: !9922, file: !1888, line: 398, type: !9710)
!9927 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !9922, file: !1888, line: 398, type: !61)
!9928 = !DILocalVariable(name: "result", scope: !9922, file: !1888, line: 401, type: !985)
!9929 = !DILocalVariable(name: "block_index", scope: !9922, file: !1888, line: 402, type: !61)
!9930 = !DILocation(line: 0, scope: !9922)
!9931 = !DILocation(line: 402, column: 36, scope: !9922)
!9932 = !DILocation(line: 403, column: 13, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9922, file: !1888, line: 403, column: 9)
!9934 = !DILocation(line: 403, column: 9, scope: !9922)
!9935 = !DILocation(line: 404, column: 9, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9933, file: !1888, line: 403, column: 23)
!9937 = !DILocation(line: 405, column: 5, scope: !9936)
!9938 = !DILocation(line: 407, column: 37, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9922, file: !1888, line: 407, column: 9)
!9940 = !DILocation(line: 407, column: 21, scope: !9939)
!9941 = !DILocation(line: 407, column: 9, scope: !9922)
!9942 = !DILocation(line: 412, column: 5, scope: !9922)
!9943 = !DILocation(line: 414, column: 8, scope: !9922)
!9944 = !DILocation(line: 414, column: 19, scope: !9922)
!9945 = !DILocation(line: 414, column: 32, scope: !9922)
!9946 = !DILocation(line: 414, column: 5, scope: !9922)
!9947 = !DILocation(line: 416, column: 17, scope: !9922)
!9948 = !DILocation(line: 416, column: 28, scope: !9922)
!9949 = !DILocation(line: 416, column: 42, scope: !9922)
!9950 = !DILocation(line: 416, column: 14, scope: !9922)
!9951 = !DILocation(line: 418, column: 5, scope: !9922)
!9952 = !DILocation(line: 420, column: 16, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9922, file: !1888, line: 420, column: 9)
!9954 = !DILocation(line: 424, column: 1, scope: !9922)
!9955 = distinct !DISubprogram(name: "NOR_init", scope: !1888, file: !1888, line: 433, type: !7363, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !293)
!9956 = !DILocation(line: 436, column: 9, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9955, file: !1888, line: 436, column: 9)
!9958 = !DILocation(line: 436, column: 9, scope: !9955)
!9959 = !DILocation(line: 437, column: 9, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9957, file: !1888, line: 436, column: 62)
!9961 = !DILocation(line: 438, column: 9, scope: !9960)
!9962 = !DILocation(line: 439, column: 27, scope: !9960)
!9963 = !DILocation(line: 440, column: 5, scope: !9960)
!9964 = !DILocation(line: 441, column: 5, scope: !9955)
!9965 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !1888, file: !1888, line: 444, type: !7829, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !293)
!9966 = !DILocation(line: 446, column: 12, scope: !9965)
!9967 = !DILocation(line: 446, column: 5, scope: !9965)
!9968 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !1888, file: !1888, line: 449, type: !9969, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !9971)
!9969 = !DISubroutineType(types: !9970)
!9970 = !{!985, !61, !61, !762}
!9971 = !{!9972, !9973, !9974, !9975, !9976, !9977, !9978}
!9972 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9968, file: !1888, line: 449, type: !61)
!9973 = !DILocalVariable(name: "page_idx", arg: 2, scope: !9968, file: !1888, line: 449, type: !61)
!9974 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9968, file: !1888, line: 449, type: !762)
!9975 = !DILocalVariable(name: "D", scope: !9968, file: !1888, line: 451, type: !9710)
!9976 = !DILocalVariable(name: "mtdData", scope: !9968, file: !1888, line: 452, type: !1896)
!9977 = !DILocalVariable(name: "result", scope: !9968, file: !1888, line: 453, type: !985)
!9978 = !DILocalVariable(name: "addr", scope: !9968, file: !1888, line: 455, type: !61)
!9979 = !DILocation(line: 0, scope: !9968)
!9980 = !DILocation(line: 452, column: 60, scope: !9968)
!9981 = !DILocation(line: 455, column: 32, scope: !9968)
!9982 = !DILocation(line: 455, column: 22, scope: !9968)
!9983 = !DILocation(line: 455, column: 95, scope: !9968)
!9984 = !DILocation(line: 455, column: 76, scope: !9968)
!9985 = !DILocation(line: 455, column: 118, scope: !9968)
!9986 = !DILocation(line: 455, column: 74, scope: !9968)
!9987 = !DILocation(line: 455, column: 106, scope: !9968)
!9988 = !DILocation(line: 457, column: 14, scope: !9968)
!9989 = !DILocation(line: 459, column: 16, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9968, file: !1888, line: 459, column: 9)
!9991 = !DILocation(line: 463, column: 1, scope: !9968)
!9992 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !1888, file: !1888, line: 466, type: !9969, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !9993)
!9993 = !{!9994, !9995, !9996, !9997, !9998, !9999, !10000}
!9994 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9992, file: !1888, line: 466, type: !61)
!9995 = !DILocalVariable(name: "page_idx", arg: 2, scope: !9992, file: !1888, line: 466, type: !61)
!9996 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9992, file: !1888, line: 466, type: !762)
!9997 = !DILocalVariable(name: "D", scope: !9992, file: !1888, line: 468, type: !9710)
!9998 = !DILocalVariable(name: "mtdData", scope: !9992, file: !1888, line: 469, type: !1896)
!9999 = !DILocalVariable(name: "result", scope: !9992, file: !1888, line: 470, type: !985)
!10000 = !DILocalVariable(name: "addr", scope: !9992, file: !1888, line: 472, type: !61)
!10001 = !DILocation(line: 0, scope: !9992)
!10002 = !DILocation(line: 469, column: 60, scope: !9992)
!10003 = !DILocation(line: 472, column: 32, scope: !9992)
!10004 = !DILocation(line: 472, column: 22, scope: !9992)
!10005 = !DILocation(line: 472, column: 95, scope: !9992)
!10006 = !DILocation(line: 472, column: 76, scope: !9992)
!10007 = !DILocation(line: 472, column: 118, scope: !9992)
!10008 = !DILocation(line: 472, column: 74, scope: !9992)
!10009 = !DILocation(line: 472, column: 106, scope: !9992)
!10010 = !DILocation(line: 474, column: 14, scope: !9992)
!10011 = !DILocation(line: 475, column: 16, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !9992, file: !1888, line: 475, column: 9)
!10013 = !DILocation(line: 479, column: 1, scope: !9992)
!10014 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !1888, file: !1888, line: 481, type: !10015, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !10017)
!10015 = !DISubroutineType(types: !10016)
!10016 = !{!985, !61}
!10017 = !{!10018, !10019}
!10018 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10014, file: !1888, line: 481, type: !61)
!10019 = !DILocalVariable(name: "result", scope: !10014, file: !1888, line: 483, type: !985)
!10020 = !DILocation(line: 0, scope: !10014)
!10021 = !DILocation(line: 484, column: 14, scope: !10014)
!10022 = !DILocation(line: 485, column: 16, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10014, file: !1888, line: 485, column: 9)
!10024 = !DILocation(line: 489, column: 1, scope: !10014)
!10025 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !1888, file: !1888, line: 492, type: !3577, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !10026)
!10026 = !{!10027, !10028, !10029}
!10027 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10025, file: !1888, line: 492, type: !61)
!10028 = !DILocalVariable(name: "D", scope: !10025, file: !1888, line: 494, type: !9710)
!10029 = !DILocalVariable(name: "mtdData", scope: !10025, file: !1888, line: 495, type: !1896)
!10030 = !DILocation(line: 0, scope: !10025)
!10031 = !DILocation(line: 495, column: 60, scope: !10025)
!10032 = !DILocation(line: 496, column: 12, scope: !10025)
!10033 = !DILocation(line: 496, column: 5, scope: !10025)
!10034 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !1888, file: !1888, line: 499, type: !3577, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !10035)
!10035 = !{!10036, !10037, !10038}
!10036 = !DILocalVariable(name: "block_addr", arg: 1, scope: !10034, file: !1888, line: 499, type: !61)
!10037 = !DILocalVariable(name: "D", scope: !10034, file: !1888, line: 501, type: !9710)
!10038 = !DILocalVariable(name: "mtdData", scope: !10034, file: !1888, line: 502, type: !1896)
!10039 = !DILocation(line: 0, scope: !10034)
!10040 = !DILocation(line: 502, column: 60, scope: !10034)
!10041 = !DILocation(line: 504, column: 12, scope: !10034)
!10042 = !DILocation(line: 504, column: 5, scope: !10034)
!10043 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !1888, file: !1888, line: 510, type: !10044, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !10046)
!10044 = !DISubroutineType(types: !10045)
!10045 = !{!985, !61, !1044, !1044}
!10046 = !{!10047, !10048, !10049, !10050, !10051}
!10047 = !DILocalVariable(name: "block_addr", arg: 1, scope: !10043, file: !1888, line: 510, type: !61)
!10048 = !DILocalVariable(name: "block_index", arg: 2, scope: !10043, file: !1888, line: 510, type: !1044)
!10049 = !DILocalVariable(name: "offset", arg: 3, scope: !10043, file: !1888, line: 510, type: !1044)
!10050 = !DILocalVariable(name: "D", scope: !10043, file: !1888, line: 512, type: !9710)
!10051 = !DILocalVariable(name: "mtdData", scope: !10043, file: !1888, line: 513, type: !1896)
!10052 = !DILocation(line: 0, scope: !10043)
!10053 = !DILocation(line: 513, column: 60, scope: !10043)
!10054 = !DILocation(line: 519, column: 20, scope: !10043)
!10055 = !DILocation(line: 519, column: 18, scope: !10043)
!10056 = !DILocation(line: 520, column: 22, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10043, file: !1888, line: 520, column: 9)
!10058 = !DILocation(line: 520, column: 9, scope: !10043)
!10059 = !DILocation(line: 524, column: 28, scope: !10043)
!10060 = !DILocation(line: 524, column: 26, scope: !10043)
!10061 = !DILocation(line: 524, column: 13, scope: !10043)
!10062 = !DILocation(line: 526, column: 5, scope: !10043)
!10063 = !DILocation(line: 527, column: 1, scope: !10043)
!10064 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !1888, file: !1888, line: 532, type: !10065, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !10067)
!10065 = !DISubroutineType(types: !10066)
!10066 = !{!985, !61, !61, !1044}
!10067 = !{!10068, !10069, !10070, !10071, !10072}
!10068 = !DILocalVariable(name: "block_index", arg: 1, scope: !10064, file: !1888, line: 532, type: !61)
!10069 = !DILocalVariable(name: "offset", arg: 2, scope: !10064, file: !1888, line: 532, type: !61)
!10070 = !DILocalVariable(name: "addr", arg: 3, scope: !10064, file: !1888, line: 532, type: !1044)
!10071 = !DILocalVariable(name: "D", scope: !10064, file: !1888, line: 534, type: !9710)
!10072 = !DILocalVariable(name: "mtdData", scope: !10064, file: !1888, line: 535, type: !1896)
!10073 = !DILocation(line: 0, scope: !10064)
!10074 = !DILocation(line: 535, column: 60, scope: !10064)
!10075 = !DILocation(line: 537, column: 23, scope: !10064)
!10076 = !DILocation(line: 537, column: 13, scope: !10064)
!10077 = !DILocation(line: 537, column: 79, scope: !10064)
!10078 = !DILocation(line: 537, column: 60, scope: !10064)
!10079 = !DILocation(line: 537, column: 58, scope: !10064)
!10080 = !DILocation(line: 537, column: 88, scope: !10064)
!10081 = !DILocation(line: 537, column: 11, scope: !10064)
!10082 = !DILocation(line: 539, column: 5, scope: !10064)
!10083 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !1888, file: !1888, line: 545, type: !10084, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !10086)
!10084 = !DISubroutineType(types: !10085)
!10085 = !{!1944, !985}
!10086 = !{!10087}
!10087 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !10083, file: !1888, line: 545, type: !985)
!10088 = !DILocation(line: 0, scope: !10083)
!10089 = !DILocation(line: 547, column: 9, scope: !10083)
!10090 = !DILocation(line: 558, column: 9, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10092, file: !1888, line: 558, column: 9)
!10092 = distinct !DILexicalBlock(scope: !10093, file: !1888, line: 558, column: 9)
!10093 = distinct !DILexicalBlock(scope: !10094, file: !1888, line: 558, column: 9)
!10094 = distinct !DILexicalBlock(scope: !10095, file: !1888, line: 557, column: 12)
!10095 = distinct !DILexicalBlock(scope: !10096, file: !1888, line: 555, column: 16)
!10096 = distinct !DILexicalBlock(scope: !10097, file: !1888, line: 553, column: 16)
!10097 = distinct !DILexicalBlock(scope: !10098, file: !1888, line: 551, column: 16)
!10098 = distinct !DILexicalBlock(scope: !10099, file: !1888, line: 549, column: 16)
!10099 = distinct !DILexicalBlock(scope: !10083, file: !1888, line: 547, column: 9)
!10100 = !DILocation(line: 560, column: 1, scope: !10083)
!10101 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !1888, file: !1888, line: 561, type: !10102, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !10105)
!10102 = !DISubroutineType(types: !10103)
!10103 = !{!10104, !61}
!10104 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !1225, line: 127, baseType: !1890)
!10105 = !{!10106, !10107, !10108}
!10106 = !DILocalVariable(name: "address", arg: 1, scope: !10101, file: !1888, line: 561, type: !61)
!10107 = !DILocalVariable(name: "block_size", scope: !10101, file: !1888, line: 563, type: !61)
!10108 = !DILocalVariable(name: "block_index", scope: !10101, file: !1888, line: 564, type: !61)
!10109 = !DILocation(line: 0, scope: !10101)
!10110 = !DILocation(line: 566, column: 19, scope: !10101)
!10111 = !DILocation(line: 567, column: 21, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10101, file: !1888, line: 567, column: 9)
!10113 = !DILocation(line: 567, column: 9, scope: !10101)
!10114 = !DILocation(line: 568, column: 9, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10116, file: !1888, line: 568, column: 9)
!10116 = distinct !DILexicalBlock(scope: !10117, file: !1888, line: 568, column: 9)
!10117 = distinct !DILexicalBlock(scope: !10118, file: !1888, line: 568, column: 9)
!10118 = distinct !DILexicalBlock(scope: !10112, file: !1888, line: 567, column: 45)
!10119 = !DILocation(line: 570, column: 18, scope: !10101)
!10120 = !DILocation(line: 571, column: 9, scope: !10101)
!10121 = !DILocation(line: 574, column: 9, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10123, file: !1888, line: 573, column: 38)
!10123 = distinct !DILexicalBlock(scope: !10124, file: !1888, line: 573, column: 16)
!10124 = distinct !DILexicalBlock(scope: !10101, file: !1888, line: 571, column: 9)
!10125 = !DILocation(line: 576, column: 9, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !10127, file: !1888, line: 575, column: 39)
!10127 = distinct !DILexicalBlock(scope: !10123, file: !1888, line: 575, column: 16)
!10128 = !DILocation(line: 578, column: 9, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10130, file: !1888, line: 578, column: 9)
!10130 = distinct !DILexicalBlock(scope: !10131, file: !1888, line: 578, column: 9)
!10131 = distinct !DILexicalBlock(scope: !10132, file: !1888, line: 578, column: 9)
!10132 = distinct !DILexicalBlock(scope: !10127, file: !1888, line: 577, column: 12)
!10133 = !DILocation(line: 0, scope: !10124)
!10134 = !DILocation(line: 580, column: 1, scope: !10101)
!10135 = distinct !DISubprogram(name: "hal_flash_init", scope: !1888, file: !1888, line: 583, type: !7829, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !293)
!10136 = !DILocation(line: 585, column: 5, scope: !10135)
!10137 = !DILocation(line: 586, column: 5, scope: !10135)
!10138 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !1888, file: !1888, line: 589, type: !7829, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !293)
!10139 = !DILocation(line: 591, column: 5, scope: !10138)
!10140 = distinct !DISubprogram(name: "hal_flash_erase", scope: !1888, file: !1888, line: 595, type: !10141, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !10143)
!10141 = !DISubroutineType(types: !10142)
!10142 = !{!1944, !61, !10104}
!10143 = !{!10144, !10145, !10146, !10147, !10148}
!10144 = !DILocalVariable(name: "start_address", arg: 1, scope: !10140, file: !1888, line: 595, type: !61)
!10145 = !DILocalVariable(name: "block", arg: 2, scope: !10140, file: !1888, line: 595, type: !10104)
!10146 = !DILocalVariable(name: "result", scope: !10140, file: !1888, line: 597, type: !985)
!10147 = !DILocalVariable(name: "block_index", scope: !10140, file: !1888, line: 598, type: !61)
!10148 = !DILocalVariable(name: "erase_type", scope: !10140, file: !1888, line: 599, type: !61)
!10149 = !DILocation(line: 0, scope: !10140)
!10150 = !DILocation(line: 601, column: 9, scope: !10140)
!10151 = !DILocation(line: 602, column: 28, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10153, file: !1888, line: 602, column: 13)
!10153 = distinct !DILexicalBlock(scope: !10154, file: !1888, line: 601, column: 38)
!10154 = distinct !DILexicalBlock(scope: !10140, file: !1888, line: 601, column: 9)
!10155 = !DILocation(line: 602, column: 37, scope: !10152)
!10156 = !DILocation(line: 602, column: 13, scope: !10153)
!10157 = !DILocation(line: 607, column: 28, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10159, file: !1888, line: 607, column: 13)
!10159 = distinct !DILexicalBlock(scope: !10160, file: !1888, line: 606, column: 46)
!10160 = distinct !DILexicalBlock(scope: !10154, file: !1888, line: 606, column: 16)
!10161 = !DILocation(line: 607, column: 38, scope: !10158)
!10162 = !DILocation(line: 607, column: 13, scope: !10159)
!10163 = !DILocation(line: 612, column: 28, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10165, file: !1888, line: 612, column: 13)
!10165 = distinct !DILexicalBlock(scope: !10166, file: !1888, line: 611, column: 46)
!10166 = distinct !DILexicalBlock(scope: !10160, file: !1888, line: 611, column: 16)
!10167 = !DILocation(line: 612, column: 38, scope: !10164)
!10168 = !DILocation(line: 612, column: 13, scope: !10165)
!10169 = !DILocation(line: 0, scope: !10154)
!10170 = !DILocation(line: 621, column: 19, scope: !10140)
!10171 = !DILocation(line: 622, column: 21, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10140, file: !1888, line: 622, column: 9)
!10173 = !DILocation(line: 622, column: 9, scope: !10140)
!10174 = !DILocation(line: 626, column: 17, scope: !10140)
!10175 = !DILocation(line: 627, column: 14, scope: !10140)
!10176 = !DILocation(line: 628, column: 16, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10140, file: !1888, line: 628, column: 9)
!10178 = !DILocation(line: 628, column: 9, scope: !10140)
!10179 = !DILocation(line: 629, column: 16, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10177, file: !1888, line: 628, column: 38)
!10181 = !DILocation(line: 629, column: 9, scope: !10180)
!10182 = !DILocation(line: 632, column: 1, scope: !10140)
!10183 = distinct !DISubprogram(name: "hal_flash_read", scope: !1888, file: !1888, line: 634, type: !10184, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !10186)
!10184 = !DISubroutineType(types: !10185)
!10185 = !{!1944, !61, !762, !61}
!10186 = !{!10187, !10188, !10189, !10190, !10191}
!10187 = !DILocalVariable(name: "start_address", arg: 1, scope: !10183, file: !1888, line: 634, type: !61)
!10188 = !DILocalVariable(name: "buffer", arg: 2, scope: !10183, file: !1888, line: 634, type: !762)
!10189 = !DILocalVariable(name: "length", arg: 3, scope: !10183, file: !1888, line: 634, type: !61)
!10190 = !DILocalVariable(name: "D", scope: !10183, file: !1888, line: 636, type: !9710)
!10191 = !DILocalVariable(name: "result", scope: !10183, file: !1888, line: 637, type: !985)
!10192 = !DILocation(line: 0, scope: !10183)
!10193 = !DILocation(line: 639, column: 14, scope: !10183)
!10194 = !DILocation(line: 641, column: 16, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10183, file: !1888, line: 641, column: 9)
!10196 = !DILocation(line: 641, column: 9, scope: !10183)
!10197 = !DILocation(line: 642, column: 16, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10195, file: !1888, line: 641, column: 38)
!10199 = !DILocation(line: 642, column: 9, scope: !10198)
!10200 = !DILocation(line: 645, column: 1, scope: !10183)
!10201 = distinct !DISubprogram(name: "hal_flash_write", scope: !1888, file: !1888, line: 647, type: !10202, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1887, retainedNodes: !10204)
!10202 = !DISubroutineType(types: !10203)
!10203 = !{!1944, !61, !4959, !61}
!10204 = !{!10205, !10206, !10207, !10208, !10209, !10210}
!10205 = !DILocalVariable(name: "address", arg: 1, scope: !10201, file: !1888, line: 647, type: !61)
!10206 = !DILocalVariable(name: "data", arg: 2, scope: !10201, file: !1888, line: 647, type: !4959)
!10207 = !DILocalVariable(name: "length", arg: 3, scope: !10201, file: !1888, line: 647, type: !61)
!10208 = !DILocalVariable(name: "D", scope: !10201, file: !1888, line: 649, type: !9710)
!10209 = !DILocalVariable(name: "result", scope: !10201, file: !1888, line: 650, type: !985)
!10210 = !DILocalVariable(name: "addr", scope: !10211, file: !1888, line: 660, type: !61)
!10211 = distinct !DILexicalBlock(scope: !10212, file: !1888, line: 659, column: 40)
!10212 = distinct !DILexicalBlock(scope: !10201, file: !1888, line: 659, column: 8)
!10213 = !DILocation(line: 0, scope: !10201)
!10214 = !DILocation(line: 652, column: 14, scope: !10201)
!10215 = !DILocation(line: 653, column: 16, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10201, file: !1888, line: 653, column: 9)
!10217 = !DILocation(line: 653, column: 9, scope: !10201)
!10218 = !DILocation(line: 654, column: 16, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10216, file: !1888, line: 653, column: 38)
!10220 = !DILocation(line: 654, column: 9, scope: !10219)
!10221 = !DILocation(line: 659, column: 8, scope: !10212)
!10222 = !DILocation(line: 659, column: 8, scope: !10201)
!10223 = !DILocation(line: 661, column: 25, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10211, file: !1888, line: 661, column: 8)
!10225 = !DILocation(line: 0, scope: !10211)
!10226 = !DILocation(line: 661, column: 58, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10224, file: !1888, line: 661, column: 8)
!10228 = !DILocation(line: 661, column: 8, scope: !10224)
!10229 = !DILocation(line: 662, column: 13, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10227, file: !1888, line: 661, column: 147)
!10231 = !DILocation(line: 661, column: 128, scope: !10227)
!10232 = distinct !{!10232, !10228, !10233}
!10233 = !DILocation(line: 663, column: 8, scope: !10224)
!10234 = !DILocation(line: 668, column: 1, scope: !10201)
!10235 = distinct !DISubprogram(name: "BlockAddress", scope: !1949, file: !1949, line: 111, type: !10236, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1948, retainedNodes: !10238)
!10236 = !DISubroutineType(types: !10237)
!10237 = !{!88, !88, !61}
!10238 = !{!10239, !10240, !10241, !10242, !10243, !10244}
!10239 = !DILocalVariable(name: "DriverData", arg: 1, scope: !10235, file: !1949, line: 111, type: !88)
!10240 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10235, file: !1949, line: 111, type: !61)
!10241 = !DILocalVariable(name: "D", scope: !10235, file: !1949, line: 113, type: !1977)
!10242 = !DILocalVariable(name: "addr", scope: !10235, file: !1949, line: 114, type: !61)
!10243 = !DILocalVariable(name: "region", scope: !10235, file: !1949, line: 115, type: !61)
!10244 = !DILocalVariable(name: "BlockUpperBound", scope: !10235, file: !1949, line: 115, type: !61)
!10245 = !DILocation(line: 0, scope: !10235)
!10246 = !DILocation(line: 117, column: 26, scope: !10235)
!10247 = !DILocation(line: 117, column: 40, scope: !10235)
!10248 = !DILocation(line: 118, column: 28, scope: !10235)
!10249 = !DILocation(line: 118, column: 5, scope: !10235)
!10250 = !DILocation(line: 119, column: 39, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10235, file: !1949, line: 118, column: 43)
!10252 = !DILocation(line: 119, column: 76, scope: !10251)
!10253 = !DILocation(line: 119, column: 52, scope: !10251)
!10254 = !DILocation(line: 119, column: 14, scope: !10251)
!10255 = !DILocation(line: 120, column: 15, scope: !10251)
!10256 = !DILocation(line: 121, column: 50, scope: !10251)
!10257 = !DILocation(line: 121, column: 25, scope: !10251)
!10258 = distinct !{!10258, !10249, !10259}
!10259 = !DILocation(line: 122, column: 5, scope: !10235)
!10260 = !DILocation(line: 123, column: 68, scope: !10235)
!10261 = !DILocation(line: 123, column: 44, scope: !10235)
!10262 = !DILocation(line: 123, column: 25, scope: !10235)
!10263 = !DILocation(line: 123, column: 107, scope: !10235)
!10264 = !DILocation(line: 123, column: 83, scope: !10235)
!10265 = !DILocation(line: 123, column: 10, scope: !10235)
!10266 = !DILocation(line: 125, column: 16, scope: !10235)
!10267 = !DILocation(line: 125, column: 25, scope: !10235)
!10268 = !DILocation(line: 125, column: 5, scope: !10235)
!10269 = distinct !DISubprogram(name: "MapWindow", scope: !1949, file: !1949, line: 180, type: !1582, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1948, retainedNodes: !10270)
!10270 = !{!10271, !10272, !10273, !10274}
!10271 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10269, file: !1949, line: 180, type: !88)
!10272 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10269, file: !1949, line: 180, type: !61)
!10273 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !10269, file: !1949, line: 180, type: !61)
!10274 = !DILocalVariable(name: "D", scope: !10269, file: !1949, line: 182, type: !1977)
!10275 = !DILocation(line: 0, scope: !10269)
!10276 = !DILocation(line: 185, column: 5, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10278, file: !1949, line: 185, column: 5)
!10278 = distinct !DILexicalBlock(scope: !10269, file: !1949, line: 185, column: 5)
!10279 = !DILocation(line: 185, column: 5, scope: !10278)
!10280 = !DILocation(line: 185, column: 5, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10277, file: !1949, line: 185, column: 5)
!10282 = !DILocation(line: 186, column: 27, scope: !10269)
!10283 = !DILocation(line: 186, column: 19, scope: !10269)
!10284 = !DILocation(line: 186, column: 8, scope: !10269)
!10285 = !DILocation(line: 186, column: 17, scope: !10269)
!10286 = !DILocation(line: 188, column: 5, scope: !10269)
!10287 = !DILocation(line: 0, scope: !1970)
!10288 = !DILocation(line: 142, column: 12, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !1970, file: !1949, line: 142, column: 9)
!10290 = !DILocation(line: 142, column: 34, scope: !10289)
!10291 = !DILocation(line: 142, column: 64, scope: !10289)
!10292 = !DILocation(line: 142, column: 75, scope: !10289)
!10293 = !DILocation(line: 142, column: 9, scope: !1970)
!10294 = !DILocation(line: 143, column: 79, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10296, file: !1949, line: 143, column: 13)
!10296 = distinct !DILexicalBlock(scope: !10289, file: !1949, line: 142, column: 99)
!10297 = !DILocation(line: 143, column: 13, scope: !10296)
!10298 = !DILocation(line: 144, column: 72, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10300, file: !1949, line: 144, column: 17)
!10300 = distinct !DILexicalBlock(scope: !10295, file: !1949, line: 143, column: 94)
!10301 = !DILocation(line: 144, column: 83, scope: !10299)
!10302 = !DILocation(line: 144, column: 17, scope: !10300)
!10303 = !DILocation(line: 145, column: 87, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10305, file: !1949, line: 145, column: 21)
!10305 = distinct !DILexicalBlock(scope: !10299, file: !1949, line: 144, column: 107)
!10306 = !DILocation(line: 145, column: 21, scope: !10305)
!10307 = !DILocation(line: 146, column: 33, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10304, file: !1949, line: 145, column: 102)
!10309 = !DILocation(line: 147, column: 25, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10308, file: !1949, line: 147, column: 25)
!10311 = !DILocation(line: 147, column: 62, scope: !10310)
!10312 = !DILocation(line: 147, column: 34, scope: !10310)
!10313 = !DILocation(line: 147, column: 25, scope: !10308)
!10314 = !DILocation(line: 148, column: 91, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10310, file: !1949, line: 147, column: 106)
!10316 = !DILocation(line: 149, column: 111, scope: !10315)
!10317 = !DILocation(line: 149, column: 101, scope: !10315)
!10318 = !DILocation(line: 149, column: 87, scope: !10315)
!10319 = !DILocation(line: 149, column: 99, scope: !10315)
!10320 = !DILocation(line: 150, column: 37, scope: !10315)
!10321 = !DILocation(line: 150, column: 34, scope: !10315)
!10322 = !DILocation(line: 151, column: 21, scope: !10315)
!10323 = !DILocation(line: 152, column: 91, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10310, file: !1949, line: 151, column: 28)
!10325 = !DILocation(line: 153, column: 111, scope: !10324)
!10326 = !DILocation(line: 153, column: 101, scope: !10324)
!10327 = !DILocation(line: 153, column: 87, scope: !10324)
!10328 = !DILocation(line: 153, column: 99, scope: !10324)
!10329 = !DILocation(line: 154, column: 34, scope: !10324)
!10330 = !DILocation(line: 157, column: 32, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10304, file: !1949, line: 156, column: 24)
!10332 = !DILocation(line: 158, column: 83, scope: !10331)
!10333 = !DILocation(line: 159, column: 60, scope: !10331)
!10334 = !DILocation(line: 159, column: 33, scope: !10331)
!10335 = !DILocation(line: 159, column: 30, scope: !10331)
!10336 = !DILocation(line: 162, column: 29, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10299, file: !1949, line: 161, column: 20)
!10338 = !DILocation(line: 163, column: 83, scope: !10337)
!10339 = !DILocation(line: 164, column: 103, scope: !10337)
!10340 = !DILocation(line: 164, column: 93, scope: !10337)
!10341 = !DILocation(line: 164, column: 79, scope: !10337)
!10342 = !DILocation(line: 164, column: 91, scope: !10337)
!10343 = !DILocation(line: 165, column: 56, scope: !10337)
!10344 = !DILocation(line: 165, column: 29, scope: !10337)
!10345 = !DILocation(line: 165, column: 26, scope: !10337)
!10346 = !DILocation(line: 168, column: 24, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10295, file: !1949, line: 167, column: 16)
!10348 = !DILocation(line: 169, column: 75, scope: !10347)
!10349 = !DILocation(line: 170, column: 50, scope: !10347)
!10350 = !DILocation(line: 170, column: 22, scope: !10347)
!10351 = !DILocation(line: 173, column: 21, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !10289, file: !1949, line: 172, column: 12)
!10353 = !DILocation(line: 174, column: 75, scope: !10352)
!10354 = !DILocation(line: 175, column: 95, scope: !10352)
!10355 = !DILocation(line: 175, column: 85, scope: !10352)
!10356 = !DILocation(line: 175, column: 71, scope: !10352)
!10357 = !DILocation(line: 175, column: 83, scope: !10352)
!10358 = !DILocation(line: 176, column: 46, scope: !10352)
!10359 = !DILocation(line: 176, column: 18, scope: !10352)
!10360 = !DILocation(line: 0, scope: !10289)
!10361 = !DILocation(line: 178, column: 5, scope: !1970)
!10362 = distinct !DISubprogram(name: "BlockSize", scope: !1949, file: !1949, line: 191, type: !1971, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1948, retainedNodes: !10363)
!10363 = !{!10364, !10365, !10366, !10367, !10368}
!10364 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10362, file: !1949, line: 191, type: !88)
!10365 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10362, file: !1949, line: 191, type: !61)
!10366 = !DILocalVariable(name: "D", scope: !10362, file: !1949, line: 193, type: !1977)
!10367 = !DILocalVariable(name: "region", scope: !10362, file: !1949, line: 194, type: !61)
!10368 = !DILocalVariable(name: "BlockUpperBound", scope: !10362, file: !1949, line: 194, type: !61)
!10369 = !DILocation(line: 0, scope: !10362)
!10370 = !DILocation(line: 196, column: 26, scope: !10362)
!10371 = !DILocation(line: 196, column: 45, scope: !10362)
!10372 = !DILocation(line: 197, column: 28, scope: !10362)
!10373 = !DILocation(line: 197, column: 5, scope: !10362)
!10374 = !DILocation(line: 198, column: 15, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10362, file: !1949, line: 197, column: 43)
!10376 = !DILocation(line: 199, column: 50, scope: !10375)
!10377 = !DILocation(line: 199, column: 25, scope: !10375)
!10378 = distinct !{!10378, !10373, !10379}
!10379 = !DILocation(line: 200, column: 5, scope: !10362)
!10380 = !DILocation(line: 202, column: 35, scope: !10362)
!10381 = !DILocation(line: 202, column: 5, scope: !10362)
!10382 = distinct !DISubprogram(name: "BlockIndex", scope: !1949, file: !1949, line: 205, type: !1971, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1948, retainedNodes: !10383)
!10383 = !{!10384, !10385, !10386, !10387, !10388, !10389}
!10384 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10382, file: !1949, line: 205, type: !88)
!10385 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !10382, file: !1949, line: 205, type: !61)
!10386 = !DILocalVariable(name: "D", scope: !10382, file: !1949, line: 207, type: !1977)
!10387 = !DILocalVariable(name: "region", scope: !10382, file: !1949, line: 208, type: !61)
!10388 = !DILocalVariable(name: "BlockUpperAddr", scope: !10382, file: !1949, line: 208, type: !61)
!10389 = !DILocalVariable(name: "blk_idx", scope: !10382, file: !1949, line: 209, type: !61)
!10390 = !DILocation(line: 0, scope: !10382)
!10391 = !DILocation(line: 211, column: 25, scope: !10382)
!10392 = !DILocation(line: 211, column: 44, scope: !10382)
!10393 = !DILocation(line: 211, column: 81, scope: !10382)
!10394 = !DILocation(line: 211, column: 57, scope: !10382)
!10395 = !DILocation(line: 213, column: 28, scope: !10382)
!10396 = !DILocation(line: 213, column: 40, scope: !10382)
!10397 = !DILocation(line: 213, column: 66, scope: !10382)
!10398 = !DILocation(line: 213, column: 5, scope: !10382)
!10399 = !DILocation(line: 214, column: 17, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10382, file: !1949, line: 213, column: 78)
!10401 = !DILocation(line: 215, column: 18, scope: !10400)
!10402 = !DILocation(line: 216, column: 15, scope: !10400)
!10403 = !DILocation(line: 217, column: 48, scope: !10400)
!10404 = !DILocation(line: 217, column: 85, scope: !10400)
!10405 = !DILocation(line: 217, column: 61, scope: !10400)
!10406 = distinct !{!10406, !10398, !10407}
!10407 = !DILocation(line: 218, column: 5, scope: !10382)
!10408 = !DILocation(line: 221, column: 53, scope: !10409)
!10409 = distinct !DILexicalBlock(scope: !10410, file: !1949, line: 220, column: 37)
!10410 = distinct !DILexicalBlock(scope: !10382, file: !1949, line: 220, column: 9)
!10411 = !DILocation(line: 221, column: 29, scope: !10409)
!10412 = !DILocation(line: 221, column: 17, scope: !10409)
!10413 = !DILocation(line: 222, column: 5, scope: !10409)
!10414 = !DILocation(line: 0, scope: !10410)
!10415 = !DILocation(line: 225, column: 5, scope: !10382)
!10416 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !1949, file: !1949, line: 232, type: !3829, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1948, retainedNodes: !293)
!10417 = !DILocation(line: 238, column: 5, scope: !10416)
!10418 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !1949, file: !1949, line: 243, type: !3829, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1948, retainedNodes: !293)
!10419 = !DILocation(line: 245, column: 5, scope: !10418)
!10420 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !1949, file: !1949, line: 249, type: !3829, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1948, retainedNodes: !293)
!10421 = !DILocation(line: 254, column: 5, scope: !10420)
!10422 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !1949, file: !1949, line: 259, type: !3829, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1948, retainedNodes: !293)
!10423 = !DILocation(line: 261, column: 5, scope: !10422)
!10424 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !1949, file: !1949, line: 271, type: !6161, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1948, retainedNodes: !10425)
!10425 = !{!10426, !10427}
!10426 = !DILocalVariable(name: "delay", arg: 1, scope: !10424, file: !1949, line: 271, type: !61)
!10427 = !DILocalVariable(name: "ret", scope: !10424, file: !1949, line: 276, type: !2996)
!10428 = !DILocation(line: 0, scope: !10424)
!10429 = !DILocation(line: 277, column: 11, scope: !10424)
!10430 = !DILocation(line: 278, column: 13, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10424, file: !1949, line: 278, column: 9)
!10432 = !DILocation(line: 278, column: 9, scope: !10424)
!10433 = !DILocation(line: 279, column: 9, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10435, file: !1949, line: 279, column: 9)
!10435 = distinct !DILexicalBlock(scope: !10436, file: !1949, line: 279, column: 9)
!10436 = distinct !DILexicalBlock(scope: !10437, file: !1949, line: 279, column: 9)
!10437 = distinct !DILexicalBlock(scope: !10431, file: !1949, line: 278, column: 35)
!10438 = !DILocation(line: 282, column: 1, scope: !10424)
!10439 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !2628, file: !2628, line: 58, type: !10440, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !10442)
!10440 = !DISubroutineType(types: !10441)
!10441 = !{null, !2245, !7, !2245, null}
!10442 = !{!10443, !10444, !10445, !10446, !10455}
!10443 = !DILocalVariable(name: "func", arg: 1, scope: !10439, file: !2628, line: 58, type: !2245)
!10444 = !DILocalVariable(name: "line", arg: 2, scope: !10439, file: !2628, line: 58, type: !7)
!10445 = !DILocalVariable(name: "message", arg: 3, scope: !10439, file: !2628, line: 58, type: !2245)
!10446 = !DILocalVariable(name: "ap", scope: !10439, file: !2628, line: 60, type: !10447)
!10447 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !10448, line: 46, baseType: !10449)
!10448 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!10449 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !10450, line: 32, baseType: !10451)
!10450 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!10451 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2628, baseType: !10452)
!10452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !10453)
!10453 = !{!10454}
!10454 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !10452, file: !2628, line: 60, baseType: !88, size: 32)
!10455 = !DILocalVariable(name: "mask", scope: !10439, file: !2628, line: 62, type: !61)
!10456 = !DILocation(line: 0, scope: !10439)
!10457 = !DILocation(line: 60, column: 5, scope: !10439)
!10458 = !DILocation(line: 60, column: 13, scope: !10439)
!10459 = !DILocation(line: 62, column: 5, scope: !10439)
!10460 = !DILocation(line: 63, column: 5, scope: !10439)
!10461 = !DILocation(line: 65, column: 5, scope: !10439)
!10462 = !DILocation(line: 66, column: 5, scope: !10439)
!10463 = !DILocation(line: 67, column: 5, scope: !10439)
!10464 = !DILocation(line: 69, column: 37, scope: !10439)
!10465 = !DILocation(line: 69, column: 5, scope: !10439)
!10466 = !DILocation(line: 71, column: 1, scope: !10439)
!10467 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !2628, file: !2628, line: 72, type: !10440, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !10468)
!10468 = !{!10469, !10470, !10471, !10472, !10473}
!10469 = !DILocalVariable(name: "func", arg: 1, scope: !10467, file: !2628, line: 72, type: !2245)
!10470 = !DILocalVariable(name: "line", arg: 2, scope: !10467, file: !2628, line: 72, type: !7)
!10471 = !DILocalVariable(name: "message", arg: 3, scope: !10467, file: !2628, line: 72, type: !2245)
!10472 = !DILocalVariable(name: "ap", scope: !10467, file: !2628, line: 74, type: !10447)
!10473 = !DILocalVariable(name: "mask", scope: !10467, file: !2628, line: 76, type: !61)
!10474 = !DILocation(line: 0, scope: !10467)
!10475 = !DILocation(line: 74, column: 5, scope: !10467)
!10476 = !DILocation(line: 74, column: 13, scope: !10467)
!10477 = !DILocation(line: 76, column: 5, scope: !10467)
!10478 = !DILocation(line: 77, column: 5, scope: !10467)
!10479 = !DILocation(line: 79, column: 5, scope: !10467)
!10480 = !DILocation(line: 80, column: 5, scope: !10467)
!10481 = !DILocation(line: 81, column: 5, scope: !10467)
!10482 = !DILocation(line: 83, column: 37, scope: !10467)
!10483 = !DILocation(line: 83, column: 5, scope: !10467)
!10484 = !DILocation(line: 85, column: 1, scope: !10467)
!10485 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !2628, file: !2628, line: 86, type: !10440, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !10486)
!10486 = !{!10487, !10488, !10489, !10490, !10491}
!10487 = !DILocalVariable(name: "func", arg: 1, scope: !10485, file: !2628, line: 86, type: !2245)
!10488 = !DILocalVariable(name: "line", arg: 2, scope: !10485, file: !2628, line: 86, type: !7)
!10489 = !DILocalVariable(name: "message", arg: 3, scope: !10485, file: !2628, line: 86, type: !2245)
!10490 = !DILocalVariable(name: "ap", scope: !10485, file: !2628, line: 88, type: !10447)
!10491 = !DILocalVariable(name: "mask", scope: !10485, file: !2628, line: 90, type: !61)
!10492 = !DILocation(line: 0, scope: !10485)
!10493 = !DILocation(line: 88, column: 5, scope: !10485)
!10494 = !DILocation(line: 88, column: 13, scope: !10485)
!10495 = !DILocation(line: 90, column: 5, scope: !10485)
!10496 = !DILocation(line: 91, column: 5, scope: !10485)
!10497 = !DILocation(line: 93, column: 5, scope: !10485)
!10498 = !DILocation(line: 94, column: 5, scope: !10485)
!10499 = !DILocation(line: 95, column: 5, scope: !10485)
!10500 = !DILocation(line: 97, column: 37, scope: !10485)
!10501 = !DILocation(line: 97, column: 5, scope: !10485)
!10502 = !DILocation(line: 99, column: 1, scope: !10485)
!10503 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !2628, file: !2628, line: 101, type: !10504, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !10508)
!10504 = !DISubroutineType(types: !10505)
!10505 = !{null, !2245, !7, !2245, !10506, !7, null}
!10506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10507, size: 32)
!10507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!10508 = !{!10509, !10510, !10511, !10512, !10513}
!10509 = !DILocalVariable(name: "func", arg: 1, scope: !10503, file: !2628, line: 101, type: !2245)
!10510 = !DILocalVariable(name: "line", arg: 2, scope: !10503, file: !2628, line: 101, type: !7)
!10511 = !DILocalVariable(name: "message", arg: 3, scope: !10503, file: !2628, line: 101, type: !2245)
!10512 = !DILocalVariable(name: "data", arg: 4, scope: !10503, file: !2628, line: 101, type: !10506)
!10513 = !DILocalVariable(name: "length", arg: 5, scope: !10503, file: !2628, line: 101, type: !7)
!10514 = !DILocation(line: 0, scope: !10503)
!10515 = !DILocation(line: 103, column: 1, scope: !10503)
!10516 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !2029, file: !2029, line: 87, type: !3577, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2028, retainedNodes: !10517)
!10517 = !{!10518, !10519}
!10518 = !DILocalVariable(name: "bank_no", arg: 1, scope: !10516, file: !2029, line: 87, type: !61)
!10519 = !DILocalVariable(name: "value", scope: !10516, file: !2029, line: 89, type: !61)
!10520 = !DILocation(line: 0, scope: !10516)
!10521 = !DILocation(line: 91, column: 41, scope: !10516)
!10522 = !DILocation(line: 91, column: 5, scope: !10516)
!10523 = !DILocation(line: 91, column: 19, scope: !10516)
!10524 = !DILocation(line: 91, column: 31, scope: !10516)
!10525 = !DILocation(line: 92, column: 77, scope: !10516)
!10526 = !DILocation(line: 92, column: 60, scope: !10516)
!10527 = !DILocation(line: 92, column: 31, scope: !10516)
!10528 = !DILocation(line: 94, column: 5, scope: !10516)
!10529 = !DILocation(line: 94, column: 27, scope: !10516)
!10530 = !DILocation(line: 94, column: 39, scope: !10516)
!10531 = !DILocation(line: 94, column: 65, scope: !10516)
!10532 = distinct !{!10532, !10528, !10533}
!10533 = !DILocation(line: 94, column: 70, scope: !10516)
!10534 = !DILocation(line: 96, column: 29, scope: !10516)
!10535 = !DILocation(line: 96, column: 64, scope: !10516)
!10536 = !DILocation(line: 98, column: 5, scope: !10516)
!10537 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !2029, file: !2029, line: 102, type: !6175, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2028, retainedNodes: !10538)
!10538 = !{!10539, !10540}
!10539 = !DILocalVariable(name: "bank_no", arg: 1, scope: !10537, file: !2029, line: 102, type: !61)
!10540 = !DILocalVariable(name: "value", arg: 2, scope: !10537, file: !2029, line: 102, type: !61)
!10541 = !DILocation(line: 0, scope: !10537)
!10542 = !DILocation(line: 106, column: 40, scope: !10537)
!10543 = !DILocation(line: 106, column: 77, scope: !10537)
!10544 = !DILocation(line: 106, column: 102, scope: !10537)
!10545 = !DILocation(line: 106, column: 5, scope: !10537)
!10546 = !DILocation(line: 106, column: 19, scope: !10537)
!10547 = !DILocation(line: 106, column: 31, scope: !10537)
!10548 = !DILocation(line: 107, column: 77, scope: !10537)
!10549 = !DILocation(line: 107, column: 60, scope: !10537)
!10550 = !DILocation(line: 107, column: 31, scope: !10537)
!10551 = !DILocation(line: 109, column: 5, scope: !10537)
!10552 = !DILocation(line: 109, column: 27, scope: !10537)
!10553 = !DILocation(line: 109, column: 39, scope: !10537)
!10554 = !DILocation(line: 109, column: 65, scope: !10537)
!10555 = distinct !{!10555, !10551, !10556}
!10556 = !DILocation(line: 109, column: 70, scope: !10537)
!10557 = !DILocation(line: 111, column: 5, scope: !10537)
!10558 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !2029, file: !2029, line: 114, type: !291, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2028, retainedNodes: !293)
!10559 = !DILocation(line: 117, column: 36, scope: !10558)
!10560 = !DILocation(line: 117, column: 18, scope: !10558)
!10561 = !DILocation(line: 118, column: 37, scope: !10558)
!10562 = !DILocation(line: 118, column: 18, scope: !10558)
!10563 = !DILocation(line: 119, column: 37, scope: !10558)
!10564 = !DILocation(line: 119, column: 19, scope: !10558)
!10565 = !DILocation(line: 120, column: 37, scope: !10558)
!10566 = !DILocation(line: 120, column: 19, scope: !10558)
!10567 = !DILocation(line: 121, column: 37, scope: !10558)
!10568 = !DILocation(line: 121, column: 19, scope: !10558)
!10569 = !DILocation(line: 122, column: 37, scope: !10558)
!10570 = !DILocation(line: 122, column: 19, scope: !10558)
!10571 = !DILocation(line: 123, column: 37, scope: !10558)
!10572 = !DILocation(line: 123, column: 19, scope: !10558)
!10573 = !DILocation(line: 125, column: 37, scope: !10558)
!10574 = !DILocation(line: 125, column: 19, scope: !10558)
!10575 = !DILocation(line: 126, column: 37, scope: !10558)
!10576 = !DILocation(line: 126, column: 19, scope: !10558)
!10577 = !DILocation(line: 127, column: 37, scope: !10558)
!10578 = !DILocation(line: 127, column: 19, scope: !10558)
!10579 = !DILocation(line: 128, column: 37, scope: !10558)
!10580 = !DILocation(line: 128, column: 19, scope: !10558)
!10581 = !DILocation(line: 130, column: 36, scope: !10558)
!10582 = !DILocation(line: 130, column: 18, scope: !10558)
!10583 = !DILocation(line: 131, column: 36, scope: !10558)
!10584 = !DILocation(line: 131, column: 18, scope: !10558)
!10585 = !DILocation(line: 133, column: 5, scope: !10558)
!10586 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !2029, file: !2029, line: 140, type: !10587, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2028, retainedNodes: !293)
!10587 = !DISubroutineType(types: !10588)
!10588 = !{!7}
!10589 = !DILocation(line: 144, column: 5, scope: !10586)
!10590 = !DILocation(line: 144, column: 19, scope: !10586)
!10591 = !DILocation(line: 144, column: 28, scope: !10586)
!10592 = !DILocation(line: 147, column: 19, scope: !10586)
!10593 = !DILocation(line: 147, column: 28, scope: !10586)
!10594 = !DILocation(line: 150, column: 19, scope: !10586)
!10595 = !DILocation(line: 150, column: 28, scope: !10586)
!10596 = !DILocation(line: 152, column: 5, scope: !10586)
!10597 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !2029, file: !2029, line: 157, type: !7363, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2028, retainedNodes: !10598)
!10598 = !{!10599, !10600, !10601, !10602, !10603, !10604}
!10599 = !DILocalVariable(name: "mbist_src", scope: !10597, file: !2029, line: 159, type: !61)
!10600 = !DILocalVariable(name: "mbist_len", scope: !10597, file: !2029, line: 159, type: !61)
!10601 = !DILocalVariable(name: "mbist_data", scope: !10597, file: !2029, line: 159, type: !3550)
!10602 = !DILocalVariable(name: "i", scope: !10597, file: !2029, line: 160, type: !61)
!10603 = !DILocalVariable(name: "bist_data_inv", scope: !10597, file: !2029, line: 160, type: !61)
!10604 = !DILocalVariable(name: "bist_data_random", scope: !10597, file: !2029, line: 160, type: !61)
!10605 = !DILocation(line: 159, column: 36, scope: !10597)
!10606 = !DILocation(line: 0, scope: !10597)
!10607 = !DILocation(line: 165, column: 5, scope: !10597)
!10608 = !DILocation(line: 165, column: 19, scope: !10597)
!10609 = !DILocation(line: 165, column: 30, scope: !10597)
!10610 = !DILocation(line: 166, column: 5, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10597, file: !2029, line: 166, column: 5)
!10612 = !DILocation(line: 167, column: 9, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10614, file: !2029, line: 167, column: 9)
!10614 = distinct !DILexicalBlock(scope: !10615, file: !2029, line: 166, column: 66)
!10615 = distinct !DILexicalBlock(scope: !10611, file: !2029, line: 166, column: 5)
!10616 = !DILocation(line: 168, column: 13, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10618, file: !2029, line: 168, column: 13)
!10618 = distinct !DILexicalBlock(scope: !10619, file: !2029, line: 167, column: 34)
!10619 = distinct !DILexicalBlock(scope: !10613, file: !2029, line: 167, column: 9)
!10620 = !DILocation(line: 168, column: 57, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10617, file: !2029, line: 168, column: 13)
!10622 = distinct !{!10622, !10616, !10623}
!10623 = !DILocation(line: 183, column: 13, scope: !10617)
!10624 = !DILocation(line: 170, column: 42, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10621, file: !2029, line: 168, column: 83)
!10626 = !DILocation(line: 172, column: 42, scope: !10625)
!10627 = !DILocation(line: 174, column: 45, scope: !10625)
!10628 = !DILocation(line: 174, column: 59, scope: !10625)
!10629 = !DILocation(line: 174, column: 154, scope: !10625)
!10630 = !DILocation(line: 174, column: 87, scope: !10625)
!10631 = !DILocation(line: 174, column: 134, scope: !10625)
!10632 = !DILocation(line: 174, column: 42, scope: !10625)
!10633 = !DILocation(line: 175, column: 42, scope: !10625)
!10634 = !DILocation(line: 177, column: 17, scope: !10625)
!10635 = !DILocation(line: 177, column: 39, scope: !10625)
!10636 = !DILocation(line: 177, column: 50, scope: !10625)
!10637 = !DILocation(line: 177, column: 71, scope: !10625)
!10638 = distinct !{!10638, !10634, !10639}
!10639 = !DILocation(line: 177, column: 78, scope: !10625)
!10640 = !DILocation(line: 179, column: 36, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10625, file: !2029, line: 179, column: 21)
!10642 = !DILocation(line: 179, column: 47, scope: !10641)
!10643 = !DILocation(line: 179, column: 69, scope: !10641)
!10644 = !DILocation(line: 168, column: 79, scope: !10621)
!10645 = !DILocation(line: 179, column: 21, scope: !10625)
!10646 = !DILocation(line: 167, column: 30, scope: !10619)
!10647 = !DILocation(line: 167, column: 23, scope: !10619)
!10648 = distinct !{!10648, !10612, !10649}
!10649 = !DILocation(line: 184, column: 9, scope: !10613)
!10650 = !DILocation(line: 166, column: 62, scope: !10615)
!10651 = !DILocation(line: 166, column: 43, scope: !10615)
!10652 = distinct !{!10652, !10610, !10653}
!10653 = !DILocation(line: 185, column: 5, scope: !10611)
!10654 = !DILocation(line: 189, column: 1, scope: !10597)
!10655 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !2029, file: !2029, line: 190, type: !7363, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2028, retainedNodes: !293)
!10656 = !DILocation(line: 192, column: 9, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10655, file: !2029, line: 192, column: 9)
!10658 = !DILocation(line: 192, column: 26, scope: !10657)
!10659 = !DILocation(line: 0, scope: !10655)
!10660 = !DILocation(line: 197, column: 1, scope: !10655)
!10661 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !2029, file: !2029, line: 201, type: !291, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2028, retainedNodes: !10662)
!10662 = !{!10663, !10664}
!10663 = !DILocalVariable(name: "dqy_in_del", scope: !10661, file: !2029, line: 203, type: !985)
!10664 = !DILocalVariable(name: "dqs_in_del", scope: !10661, file: !2029, line: 204, type: !985)
!10665 = !DILocation(line: 0, scope: !10661)
!10666 = !DILocation(line: 206, column: 5, scope: !10661)
!10667 = !DILocation(line: 206, column: 19, scope: !10661)
!10668 = !DILocation(line: 206, column: 28, scope: !10661)
!10669 = !DILocation(line: 207, column: 19, scope: !10661)
!10670 = !DILocation(line: 207, column: 28, scope: !10661)
!10671 = !DILocation(line: 208, column: 19, scope: !10661)
!10672 = !DILocation(line: 208, column: 28, scope: !10661)
!10673 = !DILocation(line: 209, column: 19, scope: !10661)
!10674 = !DILocation(line: 209, column: 28, scope: !10661)
!10675 = !DILocation(line: 212, column: 23, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10677, file: !2029, line: 211, column: 78)
!10677 = distinct !DILexicalBlock(scope: !10678, file: !2029, line: 211, column: 5)
!10678 = distinct !DILexicalBlock(scope: !10661, file: !2029, line: 211, column: 5)
!10679 = !DILocation(line: 212, column: 32, scope: !10676)
!10680 = !DILocation(line: 213, column: 23, scope: !10676)
!10681 = !DILocation(line: 213, column: 32, scope: !10676)
!10682 = !DILocation(line: 215, column: 19, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10676, file: !2029, line: 215, column: 13)
!10684 = !DILocation(line: 215, column: 15, scope: !10683)
!10685 = !DILocation(line: 215, column: 13, scope: !10676)
!10686 = !DILocation(line: 211, column: 40, scope: !10677)
!10687 = !DILocation(line: 211, column: 5, scope: !10678)
!10688 = distinct !{!10688, !10687, !10689}
!10689 = !DILocation(line: 218, column: 5, scope: !10678)
!10690 = !DILocation(line: 211, column: 57, scope: !10677)
!10691 = !DILocation(line: 212, column: 9, scope: !10676)
!10692 = !DILocation(line: 212, column: 45, scope: !10676)
!10693 = !DILocation(line: 212, column: 83, scope: !10676)
!10694 = !DILocation(line: 212, column: 121, scope: !10676)
!10695 = !DILocation(line: 212, column: 70, scope: !10676)
!10696 = !DILocation(line: 212, column: 108, scope: !10676)
!10697 = !DILocation(line: 212, column: 146, scope: !10676)
!10698 = !DILocation(line: 222, column: 49, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10700, file: !2029, line: 221, column: 84)
!10700 = distinct !DILexicalBlock(scope: !10701, file: !2029, line: 221, column: 9)
!10701 = distinct !DILexicalBlock(scope: !10702, file: !2029, line: 221, column: 9)
!10702 = distinct !DILexicalBlock(scope: !10703, file: !2029, line: 220, column: 25)
!10703 = distinct !DILexicalBlock(scope: !10661, file: !2029, line: 220, column: 9)
!10704 = !DILocation(line: 222, column: 13, scope: !10699)
!10705 = !DILocation(line: 222, column: 27, scope: !10699)
!10706 = !DILocation(line: 222, column: 36, scope: !10699)
!10707 = !DILocation(line: 224, column: 23, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10699, file: !2029, line: 224, column: 17)
!10709 = !DILocation(line: 224, column: 19, scope: !10708)
!10710 = !DILocation(line: 224, column: 17, scope: !10699)
!10711 = distinct !{!10711, !10712, !10713}
!10712 = !DILocation(line: 221, column: 9, scope: !10701)
!10713 = !DILocation(line: 227, column: 9, scope: !10701)
!10714 = !DILocation(line: 230, column: 1, scope: !10661)
!10715 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !2029, file: !2029, line: 253, type: !291, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2028, retainedNodes: !293)
!10716 = !DILocation(line: 257, column: 26, scope: !10715)
!10717 = !DILocation(line: 259, column: 5, scope: !10715)
!10718 = !DILocation(line: 259, column: 19, scope: !10715)
!10719 = !DILocation(line: 259, column: 29, scope: !10715)
!10720 = !DILocation(line: 260, column: 5, scope: !10715)
!10721 = !DILocation(line: 260, column: 27, scope: !10715)
!10722 = !DILocation(line: 260, column: 93, scope: !10715)
!10723 = distinct !{!10723, !10720, !10724}
!10724 = !DILocation(line: 260, column: 98, scope: !10715)
!10725 = !DILocation(line: 261, column: 29, scope: !10715)
!10726 = !DILocation(line: 262, column: 5, scope: !10715)
!10727 = !DILocation(line: 262, column: 27, scope: !10715)
!10728 = !DILocation(line: 262, column: 93, scope: !10715)
!10729 = distinct !{!10729, !10726, !10730}
!10730 = !DILocation(line: 262, column: 98, scope: !10715)
!10731 = !DILocation(line: 264, column: 42, scope: !10715)
!10732 = !DILocation(line: 265, column: 48, scope: !10715)
!10733 = !DILocation(line: 267, column: 5, scope: !10715)
!10734 = !DILocation(line: 267, column: 27, scope: !10715)
!10735 = !DILocation(line: 267, column: 39, scope: !10715)
!10736 = !DILocation(line: 267, column: 65, scope: !10715)
!10737 = distinct !{!10737, !10733, !10738}
!10738 = !DILocation(line: 267, column: 70, scope: !10715)
!10739 = !DILocation(line: 269, column: 5, scope: !10715)
!10740 = !DILocation(line: 273, column: 8, scope: !10715)
!10741 = !DILocation(line: 275, column: 5, scope: !10715)
!10742 = !DILocation(line: 275, column: 27, scope: !10715)
!10743 = !DILocation(line: 275, column: 39, scope: !10715)
!10744 = !DILocation(line: 275, column: 65, scope: !10715)
!10745 = distinct !{!10745, !10741, !10746}
!10746 = !DILocation(line: 275, column: 70, scope: !10715)
!10747 = !DILocation(line: 278, column: 9, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10715, file: !2029, line: 278, column: 9)
!10749 = !DILocation(line: 278, column: 44, scope: !10748)
!10750 = !DILocation(line: 278, column: 9, scope: !10715)
!10751 = !DILocation(line: 279, column: 13, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10753, file: !2029, line: 279, column: 12)
!10753 = distinct !DILexicalBlock(scope: !10748, file: !2029, line: 278, column: 55)
!10754 = !DILocation(line: 279, column: 48, scope: !10752)
!10755 = !DILocation(line: 279, column: 56, scope: !10752)
!10756 = !DILocation(line: 0, scope: !10752)
!10757 = !DILocation(line: 288, column: 1, scope: !10715)
!10758 = distinct !DISubprogram(name: "custom_setEMI", scope: !2029, file: !2029, line: 294, type: !10759, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2028, retainedNodes: !293)
!10759 = !DISubroutineType(types: !10760)
!10760 = !{!1296}
!10761 = !DILocation(line: 298, column: 5, scope: !10758)
!10762 = !DILocation(line: 300, column: 5, scope: !10758)
!10763 = !DILocation(line: 302, column: 20, scope: !10758)
!10764 = !DILocation(line: 302, column: 18, scope: !10758)
!10765 = !DILocation(line: 303, column: 20, scope: !10758)
!10766 = !DILocation(line: 303, column: 18, scope: !10758)
!10767 = !DILocation(line: 304, column: 20, scope: !10758)
!10768 = !DILocation(line: 304, column: 18, scope: !10758)
!10769 = !DILocation(line: 307, column: 5, scope: !10758)
!10770 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !2029, file: !2029, line: 312, type: !10759, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2028, retainedNodes: !293)
!10771 = !DILocation(line: 319, column: 29, scope: !10770)
!10772 = !DILocation(line: 319, column: 5, scope: !10770)
!10773 = !DILocation(line: 319, column: 19, scope: !10770)
!10774 = !DILocation(line: 319, column: 27, scope: !10770)
!10775 = !DILocation(line: 320, column: 29, scope: !10770)
!10776 = !DILocation(line: 320, column: 19, scope: !10770)
!10777 = !DILocation(line: 320, column: 27, scope: !10770)
!10778 = !DILocation(line: 322, column: 30, scope: !10770)
!10779 = !DILocation(line: 322, column: 19, scope: !10770)
!10780 = !DILocation(line: 322, column: 28, scope: !10770)
!10781 = !DILocation(line: 324, column: 30, scope: !10770)
!10782 = !DILocation(line: 324, column: 19, scope: !10770)
!10783 = !DILocation(line: 324, column: 28, scope: !10770)
!10784 = !DILocation(line: 326, column: 31, scope: !10770)
!10785 = !DILocation(line: 326, column: 19, scope: !10770)
!10786 = !DILocation(line: 326, column: 29, scope: !10770)
!10787 = !DILocation(line: 327, column: 31, scope: !10770)
!10788 = !DILocation(line: 327, column: 19, scope: !10770)
!10789 = !DILocation(line: 327, column: 29, scope: !10770)
!10790 = !DILocation(line: 332, column: 30, scope: !10770)
!10791 = !DILocation(line: 332, column: 19, scope: !10770)
!10792 = !DILocation(line: 332, column: 28, scope: !10770)
!10793 = !DILocation(line: 333, column: 30, scope: !10770)
!10794 = !DILocation(line: 333, column: 19, scope: !10770)
!10795 = !DILocation(line: 333, column: 28, scope: !10770)
!10796 = !DILocation(line: 334, column: 30, scope: !10770)
!10797 = !DILocation(line: 334, column: 19, scope: !10770)
!10798 = !DILocation(line: 334, column: 28, scope: !10770)
!10799 = !DILocation(line: 336, column: 30, scope: !10770)
!10800 = !DILocation(line: 336, column: 19, scope: !10770)
!10801 = !DILocation(line: 336, column: 28, scope: !10770)
!10802 = !DILocation(line: 337, column: 30, scope: !10770)
!10803 = !DILocation(line: 337, column: 19, scope: !10770)
!10804 = !DILocation(line: 337, column: 28, scope: !10770)
!10805 = !DILocation(line: 338, column: 30, scope: !10770)
!10806 = !DILocation(line: 338, column: 19, scope: !10770)
!10807 = !DILocation(line: 338, column: 28, scope: !10770)
!10808 = !DILocation(line: 339, column: 30, scope: !10770)
!10809 = !DILocation(line: 339, column: 19, scope: !10770)
!10810 = !DILocation(line: 339, column: 28, scope: !10770)
!10811 = !DILocation(line: 341, column: 5, scope: !10770)
!10812 = !DILocation(line: 345, column: 5, scope: !10770)
!10813 = !DILocation(line: 345, column: 19, scope: !10770)
!10814 = !DILocation(line: 345, column: 28, scope: !10770)
!10815 = !DILocation(line: 346, column: 5, scope: !10770)
!10816 = !DILocation(line: 346, column: 28, scope: !10770)
!10817 = !DILocation(line: 346, column: 82, scope: !10770)
!10818 = distinct !{!10818, !10815, !10819}
!10819 = !DILocation(line: 346, column: 87, scope: !10770)
!10820 = !DILocation(line: 347, column: 28, scope: !10770)
!10821 = !DILocation(line: 348, column: 5, scope: !10770)
!10822 = !DILocation(line: 348, column: 28, scope: !10770)
!10823 = !DILocation(line: 348, column: 82, scope: !10770)
!10824 = distinct !{!10824, !10821, !10825}
!10825 = !DILocation(line: 348, column: 87, scope: !10770)
!10826 = !DILocation(line: 349, column: 28, scope: !10770)
!10827 = !DILocation(line: 351, column: 5, scope: !10770)
!10828 = !DILocation(line: 353, column: 5, scope: !10770)
!10829 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !2029, file: !2029, line: 358, type: !291, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2028, retainedNodes: !293)
!10830 = !DILocation(line: 361, column: 36, scope: !10829)
!10831 = !DILocation(line: 361, column: 50, scope: !10829)
!10832 = !DILocation(line: 361, column: 34, scope: !10829)
!10833 = !DILocation(line: 362, column: 50, scope: !10829)
!10834 = !DILocation(line: 362, column: 34, scope: !10829)
!10835 = !DILocation(line: 363, column: 50, scope: !10829)
!10836 = !DILocation(line: 363, column: 34, scope: !10829)
!10837 = !DILocation(line: 364, column: 50, scope: !10829)
!10838 = !DILocation(line: 364, column: 34, scope: !10829)
!10839 = !DILocation(line: 365, column: 50, scope: !10829)
!10840 = !DILocation(line: 365, column: 34, scope: !10829)
!10841 = !DILocation(line: 366, column: 50, scope: !10829)
!10842 = !DILocation(line: 366, column: 34, scope: !10829)
!10843 = !DILocation(line: 367, column: 50, scope: !10829)
!10844 = !DILocation(line: 367, column: 34, scope: !10829)
!10845 = !DILocation(line: 368, column: 50, scope: !10829)
!10846 = !DILocation(line: 368, column: 34, scope: !10829)
!10847 = !DILocation(line: 369, column: 50, scope: !10829)
!10848 = !DILocation(line: 369, column: 34, scope: !10829)
!10849 = !DILocation(line: 370, column: 50, scope: !10829)
!10850 = !DILocation(line: 370, column: 34, scope: !10829)
!10851 = !DILocation(line: 371, column: 50, scope: !10829)
!10852 = !DILocation(line: 371, column: 34, scope: !10829)
!10853 = !DILocation(line: 372, column: 50, scope: !10829)
!10854 = !DILocation(line: 372, column: 34, scope: !10829)
!10855 = !DILocation(line: 373, column: 51, scope: !10829)
!10856 = !DILocation(line: 373, column: 35, scope: !10829)
!10857 = !DILocation(line: 374, column: 51, scope: !10829)
!10858 = !DILocation(line: 374, column: 35, scope: !10829)
!10859 = !DILocation(line: 375, column: 50, scope: !10829)
!10860 = !DILocation(line: 375, column: 34, scope: !10829)
!10861 = !DILocation(line: 376, column: 50, scope: !10829)
!10862 = !DILocation(line: 376, column: 34, scope: !10829)
!10863 = !DILocation(line: 377, column: 50, scope: !10829)
!10864 = !DILocation(line: 377, column: 34, scope: !10829)
!10865 = !DILocation(line: 378, column: 50, scope: !10829)
!10866 = !DILocation(line: 378, column: 34, scope: !10829)
!10867 = !DILocation(line: 379, column: 50, scope: !10829)
!10868 = !DILocation(line: 379, column: 34, scope: !10829)
!10869 = !DILocation(line: 380, column: 50, scope: !10829)
!10870 = !DILocation(line: 380, column: 34, scope: !10829)
!10871 = !DILocation(line: 382, column: 1, scope: !10829)
!10872 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !2029, file: !2029, line: 384, type: !291, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2028, retainedNodes: !293)
!10873 = !DILocation(line: 387, column: 5, scope: !10872)
!10874 = !DILocation(line: 387, column: 27, scope: !10872)
!10875 = !DILocation(line: 387, column: 36, scope: !10872)
!10876 = !DILocation(line: 387, column: 76, scope: !10872)
!10877 = distinct !{!10877, !10873, !10878}
!10878 = !DILocation(line: 387, column: 84, scope: !10872)
!10879 = !DILocation(line: 388, column: 50, scope: !10872)
!10880 = !DILocation(line: 388, column: 19, scope: !10872)
!10881 = !DILocation(line: 388, column: 28, scope: !10872)
!10882 = !DILocation(line: 389, column: 50, scope: !10872)
!10883 = !DILocation(line: 389, column: 19, scope: !10872)
!10884 = !DILocation(line: 389, column: 28, scope: !10872)
!10885 = !DILocation(line: 390, column: 50, scope: !10872)
!10886 = !DILocation(line: 390, column: 19, scope: !10872)
!10887 = !DILocation(line: 390, column: 28, scope: !10872)
!10888 = !DILocation(line: 391, column: 50, scope: !10872)
!10889 = !DILocation(line: 391, column: 19, scope: !10872)
!10890 = !DILocation(line: 391, column: 28, scope: !10872)
!10891 = !DILocation(line: 392, column: 50, scope: !10872)
!10892 = !DILocation(line: 392, column: 19, scope: !10872)
!10893 = !DILocation(line: 392, column: 28, scope: !10872)
!10894 = !DILocation(line: 393, column: 50, scope: !10872)
!10895 = !DILocation(line: 393, column: 19, scope: !10872)
!10896 = !DILocation(line: 393, column: 28, scope: !10872)
!10897 = !DILocation(line: 394, column: 51, scope: !10872)
!10898 = !DILocation(line: 394, column: 19, scope: !10872)
!10899 = !DILocation(line: 394, column: 29, scope: !10872)
!10900 = !DILocation(line: 395, column: 51, scope: !10872)
!10901 = !DILocation(line: 395, column: 19, scope: !10872)
!10902 = !DILocation(line: 395, column: 29, scope: !10872)
!10903 = !DILocation(line: 396, column: 50, scope: !10872)
!10904 = !DILocation(line: 396, column: 19, scope: !10872)
!10905 = !DILocation(line: 396, column: 28, scope: !10872)
!10906 = !DILocation(line: 397, column: 50, scope: !10872)
!10907 = !DILocation(line: 397, column: 19, scope: !10872)
!10908 = !DILocation(line: 397, column: 28, scope: !10872)
!10909 = !DILocation(line: 398, column: 50, scope: !10872)
!10910 = !DILocation(line: 398, column: 19, scope: !10872)
!10911 = !DILocation(line: 398, column: 28, scope: !10872)
!10912 = !DILocation(line: 399, column: 50, scope: !10872)
!10913 = !DILocation(line: 399, column: 19, scope: !10872)
!10914 = !DILocation(line: 399, column: 28, scope: !10872)
!10915 = !DILocation(line: 400, column: 50, scope: !10872)
!10916 = !DILocation(line: 400, column: 19, scope: !10872)
!10917 = !DILocation(line: 400, column: 28, scope: !10872)
!10918 = !DILocation(line: 401, column: 50, scope: !10872)
!10919 = !DILocation(line: 401, column: 19, scope: !10872)
!10920 = !DILocation(line: 401, column: 28, scope: !10872)
!10921 = !DILocation(line: 402, column: 50, scope: !10872)
!10922 = !DILocation(line: 402, column: 19, scope: !10872)
!10923 = !DILocation(line: 402, column: 28, scope: !10872)
!10924 = !DILocation(line: 403, column: 50, scope: !10872)
!10925 = !DILocation(line: 403, column: 19, scope: !10872)
!10926 = !DILocation(line: 403, column: 28, scope: !10872)
!10927 = !DILocation(line: 404, column: 50, scope: !10872)
!10928 = !DILocation(line: 404, column: 19, scope: !10872)
!10929 = !DILocation(line: 404, column: 28, scope: !10872)
!10930 = !DILocation(line: 405, column: 50, scope: !10872)
!10931 = !DILocation(line: 405, column: 19, scope: !10872)
!10932 = !DILocation(line: 405, column: 28, scope: !10872)
!10933 = !DILocation(line: 406, column: 50, scope: !10872)
!10934 = !DILocation(line: 406, column: 19, scope: !10872)
!10935 = !DILocation(line: 406, column: 28, scope: !10872)
!10936 = !DILocation(line: 408, column: 1, scope: !10872)
!10937 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !2029, file: !2029, line: 410, type: !291, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2028, retainedNodes: !293)
!10938 = !DILocation(line: 413, column: 29, scope: !10937)
!10939 = !DILocation(line: 413, column: 43, scope: !10937)
!10940 = !DILocation(line: 413, column: 51, scope: !10937)
!10941 = !DILocation(line: 413, column: 27, scope: !10937)
!10942 = !DILocation(line: 416, column: 19, scope: !10937)
!10943 = !DILocation(line: 416, column: 29, scope: !10937)
!10944 = !DILocation(line: 417, column: 5, scope: !10937)
!10945 = !DILocation(line: 417, column: 27, scope: !10937)
!10946 = !DILocation(line: 417, column: 93, scope: !10937)
!10947 = distinct !{!10947, !10944, !10948}
!10948 = !DILocation(line: 417, column: 98, scope: !10937)
!10949 = !DILocation(line: 418, column: 29, scope: !10937)
!10950 = !DILocation(line: 419, column: 5, scope: !10937)
!10951 = !DILocation(line: 419, column: 27, scope: !10937)
!10952 = !DILocation(line: 419, column: 93, scope: !10937)
!10953 = distinct !{!10953, !10950, !10954}
!10954 = !DILocation(line: 419, column: 98, scope: !10937)
!10955 = !DILocation(line: 421, column: 5, scope: !10937)
!10956 = !DILocation(line: 422, column: 5, scope: !10937)
!10957 = !DILocation(line: 422, column: 19, scope: !10937)
!10958 = !DILocation(line: 422, column: 28, scope: !10937)
!10959 = !DILocation(line: 423, column: 5, scope: !10937)
!10960 = !DILocation(line: 423, column: 28, scope: !10937)
!10961 = !DILocation(line: 423, column: 82, scope: !10937)
!10962 = distinct !{!10962, !10959, !10963}
!10963 = !DILocation(line: 423, column: 87, scope: !10937)
!10964 = !DILocation(line: 424, column: 28, scope: !10937)
!10965 = !DILocation(line: 425, column: 5, scope: !10937)
!10966 = !DILocation(line: 425, column: 28, scope: !10937)
!10967 = !DILocation(line: 425, column: 82, scope: !10937)
!10968 = distinct !{!10968, !10965, !10969}
!10969 = !DILocation(line: 425, column: 87, scope: !10937)
!10970 = !DILocation(line: 426, column: 28, scope: !10937)
!10971 = !DILocation(line: 428, column: 50, scope: !10937)
!10972 = !DILocation(line: 428, column: 19, scope: !10937)
!10973 = !DILocation(line: 428, column: 28, scope: !10937)
!10974 = !DILocation(line: 432, column: 1, scope: !10937)
!10975 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !2029, file: !2029, line: 434, type: !291, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2028, retainedNodes: !293)
!10976 = !DILocation(line: 437, column: 5, scope: !10975)
!10977 = !DILocation(line: 440, column: 5, scope: !10975)
!10978 = !DILocation(line: 440, column: 27, scope: !10975)
!10979 = !DILocation(line: 440, column: 36, scope: !10975)
!10980 = !DILocation(line: 440, column: 76, scope: !10975)
!10981 = distinct !{!10981, !10977, !10982}
!10982 = !DILocation(line: 440, column: 84, scope: !10975)
!10983 = !DILocation(line: 441, column: 45, scope: !10975)
!10984 = !DILocation(line: 441, column: 54, scope: !10975)
!10985 = !DILocation(line: 441, column: 28, scope: !10975)
!10986 = !DILocation(line: 442, column: 19, scope: !10975)
!10987 = !DILocation(line: 442, column: 31, scope: !10975)
!10988 = !DILocation(line: 443, column: 5, scope: !10975)
!10989 = !DILocation(line: 443, column: 27, scope: !10975)
!10990 = !DILocation(line: 443, column: 39, scope: !10975)
!10991 = !DILocation(line: 443, column: 65, scope: !10975)
!10992 = distinct !{!10992, !10988, !10993}
!10993 = !DILocation(line: 443, column: 70, scope: !10975)
!10994 = !DILocation(line: 444, column: 19, scope: !10975)
!10995 = !DILocation(line: 444, column: 28, scope: !10975)
!10996 = !DILocation(line: 445, column: 5, scope: !10975)
!10997 = !DILocation(line: 445, column: 27, scope: !10975)
!10998 = !DILocation(line: 445, column: 91, scope: !10975)
!10999 = distinct !{!10999, !10996, !11000}
!11000 = !DILocation(line: 445, column: 96, scope: !10975)
!11001 = !DILocation(line: 447, column: 43, scope: !10975)
!11002 = !DILocation(line: 447, column: 51, scope: !10975)
!11003 = !DILocation(line: 447, column: 27, scope: !10975)
!11004 = !DILocation(line: 450, column: 1, scope: !10975)
!11005 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !2029, file: !2029, line: 452, type: !11006, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2028, retainedNodes: !11009)
!11006 = !DISubroutineType(types: !11007)
!11007 = !{!985, !11008}
!11008 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !2032, line: 43, baseType: !2031)
!11009 = !{!11010, !11011}
!11010 = !DILocalVariable(name: "clock", arg: 1, scope: !11005, file: !2029, line: 452, type: !11008)
!11011 = !DILocalVariable(name: "delay", scope: !11005, file: !2029, line: 457, type: !60)
!11012 = !DILocation(line: 0, scope: !11005)
!11013 = !DILocation(line: 457, column: 5, scope: !11005)
!11014 = !DILocation(line: 457, column: 23, scope: !11005)
!11015 = !DILocation(line: 458, column: 9, scope: !11005)
!11016 = !DILocation(line: 465, column: 9, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11018, file: !2029, line: 458, column: 39)
!11018 = distinct !DILexicalBlock(scope: !11005, file: !2029, line: 458, column: 9)
!11019 = !DILocation(line: 465, column: 23, scope: !11017)
!11020 = !DILocation(line: 465, column: 32, scope: !11017)
!11021 = !DILocation(line: 466, column: 32, scope: !11017)
!11022 = !DILocation(line: 467, column: 9, scope: !11017)
!11023 = !DILocation(line: 467, column: 32, scope: !11017)
!11024 = !DILocation(line: 467, column: 86, scope: !11017)
!11025 = distinct !{!11025, !11022, !11026}
!11026 = !DILocation(line: 467, column: 91, scope: !11017)
!11027 = !DILocation(line: 468, column: 32, scope: !11017)
!11028 = !DILocation(line: 469, column: 9, scope: !11017)
!11029 = !DILocation(line: 469, column: 32, scope: !11017)
!11030 = !DILocation(line: 469, column: 86, scope: !11017)
!11031 = distinct !{!11031, !11028, !11032}
!11032 = !DILocation(line: 469, column: 91, scope: !11017)
!11033 = !DILocation(line: 470, column: 32, scope: !11017)
!11034 = !DILocation(line: 472, column: 20, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11017, file: !2029, line: 472, column: 9)
!11036 = !DILocation(line: 472, column: 25, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11035, file: !2029, line: 472, column: 9)
!11038 = !DILocation(line: 472, column: 31, scope: !11037)
!11039 = !DILocation(line: 472, column: 9, scope: !11035)
!11040 = !DILocation(line: 472, column: 44, scope: !11037)
!11041 = distinct !{!11041, !11039, !11042}
!11042 = !DILocation(line: 472, column: 47, scope: !11035)
!11043 = !DILocation(line: 478, column: 9, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11045, file: !2029, line: 477, column: 12)
!11045 = distinct !DILexicalBlock(scope: !11018, file: !2029, line: 475, column: 16)
!11046 = !DILocation(line: 483, column: 1, scope: !11005)
!11047 = distinct !DISubprogram(name: "emi_mask_master", scope: !2029, file: !2029, line: 487, type: !291, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2028, retainedNodes: !293)
!11048 = !DILocation(line: 490, column: 30, scope: !11047)
!11049 = !DILocation(line: 490, column: 44, scope: !11047)
!11050 = !DILocation(line: 490, column: 53, scope: !11047)
!11051 = !DILocation(line: 490, column: 28, scope: !11047)
!11052 = !DILocation(line: 492, column: 1, scope: !11047)
!11053 = distinct !DISubprogram(name: "emi_unmask_master", scope: !2029, file: !2029, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2028, retainedNodes: !293)
!11054 = !DILocation(line: 497, column: 30, scope: !11053)
!11055 = !DILocation(line: 497, column: 44, scope: !11053)
!11056 = !DILocation(line: 497, column: 53, scope: !11053)
!11057 = !DILocation(line: 497, column: 28, scope: !11053)
!11058 = !DILocation(line: 500, column: 1, scope: !11053)
!11059 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !2195, file: !2195, line: 56, type: !6145, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !293)
!11060 = !DILocation(line: 61, column: 5, scope: !11059)
!11061 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !2195, file: !2195, line: 65, type: !6145, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !293)
!11062 = !DILocation(line: 70, column: 5, scope: !11061)
!11063 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !2195, file: !2195, line: 74, type: !291, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !293)
!11064 = !DILocation(line: 79, column: 9, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11066, file: !2195, line: 78, column: 12)
!11066 = distinct !DILexicalBlock(scope: !11063, file: !2195, line: 76, column: 9)
!11067 = !DILocation(line: 81, column: 1, scope: !11063)
!11068 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !2195, file: !2195, line: 83, type: !291, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !293)
!11069 = !DILocation(line: 88, column: 9, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !11071, file: !2195, line: 87, column: 12)
!11071 = distinct !DILexicalBlock(scope: !11068, file: !2195, line: 85, column: 9)
!11072 = !DILocation(line: 90, column: 1, scope: !11068)
!11073 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !2195, file: !2195, line: 92, type: !291, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !293)
!11074 = !DILocation(line: 97, column: 9, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11076, file: !2195, line: 96, column: 12)
!11076 = distinct !DILexicalBlock(scope: !11073, file: !2195, line: 94, column: 9)
!11077 = !DILocation(line: 99, column: 1, scope: !11073)
!11078 = distinct !DISubprogram(name: "peri_clk_26m", scope: !2195, file: !2195, line: 101, type: !291, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !293)
!11079 = !DILocation(line: 106, column: 9, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11081, file: !2195, line: 105, column: 12)
!11081 = distinct !DILexicalBlock(scope: !11078, file: !2195, line: 103, column: 9)
!11082 = !DILocation(line: 108, column: 1, scope: !11078)
!11083 = distinct !DISubprogram(name: "__io_putchar", scope: !2630, file: !2630, line: 52, type: !11084, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !11086)
!11084 = !DISubroutineType(types: !11085)
!11085 = !{!7, !7}
!11086 = !{!11087}
!11087 = !DILocalVariable(name: "ch", arg: 1, scope: !11083, file: !2630, line: 52, type: !7)
!11088 = !DILocation(line: 0, scope: !11083)
!11089 = !DILocation(line: 59, column: 35, scope: !11083)
!11090 = !DILocation(line: 59, column: 5, scope: !11083)
!11091 = !DILocation(line: 60, column: 5, scope: !11083)
!11092 = distinct !DISubprogram(name: "main", scope: !2630, file: !2630, line: 140, type: !10587, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !293)
!11093 = !DILocation(line: 143, column: 5, scope: !11092)
!11094 = !DILocation(line: 145, column: 5, scope: !11092)
!11095 = !DILocation(line: 148, column: 5, scope: !11092)
!11096 = !DILocation(line: 319, column: 3, scope: !11097, inlinedAt: !11098)
!11097 = distinct !DISubprogram(name: "__enable_irq", scope: !6457, file: !6457, line: 317, type: !291, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !293)
!11098 = distinct !DILocation(line: 151, column: 5, scope: !11092)
!11099 = !{i64 658706}
!11100 = !DILocation(line: 496, column: 3, scope: !11101, inlinedAt: !11102)
!11101 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !6457, file: !6457, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !293)
!11102 = distinct !DILocation(line: 152, column: 5, scope: !11092)
!11103 = !{i64 662981}
!11104 = !DILocation(line: 155, column: 5, scope: !11092)
!11105 = !DILocation(line: 158, column: 5, scope: !11092)
!11106 = !DILocation(line: 159, column: 5, scope: !11092)
!11107 = !DILocation(line: 161, column: 5, scope: !11092)
!11108 = !DILocation(line: 163, column: 5, scope: !11092)
!11109 = !DILocation(line: 163, column: 5, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11111, file: !2630, line: 163, column: 5)
!11111 = distinct !DILexicalBlock(scope: !11092, file: !2630, line: 163, column: 5)
!11112 = distinct !{!11112, !11113, !11114}
!11113 = !DILocation(line: 163, column: 5, scope: !11111)
!11114 = !DILocation(line: 163, column: 13, scope: !11111)
!11115 = distinct !DISubprogram(name: "SystemClock_Config", scope: !2630, file: !2630, line: 90, type: !291, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !293)
!11116 = !DILocation(line: 92, column: 5, scope: !11115)
!11117 = !DILocation(line: 93, column: 1, scope: !11115)
!11118 = distinct !DISubprogram(name: "prvSetupHardware", scope: !2630, file: !2630, line: 99, type: !291, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !293)
!11119 = !DILocation(line: 102, column: 5, scope: !11118)
!11120 = !DILocation(line: 103, column: 5, scope: !11118)
!11121 = !DILocation(line: 104, column: 5, scope: !11118)
!11122 = !DILocation(line: 105, column: 1, scope: !11118)
!11123 = distinct !DISubprogram(name: "wdt_feed_watchdog_example", scope: !2630, file: !2630, line: 112, type: !291, scopeLine: 113, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !11124)
!11124 = !{!11125, !11131}
!11125 = !DILocalVariable(name: "wdt_init", scope: !11123, file: !2630, line: 114, type: !11126)
!11126 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_wdt_config_t", file: !872, line: 228, baseType: !11127)
!11127 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 225, size: 64, elements: !11128)
!11128 = !{!11129, !11130}
!11129 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !11127, file: !872, line: 226, baseType: !905, size: 32)
!11130 = !DIDerivedType(tag: DW_TAG_member, name: "seconds", scope: !11127, file: !872, line: 227, baseType: !61, size: 32, offset: 32)
!11131 = !DILocalVariable(name: "my_ret", scope: !11123, file: !2630, line: 117, type: !6032)
!11132 = !DILocation(line: 114, column: 5, scope: !11123)
!11133 = !DILocation(line: 114, column: 22, scope: !11123)
!11134 = !DILocation(line: 115, column: 14, scope: !11123)
!11135 = !DILocation(line: 115, column: 19, scope: !11123)
!11136 = !DILocation(line: 116, column: 14, scope: !11123)
!11137 = !DILocation(line: 116, column: 22, scope: !11123)
!11138 = !DILocation(line: 119, column: 5, scope: !11123)
!11139 = !DILocation(line: 121, column: 14, scope: !11123)
!11140 = !DILocation(line: 0, scope: !11123)
!11141 = !DILocation(line: 122, column: 27, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11123, file: !2630, line: 122, column: 9)
!11143 = !DILocation(line: 122, column: 9, scope: !11123)
!11144 = !DILocation(line: 126, column: 14, scope: !11123)
!11145 = !DILocation(line: 127, column: 27, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11123, file: !2630, line: 127, column: 9)
!11147 = !DILocation(line: 127, column: 9, scope: !11123)
!11148 = !DILocation(line: 132, column: 5, scope: !11123)
!11149 = !DILocation(line: 134, column: 5, scope: !11123)
!11150 = !DILocation(line: 138, column: 1, scope: !11123)
!11151 = distinct !DISubprogram(name: "plain_log_uart_init", scope: !2630, file: !2630, line: 68, type: !291, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !11152)
!11152 = !{!11153}
!11153 = !DILocalVariable(name: "uart_config", scope: !11151, file: !2630, line: 70, type: !11154)
!11154 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !654, line: 378, baseType: !11155)
!11155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 373, size: 128, elements: !11156)
!11156 = !{!11157, !11158, !11159, !11160}
!11157 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !11155, file: !654, line: 374, baseType: !4681, size: 32)
!11158 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !11155, file: !654, line: 375, baseType: !4731, size: 32, offset: 32)
!11159 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !11155, file: !654, line: 376, baseType: !4733, size: 32, offset: 64)
!11160 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !11155, file: !654, line: 377, baseType: !4735, size: 32, offset: 96)
!11161 = !DILocation(line: 70, column: 5, scope: !11151)
!11162 = !DILocation(line: 70, column: 23, scope: !11151)
!11163 = !DILocation(line: 73, column: 5, scope: !11151)
!11164 = !DILocation(line: 74, column: 5, scope: !11151)
!11165 = !DILocation(line: 75, column: 5, scope: !11151)
!11166 = !DILocation(line: 76, column: 5, scope: !11151)
!11167 = !DILocation(line: 79, column: 17, scope: !11151)
!11168 = !DILocation(line: 79, column: 26, scope: !11151)
!11169 = !DILocation(line: 80, column: 17, scope: !11151)
!11170 = !DILocation(line: 80, column: 29, scope: !11151)
!11171 = !DILocation(line: 81, column: 17, scope: !11151)
!11172 = !DILocation(line: 81, column: 26, scope: !11151)
!11173 = !DILocation(line: 82, column: 17, scope: !11151)
!11174 = !DILocation(line: 82, column: 24, scope: !11151)
!11175 = !DILocation(line: 83, column: 5, scope: !11151)
!11176 = !DILocation(line: 84, column: 1, scope: !11151)
!11177 = distinct !DISubprogram(name: "_close", scope: !2207, file: !2207, line: 5, type: !11084, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !11178)
!11178 = !{!11179}
!11179 = !DILocalVariable(name: "file", arg: 1, scope: !11177, file: !2207, line: 5, type: !7)
!11180 = !DILocation(line: 0, scope: !11177)
!11181 = !DILocation(line: 7, column: 5, scope: !11177)
!11182 = distinct !DISubprogram(name: "_fstat", scope: !2207, file: !2207, line: 10, type: !11183, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !11231)
!11183 = !DISubroutineType(types: !11184)
!11184 = !{!7, !7, !11185}
!11185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11186, size: 32)
!11186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !11187, line: 27, size: 704, elements: !11188)
!11187 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!11188 = !{!11189, !11192, !11195, !11198, !11201, !11204, !11207, !11208, !11211, !11221, !11222, !11223, !11226, !11229}
!11189 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !11186, file: !11187, line: 29, baseType: !11190, size: 16)
!11190 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !2211, line: 161, baseType: !11191)
!11191 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2251, line: 56, baseType: !1482)
!11192 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !11186, file: !11187, line: 30, baseType: !11193, size: 16, offset: 16)
!11193 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !2211, line: 139, baseType: !11194)
!11194 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2251, line: 75, baseType: !1078)
!11195 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !11186, file: !11187, line: 31, baseType: !11196, size: 32, offset: 32)
!11196 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !2211, line: 189, baseType: !11197)
!11197 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2251, line: 90, baseType: !63)
!11198 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !11186, file: !11187, line: 32, baseType: !11199, size: 16, offset: 64)
!11199 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !2211, line: 194, baseType: !11200)
!11200 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2251, line: 209, baseType: !1078)
!11201 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !11186, file: !11187, line: 33, baseType: !11202, size: 16, offset: 80)
!11202 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !2211, line: 165, baseType: !11203)
!11203 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2251, line: 60, baseType: !1078)
!11204 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !11186, file: !11187, line: 34, baseType: !11205, size: 16, offset: 96)
!11205 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !2211, line: 169, baseType: !11206)
!11206 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2251, line: 63, baseType: !1078)
!11207 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !11186, file: !11187, line: 35, baseType: !11190, size: 16, offset: 112)
!11208 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !11186, file: !11187, line: 36, baseType: !11209, size: 32, offset: 128)
!11209 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2211, line: 157, baseType: !11210)
!11210 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2251, line: 102, baseType: !2267)
!11211 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !11186, file: !11187, line: 42, baseType: !11212, size: 128, offset: 192)
!11212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !11213, line: 47, size: 128, elements: !11214)
!11213 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!11214 = !{!11215, !11220}
!11215 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !11212, file: !11213, line: 48, baseType: !11216, size: 64)
!11216 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !11217, line: 42, baseType: !11218)
!11217 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!11218 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !64, line: 200, baseType: !11219)
!11219 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!11220 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !11212, file: !11213, line: 49, baseType: !2252, size: 32, offset: 64)
!11221 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !11186, file: !11187, line: 43, baseType: !11212, size: 128, offset: 320)
!11222 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !11186, file: !11187, line: 44, baseType: !11212, size: 128, offset: 448)
!11223 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !11186, file: !11187, line: 45, baseType: !11224, size: 32, offset: 576)
!11224 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !2211, line: 102, baseType: !11225)
!11225 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2251, line: 34, baseType: !2252)
!11226 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !11186, file: !11187, line: 46, baseType: !11227, size: 32, offset: 608)
!11227 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !2211, line: 97, baseType: !11228)
!11228 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2251, line: 30, baseType: !2252)
!11229 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !11186, file: !11187, line: 48, baseType: !11230, size: 64, offset: 640)
!11230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2252, size: 64, elements: !465)
!11231 = !{!11232, !11233}
!11232 = !DILocalVariable(name: "file", arg: 1, scope: !11182, file: !2207, line: 10, type: !7)
!11233 = !DILocalVariable(name: "st", arg: 2, scope: !11182, file: !2207, line: 10, type: !11185)
!11234 = !DILocation(line: 0, scope: !11182)
!11235 = !DILocation(line: 12, column: 5, scope: !11182)
!11236 = distinct !DISubprogram(name: "_isatty", scope: !2207, file: !2207, line: 15, type: !11084, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !11237)
!11237 = !{!11238}
!11238 = !DILocalVariable(name: "file", arg: 1, scope: !11236, file: !2207, line: 15, type: !7)
!11239 = !DILocation(line: 0, scope: !11236)
!11240 = !DILocation(line: 17, column: 5, scope: !11236)
!11241 = distinct !DISubprogram(name: "_lseek", scope: !2207, file: !2207, line: 20, type: !11242, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !11244)
!11242 = !DISubroutineType(types: !11243)
!11243 = !{!7, !7, !7, !7}
!11244 = !{!11245, !11246, !11247}
!11245 = !DILocalVariable(name: "file", arg: 1, scope: !11241, file: !2207, line: 20, type: !7)
!11246 = !DILocalVariable(name: "ptr", arg: 2, scope: !11241, file: !2207, line: 20, type: !7)
!11247 = !DILocalVariable(name: "dir", arg: 3, scope: !11241, file: !2207, line: 20, type: !7)
!11248 = !DILocation(line: 0, scope: !11241)
!11249 = !DILocation(line: 22, column: 5, scope: !11241)
!11250 = distinct !DISubprogram(name: "_open", scope: !2207, file: !2207, line: 25, type: !11251, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !11253)
!11251 = !DISubroutineType(types: !11252)
!11252 = !{!7, !2245, !7, !7}
!11253 = !{!11254, !11255, !11256}
!11254 = !DILocalVariable(name: "name", arg: 1, scope: !11250, file: !2207, line: 25, type: !2245)
!11255 = !DILocalVariable(name: "flags", arg: 2, scope: !11250, file: !2207, line: 25, type: !7)
!11256 = !DILocalVariable(name: "mode", arg: 3, scope: !11250, file: !2207, line: 25, type: !7)
!11257 = !DILocation(line: 0, scope: !11250)
!11258 = !DILocation(line: 27, column: 5, scope: !11250)
!11259 = distinct !DISubprogram(name: "_read", scope: !2207, file: !2207, line: 30, type: !11260, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !11262)
!11260 = !DISubroutineType(types: !11261)
!11261 = !{!7, !7, !2212, !7}
!11262 = !{!11263, !11264, !11265}
!11263 = !DILocalVariable(name: "file", arg: 1, scope: !11259, file: !2207, line: 30, type: !7)
!11264 = !DILocalVariable(name: "ptr", arg: 2, scope: !11259, file: !2207, line: 30, type: !2212)
!11265 = !DILocalVariable(name: "len", arg: 3, scope: !11259, file: !2207, line: 30, type: !7)
!11266 = !DILocation(line: 0, scope: !11259)
!11267 = !DILocation(line: 32, column: 5, scope: !11259)
!11268 = distinct !DISubprogram(name: "_getpid", scope: !2207, file: !2207, line: 48, type: !10587, scopeLine: 49, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !293)
!11269 = !DILocation(line: 50, column: 5, scope: !11268)
!11270 = distinct !DISubprogram(name: "_kill", scope: !2207, file: !2207, line: 56, type: !11271, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !11273)
!11271 = !DISubroutineType(types: !11272)
!11272 = !{!7, !7, !7}
!11273 = !{!11274, !11275}
!11274 = !DILocalVariable(name: "pid", arg: 1, scope: !11270, file: !2207, line: 56, type: !7)
!11275 = !DILocalVariable(name: "sig", arg: 2, scope: !11270, file: !2207, line: 56, type: !7)
!11276 = !DILocation(line: 0, scope: !11270)
!11277 = !DILocation(line: 58, column: 5, scope: !11270)
!11278 = distinct !DISubprogram(name: "_exit", scope: !2207, file: !2207, line: 61, type: !11084, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !11279)
!11279 = !{!11280}
!11280 = !DILocalVariable(name: "val", arg: 1, scope: !11278, file: !2207, line: 61, type: !7)
!11281 = !DILocation(line: 0, scope: !11278)
!11282 = !DILocation(line: 63, column: 5, scope: !11278)
!11283 = !DILocation(line: 0, scope: !2206)
!11284 = !DILocation(line: 73, column: 5, scope: !2206)
!11285 = !{i64 1127}
!11286 = !DILocation(line: 75, column: 14, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !2206, file: !2207, line: 75, column: 9)
!11288 = !DILocation(line: 75, column: 11, scope: !11287)
!11289 = !DILocation(line: 75, column: 9, scope: !2206)
!11290 = !DILocation(line: 81, column: 32, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !2206, file: !2207, line: 81, column: 9)
!11292 = !DILocation(line: 81, column: 15, scope: !11291)
!11293 = !DILocation(line: 92, column: 1, scope: !2206)
!11294 = !DILocation(line: 81, column: 9, scope: !2206)
!11295 = distinct !DISubprogram(name: "_write", scope: !2207, file: !2207, line: 94, type: !11260, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !11296)
!11296 = !{!11297, !11298, !11299, !11300}
!11297 = !DILocalVariable(name: "file", arg: 1, scope: !11295, file: !2207, line: 94, type: !7)
!11298 = !DILocalVariable(name: "ptr", arg: 2, scope: !11295, file: !2207, line: 94, type: !2212)
!11299 = !DILocalVariable(name: "len", arg: 3, scope: !11295, file: !2207, line: 94, type: !7)
!11300 = !DILocalVariable(name: "DataIdx", scope: !11295, file: !2207, line: 96, type: !7)
!11301 = !DILocation(line: 0, scope: !11295)
!11302 = !DILocation(line: 98, column: 31, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11304, file: !2207, line: 98, column: 5)
!11304 = distinct !DILexicalBlock(scope: !11295, file: !2207, line: 98, column: 5)
!11305 = !DILocation(line: 98, column: 5, scope: !11304)
!11306 = !DILocation(line: 99, column: 26, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11303, file: !2207, line: 98, column: 49)
!11308 = !DILocation(line: 99, column: 22, scope: !11307)
!11309 = !DILocation(line: 99, column: 9, scope: !11307)
!11310 = !DILocation(line: 98, column: 45, scope: !11303)
!11311 = distinct !{!11311, !11305, !11312}
!11312 = !DILocation(line: 100, column: 5, scope: !11304)
!11313 = !DILocation(line: 101, column: 5, scope: !11295)
!11314 = distinct !DISubprogram(name: "SysTick_Set", scope: !2411, file: !2411, line: 62, type: !3577, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !11315)
!11315 = !{!11316, !11317}
!11316 = !DILocalVariable(name: "ticks", arg: 1, scope: !11314, file: !2411, line: 62, type: !61)
!11317 = !DILocalVariable(name: "val", scope: !11314, file: !2411, line: 64, type: !61)
!11318 = !DILocation(line: 0, scope: !11314)
!11319 = !DILocation(line: 67, column: 16, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11314, file: !2411, line: 67, column: 9)
!11321 = !DILocation(line: 67, column: 21, scope: !11320)
!11322 = !DILocation(line: 67, column: 9, scope: !11314)
!11323 = !DILocation(line: 72, column: 20, scope: !11314)
!11324 = !DILocation(line: 75, column: 19, scope: !11314)
!11325 = !DILocation(line: 79, column: 20, scope: !11314)
!11326 = !DILocation(line: 80, column: 20, scope: !11314)
!11327 = !DILocation(line: 83, column: 19, scope: !11314)
!11328 = !DILocation(line: 85, column: 5, scope: !11314)
!11329 = !DILocation(line: 86, column: 1, scope: !11314)
!11330 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !2411, file: !2411, line: 95, type: !291, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !293)
!11331 = !DILocation(line: 97, column: 28, scope: !11330)
!11332 = !DILocation(line: 98, column: 1, scope: !11330)
!11333 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !2411, file: !2411, line: 107, type: !3829, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !293)
!11334 = !DILocation(line: 109, column: 12, scope: !11333)
!11335 = !DILocation(line: 109, column: 5, scope: !11333)
!11336 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2411, file: !2411, line: 119, type: !291, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !11337)
!11337 = !{!11338}
!11338 = !DILocalVariable(name: "cm_mux_sel", scope: !11336, file: !2411, line: 121, type: !460)
!11339 = !DILocation(line: 121, column: 38, scope: !11336)
!11340 = !DILocation(line: 121, column: 26, scope: !11336)
!11341 = !DILocation(line: 0, scope: !11336)
!11342 = !DILocation(line: 123, column: 5, scope: !11336)
!11343 = !DILocation(line: 132, column: 13, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11336, file: !2411, line: 123, column: 25)
!11345 = !DILocation(line: 140, column: 13, scope: !11344)
!11346 = !DILocation(line: 0, scope: !11344)
!11347 = !DILocation(line: 146, column: 26, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11336, file: !2411, line: 146, column: 9)
!11349 = !DILocation(line: 146, column: 50, scope: !11348)
!11350 = !DILocation(line: 146, column: 41, scope: !11348)
!11351 = !DILocation(line: 148, column: 25, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11348, file: !2411, line: 147, column: 52)
!11353 = !DILocation(line: 149, column: 5, scope: !11352)
!11354 = !DILocation(line: 150, column: 1, scope: !11336)
!11355 = distinct !DISubprogram(name: "SystemInit", scope: !2411, file: !2411, line: 158, type: !291, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !293)
!11356 = !DILocation(line: 162, column: 16, scope: !11355)
!11357 = !DILocation(line: 166, column: 16, scope: !11355)
!11358 = !DILocation(line: 169, column: 16, scope: !11355)
!11359 = !DILocation(line: 172, column: 1, scope: !11355)
!11360 = distinct !DISubprogram(name: "CachePreInit", scope: !2411, file: !2411, line: 180, type: !291, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !293)
!11361 = !DILocation(line: 183, column: 22, scope: !11360)
!11362 = !DILocation(line: 186, column: 21, scope: !11360)
!11363 = !DILocation(line: 189, column: 21, scope: !11360)
!11364 = !DILocation(line: 192, column: 29, scope: !11360)
!11365 = !DILocation(line: 193, column: 33, scope: !11360)
!11366 = !DILocation(line: 195, column: 28, scope: !11360)
!11367 = !DILocation(line: 200, column: 30, scope: !11360)
!11368 = !DILocation(line: 214, column: 1, scope: !11360)
