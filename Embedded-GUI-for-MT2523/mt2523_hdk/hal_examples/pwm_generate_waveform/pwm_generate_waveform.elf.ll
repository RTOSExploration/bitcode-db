; ModuleID = './build/pwm_generate_waveform.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.uart_callback_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %struct.anon, %struct.anon, %struct.anon, i32, %struct.anon, %struct.anon, i32, %struct.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon.9 = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon.9*, %struct.anon.9*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hal_cache_region_config_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.hal_cache_region_config_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon.9*, %struct.anon.9*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@g_cache_status = dso_local global i8 0, align 1, !dbg !0
@g_cache_con = external dso_local local_unnamed_addr global %union.CACHE_CON_Type, align 4
@g_cache_region_en = external dso_local local_unnamed_addr global i32, align 4
@g_cache_entry = external dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type], align 4
@.str = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt2523/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !92
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !279
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !342
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !339
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !294
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !316
@pwm = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_GLOABL_T*] [%struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575616512 to %struct.GPT_REGISTER_GLOABL_T*), %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575550976 to %struct.GPT_REGISTER_GLOABL_T*), %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1609170944 to %struct.GPT_REGISTER_GLOABL_T*), %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1609105408 to %struct.GPT_REGISTER_GLOABL_T*), %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1609039872 to %struct.GPT_REGISTER_GLOABL_T*), %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1608974336 to %struct.GPT_REGISTER_GLOABL_T*)], align 4, !dbg !343
@pwm_pdn = dso_local local_unnamed_addr constant [6 x i32] [i32 64, i32 68, i32 83, i32 84, i32 85, i32 86], align 4, !dbg !386
@pwm_init_status = internal global [6 x i8] zeroinitializer, align 1, !dbg !391
@pwm_run_status = internal unnamed_addr global [6 x i8] zeroinitializer, align 1, !dbg !398
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !409
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !689
@.str.35 = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1.36 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.uart_callback_t] zeroinitializer, align 4, !dbg !793
@g_uart_dma_config = internal unnamed_addr global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !811
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !825
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !836
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !806
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !837
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !909
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !912
@.str.81 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.1.82 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.2 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !920
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !1010
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !997
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.87 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1015
@.str.97 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.98 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !1094
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1096
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1098
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1100
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1102
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1104
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1106
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1108
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1110
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1112
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1114
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1427
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1429
@.str.101 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.102 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !1438
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !1431
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !1439
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1491
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1494
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !1527
@nor_egid = dso_local local_unnamed_addr global %struct.anon.9* null, align 4, !dbg !1538
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1854
@RegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1725
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1753
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !1856
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !1563
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1749
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !1751
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !1575
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !1836
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !1839
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }] } }, align 4, !dbg !1869
@BlockLayout = internal unnamed_addr global %struct.hal_cache_region_config_t* null, align 4, !dbg !1728
@BankInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1741
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1712
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1716
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1714
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !1565
@.str.117 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.118 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1841
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !1720
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1737
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1739
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !1896
@.str.123 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.124 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !1956
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !1843
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1957
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1971
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1973
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1975
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1977
@.str.139 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.140 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !1979
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !2033
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !2035
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !2037
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2049
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2051
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2053
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !2055
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2158
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2160
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2162
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2164
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2166
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2168
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2170
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2172
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2174
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2176
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2178
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2180
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2182
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !2184
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2156
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !2203
@.str.151 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.152 = private unnamed_addr constant [20 x i8] c"welcome to main()\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"\0D\0A ---pwm_example begin---\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"\0D\0A ---pwm_example finished!!!---\0D\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !2215
@end = external dso_local global i8, align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !2419
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2527
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 08:01:01 GMT +00:00\00", align 1, !dbg !2529
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2534
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !2540

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !2636 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2644
  call void @llvm.dbg.value(metadata i32 %1, metadata !2643, metadata !DIExpression()), !dbg !2645
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !2646, !range !2648
  %3 = icmp eq i8 %2, 0, !dbg !2646
  br i1 %3, label %5, label %4, !dbg !2649

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2650
  br label %15, !dbg !2652

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !2653
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2655
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2656
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2657
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2658
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2659
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2660
  call void @llvm.dbg.value(metadata i32 0, metadata !2641, metadata !DIExpression()), !dbg !2645
  br label %7, !dbg !2661

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !2641, metadata !DIExpression()), !dbg !2645
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %8, !dbg !2663
  store volatile i32 0, i32* %9, align 4, !dbg !2666
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %8, !dbg !2667
  store volatile i32 0, i32* %10, align 4, !dbg !2668
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !2669
  store i32 0, i32* %11, align 4, !dbg !2670
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !2671
  store i32 0, i32* %12, align 4, !dbg !2672
  %13 = add nuw nsw i32 %8, 1, !dbg !2673
  call void @llvm.dbg.value(metadata i32 %13, metadata !2641, metadata !DIExpression()), !dbg !2645
  %14 = icmp eq i32 %13, 16, !dbg !2674
  br i1 %14, label %15, label %7, !dbg !2661, !llvm.loop !2675

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !2645
  ret i32 %16, !dbg !2677
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !2678 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2681
  call void @llvm.dbg.value(metadata i32 %1, metadata !2680, metadata !DIExpression()), !dbg !2682
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2683
  %3 = and i32 %2, -31, !dbg !2683
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2683
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2684
  %5 = or i32 %4, 19, !dbg !2684
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2684
  %6 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2685
  %7 = and i32 %6, -31, !dbg !2685
  store volatile i32 %7, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2685
  %8 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2686
  %9 = or i32 %8, 3, !dbg !2686
  store volatile i32 %9, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2686
  tail call void asm sideeffect "isb", ""() #22, !dbg !2687, !srcloc !2691
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2692
  ret i32 0, !dbg !2693
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !2694 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2697
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2698
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2699
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2700
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2701
  call void @llvm.dbg.value(metadata i32 0, metadata !2696, metadata !DIExpression()), !dbg !2702
  br label %2, !dbg !2703

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !2696, metadata !DIExpression()), !dbg !2702
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %3, !dbg !2705
  store volatile i32 0, i32* %4, align 4, !dbg !2708
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %3, !dbg !2709
  store volatile i32 0, i32* %5, align 4, !dbg !2710
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !2711
  store i32 0, i32* %6, align 4, !dbg !2712
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !2713
  store i32 0, i32* %7, align 4, !dbg !2714
  %8 = add nuw nsw i32 %3, 1, !dbg !2715
  call void @llvm.dbg.value(metadata i32 %8, metadata !2696, metadata !DIExpression()), !dbg !2702
  %9 = icmp eq i32 %8, 16, !dbg !2716
  br i1 %9, label %10, label %2, !dbg !2703, !llvm.loop !2717

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !2719
  ret i32 0, !dbg !2720
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #2 !dbg !2721 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2722
  %2 = and i32 %1, 768, !dbg !2724
  %3 = icmp eq i32 %2, 0, !dbg !2724
  br i1 %3, label %8, label %4, !dbg !2725

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2726
  %6 = or i32 %5, 13, !dbg !2726
  store volatile i32 %6, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2726
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2727
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2728
  br label %8, !dbg !2729

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !2730
  ret i32 %9, !dbg !2731
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !2732 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2735
  call void @llvm.dbg.value(metadata i32 %1, metadata !2734, metadata !DIExpression()), !dbg !2736
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2737
  %3 = and i32 %2, 1, !dbg !2739
  %4 = icmp eq i32 %3, 0, !dbg !2739
  br i1 %4, label %7, label %5, !dbg !2740

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2741
  br label %7, !dbg !2743

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2744
  %9 = and i32 %8, -2, !dbg !2744
  store volatile i32 %9, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2744
  %10 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2745
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2746
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2747
  ret i32 0, !dbg !2748
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #2 !dbg !2749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2753, metadata !DIExpression()), !dbg !2754
  %2 = icmp ugt i32 %0, 15, !dbg !2755
  br i1 %2, label %13, label %3, !dbg !2757

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2758
  %5 = load volatile i32, i32* %4, align 4, !dbg !2758
  %6 = and i32 %5, 256, !dbg !2760
  %7 = icmp eq i32 %6, 0, !dbg !2760
  br i1 %7, label %13, label %8, !dbg !2761

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !2762
  %10 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2764
  %11 = or i32 %10, %9, !dbg !2764
  store volatile i32 %11, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2764
  %12 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2765
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !2766
  br label %13, !dbg !2767

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !2754
  ret i32 %14, !dbg !2768
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #2 !dbg !2769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2771, metadata !DIExpression()), !dbg !2772
  %2 = icmp ugt i32 %0, 15, !dbg !2773
  br i1 %2, label %11, label %3, !dbg !2775

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !2776
  %5 = xor i32 %4, -1, !dbg !2777
  %6 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2778
  %7 = and i32 %6, %5, !dbg !2778
  store volatile i32 %7, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2778
  %8 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2779
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !2780
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2781
  store i32 0, i32* %9, align 4, !dbg !2782
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2783
  store i32 0, i32* %10, align 4, !dbg !2784
  br label %11, !dbg !2785

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !2772
  ret i32 %12, !dbg !2786
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #2 !dbg !2787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2792, metadata !DIExpression()), !dbg !2793
  %2 = icmp ugt i32 %0, 3, !dbg !2794
  br i1 %2, label %13, label %3, !dbg !2796

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2797
  %5 = and i32 %4, -769, !dbg !2797
  store volatile i32 %5, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2797
  %6 = shl nuw nsw i32 %0, 8, !dbg !2798
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2799
  %8 = or i32 %7, %6, !dbg !2799
  store volatile i32 %8, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2799
  %9 = icmp eq i32 %0, 0, !dbg !2800
  br i1 %9, label %10, label %11, !dbg !2802

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2803
  br label %11, !dbg !2805

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2806
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2807
  br label %13, !dbg !2808

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !2793
  ret i32 %14, !dbg !2809
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !2810 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2821, metadata !DIExpression()), !dbg !2823
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !2822, metadata !DIExpression()), !dbg !2823
  %3 = icmp ugt i32 %0, 15, !dbg !2824
  br i1 %3, label %30, label %4, !dbg !2826

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !2827
  br i1 %5, label %30, label %6, !dbg !2829

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !2830
  %8 = load i32, i32* %7, align 4, !dbg !2830
  %9 = and i32 %8, 4095, !dbg !2832
  %10 = icmp eq i32 %9, 0, !dbg !2832
  br i1 %10, label %12, label %11, !dbg !2833

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !2834
  unreachable, !dbg !2834

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !2836
  %14 = load i32, i32* %13, align 4, !dbg !2836
  %15 = and i32 %14, 4095, !dbg !2838
  %16 = icmp eq i32 %15, 0, !dbg !2838
  br i1 %16, label %18, label %17, !dbg !2839

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !2840
  unreachable, !dbg !2840

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2842
  store volatile i32 %8, i32* %19, align 4, !dbg !2843
  %20 = load i32, i32* %7, align 4, !dbg !2844
  %21 = load i32, i32* %13, align 4, !dbg !2845
  %22 = add i32 %21, %20, !dbg !2846
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %0, !dbg !2847
  store volatile i32 %22, i32* %23, align 4, !dbg !2848
  %24 = load volatile i32, i32* %19, align 4, !dbg !2849
  %25 = or i32 %24, 256, !dbg !2849
  store volatile i32 %25, i32* %19, align 4, !dbg !2849
  %26 = load volatile i32, i32* %19, align 4, !dbg !2850
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2851
  store i32 %26, i32* %27, align 4, !dbg !2852
  %28 = load volatile i32, i32* %23, align 4, !dbg !2853
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2854
  store i32 %28, i32* %29, align 4, !dbg !2855
  br label %30, !dbg !2856

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !2823
  ret i32 %31, !dbg !2857
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2862, metadata !DIExpression()), !dbg !2864
  %2 = and i32 %0, 31, !dbg !2865
  %3 = icmp eq i32 %2, 0, !dbg !2865
  br i1 %3, label %4, label %9, !dbg !2867

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2868
  call void @llvm.dbg.value(metadata i32 %5, metadata !2863, metadata !DIExpression()), !dbg !2864
  %6 = and i32 %0, -32, !dbg !2869
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2870
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2871
  %8 = or i32 %7, 5, !dbg !2871
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2871
  tail call void asm sideeffect "isb", ""() #22, !dbg !2872, !srcloc !2691
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !2874
  br label %9, !dbg !2875

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !2864
  ret i32 %10, !dbg !2876
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !2877 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2881, metadata !DIExpression()), !dbg !2885
  call void @llvm.dbg.value(metadata i32 %1, metadata !2882, metadata !DIExpression()), !dbg !2885
  %3 = add i32 %1, %0, !dbg !2886
  call void @llvm.dbg.value(metadata i32 %3, metadata !2884, metadata !DIExpression()), !dbg !2885
  %4 = or i32 %1, %0, !dbg !2887
  %5 = and i32 %4, 31, !dbg !2887
  %6 = icmp eq i32 %5, 0, !dbg !2887
  br i1 %6, label %7, label %16, !dbg !2887

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2889
  call void @llvm.dbg.value(metadata i32 %8, metadata !2883, metadata !DIExpression()), !dbg !2885
  call void @llvm.dbg.value(metadata i32 %0, metadata !2881, metadata !DIExpression()), !dbg !2885
  %9 = icmp ugt i32 %3, %0, !dbg !2890
  br i1 %9, label %10, label %15, !dbg !2891

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !2881, metadata !DIExpression()), !dbg !2885
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #21, !dbg !2892
  %13 = add i32 %11, 32, !dbg !2894
  call void @llvm.dbg.value(metadata i32 %13, metadata !2881, metadata !DIExpression()), !dbg !2885
  %14 = icmp ult i32 %13, %3, !dbg !2890
  br i1 %14, label %10, label %15, !dbg !2891, !llvm.loop !2895

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !2897, !srcloc !2691
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !2899
  br label %16, !dbg !2900

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !2885
  ret i32 %17, !dbg !2901
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2904, metadata !DIExpression()), !dbg !2906
  %2 = and i32 %0, 31, !dbg !2907
  %3 = icmp eq i32 %2, 0, !dbg !2907
  br i1 %3, label %4, label %9, !dbg !2909

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2910
  call void @llvm.dbg.value(metadata i32 %5, metadata !2905, metadata !DIExpression()), !dbg !2906
  %6 = and i32 %0, -32, !dbg !2911
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2912
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2913
  %8 = or i32 %7, 21, !dbg !2913
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2913
  tail call void asm sideeffect "isb", ""() #22, !dbg !2914, !srcloc !2691
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !2916
  br label %9, !dbg !2917

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !2906
  ret i32 %10, !dbg !2918
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !2919 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2921, metadata !DIExpression()), !dbg !2925
  call void @llvm.dbg.value(metadata i32 %1, metadata !2922, metadata !DIExpression()), !dbg !2925
  %3 = add i32 %1, %0, !dbg !2926
  call void @llvm.dbg.value(metadata i32 %3, metadata !2924, metadata !DIExpression()), !dbg !2925
  %4 = or i32 %1, %0, !dbg !2927
  %5 = and i32 %4, 31, !dbg !2927
  %6 = icmp eq i32 %5, 0, !dbg !2927
  br i1 %6, label %7, label %16, !dbg !2927

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2929
  call void @llvm.dbg.value(metadata i32 %8, metadata !2923, metadata !DIExpression()), !dbg !2925
  call void @llvm.dbg.value(metadata i32 %0, metadata !2921, metadata !DIExpression()), !dbg !2925
  %9 = icmp ugt i32 %3, %0, !dbg !2930
  br i1 %9, label %10, label %15, !dbg !2931

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !2921, metadata !DIExpression()), !dbg !2925
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #21, !dbg !2932
  %13 = add i32 %11, 32, !dbg !2934
  call void @llvm.dbg.value(metadata i32 %13, metadata !2921, metadata !DIExpression()), !dbg !2925
  %14 = icmp ult i32 %13, %3, !dbg !2930
  br i1 %14, label %10, label %15, !dbg !2931, !llvm.loop !2935

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !2937, !srcloc !2691
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !2939
  br label %16, !dbg !2940

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !2925
  ret i32 %17, !dbg !2941
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !2942 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2945
  call void @llvm.dbg.value(metadata i32 %1, metadata !2944, metadata !DIExpression()), !dbg !2946
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2947
  %3 = and i32 %2, -31, !dbg !2947
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2947
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2948
  %5 = or i32 %4, 19, !dbg !2948
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2948
  tail call void asm sideeffect "isb", ""() #22, !dbg !2949, !srcloc !2691
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2951
  ret i32 0, !dbg !2952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #2 !dbg !2953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2957, metadata !DIExpression()), !dbg !2959
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2960
  %3 = and i32 %2, 8, !dbg !2962
  %4 = icmp eq i32 %3, 0, !dbg !2962
  br i1 %4, label %23, label %5, !dbg !2963

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !2958, metadata !DIExpression()), !dbg !2959
  %7 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2964
  %8 = shl nuw nsw i32 1, %6, !dbg !2969
  %9 = and i32 %7, %8, !dbg !2970
  %10 = icmp eq i32 %9, 0, !dbg !2970
  br i1 %10, label %20, label %11, !dbg !2971

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %6, !dbg !2972
  %13 = load volatile i32, i32* %12, align 4, !dbg !2972
  %14 = and i32 %13, -257, !dbg !2975
  %15 = icmp ugt i32 %14, %0, !dbg !2976
  br i1 %15, label %20, label %16, !dbg !2977

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %6, !dbg !2978
  %18 = load volatile i32, i32* %17, align 4, !dbg !2978
  %19 = icmp ugt i32 %18, %0, !dbg !2979
  br i1 %19, label %23, label %20, !dbg !2980

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !2981
  call void @llvm.dbg.value(metadata i32 %21, metadata !2958, metadata !DIExpression()), !dbg !2959
  %22 = icmp eq i32 %21, 16, !dbg !2982
  br i1 %22, label %23, label %5, !dbg !2983, !llvm.loop !2984

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !2959
  ret i1 %24, !dbg !2986
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !2987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2993, metadata !DIExpression()), !dbg !2994
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !2995
  br i1 %2, label %3, label %26, !dbg !2997

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !2998
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3000
  %6 = load i32, i32* %5, align 4, !dbg !3000
  %7 = icmp eq i32 %6, 1, !dbg !3001
  br i1 %7, label %26, label %8, !dbg !3002

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3003
  %10 = load i8, i8* %9, align 4, !dbg !3003, !range !2648
  %11 = icmp eq i8 %10, 0, !dbg !3003
  br i1 %11, label %12, label %26, !dbg !3004

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3005
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #20, !dbg !3006
  tail call void @gpt_open_clock_source() #20, !dbg !3007
  store i8 1, i8* %9, align 4, !dbg !3008
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3009
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !3009
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !3010
  %18 = load volatile i32, i32* %17, align 4, !dbg !3011
  %19 = and i32 %18, -2, !dbg !3011
  store volatile i32 %19, i32* %17, align 4, !dbg !3011
  %20 = shl nuw i32 1, %0, !dbg !3012
  %21 = xor i32 %20, -1, !dbg !3013
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !3014
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !3015
  %24 = load volatile i32, i32* %23, align 4, !dbg !3016
  %25 = and i32 %24, %21, !dbg !3016
  store volatile i32 %25, i32* %23, align 4, !dbg !3016
  br label %26, !dbg !3017

26:                                               ; preds = %3, %8, %1, %12
  %27 = phi i32 [ 0, %12 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], !dbg !2994
  ret i32 %27, !dbg !3018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #4 !dbg !3019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3023, metadata !DIExpression()), !dbg !3024
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3025, !range !2648
  %3 = icmp ne i8 %2, 0, !dbg !3027
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !3028
  %7 = and i1 %5, %6, !dbg !3028
  ret i1 %7, !dbg !3029
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !3030 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3032, metadata !DIExpression()), !dbg !3033
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3034
  br i1 %2, label %3, label %14, !dbg !3036

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3037
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3039
  %6 = load i32, i32* %5, align 4, !dbg !3039
  %7 = icmp eq i32 %6, 1, !dbg !3040
  br i1 %7, label %14, label %8, !dbg !3041

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3042
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #20, !dbg !3043
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3044
  store i8 0, i8* %11, align 4, !dbg !3045
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3046
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !3046
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #20, !dbg !3047
  br label %14, !dbg !3048

14:                                               ; preds = %3, %1, %8
  %15 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !3033
  ret i32 %15, !dbg !3049
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3050 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3055, metadata !DIExpression()), !dbg !3057
  call void @llvm.dbg.value(metadata i32* %1, metadata !3056, metadata !DIExpression()), !dbg !3057
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !3058

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3059
  %5 = icmp eq i32 %4, 1, !dbg !3063
  br i1 %5, label %8, label %6, !dbg !3064

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3065
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #20, !dbg !3067
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3068
  br label %8, !dbg !3069

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3070
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #20, !dbg !3071
  br label %20, !dbg !3072

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3073
  %13 = icmp eq i32 %12, 1, !dbg !3077
  br i1 %13, label %16, label %14, !dbg !3078

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3079
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #20, !dbg !3081
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3082
  br label %16, !dbg !3083

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3084
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #20, !dbg !3085
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #20, !dbg !3086
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !3087
  store i32 %21, i32* %1, align 4, !dbg !3087
  br label %22, !dbg !3088

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !3057
  ret i32 %23, !dbg !3089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #6 section ".tcm_code" !dbg !3090 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3094, metadata !DIExpression()), !dbg !3097
  call void @llvm.dbg.value(metadata i32 %1, metadata !3095, metadata !DIExpression()), !dbg !3097
  call void @llvm.dbg.value(metadata i32* %2, metadata !3096, metadata !DIExpression()), !dbg !3097
  %4 = icmp eq i32* %2, null, !dbg !3098
  br i1 %4, label %7, label %5, !dbg !3100

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !3101
  store i32 %6, i32* %2, align 4, !dbg !3101
  br label %7, !dbg !3103

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !3097
  ret i32 %8, !dbg !3104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !3105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3110, metadata !DIExpression()), !dbg !3112
  call void @llvm.dbg.value(metadata i32* %1, metadata !3111, metadata !DIExpression()), !dbg !3112
  %3 = icmp ugt i32 %0, 5, !dbg !3113
  br i1 %3, label %7, label %4, !dbg !3115

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3116
  %6 = load i32, i32* %5, align 4, !dbg !3116
  store i32 %6, i32* %1, align 4, !dbg !3117
  br label %7, !dbg !3118

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !3112
  ret i32 %8, !dbg !3119
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !3120 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3124, metadata !DIExpression()), !dbg !3127
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !3125, metadata !DIExpression()), !dbg !3127
  call void @llvm.dbg.value(metadata i8* %2, metadata !3126, metadata !DIExpression()), !dbg !3127
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3128
  br i1 %4, label %5, label %18, !dbg !3130

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3131
  %7 = load i32, i32* %6, align 4, !dbg !3131
  %8 = icmp eq i32 %7, 1, !dbg !3133
  br i1 %8, label %18, label %9, !dbg !3134

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3135
  %11 = load i8, i8* %10, align 4, !dbg !3135, !range !2648
  %12 = icmp eq i8 %11, 1, !dbg !3136
  br i1 %12, label %13, label %18, !dbg !3137

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !3138
  br i1 %14, label %18, label %15, !dbg !3140

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !3141
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !3142
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !3143
  store i8* %2, i8** %17, align 4, !dbg !3144
  tail call void @gpt_nvic_register() #20, !dbg !3145
  br label %18, !dbg !3146

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !3127
  ret i32 %19, !dbg !3147
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3148 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3153, metadata !DIExpression()), !dbg !3157
  call void @llvm.dbg.value(metadata i32 %1, metadata !3154, metadata !DIExpression()), !dbg !3157
  call void @llvm.dbg.value(metadata i32 %2, metadata !3155, metadata !DIExpression()), !dbg !3157
  %5 = bitcast i32* %4 to i8*, !dbg !3158
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3158
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3156, metadata !DIExpression()), !dbg !3159
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3160
  br i1 %6, label %7, label %51, !dbg !3162

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3163
  %9 = load i32, i32* %8, align 4, !dbg !3163
  %10 = icmp eq i32 %9, 1, !dbg !3165
  br i1 %10, label %51, label %11, !dbg !3166

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3167
  %13 = load i8, i8* %12, align 4, !dbg !3167, !range !2648
  %14 = icmp eq i8 %13, 1, !dbg !3168
  br i1 %14, label %15, label %51, !dbg !3169

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !3170
  br i1 %16, label %51, label %17, !dbg !3172

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3173
  store volatile i32 %18, i32* %4, align 4, !dbg !3174
  tail call void @gpt_open_clock_source() #20, !dbg !3175
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3176
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3176
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !3177
  %22 = load volatile i32, i32* %21, align 4, !dbg !3178
  %23 = and i32 %22, -2, !dbg !3178
  store volatile i32 %23, i32* %21, align 4, !dbg !3178
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3179
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !3180
  %26 = load volatile i32, i32* %25, align 4, !dbg !3181
  %27 = and i32 %26, -2, !dbg !3181
  store volatile i32 %27, i32* %25, align 4, !dbg !3181
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3182
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !3183
  store volatile i32 16, i32* %29, align 4, !dbg !3184
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #20, !dbg !3185
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3186
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !3187
  store volatile i32 %30, i32* %32, align 4, !dbg !3188
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3189
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !3190
  store volatile i32 1, i32* %34, align 4, !dbg !3191
  %35 = shl i32 %2, 4, !dbg !3192
  %36 = or i32 %35, 2, !dbg !3193
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3194
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !3195
  store volatile i32 %36, i32* %38, align 4, !dbg !3196
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !3197

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !3198
  %43 = icmp eq i32 %42, 0, !dbg !3197
  br i1 %43, label %44, label %41, !dbg !3197, !llvm.loop !3199

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3201
  %46 = load volatile i32, i32* %45, align 4, !dbg !3202
  %47 = or i32 %46, 1, !dbg !3202
  store volatile i32 %47, i32* %45, align 4, !dbg !3202
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3203
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !3204
  store volatile i32 1, i32* %49, align 4, !dbg !3205
  store i32 1, i32* %8, align 4, !dbg !3206
  %50 = load volatile i32, i32* %4, align 4, !dbg !3207
  tail call void @restore_interrupt_mask(i32 noundef %50) #20, !dbg !3208
  br label %51, !dbg !3209

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !3157
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3210
  ret i32 %52, !dbg !3210
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3211 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3215, metadata !DIExpression()), !dbg !3216
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3217
  %3 = icmp eq i32 %2, 1, !dbg !3219
  br i1 %3, label %6, label %4, !dbg !3220

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3221
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #20, !dbg !3223
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3224
  br label %6, !dbg !3225

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3226
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #20, !dbg !3227
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3228
  ret i32 0, !dbg !3229
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3230 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3232, metadata !DIExpression()), !dbg !3236
  call void @llvm.dbg.value(metadata i32 %1, metadata !3233, metadata !DIExpression()), !dbg !3236
  call void @llvm.dbg.value(metadata i32 %2, metadata !3234, metadata !DIExpression()), !dbg !3236
  %5 = bitcast i32* %4 to i8*, !dbg !3237
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3237
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3235, metadata !DIExpression()), !dbg !3238
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3239
  br i1 %6, label %7, label %50, !dbg !3241

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3242
  %9 = load i32, i32* %8, align 4, !dbg !3242
  %10 = icmp eq i32 %9, 1, !dbg !3244
  br i1 %10, label %50, label %11, !dbg !3245

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3246
  %13 = load i8, i8* %12, align 4, !dbg !3246, !range !2648
  %14 = icmp eq i8 %13, 1, !dbg !3247
  br i1 %14, label %15, label %50, !dbg !3248

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3249
  store i8 1, i8* %16, align 1, !dbg !3250
  %17 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3251
  store volatile i32 %17, i32* %4, align 4, !dbg !3252
  tail call void @gpt_open_clock_source() #20, !dbg !3253
  %18 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3254
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3254
  %20 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %19, i32 0, i32 2, !dbg !3255
  %21 = load volatile i32, i32* %20, align 4, !dbg !3256
  %22 = and i32 %21, -2, !dbg !3256
  store volatile i32 %22, i32* %20, align 4, !dbg !3256
  %23 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3257
  %24 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %23, i32 0, i32 0, !dbg !3258
  %25 = load volatile i32, i32* %24, align 4, !dbg !3259
  %26 = and i32 %25, -2, !dbg !3259
  store volatile i32 %26, i32* %24, align 4, !dbg !3259
  %27 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3260
  %28 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %27, i32 0, i32 1, !dbg !3261
  store volatile i32 12, i32* %28, align 4, !dbg !3262
  %29 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #20, !dbg !3263
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3264
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 6, !dbg !3265
  store volatile i32 %29, i32* %31, align 4, !dbg !3266
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3267
  %33 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %32, i32 0, i32 4, !dbg !3268
  store volatile i32 1, i32* %33, align 4, !dbg !3269
  %34 = shl i32 %2, 4, !dbg !3270
  %35 = or i32 %34, 2, !dbg !3271
  %36 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3272
  %37 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %36, i32 0, i32 0, !dbg !3273
  store volatile i32 %35, i32* %37, align 4, !dbg !3274
  %38 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4
  %39 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 5
  br label %40, !dbg !3275

40:                                               ; preds = %40, %15
  %41 = load volatile i32, i32* %39, align 4, !dbg !3276
  %42 = icmp eq i32 %41, 0, !dbg !3275
  br i1 %42, label %43, label %40, !dbg !3275, !llvm.loop !3277

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 0, !dbg !3279
  %45 = load volatile i32, i32* %44, align 4, !dbg !3280
  %46 = or i32 %45, 1, !dbg !3280
  store volatile i32 %46, i32* %44, align 4, !dbg !3280
  %47 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3281
  %48 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %47, i32 0, i32 2, !dbg !3282
  store volatile i32 1, i32* %48, align 4, !dbg !3283
  %49 = load volatile i32, i32* %4, align 4, !dbg !3284
  tail call void @restore_interrupt_mask(i32 noundef %49) #20, !dbg !3285
  store i32 1, i32* %8, align 4, !dbg !3286
  br label %50, !dbg !3287

50:                                               ; preds = %7, %11, %3, %43
  %51 = phi i32 [ 0, %43 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !3236
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3288
  ret i32 %51, !dbg !3288
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3291, metadata !DIExpression()), !dbg !3292
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3293
  %3 = icmp eq i32 %2, 1, !dbg !3295
  br i1 %3, label %6, label %4, !dbg !3296

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3297
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #20, !dbg !3299
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3300
  br label %6, !dbg !3301

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3302
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #20, !dbg !3303
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3304
  ret i32 0, !dbg !3305
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !3306 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3308, metadata !DIExpression()), !dbg !3310
  %3 = bitcast i32* %2 to i8*, !dbg !3311
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3311
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3309, metadata !DIExpression()), !dbg !3312
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3313
  br i1 %4, label %5, label %24, !dbg !3315

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3316
  store volatile i32 %6, i32* %2, align 4, !dbg !3317
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3318
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3318
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !3319
  %10 = load volatile i32, i32* %9, align 4, !dbg !3320
  %11 = and i32 %10, -2, !dbg !3320
  store volatile i32 %11, i32* %9, align 4, !dbg !3320
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3321
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3322
  %14 = load volatile i32, i32* %13, align 4, !dbg !3323
  %15 = and i32 %14, -2, !dbg !3323
  store volatile i32 %15, i32* %13, align 4, !dbg !3323
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3324
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !3325
  store volatile i32 1, i32* %17, align 4, !dbg !3326
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3327
  store i32 0, i32* %18, align 4, !dbg !3328
  %19 = load volatile i32, i32* %2, align 4, !dbg !3329
  tail call void @restore_interrupt_mask(i32 noundef %19) #20, !dbg !3330
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3331
  %21 = load i8, i8* %20, align 1, !dbg !3331, !range !2648
  %22 = icmp eq i8 %21, 0, !dbg !3331
  br i1 %22, label %24, label %23, !dbg !3333

23:                                               ; preds = %5
  store i8 0, i8* %20, align 1, !dbg !3334
  br label %24, !dbg !3336

24:                                               ; preds = %5, %23, %1
  %25 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !3310
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3337
  ret i32 %25, !dbg !3337
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !3338 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3342, metadata !DIExpression()), !dbg !3345
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3346
  %3 = icmp ugt i32 %2, 31, !dbg !3348
  br i1 %3, label %13, label %4, !dbg !3349

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !3350
  br i1 %5, label %13, label %6, !dbg !3352

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3353
  call void @llvm.dbg.value(metadata i32 %7, metadata !3344, metadata !DIExpression()), !dbg !3345
  %8 = tail call i32 @gpt_sw_get_free_timer() #20, !dbg !3354
  call void @llvm.dbg.value(metadata i32 %8, metadata !3343, metadata !DIExpression()), !dbg !3345
  %9 = or i32 %8, -559087616, !dbg !3355
  store i32 %9, i32* %0, align 4, !dbg !3356
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !3357
  store i8 1, i8* %10, align 4, !dbg !3358
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3359
  %12 = add i32 %11, 1, !dbg !3359
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3359
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !3360
  br label %13, !dbg !3361

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !3345
  ret i32 %14, !dbg !3362
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #9 !dbg !3363 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3365, metadata !DIExpression()), !dbg !3367
  %3 = bitcast i32* %2 to i8*, !dbg !3368
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3368
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3366, metadata !DIExpression()), !dbg !3369
  %4 = and i32 %0, -559087616, !dbg !3370
  %5 = icmp eq i32 %4, -559087616, !dbg !3372
  br i1 %5, label %6, label %24, !dbg !3373

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !3374
  store volatile i32 %7, i32* %2, align 4, !dbg !3375
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3376
  %9 = icmp eq i32 %8, 0, !dbg !3378
  br i1 %9, label %24, label %10, !dbg !3379

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !3380
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !3382
  %13 = load i8, i8* %12, align 1, !dbg !3382, !range !2648
  %14 = icmp eq i8 %13, 0, !dbg !3382
  br i1 %14, label %15, label %24, !dbg !3383

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !3384
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !3386
  %18 = load i8, i8* %17, align 4, !dbg !3386, !range !2648
  %19 = icmp eq i8 %18, 1, !dbg !3387
  br i1 %19, label %20, label %24, !dbg !3388

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !3389
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !3390
  store i8 0, i8* %22, align 4, !dbg !3391
  %23 = add i32 %8, -1, !dbg !3392
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3392
  br label %24, !dbg !3393

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !3367
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3394
  ret i32 %25, !dbg !3394
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !3395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3399, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i32 %1, metadata !3400, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !3401, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i8* %3, metadata !3402, metadata !DIExpression()), !dbg !3406
  %5 = and i32 %0, -559087616, !dbg !3407
  %6 = icmp ne i32 %5, -559087616, !dbg !3409
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !3410
  call void @llvm.dbg.value(metadata i32 %0, metadata !3405, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !3406
  br i1 %8, label %44, label %9, !dbg !3410

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !3411
  call void @llvm.dbg.value(metadata i32 %10, metadata !3405, metadata !DIExpression()), !dbg !3406
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !3412
  %12 = load i8, i8* %11, align 1, !dbg !3412, !range !2648
  %13 = icmp eq i8 %12, 0, !dbg !3412
  br i1 %13, label %14, label %44, !dbg !3414

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !3415
  %16 = load i8, i8* %15, align 4, !dbg !3415, !range !2648
  %17 = icmp eq i8 %16, 1, !dbg !3417
  br i1 %17, label %18, label %44, !dbg !3418

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !3419
  br i1 %19, label %44, label %20, !dbg !3421

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3422
  call void @llvm.dbg.value(metadata i32 %21, metadata !3404, metadata !DIExpression()), !dbg !3406
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3423
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3424, !range !2648
  %23 = icmp eq i8 %22, 0, !dbg !3426
  br i1 %23, label %24, label %27, !dbg !3427

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #21, !dbg !3428
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #21, !dbg !3430
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3431
  br label %27, !dbg !3432

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3433
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3434, !range !2648
  %30 = icmp eq i8 %29, 0, !dbg !3436
  br i1 %30, label %31, label %34, !dbg !3437

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3438
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #20, !dbg !3440
  call void @llvm.dbg.value(metadata i32 %33, metadata !3403, metadata !DIExpression()), !dbg !3406
  br label %34, !dbg !3441

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !3442
  call void @llvm.dbg.value(metadata i32 %35, metadata !3403, metadata !DIExpression()), !dbg !3406
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3443
  %37 = add i32 %36, %35, !dbg !3443
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3443
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3444
  %39 = add i32 %38, 1, !dbg !3444
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3444
  store i8 1, i8* %11, align 1, !dbg !3445
  %40 = add i32 %37, %1, !dbg !3446
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !3447
  store i32 %40, i32* %41, align 4, !dbg !3448
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !3449
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !3450
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !3451
  store i8* %3, i8** %43, align 4, !dbg !3452
  tail call void @gpt_sw_start_timer() #20, !dbg !3453
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3454
  tail call void @restore_interrupt_mask(i32 noundef %21) #20, !dbg !3455
  br label %44, !dbg !3456

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !3406
  ret i32 %45, !dbg !3457
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !3458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3460, metadata !DIExpression()), !dbg !3464
  %2 = and i32 %0, -559087616, !dbg !3465
  %3 = icmp eq i32 %2, -559087616, !dbg !3467
  br i1 %3, label %4, label %31, !dbg !3468

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !3469
  call void @llvm.dbg.value(metadata i32 %5, metadata !3463, metadata !DIExpression()), !dbg !3464
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !3470
  %7 = load i8, i8* %6, align 1, !dbg !3470, !range !2648
  %8 = icmp eq i8 %7, 1, !dbg !3472
  br i1 %8, label %9, label %31, !dbg !3473

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !3474
  %11 = load i8, i8* %10, align 4, !dbg !3474, !range !2648
  %12 = icmp eq i8 %11, 1, !dbg !3476
  br i1 %12, label %13, label %31, !dbg !3477

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3478
  call void @llvm.dbg.value(metadata i32 %14, metadata !3462, metadata !DIExpression()), !dbg !3464
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3479
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3480
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3481
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3482, !range !2648
  %17 = icmp eq i8 %16, 0, !dbg !3484
  br i1 %17, label %18, label %21, !dbg !3485

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3486
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #20, !dbg !3488
  call void @llvm.dbg.value(metadata i32 %20, metadata !3461, metadata !DIExpression()), !dbg !3464
  br label %21, !dbg !3489

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !3490
  call void @llvm.dbg.value(metadata i32 %22, metadata !3461, metadata !DIExpression()), !dbg !3464
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3491
  %24 = add i32 %23, %22, !dbg !3491
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3491
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3492
  %26 = add i32 %25, -1, !dbg !3492
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3492
  store i8 0, i8* %6, align 1, !dbg !3493
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3494
  %28 = icmp eq i32 %27, 0, !dbg !3496
  br i1 %28, label %30, label %29, !dbg !3497

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #20, !dbg !3498
  br label %30, !dbg !3500

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3501
  tail call void @restore_interrupt_mask(i32 noundef %14) #20, !dbg !3502
  br label %31, !dbg !3503

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !3464
  ret i32 %32, !dbg !3504
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !3505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3509, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata i32* %1, metadata !3510, metadata !DIExpression()), !dbg !3514
  %3 = and i32 %0, -559087616, !dbg !3515
  %4 = icmp eq i32 %3, -559087616, !dbg !3517
  br i1 %4, label %5, label %20, !dbg !3518

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !3519
  call void @llvm.dbg.value(metadata i32 %6, metadata !3513, metadata !DIExpression()), !dbg !3514
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !3520
  %8 = load i8, i8* %7, align 4, !dbg !3520, !range !2648
  %9 = icmp eq i8 %8, 1, !dbg !3522
  br i1 %9, label %10, label %20, !dbg !3523

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3524
  call void @llvm.dbg.value(metadata i32 %11, metadata !3512, metadata !DIExpression()), !dbg !3514
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3525
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3526
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !3527
  %15 = load volatile i32, i32* %14, align 4, !dbg !3527
  %16 = add i32 %15, %12, !dbg !3528
  call void @llvm.dbg.value(metadata i32 %16, metadata !3511, metadata !DIExpression()), !dbg !3514
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !3529
  %18 = load i32, i32* %17, align 4, !dbg !3529
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !3531
  store i32 %19, i32* %1, align 4, !dbg !3532
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !3533
  br label %20, !dbg !3534

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !3514
  ret i32 %21, !dbg !3535
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 section ".tcm_code" !dbg !3536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3540, metadata !DIExpression()), !dbg !3547
  call void @llvm.dbg.value(metadata i32 %1, metadata !3541, metadata !DIExpression()), !dbg !3547
  call void @llvm.dbg.value(metadata i32 %2, metadata !3542, metadata !DIExpression()), !dbg !3547
  %4 = and i32 %0, 65535, !dbg !3548
  %5 = mul i32 %4, %1, !dbg !3549
  call void @llvm.dbg.value(metadata i32 %5, metadata !3543, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3547
  %6 = lshr i32 %0, 16, !dbg !3550
  %7 = mul i32 %6, %1, !dbg !3551
  call void @llvm.dbg.value(metadata i32 %7, metadata !3543, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3547
  %8 = and i32 %5, 65535, !dbg !3552
  call void @llvm.dbg.value(metadata i32 %8, metadata !3545, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3547
  %9 = lshr i32 %5, 16, !dbg !3553
  %10 = add i32 %9, %7, !dbg !3554
  call void @llvm.dbg.value(metadata i32 %10, metadata !3545, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3547
  %11 = udiv i32 %10, %2, !dbg !3555
  call void @llvm.dbg.value(metadata i32 %11, metadata !3546, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3547
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !3556
  %15 = or i32 %14, %8, !dbg !3557
  %16 = udiv i32 %15, %2, !dbg !3558
  call void @llvm.dbg.value(metadata i32 %16, metadata !3546, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3547
  %17 = shl i32 %11, 16, !dbg !3559
  %18 = add i32 %16, %17, !dbg !3560
  ret i32 %18, !dbg !3561
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #11 section ".tcm_code" !dbg !3562 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3566, metadata !DIExpression()), !dbg !3567
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !3568
  %3 = load volatile i32, i32* %2, align 4, !dbg !3568
  ret i32 %3, !dbg !3569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !3570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3574, metadata !DIExpression()), !dbg !3575
  %2 = shl i32 %0, 5, !dbg !3576
  %3 = mul i32 %0, 7, !dbg !3577
  %4 = udiv i32 %3, 10, !dbg !3578
  %5 = add i32 %4, %2, !dbg !3579
  %6 = mul i32 %0, 6, !dbg !3580
  %7 = udiv i32 %6, 100, !dbg !3581
  %8 = add i32 %5, %7, !dbg !3582
  %9 = shl i32 %0, 3, !dbg !3583
  %10 = udiv i32 %9, 1000, !dbg !3584
  %11 = add i32 %8, %10, !dbg !3585
  ret i32 %11, !dbg !3586
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !290 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3587
  br i1 %1, label %10, label %2, !dbg !3589

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3590
  br i1 %3, label %4, label %6, !dbg !3593

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !3594
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !3596
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !3597

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !3599
  br label %8, !dbg !3599

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3599
  br label %10, !dbg !3600

10:                                               ; preds = %8, %0
  ret void, !dbg !3600
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !3601 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #20, !dbg !3602
  br i1 %1, label %4, label %2, !dbg !3604

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #20, !dbg !3605
  br label %4, !dbg !3607

4:                                                ; preds = %2, %0
  ret void, !dbg !3608
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3611, metadata !DIExpression()), !dbg !3612
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3613
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3614
  br i1 %2, label %3, label %6, !dbg !3616

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3617
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #21, !dbg !3619
  br label %6, !dbg !3620

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3621
  ret i32 %7, !dbg !3622
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3623 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3625, metadata !DIExpression()), !dbg !3626
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3627
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3628
  br i1 %2, label %3, label %6, !dbg !3630

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3631
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #21, !dbg !3633
  br label %6, !dbg !3634

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3635
  ret i32 %7, !dbg !3636
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !3637 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3641, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1, metadata !3642, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %2, metadata !3643, metadata !DIExpression()), !dbg !3644
  tail call void @gpt_open_clock_source() #21, !dbg !3645
  %4 = or i32 %2, %1, !dbg !3646
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3647
  store volatile i32 %4, i32* %5, align 4, !dbg !3648
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3649
  store volatile i32 49, i32* %6, align 4, !dbg !3650
  ret void, !dbg !3651
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !3652 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3656, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i32 %1, metadata !3657, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i32 0, metadata !3658, metadata !DIExpression()), !dbg !3660
  call void @llvm.dbg.value(metadata i32 0, metadata !3659, metadata !DIExpression()), !dbg !3660
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3661
  call void @llvm.dbg.value(metadata i32 %3, metadata !3659, metadata !DIExpression()), !dbg !3660
  %4 = add i32 %1, 1, !dbg !3662
  %5 = add i32 %4, %3, !dbg !3663
  call void @llvm.dbg.value(metadata i32 %5, metadata !3658, metadata !DIExpression()), !dbg !3660
  %6 = icmp ugt i32 %5, %3, !dbg !3664
  br i1 %6, label %7, label %10, !dbg !3666

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3667
  %9 = icmp ult i32 %8, %5, !dbg !3669
  br i1 %9, label %7, label %16, !dbg !3670, !llvm.loop !3671

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3673
  %12 = icmp ult i32 %11, %3, !dbg !3675
  br i1 %12, label %13, label %10, !dbg !3676, !llvm.loop !3677

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3679
  %15 = icmp ult i32 %14, %5, !dbg !3680
  br i1 %15, label %13, label %16, !dbg !3681, !llvm.loop !3682

16:                                               ; preds = %13, %7
  ret void, !dbg !3684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !3685 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3689, metadata !DIExpression()), !dbg !3690
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3691
  store volatile i32 0, i32* %2, align 4, !dbg !3692
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3693
  store volatile i32 0, i32* %3, align 4, !dbg !3694
  %4 = load volatile i32, i32* %3, align 4, !dbg !3695
  %5 = or i32 %4, 2, !dbg !3695
  store volatile i32 %5, i32* %3, align 4, !dbg !3695
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !3696

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !3697
  %9 = icmp eq i32 %8, 0, !dbg !3696
  br i1 %9, label %10, label %7, !dbg !3696, !llvm.loop !3698

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3700
  store volatile i32 16, i32* %11, align 4, !dbg !3701
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !3702
  store volatile i32 1, i32* %12, align 4, !dbg !3703
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !3704
  store volatile i32 -1, i32* %13, align 4, !dbg !3705
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !3706
  br i1 %14, label %15, label %16, !dbg !3708

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !3709
  br label %16, !dbg !3711

16:                                               ; preds = %15, %10
  ret void, !dbg !3712
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3713 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3715, metadata !DIExpression()), !dbg !3717
  %3 = bitcast i32* %2 to i8*, !dbg !3718
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3718
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3716, metadata !DIExpression()), !dbg !3719
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3720
  %5 = load volatile i32, i32* %4, align 4, !dbg !3720
  store volatile i32 %5, i32* %2, align 4, !dbg !3721
  %6 = load volatile i32, i32* %4, align 4, !dbg !3722
  %7 = and i32 %6, -2, !dbg !3722
  store volatile i32 %7, i32* %4, align 4, !dbg !3722
  %8 = load volatile i32, i32* %2, align 4, !dbg !3723
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3724
  ret i32 %8, !dbg !3725
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !3726 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3730, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.value(metadata i32 %1, metadata !3731, metadata !DIExpression()), !dbg !3732
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3733
  store volatile i32 %1, i32* %3, align 4, !dbg !3734
  ret void, !dbg !3735
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !3736 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3738, metadata !DIExpression()), !dbg !3743
  %5 = bitcast i32* %2 to i8*, !dbg !3744
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3744
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3740, metadata !DIExpression()), !dbg !3745
  %6 = bitcast i32* %3 to i8*, !dbg !3746
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !3746
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3741, metadata !DIExpression()), !dbg !3747
  %7 = bitcast i32* %4 to i8*, !dbg !3748
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !3748
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3742, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i32 undef, metadata !3738, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.value(metadata i32 0, metadata !3739, metadata !DIExpression()), !dbg !3743
  br label %8, !dbg !3750

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3739, metadata !DIExpression()), !dbg !3743
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !3752
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3752
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !3755
  %13 = load volatile i32, i32* %12, align 4, !dbg !3755
  store volatile i32 %13, i32* %3, align 4, !dbg !3756
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !3757
  %15 = load volatile i32, i32* %14, align 4, !dbg !3757
  store volatile i32 %15, i32* %4, align 4, !dbg !3758
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #21, !dbg !3759
  store volatile i32 %16, i32* %2, align 4, !dbg !3760
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3761
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !3762
  store volatile i32 1, i32* %18, align 4, !dbg !3763
  %19 = load volatile i32, i32* %3, align 4, !dbg !3764
  %20 = and i32 %19, 1, !dbg !3766
  %21 = icmp eq i32 %20, 0, !dbg !3766
  br i1 %21, label %33, label %22, !dbg !3767

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !3768
  %24 = and i32 %23, 1, !dbg !3769
  %25 = icmp eq i32 %24, 0, !dbg !3769
  br i1 %25, label %33, label %26, !dbg !3770

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !3771
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3771
  %29 = icmp eq void (i8*)* %28, null, !dbg !3774
  br i1 %29, label %33, label %30, !dbg !3775

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !3776
  %32 = load i8*, i8** %31, align 4, !dbg !3776
  tail call void %28(i8* noundef %32) #20, !dbg !3778
  br label %33, !dbg !3779

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3780
  %35 = load volatile i32, i32* %2, align 4, !dbg !3781
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #21, !dbg !3782
  %36 = add nuw nsw i32 %9, 1, !dbg !3783
  call void @llvm.dbg.value(metadata i32 %36, metadata !3739, metadata !DIExpression()), !dbg !3743
  %37 = icmp eq i32 %36, 6, !dbg !3784
  br i1 %37, label %38, label %8, !dbg !3750, !llvm.loop !3785

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !3787
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !3787
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3787
  ret void, !dbg !3787
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !3788 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #20, !dbg !3789
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #20, !dbg !3790
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #20, !dbg !3791
  ret void, !dbg !3792
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3793 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3795, metadata !DIExpression()), !dbg !3800
  %3 = bitcast i32* %2 to i8*, !dbg !3801
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3801
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3796, metadata !DIExpression()), !dbg !3802
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3803
  call void @llvm.dbg.value(metadata i32 %4, metadata !3797, metadata !DIExpression()), !dbg !3800
  %5 = lshr i32 %4, 15, !dbg !3804
  call void @llvm.dbg.value(metadata i32 %5, metadata !3798, metadata !DIExpression()), !dbg !3800
  %6 = and i32 %4, 32767, !dbg !3805
  %7 = mul nuw nsw i32 %6, 1000, !dbg !3806
  %8 = add nuw nsw i32 %7, 16384, !dbg !3807
  %9 = lshr i32 %8, 15, !dbg !3808
  call void @llvm.dbg.value(metadata i32 %9, metadata !3799, metadata !DIExpression()), !dbg !3800
  %10 = mul nuw nsw i32 %5, 1000, !dbg !3809
  %11 = add nuw nsw i32 %9, %10, !dbg !3810
  store volatile i32 %11, i32* %2, align 4, !dbg !3811
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3812
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3813
  %14 = load volatile i32, i32* %13, align 4, !dbg !3814
  %15 = or i32 %14, 2, !dbg !3814
  store volatile i32 %15, i32* %13, align 4, !dbg !3814
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !3815

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !3816
  %20 = icmp eq i32 %19, 0, !dbg !3815
  br i1 %20, label %21, label %18, !dbg !3815, !llvm.loop !3817

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !3819
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3820
  ret i32 %22, !dbg !3821
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #12 !dbg !3822 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3826, metadata !DIExpression()), !dbg !3827
  br label %1, !dbg !3828

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3826, metadata !DIExpression()), !dbg !3827
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !3830
  %4 = load i8, i8* %3, align 4, !dbg !3830, !range !2648
  %5 = icmp eq i8 %4, 1, !dbg !3834
  br i1 %5, label %6, label %9, !dbg !3835

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !3836
  call void @llvm.dbg.value(metadata i32 %7, metadata !3826, metadata !DIExpression()), !dbg !3827
  %8 = icmp eq i32 %7, 32, !dbg !3837
  br i1 %8, label %9, label %1, !dbg !3828, !llvm.loop !3838

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !3827
  ret i32 %10, !dbg !3840
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !3841 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !3845
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3845
  %4 = bitcast i32* %2 to i8*, !dbg !3845
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !3845
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3846, !range !2648
  %6 = icmp eq i8 %5, 0, !dbg !3846
  br i1 %6, label %7, label %11, !dbg !3848

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !3843, metadata !DIExpression(DW_OP_deref)), !dbg !3849
  call void @llvm.dbg.value(metadata i32* %2, metadata !3844, metadata !DIExpression(DW_OP_deref)), !dbg !3849
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #21, !dbg !3850
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3851
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3852
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3853
  %9 = load i32, i32* %1, align 4, !dbg !3854
  call void @llvm.dbg.value(metadata i32 %9, metadata !3843, metadata !DIExpression()), !dbg !3849
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #20, !dbg !3855
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3856
  br label %11, !dbg !3857

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !3857
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3857
  ret void, !dbg !3857
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #13 !dbg !3858 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3862, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32* %1, metadata !3863, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 -1, metadata !3865, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 0, metadata !3864, metadata !DIExpression()), !dbg !3867
  br label %3, !dbg !3868

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !3864, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %5, metadata !3865, metadata !DIExpression()), !dbg !3867
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !3870
  %7 = load i8, i8* %6, align 1, !dbg !3870, !range !2648
  %8 = icmp eq i8 %7, 0, !dbg !3870
  br i1 %8, label %13, label %9, !dbg !3874

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #21, !dbg !3875
  call void @llvm.dbg.value(metadata i32 %10, metadata !3866, metadata !DIExpression()), !dbg !3867
  %11 = icmp ult i32 %10, %5, !dbg !3877
  br i1 %11, label %12, label %13, !dbg !3879

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !3865, metadata !DIExpression()), !dbg !3867
  store i32 %4, i32* %1, align 4, !dbg !3880
  br label %13, !dbg !3882

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !3867
  call void @llvm.dbg.value(metadata i32 %14, metadata !3865, metadata !DIExpression()), !dbg !3867
  %15 = add nuw nsw i32 %4, 1, !dbg !3883
  call void @llvm.dbg.value(metadata i32 %15, metadata !3864, metadata !DIExpression()), !dbg !3867
  %16 = icmp eq i32 %15, 32, !dbg !3884
  br i1 %16, label %17, label %3, !dbg !3868, !llvm.loop !3885

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !3887
  ret void, !dbg !3888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #4 !dbg !3889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3891, metadata !DIExpression()), !dbg !3895
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !3896
  %3 = load i32, i32* %2, align 4, !dbg !3896
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3896
  %5 = sub i32 %3, %4, !dbg !3896
  call void @llvm.dbg.value(metadata i32 %5, metadata !3892, metadata !DIExpression()), !dbg !3895
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3897
  %7 = sub i32 %6, %4, !dbg !3897
  call void @llvm.dbg.value(metadata i32 %7, metadata !3893, metadata !DIExpression()), !dbg !3895
  %8 = icmp ugt i32 %5, %7, !dbg !3898
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !3900
  call void @llvm.dbg.value(metadata i32 %10, metadata !3894, metadata !DIExpression()), !dbg !3895
  ret i32 %10, !dbg !3901
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !3902 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3904, metadata !DIExpression()), !dbg !3908
  %4 = bitcast i32* %2 to i8*, !dbg !3909
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !3909
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3906, metadata !DIExpression()), !dbg !3910
  %5 = bitcast i32* %3 to i8*, !dbg !3911
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3911
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3907, metadata !DIExpression()), !dbg !3912
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3913
  %7 = icmp eq i32 %6, 0, !dbg !3915
  br i1 %7, label %38, label %8, !dbg !3916

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3917
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #20, !dbg !3919
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3920
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3921
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #21, !dbg !3922
  store volatile i32 %11, i32* %2, align 4, !dbg !3923
  %12 = load volatile i32, i32* %2, align 4, !dbg !3924
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3925
  %14 = add i32 %13, %12, !dbg !3925
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3925
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3926
  call void @llvm.dbg.value(metadata i32 0, metadata !3905, metadata !DIExpression()), !dbg !3908
  br label %15, !dbg !3927

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3905, metadata !DIExpression()), !dbg !3908
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !3929
  %18 = load i8, i8* %17, align 1, !dbg !3929, !range !2648
  %19 = icmp eq i8 %18, 0, !dbg !3929
  br i1 %19, label %31, label %20, !dbg !3933

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #21, !dbg !3934
  store volatile i32 %21, i32* %3, align 4, !dbg !3936
  %22 = load volatile i32, i32* %3, align 4, !dbg !3937
  %23 = icmp eq i32 %22, 0, !dbg !3939
  br i1 %23, label %24, label %31, !dbg !3940

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !3941
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3943
  %26 = add i32 %25, -1, !dbg !3943
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3943
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !3944
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3944
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !3945
  %30 = load i8*, i8** %29, align 4, !dbg !3945
  tail call void %28(i8* noundef %30) #20, !dbg !3946
  br label %31, !dbg !3947

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !3948
  call void @llvm.dbg.value(metadata i32 %32, metadata !3905, metadata !DIExpression()), !dbg !3908
  %33 = icmp eq i32 %32, 32, !dbg !3949
  br i1 %33, label %34, label %15, !dbg !3927, !llvm.loop !3950

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3952
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3953
  %36 = icmp eq i32 %35, 0, !dbg !3955
  br i1 %36, label %38, label %37, !dbg !3956

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #21, !dbg !3957
  br label %38, !dbg !3959

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3960
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !3960
  ret void, !dbg !3960
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pwm_init(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !3961 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3968, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.value(metadata i32 %1, metadata !3969, metadata !DIExpression()), !dbg !3973
  %3 = icmp ugt i32 %0, 5, !dbg !3974
  %4 = icmp ugt i32 %1, 1
  %5 = or i1 %3, %4, !dbg !3976
  br i1 %5, label %29, label %6, !dbg !3976

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3977
  call void @llvm.dbg.value(metadata i32 %7, metadata !3971, metadata !DIExpression()), !dbg !3978
  %8 = getelementptr inbounds [6 x i8], [6 x i8]* @pwm_init_status, i32 0, i32 %0, !dbg !3979
  %9 = load volatile i8, i8* %8, align 1, !dbg !3979
  %10 = icmp eq i8 %9, 1, !dbg !3979
  br i1 %10, label %28, label %11, !dbg !3977

11:                                               ; preds = %6
  store volatile i8 1, i8* %8, align 1, !dbg !3981
  call void @llvm.dbg.value(metadata i32 0, metadata !3970, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.value(metadata i32 undef, metadata !3970, metadata !DIExpression()), !dbg !3973
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !3977
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_GLOABL_T*], [6 x %struct.GPT_REGISTER_GLOABL_T*]* @pwm, i32 0, i32 %0, !dbg !3983
  %13 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** %12, align 4, !dbg !3983
  %14 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %13, i32 0, i32 0, !dbg !3984
  store volatile i32 0, i32* %14, align 4, !dbg !3985
  %15 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** %12, align 4, !dbg !3986
  %16 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %15, i32 0, i32 1, !dbg !3987
  store volatile i32 0, i32* %16, align 4, !dbg !3988
  %17 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** %12, align 4, !dbg !3989
  %18 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %17, i32 0, i32 2, !dbg !3990
  store volatile i32 0, i32* %18, align 4, !dbg !3991
  %19 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** %12, align 4, !dbg !3992
  %20 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %19, i32 0, i32 0, !dbg !3993
  %21 = load volatile i32, i32* %20, align 4, !dbg !3994
  %22 = and i32 %21, -5, !dbg !3994
  store volatile i32 %22, i32* %20, align 4, !dbg !3994
  %23 = shl nuw nsw i32 %1, 2, !dbg !3995
  %24 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** %12, align 4, !dbg !3996
  %25 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %24, i32 0, i32 0, !dbg !3997
  %26 = load volatile i32, i32* %25, align 4, !dbg !3998
  %27 = or i32 %26, %23, !dbg !3998
  store volatile i32 %27, i32* %25, align 4, !dbg !3998
  br label %29, !dbg !3999

28:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !3970, metadata !DIExpression()), !dbg !3973
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !3977
  br label %29, !dbg !4000

29:                                               ; preds = %28, %2, %11
  %30 = phi i32 [ 0, %11 ], [ -2, %2 ], [ -4, %28 ], !dbg !3973
  ret i32 %30, !dbg !4001
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_pwm_deinit(i32 noundef %0) local_unnamed_addr #2 !dbg !4002 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4006, metadata !DIExpression()), !dbg !4007
  %2 = icmp ugt i32 %0, 5, !dbg !4008
  br i1 %2, label %5, label %3, !dbg !4010

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x i8], [6 x i8]* @pwm_init_status, i32 0, i32 %0, !dbg !4011
  store volatile i8 0, i8* %4, align 1, !dbg !4011
  br label %5, !dbg !4013

5:                                                ; preds = %1, %3
  %6 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4007
  ret i32 %6, !dbg !4014
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_pwm_set_frequency(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #9 !dbg !4015 {
  %4 = alloca i16, align 2
  call void @llvm.dbg.value(metadata i32 %0, metadata !4019, metadata !DIExpression()), !dbg !4028
  call void @llvm.dbg.value(metadata i32 %1, metadata !4020, metadata !DIExpression()), !dbg !4028
  call void @llvm.dbg.value(metadata i32* %2, metadata !4021, metadata !DIExpression()), !dbg !4028
  call void @llvm.dbg.value(metadata i32 0, metadata !4022, metadata !DIExpression()), !dbg !4028
  call void @llvm.dbg.value(metadata i16 0, metadata !4023, metadata !DIExpression()), !dbg !4028
  %5 = bitcast i16* %4 to i8*, !dbg !4029
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %5), !dbg !4029
  call void @llvm.dbg.declare(metadata i16* %4, metadata !4024, metadata !DIExpression()), !dbg !4030
  store volatile i16 0, i16* %4, align 2, !dbg !4030
  call void @llvm.dbg.value(metadata i16 0, metadata !4026, metadata !DIExpression()), !dbg !4028
  call void @llvm.dbg.value(metadata i32 0, metadata !4027, metadata !DIExpression()), !dbg !4028
  %6 = icmp ugt i32 %0, 5, !dbg !4031
  br i1 %6, label %35, label %7, !dbg !4033

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.GPT_REGISTER_GLOABL_T*], [6 x %struct.GPT_REGISTER_GLOABL_T*]* @pwm, i32 0, i32 %0, !dbg !4034
  %9 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** %8, align 4, !dbg !4034
  %10 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %9, i32 0, i32 0, !dbg !4035
  %11 = load volatile i32, i32* %10, align 4, !dbg !4035
  %12 = trunc i32 %11 to i16, !dbg !4034
  store volatile i16 %12, i16* %4, align 2, !dbg !4036
  %13 = load volatile i16, i16* %4, align 2, !dbg !4037
  %14 = and i16 %13, 3, !dbg !4038
  call void @llvm.dbg.value(metadata !DIArgList(i16 1, i16 %14), metadata !4023, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_shl, DW_OP_stack_value)), !dbg !4028
  %15 = load volatile i16, i16* %4, align 2, !dbg !4039
  %16 = and i16 %15, 4, !dbg !4041
  %17 = icmp eq i16 %16, 0, !dbg !4041
  %18 = select i1 %17, i32 13000000, i32 32768
  call void @llvm.dbg.value(metadata i32 %18, metadata !4022, metadata !DIExpression()), !dbg !4028
  %19 = zext i16 %14 to i32, !dbg !4042
  %20 = lshr i32 %18, %19, !dbg !4042
  call void @llvm.dbg.value(metadata i32 %20, metadata !4022, metadata !DIExpression()), !dbg !4028
  call void @llvm.dbg.value(metadata i32 undef, metadata !4027, metadata !DIExpression()), !dbg !4028
  %21 = icmp eq i32 %1, 0, !dbg !4043
  br i1 %21, label %27, label %22, !dbg !4045

22:                                               ; preds = %7
  %23 = udiv i32 %20, 8191, !dbg !4046
  call void @llvm.dbg.value(metadata i32 %23, metadata !4027, metadata !DIExpression()), !dbg !4028
  %24 = icmp ugt i32 %23, %1, !dbg !4047
  br i1 %24, label %35, label %25, !dbg !4049

25:                                               ; preds = %22
  %26 = udiv i32 %20, %1, !dbg !4050
  call void @llvm.dbg.value(metadata i32 %26, metadata !4026, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4028
  br label %27

27:                                               ; preds = %7, %25
  %28 = phi i32 [ %26, %25 ], [ %20, %7 ]
  %29 = trunc i32 %28 to i16, !dbg !4052
  call void @llvm.dbg.value(metadata i16 %29, metadata !4026, metadata !DIExpression()), !dbg !4028
  %30 = add i16 %29, -1, !dbg !4053
  call void @llvm.dbg.value(metadata i16 %30, metadata !4026, metadata !DIExpression()), !dbg !4028
  %31 = icmp ult i16 %30, 8191, !dbg !4054
  %32 = select i1 %31, i16 %30, i16 8191, !dbg !4054
  call void @llvm.dbg.value(metadata i16 %32, metadata !4026, metadata !DIExpression()), !dbg !4028
  %33 = zext i16 %32 to i32, !dbg !4055
  %34 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %9, i32 0, i32 1, !dbg !4056
  store volatile i32 %33, i32* %34, align 4, !dbg !4057
  store i32 %33, i32* %2, align 4, !dbg !4058
  br label %35, !dbg !4059

35:                                               ; preds = %22, %3, %27
  %36 = phi i32 [ 0, %27 ], [ -2, %3 ], [ -1, %22 ], !dbg !4028
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %5), !dbg !4060
  ret i32 %36, !dbg !4060
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_pwm_set_duty_cycle(i32 noundef %0, i32 noundef %1) local_unnamed_addr #9 !dbg !4061 {
  %3 = alloca i16, align 2
  call void @llvm.dbg.value(metadata i32 %0, metadata !4065, metadata !DIExpression()), !dbg !4069
  call void @llvm.dbg.value(metadata i32 %1, metadata !4066, metadata !DIExpression()), !dbg !4069
  %4 = bitcast i16* %3 to i8*, !dbg !4070
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %4), !dbg !4070
  call void @llvm.dbg.declare(metadata i16* %3, metadata !4067, metadata !DIExpression()), !dbg !4071
  store volatile i16 0, i16* %3, align 2, !dbg !4071
  call void @llvm.dbg.value(metadata i16 0, metadata !4068, metadata !DIExpression()), !dbg !4069
  %5 = icmp ugt i32 %0, 5, !dbg !4072
  br i1 %5, label %23, label %6, !dbg !4074

6:                                                ; preds = %2
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_GLOABL_T*], [6 x %struct.GPT_REGISTER_GLOABL_T*]* @pwm, i32 0, i32 %0, !dbg !4075
  %8 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** %7, align 4, !dbg !4075
  %9 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %8, i32 0, i32 1, !dbg !4076
  %10 = load volatile i32, i32* %9, align 4, !dbg !4076
  %11 = trunc i32 %10 to i16, !dbg !4075
  store volatile i16 %11, i16* %3, align 2, !dbg !4077
  %12 = load volatile i16, i16* %3, align 2, !dbg !4078
  %13 = zext i16 %12 to i32, !dbg !4078
  %14 = icmp ult i32 %13, %1, !dbg !4080
  br i1 %14, label %15, label %17, !dbg !4081

15:                                               ; preds = %6
  %16 = load volatile i16, i16* %3, align 2, !dbg !4082
  call void @llvm.dbg.value(metadata i16 %16, metadata !4068, metadata !DIExpression()), !dbg !4069
  br label %19, !dbg !4084

17:                                               ; preds = %6
  %18 = trunc i32 %1 to i16, !dbg !4085
  call void @llvm.dbg.value(metadata i16 %18, metadata !4068, metadata !DIExpression()), !dbg !4069
  br label %19

19:                                               ; preds = %17, %15
  %20 = phi i16 [ %16, %15 ], [ %18, %17 ], !dbg !4087
  call void @llvm.dbg.value(metadata i16 %20, metadata !4068, metadata !DIExpression()), !dbg !4069
  %21 = zext i16 %20 to i32, !dbg !4088
  %22 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %8, i32 0, i32 2, !dbg !4089
  store volatile i32 %21, i32* %22, align 4, !dbg !4090
  br label %23, !dbg !4091

23:                                               ; preds = %2, %19
  %24 = phi i32 [ 0, %19 ], [ -2, %2 ], !dbg !4069
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %4), !dbg !4092
  ret i32 %24, !dbg !4092
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pwm_start(i32 noundef %0) local_unnamed_addr #0 !dbg !4093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4095, metadata !DIExpression()), !dbg !4099
  %2 = icmp ugt i32 %0, 5, !dbg !4100
  br i1 %2, label %15, label %3, !dbg !4102

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4103
  call void @llvm.dbg.value(metadata i32 %4, metadata !4096, metadata !DIExpression()), !dbg !4099
  %5 = getelementptr inbounds [6 x i8], [6 x i8]* @pwm_run_status, i32 0, i32 %0, !dbg !4104
  %6 = load i8, i8* %5, align 1, !dbg !4104, !range !2648
  %7 = icmp eq i8 %6, 0, !dbg !4106
  br i1 %7, label %8, label %13, !dbg !4107

8:                                                ; preds = %3
  store i8 1, i8* %5, align 1, !dbg !4108
  %9 = getelementptr inbounds [6 x i32], [6 x i32]* @pwm_pdn, i32 0, i32 %0, !dbg !4110
  %10 = load i32, i32* %9, align 4, !dbg !4110
  %11 = tail call i32 @hal_clock_enable(i32 noundef %10) #20, !dbg !4111
  call void @llvm.dbg.value(metadata i32 %11, metadata !4097, metadata !DIExpression()), !dbg !4099
  %12 = icmp eq i32 %11, -1, !dbg !4112
  br i1 %12, label %15, label %13, !dbg !4114

13:                                               ; preds = %8, %3
  %14 = phi i32 [ -4, %3 ], [ 0, %8 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4099
  br label %15, !dbg !4115

15:                                               ; preds = %13, %8, %1
  %16 = phi i32 [ -2, %1 ], [ -4, %8 ], [ %14, %13 ], !dbg !4099
  ret i32 %16, !dbg !4115
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pwm_stop(i32 noundef %0) local_unnamed_addr #0 !dbg !4116 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4118, metadata !DIExpression()), !dbg !4121
  %2 = icmp ugt i32 %0, 5, !dbg !4122
  br i1 %2, label %15, label %3, !dbg !4124

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4125
  call void @llvm.dbg.value(metadata i32 %4, metadata !4119, metadata !DIExpression()), !dbg !4121
  %5 = getelementptr inbounds [6 x i8], [6 x i8]* @pwm_run_status, i32 0, i32 %0, !dbg !4126
  %6 = load i8, i8* %5, align 1, !dbg !4126, !range !2648
  %7 = icmp eq i8 %6, 0, !dbg !4126
  br i1 %7, label %13, label %8, !dbg !4128

8:                                                ; preds = %3
  store i8 0, i8* %5, align 1, !dbg !4129
  %9 = getelementptr inbounds [6 x i32], [6 x i32]* @pwm_pdn, i32 0, i32 %0, !dbg !4131
  %10 = load i32, i32* %9, align 4, !dbg !4131
  %11 = tail call i32 @hal_clock_disable(i32 noundef %10) #20, !dbg !4132
  call void @llvm.dbg.value(metadata i32 %11, metadata !4120, metadata !DIExpression()), !dbg !4121
  %12 = icmp eq i32 %11, -1, !dbg !4133
  br i1 %12, label %15, label %13, !dbg !4135

13:                                               ; preds = %8, %3
  %14 = phi i32 [ -4, %3 ], [ 0, %8 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4121
  br label %15, !dbg !4136

15:                                               ; preds = %13, %8, %1
  %16 = phi i32 [ -2, %1 ], [ -4, %8 ], [ %14, %13 ], !dbg !4121
  ret i32 %16, !dbg !4136
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #5

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_pwm_get_frequency(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #9 !dbg !4137 {
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  call void @llvm.dbg.value(metadata i32 %0, metadata !4141, metadata !DIExpression()), !dbg !4147
  call void @llvm.dbg.value(metadata i32* %1, metadata !4142, metadata !DIExpression()), !dbg !4147
  call void @llvm.dbg.value(metadata i32 0, metadata !4143, metadata !DIExpression()), !dbg !4147
  call void @llvm.dbg.value(metadata i16 0, metadata !4144, metadata !DIExpression()), !dbg !4147
  %5 = bitcast i16* %3 to i8*, !dbg !4148
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %5), !dbg !4148
  call void @llvm.dbg.declare(metadata i16* %3, metadata !4145, metadata !DIExpression()), !dbg !4149
  store volatile i16 0, i16* %3, align 2, !dbg !4149
  %6 = bitcast i16* %4 to i8*, !dbg !4150
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %6), !dbg !4150
  call void @llvm.dbg.declare(metadata i16* %4, metadata !4146, metadata !DIExpression()), !dbg !4151
  store volatile i16 0, i16* %4, align 2, !dbg !4151
  %7 = icmp ugt i32 %0, 5, !dbg !4152
  br i1 %7, label %29, label %8, !dbg !4154

8:                                                ; preds = %2
  %9 = getelementptr inbounds [6 x %struct.GPT_REGISTER_GLOABL_T*], [6 x %struct.GPT_REGISTER_GLOABL_T*]* @pwm, i32 0, i32 %0, !dbg !4155
  %10 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** %9, align 4, !dbg !4155
  %11 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %10, i32 0, i32 0, !dbg !4156
  %12 = load volatile i32, i32* %11, align 4, !dbg !4156
  %13 = trunc i32 %12 to i16, !dbg !4155
  store volatile i16 %13, i16* %3, align 2, !dbg !4157
  %14 = load volatile i16, i16* %3, align 2, !dbg !4158
  %15 = and i16 %14, 3, !dbg !4159
  call void @llvm.dbg.value(metadata !DIArgList(i16 1, i16 %15), metadata !4144, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_shl, DW_OP_stack_value)), !dbg !4147
  %16 = load volatile i16, i16* %3, align 2, !dbg !4160
  %17 = and i16 %16, 4, !dbg !4162
  %18 = icmp eq i16 %17, 0, !dbg !4162
  %19 = select i1 %18, i32 13000000, i32 32768
  call void @llvm.dbg.value(metadata i32 %19, metadata !4143, metadata !DIExpression()), !dbg !4147
  %20 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %10, i32 0, i32 1, !dbg !4163
  %21 = load volatile i32, i32* %20, align 4, !dbg !4163
  %22 = trunc i32 %21 to i16, !dbg !4164
  store volatile i16 %22, i16* %4, align 2, !dbg !4165
  %23 = load volatile i16, i16* %4, align 2, !dbg !4166
  %24 = add i16 %23, 1, !dbg !4167
  %25 = shl i16 %24, %15, !dbg !4168
  store volatile i16 %25, i16* %4, align 2, !dbg !4169
  %26 = load volatile i16, i16* %4, align 2, !dbg !4170
  %27 = zext i16 %26 to i32, !dbg !4170
  %28 = udiv i32 %19, %27, !dbg !4171
  store i32 %28, i32* %1, align 4, !dbg !4172
  br label %29, !dbg !4173

29:                                               ; preds = %2, %8
  %30 = phi i32 [ 0, %8 ], [ -2, %2 ], !dbg !4147
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %6), !dbg !4174
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %5), !dbg !4174
  ret i32 %30, !dbg !4174
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_pwm_get_duty_cycle(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #9 !dbg !4175 {
  %3 = alloca i16, align 2
  call void @llvm.dbg.value(metadata i32 %0, metadata !4177, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.value(metadata i32* %1, metadata !4178, metadata !DIExpression()), !dbg !4180
  %4 = bitcast i16* %3 to i8*, !dbg !4181
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %4), !dbg !4181
  call void @llvm.dbg.declare(metadata i16* %3, metadata !4179, metadata !DIExpression()), !dbg !4182
  store volatile i16 0, i16* %3, align 2, !dbg !4182
  %5 = icmp ugt i32 %0, 5, !dbg !4183
  br i1 %5, label %14, label %6, !dbg !4185

6:                                                ; preds = %2
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_GLOABL_T*], [6 x %struct.GPT_REGISTER_GLOABL_T*]* @pwm, i32 0, i32 %0, !dbg !4186
  %8 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** %7, align 4, !dbg !4186
  %9 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %8, i32 0, i32 2, !dbg !4187
  %10 = load volatile i32, i32* %9, align 4, !dbg !4187
  %11 = trunc i32 %10 to i16, !dbg !4186
  store volatile i16 %11, i16* %3, align 2, !dbg !4188
  %12 = load volatile i16, i16* %3, align 2, !dbg !4189
  %13 = zext i16 %12 to i32, !dbg !4189
  store i32 %13, i32* %1, align 4, !dbg !4190
  br label %14, !dbg !4191

14:                                               ; preds = %2, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !4180
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %4), !dbg !4192
  ret i32 %15, !dbg !4192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_pwm_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !4193 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4199, metadata !DIExpression()), !dbg !4201
  call void @llvm.dbg.value(metadata i32* %1, metadata !4200, metadata !DIExpression()), !dbg !4201
  %3 = icmp ugt i32 %0, 5, !dbg !4202
  br i1 %3, label %8, label %4, !dbg !4204

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x i8], [6 x i8]* @pwm_run_status, i32 0, i32 %0, !dbg !4205
  %6 = load i8, i8* %5, align 1, !dbg !4205, !range !2648
  %7 = zext i8 %6 to i32
  store i32 %7, i32* %1, align 4, !dbg !4207
  br label %8, !dbg !4208

8:                                                ; preds = %2, %4
  %9 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !4201
  ret i32 %9, !dbg !4209
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_pwm_set_advanced_config(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4215, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i32 %1, metadata !4216, metadata !DIExpression()), !dbg !4217
  %3 = icmp ugt i32 %0, 5, !dbg !4218
  %4 = add i32 %1, -4
  %5 = icmp ult i32 %4, -3
  %6 = or i1 %3, %5, !dbg !4220
  br i1 %6, label %13, label %7, !dbg !4220

7:                                                ; preds = %2
  %8 = getelementptr inbounds [6 x %struct.GPT_REGISTER_GLOABL_T*], [6 x %struct.GPT_REGISTER_GLOABL_T*]* @pwm, i32 0, i32 %0, !dbg !4221
  %9 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** %8, align 4, !dbg !4221
  %10 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %9, i32 0, i32 0, !dbg !4222
  %11 = load volatile i32, i32* %10, align 4, !dbg !4223
  %12 = or i32 %11, %1, !dbg !4223
  store volatile i32 %12, i32* %10, align 4, !dbg !4223
  br label %13, !dbg !4224

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ -2, %2 ], !dbg !4217
  ret i32 %14, !dbg !4225
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #14 !dbg !4226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4231, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !4233, metadata !DIExpression()), !dbg !4235
  call void @llvm.dbg.value(metadata i32 0, metadata !4232, metadata !DIExpression()), !dbg !4234
  br label %5, !dbg !4236

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !4238
  call void @llvm.dbg.value(metadata i32 %3, metadata !4232, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.value(metadata i32 %6, metadata !4232, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4234
  %4 = icmp eq i32 %3, 5, !dbg !4240
  br i1 %4, label %10, label %5, !dbg !4236, !llvm.loop !4241

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4232, metadata !DIExpression()), !dbg !4234
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !4243
  %8 = load i32, i32* %7, align 4, !dbg !4243
  %9 = icmp eq i32 %8, %0, !dbg !4246
  call void @llvm.dbg.value(metadata i32 %6, metadata !4232, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4234
  br i1 %9, label %10, label %2, !dbg !4247

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !4234
  ret i32 %11, !dbg !4248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #10 !dbg !4249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4254, metadata !DIExpression()), !dbg !4255
  ret i32 0, !dbg !4256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #10 !dbg !4257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4259, metadata !DIExpression()), !dbg !4260
  ret i32 0, !dbg !4261
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4262 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4266, metadata !DIExpression()), !dbg !4270
  call void @llvm.dbg.value(metadata i32 %1, metadata !4267, metadata !DIExpression()), !dbg !4270
  %3 = icmp ugt i32 %0, 48, !dbg !4271
  br i1 %3, label %13, label %4, !dbg !4273

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4274
  call void @llvm.dbg.value(metadata i32 %5, metadata !4268, metadata !DIExpression()), !dbg !4270
  %6 = and i32 %0, 31, !dbg !4275
  call void @llvm.dbg.value(metadata i32 %6, metadata !4269, metadata !DIExpression()), !dbg !4270
  %7 = icmp eq i32 %1, 0, !dbg !4276
  %8 = shl nuw i32 1, %6, !dbg !4278
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4278
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !4279
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !4279
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !4279
  store volatile i32 %8, i32* %12, align 4, !dbg !4278
  br label %13, !dbg !4280

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4270
  ret i32 %14, !dbg !4280
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4286, metadata !DIExpression()), !dbg !4291
  call void @llvm.dbg.value(metadata i32* %1, metadata !4287, metadata !DIExpression()), !dbg !4291
  %3 = icmp ugt i32 %0, 48, !dbg !4292
  br i1 %3, label %15, label %4, !dbg !4294

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4295
  br i1 %5, label %15, label %6, !dbg !4297

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4298
  call void @llvm.dbg.value(metadata i32 %7, metadata !4288, metadata !DIExpression()), !dbg !4291
  %8 = and i32 %0, 31, !dbg !4299
  call void @llvm.dbg.value(metadata i32 %8, metadata !4289, metadata !DIExpression()), !dbg !4291
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4300
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !4301
  %11 = load volatile i32, i32* %10, align 4, !dbg !4301
  call void @llvm.dbg.value(metadata i32 %11, metadata !4290, metadata !DIExpression()), !dbg !4291
  %12 = shl nuw i32 1, %8, !dbg !4302
  %13 = and i32 %11, %12, !dbg !4303
  call void @llvm.dbg.value(metadata i32 %13, metadata !4290, metadata !DIExpression()), !dbg !4291
  %14 = lshr i32 %13, %8, !dbg !4304
  store i32 %14, i32* %1, align 4, !dbg !4305
  br label %15, !dbg !4306

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4291
  ret i32 %16, !dbg !4307
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !4308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4313, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata i8 %1, metadata !4314, metadata !DIExpression()), !dbg !4318
  %3 = icmp ugt i32 %0, 48, !dbg !4319
  br i1 %3, label %18, label %4, !dbg !4321

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !4322
  br i1 %5, label %18, label %6, !dbg !4324

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !4325
  %8 = lshr i32 %0, 3, !dbg !4326
  call void @llvm.dbg.value(metadata i32 %8, metadata !4315, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata i32 %0, metadata !4316, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4318
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4327
  call void @llvm.dbg.value(metadata i32 %9, metadata !4317, metadata !DIExpression()), !dbg !4318
  %10 = shl nuw nsw i32 %0, 2, !dbg !4328
  %11 = and i32 %10, 28, !dbg !4328
  %12 = shl nuw i32 15, %11, !dbg !4329
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4330
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !4331
  store volatile i32 %12, i32* %14, align 4, !dbg !4332
  %15 = shl nuw i32 %7, %11, !dbg !4333
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4334
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !4335
  store volatile i32 %15, i32* %17, align 4, !dbg !4336
  tail call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !4337
  br label %18, !dbg !4338

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4318
  ret i32 %19, !dbg !4339
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4345, metadata !DIExpression()), !dbg !4350
  call void @llvm.dbg.value(metadata i32* %1, metadata !4346, metadata !DIExpression()), !dbg !4350
  %3 = icmp ugt i32 %0, 48, !dbg !4351
  br i1 %3, label %15, label %4, !dbg !4353

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4354
  br i1 %5, label %15, label %6, !dbg !4356

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4357
  call void @llvm.dbg.value(metadata i32 %7, metadata !4347, metadata !DIExpression()), !dbg !4350
  %8 = and i32 %0, 31, !dbg !4358
  call void @llvm.dbg.value(metadata i32 %8, metadata !4348, metadata !DIExpression()), !dbg !4350
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4359
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !4360
  %11 = load volatile i32, i32* %10, align 4, !dbg !4360
  call void @llvm.dbg.value(metadata i32 %11, metadata !4349, metadata !DIExpression()), !dbg !4350
  %12 = shl nuw i32 1, %8, !dbg !4361
  %13 = and i32 %11, %12, !dbg !4362
  call void @llvm.dbg.value(metadata i32 %13, metadata !4349, metadata !DIExpression()), !dbg !4350
  %14 = lshr i32 %13, %8, !dbg !4363
  store i32 %14, i32* %1, align 4, !dbg !4364
  br label %15, !dbg !4365

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4350
  ret i32 %16, !dbg !4366
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4371, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.value(metadata i32 %1, metadata !4372, metadata !DIExpression()), !dbg !4375
  %3 = icmp ugt i32 %0, 48, !dbg !4376
  br i1 %3, label %13, label %4, !dbg !4378

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4379
  call void @llvm.dbg.value(metadata i32 %5, metadata !4373, metadata !DIExpression()), !dbg !4375
  %6 = and i32 %0, 31, !dbg !4380
  call void @llvm.dbg.value(metadata i32 %6, metadata !4374, metadata !DIExpression()), !dbg !4375
  %7 = icmp eq i32 %1, 0, !dbg !4381
  %8 = shl nuw i32 1, %6, !dbg !4383
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4383
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !4384
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !4384
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !4384
  store volatile i32 %8, i32* %12, align 4, !dbg !4383
  br label %13, !dbg !4385

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4375
  ret i32 %14, !dbg !4385
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4386 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4388, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.value(metadata i32* %1, metadata !4389, metadata !DIExpression()), !dbg !4393
  %3 = icmp ugt i32 %0, 48, !dbg !4394
  br i1 %3, label %15, label %4, !dbg !4396

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4397
  br i1 %5, label %15, label %6, !dbg !4399

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4400
  call void @llvm.dbg.value(metadata i32 %7, metadata !4390, metadata !DIExpression()), !dbg !4393
  %8 = and i32 %0, 31, !dbg !4401
  call void @llvm.dbg.value(metadata i32 %8, metadata !4391, metadata !DIExpression()), !dbg !4393
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4402
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !4403
  %11 = load volatile i32, i32* %10, align 4, !dbg !4403
  call void @llvm.dbg.value(metadata i32 %11, metadata !4392, metadata !DIExpression()), !dbg !4393
  %12 = shl nuw i32 1, %8, !dbg !4404
  %13 = and i32 %11, %12, !dbg !4405
  call void @llvm.dbg.value(metadata i32 %13, metadata !4392, metadata !DIExpression()), !dbg !4393
  %14 = lshr i32 %13, %8, !dbg !4406
  store i32 %14, i32* %1, align 4, !dbg !4407
  br label %15, !dbg !4408

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4393
  ret i32 %16, !dbg !4409
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #2 !dbg !4410 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4412, metadata !DIExpression()), !dbg !4416
  %2 = icmp ugt i32 %0, 48, !dbg !4417
  br i1 %2, label %16, label %3, !dbg !4419

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4420
  call void @llvm.dbg.value(metadata i32 %4, metadata !4413, metadata !DIExpression()), !dbg !4416
  %5 = and i32 %0, 31, !dbg !4421
  call void @llvm.dbg.value(metadata i32 %5, metadata !4414, metadata !DIExpression()), !dbg !4416
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4422
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !4423
  %8 = load volatile i32, i32* %7, align 4, !dbg !4423
  call void @llvm.dbg.value(metadata i32 %8, metadata !4415, metadata !DIExpression()), !dbg !4416
  %9 = shl nuw i32 1, %5, !dbg !4424
  %10 = and i32 %8, %9, !dbg !4425
  call void @llvm.dbg.value(metadata i32 %10, metadata !4415, metadata !DIExpression()), !dbg !4416
  %11 = lshr i32 %10, %5, !dbg !4426
  %12 = icmp eq i32 %11, 0, !dbg !4426
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !4428
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !4428
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !4428
  store volatile i32 %9, i32* %15, align 4, !dbg !4429
  br label %16, !dbg !4430

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !4416
  ret i32 %17, !dbg !4430
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4433, metadata !DIExpression()), !dbg !4436
  %2 = icmp ugt i32 %0, 48, !dbg !4437
  br i1 %2, label %9, label %3, !dbg !4439

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4440
  call void @llvm.dbg.value(metadata i32 %4, metadata !4434, metadata !DIExpression()), !dbg !4436
  %5 = and i32 %0, 31, !dbg !4441
  call void @llvm.dbg.value(metadata i32 %5, metadata !4435, metadata !DIExpression()), !dbg !4436
  %6 = shl nuw i32 1, %5, !dbg !4442
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4443
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !4444
  store volatile i32 %6, i32* %8, align 4, !dbg !4445
  br label %9, !dbg !4446

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4436
  ret i32 %10, !dbg !4447
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4448 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4450, metadata !DIExpression()), !dbg !4453
  %2 = icmp ugt i32 %0, 48, !dbg !4454
  br i1 %2, label %9, label %3, !dbg !4456

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4457
  call void @llvm.dbg.value(metadata i32 %4, metadata !4451, metadata !DIExpression()), !dbg !4453
  %5 = and i32 %0, 31, !dbg !4458
  call void @llvm.dbg.value(metadata i32 %5, metadata !4452, metadata !DIExpression()), !dbg !4453
  %6 = shl nuw i32 1, %5, !dbg !4459
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4460
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !4461
  store volatile i32 %6, i32* %8, align 4, !dbg !4462
  br label %9, !dbg !4463

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4453
  ret i32 %10, !dbg !4464
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #2 !dbg !4465 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4467, metadata !DIExpression()), !dbg !4470
  %2 = icmp ugt i32 %0, 48, !dbg !4471
  br i1 %2, label %14, label %3, !dbg !4473

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4474
  %5 = icmp eq i32 %4, 0, !dbg !4474
  br i1 %5, label %14, label %6, !dbg !4475

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4476
  call void @llvm.dbg.value(metadata i32 %7, metadata !4468, metadata !DIExpression()), !dbg !4470
  %8 = and i32 %0, 31, !dbg !4477
  call void @llvm.dbg.value(metadata i32 %8, metadata !4469, metadata !DIExpression()), !dbg !4470
  %9 = shl nuw i32 1, %8, !dbg !4478
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4479
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4480
  store volatile i32 %9, i32* %11, align 4, !dbg !4481
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4482
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !4483
  store volatile i32 %9, i32* %13, align 4, !dbg !4484
  br label %14, !dbg !4485

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4470
  ret i32 %15, !dbg !4486
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #2 !dbg !4487 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4489, metadata !DIExpression()), !dbg !4492
  %2 = icmp ugt i32 %0, 48, !dbg !4493
  br i1 %2, label %14, label %3, !dbg !4495

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4496
  %5 = icmp eq i32 %4, 0, !dbg !4496
  br i1 %5, label %14, label %6, !dbg !4497

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4498
  call void @llvm.dbg.value(metadata i32 %7, metadata !4490, metadata !DIExpression()), !dbg !4492
  %8 = and i32 %0, 31, !dbg !4499
  call void @llvm.dbg.value(metadata i32 %8, metadata !4491, metadata !DIExpression()), !dbg !4492
  %9 = shl nuw i32 1, %8, !dbg !4500
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4501
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4502
  store volatile i32 %9, i32* %11, align 4, !dbg !4503
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4504
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !4505
  store volatile i32 %9, i32* %13, align 4, !dbg !4506
  br label %14, !dbg !4507

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4492
  ret i32 %15, !dbg !4508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #2 !dbg !4509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4511, metadata !DIExpression()), !dbg !4514
  %2 = icmp ugt i32 %0, 48, !dbg !4515
  br i1 %2, label %12, label %3, !dbg !4517

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4518
  %5 = icmp eq i32 %4, 0, !dbg !4518
  br i1 %5, label %12, label %6, !dbg !4519

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4520
  call void @llvm.dbg.value(metadata i32 %7, metadata !4512, metadata !DIExpression()), !dbg !4514
  %8 = and i32 %0, 31, !dbg !4521
  call void @llvm.dbg.value(metadata i32 %8, metadata !4513, metadata !DIExpression()), !dbg !4514
  %9 = shl nuw i32 1, %8, !dbg !4522
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4523
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !4524
  store volatile i32 %9, i32* %11, align 4, !dbg !4525
  br label %12, !dbg !4526

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4514
  ret i32 %13, !dbg !4527
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4528 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4534, metadata !DIExpression()), !dbg !4536
  call void @llvm.dbg.value(metadata i32 %1, metadata !4535, metadata !DIExpression()), !dbg !4536
  %3 = icmp ugt i32 %0, 5, !dbg !4537
  br i1 %3, label %7, label %4, !dbg !4539

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4540
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !4541
  store volatile i32 %1, i32* %6, align 4, !dbg !4542
  br label %7, !dbg !4543

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !4536
  ret i32 %8, !dbg !4544
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !4545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4549, metadata !DIExpression()), !dbg !4555
  call void @llvm.dbg.value(metadata i8 %1, metadata !4550, metadata !DIExpression()), !dbg !4555
  call void @llvm.dbg.value(metadata i8 %2, metadata !4551, metadata !DIExpression()), !dbg !4555
  call void @llvm.dbg.value(metadata i8 %3, metadata !4552, metadata !DIExpression()), !dbg !4555
  %5 = icmp ugt i32 %0, 48, !dbg !4556
  br i1 %5, label %30, label %6, !dbg !4558

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4559
  %8 = icmp eq i32 %7, 0, !dbg !4559
  br i1 %8, label %9, label %30, !dbg !4560

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !4561
  call void @llvm.dbg.value(metadata i32 %10, metadata !4553, metadata !DIExpression()), !dbg !4555
  %11 = and i32 %0, 31, !dbg !4562
  call void @llvm.dbg.value(metadata i32 %11, metadata !4554, metadata !DIExpression()), !dbg !4555
  %12 = icmp eq i8 %1, 0, !dbg !4563
  %13 = shl nuw i32 1, %11, !dbg !4565
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4565
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !4566
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !4566
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !4566
  store volatile i32 %13, i32* %17, align 4, !dbg !4565
  %18 = icmp eq i8 %2, 0, !dbg !4567
  %19 = shl nuw i32 1, %11, !dbg !4569
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4569
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !4570
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !4570
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !4570
  store volatile i32 %19, i32* %23, align 4, !dbg !4569
  %24 = icmp eq i8 %3, 0, !dbg !4571
  %25 = shl nuw i32 1, %11, !dbg !4573
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4573
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !4574
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !4574
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !4574
  store volatile i32 %25, i32* %29, align 4, !dbg !4573
  br label %30, !dbg !4575

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !4555
  ret i32 %31, !dbg !4575
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !4576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4578, metadata !DIExpression()), !dbg !4585
  %2 = icmp ugt i32 %0, 48, !dbg !4586
  br i1 %2, label %40, label %3, !dbg !4588

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4589
  call void @llvm.dbg.value(metadata i32 %4, metadata !4579, metadata !DIExpression()), !dbg !4585
  %5 = and i32 %0, 31, !dbg !4590
  call void @llvm.dbg.value(metadata i32 %5, metadata !4582, metadata !DIExpression()), !dbg !4585
  %6 = lshr i32 %0, 4, !dbg !4591
  call void @llvm.dbg.value(metadata i32 %6, metadata !4580, metadata !DIExpression()), !dbg !4585
  call void @llvm.dbg.value(metadata i32 %0, metadata !4583, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4585
  %7 = lshr i32 %0, 3, !dbg !4592
  call void @llvm.dbg.value(metadata i32 %7, metadata !4581, metadata !DIExpression()), !dbg !4585
  call void @llvm.dbg.value(metadata i32 %0, metadata !4584, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4585
  %8 = shl nuw nsw i32 %0, 2, !dbg !4593
  %9 = and i32 %8, 28, !dbg !4593
  %10 = shl nuw i32 15, %9, !dbg !4594
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4595
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !4596
  store volatile i32 %10, i32* %12, align 4, !dbg !4597
  %13 = shl nuw i32 1, %5, !dbg !4598
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4599
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !4600
  store volatile i32 %13, i32* %15, align 4, !dbg !4601
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4602
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !4603
  store volatile i32 %13, i32* %17, align 4, !dbg !4604
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4605
  %19 = icmp eq i32 %18, 0, !dbg !4605
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4607
  br i1 %19, label %23, label %21, !dbg !4608

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !4609
  br label %29, !dbg !4611

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !4612
  store volatile i32 %13, i32* %24, align 4, !dbg !4614
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4615
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !4616
  store volatile i32 %13, i32* %26, align 4, !dbg !4617
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4618
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !4619
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !4607
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4620
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !4621
  store volatile i32 %13, i32* %32, align 4, !dbg !4622
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4623
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !4624
  store volatile i32 %13, i32* %34, align 4, !dbg !4625
  %35 = shl nuw nsw i32 %0, 1, !dbg !4626
  %36 = and i32 %35, 30, !dbg !4626
  %37 = shl nuw i32 3, %36, !dbg !4627
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4628
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !4629
  store volatile i32 %37, i32* %39, align 4, !dbg !4630
  br label %40, !dbg !4631

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !4585
  ret i32 %41, !dbg !4632
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !4633 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4635, metadata !DIExpression()), !dbg !4640
  %2 = icmp ugt i32 %0, 48, !dbg !4641
  br i1 %2, label %34, label %3, !dbg !4643

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4644
  call void @llvm.dbg.value(metadata i32 %4, metadata !4636, metadata !DIExpression()), !dbg !4640
  %5 = and i32 %0, 31, !dbg !4645
  call void @llvm.dbg.value(metadata i32 %5, metadata !4638, metadata !DIExpression()), !dbg !4640
  %6 = lshr i32 %0, 3, !dbg !4646
  call void @llvm.dbg.value(metadata i32 %6, metadata !4637, metadata !DIExpression()), !dbg !4640
  call void @llvm.dbg.value(metadata i32 %0, metadata !4639, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4640
  %7 = shl nuw nsw i32 %0, 2, !dbg !4647
  %8 = and i32 %7, 28, !dbg !4647
  %9 = shl nuw i32 15, %8, !dbg !4648
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4649
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !4650
  store volatile i32 %9, i32* %11, align 4, !dbg !4651
  %12 = shl nuw i32 1, %5, !dbg !4652
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4653
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !4654
  store volatile i32 %12, i32* %14, align 4, !dbg !4655
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4656
  %16 = icmp eq i32 %15, 0, !dbg !4656
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4658
  br i1 %16, label %22, label %18, !dbg !4659

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !4660
  store volatile i32 %12, i32* %19, align 4, !dbg !4662
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4663
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !4664
  br label %28, !dbg !4665

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !4666
  store volatile i32 %12, i32* %23, align 4, !dbg !4668
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4669
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !4670
  store volatile i32 %12, i32* %25, align 4, !dbg !4671
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4672
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !4673
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !4658
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4674
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !4675
  store volatile i32 %12, i32* %31, align 4, !dbg !4676
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4677
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !4678
  store volatile i32 %12, i32* %33, align 4, !dbg !4679
  br label %34, !dbg !4680

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !4640
  ret i32 %35, !dbg !4681
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4686, metadata !DIExpression()), !dbg !4690
  call void @llvm.dbg.value(metadata i32 %1, metadata !4687, metadata !DIExpression()), !dbg !4690
  %3 = icmp ugt i32 %0, 48, !dbg !4691
  br i1 %3, label %14, label %4, !dbg !4693

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !4694
  call void @llvm.dbg.value(metadata i32 %5, metadata !4688, metadata !DIExpression()), !dbg !4690
  call void @llvm.dbg.value(metadata i32 %0, metadata !4689, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4690
  %6 = shl nuw nsw i32 %0, 1, !dbg !4695
  %7 = and i32 %6, 30, !dbg !4695
  %8 = shl nuw i32 3, %7, !dbg !4696
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4697
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !4698
  store volatile i32 %8, i32* %10, align 4, !dbg !4699
  %11 = shl i32 %1, %7, !dbg !4700
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4701
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !4702
  store volatile i32 %11, i32* %13, align 4, !dbg !4703
  br label %14, !dbg !4704

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !4690
  ret i32 %15, !dbg !4705
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4706 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4711, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i32* %1, metadata !4712, metadata !DIExpression()), !dbg !4716
  %3 = icmp ugt i32 %0, 48, !dbg !4717
  br i1 %3, label %18, label %4, !dbg !4719

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4720
  br i1 %5, label %18, label %6, !dbg !4722

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !4723
  call void @llvm.dbg.value(metadata i32 %7, metadata !4713, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i32 %0, metadata !4714, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4716
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4724
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !4725
  %10 = load volatile i32, i32* %9, align 4, !dbg !4725
  call void @llvm.dbg.value(metadata i32 %10, metadata !4715, metadata !DIExpression()), !dbg !4716
  %11 = shl nuw nsw i32 %0, 1, !dbg !4726
  %12 = and i32 %11, 30, !dbg !4726
  %13 = shl nuw i32 3, %12, !dbg !4727
  %14 = and i32 %10, %13, !dbg !4728
  call void @llvm.dbg.value(metadata i32 %14, metadata !4715, metadata !DIExpression()), !dbg !4716
  %15 = lshr i32 %14, %12, !dbg !4729
  call void @llvm.dbg.value(metadata i32 %15, metadata !4715, metadata !DIExpression()), !dbg !4716
  %16 = shl i32 %15, 2, !dbg !4730
  %17 = add i32 %16, 4, !dbg !4730
  store i32 %17, i32* %1, align 4, !dbg !4731
  br label %18, !dbg !4732

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4716
  ret i32 %19, !dbg !4733
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4734 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4738, metadata !DIExpression()), !dbg !4803
  call void @llvm.dbg.value(metadata i1 %1, metadata !4739, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4803
  %4 = bitcast i32* %3 to i8*, !dbg !4804
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4804
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4805
  %6 = load volatile i32, i32* %5, align 4, !dbg !4805
  %7 = icmp eq i32 %6, 2, !dbg !4807
  br i1 %7, label %9, label %8, !dbg !4808

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4809
  unreachable, !dbg !4809

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4811
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !4811
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !4745, metadata !DIExpression()), !dbg !4803
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !4812
  call void @llvm.dbg.value(metadata i32 %12, metadata !4740, metadata !DIExpression()), !dbg !4803
  br i1 %1, label %13, label %14, !dbg !4813

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #20, !dbg !4814
  br label %14, !dbg !4817

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !4742, metadata !DIExpression(DW_OP_deref)), !dbg !4803
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !4818
  call void @llvm.dbg.value(metadata i32 %15, metadata !4801, metadata !DIExpression()), !dbg !4803
  %16 = icmp eq i32 %15, 0, !dbg !4819
  br i1 %16, label %18, label %17, !dbg !4821

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4822
  unreachable, !dbg !4822

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !4824
  call void @llvm.dbg.value(metadata i32 %19, metadata !4742, metadata !DIExpression()), !dbg !4803
  %20 = icmp eq i32 %19, 0, !dbg !4826
  br i1 %20, label %43, label %21, !dbg !4827

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4828
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !4828
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !4743, metadata !DIExpression()), !dbg !4803
  call void @llvm.dbg.value(metadata i8* undef, metadata !4744, metadata !DIExpression()), !dbg !4803
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !4829
  br i1 %24, label %25, label %26, !dbg !4831

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4832
  unreachable, !dbg !4832

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4834
  %28 = load i8*, i8** %27, align 4, !dbg !4834
  call void @llvm.dbg.value(metadata i8* %28, metadata !4744, metadata !DIExpression()), !dbg !4803
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !4835
  call void %23(i32 noundef 1, i8* noundef %28) #20, !dbg !4836
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #20, !dbg !4837
  call void @llvm.dbg.value(metadata i32* %3, metadata !4742, metadata !DIExpression(DW_OP_deref)), !dbg !4803
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !4838
  call void @llvm.dbg.value(metadata i32 %31, metadata !4801, metadata !DIExpression()), !dbg !4803
  %32 = icmp eq i32 %31, 0, !dbg !4839
  br i1 %32, label %34, label %33, !dbg !4841

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4842
  unreachable, !dbg !4842

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !4844
  call void @llvm.dbg.value(metadata i32 %35, metadata !4742, metadata !DIExpression()), !dbg !4803
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !4846
  %37 = load i32, i32* %36, align 4, !dbg !4846
  %38 = icmp ult i32 %35, %37, !dbg !4847
  br i1 %38, label %43, label %39, !dbg !4848

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !4849
  call void @llvm.dbg.value(metadata i32 %40, metadata !4801, metadata !DIExpression()), !dbg !4803
  %41 = icmp eq i32 %40, 0, !dbg !4851
  br i1 %41, label %43, label %42, !dbg !4853

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4854
  unreachable, !dbg !4854

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4856
  ret void, !dbg !4856
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_receive_bytes(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_disable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_enable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4857 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4859, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i1 %1, metadata !4860, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4867
  %4 = bitcast i32* %3 to i8*, !dbg !4868
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4868
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4869
  %6 = load volatile i32, i32* %5, align 4, !dbg !4869
  %7 = icmp eq i32 %6, 2, !dbg !4871
  br i1 %7, label %9, label %8, !dbg !4872

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4873
  unreachable, !dbg !4873

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !4875
  call void @llvm.dbg.value(metadata i32 %10, metadata !4861, metadata !DIExpression()), !dbg !4867
  br i1 %1, label %36, label %11, !dbg !4876

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4877
  %13 = load void (i32, i8*)*, void (i32, i8*)** %12, align 4, !dbg !4877
  call void @llvm.dbg.value(metadata void (i32, i8*)* %13, metadata !4865, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i8* undef, metadata !4866, metadata !DIExpression()), !dbg !4867
  %14 = icmp eq void (i32, i8*)* %13, null, !dbg !4880
  br i1 %14, label %15, label %16, !dbg !4882

15:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4883
  unreachable, !dbg !4883

16:                                               ; preds = %11
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4885
  %18 = load i8*, i8** %17, align 4, !dbg !4885
  call void @llvm.dbg.value(metadata i8* %18, metadata !4866, metadata !DIExpression()), !dbg !4867
  %19 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !4886
  tail call void %13(i32 noundef 2, i8* noundef %18) #20, !dbg !4887
  %20 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #20, !dbg !4888
  call void @llvm.dbg.value(metadata i32* %3, metadata !4864, metadata !DIExpression(DW_OP_deref)), !dbg !4867
  %21 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #20, !dbg !4889
  call void @llvm.dbg.value(metadata i32 %21, metadata !4862, metadata !DIExpression()), !dbg !4867
  %22 = icmp eq i32 %21, 0, !dbg !4890
  br i1 %22, label %24, label %23, !dbg !4892

23:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4893
  unreachable, !dbg !4893

24:                                               ; preds = %16
  %25 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !4895
  %26 = load i32, i32* %25, align 4, !dbg !4895
  %27 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !4896
  %28 = load i32, i32* %27, align 4, !dbg !4896
  %29 = sub i32 %26, %28, !dbg !4897
  call void @llvm.dbg.value(metadata i32 %29, metadata !4863, metadata !DIExpression()), !dbg !4867
  %30 = load i32, i32* %3, align 4, !dbg !4898
  call void @llvm.dbg.value(metadata i32 %30, metadata !4864, metadata !DIExpression()), !dbg !4867
  %31 = icmp ult i32 %30, %29, !dbg !4900
  br i1 %31, label %36, label %32, !dbg !4901

32:                                               ; preds = %24
  %33 = call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !4902
  call void @llvm.dbg.value(metadata i32 %33, metadata !4862, metadata !DIExpression()), !dbg !4867
  %34 = icmp eq i32 %33, 0, !dbg !4904
  br i1 %34, label %36, label %35, !dbg !4906

35:                                               ; preds = %32
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4907
  unreachable, !dbg !4907

36:                                               ; preds = %24, %32, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4909
  ret void, !dbg !4909
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_send_space(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !4910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4914, metadata !DIExpression()), !dbg !4918
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4919
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !4919
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !4915, metadata !DIExpression()), !dbg !4918
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !4920
  %5 = icmp eq i32 %4, 0, !dbg !4920
  br i1 %5, label %6, label %14, !dbg !4922

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #20, !dbg !4923
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #20, !dbg !4925
  %7 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4926
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !4926
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !4916, metadata !DIExpression()), !dbg !4918
  call void @llvm.dbg.value(metadata i8* undef, metadata !4917, metadata !DIExpression()), !dbg !4918
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !4927
  br i1 %9, label %10, label %11, !dbg !4929

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4930
  unreachable, !dbg !4930

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4932
  %13 = load i8*, i8** %12, align 4, !dbg !4932
  call void @llvm.dbg.value(metadata i8* %13, metadata !4917, metadata !DIExpression()), !dbg !4918
  tail call void %8(i32 noundef -1, i8* noundef %13) #20, !dbg !4933
  br label %14, !dbg !4934

14:                                               ; preds = %11, %1
  ret void, !dbg !4935
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4942, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.value(metadata i32 %1, metadata !4943, metadata !DIExpression()), !dbg !4947
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4948
  br i1 %3, label %4, label %16, !dbg !4950

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #21, !dbg !4951
  br i1 %5, label %6, label %16, !dbg !4952

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4953
  %8 = load volatile i32, i32* %7, align 4, !dbg !4953
  %9 = icmp eq i32 %8, 0, !dbg !4955
  br i1 %9, label %16, label %10, !dbg !4956

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4957
  call void @llvm.dbg.value(metadata i32 %11, metadata !4945, metadata !DIExpression()), !dbg !4947
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !4958
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4959
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4959
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4946, metadata !DIExpression()), !dbg !4947
  %14 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !4960
  %15 = load i32, i32* %14, align 4, !dbg !4960
  call void @llvm.dbg.value(metadata i32 %15, metadata !4944, metadata !DIExpression()), !dbg !4947
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %13, i32 noundef %15) #20, !dbg !4961
  br label %16, !dbg !4962

16:                                               ; preds = %6, %2, %4, %10
  %17 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4947
  ret i32 %17, !dbg !4963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !4964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4968, metadata !DIExpression()), !dbg !4969
  %2 = icmp ult i32 %0, 4, !dbg !4970
  ret i1 %2, !dbg !4971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !4972 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4976, metadata !DIExpression()), !dbg !4977
  %2 = icmp ult i32 %0, 13, !dbg !4978
  ret i1 %2, !dbg !4979
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4980 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4996, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4997, metadata !DIExpression()), !dbg !5000
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5001
  br i1 %3, label %4, label %23, !dbg !5003

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !5004
  br i1 %5, label %6, label %23, !dbg !5005

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5006
  %8 = load volatile i32, i32* %7, align 4, !dbg !5006
  %9 = icmp eq i32 %8, 0, !dbg !5008
  br i1 %9, label %23, label %10, !dbg !5009

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5010
  call void @llvm.dbg.value(metadata i32 %11, metadata !4998, metadata !DIExpression()), !dbg !5000
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !5011
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5012
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !5012
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4999, metadata !DIExpression()), !dbg !5000
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !5013
  %15 = load i32, i32* %14, align 4, !dbg !5013
  %16 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %15) #21, !dbg !5014
  %17 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !5015
  %18 = load i32, i32* %17, align 4, !dbg !5015
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !5016
  %20 = load i32, i32* %19, align 4, !dbg !5016
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !5017
  %22 = load i32, i32* %21, align 4, !dbg !5017
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %13, i32 noundef %18, i32 noundef %20, i32 noundef %22) #20, !dbg !5018
  br label %23, !dbg !5019

23:                                               ; preds = %6, %2, %4, %10
  %24 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !5000
  ret i32 %24, !dbg !5020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !5021 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !5025, metadata !DIExpression()), !dbg !5026
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !5027
  %3 = load i32, i32* %2, align 4, !dbg !5027
  %4 = icmp ult i32 %3, 13, !dbg !5028
  br i1 %4, label %5, label %17, !dbg !5029

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !5030
  %7 = load i32, i32* %6, align 4, !dbg !5030
  %8 = icmp ult i32 %7, 4, !dbg !5031
  br i1 %8, label %9, label %17, !dbg !5032

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !5033
  %11 = load i32, i32* %10, align 4, !dbg !5033
  %12 = icmp ult i32 %11, 2, !dbg !5034
  br i1 %12, label %13, label %17, !dbg !5035

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !5036
  %15 = load i32, i32* %14, align 4, !dbg !5036
  %16 = icmp ult i32 %15, 3, !dbg !5037
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !5026
  ret i1 %18, !dbg !5038
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5044, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !5045, metadata !DIExpression()), !dbg !5051
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5052
  br i1 %3, label %4, label %41, !dbg !5054

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !5055
  br i1 %5, label %6, label %41, !dbg !5056

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5057
  call void @llvm.dbg.value(metadata i32 %7, metadata !5049, metadata !DIExpression()), !dbg !5051
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5058
  %9 = load volatile i32, i32* %8, align 4, !dbg !5058
  %10 = icmp eq i32 %9, 0, !dbg !5060
  br i1 %10, label %12, label %11, !dbg !5061

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !5062
  br label %41, !dbg !5064

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !5065
  br i1 %13, label %22, label %14, !dbg !5067

14:                                               ; preds = %12, %14
  %15 = phi i32 [ %19, %14 ], [ 0, %12 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !5047, metadata !DIExpression()), !dbg !5051
  %16 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %15, !dbg !5068
  store volatile i32 0, i32* %16, align 4, !dbg !5073
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 1, !dbg !5074
  store i8* null, i8** %17, align 4, !dbg !5075
  %18 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 0, !dbg !5076
  store void (i32, i8*)* null, void (i32, i8*)** %18, align 4, !dbg !5077
  %19 = add nuw nsw i32 %15, 1, !dbg !5078
  call void @llvm.dbg.value(metadata i32 %19, metadata !5047, metadata !DIExpression()), !dbg !5051
  %20 = icmp eq i32 %19, 4, !dbg !5079
  br i1 %20, label %21, label %14, !dbg !5080, !llvm.loop !5081

21:                                               ; preds = %14
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !5083
  br label %22, !dbg !5084

22:                                               ; preds = %21, %12
  store volatile i32 1, i32* %8, align 4, !dbg !5085
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !5086
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !5087
  %24 = load i32, i32* %23, align 4, !dbg !5087
  %25 = tail call i32 @hal_clock_enable(i32 noundef %24) #20, !dbg !5088
  call void @llvm.dbg.value(metadata i32 %25, metadata !5050, metadata !DIExpression()), !dbg !5051
  %26 = icmp eq i32 %25, 0, !dbg !5089
  br i1 %26, label %28, label %27, !dbg !5091

27:                                               ; preds = %22
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5092
  unreachable, !dbg !5092

28:                                               ; preds = %22
  %29 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5094
  %30 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %29, align 4, !dbg !5094
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %30, metadata !5046, metadata !DIExpression()), !dbg !5051
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !5095
  %31 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !5096
  %32 = load i32, i32* %31, align 4, !dbg !5096
  %33 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %32, !dbg !5097
  %34 = load i32, i32* %33, align 4, !dbg !5097
  call void @llvm.dbg.value(metadata i32 %34, metadata !5048, metadata !DIExpression()), !dbg !5051
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %30, i32 noundef %34) #20, !dbg !5098
  %35 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !5099
  %36 = load i32, i32* %35, align 4, !dbg !5099
  %37 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !5100
  %38 = load i32, i32* %37, align 4, !dbg !5100
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !5101
  %40 = load i32, i32* %39, align 4, !dbg !5101
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %30, i32 noundef %36, i32 noundef %38, i32 noundef %40) #20, !dbg !5102
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !5103
  br label %41, !dbg !5104

41:                                               ; preds = %2, %4, %28, %11
  %42 = phi i32 [ -3, %11 ], [ 0, %28 ], [ -4, %4 ], [ -4, %2 ], !dbg !5051
  ret i32 %42, !dbg !5105
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !5106 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5110, metadata !DIExpression()), !dbg !5117
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5118
  br i1 %2, label %3, label %54, !dbg !5120

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5121
  call void @llvm.dbg.value(metadata i32 %4, metadata !5114, metadata !DIExpression()), !dbg !5117
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5122
  %6 = load volatile i32, i32* %5, align 4, !dbg !5122
  %7 = icmp eq i32 %6, 0, !dbg !5124
  br i1 %7, label %52, label %8, !dbg !5125

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5126
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !5126
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !5111, metadata !DIExpression()), !dbg !5117
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !5127
  %11 = load volatile i32, i32* %5, align 4, !dbg !5128
  %12 = icmp eq i32 %11, 2, !dbg !5130
  br i1 %12, label %13, label %43, !dbg !5131

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5132
  call void @llvm.dbg.value(metadata i32 %14, metadata !5112, metadata !DIExpression()), !dbg !5117
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5134
  call void @llvm.dbg.value(metadata i32 %15, metadata !5113, metadata !DIExpression()), !dbg !5117
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #20, !dbg !5135
  call void @llvm.dbg.value(metadata i32 %16, metadata !5115, metadata !DIExpression()), !dbg !5117
  %17 = icmp eq i32 %16, 0, !dbg !5136
  br i1 %17, label %19, label %18, !dbg !5138

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5139
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5141
  unreachable, !dbg !5141

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #20, !dbg !5142
  call void @llvm.dbg.value(metadata i32 %20, metadata !5115, metadata !DIExpression()), !dbg !5117
  %21 = icmp eq i32 %20, 0, !dbg !5143
  br i1 %21, label %23, label %22, !dbg !5145

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5146
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5148
  unreachable, !dbg !5148

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #20, !dbg !5149
  call void @llvm.dbg.value(metadata i32 %24, metadata !5115, metadata !DIExpression()), !dbg !5117
  %25 = icmp eq i32 %24, 0, !dbg !5150
  br i1 %25, label %27, label %26, !dbg !5152

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5153
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5155
  unreachable, !dbg !5155

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #20, !dbg !5156
  call void @llvm.dbg.value(metadata i32 %28, metadata !5115, metadata !DIExpression()), !dbg !5117
  %29 = icmp eq i32 %28, 0, !dbg !5157
  br i1 %29, label %31, label %30, !dbg !5159

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5160
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5162
  unreachable, !dbg !5162

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #20, !dbg !5163
  call void @llvm.dbg.value(metadata i32 %32, metadata !5115, metadata !DIExpression()), !dbg !5117
  %33 = icmp eq i32 %32, 0, !dbg !5164
  br i1 %33, label %35, label %34, !dbg !5166

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5167
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5169
  unreachable, !dbg !5169

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #20, !dbg !5170
  call void @llvm.dbg.value(metadata i32 %36, metadata !5115, metadata !DIExpression()), !dbg !5117
  %37 = icmp eq i32 %36, 0, !dbg !5171
  br i1 %37, label %39, label %38, !dbg !5173

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5174
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5176
  unreachable, !dbg !5176

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5177
  %41 = load i32, i32* %40, align 4, !dbg !5177
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #20, !dbg !5178
  br label %43, !dbg !5179

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !5180
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !5181
  %45 = load i32, i32* %44, align 4, !dbg !5181
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #20, !dbg !5182
  call void @llvm.dbg.value(metadata i32 %46, metadata !5116, metadata !DIExpression()), !dbg !5117
  %47 = icmp eq i32 %46, 0, !dbg !5183
  br i1 %47, label %49, label %48, !dbg !5185

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5186
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5188
  unreachable, !dbg !5188

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5189
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !5190
  %51 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5191
  store i8* null, i8** %51, align 4, !dbg !5192
  store volatile i32 0, i32* %5, align 4, !dbg !5193
  br label %52, !dbg !5194

52:                                               ; preds = %3, %49
  %53 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5117
  br label %54, !dbg !5195

54:                                               ; preds = %52, %1
  %55 = phi i32 [ -4, %1 ], [ %53, %52 ], !dbg !5117
  ret i32 %55, !dbg !5195
}

; Function Attrs: optsize
declare dso_local i32 @vdma_stop(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_deinit(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !5196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5200, metadata !DIExpression()), !dbg !5203
  call void @llvm.dbg.value(metadata i8 %1, metadata !5201, metadata !DIExpression()), !dbg !5203
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5204
  br i1 %3, label %4, label %11, !dbg !5206

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5207
  %6 = load volatile i32, i32* %5, align 4, !dbg !5207
  %7 = icmp eq i32 %6, 1, !dbg !5209
  br i1 %7, label %8, label %11, !dbg !5210

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5211
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !5211
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !5202, metadata !DIExpression()), !dbg !5203
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #20, !dbg !5212
  br label %11, !dbg !5213

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !5213
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5220, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata i8* %1, metadata !5221, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata i32 %2, metadata !5222, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata i32 0, metadata !5223, metadata !DIExpression()), !dbg !5224
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5225
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !5227
  br i1 %6, label %7, label %20, !dbg !5227

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5228
  %9 = load volatile i32, i32* %8, align 4, !dbg !5228
  %10 = icmp ne i32 %9, 1, !dbg !5230
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !5231
  call void @llvm.dbg.value(metadata i32 0, metadata !5223, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata i8* %1, metadata !5221, metadata !DIExpression()), !dbg !5224
  br i1 %12, label %20, label %13, !dbg !5231

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5223, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata i8* %15, metadata !5221, metadata !DIExpression()), !dbg !5224
  %16 = load i8, i8* %15, align 1, !dbg !5232
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #21, !dbg !5236
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !5237
  call void @llvm.dbg.value(metadata i8* %17, metadata !5221, metadata !DIExpression()), !dbg !5224
  %18 = add nuw i32 %14, 1, !dbg !5238
  call void @llvm.dbg.value(metadata i32 %18, metadata !5223, metadata !DIExpression()), !dbg !5224
  %19 = icmp eq i32 %18, %2, !dbg !5239
  br i1 %19, label %20, label %13, !dbg !5240, !llvm.loop !5241

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !5224
  ret i32 %21, !dbg !5243
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5244 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5246, metadata !DIExpression()), !dbg !5254
  call void @llvm.dbg.value(metadata i8* %1, metadata !5247, metadata !DIExpression()), !dbg !5254
  call void @llvm.dbg.value(metadata i32 %2, metadata !5248, metadata !DIExpression()), !dbg !5254
  %5 = bitcast i32* %4 to i8*, !dbg !5255
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5255
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5256
  %7 = xor i1 %6, true, !dbg !5258
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5258
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5258
  br i1 %11, label %45, label %12, !dbg !5258

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5259
  %14 = load volatile i32, i32* %13, align 4, !dbg !5259
  %15 = icmp eq i32 %14, 2, !dbg !5261
  br i1 %15, label %16, label %45, !dbg !5262

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5263
  call void @llvm.dbg.value(metadata i32 %17, metadata !5249, metadata !DIExpression()), !dbg !5254
  call void @llvm.dbg.value(metadata i32* %4, metadata !5252, metadata !DIExpression(DW_OP_deref)), !dbg !5254
  %18 = call i32 @vdma_get_available_send_space(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !5264
  call void @llvm.dbg.value(metadata i32 %18, metadata !5253, metadata !DIExpression()), !dbg !5254
  %19 = icmp eq i32 %18, 0, !dbg !5265
  br i1 %19, label %21, label %20, !dbg !5267

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5268
  unreachable, !dbg !5268

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !5270
  call void @llvm.dbg.value(metadata i32 %22, metadata !5252, metadata !DIExpression()), !dbg !5254
  %23 = icmp ult i32 %22, %2, !dbg !5272
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !5251, metadata !DIExpression()), !dbg !5254
  call void @llvm.dbg.value(metadata i32 0, metadata !5250, metadata !DIExpression()), !dbg !5254
  %25 = icmp eq i32 %24, 0, !dbg !5273
  br i1 %25, label %38, label %28, !dbg !5276

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !5250, metadata !DIExpression()), !dbg !5254
  %27 = icmp eq i32 %34, %24, !dbg !5273
  br i1 %27, label %36, label %28, !dbg !5276, !llvm.loop !5277

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %34, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !5250, metadata !DIExpression()), !dbg !5254
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5279
  %31 = load i8, i8* %30, align 1, !dbg !5279
  %32 = call i32 @vdma_push_data(i32 noundef %17, i8 noundef zeroext %31) #20, !dbg !5281
  call void @llvm.dbg.value(metadata i32 %32, metadata !5253, metadata !DIExpression()), !dbg !5254
  %33 = icmp eq i32 %32, 0, !dbg !5282
  %34 = add nuw i32 %29, 1, !dbg !5284
  call void @llvm.dbg.value(metadata i32 %34, metadata !5250, metadata !DIExpression()), !dbg !5254
  br i1 %33, label %26, label %35, !dbg !5285

35:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5286
  unreachable, !dbg !5286

36:                                               ; preds = %26
  %37 = load i32, i32* %4, align 4, !dbg !5288
  br label %38, !dbg !5288

38:                                               ; preds = %36, %21
  %39 = phi i32 [ %37, %36 ], [ %22, %21 ], !dbg !5288
  call void @llvm.dbg.value(metadata i32 %39, metadata !5252, metadata !DIExpression()), !dbg !5254
  %40 = icmp eq i32 %24, %39, !dbg !5290
  br i1 %40, label %41, label %45, !dbg !5291

41:                                               ; preds = %38
  %42 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !5292
  call void @llvm.dbg.value(metadata i32 %42, metadata !5253, metadata !DIExpression()), !dbg !5254
  %43 = icmp eq i32 %42, 0, !dbg !5294
  br i1 %43, label %45, label %44, !dbg !5296

44:                                               ; preds = %41
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5297
  unreachable, !dbg !5297

45:                                               ; preds = %38, %41, %12, %3
  %46 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %41 ], [ %24, %38 ], !dbg !5254
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5299
  ret i32 %46, !dbg !5299
}

; Function Attrs: optsize
declare dso_local i32 @vdma_push_data(i32 noundef, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !5300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5304, metadata !DIExpression()), !dbg !5307
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5308
  br i1 %2, label %3, label %11, !dbg !5310

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5311
  %5 = load volatile i32, i32* %4, align 4, !dbg !5311
  %6 = icmp eq i32 %5, 1, !dbg !5313
  br i1 %6, label %7, label %11, !dbg !5314

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5315
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5315
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5306, metadata !DIExpression()), !dbg !5307
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5316
  call void @llvm.dbg.value(metadata i8 %10, metadata !5305, metadata !DIExpression()), !dbg !5307
  br label %11, !dbg !5317

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5307
  ret i8 %12, !dbg !5318
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !5319 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5323, metadata !DIExpression()), !dbg !5326
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5327
  br i1 %2, label %3, label %11, !dbg !5329

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5330
  %5 = load volatile i32, i32* %4, align 4, !dbg !5330
  %6 = icmp eq i32 %5, 1, !dbg !5332
  br i1 %6, label %7, label %11, !dbg !5333

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5334
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5334
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5325, metadata !DIExpression()), !dbg !5326
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5335
  call void @llvm.dbg.value(metadata i32 %10, metadata !5324, metadata !DIExpression()), !dbg !5326
  br label %11, !dbg !5336

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5326
  ret i32 %12, !dbg !5337
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5342, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.value(metadata i8* %1, metadata !5343, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.value(metadata i32 %2, metadata !5344, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.value(metadata i8* %1, metadata !5346, metadata !DIExpression()), !dbg !5347
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5348
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !5350
  br i1 %6, label %7, label %19, !dbg !5350

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5351
  %9 = load volatile i32, i32* %8, align 4, !dbg !5351
  %10 = icmp ne i32 %9, 1, !dbg !5353
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !5354
  call void @llvm.dbg.value(metadata i32 0, metadata !5345, metadata !DIExpression()), !dbg !5347
  br i1 %12, label %19, label %13, !dbg !5354

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5345, metadata !DIExpression()), !dbg !5347
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #21, !dbg !5355
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !5359
  store i8 %15, i8* %16, align 1, !dbg !5360
  %17 = add nuw i32 %14, 1, !dbg !5361
  call void @llvm.dbg.value(metadata i32 %17, metadata !5345, metadata !DIExpression()), !dbg !5347
  %18 = icmp eq i32 %17, %2, !dbg !5362
  br i1 %18, label %19, label %13, !dbg !5363, !llvm.loop !5364

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !5347
  ret i32 %20, !dbg !5366
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5367 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5369, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata i8* %1, metadata !5370, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata i32 %2, metadata !5371, metadata !DIExpression()), !dbg !5377
  %5 = bitcast i32* %4 to i8*, !dbg !5378
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5378
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5379
  %7 = xor i1 %6, true, !dbg !5381
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5381
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5381
  br i1 %11, label %44, label %12, !dbg !5381

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5382
  %14 = load volatile i32, i32* %13, align 4, !dbg !5382
  %15 = icmp eq i32 %14, 2, !dbg !5384
  br i1 %15, label %16, label %44, !dbg !5385

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5386
  call void @llvm.dbg.value(metadata i32 %17, metadata !5372, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata i32* %4, metadata !5374, metadata !DIExpression(DW_OP_deref)), !dbg !5377
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !5387
  call void @llvm.dbg.value(metadata i32 %18, metadata !5376, metadata !DIExpression()), !dbg !5377
  %19 = icmp eq i32 %18, 0, !dbg !5388
  br i1 %19, label %21, label %20, !dbg !5390

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5391
  unreachable, !dbg !5391

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !5393
  call void @llvm.dbg.value(metadata i32 %22, metadata !5374, metadata !DIExpression()), !dbg !5377
  %23 = icmp ult i32 %22, %2, !dbg !5395
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !5373, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata i32 0, metadata !5375, metadata !DIExpression()), !dbg !5377
  %25 = icmp eq i32 %24, 0, !dbg !5396
  br i1 %25, label %37, label %28, !dbg !5399

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !5375, metadata !DIExpression()), !dbg !5377
  %27 = icmp eq i32 %33, %24, !dbg !5396
  br i1 %27, label %35, label %28, !dbg !5399, !llvm.loop !5400

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !5375, metadata !DIExpression()), !dbg !5377
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5402
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #20, !dbg !5404
  call void @llvm.dbg.value(metadata i32 %31, metadata !5376, metadata !DIExpression()), !dbg !5377
  %32 = icmp eq i32 %31, 0, !dbg !5405
  %33 = add nuw i32 %29, 1, !dbg !5407
  call void @llvm.dbg.value(metadata i32 %33, metadata !5375, metadata !DIExpression()), !dbg !5377
  br i1 %32, label %26, label %34, !dbg !5408

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5409
  unreachable, !dbg !5409

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !5411
  br label %37, !dbg !5411

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !5411
  call void @llvm.dbg.value(metadata i32 %38, metadata !5374, metadata !DIExpression()), !dbg !5377
  %39 = icmp eq i32 %24, %38, !dbg !5413
  br i1 %39, label %40, label %44, !dbg !5414

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !5415
  call void @llvm.dbg.value(metadata i32 %41, metadata !5376, metadata !DIExpression()), !dbg !5377
  %42 = icmp eq i32 %41, 0, !dbg !5417
  br i1 %42, label %44, label %43, !dbg !5419

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5420
  unreachable, !dbg !5420

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !5377
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5422
  ret i32 %45, !dbg !5422
}

; Function Attrs: optsize
declare dso_local i32 @vdma_pop_data(i32 noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !5423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5427, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !5428, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata i8* %2, metadata !5429, metadata !DIExpression()), !dbg !5435
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5436
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !5438
  br i1 %6, label %7, label %39, !dbg !5438

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5439
  call void @llvm.dbg.value(metadata i32 %8, metadata !5432, metadata !DIExpression()), !dbg !5435
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5440
  %10 = load volatile i32, i32* %9, align 4, !dbg !5440
  %11 = icmp eq i32 %10, 1, !dbg !5442
  br i1 %11, label %12, label %37, !dbg !5443

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5444
  call void @llvm.dbg.value(metadata i32 %13, metadata !5430, metadata !DIExpression()), !dbg !5435
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5445
  call void @llvm.dbg.value(metadata i32 %14, metadata !5431, metadata !DIExpression()), !dbg !5435
  %15 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5446
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !5447
  %16 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5448
  store i8* %2, i8** %16, align 4, !dbg !5449
  %17 = shl i32 %0, 1, !dbg !5450
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !5451
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #20, !dbg !5452
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !5453
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #20, !dbg !5454
  call void @llvm.dbg.value(metadata i32 %20, metadata !5433, metadata !DIExpression()), !dbg !5435
  %21 = icmp eq i32 %20, 0, !dbg !5455
  br i1 %21, label %23, label %22, !dbg !5457

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5458
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5460
  unreachable, !dbg !5460

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !5461
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !5462
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #20, !dbg !5463
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !5464
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #20, !dbg !5465
  call void @llvm.dbg.value(metadata i32 %27, metadata !5433, metadata !DIExpression()), !dbg !5435
  %28 = icmp eq i32 %27, 0, !dbg !5466
  br i1 %28, label %30, label %29, !dbg !5468

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5469
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5471
  unreachable, !dbg !5471

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5472
  %32 = load i32, i32* %31, align 4, !dbg !5472
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #20, !dbg !5473
  call void @llvm.dbg.value(metadata i32 %33, metadata !5434, metadata !DIExpression()), !dbg !5435
  %34 = icmp eq i32 %33, 0, !dbg !5474
  br i1 %34, label %36, label %35, !dbg !5476

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5477
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5479
  unreachable, !dbg !5479

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #21, !dbg !5480
  store volatile i32 2, i32* %9, align 4, !dbg !5481
  br label %37, !dbg !5482

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5435
  br label %39, !dbg !5483

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !5435
  ret i32 %40, !dbg !5483
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !5484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5489, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8* %1, metadata !5490, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i8* %1, metadata !5491, metadata !DIExpression()), !dbg !5492
  %3 = load i8, i8* %1, align 4, !dbg !5493, !range !2648
  %4 = icmp eq i8 %3, 0, !dbg !5493
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !5495
  %6 = bitcast i8* %5 to i32*, !dbg !5495
  %7 = load i32, i32* %6, align 4, !dbg !5495
  br i1 %4, label %9, label %8, !dbg !5496

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5491, metadata !DIExpression()), !dbg !5492
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !5497
  br label %10, !dbg !5499

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !5500
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !5502
}

; Function Attrs: optsize
declare dso_local i32 @vdma_register_callback(i32 noundef, void (i32, i8*)* noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !5503 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5505, metadata !DIExpression()), !dbg !5510
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5511
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !5511
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !5506, metadata !DIExpression()), !dbg !5510
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5512
  call void @llvm.dbg.value(metadata i32 %4, metadata !5507, metadata !DIExpression()), !dbg !5510
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5513
  call void @llvm.dbg.value(metadata i32 %5, metadata !5508, metadata !DIExpression()), !dbg !5510
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5514
  %6 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5515
  %7 = load i32, i32* %6, align 4, !dbg !5515
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef %7) #20, !dbg !5516
  %9 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #20, !dbg !5517
  call void @llvm.dbg.value(metadata i32 %9, metadata !5509, metadata !DIExpression()), !dbg !5510
  %10 = icmp eq i32 %9, 0, !dbg !5518
  br i1 %10, label %12, label %11, !dbg !5520

11:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5521
  unreachable, !dbg !5521

12:                                               ; preds = %1
  %13 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #20, !dbg !5523
  call void @llvm.dbg.value(metadata i32 %13, metadata !5509, metadata !DIExpression()), !dbg !5510
  %14 = icmp eq i32 %13, 0, !dbg !5524
  br i1 %14, label %16, label %15, !dbg !5526

15:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5527
  unreachable, !dbg !5527

16:                                               ; preds = %12
  %17 = tail call i32 @vdma_start(i32 noundef %4) #20, !dbg !5529
  call void @llvm.dbg.value(metadata i32 %17, metadata !5509, metadata !DIExpression()), !dbg !5510
  %18 = icmp eq i32 %17, 0, !dbg !5530
  br i1 %18, label %20, label %19, !dbg !5532

19:                                               ; preds = %16
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5533
  unreachable, !dbg !5533

20:                                               ; preds = %16
  %21 = tail call i32 @vdma_start(i32 noundef %5) #20, !dbg !5535
  call void @llvm.dbg.value(metadata i32 %21, metadata !5509, metadata !DIExpression()), !dbg !5510
  %22 = icmp eq i32 %21, 0, !dbg !5536
  br i1 %22, label %24, label %23, !dbg !5538

23:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5539
  unreachable, !dbg !5539

24:                                               ; preds = %20
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5541
  ret void, !dbg !5542
}

; Function Attrs: optsize
declare dso_local i32 @vdma_start(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !5543 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5545, metadata !DIExpression()), !dbg !5549
  %3 = bitcast i32* %2 to i8*, !dbg !5550
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5550
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5551
  br i1 %4, label %5, label %16, !dbg !5553

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5554
  %7 = load volatile i32, i32* %6, align 4, !dbg !5554
  %8 = icmp eq i32 %7, 2, !dbg !5556
  br i1 %8, label %9, label %16, !dbg !5557

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5558
  call void @llvm.dbg.value(metadata i32 %10, metadata !5546, metadata !DIExpression()), !dbg !5549
  call void @llvm.dbg.value(metadata i32* %2, metadata !5547, metadata !DIExpression(DW_OP_deref)), !dbg !5549
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !5559
  call void @llvm.dbg.value(metadata i32 %11, metadata !5548, metadata !DIExpression()), !dbg !5549
  %12 = icmp eq i32 %11, 0, !dbg !5560
  br i1 %12, label %14, label %13, !dbg !5562

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5563
  unreachable, !dbg !5563

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5565
  call void @llvm.dbg.value(metadata i32 %15, metadata !5547, metadata !DIExpression()), !dbg !5549
  br label %16, !dbg !5566

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5549
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5567
  ret i32 %17, !dbg !5567
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !5568 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5570, metadata !DIExpression()), !dbg !5574
  %3 = bitcast i32* %2 to i8*, !dbg !5575
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5575
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5576
  br i1 %4, label %5, label %16, !dbg !5578

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5579
  %7 = load volatile i32, i32* %6, align 4, !dbg !5579
  %8 = icmp eq i32 %7, 2, !dbg !5581
  br i1 %8, label %9, label %16, !dbg !5582

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5583
  call void @llvm.dbg.value(metadata i32 %10, metadata !5571, metadata !DIExpression()), !dbg !5574
  call void @llvm.dbg.value(metadata i32* %2, metadata !5572, metadata !DIExpression(DW_OP_deref)), !dbg !5574
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !5584
  call void @llvm.dbg.value(metadata i32 %11, metadata !5573, metadata !DIExpression()), !dbg !5574
  %12 = icmp eq i32 %11, 0, !dbg !5585
  br i1 %12, label %14, label %13, !dbg !5587

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5588
  unreachable, !dbg !5588

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5590
  call void @llvm.dbg.value(metadata i32 %15, metadata !5572, metadata !DIExpression()), !dbg !5574
  br label %16, !dbg !5591

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5574
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5592
  ret i32 %17, !dbg !5592
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5593 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5595, metadata !DIExpression()), !dbg !5597
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5598
  br i1 %2, label %3, label %10, !dbg !5600

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5601
  %5 = load volatile i32, i32* %4, align 4, !dbg !5601
  %6 = icmp eq i32 %5, 0, !dbg !5603
  br i1 %6, label %10, label %7, !dbg !5604

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5605
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5605
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5596, metadata !DIExpression()), !dbg !5597
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5606
  br label %10, !dbg !5607

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5597
  ret i32 %11, !dbg !5608
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !5609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5613, metadata !DIExpression()), !dbg !5618
  call void @llvm.dbg.value(metadata i8 %1, metadata !5614, metadata !DIExpression()), !dbg !5618
  call void @llvm.dbg.value(metadata i8 %2, metadata !5615, metadata !DIExpression()), !dbg !5618
  call void @llvm.dbg.value(metadata i8 %3, metadata !5616, metadata !DIExpression()), !dbg !5618
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5619
  br i1 %5, label %6, label %13, !dbg !5621

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5622
  %8 = load volatile i32, i32* %7, align 4, !dbg !5622
  %9 = icmp eq i32 %8, 0, !dbg !5624
  br i1 %9, label %13, label %10, !dbg !5625

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5626
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !5626
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !5617, metadata !DIExpression()), !dbg !5618
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #20, !dbg !5627
  br label %13, !dbg !5628

13:                                               ; preds = %6, %4, %10
  %14 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !5618
  ret i32 %14, !dbg !5629
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5632, metadata !DIExpression()), !dbg !5634
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5635
  br i1 %2, label %3, label %10, !dbg !5637

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5638
  %5 = load volatile i32, i32* %4, align 4, !dbg !5638
  %6 = icmp eq i32 %5, 0, !dbg !5640
  br i1 %6, label %10, label %7, !dbg !5641

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5642
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5642
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5633, metadata !DIExpression()), !dbg !5634
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5643
  br label %10, !dbg !5644

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5634
  ret i32 %11, !dbg !5645
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5646 {
  %3 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5652, metadata !DIExpression()), !dbg !5664
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !5653, metadata !DIExpression()), !dbg !5664
  %4 = bitcast %struct.hal_cache_region_config_t* %3 to i8*, !dbg !5665
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5665
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %3, metadata !5655, metadata !DIExpression()), !dbg !5666
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5667
  br i1 %5, label %6, label %101, !dbg !5669

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !5670
  %8 = load i8*, i8** %7, align 4, !dbg !5670
  %9 = icmp eq i8* %8, null, !dbg !5672
  br i1 %9, label %101, label %10, !dbg !5673

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !5674
  %12 = load i8*, i8** %11, align 4, !dbg !5674
  %13 = icmp eq i8* %12, null, !dbg !5675
  br i1 %13, label %101, label %14, !dbg !5676

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !5677
  %16 = load i32, i32* %15, align 4, !dbg !5677
  %17 = icmp ugt i32 %16, 131071, !dbg !5679
  br i1 %17, label %101, label %18, !dbg !5680

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !5681
  %20 = load i32, i32* %19, align 4, !dbg !5681
  %21 = icmp ugt i32 %20, 131071, !dbg !5682
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !5683
  br i1 %23, label %101, label %24, !dbg !5683

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !5684
  %26 = load i32, i32* %25, align 4, !dbg !5684
  %27 = icmp ugt i32 %26, 131071, !dbg !5686
  br i1 %27, label %101, label %28, !dbg !5687

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !5688
  %30 = load i32, i32* %29, align 4, !dbg !5688
  %31 = icmp ugt i32 %30, 131071, !dbg !5689
  br i1 %31, label %101, label %32, !dbg !5690

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !5691
  %34 = load i32, i32* %33, align 4, !dbg !5691
  %35 = icmp ugt i32 %34, 131071, !dbg !5692
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !5693
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !5693
  br i1 %39, label %101, label %40, !dbg !5693

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5694
  %42 = load volatile i32, i32* %41, align 4, !dbg !5694
  %43 = icmp eq i32 %42, 1, !dbg !5696
  br i1 %43, label %44, label %101, !dbg !5697

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5698
  call void @llvm.dbg.value(metadata i32 %45, metadata !5661, metadata !DIExpression()), !dbg !5664
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5699
  call void @llvm.dbg.value(metadata i32 %46, metadata !5662, metadata !DIExpression()), !dbg !5664
  %47 = tail call i32 @vdma_init(i32 noundef %45) #20, !dbg !5700
  call void @llvm.dbg.value(metadata i32 %47, metadata !5663, metadata !DIExpression()), !dbg !5664
  %48 = icmp eq i32 %47, 0, !dbg !5701
  br i1 %48, label %50, label %49, !dbg !5703

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5704
  unreachable, !dbg !5704

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !5706
  %52 = ptrtoint i8* %51 to i32, !dbg !5707
  %53 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 0, !dbg !5708
  store i32 %52, i32* %53, align 4, !dbg !5709
  %54 = load i32, i32* %15, align 4, !dbg !5710
  %55 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 1, !dbg !5711
  store i32 %54, i32* %55, align 4, !dbg !5712
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !5713
  call void @llvm.dbg.value(metadata i32 %56, metadata !5663, metadata !DIExpression()), !dbg !5664
  %57 = icmp eq i32 %56, 0, !dbg !5714
  br i1 %57, label %59, label %58, !dbg !5716

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5717
  unreachable, !dbg !5717

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !5719
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #20, !dbg !5720
  call void @llvm.dbg.value(metadata i32 %61, metadata !5663, metadata !DIExpression()), !dbg !5664
  %62 = icmp eq i32 %61, 0, !dbg !5721
  br i1 %62, label %64, label %63, !dbg !5723

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5724
  unreachable, !dbg !5724

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #20, !dbg !5726
  call void @llvm.dbg.value(metadata i32 %65, metadata !5663, metadata !DIExpression()), !dbg !5664
  %66 = icmp eq i32 %65, 0, !dbg !5727
  br i1 %66, label %68, label %67, !dbg !5729

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5730
  unreachable, !dbg !5730

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !5732
  %70 = ptrtoint i8* %69 to i32, !dbg !5733
  store i32 %70, i32* %53, align 4, !dbg !5734
  %71 = load i32, i32* %25, align 4, !dbg !5735
  store i32 %71, i32* %55, align 4, !dbg !5736
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !5737
  call void @llvm.dbg.value(metadata i32 %72, metadata !5663, metadata !DIExpression()), !dbg !5664
  %73 = icmp eq i32 %72, 0, !dbg !5738
  br i1 %73, label %75, label %74, !dbg !5740

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5741
  unreachable, !dbg !5741

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !5743
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #20, !dbg !5744
  call void @llvm.dbg.value(metadata i32 %77, metadata !5663, metadata !DIExpression()), !dbg !5664
  %78 = icmp eq i32 %77, 0, !dbg !5745
  br i1 %78, label %80, label %79, !dbg !5747

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5748
  unreachable, !dbg !5748

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !5750
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #20, !dbg !5751
  call void @llvm.dbg.value(metadata i32 %82, metadata !5663, metadata !DIExpression()), !dbg !5664
  %83 = icmp eq i32 %82, 0, !dbg !5752
  br i1 %83, label %85, label %84, !dbg !5754

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5755
  unreachable, !dbg !5755

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #20, !dbg !5757
  call void @llvm.dbg.value(metadata i32 %86, metadata !5654, metadata !DIExpression()), !dbg !5664
  %87 = load i8*, i8** %7, align 4, !dbg !5758
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !5759
  store i8* %87, i8** %88, align 4, !dbg !5760
  %89 = load i32, i32* %15, align 4, !dbg !5761
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5762
  store i32 %89, i32* %90, align 4, !dbg !5763
  %91 = load i32, i32* %19, align 4, !dbg !5764
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !5765
  store i32 %91, i32* %92, align 4, !dbg !5766
  %93 = load i32, i32* %33, align 4, !dbg !5767
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !5768
  store i32 %93, i32* %94, align 4, !dbg !5769
  %95 = load i8*, i8** %11, align 4, !dbg !5770
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !5771
  store i8* %95, i8** %96, align 4, !dbg !5772
  %97 = load i32, i32* %25, align 4, !dbg !5773
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !5774
  store i32 %97, i32* %98, align 4, !dbg !5775
  %99 = load i32, i32* %29, align 4, !dbg !5776
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !5777
  store i32 %99, i32* %100, align 4, !dbg !5778
  call void @restore_interrupt_mask(i32 noundef %86) #20, !dbg !5779
  br label %101, !dbg !5780

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !5664
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5781
  ret i32 %102, !dbg !5781
}

; Function Attrs: optsize
declare dso_local i32 @vdma_init(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_configure(i32 noundef, %struct.hal_cache_region_config_t* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_threshold(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_alert_length(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5782 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5841, metadata !DIExpression()), !dbg !5856
  call void @llvm.dbg.value(metadata i32 %1, metadata !5842, metadata !DIExpression()), !dbg !5856
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !5851, metadata !DIExpression()), !dbg !5857
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !5858
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5858
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !5855, metadata !DIExpression()), !dbg !5859
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !5859
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !5859
  store i32 1, i32* %5, align 4, !dbg !5859
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !5859
  store i32 1, i32* %6, align 4, !dbg !5859
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !5859
  store i32 1, i32* %7, align 4, !dbg !5859
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !5859
  store i32 1, i32* %8, align 4, !dbg !5859
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !5859
  store i32 1, i32* %9, align 4, !dbg !5859
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !5860
  store volatile i32 0, i32* %10, align 4, !dbg !5861
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !5862
  store volatile i32 0, i32* %11, align 4, !dbg !5863
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !5864
  store volatile i32 0, i32* %12, align 4, !dbg !5865
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !5866
  br i1 %13, label %14, label %17, !dbg !5868

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !5869
  %16 = mul i32 %15, 1000, !dbg !5871
  call void @llvm.dbg.value(metadata i32 %16, metadata !5843, metadata !DIExpression()), !dbg !5856
  br label %17, !dbg !5872

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !5873
  call void @llvm.dbg.value(metadata i32 %18, metadata !5843, metadata !DIExpression()), !dbg !5856
  %19 = shl i32 %1, 8, !dbg !5874
  %20 = udiv i32 %18, %19, !dbg !5875
  call void @llvm.dbg.value(metadata i32 %20, metadata !5844, metadata !DIExpression()), !dbg !5856
  %21 = mul i32 %18, 10, !dbg !5876
  %22 = udiv i32 %21, %19, !dbg !5877
  %23 = urem i32 %22, 10, !dbg !5878
  call void @llvm.dbg.value(metadata i32 %23, metadata !5845, metadata !DIExpression()), !dbg !5856
  %24 = icmp ne i32 %23, 0, !dbg !5879
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !5881
  %27 = zext i1 %26 to i32, !dbg !5881
  %28 = add i32 %20, %27, !dbg !5881
  call void @llvm.dbg.value(metadata i32 %28, metadata !5844, metadata !DIExpression()), !dbg !5856
  call void @llvm.dbg.value(metadata i32 %28, metadata !5847, metadata !DIExpression()), !dbg !5856
  call void @llvm.dbg.value(metadata i32 undef, metadata !5848, metadata !DIExpression()), !dbg !5856
  br label %29, !dbg !5882

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !5856
  %31 = mul i32 %30, %1, !dbg !5856
  %32 = udiv i32 %18, %31, !dbg !5856
  call void @llvm.dbg.value(metadata i32 %32, metadata !5848, metadata !DIExpression()), !dbg !5856
  call void @llvm.dbg.value(metadata i32 %30, metadata !5847, metadata !DIExpression()), !dbg !5856
  %33 = icmp ugt i32 %32, 256, !dbg !5883
  %34 = add i32 %30, 1, !dbg !5884
  call void @llvm.dbg.value(metadata i32 %34, metadata !5847, metadata !DIExpression()), !dbg !5856
  call void @llvm.dbg.value(metadata i32 undef, metadata !5848, metadata !DIExpression()), !dbg !5856
  br i1 %33, label %29, label %35, !dbg !5882, !llvm.loop !5886

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !5888
  %37 = urem i32 %36, 10, !dbg !5889
  call void @llvm.dbg.value(metadata i32 %37, metadata !5846, metadata !DIExpression()), !dbg !5856
  %38 = add nsw i32 %32, -1, !dbg !5890
  call void @llvm.dbg.value(metadata i32 %38, metadata !5848, metadata !DIExpression()), !dbg !5856
  %39 = add nsw i32 %32, -2, !dbg !5891
  %40 = lshr i32 %39, 1, !dbg !5892
  call void @llvm.dbg.value(metadata i32 %40, metadata !5849, metadata !DIExpression()), !dbg !5856
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !5893
  store volatile i32 3, i32* %41, align 4, !dbg !5894
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5895
  %43 = load volatile i32, i32* %42, align 4, !dbg !5895
  call void @llvm.dbg.value(metadata i32 %43, metadata !5850, metadata !DIExpression()), !dbg !5856
  %44 = or i32 %43, 128, !dbg !5896
  store volatile i32 %44, i32* %42, align 4, !dbg !5897
  %45 = and i32 %30, 255, !dbg !5898
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5899
  store volatile i32 %45, i32* %46, align 4, !dbg !5900
  %47 = lshr i32 %30, 8, !dbg !5901
  %48 = and i32 %47, 255, !dbg !5902
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5903
  store volatile i32 %48, i32* %49, align 4, !dbg !5904
  store volatile i32 %43, i32* %42, align 4, !dbg !5905
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !5906
  store volatile i32 %38, i32* %50, align 4, !dbg !5907
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !5908
  store volatile i32 %40, i32* %51, align 4, !dbg !5909
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !5910
  %53 = load i32, i32* %52, align 4, !dbg !5910
  store volatile i32 %53, i32* %11, align 4, !dbg !5911
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !5912
  %55 = load i32, i32* %54, align 4, !dbg !5912
  store volatile i32 %55, i32* %12, align 4, !dbg !5913
  %56 = icmp ugt i32 %1, 2999999, !dbg !5914
  br i1 %56, label %57, label %59, !dbg !5916

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !5917
  store volatile i32 18, i32* %58, align 4, !dbg !5919
  br label %59, !dbg !5920

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5921
  ret void, !dbg !5921
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !5922 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5926, metadata !DIExpression()), !dbg !5931
  call void @llvm.dbg.value(metadata i32 %1, metadata !5927, metadata !DIExpression()), !dbg !5931
  call void @llvm.dbg.value(metadata i32 %2, metadata !5928, metadata !DIExpression()), !dbg !5931
  call void @llvm.dbg.value(metadata i32 %3, metadata !5929, metadata !DIExpression()), !dbg !5931
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5932
  %6 = load volatile i32, i32* %5, align 4, !dbg !5932
  call void @llvm.dbg.value(metadata i32 %6, metadata !5930, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5931
  store volatile i32 128, i32* %5, align 4, !dbg !5933
  %7 = trunc i32 %6 to i16, !dbg !5934
  %8 = and i16 %7, -4, !dbg !5934
  call void @llvm.dbg.value(metadata i16 %7, metadata !5930, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !5931
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !5935

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !5936
  call void @llvm.dbg.value(metadata i16 %10, metadata !5930, metadata !DIExpression()), !dbg !5931
  br label %15, !dbg !5938

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !5939
  call void @llvm.dbg.value(metadata i16 %12, metadata !5930, metadata !DIExpression()), !dbg !5931
  br label %15, !dbg !5940

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !5941
  call void @llvm.dbg.value(metadata i16 %14, metadata !5930, metadata !DIExpression()), !dbg !5931
  br label %15, !dbg !5942

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !5931
  call void @llvm.dbg.value(metadata i16 %16, metadata !5930, metadata !DIExpression()), !dbg !5931
  %17 = and i16 %16, -61, !dbg !5943
  call void @llvm.dbg.value(metadata i16 %16, metadata !5930, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !5931
  %18 = icmp eq i32 %2, 1, !dbg !5944
  %19 = select i1 %18, i16 4, i16 0, !dbg !5944
  %20 = or i16 %17, %19, !dbg !5944
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !5930, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !5931
  call void @llvm.dbg.value(metadata i16 %20, metadata !5930, metadata !DIExpression()), !dbg !5931
  %21 = icmp eq i32 %3, 2, !dbg !5945
  %22 = or i16 %20, 16, !dbg !5945
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !5945
  call void @llvm.dbg.value(metadata i16 %23, metadata !5930, metadata !DIExpression()), !dbg !5931
  %24 = zext i16 %23 to i32, !dbg !5946
  store volatile i32 %24, i32* %5, align 4, !dbg !5947
  ret void, !dbg !5948
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !5949 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5953, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.value(metadata i8 %1, metadata !5954, metadata !DIExpression()), !dbg !5956
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !5957

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !5958
  call void @llvm.dbg.value(metadata i32 %5, metadata !5955, metadata !DIExpression()), !dbg !5956
  %6 = and i32 %5, 32, !dbg !5960
  %7 = icmp eq i32 %6, 0, !dbg !5960
  br i1 %7, label %4, label %8, !dbg !5962, !llvm.loop !5963

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !5965
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5967
  store volatile i32 %9, i32* %10, align 4, !dbg !5968
  ret void, !dbg !5969
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5970 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5974, metadata !DIExpression()), !dbg !5977
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !5978

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !5979
  call void @llvm.dbg.value(metadata i32 %4, metadata !5975, metadata !DIExpression()), !dbg !5977
  %5 = and i32 %4, 1, !dbg !5981
  %6 = icmp eq i32 %5, 0, !dbg !5981
  br i1 %6, label %3, label %7, !dbg !5983, !llvm.loop !5984

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5986
  %9 = load volatile i32, i32* %8, align 4, !dbg !5986
  %10 = trunc i32 %9 to i8, !dbg !5988
  call void @llvm.dbg.value(metadata i8 %10, metadata !5976, metadata !DIExpression()), !dbg !5977
  ret i8 %10, !dbg !5989
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5990 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5994, metadata !DIExpression()), !dbg !5997
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5998
  %3 = load volatile i32, i32* %2, align 4, !dbg !5998
  call void @llvm.dbg.value(metadata i32 %3, metadata !5995, metadata !DIExpression()), !dbg !5997
  %4 = and i32 %3, 1, !dbg !5999
  %5 = icmp eq i32 %4, 0, !dbg !5999
  br i1 %5, label %9, label %6, !dbg !6001

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6002
  %8 = load volatile i32, i32* %7, align 4, !dbg !6002
  call void @llvm.dbg.value(metadata i32 %8, metadata !5996, metadata !DIExpression()), !dbg !5997
  br label %9, !dbg !6004

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !6005
  call void @llvm.dbg.value(metadata i32 %10, metadata !5996, metadata !DIExpression()), !dbg !5997
  ret i32 %10, !dbg !6006
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6007 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6011, metadata !DIExpression()), !dbg !6014
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6015
  %3 = load volatile i32, i32* %2, align 4, !dbg !6015
  call void @llvm.dbg.value(metadata i32 %3, metadata !6013, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6014
  store volatile i32 191, i32* %2, align 4, !dbg !6016
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6017
  %5 = load volatile i32, i32* %4, align 4, !dbg !6017
  call void @llvm.dbg.value(metadata i32 %5, metadata !6012, metadata !DIExpression()), !dbg !6014
  %6 = and i32 %5, 65343, !dbg !6018
  %7 = or i32 %6, 192, !dbg !6018
  call void @llvm.dbg.value(metadata i32 %5, metadata !6012, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !6014
  store volatile i32 %7, i32* %4, align 4, !dbg !6019
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6020
  store volatile i32 0, i32* %8, align 4, !dbg !6021
  store volatile i32 0, i32* %2, align 4, !dbg !6022
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !6023
  store volatile i32 2, i32* %9, align 4, !dbg !6024
  %10 = and i32 %3, 65535, !dbg !6025
  store volatile i32 %10, i32* %2, align 4, !dbg !6026
  ret void, !dbg !6027
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !6028 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6032, metadata !DIExpression()), !dbg !6038
  call void @llvm.dbg.value(metadata i8 %1, metadata !6033, metadata !DIExpression()), !dbg !6038
  call void @llvm.dbg.value(metadata i8 %2, metadata !6034, metadata !DIExpression()), !dbg !6038
  call void @llvm.dbg.value(metadata i8 %3, metadata !6035, metadata !DIExpression()), !dbg !6038
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6039
  %6 = load volatile i32, i32* %5, align 4, !dbg !6039
  call void @llvm.dbg.value(metadata i32 %6, metadata !6037, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6038
  store volatile i32 191, i32* %5, align 4, !dbg !6040
  %7 = zext i8 %1 to i32, !dbg !6041
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !6042
  store volatile i32 %7, i32* %8, align 4, !dbg !6043
  %9 = zext i8 %2 to i32, !dbg !6044
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !6045
  store volatile i32 %9, i32* %10, align 4, !dbg !6046
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6047
  %12 = load volatile i32, i32* %11, align 4, !dbg !6047
  call void @llvm.dbg.value(metadata i32 %12, metadata !6036, metadata !DIExpression()), !dbg !6038
  %13 = and i32 %12, 65509, !dbg !6048
  %14 = or i32 %13, 26, !dbg !6048
  call void @llvm.dbg.value(metadata i32 %12, metadata !6036, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !6038
  store volatile i32 %14, i32* %11, align 4, !dbg !6049
  %15 = zext i8 %3 to i32, !dbg !6050
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !6051
  store volatile i32 %15, i32* %16, align 4, !dbg !6052
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6053
  store volatile i32 1, i32* %17, align 4, !dbg !6054
  %18 = and i32 %6, 65535, !dbg !6055
  store volatile i32 %18, i32* %5, align 4, !dbg !6056
  ret void, !dbg !6057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6058 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6060, metadata !DIExpression()), !dbg !6062
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6063
  %3 = load volatile i32, i32* %2, align 4, !dbg !6063
  call void @llvm.dbg.value(metadata i32 %3, metadata !6061, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6062
  store volatile i32 191, i32* %2, align 4, !dbg !6064
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6065
  store volatile i32 0, i32* %4, align 4, !dbg !6066
  store volatile i32 0, i32* %2, align 4, !dbg !6067
  %5 = and i32 %3, 65535, !dbg !6068
  store volatile i32 %5, i32* %2, align 4, !dbg !6069
  ret void, !dbg !6070
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6071 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6073, metadata !DIExpression()), !dbg !6076
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6077
  %3 = load volatile i32, i32* %2, align 4, !dbg !6077
  call void @llvm.dbg.value(metadata i32 %3, metadata !6075, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6076
  store volatile i32 191, i32* %2, align 4, !dbg !6078
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6079
  %5 = load volatile i32, i32* %4, align 4, !dbg !6079
  call void @llvm.dbg.value(metadata i32 %5, metadata !6074, metadata !DIExpression()), !dbg !6076
  %6 = and i32 %5, 65519, !dbg !6080
  %7 = or i32 %6, 16, !dbg !6080
  call void @llvm.dbg.value(metadata i32 %5, metadata !6074, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !6076
  store volatile i32 %7, i32* %4, align 4, !dbg !6081
  store volatile i32 0, i32* %2, align 4, !dbg !6082
  store volatile i32 135, i32* %4, align 4, !dbg !6083
  %8 = and i32 %3, 65535, !dbg !6084
  store volatile i32 %8, i32* %2, align 4, !dbg !6085
  ret void, !dbg !6086
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6087 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6089, metadata !DIExpression()), !dbg !6092
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6093
  %3 = load volatile i32, i32* %2, align 4, !dbg !6093
  call void @llvm.dbg.value(metadata i32 %3, metadata !6091, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6092
  %4 = load volatile i32, i32* %2, align 4, !dbg !6094
  %5 = and i32 %4, -129, !dbg !6094
  store volatile i32 %5, i32* %2, align 4, !dbg !6094
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6095
  %7 = load volatile i32, i32* %6, align 4, !dbg !6095
  call void @llvm.dbg.value(metadata i32 %7, metadata !6090, metadata !DIExpression()), !dbg !6092
  %8 = and i32 %7, 65530, !dbg !6096
  %9 = or i32 %8, 5, !dbg !6096
  call void @llvm.dbg.value(metadata i32 %7, metadata !6090, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !6092
  store volatile i32 %9, i32* %6, align 4, !dbg !6097
  %10 = and i32 %3, 65535, !dbg !6098
  %11 = load volatile i32, i32* %2, align 4, !dbg !6099
  %12 = and i32 %10, %11, !dbg !6099
  store volatile i32 %12, i32* %2, align 4, !dbg !6099
  ret void, !dbg !6100
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6101 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6105, metadata !DIExpression()), !dbg !6108
  call void @llvm.dbg.value(metadata i32 %1, metadata !6106, metadata !DIExpression()), !dbg !6108
  call void @llvm.dbg.value(metadata i16 145, metadata !6107, metadata !DIExpression()), !dbg !6108
  %3 = icmp eq i32 %1, 0, !dbg !6109
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !6107, metadata !DIExpression()), !dbg !6108
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6111
  store volatile i32 %4, i32* %5, align 4, !dbg !6112
  ret void, !dbg !6113
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !6114 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6119, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.value(metadata i32 0, metadata !6122, metadata !DIExpression()), !dbg !6123
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6124
  %3 = load volatile i32, i32* %2, align 4, !dbg !6124
  call void @llvm.dbg.value(metadata i32 %3, metadata !6120, metadata !DIExpression()), !dbg !6123
  %4 = and i32 %3, 1, !dbg !6125
  %5 = icmp eq i32 %4, 0, !dbg !6125
  br i1 %5, label %6, label %16, !dbg !6127

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !6128
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !6129

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !6122, metadata !DIExpression()), !dbg !6123
  br label %16, !dbg !6130

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !6132
  %11 = load volatile i32, i32* %10, align 4, !dbg !6132
  call void @llvm.dbg.value(metadata i32 %11, metadata !6121, metadata !DIExpression()), !dbg !6123
  %12 = and i32 %11, 16, !dbg !6133
  %13 = icmp eq i32 %12, 0, !dbg !6133
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !6122, metadata !DIExpression()), !dbg !6123
  br label %16, !dbg !6135

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !6123
  ret i32 %17, !dbg !6136
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !6137 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6141, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i32 0, metadata !6143, metadata !DIExpression()), !dbg !6144
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !6145
  %3 = load volatile i32, i32* %2, align 4, !dbg !6145
  call void @llvm.dbg.value(metadata i32 %3, metadata !6142, metadata !DIExpression()), !dbg !6144
  %4 = and i32 %3, 14, !dbg !6146
  %5 = icmp eq i32 %4, 0, !dbg !6146
  %6 = sext i1 %5 to i32, !dbg !6148
  call void @llvm.dbg.value(metadata i32 %6, metadata !6143, metadata !DIExpression()), !dbg !6144
  ret i32 %6, !dbg !6149
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !6150 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6152, metadata !DIExpression()), !dbg !6154
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6155
  %3 = load volatile i32, i32* %2, align 4, !dbg !6155
  call void @llvm.dbg.value(metadata i32 %3, metadata !6153, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6154
  call void @llvm.dbg.value(metadata i32 %3, metadata !6153, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6154
  ret void, !dbg !6156
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6157 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6159, metadata !DIExpression()), !dbg !6160
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6161
  store volatile i32 191, i32* %2, align 4, !dbg !6162
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6163
  store volatile i32 16, i32* %3, align 4, !dbg !6164
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !6165
  store volatile i32 0, i32* %4, align 4, !dbg !6166
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !6167
  store volatile i32 0, i32* %5, align 4, !dbg !6168
  store volatile i32 128, i32* %2, align 4, !dbg !6169
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6170
  store volatile i32 0, i32* %6, align 4, !dbg !6171
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6172
  store volatile i32 0, i32* %7, align 4, !dbg !6173
  store volatile i32 0, i32* %2, align 4, !dbg !6174
  store volatile i32 0, i32* %7, align 4, !dbg !6175
  store volatile i32 0, i32* %3, align 4, !dbg !6176
  store volatile i32 191, i32* %2, align 4, !dbg !6177
  store volatile i32 0, i32* %3, align 4, !dbg !6178
  store volatile i32 0, i32* %2, align 4, !dbg !6179
  store volatile i32 0, i32* %4, align 4, !dbg !6180
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !6181
  store volatile i32 0, i32* %8, align 4, !dbg !6182
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !6183
  store volatile i32 0, i32* %9, align 4, !dbg !6184
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !6185
  store volatile i32 0, i32* %10, align 4, !dbg !6186
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !6187
  store volatile i32 0, i32* %11, align 4, !dbg !6188
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !6189
  store volatile i32 0, i32* %12, align 4, !dbg !6190
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !6191
  store volatile i32 0, i32* %13, align 4, !dbg !6192
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !6193
  store volatile i32 0, i32* %14, align 4, !dbg !6194
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !6195
  store volatile i32 0, i32* %15, align 4, !dbg !6196
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !6197
  store volatile i32 0, i32* %16, align 4, !dbg !6198
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6199
  store volatile i32 0, i32* %17, align 4, !dbg !6200
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !6201
  store volatile i32 0, i32* %18, align 4, !dbg !6202
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6203
  store volatile i32 0, i32* %19, align 4, !dbg !6204
  store volatile i32 0, i32* %13, align 4, !dbg !6205
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !6206
  store volatile i32 0, i32* %20, align 4, !dbg !6207
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !6208
  store volatile i32 0, i32* %21, align 4, !dbg !6209
  ret void, !dbg !6210
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6211 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6213, metadata !DIExpression()), !dbg !6214
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !6215

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !6216
  %5 = and i32 %4, 64, !dbg !6217
  %6 = icmp eq i32 %5, 0, !dbg !6218
  br i1 %6, label %3, label %7, !dbg !6215, !llvm.loop !6219

7:                                                ; preds = %3
  ret void, !dbg !6221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !6222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6226, metadata !DIExpression()), !dbg !6229
  call void @llvm.dbg.value(metadata i32 %1, metadata !6227, metadata !DIExpression()), !dbg !6229
  call void @llvm.dbg.value(metadata i32 15, metadata !6228, metadata !DIExpression()), !dbg !6229
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !6230

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !6231
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !6234
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !6236
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !6238
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !6229
  call void @llvm.dbg.value(metadata i32 %16, metadata !6228, metadata !DIExpression()), !dbg !6229
  ret i32 %16, !dbg !6240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #6 !dbg !6241 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6251, metadata !DIExpression()), !dbg !6253
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !6252, metadata !DIExpression()), !dbg !6253
  %3 = add i32 %0, -8, !dbg !6254
  %4 = icmp ult i32 %3, 8, !dbg !6254
  br i1 %4, label %5, label %12, !dbg !6254

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !6254
  %7 = load i8, i8* %6, align 1, !dbg !6254
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.2, i32 0, i32 %3, !dbg !6254
  %9 = load i32, i32* %8, align 4, !dbg !6254
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !6255
  store i8 %7, i8* %10, align 4, !dbg !6255
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !6255
  store i32 %9, i32* %11, align 4, !dbg !6255
  br label %12, !dbg !6257

12:                                               ; preds = %2, %5
  ret void, !dbg !6257
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6258 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6262, metadata !DIExpression()), !dbg !6263
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6264
  store volatile i32 3, i32* %2, align 4, !dbg !6265
  ret void, !dbg !6266
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !6267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6269, metadata !DIExpression()), !dbg !6273
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !6272, metadata !DIExpression()), !dbg !6273
  %2 = add i32 %0, -30, !dbg !6274
  %3 = icmp ult i32 %2, 3, !dbg !6274
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !6274
  call void @llvm.dbg.value(metadata i32 %5, metadata !6270, metadata !DIExpression()), !dbg !6273
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !6275
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !6275
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !6272, metadata !DIExpression()), !dbg !6273
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #20, !dbg !6276
  call void @llvm.dbg.value(metadata i32 %8, metadata !6271, metadata !DIExpression()), !dbg !6273
  switch i32 %8, label %12 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %13
    i32 0, label %13
    i32 3, label %11
  ], !dbg !6277

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #20, !dbg !6278
  br label %13, !dbg !6280

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #20, !dbg !6281
  br label %13, !dbg !6282

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #20, !dbg !6283
  br label %13, !dbg !6284

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.81, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.82, i32 0, i32 0)) #23, !dbg !6285
  unreachable, !dbg !6285

13:                                               ; preds = %11, %1, %1, %10, %9
  ret void, !dbg !6286
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #2 !dbg !922 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !6287
  br i1 %1, label %9, label %2, !dbg !6289

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !1014, metadata !DIExpression()), !dbg !6290
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !6291
  %5 = load i32, i32* %4, align 4, !dbg !6291
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #21, !dbg !6296
  %6 = add nuw nsw i32 %3, 1, !dbg !6297
  call void @llvm.dbg.value(metadata i32 %6, metadata !1014, metadata !DIExpression()), !dbg !6290
  %7 = icmp eq i32 %6, 64, !dbg !6298
  br i1 %7, label %8, label %2, !dbg !6299, !llvm.loop !6300

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !6302
  br label %9, !dbg !6303

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !6304
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !6305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6309, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i32 %1, metadata !6310, metadata !DIExpression()), !dbg !6311
  %3 = trunc i32 %1 to i8, !dbg !6312
  %4 = shl i8 %3, 2, !dbg !6312
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6315
  store volatile i8 %4, i8* %5, align 1, !dbg !6316
  ret void, !dbg !6317
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6322, metadata !DIExpression()), !dbg !6324
  call void @llvm.dbg.value(metadata i32 -1, metadata !6323, metadata !DIExpression()), !dbg !6324
  %2 = icmp ugt i32 %0, 63, !dbg !6325
  br i1 %2, label %4, label %3, !dbg !6325

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #21, !dbg !6327
  call void @llvm.dbg.value(metadata i32 0, metadata !6323, metadata !DIExpression()), !dbg !6324
  br label %4, !dbg !6329

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6324
  ret i32 %5, !dbg !6330
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6331 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6335, metadata !DIExpression()), !dbg !6336
  %2 = and i32 %0, 31, !dbg !6337
  %3 = shl nuw i32 1, %2, !dbg !6338
  %4 = lshr i32 %0, 5, !dbg !6339
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !6340
  store volatile i32 %3, i32* %5, align 4, !dbg !6341
  ret void, !dbg !6342
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6345, metadata !DIExpression()), !dbg !6347
  call void @llvm.dbg.value(metadata i32 -1, metadata !6346, metadata !DIExpression()), !dbg !6347
  %2 = icmp ugt i32 %0, 63, !dbg !6348
  br i1 %2, label %4, label %3, !dbg !6348

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #21, !dbg !6350
  call void @llvm.dbg.value(metadata i32 0, metadata !6346, metadata !DIExpression()), !dbg !6347
  br label %4, !dbg !6352

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6347
  ret i32 %5, !dbg !6353
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6356, metadata !DIExpression()), !dbg !6357
  %2 = and i32 %0, 31, !dbg !6358
  %3 = shl nuw i32 1, %2, !dbg !6359
  %4 = lshr i32 %0, 5, !dbg !6360
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !6361
  store volatile i32 %3, i32* %5, align 4, !dbg !6362
  ret void, !dbg !6363
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #11 !dbg !6364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6368, metadata !DIExpression()), !dbg !6370
  call void @llvm.dbg.value(metadata i32 255, metadata !6369, metadata !DIExpression()), !dbg !6370
  %2 = icmp ugt i32 %0, 63, !dbg !6371
  br i1 %2, label %5, label %3, !dbg !6371

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #21, !dbg !6373
  call void @llvm.dbg.value(metadata i32 %4, metadata !6369, metadata !DIExpression()), !dbg !6370
  br label %5, !dbg !6375

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !6370
  ret i32 %6, !dbg !6376
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #11 !dbg !6377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6381, metadata !DIExpression()), !dbg !6382
  %2 = lshr i32 %0, 5, !dbg !6383
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !6384
  %4 = load volatile i32, i32* %3, align 4, !dbg !6384
  %5 = and i32 %0, 31, !dbg !6385
  %6 = lshr i32 %4, %5, !dbg !6386
  %7 = and i32 %6, 1, !dbg !6386
  ret i32 %7, !dbg !6387
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6390, metadata !DIExpression()), !dbg !6392
  call void @llvm.dbg.value(metadata i32 -1, metadata !6391, metadata !DIExpression()), !dbg !6392
  %2 = icmp ugt i32 %0, 63, !dbg !6393
  br i1 %2, label %4, label %3, !dbg !6393

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #21, !dbg !6395
  call void @llvm.dbg.value(metadata i32 0, metadata !6391, metadata !DIExpression()), !dbg !6392
  br label %4, !dbg !6397

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6392
  ret i32 %5, !dbg !6398
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6401, metadata !DIExpression()), !dbg !6402
  %2 = and i32 %0, 31, !dbg !6403
  %3 = shl nuw i32 1, %2, !dbg !6404
  %4 = lshr i32 %0, 5, !dbg !6405
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !6406
  store volatile i32 %3, i32* %5, align 4, !dbg !6407
  ret void, !dbg !6408
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6409 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6411, metadata !DIExpression()), !dbg !6413
  call void @llvm.dbg.value(metadata i32 -1, metadata !6412, metadata !DIExpression()), !dbg !6413
  %2 = icmp ugt i32 %0, 63, !dbg !6414
  br i1 %2, label %4, label %3, !dbg !6414

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !6416
  call void @llvm.dbg.value(metadata i32 0, metadata !6412, metadata !DIExpression()), !dbg !6413
  br label %4, !dbg !6418

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6413
  ret i32 %5, !dbg !6419
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6420 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6422, metadata !DIExpression()), !dbg !6423
  %2 = and i32 %0, 31, !dbg !6424
  %3 = shl nuw i32 1, %2, !dbg !6425
  %4 = lshr i32 %0, 5, !dbg !6426
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !6427
  store volatile i32 %3, i32* %5, align 4, !dbg !6428
  ret void, !dbg !6429
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6434, metadata !DIExpression()), !dbg !6437
  call void @llvm.dbg.value(metadata i32 %1, metadata !6435, metadata !DIExpression()), !dbg !6437
  call void @llvm.dbg.value(metadata i32 -1, metadata !6436, metadata !DIExpression()), !dbg !6437
  %3 = icmp ugt i32 %0, 63, !dbg !6438
  br i1 %3, label %5, label %4, !dbg !6438

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #21, !dbg !6440
  call void @llvm.dbg.value(metadata i32 0, metadata !6436, metadata !DIExpression()), !dbg !6437
  br label %5, !dbg !6442

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !6437
  ret i32 %6, !dbg !6443
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #11 !dbg !6444 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6446, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata i32 68, metadata !6447, metadata !DIExpression()), !dbg !6448
  %2 = icmp ugt i32 %0, 63, !dbg !6449
  br i1 %2, label %5, label %3, !dbg !6449

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #21, !dbg !6451
  call void @llvm.dbg.value(metadata i32 %4, metadata !6447, metadata !DIExpression()), !dbg !6448
  br label %5, !dbg !6453

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !6448
  ret i32 %6, !dbg !6454
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #11 !dbg !6455 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6457, metadata !DIExpression()), !dbg !6458
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6459
  %3 = load volatile i8, i8* %2, align 1, !dbg !6459
  %4 = lshr i8 %3, 2, !dbg !6462
  %5 = zext i8 %4 to i32, !dbg !6462
  ret i32 %5, !dbg !6463
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !6464 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !6466, metadata !DIExpression()), !dbg !6468
  tail call void @Flash_ReturnReady() #20, !dbg !6469
  %1 = tail call fastcc i32 @get_current_irq() #21, !dbg !6470
  call void @llvm.dbg.value(metadata i32 %1, metadata !6467, metadata !DIExpression()), !dbg !6468
  %2 = icmp ugt i32 %1, 63, !dbg !6471
  br i1 %2, label %12, label %3, !dbg !6471

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !6473
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !6473
  %6 = icmp eq void (i32)* %5, null, !dbg !6475
  br i1 %6, label %7, label %8, !dbg !6476

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !6466, metadata !DIExpression()), !dbg !6468
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.87, i32 0, i32 0)) #20, !dbg !6477
  br label %12, !dbg !6479

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #21, !dbg !6480
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !6482
  store i32 %9, i32* %10, align 4, !dbg !6483
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !6484
  tail call void %11(i32 noundef %1) #20, !dbg !6485
  call void @llvm.dbg.value(metadata i32 0, metadata !6466, metadata !DIExpression()), !dbg !6468
  br label %12, !dbg !6486

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !6468
  ret i32 %13, !dbg !6487
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #11 !dbg !6488 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6491
  %2 = and i32 %1, 511, !dbg !6492
  call void @llvm.dbg.value(metadata i32 %2, metadata !6490, metadata !DIExpression()), !dbg !6493
  %3 = add nsw i32 %2, -16, !dbg !6494
  ret i32 %3, !dbg !6495
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #11 !dbg !6496 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6497
  %2 = lshr i32 %1, 22, !dbg !6498
  %3 = and i32 %2, 1, !dbg !6498
  ret i32 %3, !dbg !6499
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !6500 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6505, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !6506, metadata !DIExpression()), !dbg !6508
  %3 = icmp ugt i32 %0, 63, !dbg !6509
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !6509
  br i1 %5, label %10, label %6, !dbg !6509

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6511
  call void @llvm.dbg.value(metadata i32 %7, metadata !6507, metadata !DIExpression()), !dbg !6508
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !6512
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !6513
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !6514
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !6515
  store i32 0, i32* %9, align 4, !dbg !6516
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !6517
  br label %10, !dbg !6518

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !6508
  ret i32 %11, !dbg !6519
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !6520 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !6524, metadata !DIExpression()), !dbg !6525
  %2 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6526
  store i32 %2, i32* %0, align 4, !dbg !6527
  ret i32 0, !dbg !6528
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !6529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6533, metadata !DIExpression()), !dbg !6534
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !6535
  ret i32 0, !dbg !6536
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !6537 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #22, !dbg !6541, !srcloc !6547
  call void @llvm.dbg.value(metadata i32 %1, metadata !6545, metadata !DIExpression()) #22, !dbg !6548
  call void @llvm.dbg.value(metadata i32 %1, metadata !6539, metadata !DIExpression()), !dbg !6549
  call void @llvm.dbg.value(metadata i32 1, metadata !6540, metadata !DIExpression()), !dbg !6549
  call void @llvm.dbg.value(metadata i32 4, metadata !6550, metadata !DIExpression()) #22, !dbg !6555
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #22, !dbg !6557, !srcloc !6558
  tail call void asm sideeffect "dmb", ""() #22, !dbg !6559, !srcloc !6562
  tail call void asm sideeffect "isb", ""() #22, !dbg !6563, !srcloc !6566
  ret i32 %1, !dbg !6567
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !6568 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6570, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.value(metadata i32 %0, metadata !6550, metadata !DIExpression()) #22, !dbg !6572
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #22, !dbg !6574, !srcloc !6558
  tail call void asm sideeffect "dmb", ""() #22, !dbg !6575, !srcloc !6562
  tail call void asm sideeffect "isb", ""() #22, !dbg !6577, !srcloc !6566
  ret void, !dbg !6579
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !6580 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6584
  call void @llvm.dbg.value(metadata i32 %1, metadata !6583, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata i32 0, metadata !6582, metadata !DIExpression()), !dbg !6585
  br label %2, !dbg !6586

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6582, metadata !DIExpression()), !dbg !6585
  tail call fastcc void @NVIC_DisableIRQ.94(i32 noundef %3) #21, !dbg !6588
  %4 = add nuw nsw i32 %3, 1, !dbg !6591
  call void @llvm.dbg.value(metadata i32 %4, metadata !6582, metadata !DIExpression()), !dbg !6585
  %5 = icmp eq i32 %4, 64, !dbg !6592
  br i1 %5, label %6, label %2, !dbg !6586, !llvm.loop !6593

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !6595
  ret void, !dbg !6596
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.94(i32 noundef %0) unnamed_addr #2 !dbg !6597 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6599, metadata !DIExpression()), !dbg !6600
  %2 = and i32 %0, 31, !dbg !6601
  %3 = shl nuw i32 1, %2, !dbg !6602
  %4 = lshr i32 %0, 5, !dbg !6603
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !6604
  store volatile i32 %3, i32* %5, align 4, !dbg !6605
  ret void, !dbg !6606
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !6607 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6611
  call void @llvm.dbg.value(metadata i32 %1, metadata !6610, metadata !DIExpression()), !dbg !6612
  call void @llvm.dbg.value(metadata i32 0, metadata !6609, metadata !DIExpression()), !dbg !6612
  br label %2, !dbg !6613

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6609, metadata !DIExpression()), !dbg !6612
  tail call fastcc void @NVIC_EnableIRQ.95(i32 noundef %3) #21, !dbg !6615
  %4 = add nuw nsw i32 %3, 1, !dbg !6618
  call void @llvm.dbg.value(metadata i32 %4, metadata !6609, metadata !DIExpression()), !dbg !6612
  %5 = icmp eq i32 %4, 64, !dbg !6619
  br i1 %5, label %6, label %2, !dbg !6613, !llvm.loop !6620

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !6622
  ret void, !dbg !6623
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.95(i32 noundef %0) unnamed_addr #2 !dbg !6624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6626, metadata !DIExpression()), !dbg !6627
  %2 = and i32 %0, 31, !dbg !6628
  %3 = shl nuw i32 1, %2, !dbg !6629
  %4 = lshr i32 %0, 5, !dbg !6630
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !6631
  store volatile i32 %3, i32* %5, align 4, !dbg !6632
  ret void, !dbg !6633
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #2 !dbg !6634 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6636, metadata !DIExpression()), !dbg !6637
  br label %1, !dbg !6638

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6636, metadata !DIExpression()), !dbg !6637
  tail call fastcc void @NVIC_ClearPendingIRQ.96(i32 noundef %2) #21, !dbg !6640
  %3 = add nuw nsw i32 %2, 1, !dbg !6643
  call void @llvm.dbg.value(metadata i32 %3, metadata !6636, metadata !DIExpression()), !dbg !6637
  %4 = icmp eq i32 %3, 64, !dbg !6644
  br i1 %4, label %5, label %1, !dbg !6638, !llvm.loop !6645

5:                                                ; preds = %1
  ret void, !dbg !6647
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.96(i32 noundef %0) unnamed_addr #2 !dbg !6648 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6650, metadata !DIExpression()), !dbg !6651
  %2 = and i32 %0, 31, !dbg !6652
  %3 = shl nuw i32 1, %2, !dbg !6653
  %4 = lshr i32 %0, 5, !dbg !6654
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !6655
  store volatile i32 %3, i32* %5, align 4, !dbg !6656
  ret void, !dbg !6657
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !6658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6660, metadata !DIExpression()), !dbg !6661
  %2 = icmp ugt i32 %0, 63, !dbg !6662
  br i1 %2, label %4, label %3, !dbg !6662

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #21, !dbg !6664
  br label %4, !dbg !6665

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !6661
  ret i32 %5, !dbg !6666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !6667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6669, metadata !DIExpression()), !dbg !6670
  %2 = and i32 %0, 511, !dbg !6671
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !6672
  tail call void asm sideeffect "dsb", ""() #22, !dbg !6673, !srcloc !6676
  ret void, !dbg !6677
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #11 !dbg !6678 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6679
  %2 = and i32 %1, 511, !dbg !6680
  ret i32 %2, !dbg !6681
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !6682 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6686, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i32 %1, metadata !6687, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i8* %0, metadata !6688, metadata !DIExpression()), !dbg !6785
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #20, !dbg !6786
  call void @llvm.dbg.value(metadata i32 %3, metadata !6783, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !6785
  call void @llvm.dbg.value(metadata i32 0, metadata !6782, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i32* undef, metadata !6784, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i32 0, metadata !6782, metadata !DIExpression()), !dbg !6785
  %4 = icmp ult i32 %3, 4, !dbg !6787
  br i1 %4, label %20, label %5, !dbg !6790

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !6791
  %7 = bitcast i8* %6 to i32**, !dbg !6791
  %8 = load i32*, i32** %7, align 4, !dbg !6791
  call void @llvm.dbg.value(metadata i32* %8, metadata !6784, metadata !DIExpression()), !dbg !6785
  %9 = lshr i32 %3, 2, !dbg !6792
  call void @llvm.dbg.value(metadata i32 %9, metadata !6783, metadata !DIExpression()), !dbg !6785
  br label %10, !dbg !6790

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !6784, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i32 %12, metadata !6782, metadata !DIExpression()), !dbg !6785
  %13 = load i32, i32* %11, align 4, !dbg !6793
  %14 = icmp eq i32 %13, -1, !dbg !6796
  br i1 %14, label %16, label %15, !dbg !6797

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #20, !dbg !6798
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.97, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.98, i32 0, i32 0)) #23, !dbg !6798
  unreachable, !dbg !6798

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !6803
  call void @llvm.dbg.value(metadata i32 %17, metadata !6782, metadata !DIExpression()), !dbg !6785
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !6804
  call void @llvm.dbg.value(metadata i32* %18, metadata !6784, metadata !DIExpression()), !dbg !6785
  %19 = icmp eq i32 %17, %9, !dbg !6787
  br i1 %19, label %20, label %10, !dbg !6790, !llvm.loop !6805

20:                                               ; preds = %16, %2
  ret void, !dbg !6807
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #16 section ".ram_code" !dbg !6808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6810, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i32 0, metadata !6811, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i32 %0, metadata !6811, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !6812
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !6811, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6812
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !6811, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6812
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !6813
  call void @llvm.dbg.value(metadata i32 %2, metadata !6811, metadata !DIExpression()), !dbg !6812
  ret i32 %2, !dbg !6814
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !6815 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6820, metadata !DIExpression()), !dbg !6822
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6823
  %3 = or i32 %2, 512, !dbg !6823
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6823
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6826
  call void @llvm.dbg.value(metadata i32 %4, metadata !6821, metadata !DIExpression()), !dbg !6822
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !6827

5:                                                ; preds = %1
  br label %7, !dbg !6828

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !6832
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.97, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.98, i32 0, i32 0)) #23, !dbg !6832
  unreachable, !dbg !6832

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !6837
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !6821, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6822
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !6821, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6822
  br label %10, !dbg !6838

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6839
  %12 = and i32 %11, 8192, !dbg !6840
  %13 = icmp eq i32 %12, 0, !dbg !6841
  br i1 %13, label %10, label %14, !dbg !6838, !llvm.loop !6842

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6844
  %16 = and i32 %15, 256, !dbg !6845
  %17 = icmp eq i32 %16, 0, !dbg !6846
  br i1 %17, label %14, label %18, !dbg !6847, !llvm.loop !6848

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !6837
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !6821, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6822
  %20 = and i32 %19, 16, !dbg !6837
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !6821, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6822
  call void @llvm.dbg.value(metadata i32 undef, metadata !6821, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6822
  %21 = or i32 %4, %20, !dbg !6850
  %22 = or i32 %21, 8, !dbg !6850
  call void @llvm.dbg.value(metadata i32 %22, metadata !6821, metadata !DIExpression()), !dbg !6822
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6851
  ret void, !dbg !6852
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !6853 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !6855, metadata !DIExpression()), !dbg !6857
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6858
  call void @llvm.dbg.value(metadata i32 %2, metadata !6856, metadata !DIExpression()), !dbg !6857
  %3 = and i32 %2, -268435477, !dbg !6859
  call void @llvm.dbg.value(metadata i32 %3, metadata !6856, metadata !DIExpression()), !dbg !6857
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6860
  br label %4, !dbg !6861

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6862
  %6 = and i32 %5, 2, !dbg !6863
  %7 = icmp eq i32 %6, 0, !dbg !6861
  br i1 %7, label %8, label %4, !dbg !6861, !llvm.loop !6864

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6866
  call void @llvm.dbg.value(metadata i32 %9, metadata !6856, metadata !DIExpression()), !dbg !6857
  %10 = and i32 %9, -9, !dbg !6867
  call void @llvm.dbg.value(metadata i32 %10, metadata !6856, metadata !DIExpression()), !dbg !6857
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6868
  br label %11, !dbg !6869

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6870
  %13 = and i32 %12, 8, !dbg !6871
  %14 = icmp eq i32 %13, 0, !dbg !6869
  br i1 %14, label %15, label %11, !dbg !6869, !llvm.loop !6872

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !6874, !range !2648
  %17 = icmp eq i8 %16, 0, !dbg !6876
  br i1 %17, label %18, label %21, !dbg !6877

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6878
  %20 = and i32 %19, -513, !dbg !6878
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6878
  br label %21, !dbg !6882

21:                                               ; preds = %18, %15
  ret void, !dbg !6883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !6884 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6888, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.value(metadata i32 0, metadata !6889, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.value(metadata i32 0, metadata !6890, metadata !DIExpression()), !dbg !6891
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6892
  call void @llvm.dbg.value(metadata i32 %2, metadata !6889, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.value(metadata i32 %2, metadata !6889, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !6891
  %3 = icmp eq i16 %0, 1, !dbg !6893
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !6895
  %5 = or i32 %2, %4, !dbg !6895
  call void @llvm.dbg.value(metadata i32 %5, metadata !6889, metadata !DIExpression()), !dbg !6891
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6896
  br label %6, !dbg !6897

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6898
  %8 = and i32 %7, 2, !dbg !6899
  %9 = icmp eq i32 %8, 0, !dbg !6900
  br i1 %9, label %6, label %10, !dbg !6897, !llvm.loop !6901

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6903
  %12 = and i32 %11, 1, !dbg !6904
  %13 = icmp eq i32 %12, 0, !dbg !6905
  br i1 %13, label %14, label %10, !dbg !6905, !llvm.loop !6906

14:                                               ; preds = %10
  ret i32 0, !dbg !6908
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !6909 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6911, metadata !DIExpression()), !dbg !6912
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #21, !dbg !6913
  tail call void @SFI_MacLeave(i16 zeroext undef) #21, !dbg !6914
  ret void, !dbg !6915
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !6916 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6920, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.value(metadata i32 %1, metadata !6921, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.value(metadata i32 %1, metadata !6922, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.value(metadata i8 0, metadata !6924, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.value(metadata i32 0, metadata !6923, metadata !DIExpression()), !dbg !6925
  %3 = icmp eq i32 %1, 0, !dbg !6926
  br i1 %3, label %16, label %4, !dbg !6929

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !6924, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.value(metadata i32 %6, metadata !6923, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.value(metadata i32 %7, metadata !6922, metadata !DIExpression()), !dbg !6925
  %8 = shl i32 %6, 8, !dbg !6930
  %9 = and i32 %7, 255, !dbg !6932
  %10 = or i32 %8, %9, !dbg !6933
  call void @llvm.dbg.value(metadata i32 %10, metadata !6923, metadata !DIExpression()), !dbg !6925
  %11 = lshr i32 %7, 8, !dbg !6934
  call void @llvm.dbg.value(metadata i32 %11, metadata !6922, metadata !DIExpression()), !dbg !6925
  %12 = add nuw nsw i8 %5, 1, !dbg !6935
  call void @llvm.dbg.value(metadata i8 %12, metadata !6924, metadata !DIExpression()), !dbg !6925
  %13 = icmp ult i32 %7, 256, !dbg !6926
  br i1 %13, label %14, label %4, !dbg !6929, !llvm.loop !6936

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !6938
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !6940
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6941
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6942
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6943
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !6944
  br label %16, !dbg !6945

16:                                               ; preds = %2, %14
  ret void, !dbg !6946
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !6947 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6951, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.value(metadata i8 %1, metadata !6952, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.value(metadata i32 %2, metadata !6953, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.value(metadata i32 %3, metadata !6954, metadata !DIExpression()), !dbg !6957
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #21, !dbg !6958
  call void @llvm.dbg.value(metadata i32 %5, metadata !6956, metadata !DIExpression()), !dbg !6957
  %6 = icmp eq i32 %3, 3, !dbg !6959
  br i1 %6, label %7, label %11, !dbg !6961

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !6962
  %9 = zext i8 %1 to i32, !dbg !6964
  %10 = or i32 %8, %9, !dbg !6965
  call void @llvm.dbg.value(metadata i32 %10, metadata !6955, metadata !DIExpression()), !dbg !6957
  br label %16, !dbg !6966

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !6967
  %13 = zext i8 %1 to i32, !dbg !6969
  %14 = or i32 %12, %13, !dbg !6970
  call void @llvm.dbg.value(metadata i32 %14, metadata !6955, metadata !DIExpression()), !dbg !6957
  %15 = lshr i32 %5, 24, !dbg !6971
  call void @llvm.dbg.value(metadata i32 %15, metadata !6956, metadata !DIExpression()), !dbg !6957
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !6972
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !6957
  call void @llvm.dbg.value(metadata i32 %18, metadata !6956, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.value(metadata i32 %17, metadata !6955, metadata !DIExpression()), !dbg !6957
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6973
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !6974
  %19 = add i32 %3, 1, !dbg !6975
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6976
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6977
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !6978
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !6979
  ret void, !dbg !6980
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 section ".ram_code" !dbg !6981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6985, metadata !DIExpression()), !dbg !6987
  call void @llvm.dbg.value(metadata i32 %1, metadata !6986, metadata !DIExpression()), !dbg !6987
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !6988
  %4 = and i32 %3, -256, !dbg !6989
  %5 = and i32 %0, 255, !dbg !6990
  %6 = or i32 %4, %5, !dbg !6991
  ret i32 %6, !dbg !6992
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #9 section ".ram_code" !dbg !6993 {
  %5 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6998, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.value(metadata i32 %1, metadata !6999, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.value(metadata i8** %2, metadata !7000, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.value(metadata i32* %3, metadata !7001, metadata !DIExpression()), !dbg !7013
  %6 = bitcast %struct.anon* %5 to i8*, !dbg !7014
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !7014
  call void @llvm.dbg.declare(metadata %struct.anon* %5, metadata !7002, metadata !DIExpression()), !dbg !7015
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !7016
  call void @llvm.dbg.value(metadata i32 %7, metadata !7011, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !7010, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !7013
  %8 = lshr i32 %7, 24, !dbg !7017
  call void @llvm.dbg.value(metadata i32 %8, metadata !7011, metadata !DIExpression()), !dbg !7013
  %9 = trunc i32 %8 to i8, !dbg !7018
  %10 = bitcast %struct.anon* %5 to [4 x i8]*, !dbg !7019
  store i8 %9, i8* %6, align 4, !dbg !7020
  call void @llvm.dbg.value(metadata i32 1, metadata !7012, metadata !DIExpression()), !dbg !7013
  %11 = load i8*, i8** %2, align 4, !dbg !7021
  br label %12, !dbg !7025

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !7021
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !7012, metadata !DIExpression()), !dbg !7013
  %15 = load i8, i8* %13, align 1, !dbg !7026
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !7027
  store i8 %15, i8* %16, align 1, !dbg !7028
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7029
  store i8* %17, i8** %2, align 4, !dbg !7029
  %18 = add nuw nsw i32 %14, 1, !dbg !7030
  call void @llvm.dbg.value(metadata i32 %18, metadata !7012, metadata !DIExpression()), !dbg !7013
  %19 = icmp eq i32 %18, 4, !dbg !7031
  br i1 %19, label %20, label %12, !dbg !7025, !llvm.loop !7032

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %5, i32 0, i32 0, !dbg !7034
  %22 = load i32, i32* %21, align 4, !dbg !7034
  call void @llvm.dbg.value(metadata i32 %22, metadata !7011, metadata !DIExpression()), !dbg !7013
  %23 = load i32, i32* %3, align 4, !dbg !7035
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !7036
  %25 = shl i32 %7, 8, !dbg !7037
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !7010, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !7013
  %26 = and i32 %0, 255, !dbg !7038
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !7010, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7013
  %27 = or i32 %25, %26, !dbg !7039
  call void @llvm.dbg.value(metadata i32 %27, metadata !7010, metadata !DIExpression()), !dbg !7013
  store i32 %24, i32* %3, align 4, !dbg !7040
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !7041
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !7042
  ret i32 %27, !dbg !7043
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #9 section ".ram_code" !dbg !7044 {
  %4 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7048, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i8* %1, metadata !7049, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 %2, metadata !7050, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i8* %1, metadata !7052, metadata !DIExpression()), !dbg !7054
  %5 = bitcast %struct.anon* %4 to i8*, !dbg !7055
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !7055
  call void @llvm.dbg.declare(metadata %struct.anon* %4, metadata !7053, metadata !DIExpression()), !dbg !7056
  %6 = add i32 %0, -1610348544, !dbg !7057
  call void @llvm.dbg.value(metadata i32 %6, metadata !7048, metadata !DIExpression()), !dbg !7054
  %7 = ptrtoint i8* %1 to i32, !dbg !7058
  %8 = and i32 %7, 3, !dbg !7060
  %9 = icmp eq i32 %8, 0, !dbg !7061
  br i1 %9, label %10, label %23, !dbg !7062

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7052, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 %2, metadata !7050, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 %6, metadata !7048, metadata !DIExpression()), !dbg !7054
  %11 = icmp sgt i32 %2, 0, !dbg !7063
  br i1 %11, label %12, label %72, !dbg !7067

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7052, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 %14, metadata !7050, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 %15, metadata !7048, metadata !DIExpression()), !dbg !7054
  %16 = bitcast i8* %13 to i32*, !dbg !7068
  %17 = load i32, i32* %16, align 4, !dbg !7068
  %18 = inttoptr i32 %15 to i32*, !dbg !7068
  store volatile i32 %17, i32* %18, align 4, !dbg !7068
  %19 = add i32 %15, 4, !dbg !7070
  call void @llvm.dbg.value(metadata i32 %19, metadata !7048, metadata !DIExpression()), !dbg !7054
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !7071
  call void @llvm.dbg.value(metadata i8* %20, metadata !7052, metadata !DIExpression()), !dbg !7054
  %21 = add nsw i32 %14, -4, !dbg !7072
  call void @llvm.dbg.value(metadata i32 %21, metadata !7050, metadata !DIExpression()), !dbg !7054
  %22 = icmp ugt i32 %14, 4, !dbg !7063
  br i1 %22, label %12, label %72, !dbg !7067, !llvm.loop !7073

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !7075
  %25 = icmp eq i32 %24, 0, !dbg !7077
  call void @llvm.dbg.value(metadata i8* %1, metadata !7052, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i8* %1, metadata !7052, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 %2, metadata !7050, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 %2, metadata !7050, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 %6, metadata !7048, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 %6, metadata !7048, metadata !DIExpression()), !dbg !7054
  %26 = icmp sgt i32 %2, 0, !dbg !7078
  br i1 %25, label %31, label %27, !dbg !7079

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !7080

28:                                               ; preds = %27
  %29 = bitcast %struct.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %52, !dbg !7080

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !7083

32:                                               ; preds = %31
  %33 = bitcast %struct.anon* %4 to [2 x i16]*
  %34 = bitcast %struct.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %37, !dbg !7083

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !7052, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 %39, metadata !7050, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 %40, metadata !7048, metadata !DIExpression()), !dbg !7054
  %41 = bitcast i8* %38 to i16*, !dbg !7086
  %42 = load i16, i16* %41, align 2, !dbg !7086
  store i16 %42, i16* %34, align 4, !dbg !7089
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !7090
  %44 = bitcast i8* %43 to i16*, !dbg !7090
  %45 = load i16, i16* %44, align 2, !dbg !7091
  store i16 %45, i16* %35, align 2, !dbg !7092
  %46 = load i32, i32* %36, align 4, !dbg !7093
  %47 = inttoptr i32 %40 to i32*, !dbg !7093
  store volatile i32 %46, i32* %47, align 4, !dbg !7093
  %48 = add i32 %40, 4, !dbg !7094
  call void @llvm.dbg.value(metadata i32 %48, metadata !7048, metadata !DIExpression()), !dbg !7054
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !7095
  call void @llvm.dbg.value(metadata i8* %49, metadata !7052, metadata !DIExpression()), !dbg !7054
  %50 = add nsw i32 %39, -4, !dbg !7096
  call void @llvm.dbg.value(metadata i32 %50, metadata !7050, metadata !DIExpression()), !dbg !7054
  %51 = icmp ugt i32 %39, 4, !dbg !7097
  br i1 %51, label %37, label %72, !dbg !7083, !llvm.loop !7098

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !7052, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 %54, metadata !7050, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 %55, metadata !7048, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i8* %53, metadata !7052, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 0, metadata !7051, metadata !DIExpression()), !dbg !7054
  br label %56, !dbg !7100

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !7052, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 %58, metadata !7051, metadata !DIExpression()), !dbg !7054
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !7104
  call void @llvm.dbg.value(metadata i8* %59, metadata !7052, metadata !DIExpression()), !dbg !7054
  %60 = load i8, i8* %57, align 1, !dbg !7107
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !7108
  store i8 %60, i8* %61, align 1, !dbg !7109
  %62 = add nuw nsw i32 %58, 1, !dbg !7110
  call void @llvm.dbg.value(metadata i32 %62, metadata !7051, metadata !DIExpression()), !dbg !7054
  %63 = icmp ult i32 %58, 3, !dbg !7111
  %64 = icmp ult i32 %62, %54, !dbg !7112
  %65 = select i1 %63, i1 %64, i1 false, !dbg !7112
  br i1 %65, label %56, label %66, !dbg !7100, !llvm.loop !7113

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !7115
  %68 = inttoptr i32 %55 to i32*, !dbg !7115
  store volatile i32 %67, i32* %68, align 4, !dbg !7115
  %69 = add i32 %55, 4, !dbg !7116
  call void @llvm.dbg.value(metadata i32 %69, metadata !7048, metadata !DIExpression()), !dbg !7054
  %70 = add nsw i32 %54, -4, !dbg !7117
  call void @llvm.dbg.value(metadata i8* %59, metadata !7052, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.value(metadata i32 %70, metadata !7050, metadata !DIExpression()), !dbg !7054
  %71 = icmp sgt i32 %54, 4, !dbg !7118
  br i1 %71, label %52, label %72, !dbg !7080, !llvm.loop !7119

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !7121
  ret void, !dbg !7121
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !7122 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !7126, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i8* %1, metadata !7127, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i8* %2, metadata !7128, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i16 %3, metadata !7129, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i16 %4, metadata !7130, metadata !DIExpression()), !dbg !7136
  %7 = bitcast i32* %6 to i8*, !dbg !7137
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7137
  call void @llvm.dbg.value(metadata i8* %7, metadata !7135, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i32 0, metadata !7132, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !7134, metadata !DIExpression()), !dbg !7136
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !7134, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i32 0, metadata !7132, metadata !DIExpression()), !dbg !7136
  %9 = icmp eq i16 %3, 0, !dbg !7138
  br i1 %9, label %33, label %10, !dbg !7141

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !7134, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i32 %12, metadata !7132, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i32 0, metadata !7133, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i32 0, metadata !7131, metadata !DIExpression()), !dbg !7136
  store i32 0, i32* %6, align 4, !dbg !7142
  call void @llvm.dbg.value(metadata i32 0, metadata !7133, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i32 %12, metadata !7132, metadata !DIExpression()), !dbg !7136
  %13 = icmp ult i32 %12, %8, !dbg !7145
  br i1 %13, label %14, label %27, !dbg !7147

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7133, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i32 %16, metadata !7132, metadata !DIExpression()), !dbg !7136
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !7148
  %18 = load i8, i8* %17, align 1, !dbg !7148
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !7150
  store i8 %18, i8* %19, align 1, !dbg !7151
  %20 = add nuw nsw i32 %16, 1, !dbg !7152
  call void @llvm.dbg.value(metadata i32 %20, metadata !7132, metadata !DIExpression()), !dbg !7136
  %21 = add nuw nsw i32 %15, 1, !dbg !7153
  call void @llvm.dbg.value(metadata i32 %21, metadata !7133, metadata !DIExpression()), !dbg !7136
  %22 = icmp ult i32 %20, %8, !dbg !7145
  %23 = icmp ult i32 %15, 3, !dbg !7154
  %24 = select i1 %22, i1 %23, i1 false, !dbg !7154
  br i1 %24, label %14, label %25, !dbg !7147, !llvm.loop !7155

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !7157
  br label %27, !dbg !7157

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !7157
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !7158
  call void @llvm.dbg.value(metadata i32 %28, metadata !7131, metadata !DIExpression()), !dbg !7136
  %30 = bitcast i8* %11 to i32*, !dbg !7157
  store volatile i32 %28, i32* %30, align 4, !dbg !7157
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !7159
  call void @llvm.dbg.value(metadata i8* %31, metadata !7134, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i32 %29, metadata !7132, metadata !DIExpression()), !dbg !7136
  %32 = icmp ult i32 %29, %8, !dbg !7138
  br i1 %32, label %10, label %33, !dbg !7141, !llvm.loop !7160

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7162
  %34 = zext i16 %4 to i32, !dbg !7163
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7164
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !7165
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !7166
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !7134, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !7136
  call void @llvm.dbg.value(metadata i8* %2, metadata !7128, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i32 0, metadata !7132, metadata !DIExpression()), !dbg !7136
  %35 = icmp eq i16 %4, 0, !dbg !7167
  br i1 %35, label %47, label %36, !dbg !7170

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !7171
  call void @llvm.dbg.value(metadata i8* %37, metadata !7134, metadata !DIExpression()), !dbg !7136
  br label %38, !dbg !7170

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !7128, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i8* %40, metadata !7134, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.value(metadata i32 %41, metadata !7132, metadata !DIExpression()), !dbg !7136
  %42 = load volatile i8, i8* %40, align 1, !dbg !7172
  store i8 %42, i8* %39, align 1, !dbg !7174
  %43 = add nuw nsw i32 %41, 1, !dbg !7175
  call void @llvm.dbg.value(metadata i32 %43, metadata !7132, metadata !DIExpression()), !dbg !7136
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !7176
  call void @llvm.dbg.value(metadata i8* %44, metadata !7128, metadata !DIExpression()), !dbg !7136
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !7177
  call void @llvm.dbg.value(metadata i8* %45, metadata !7134, metadata !DIExpression()), !dbg !7136
  %46 = icmp eq i32 %43, %34, !dbg !7167
  br i1 %46, label %47, label %38, !dbg !7170, !llvm.loop !7178

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7180
  ret void, !dbg !7180
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !7181 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !7185, metadata !DIExpression()), !dbg !7193
  call void @llvm.dbg.value(metadata i8* %1, metadata !7186, metadata !DIExpression()), !dbg !7193
  call void @llvm.dbg.value(metadata i32 0, metadata !7187, metadata !DIExpression()), !dbg !7193
  %4 = icmp eq i8* %1, null, !dbg !7194
  br i1 %4, label %67, label %5, !dbg !7196

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7197
  call void @llvm.dbg.value(metadata i32 %27, metadata !7188, metadata !DIExpression()), !dbg !7193
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !7198

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !7193
  call void @llvm.dbg.value(metadata i32 %9, metadata !7187, metadata !DIExpression()), !dbg !7193
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !7199
  %11 = load i8, i8* %10, align 1, !dbg !7199
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !7200

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !7201

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7204
  %15 = and i32 %14, -2, !dbg !7204
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7204
  br label %41, !dbg !7208

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7209
  %18 = and i32 %17, -2, !dbg !7209
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7209
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !7212

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7214
  %22 = or i32 %21, 1, !dbg !7214
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7214
  br label %41, !dbg !7218

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7219
  %25 = or i32 %24, 1, !dbg !7219
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7219
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !7197
  %28 = icmp eq i32 %27, 0, !dbg !7222
  br i1 %7, label %29, label %35, !dbg !7225

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7226
  br i1 %28, label %33, label %31, !dbg !7229

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !7226
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7226
  br label %67, !dbg !7226

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !7226
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7226
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7230
  br i1 %28, label %39, label %37, !dbg !7233

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !7230
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7230
  br label %67, !dbg !7230

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !7230
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7230
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !7234
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !7235
  %44 = load i8, i8* %43, align 1, !dbg !7235
  %45 = icmp eq i8 %44, 5, !dbg !7236
  br i1 %45, label %46, label %56, !dbg !7237

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !7238
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !7239

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !7189, metadata !DIExpression(DW_OP_deref)), !dbg !7240
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !7241
  %50 = load i8, i8* %3, align 1, !dbg !7243
  call void @llvm.dbg.value(metadata i8 %50, metadata !7189, metadata !DIExpression()), !dbg !7240
  %51 = load i8, i8* %48, align 1, !dbg !7244
  %52 = and i8 %51, %50, !dbg !7245
  %53 = icmp eq i8 %52, 0, !dbg !7246
  br i1 %53, label %54, label %49, !dbg !7246, !llvm.loop !7247

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !7249
  %55 = add i32 %9, 1, !dbg !7250
  br label %61, !dbg !7251

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !7252
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !7254
  %59 = load i8, i8* %58, align 1, !dbg !7254
  %60 = zext i8 %59 to i16, !dbg !7254
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #21, !dbg !7255
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !7250
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !7256
  %64 = load i8, i8* %63, align 1, !dbg !7256
  %65 = zext i8 %64 to i32, !dbg !7256
  %66 = add i32 %42, %65, !dbg !7257
  call void @llvm.dbg.value(metadata i32 %66, metadata !7187, metadata !DIExpression()), !dbg !7193
  br label %8, !dbg !7198, !llvm.loop !7258

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !7260
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !7261 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !7265, metadata !DIExpression()), !dbg !7268
  call void @llvm.dbg.value(metadata i8* %1, metadata !7266, metadata !DIExpression()), !dbg !7268
  call void @llvm.dbg.value(metadata i8 %2, metadata !7267, metadata !DIExpression()), !dbg !7268
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !7267, metadata !DIExpression(DW_OP_deref)), !dbg !7268
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !7269
  ret void, !dbg !7270
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !7271 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7275, metadata !DIExpression()), !dbg !7277
  call void @llvm.dbg.value(metadata i8* %1, metadata !7276, metadata !DIExpression()), !dbg !7277
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #21, !dbg !7278
  ret void, !dbg !7279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #10 section ".ram_code" !dbg !7280 {
  ret i32 78, !dbg !7284
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #11 section ".ram_code" !dbg !7285 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7289
  %2 = and i32 %1, 7340032, !dbg !7291
  %3 = icmp ult i32 %2, 2097153, !dbg !7292
  %4 = select i1 %3, i32 30, i32 18, !dbg !7293
  ret i32 %4, !dbg !7294
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #17 section ".ram_code" !dbg !7295 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7299, metadata !DIExpression()), !dbg !7301
  call void @llvm.dbg.value(metadata i32 0, metadata !7300, metadata !DIExpression()), !dbg !7301
  call void @llvm.dbg.value(metadata i32 0, metadata !7300, metadata !DIExpression()), !dbg !7301
  br label %2, !dbg !7302

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7300, metadata !DIExpression()), !dbg !7301
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7304
  store i8 -1, i8* %4, align 1, !dbg !7307
  %5 = add nuw nsw i32 %3, 1, !dbg !7308
  call void @llvm.dbg.value(metadata i32 %5, metadata !7300, metadata !DIExpression()), !dbg !7301
  %6 = icmp eq i32 %5, 8, !dbg !7309
  br i1 %6, label %7, label %2, !dbg !7302, !llvm.loop !7310

7:                                                ; preds = %2
  ret i1 true, !dbg !7312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !7313 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !7315, metadata !DIExpression()), !dbg !7316
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !7317
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !7318
  %3 = load i8, i8* %2, align 1, !dbg !7318
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !7319
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !7320
  %5 = ptrtoint i8* %4 to i32, !dbg !7321
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !7322
  %6 = bitcast i8* %4 to i32*, !dbg !7323
  %7 = load volatile i32, i32* %6, align 4, !dbg !7324
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !7325
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7326
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !7327
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7328
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !7329
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7330
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !7331
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !7332
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !7333
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7334
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !7335
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7336
  %14 = or i32 %13, 986880, !dbg !7337
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7338
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7339
  %16 = or i32 %15, 252645135, !dbg !7340
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7341
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !7342
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !7343
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !7344
  %20 = load i8, i8* %19, align 1, !dbg !7344
  %21 = zext i8 %20 to i32, !dbg !7345
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #21, !dbg !7346
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !7347
  ret void, !dbg !7348
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !7349 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !7350
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7351
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !7352
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7353
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !7354
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7355
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !7356
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !7357
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !7358
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7359
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7360
  %7 = and i32 %6, -252645136, !dbg !7361
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7362
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !7363
  %9 = zext i8 %8 to i32, !dbg !7363
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #21, !dbg !7364
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !7365
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !7366
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !7368
  %13 = inttoptr i32 %12 to i32*, !dbg !7369
  %14 = load volatile i32, i32* %13, align 4, !dbg !7370
  %15 = icmp eq i32 %11, %14, !dbg !7371
  br i1 %15, label %17, label %16, !dbg !7372

16:                                               ; preds = %0, %16
  br label %16, !dbg !7373, !llvm.loop !7374

17:                                               ; preds = %0
  ret void, !dbg !7376
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !7377 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7378
  %2 = icmp eq i32 %1, 0, !dbg !7380
  br i1 %2, label %3, label %5, !dbg !7381

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7382
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7384
  br label %5, !dbg !7385

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7386
  %7 = icmp eq i32 %6, 0, !dbg !7388
  br i1 %7, label %8, label %10, !dbg !7389

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7390
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7392
  br label %10, !dbg !7393

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7394
  %12 = and i32 %11, -256, !dbg !7395
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7396
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7397
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #20, !dbg !7398
  ret void, !dbg !7399
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !7400 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7401
  %2 = icmp eq i32 %1, 0, !dbg !7403
  br i1 %2, label %4, label %3, !dbg !7404

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7405
  br label %4, !dbg !7407

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7408
  %6 = icmp eq i32 %5, 0, !dbg !7410
  br i1 %6, label %8, label %7, !dbg !7411

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7412
  br label %8, !dbg !7414

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #20, !dbg !7415
  ret void, !dbg !7416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #10 section ".tcm_code" !dbg !7417 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7419, metadata !DIExpression()), !dbg !7420
  ret i32 0, !dbg !7421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #10 section ".ram_code" !dbg !7422 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7424, metadata !DIExpression()), !dbg !7425
  ret i32 0, !dbg !7426
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !7427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7429, metadata !DIExpression()), !dbg !7430
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !7431
  ret void, !dbg !7432
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !7433 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7436
  call void @llvm.dbg.value(metadata i32 %1, metadata !7435, metadata !DIExpression()), !dbg !7437
  ret i32 %1, !dbg !7438
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !7439 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7441, metadata !DIExpression()), !dbg !7442
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !7443
  ret void, !dbg !7444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #10 section ".ram_code" !dbg !7445 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !7447, metadata !DIExpression()), !dbg !7448
  ret i32 0, !dbg !7449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #10 section ".ram_code" !dbg !7450 {
  ret i32 0, !dbg !7453
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 section ".ram_code" !dbg !7454 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7458, metadata !DIExpression()), !dbg !7473
  call void @llvm.dbg.value(metadata i8* %1, metadata !7459, metadata !DIExpression()), !dbg !7473
  call void @llvm.dbg.value(metadata i32 %2, metadata !7460, metadata !DIExpression()), !dbg !7473
  %4 = ptrtoint i8* %0 to i32, !dbg !7474
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !7475
  %7 = and i32 %6, 3, !dbg !7475
  %8 = icmp eq i32 %7, 0, !dbg !7475
  br i1 %8, label %9, label %26, !dbg !7475

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !7476
  call void @llvm.dbg.value(metadata i32* %10, metadata !7462, metadata !DIExpression()), !dbg !7477
  %11 = bitcast i8* %1 to i32*, !dbg !7478
  call void @llvm.dbg.value(metadata i32* %11, metadata !7465, metadata !DIExpression()), !dbg !7477
  call void @llvm.dbg.value(metadata i32 0, metadata !7461, metadata !DIExpression()), !dbg !7473
  call void @llvm.dbg.value(metadata i32 0, metadata !7461, metadata !DIExpression()), !dbg !7473
  %12 = icmp ult i32 %2, 4, !dbg !7479
  br i1 %12, label %65, label %13, !dbg !7482

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !7482

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7461, metadata !DIExpression()), !dbg !7473
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !7483
  %18 = load i32, i32* %17, align 4, !dbg !7483
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !7486
  %20 = load i32, i32* %19, align 4, !dbg !7486
  %21 = icmp eq i32 %18, %20, !dbg !7487
  %22 = add nuw nsw i32 %16, 1, !dbg !7488
  call void @llvm.dbg.value(metadata i32 %22, metadata !7461, metadata !DIExpression()), !dbg !7473
  %23 = xor i1 %21, true, !dbg !7489
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !7489
  call void @llvm.dbg.value(metadata i32 %22, metadata !7461, metadata !DIExpression()), !dbg !7473
  br i1 %25, label %59, label %15, !dbg !7489, !llvm.loop !7490

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !7492
  %28 = icmp eq i32 %27, 0, !dbg !7492
  br i1 %28, label %31, label %29, !dbg !7492

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !7461, metadata !DIExpression()), !dbg !7473
  %30 = icmp eq i32 %2, 0, !dbg !7493
  br i1 %30, label %65, label %48, !dbg !7496

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !7497
  call void @llvm.dbg.value(metadata i16* %32, metadata !7466, metadata !DIExpression()), !dbg !7498
  %33 = bitcast i8* %1 to i16*, !dbg !7499
  call void @llvm.dbg.value(metadata i16* %33, metadata !7469, metadata !DIExpression()), !dbg !7498
  call void @llvm.dbg.value(metadata i32 0, metadata !7461, metadata !DIExpression()), !dbg !7473
  call void @llvm.dbg.value(metadata i32 0, metadata !7461, metadata !DIExpression()), !dbg !7473
  %34 = icmp ult i32 %2, 2, !dbg !7500
  br i1 %34, label %65, label %35, !dbg !7503

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !7503

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !7461, metadata !DIExpression()), !dbg !7473
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !7504
  %40 = load i16, i16* %39, align 2, !dbg !7504
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !7507
  %42 = load i16, i16* %41, align 2, !dbg !7507
  %43 = icmp eq i16 %40, %42, !dbg !7508
  %44 = add nuw nsw i32 %38, 1, !dbg !7509
  call void @llvm.dbg.value(metadata i32 %44, metadata !7461, metadata !DIExpression()), !dbg !7473
  %45 = xor i1 %43, true, !dbg !7510
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !7510
  call void @llvm.dbg.value(metadata i32 %44, metadata !7461, metadata !DIExpression()), !dbg !7473
  br i1 %47, label %61, label %37, !dbg !7510, !llvm.loop !7511

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !7461, metadata !DIExpression()), !dbg !7473
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !7513
  %51 = load i8, i8* %50, align 1, !dbg !7513
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !7516
  %53 = load i8, i8* %52, align 1, !dbg !7516
  %54 = icmp eq i8 %51, %53, !dbg !7517
  %55 = add nuw i32 %49, 1, !dbg !7518
  call void @llvm.dbg.value(metadata i32 %55, metadata !7461, metadata !DIExpression()), !dbg !7473
  %56 = xor i1 %54, true, !dbg !7519
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !7519
  call void @llvm.dbg.value(metadata i32 %55, metadata !7461, metadata !DIExpression()), !dbg !7473
  br i1 %58, label %63, label %48, !dbg !7519, !llvm.loop !7520

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !7522
  br label %65, !dbg !7522

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !7522
  br label %65, !dbg !7522

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !7522
  br label %65, !dbg !7522

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !7473
  ret i1 %66, !dbg !7522
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !7523 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7527, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i8* %1, metadata !7528, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i32 %2, metadata !7529, metadata !DIExpression()), !dbg !7538
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7539
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !7530, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i8* %0, metadata !7531, metadata !DIExpression()), !dbg !7538
  %7 = bitcast i8** %4 to i8*, !dbg !7540
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7540
  call void @llvm.dbg.value(metadata i8* %1, metadata !7532, metadata !DIExpression()), !dbg !7538
  store i8* %1, i8** %4, align 4, !dbg !7541
  call void @llvm.dbg.value(metadata i32 0, metadata !7533, metadata !DIExpression()), !dbg !7538
  %8 = bitcast i32* %5 to i8*, !dbg !7542
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22, !dbg !7542
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7543
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !7544
  store i8 1, i8* %9, align 4, !dbg !7545
  call void @llvm.dbg.value(metadata i32 %2, metadata !7529, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i8* %0, metadata !7531, metadata !DIExpression()), !dbg !7538
  %10 = icmp eq i32 %2, 0, !dbg !7546
  br i1 %10, label %73, label %11, !dbg !7547

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !7548
  call void @llvm.dbg.value(metadata i32 %12, metadata !7531, metadata !DIExpression()), !dbg !7538
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !7547

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !7529, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i32 %20, metadata !7531, metadata !DIExpression()), !dbg !7538
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !7549
  %22 = shl i32 %21, 1, !dbg !7551
  %23 = add i32 %22, -1, !dbg !7552
  %24 = and i32 %23, %20, !dbg !7553
  %25 = sub i32 %22, %24, !dbg !7554
  %26 = icmp ugt i32 %19, %25, !dbg !7555
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !7556
  call void @llvm.dbg.value(metadata i32 %27, metadata !7535, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i32 %27, metadata !7534, metadata !DIExpression()), !dbg !7538
  store i32 %27, i32* %5, align 4, !dbg !7557
  %28 = load i32, i32* %13, align 4, !dbg !7558
  %29 = and i32 %28, 16, !dbg !7560
  %30 = icmp eq i32 %29, 0, !dbg !7560
  br i1 %30, label %31, label %32, !dbg !7561

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #21, !dbg !7562
  br label %32, !dbg !7564

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !7565
  %34 = icmp eq i8 %33, 4, !dbg !7567
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !7568
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !7568
  %37 = load i8, i8* %36, align 1, !dbg !7568
  %38 = zext i8 %37 to i32, !dbg !7568
  br i1 %34, label %39, label %43, !dbg !7569

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !7532, metadata !DIExpression(DW_OP_deref)), !dbg !7538
  call void @llvm.dbg.value(metadata i32* %5, metadata !7534, metadata !DIExpression(DW_OP_deref)), !dbg !7538
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #20, !dbg !7570
  call void @llvm.dbg.value(metadata i32 %40, metadata !7533, metadata !DIExpression()), !dbg !7538
  %41 = load i8*, i8** %4, align 4, !dbg !7572
  call void @llvm.dbg.value(metadata i8* %41, metadata !7532, metadata !DIExpression()), !dbg !7538
  %42 = load i32, i32* %5, align 4, !dbg !7573
  call void @llvm.dbg.value(metadata i32 %42, metadata !7534, metadata !DIExpression()), !dbg !7538
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #20, !dbg !7574
  br label %47, !dbg !7575

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #20, !dbg !7576
  call void @llvm.dbg.value(metadata i32 %44, metadata !7533, metadata !DIExpression()), !dbg !7538
  %45 = load i8*, i8** %4, align 4, !dbg !7578
  call void @llvm.dbg.value(metadata i8* %45, metadata !7532, metadata !DIExpression()), !dbg !7538
  %46 = load i32, i32* %5, align 4, !dbg !7579
  call void @llvm.dbg.value(metadata i32 %46, metadata !7534, metadata !DIExpression()), !dbg !7538
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #20, !dbg !7580
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !7568
  call void @llvm.dbg.value(metadata i32 %48, metadata !7533, metadata !DIExpression()), !dbg !7538
  %49 = call i32 @SaveAndSetIRQMask() #21, !dbg !7581
  call void @llvm.dbg.value(metadata i32 %49, metadata !7537, metadata !DIExpression()), !dbg !7538
  %50 = load i8, i8* %14, align 1, !dbg !7582
  %51 = zext i8 %50 to i32, !dbg !7583
  %52 = add i32 %27, 1, !dbg !7584
  %53 = add i32 %52, %51, !dbg !7585
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7586
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7587
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7588
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !7589
  %54 = load i16, i16* %16, align 2, !dbg !7590
  call void @SFI_MacEnable(i16 noundef zeroext %54) #20, !dbg !7591
  %55 = load i16, i16* %16, align 2, !dbg !7592
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #20, !dbg !7593
  call void @RestoreIRQMask(i32 noundef %49) #21, !dbg !7594
  br label %56, !dbg !7595

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !7596
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !7598
  %59 = load i8, i8* %58, align 1, !dbg !7598
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #21, !dbg !7599
  call void @llvm.dbg.value(metadata i32 %60, metadata !7536, metadata !DIExpression()), !dbg !7538
  %61 = load i8*, i8** %17, align 4, !dbg !7600
  %62 = load i8, i8* %61, align 1, !dbg !7602
  %63 = zext i8 %62 to i32, !dbg !7602
  %64 = and i32 %60, %63, !dbg !7603
  %65 = icmp eq i32 %64, 0, !dbg !7604
  br i1 %65, label %66, label %56, !dbg !7605, !llvm.loop !7606

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !7608
  %67 = load i32, i32* %5, align 4, !dbg !7609
  call void @llvm.dbg.value(metadata i32 %67, metadata !7534, metadata !DIExpression()), !dbg !7538
  %68 = load i8*, i8** %4, align 4, !dbg !7610
  call void @llvm.dbg.value(metadata i8* %68, metadata !7532, metadata !DIExpression()), !dbg !7538
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !7610
  call void @llvm.dbg.value(metadata i8* %69, metadata !7532, metadata !DIExpression()), !dbg !7538
  store i8* %69, i8** %4, align 4, !dbg !7610
  %70 = sub i32 %19, %27, !dbg !7611
  call void @llvm.dbg.value(metadata i32 %70, metadata !7529, metadata !DIExpression()), !dbg !7538
  %71 = add i32 %27, %20, !dbg !7612
  call void @llvm.dbg.value(metadata i32 %71, metadata !7531, metadata !DIExpression()), !dbg !7538
  %72 = icmp eq i32 %70, 0, !dbg !7546
  br i1 %72, label %73, label %18, !dbg !7547, !llvm.loop !7613

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !7615
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7616
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22, !dbg !7617
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7617
  ret void, !dbg !7617
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !7618 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7622, metadata !DIExpression()), !dbg !7624
  br label %2, !dbg !7625

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #21, !dbg !7626
  call void @llvm.dbg.value(metadata i32 %3, metadata !7623, metadata !DIExpression()), !dbg !7624
  %4 = icmp eq i32 %3, 0, !dbg !7628
  br i1 %4, label %5, label %2, !dbg !7629, !llvm.loop !7630

5:                                                ; preds = %2
  ret void, !dbg !7632
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7633 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7635, metadata !DIExpression()), !dbg !7636
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7637
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !7637
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !7638
  %5 = load i8, i8* %4, align 1, !dbg !7638
  %6 = zext i8 %5 to i32, !dbg !7639
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #21, !dbg !7640
  ret void, !dbg !7641
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !7642 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7645
  call void @llvm.dbg.value(metadata i32 %1, metadata !7644, metadata !DIExpression()), !dbg !7646
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !7647
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7648
  ret void, !dbg !7649
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !7650 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7654, metadata !DIExpression()), !dbg !7658
  call void @llvm.dbg.value(metadata i8 %1, metadata !7655, metadata !DIExpression()), !dbg !7658
  %3 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7659
  call void @llvm.dbg.value(metadata i32 %3, metadata !7656, metadata !DIExpression()), !dbg !7658
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7660
  %5 = load i16, i16* %4, align 2, !dbg !7660
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #20, !dbg !7661
  %6 = zext i8 %1 to i32, !dbg !7662
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7663
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7664
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7665
  %7 = load i16, i16* %4, align 2, !dbg !7666
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #20, !dbg !7667
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7668
  %9 = lshr i32 %8, 8, !dbg !7669
  %10 = and i32 %9, 255, !dbg !7670
  call void @llvm.dbg.value(metadata i32 %10, metadata !7657, metadata !DIExpression()), !dbg !7658
  tail call void @RestoreIRQMask(i32 noundef %3) #21, !dbg !7671
  ret i32 %10, !dbg !7672
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !7673 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7676
  call void @llvm.dbg.value(metadata i32 %1, metadata !7675, metadata !DIExpression()), !dbg !7677
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !7678
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7679
  %3 = and i32 %2, -513, !dbg !7679
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7679
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7682
  ret void, !dbg !7683
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !7684 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7686, metadata !DIExpression()), !dbg !7688
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7689
  call void @llvm.dbg.value(metadata i32 %2, metadata !7687, metadata !DIExpression()), !dbg !7688
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !7690
  br i1 %3, label %4, label %5, !dbg !7692

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !7693
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !7695
  ret void, !dbg !7696

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !7697
  tail call void @Flash_ReturnReady() #21, !dbg !7699
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #23, !dbg !7699
  unreachable, !dbg !7699
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !7703 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !7705, metadata !DIExpression()), !dbg !7710
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7711
  call void @llvm.dbg.value(metadata i32 %1, metadata !7707, metadata !DIExpression()), !dbg !7710
  %2 = tail call i32 @get_NOR_init_status() #20, !dbg !7712
  %3 = icmp eq i32 %2, 0, !dbg !7714
  br i1 %3, label %4, label %125, !dbg !7715

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !7716
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7717
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !7705, metadata !DIExpression()), !dbg !7710
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !7719
  %7 = load i32, i32* %6, align 4, !dbg !7719
  %8 = xor i32 %7, -1, !dbg !7719
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !7719
  %10 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %9, align 4, !dbg !7719
  %11 = ptrtoint %struct.hal_cache_region_config_t* %10 to i32, !dbg !7719
  %12 = icmp eq i32 %8, %11, !dbg !7719
  br i1 %12, label %14, label %13, !dbg !7722

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !7723
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #23, !dbg !7723
  unreachable, !dbg !7723

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !7725
  %16 = icmp ult i32 %15, 16, !dbg !7727
  br i1 %16, label %17, label %34, !dbg !7728

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !7729
  %19 = load i8, i8* %18, align 4, !dbg !7729
  %20 = icmp eq i8 %19, 1, !dbg !7730
  br i1 %20, label %21, label %34, !dbg !7731

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !7732

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7734
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !7736
  %27 = load i8, i8* %26, align 1, !dbg !7736
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #21, !dbg !7737
  call void @llvm.dbg.value(metadata i32 %28, metadata !7706, metadata !DIExpression()), !dbg !7710
  %29 = load i8*, i8** %23, align 4, !dbg !7738
  %30 = load i8, i8* %29, align 1, !dbg !7740
  %31 = zext i8 %30 to i32, !dbg !7740
  %32 = and i32 %28, %31, !dbg !7741
  %33 = icmp eq i32 %32, 0, !dbg !7742
  br i1 %33, label %34, label %24, !dbg !7743, !llvm.loop !7744

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7746, !range !2648
  %36 = icmp ne i8 %35, 0, !dbg !7746
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !7748
  br i1 %39, label %116, label %40, !dbg !7748

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !7749
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7749
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !7751
  %44 = load i8, i8* %43, align 1, !dbg !7751
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #21, !dbg !7752
  call void @llvm.dbg.value(metadata i32 %45, metadata !7706, metadata !DIExpression()), !dbg !7710
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !7753
  %47 = load i8*, i8** %46, align 4, !dbg !7753
  %48 = load i8, i8* %47, align 1, !dbg !7755
  %49 = zext i8 %48 to i32, !dbg !7755
  %50 = and i32 %45, %49, !dbg !7756
  %51 = icmp eq i32 %50, 0, !dbg !7757
  br i1 %51, label %85, label %52, !dbg !7758

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #21, !dbg !7759
  br label %53, !dbg !7761

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7762
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !7764
  %56 = load i8, i8* %55, align 1, !dbg !7764
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #21, !dbg !7765
  call void @llvm.dbg.value(metadata i32 %57, metadata !7706, metadata !DIExpression()), !dbg !7710
  %58 = load i8*, i8** %46, align 4, !dbg !7766
  %59 = load i8, i8* %58, align 1, !dbg !7768
  %60 = zext i8 %59 to i32, !dbg !7768
  %61 = and i32 %57, %60, !dbg !7769
  %62 = icmp eq i32 %61, 0, !dbg !7770
  br i1 %62, label %63, label %53, !dbg !7771, !llvm.loop !7772

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !7774
  %65 = load i32, i32* %64, align 4, !dbg !7774
  %66 = and i32 %65, 4, !dbg !7776
  %67 = icmp eq i32 %66, 0, !dbg !7776
  br i1 %67, label %84, label %68, !dbg !7777

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !7778
  %70 = load i8, i8* %69, align 4, !dbg !7778
  %71 = icmp eq i8 %70, 2, !dbg !7779
  br i1 %71, label %72, label %84, !dbg !7780

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7781
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7783
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7784
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !7785
  %74 = load i16, i16* %73, align 2, !dbg !7785
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #20, !dbg !7786
  %75 = load i16, i16* %73, align 2, !dbg !7787
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #20, !dbg !7788
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !7789
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7790
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7791
  %76 = load i16, i16* %73, align 2, !dbg !7792
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #20, !dbg !7793
  %77 = load i16, i16* %73, align 2, !dbg !7794
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #20, !dbg !7795
  br label %78, !dbg !7796

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7797
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7799
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7800
  %79 = load i16, i16* %73, align 2, !dbg !7801
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #20, !dbg !7802
  %80 = load i16, i16* %73, align 2, !dbg !7803
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #20, !dbg !7804
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7805
  call void @llvm.dbg.value(metadata i32 %81, metadata !7706, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !7710
  %82 = and i32 %81, 256, !dbg !7806
  %83 = icmp eq i32 %82, 0, !dbg !7806
  br i1 %83, label %84, label %78, !dbg !7806, !llvm.loop !7807

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !7809
  br label %116, !dbg !7810

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !7811
  %87 = load i32, i32* %86, align 4, !dbg !7811
  %88 = and i32 %87, 2, !dbg !7814
  %89 = icmp eq i32 %88, 0, !dbg !7814
  br i1 %89, label %115, label %90, !dbg !7815

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !7816
  %92 = load %struct.anon.9*, %struct.anon.9** %91, align 4, !dbg !7816
  %93 = icmp eq %struct.anon.9* %92, null, !dbg !7817
  br i1 %93, label %94, label %115, !dbg !7818

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7819
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !7821
  %97 = load i8, i8* %96, align 1, !dbg !7821
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #21, !dbg !7822
  call void @llvm.dbg.value(metadata i32 %98, metadata !7706, metadata !DIExpression()), !dbg !7710
  %99 = load i8*, i8** %46, align 4, !dbg !7823
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !7825
  %101 = load i8, i8* %100, align 1, !dbg !7825
  %102 = zext i8 %101 to i32, !dbg !7825
  %103 = and i32 %98, %102, !dbg !7826
  %104 = icmp eq i32 %103, 0, !dbg !7827
  br i1 %104, label %105, label %115, !dbg !7828

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !7829
  %107 = load i8, i8* %106, align 1, !dbg !7829
  %108 = zext i8 %107 to i32, !dbg !7829
  %109 = and i32 %98, %108, !dbg !7830
  %110 = icmp eq i32 %109, 0, !dbg !7831
  br i1 %110, label %111, label %115, !dbg !7832

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !7833
  %113 = load i16, i16* %112, align 2, !dbg !7833
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #20, !dbg !7835
  %114 = load i16, i16* %112, align 2, !dbg !7836
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #20, !dbg !7837
  br label %115, !dbg !7838

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !7839
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !7840
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !7841
  %118 = sub i32 0, %117, !dbg !7841
  call void @llvm.dbg.value(metadata i32 %118, metadata !7708, metadata !DIExpression()), !dbg !7842
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !7843
  %120 = icmp ult i32 %119, %118, !dbg !7845
  br i1 %120, label %121, label %122, !dbg !7846

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !7847
  br label %122, !dbg !7849

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7850
  %124 = and i32 %123, -513, !dbg !7850
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7850
  br label %125, !dbg !7853

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7710
  ret void, !dbg !7854
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7855 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7857, metadata !DIExpression()), !dbg !7861
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !7862
  %3 = icmp eq i32 %2, -1, !dbg !7864
  br i1 %3, label %12, label %4, !dbg !7865

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !7859, metadata !DIExpression()), !dbg !7861
  %5 = sub i32 0, %2, !dbg !7866
  call void @llvm.dbg.value(metadata i32 %5, metadata !7860, metadata !DIExpression()), !dbg !7861
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !7868
  %7 = load i8, i8* %6, align 4, !dbg !7868
  %8 = zext i8 %7 to i32, !dbg !7870
  %9 = icmp ugt i32 %8, %5, !dbg !7871
  br i1 %9, label %10, label %12, !dbg !7872

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !7873
  tail call void @DelayAWhile_UST(i32 noundef %11) #20, !dbg !7875
  br label %12, !dbg !7876

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7877
  call void @llvm.dbg.value(metadata i32 %13, metadata !7858, metadata !DIExpression()), !dbg !7861
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7878
  %15 = load i16, i16* %14, align 2, !dbg !7878
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7879
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !7879
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !7880
  %19 = load i8, i8* %18, align 1, !dbg !7880
  %20 = zext i8 %19 to i32, !dbg !7881
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #20, !dbg !7882
  tail call void @RestoreIRQMask(i32 noundef %13) #21, !dbg !7883
  ret void, !dbg !7884
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !7885 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7888
  call void @llvm.dbg.value(metadata i32 %1, metadata !7887, metadata !DIExpression()), !dbg !7889
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7890
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7891
  %3 = and i32 %2, -513, !dbg !7891
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7891
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7894
  ret void, !dbg !7895
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !7896 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7900, metadata !DIExpression()), !dbg !7904
  call void @llvm.dbg.value(metadata i32 %1, metadata !7901, metadata !DIExpression()), !dbg !7904
  call void @llvm.dbg.value(metadata i8 %2, metadata !7902, metadata !DIExpression()), !dbg !7904
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7905
  call void @llvm.dbg.value(metadata i32 %4, metadata !7903, metadata !DIExpression()), !dbg !7904
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7906
  %6 = load i16, i16* %5, align 2, !dbg !7906
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #20, !dbg !7907
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7908
  %7 = zext i8 %2 to i32, !dbg !7909
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7910
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7911
  %8 = load i16, i16* %5, align 2, !dbg !7912
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #20, !dbg !7913
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !7914
  ret void, !dbg !7915
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !7916 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7921
  call void @llvm.dbg.value(metadata i32 %1, metadata !7920, metadata !DIExpression()), !dbg !7922
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !7923
  br i1 %2, label %4, label %3, !dbg !7925

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !7926
  br label %4, !dbg !7928

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !7929
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7929
  ret i32 %5, !dbg !7930
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !7931 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7938
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7935, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.value(metadata i8 0, metadata !7937, metadata !DIExpression()), !dbg !7939
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !7940
  %3 = load i32, i32* %2, align 4, !dbg !7940
  %4 = xor i32 %3, -1, !dbg !7940
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !7940
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %5, align 4, !dbg !7940
  %7 = ptrtoint %struct.hal_cache_region_config_t* %6 to i32, !dbg !7940
  %8 = icmp eq i32 %4, %7, !dbg !7940
  br i1 %8, label %10, label %9, !dbg !7943

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !7944
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #23, !dbg !7944
  unreachable, !dbg !7944

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7946
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7947
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7947
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !7948
  %14 = load i8, i8* %13, align 1, !dbg !7948
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #21, !dbg !7949
  call void @llvm.dbg.value(metadata i32 %15, metadata !7936, metadata !DIExpression()), !dbg !7939
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !7950
  %17 = load i8*, i8** %16, align 4, !dbg !7950
  %18 = load i8, i8* %17, align 1, !dbg !7952
  %19 = zext i8 %18 to i32, !dbg !7952
  %20 = and i32 %15, %19, !dbg !7953
  %21 = icmp eq i32 %20, 0, !dbg !7954
  br i1 %21, label %22, label %23, !dbg !7955

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !7956
  call void @llvm.dbg.value(metadata i8 1, metadata !7937, metadata !DIExpression()), !dbg !7939
  br label %23, !dbg !7958

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !7937, metadata !DIExpression()), !dbg !7939
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7959
  ret i1 %21, !dbg !7960
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !7961 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7963, metadata !DIExpression()), !dbg !7964
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !7965, !range !2648
  %2 = icmp eq i8 %1, 0, !dbg !7965
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7965
  %4 = icmp eq i8 %3, 0, !dbg !7965
  %5 = select i1 %2, i1 true, i1 %4, !dbg !7965
  br i1 %5, label %6, label %7, !dbg !7965

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !7968
  tail call void @Flash_ReturnReady() #21, !dbg !7970
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #23, !dbg !7970
  unreachable, !dbg !7970

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7974
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !7963, metadata !DIExpression()), !dbg !7964
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #21, !dbg !7975
  ret void, !dbg !7976
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7977 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7979, metadata !DIExpression()), !dbg !7981
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7982
  call void @llvm.dbg.value(metadata i32 %2, metadata !7980, metadata !DIExpression()), !dbg !7981
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7983
  %4 = load i16, i16* %3, align 2, !dbg !7983
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7984
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !7984
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !7985
  %8 = load i8, i8* %7, align 1, !dbg !7985
  %9 = zext i8 %8 to i32, !dbg !7986
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #20, !dbg !7987
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !7988
  %11 = load i8, i8* %10, align 4, !dbg !7988
  %12 = icmp eq i8 %11, 0, !dbg !7990
  br i1 %12, label %14, label %13, !dbg !7991

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !7992
  br label %14, !dbg !7994

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !7995
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !7996
  ret void, !dbg !7997
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !7998 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8001
  call void @llvm.dbg.value(metadata i32 %1, metadata !8000, metadata !DIExpression()), !dbg !8002
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8003
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8004
  ret void, !dbg !8005
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !8006 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8010
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8008, metadata !DIExpression()), !dbg !8011
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8012, !range !2648
  %3 = icmp ne i8 %2, 0, !dbg !8012
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8012
  %5 = icmp eq i8 %4, 0, !dbg !8012
  %6 = select i1 %3, i1 %5, i1 false, !dbg !8012
  br i1 %6, label %8, label %7, !dbg !8012

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !8015
  tail call void @Flash_ReturnReady() #21, !dbg !8017
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #23, !dbg !8017
  unreachable, !dbg !8017

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !8021
  %10 = load i32, i32* %9, align 4, !dbg !8021
  %11 = xor i32 %10, -1, !dbg !8021
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !8021
  %13 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %12, align 4, !dbg !8021
  %14 = ptrtoint %struct.hal_cache_region_config_t* %13 to i32, !dbg !8021
  %15 = icmp eq i32 %11, %14, !dbg !8021
  br i1 %15, label %17, label %16, !dbg !8024

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #21, !dbg !8025
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #23, !dbg !8025
  unreachable, !dbg !8025

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8027
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !8028

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !8029
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !8031
  %23 = load i8, i8* %22, align 1, !dbg !8031
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #21, !dbg !8032
  call void @llvm.dbg.value(metadata i32 %24, metadata !8009, metadata !DIExpression()), !dbg !8011
  %25 = load i8*, i8** %19, align 4, !dbg !8033
  %26 = load i8, i8* %25, align 1, !dbg !8035
  %27 = zext i8 %26 to i32, !dbg !8035
  %28 = and i32 %24, %27, !dbg !8036
  %29 = icmp eq i32 %28, 0, !dbg !8037
  br i1 %29, label %30, label %20, !dbg !8038, !llvm.loop !8039

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !8041
  ret void, !dbg !8042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #10 section ".ram_code" !dbg !8043 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8045, metadata !DIExpression()), !dbg !8046
  ret void, !dbg !8047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !8048 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8071, metadata !DIExpression()), !dbg !8074
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8072, metadata !DIExpression()), !dbg !8074
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8075
  %4 = load i8*, i8** %3, align 4, !dbg !8075
  call void @llvm.dbg.value(metadata i8* %4, metadata !8073, metadata !DIExpression()), !dbg !8074
  store i8 1, i8* %4, align 1, !dbg !8076
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !8077
  store i8 2, i8* %5, align 1, !dbg !8078
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !8079
  store i8 8, i8* %6, align 1, !dbg !8080
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !8081
  store i8 4, i8* %7, align 1, !dbg !8082
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !8083
  store i8 60, i8* %8, align 1, !dbg !8084
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !8085
  store i8 -128, i8* %9, align 1, !dbg !8086
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !8087
  store i8 96, i8* %10, align 1, !dbg !8088
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8089
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8089
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !8090
  store i8 43, i8* %13, align 1, !dbg !8091
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8092
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !8093
  store i8 43, i8* %15, align 1, !dbg !8094
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8095
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !8096
  store i8 47, i8* %17, align 1, !dbg !8097
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8098
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !8099
  store i8 5, i8* %19, align 1, !dbg !8100
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8101
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !8102
  store i8 1, i8* %21, align 1, !dbg !8103
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8104
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !8105
  store i8 43, i8* %23, align 1, !dbg !8106
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8107
  store i8 22, i8* %24, align 4, !dbg !8108
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !8109
  %26 = load i8, i8* %25, align 1, !dbg !8109
  %27 = icmp eq i8 %26, 32, !dbg !8111
  br i1 %27, label %28, label %49, !dbg !8112

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !8113
  %30 = load i8, i8* %29, align 1, !dbg !8113
  %31 = icmp eq i8 %30, 24, !dbg !8114
  br i1 %31, label %32, label %41, !dbg !8115

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8116
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !8118
  store i8 117, i8* %34, align 1, !dbg !8119
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8120
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !8121
  store i8 122, i8* %36, align 1, !dbg !8122
  %37 = load i8, i8* %25, align 1, !dbg !8123
  %38 = icmp eq i8 %37, 32, !dbg !8125
  br i1 %38, label %39, label %49, !dbg !8126

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !8128
  br label %41, !dbg !8128

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !8128
  %43 = icmp eq i8 %42, 22, !dbg !8129
  br i1 %43, label %44, label %49, !dbg !8130

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8131
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !8133
  store i8 117, i8* %46, align 1, !dbg !8134
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8135
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !8136
  store i8 122, i8* %48, align 1, !dbg !8137
  br label %49, !dbg !8138

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !8139
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !8140
  ret i32 0, !dbg !8141
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !8142 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8144, metadata !DIExpression()), !dbg !8148
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8149
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8145, metadata !DIExpression()), !dbg !8148
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8150
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !8151
  %5 = load i8, i8* %4, align 1, !dbg !8153
  %6 = icmp eq i8 %5, -62, !dbg !8154
  br i1 %6, label %7, label %15, !dbg !8155

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !8156
  %9 = load i8, i8* %8, align 1, !dbg !8156
  %10 = icmp eq i8 %9, 32, !dbg !8157
  br i1 %10, label %11, label %15, !dbg !8158

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !8159
  %13 = load i8, i8* %12, align 1, !dbg !8159
  %14 = icmp eq i8 %13, 22, !dbg !8160
  br i1 %14, label %48, label %15, !dbg !8161

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !8162
  %17 = bitcast i8* %16 to i16*, !dbg !8162
  %18 = load i16, i16* %17, align 2, !dbg !8162
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8163
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !8163
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8163
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !8164
  %23 = load i8, i8* %22, align 1, !dbg !8164
  %24 = zext i8 %23 to i32, !dbg !8165
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #20, !dbg !8166
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8167
  %25 = load i16, i16* %17, align 2, !dbg !8168
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8169
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !8170
  call void @llvm.dbg.value(metadata i8* %2, metadata !8147, metadata !DIExpression(DW_OP_deref)), !dbg !8148
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !8171
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8172
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !8173
  %30 = load i8, i8* %29, align 1, !dbg !8173
  %31 = zext i8 %30 to i32, !dbg !8174
  call void @llvm.dbg.value(metadata i32 %31, metadata !8146, metadata !DIExpression()), !dbg !8148
  %32 = shl nuw nsw i32 %31, 8, !dbg !8175
  %33 = load i8, i8* %2, align 1, !dbg !8176
  call void @llvm.dbg.value(metadata i8 %33, metadata !8147, metadata !DIExpression()), !dbg !8148
  %34 = zext i8 %33 to i32, !dbg !8176
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8177
  %36 = bitcast i8* %35 to i8**, !dbg !8177
  %37 = load i8*, i8** %36, align 4, !dbg !8177
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !8178
  %39 = load i8, i8* %38, align 1, !dbg !8178
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !8179
  %41 = load i8, i8* %40, align 1, !dbg !8179
  %42 = or i8 %41, %39, !dbg !8180
  %43 = zext i8 %42 to i32, !dbg !8180
  %44 = xor i32 %43, -1, !dbg !8181
  %45 = and i32 %44, %34, !dbg !8182
  %46 = or i32 %45, %32, !dbg !8183
  call void @llvm.dbg.value(metadata i32 %46, metadata !8146, metadata !DIExpression()), !dbg !8148
  %47 = load i16, i16* %17, align 2, !dbg !8184
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #20, !dbg !8185
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8186
  br label %48, !dbg !8187

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8188
  ret i32 0, !dbg !8188
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8189 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8191, metadata !DIExpression()), !dbg !8193
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8194
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !8195

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !8196
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !8198
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !8199
  call void @llvm.dbg.value(metadata i8* %2, metadata !8192, metadata !DIExpression(DW_OP_deref)), !dbg !8193
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !8200
  %10 = load i8, i8* %2, align 1, !dbg !8201
  call void @llvm.dbg.value(metadata i8 %10, metadata !8192, metadata !DIExpression()), !dbg !8193
  %11 = load i8*, i8** %5, align 4, !dbg !8202
  %12 = load i8, i8* %11, align 1, !dbg !8203
  %13 = and i8 %12, %10, !dbg !8204
  %14 = icmp eq i8 %13, 0, !dbg !8205
  br i1 %14, label %15, label %6, !dbg !8206, !llvm.loop !8207

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8209
  ret void, !dbg !8209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !8210 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8212, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8213, metadata !DIExpression()), !dbg !8215
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8216
  %4 = load i8*, i8** %3, align 4, !dbg !8216
  call void @llvm.dbg.value(metadata i8* %4, metadata !8214, metadata !DIExpression()), !dbg !8215
  store i8 1, i8* %4, align 1, !dbg !8217
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !8218
  store i8 2, i8* %5, align 1, !dbg !8219
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !8220
  store i8 -128, i8* %6, align 1, !dbg !8221
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !8222
  store i8 -128, i8* %7, align 1, !dbg !8223
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !8224
  store i8 60, i8* %8, align 1, !dbg !8225
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !8226
  store i8 -128, i8* %9, align 1, !dbg !8227
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8228
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8228
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !8229
  store i8 -97, i8* %12, align 1, !dbg !8230
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8231
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !8232
  store i8 53, i8* %14, align 1, !dbg !8233
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8234
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !8235
  store i8 53, i8* %16, align 1, !dbg !8236
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8237
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !8238
  store i8 5, i8* %18, align 1, !dbg !8239
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8240
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !8241
  store i8 1, i8* %20, align 1, !dbg !8242
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8243
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !8244
  store i8 117, i8* %22, align 1, !dbg !8245
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8246
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !8247
  store i8 122, i8* %24, align 1, !dbg !8248
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8249
  store i8 22, i8* %25, align 4, !dbg !8250
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !8251
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !8252
  ret i32 0, !dbg !8253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #10 !dbg !8254 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8256, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8257, metadata !DIExpression()), !dbg !8258
  ret i32 0, !dbg !8259
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !8260 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !8262, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8263, metadata !DIExpression()), !dbg !8264
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !8265
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !8266
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !8267
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !8268
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !8269
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !8270
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !8271
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !8272
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !8273
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !8274
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !8275
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !8276
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !8277
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !8278
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !8279
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !8280
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !8281
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !8282
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !8283
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !8284
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !8285
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !8286
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !8287
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !8288
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !8289
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !8290
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !8291
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !8292
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !8293
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !8294
  %18 = tail call i32 @custom_get_NORFLASH_Size() #20, !dbg !8295
  %19 = icmp ugt i32 %18, 16777216, !dbg !8297
  %20 = select i1 %19, i8 4, i8 3, !dbg !8298
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !8299
  store i8 %20, i8* %21, align 1, !dbg !8301
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8302
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8302
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !8303
  store i8 0, i8* %24, align 1, !dbg !8304
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8305
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !8306
  store i8 -81, i8* %26, align 1, !dbg !8307
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8308
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !8309
  store i8 -97, i8* %28, align 1, !dbg !8310
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8311
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !8312
  store i8 2, i8* %30, align 1, !dbg !8313
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8314
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !8315
  store i8 32, i8* %32, align 1, !dbg !8316
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8317
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !8318
  store i8 82, i8* %34, align 1, !dbg !8319
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8320
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !8321
  store i8 -40, i8* %36, align 1, !dbg !8322
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8323
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !8324
  store i8 -80, i8* %38, align 1, !dbg !8325
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8326
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !8327
  store i8 48, i8* %40, align 1, !dbg !8328
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8329
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !8330
  store i8 6, i8* %42, align 1, !dbg !8331
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8332
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !8333
  store i8 -71, i8* %44, align 1, !dbg !8334
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8335
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !8336
  store i8 -85, i8* %46, align 1, !dbg !8337
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8338
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !8339
  store i8 5, i8* %48, align 1, !dbg !8340
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !8341
  store i16 0, i16* %49, align 4, !dbg !8342
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !8343
  store %struct.anon.9* null, %struct.anon.9** %50, align 4, !dbg !8344
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !8345
  store %struct.anon.9* null, %struct.anon.9** %51, align 4, !dbg !8346
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !8347
  store i8 0, i8* %52, align 4, !dbg !8348
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8349
  store i8 5, i8* %53, align 4, !dbg !8350
  ret i32 0, !dbg !8351
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !8352 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8354, metadata !DIExpression()), !dbg !8372
  call void @llvm.dbg.value(metadata i8* %1, metadata !8355, metadata !DIExpression()), !dbg !8372
  call void @llvm.dbg.value(metadata i8* %1, metadata !8356, metadata !DIExpression()), !dbg !8372
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8373
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8369, metadata !DIExpression()), !dbg !8372
  call void @llvm.dbg.value(metadata i32 0, metadata !8370, metadata !DIExpression()), !dbg !8372
  %4 = bitcast i8* %1 to i32*, !dbg !8374
  store i32 0, i32* %4, align 4, !dbg !8375
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.hal_cache_region_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !8370, metadata !DIExpression()), !dbg !8372
  %7 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8376
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %7, i32 0, i32 0, !dbg !8377
  %9 = load i32, i32* %8, align 4, !dbg !8377
  %10 = icmp eq i32 %9, 0, !dbg !8378
  br i1 %10, label %34, label %11, !dbg !8379

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !8379

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !8370, metadata !DIExpression()), !dbg !8372
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !8380
  store i32 %17, i32* %19, align 4, !dbg !8382
  %20 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8383
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %20, i32 %18, i32 1, !dbg !8384
  %22 = load i32, i32* %21, align 4, !dbg !8384
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !8385
  store i32 %22, i32* %23, align 4, !dbg !8386
  %24 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8387
  %25 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %24, i32 %18, i32 1, !dbg !8388
  %26 = load i32, i32* %25, align 4, !dbg !8388
  %27 = load i32, i32* %4, align 4, !dbg !8389
  %28 = add i32 %27, %26, !dbg !8389
  store i32 %28, i32* %4, align 4, !dbg !8389
  %29 = add i32 %18, 1, !dbg !8390
  call void @llvm.dbg.value(metadata i32 %29, metadata !8370, metadata !DIExpression()), !dbg !8372
  %30 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8376
  %31 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %30, i32 %29, i32 0, !dbg !8377
  %32 = load i32, i32* %31, align 4, !dbg !8377
  %33 = icmp eq i32 %32, 0, !dbg !8378
  br i1 %33, label %34, label %16, !dbg !8379, !llvm.loop !8391

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !8372
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !8393
  %37 = bitcast i8* %36 to i32*, !dbg !8393
  store i32 %35, i32* %37, align 4, !dbg !8394
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !8395
  %39 = bitcast i8* %38 to i16*, !dbg !8395
  store i16 512, i16* %39, align 4, !dbg !8396
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8397
  br label %40, !dbg !8398

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8399
  call void @llvm.dbg.value(metadata i32 %41, metadata !8371, metadata !DIExpression()), !dbg !8372
  %42 = icmp eq i32 %41, -121, !dbg !8401
  br i1 %42, label %40, label %43, !dbg !8402, !llvm.loop !8403

43:                                               ; preds = %40
  ret i32 0, !dbg !8405
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !8406 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8408, metadata !DIExpression()), !dbg !8412
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8413
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !8409, metadata !DIExpression()), !dbg !8412
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8414
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !8415

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8416
  call void @llvm.dbg.value(metadata i32 %8, metadata !8411, metadata !DIExpression()), !dbg !8412
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8418, !range !2648
  %10 = icmp eq i8 %9, 0, !dbg !8418
  br i1 %10, label %12, label %11, !dbg !8420

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #21, !dbg !8421
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8423
  br label %12, !dbg !8424

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !8425
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !8426
  %15 = load i8, i8* %14, align 1, !dbg !8426
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #21, !dbg !8427
  call void @llvm.dbg.value(metadata i32 %16, metadata !8410, metadata !DIExpression()), !dbg !8412
  %17 = load i8*, i8** %6, align 4, !dbg !8428
  %18 = load i8, i8* %17, align 1, !dbg !8430
  %19 = zext i8 %18 to i32, !dbg !8430
  %20 = and i32 %16, %19, !dbg !8431
  %21 = icmp eq i32 %20, 0, !dbg !8432
  br i1 %21, label %22, label %25, !dbg !8433

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8434
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !8436
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8437
  %24 = bitcast i8* %23 to i8**, !dbg !8437
  store i8* null, i8** %24, align 4, !dbg !8438
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8439
  ret i32 0, !dbg !8440

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !8441
  br label %7, !dbg !8415, !llvm.loop !8443
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !8445 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8447, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %1, metadata !8448, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 0, metadata !8449, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 1, metadata !8453, metadata !DIExpression()), !dbg !8461
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8462
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8454, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 0, metadata !8455, metadata !DIExpression()), !dbg !8461
  %4 = bitcast i8* %0 to i32*, !dbg !8463
  %5 = load i32, i32* %4, align 4, !dbg !8463
  %6 = xor i32 %5, -1, !dbg !8463
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8463
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !8463
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !8463
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !8463
  %11 = icmp eq i32 %6, %10, !dbg !8463
  br i1 %11, label %13, label %12, !dbg !8466

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !8467
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #23, !dbg !8467
  unreachable, !dbg !8467

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8469
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !8470
  store i8 2, i8* %14, align 4, !dbg !8471
  call void @llvm.dbg.value(metadata i32 %19, metadata !8455, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %1, metadata !8448, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !8461
  br label %15, !dbg !8472

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8473
  call void @llvm.dbg.value(metadata i32 %16, metadata !8449, metadata !DIExpression()), !dbg !8461
  %17 = icmp eq i32 %16, -121, !dbg !8475
  br i1 %17, label %15, label %18, !dbg !8476, !llvm.loop !8477

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !8479
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8480
  %21 = bitcast i8* %20 to i8**, !dbg !8480
  %22 = load i8*, i8** %21, align 4, !dbg !8480
  %23 = ptrtoint i8* %22 to i32, !dbg !8481
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #20, !dbg !8482
  call void @llvm.dbg.value(metadata i32 %24, metadata !8450, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %24, metadata !8451, metadata !DIExpression()), !dbg !8461
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !8483
  %26 = bitcast i8* %25 to i16*, !dbg !8483
  %27 = load i16, i16* %26, align 2, !dbg !8483
  %28 = zext i16 %27 to i32, !dbg !8484
  call void @llvm.dbg.value(metadata i32 %28, metadata !8456, metadata !DIExpression()), !dbg !8485
  %29 = lshr i32 %24, 10, !dbg !8486
  call void @llvm.dbg.value(metadata i32 %29, metadata !8459, metadata !DIExpression()), !dbg !8485
  %30 = and i32 %29, %28, !dbg !8487
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !8489
  %33 = icmp eq i32 %32, 0, !dbg !8489
  call void @llvm.dbg.value(metadata i32 0, metadata !8460, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.value(metadata i32 %29, metadata !8459, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.value(metadata i32 %28, metadata !8456, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.value(metadata i32 1, metadata !8453, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %24, metadata !8451, metadata !DIExpression()), !dbg !8461
  br i1 %33, label %34, label %51, !dbg !8489

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !8460, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.value(metadata i32 %36, metadata !8459, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.value(metadata i32 %37, metadata !8456, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.value(metadata i32 %38, metadata !8453, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %39, metadata !8451, metadata !DIExpression()), !dbg !8461
  %40 = and i32 %37, 1, !dbg !8490
  %41 = icmp eq i32 %40, 0, !dbg !8490
  %42 = add i32 %35, 10, !dbg !8496
  %43 = shl nuw i32 1, %42, !dbg !8496
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !8496
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !8496
  call void @llvm.dbg.value(metadata i32 %45, metadata !8453, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %44, metadata !8451, metadata !DIExpression()), !dbg !8461
  %46 = lshr i32 %37, 1, !dbg !8497
  call void @llvm.dbg.value(metadata i32 %46, metadata !8456, metadata !DIExpression()), !dbg !8485
  %47 = lshr i32 %36, 1, !dbg !8498
  call void @llvm.dbg.value(metadata i32 %47, metadata !8459, metadata !DIExpression()), !dbg !8485
  %48 = add i32 %35, 1, !dbg !8499
  call void @llvm.dbg.value(metadata i32 %48, metadata !8460, metadata !DIExpression()), !dbg !8485
  %49 = and i32 %36, 2, !dbg !8500
  %50 = icmp eq i32 %49, 0, !dbg !8500
  br i1 %50, label %34, label %51, !dbg !8501, !llvm.loop !8502

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !8504
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !8505
  call void @llvm.dbg.value(metadata i32 %53, metadata !8453, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %52, metadata !8451, metadata !DIExpression()), !dbg !8461
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !8506

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8507
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !8507
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !8507
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !8509
  br label %70, !dbg !8510

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8511
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !8511
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !8511
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !8512
  br label %70, !dbg !8513

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8514
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !8514
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !8514
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !8515
  br label %70, !dbg !8516

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #21, !dbg !8517
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #23, !dbg !8517
  unreachable, !dbg !8517

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !8521
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !8521
  store i8 %73, i8* %74, align 1, !dbg !8521
  call void @llvm.dbg.value(metadata i32 %53, metadata !8453, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %52, metadata !8451, metadata !DIExpression()), !dbg !8461
  %75 = trunc i32 %19 to i8, !dbg !8522
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !8522

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8523
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !8523
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !8523
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !8525
  br label %91, !dbg !8526

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8527
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !8527
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !8527
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !8528
  br label %91, !dbg !8529

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8530
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !8530
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !8530
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !8531
  br label %91, !dbg !8532

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !8533
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !8533
  store i8 %94, i8* %95, align 1, !dbg !8533
  br label %96, !dbg !8534

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !8452, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %53, metadata !8453, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %16, metadata !8449, metadata !DIExpression()), !dbg !8461
  %97 = icmp eq i32 %53, 0, !dbg !8534
  br i1 %97, label %111, label %98, !dbg !8537

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !8538
  call void @llvm.dbg.value(metadata i8* %99, metadata !8452, metadata !DIExpression()), !dbg !8461
  %100 = ptrtoint i8* %99 to i32, !dbg !8539
  call void @llvm.dbg.value(metadata i32 %100, metadata !8452, metadata !DIExpression()), !dbg !8461
  br label %101, !dbg !8537

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !8453, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %103, metadata !8452, metadata !DIExpression()), !dbg !8461
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #21, !dbg !8540
  br label %104, !dbg !8542

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8543
  call void @llvm.dbg.value(metadata i32 %105, metadata !8449, metadata !DIExpression()), !dbg !8461
  %106 = icmp eq i32 %105, -121, !dbg !8545
  br i1 %106, label %104, label %107, !dbg !8547, !llvm.loop !8548

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !8550
  call void @llvm.dbg.value(metadata i32 %108, metadata !8453, metadata !DIExpression()), !dbg !8461
  %109 = add i32 %103, %52, !dbg !8551
  call void @llvm.dbg.value(metadata i32 %109, metadata !8452, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %105, metadata !8449, metadata !DIExpression()), !dbg !8461
  %110 = icmp eq i32 %108, 0, !dbg !8534
  br i1 %110, label %111, label %101, !dbg !8537, !llvm.loop !8552

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !8461
  store i8 0, i8* %14, align 4, !dbg !8554
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8555
  ret i32 %112, !dbg !8556
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !8557 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8559, metadata !DIExpression()), !dbg !8576
  call void @llvm.dbg.value(metadata i8* %1, metadata !8560, metadata !DIExpression()), !dbg !8576
  call void @llvm.dbg.value(metadata i8* %2, metadata !8561, metadata !DIExpression()), !dbg !8576
  call void @llvm.dbg.value(metadata i32 %3, metadata !8562, metadata !DIExpression()), !dbg !8576
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8577
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !8563, metadata !DIExpression()), !dbg !8576
  %8 = ptrtoint i8* %1 to i32, !dbg !8578
  call void @llvm.dbg.value(metadata i32 %8, metadata !8565, metadata !DIExpression()), !dbg !8576
  %9 = bitcast i8** %5 to i8*, !dbg !8579
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #22, !dbg !8579
  call void @llvm.dbg.value(metadata i8* %2, metadata !8566, metadata !DIExpression()), !dbg !8576
  store i8* %2, i8** %5, align 4, !dbg !8580
  call void @llvm.dbg.value(metadata i32 0, metadata !8568, metadata !DIExpression()), !dbg !8576
  %10 = bitcast i32* %6 to i8*, !dbg !8581
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #22, !dbg !8581
  %11 = bitcast i8* %0 to i32*, !dbg !8582
  %12 = load i32, i32* %11, align 4, !dbg !8582
  %13 = xor i32 %12, -1, !dbg !8582
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8582
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !8582
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !8582
  %17 = ptrtoint %struct.hal_cache_region_config_t* %16 to i32, !dbg !8582
  %18 = icmp eq i32 %13, %17, !dbg !8582
  br i1 %18, label %20, label %19, !dbg !8585

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !8586
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #23, !dbg !8586
  unreachable, !dbg !8586

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8588
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !8589
  store i8 1, i8* %21, align 4, !dbg !8590
  br label %22, !dbg !8591

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8592
  call void @llvm.dbg.value(metadata i32 %23, metadata !8568, metadata !DIExpression()), !dbg !8576
  %24 = icmp eq i32 %23, -121, !dbg !8594
  br i1 %24, label %22, label %25, !dbg !8595, !llvm.loop !8596

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !8598
  br i1 %26, label %104, label %27, !dbg !8599

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !8599

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !8600
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !8576
  call void @llvm.dbg.value(metadata i32 %38, metadata !8565, metadata !DIExpression()), !dbg !8576
  call void @llvm.dbg.value(metadata i32 %37, metadata !8562, metadata !DIExpression()), !dbg !8576
  call void @llvm.dbg.value(metadata i8* %36, metadata !8566, metadata !DIExpression()), !dbg !8576
  call void @llvm.dbg.value(metadata i8* %36, metadata !8567, metadata !DIExpression()), !dbg !8576
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8601
  %40 = shl i32 %39, 1, !dbg !8602
  %41 = add i32 %40, -1, !dbg !8603
  %42 = and i32 %41, %38, !dbg !8604
  %43 = sub i32 %40, %42, !dbg !8605
  %44 = icmp ugt i32 %37, %43, !dbg !8606
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !8607
  call void @llvm.dbg.value(metadata i32 %45, metadata !8569, metadata !DIExpression()), !dbg !8576
  call void @llvm.dbg.value(metadata i32 %45, metadata !8570, metadata !DIExpression()), !dbg !8576
  store i32 %45, i32* %6, align 4, !dbg !8608
  call void @llvm.dbg.value(metadata i8* %36, metadata !8566, metadata !DIExpression()), !dbg !8576
  %46 = ptrtoint i8* %36 to i32, !dbg !8609
  %47 = and i32 %46, 134217728, !dbg !8610
  %48 = icmp eq i32 %47, 0, !dbg !8610
  br i1 %48, label %58, label %49, !dbg !8611

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !8572, metadata !DIExpression()), !dbg !8612
  call void @llvm.dbg.value(metadata i32 %45, metadata !8570, metadata !DIExpression()), !dbg !8576
  %50 = icmp eq i32 %45, 0, !dbg !8613
  br i1 %50, label %58, label %51, !dbg !8616

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !8572, metadata !DIExpression()), !dbg !8612
  call void @llvm.dbg.value(metadata i8* %36, metadata !8566, metadata !DIExpression()), !dbg !8576
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !8617
  %54 = load i8, i8* %53, align 1, !dbg !8617
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !8619
  store i8 %54, i8* %55, align 1, !dbg !8620
  %56 = add nuw i32 %52, 1, !dbg !8621
  call void @llvm.dbg.value(metadata i32 %56, metadata !8572, metadata !DIExpression()), !dbg !8612
  call void @llvm.dbg.value(metadata i32 %45, metadata !8570, metadata !DIExpression()), !dbg !8576
  %57 = icmp eq i32 %56, %45, !dbg !8613
  br i1 %57, label %58, label %51, !dbg !8616, !llvm.loop !8622

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !8624
  call void @llvm.dbg.value(metadata i8* %59, metadata !8567, metadata !DIExpression()), !dbg !8576
  %60 = load i32, i32* %29, align 4, !dbg !8625
  %61 = and i32 %60, 16, !dbg !8627
  %62 = icmp eq i32 %61, 0, !dbg !8627
  br i1 %62, label %63, label %64, !dbg !8628

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #21, !dbg !8629
  br label %64, !dbg !8631

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !8632
  %66 = icmp eq i8 %65, 4, !dbg !8634
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !8635
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !8635
  %69 = load i8, i8* %68, align 1, !dbg !8635
  %70 = zext i8 %69 to i32, !dbg !8635
  br i1 %66, label %71, label %75, !dbg !8636

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !8566, metadata !DIExpression(DW_OP_deref)), !dbg !8576
  call void @llvm.dbg.value(metadata i32* %6, metadata !8570, metadata !DIExpression(DW_OP_deref)), !dbg !8576
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #20, !dbg !8637
  call void @llvm.dbg.value(metadata i32 %72, metadata !8571, metadata !DIExpression()), !dbg !8576
  %73 = load i8*, i8** %5, align 4, !dbg !8639
  call void @llvm.dbg.value(metadata i8* %73, metadata !8566, metadata !DIExpression()), !dbg !8576
  %74 = load i32, i32* %6, align 4, !dbg !8640
  call void @llvm.dbg.value(metadata i32 %74, metadata !8570, metadata !DIExpression()), !dbg !8576
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #20, !dbg !8641
  br label %79, !dbg !8642

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #20, !dbg !8643
  call void @llvm.dbg.value(metadata i32 %76, metadata !8571, metadata !DIExpression()), !dbg !8576
  %77 = load i8*, i8** %5, align 4, !dbg !8645
  call void @llvm.dbg.value(metadata i8* %77, metadata !8566, metadata !DIExpression()), !dbg !8576
  %78 = load i32, i32* %6, align 4, !dbg !8646
  call void @llvm.dbg.value(metadata i32 %78, metadata !8570, metadata !DIExpression()), !dbg !8576
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #20, !dbg !8647
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !8635
  call void @llvm.dbg.value(metadata i32 %80, metadata !8571, metadata !DIExpression()), !dbg !8576
  %81 = call i32 @SaveAndSetIRQMask() #21, !dbg !8648
  call void @llvm.dbg.value(metadata i32 %81, metadata !8564, metadata !DIExpression()), !dbg !8576
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8649
  %82 = load i8, i8* %30, align 1, !dbg !8650
  %83 = zext i8 %82 to i32, !dbg !8651
  %84 = add i32 %45, 1, !dbg !8652
  %85 = add i32 %84, %83, !dbg !8653
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8654
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8655
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !8656
  %86 = load i16, i16* %34, align 2, !dbg !8657
  call void @SFI_MacEnable(i16 noundef zeroext %86) #20, !dbg !8658
  %87 = load i16, i16* %34, align 2, !dbg !8659
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #20, !dbg !8660
  call void @RestoreIRQMask(i32 noundef %81) #21, !dbg !8661
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !8662

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !8663
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #21, !dbg !8665
  call void @llvm.dbg.value(metadata i32 %94, metadata !8568, metadata !DIExpression()), !dbg !8576
  %95 = icmp eq i32 %94, 0, !dbg !8666
  br i1 %95, label %92, label %96, !dbg !8667, !llvm.loop !8668

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !8670
  call void @llvm.dbg.value(metadata i32 %97, metadata !8570, metadata !DIExpression()), !dbg !8576
  %98 = load i8*, i8** %5, align 4, !dbg !8671
  call void @llvm.dbg.value(metadata i8* %98, metadata !8566, metadata !DIExpression()), !dbg !8576
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !8671
  call void @llvm.dbg.value(metadata i8* %99, metadata !8566, metadata !DIExpression()), !dbg !8576
  store i8* %99, i8** %5, align 4, !dbg !8671
  %100 = sub i32 %37, %45, !dbg !8672
  call void @llvm.dbg.value(metadata i32 %100, metadata !8562, metadata !DIExpression()), !dbg !8576
  call void @llvm.dbg.value(metadata i32 undef, metadata !8565, metadata !DIExpression()), !dbg !8576
  %101 = icmp eq i32 %94, 1, !dbg !8673
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !8675
  br i1 %103, label %35, label %104, !dbg !8675, !llvm.loop !8676

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !8576
  call void @llvm.dbg.value(metadata i32 %105, metadata !8568, metadata !DIExpression()), !dbg !8576
  store i8 0, i8* %21, align 4, !dbg !8678
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8679
  %106 = icmp eq i32 %105, 1, !dbg !8680
  %107 = select i1 %106, i32 0, i32 %105, !dbg !8576
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #22, !dbg !8682
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #22, !dbg !8682
  ret i32 %107, !dbg !8682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #10 section ".ram_code" !dbg !8683 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8685, metadata !DIExpression()), !dbg !8687
  call void @llvm.dbg.value(metadata i32 undef, metadata !8686, metadata !DIExpression()), !dbg !8687
  ret i32 -12, !dbg !8688
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8689 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8691, metadata !DIExpression()), !dbg !8701
  call void @llvm.dbg.value(metadata i32 undef, metadata !8692, metadata !DIExpression()), !dbg !8701
  call void @llvm.dbg.value(metadata i32 0, metadata !8694, metadata !DIExpression()), !dbg !8701
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8702
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8695, metadata !DIExpression()), !dbg !8701
  %4 = bitcast i8* %0 to i32*, !dbg !8703
  %5 = load i32, i32* %4, align 4, !dbg !8703
  %6 = xor i32 %5, -1, !dbg !8703
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8703
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !8703
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !8703
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !8703
  %11 = icmp eq i32 %6, %10, !dbg !8703
  br i1 %11, label %13, label %12, !dbg !8706

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !8707
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #23, !dbg !8707
  unreachable, !dbg !8707

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8709
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !8709
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8709
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !8710
  %18 = load i8, i8* %17, align 1, !dbg !8710
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #21, !dbg !8711
  call void @llvm.dbg.value(metadata i32 %19, metadata !8696, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8701
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8712
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !8713
  %22 = load i8, i8* %21, align 1, !dbg !8713
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #21, !dbg !8714
  call void @llvm.dbg.value(metadata i32 %23, metadata !8697, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8701
  %24 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8715
  call void @llvm.dbg.value(metadata i32 %24, metadata !8694, metadata !DIExpression()), !dbg !8701
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8716
  %26 = bitcast i8* %25 to i8**, !dbg !8716
  %27 = load i8*, i8** %26, align 4, !dbg !8716
  %28 = load i8, i8* %27, align 1, !dbg !8717
  %29 = zext i8 %28 to i32, !dbg !8717
  %30 = and i32 %19, %29, !dbg !8718
  %31 = icmp eq i32 %30, 0, !dbg !8719
  br i1 %31, label %32, label %62, !dbg !8720

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !8697, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8701
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !8721
  %34 = load i8, i8* %33, align 1, !dbg !8721
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !8722
  %36 = load i8, i8* %35, align 1, !dbg !8722
  %37 = or i8 %36, %34, !dbg !8723
  call void @llvm.dbg.value(metadata i8 %37, metadata !8698, metadata !DIExpression()), !dbg !8724
  %38 = zext i8 %37 to i32, !dbg !8725
  %39 = and i32 %23, %38, !dbg !8727
  %40 = icmp eq i32 %39, 0, !dbg !8728
  br i1 %40, label %41, label %46, !dbg !8729

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !8730
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !8731
  br i1 %45, label %51, label %46, !dbg !8731

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8732, !range !2648
  %48 = icmp eq i8 %47, 0, !dbg !8732
  br i1 %48, label %49, label %50, !dbg !8736

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #21, !dbg !8737
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #23, !dbg !8737
  unreachable, !dbg !8737

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8739
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8740
  call void @llvm.dbg.value(metadata i32 -121, metadata !8693, metadata !DIExpression()), !dbg !8701
  br label %62, !dbg !8741

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !8742
  %53 = bitcast i8* %52 to i32*, !dbg !8742
  %54 = load i32, i32* %53, align 4, !dbg !8742
  %55 = and i32 %54, 2, !dbg !8745
  %56 = icmp eq i32 %55, 0, !dbg !8745
  br i1 %56, label %63, label %57, !dbg !8746

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !8747
  %59 = bitcast i8* %58 to i16*, !dbg !8747
  %60 = load i16, i16* %59, align 2, !dbg !8747
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #20, !dbg !8749
  %61 = load i16, i16* %59, align 2, !dbg !8750
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #20, !dbg !8751
  br label %63, !dbg !8752

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !8693, metadata !DIExpression()), !dbg !8701
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !8753
  br label %65, !dbg !8754

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8755
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !8756
  call void @llvm.dbg.value(metadata i32 0, metadata !8693, metadata !DIExpression()), !dbg !8701
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !8753
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !8757
  call void @llvm.dbg.value(metadata i32 %64, metadata !8693, metadata !DIExpression()), !dbg !8701
  br label %65, !dbg !8760

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !8701
  call void @llvm.dbg.value(metadata i32 %66, metadata !8693, metadata !DIExpression()), !dbg !8701
  ret i32 %66, !dbg !8761
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8762 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8764, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.value(metadata i32 undef, metadata !8765, metadata !DIExpression()), !dbg !8769
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8770
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8766, metadata !DIExpression()), !dbg !8769
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8771
  call void @llvm.dbg.value(metadata i32 %4, metadata !8768, metadata !DIExpression()), !dbg !8769
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #21, !dbg !8772
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !8773

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !8774
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !8776
  %12 = load i8, i8* %11, align 1, !dbg !8776
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #21, !dbg !8777
  call void @llvm.dbg.value(metadata i32 %13, metadata !8767, metadata !DIExpression()), !dbg !8769
  %14 = load i8*, i8** %8, align 4, !dbg !8778
  %15 = load i8, i8* %14, align 1, !dbg !8780
  %16 = zext i8 %15 to i32, !dbg !8780
  %17 = and i32 %13, %16, !dbg !8781
  %18 = icmp eq i32 %17, 0, !dbg !8782
  br i1 %18, label %19, label %9, !dbg !8783, !llvm.loop !8784

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !8786
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !8787
  ret i32 0, !dbg !8788
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8789 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8791, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.value(metadata i32 undef, metadata !8792, metadata !DIExpression()), !dbg !8794
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8795
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8793, metadata !DIExpression()), !dbg !8794
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8796
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #21, !dbg !8797
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8798
  ret i32 0, !dbg !8799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #10 section ".ram_code" !dbg !8800 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8802, metadata !DIExpression()), !dbg !8805
  call void @llvm.dbg.value(metadata i8* undef, metadata !8803, metadata !DIExpression()), !dbg !8805
  call void @llvm.dbg.value(metadata i32 undef, metadata !8804, metadata !DIExpression()), !dbg !8805
  ret i32 0, !dbg !8806
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !8807 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8809, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.value(metadata i32 %1, metadata !8810, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.value(metadata i8* undef, metadata !8811, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.value(metadata i8* %0, metadata !8812, metadata !DIExpression()), !dbg !8813
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !8814

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !8812, metadata !DIExpression()), !dbg !8813
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !8815
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !8815
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !8815
  %8 = tail call i32 %7(i8* noundef %0) #20, !dbg !8818
  br label %21, !dbg !8819

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !8820
  %11 = load i8, i8* %10, align 1, !dbg !8824
  %12 = icmp eq i8 %11, -62, !dbg !8825
  br i1 %12, label %13, label %21, !dbg !8826

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8827
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !8827
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !8827
  %17 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %16, i32 0, i32 0, !dbg !8828
  %18 = load i32, i32* %17, align 4, !dbg !8828
  %19 = icmp eq i32 %18, 262144, !dbg !8829
  br i1 %19, label %22, label %21, !dbg !8830

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !8831
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #23, !dbg !8831
  unreachable, !dbg !8831

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !8836

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !8813
  ret i32 %23, !dbg !8837
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8838 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8840, metadata !DIExpression()), !dbg !8843
  call void @llvm.dbg.value(metadata i8* %0, metadata !8841, metadata !DIExpression()), !dbg !8843
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8844
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !8844
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !8844
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !8846
  %6 = load i8, i8* %5, align 1, !dbg !8846
  %7 = icmp eq i8 %6, 0, !dbg !8847
  br i1 %7, label %19, label %8, !dbg !8848

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8849
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !8841, metadata !DIExpression()), !dbg !8843
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #21, !dbg !8850
  call void @llvm.dbg.value(metadata i32 %10, metadata !8842, metadata !DIExpression()), !dbg !8843
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8852
  %12 = bitcast i8* %11 to i8**, !dbg !8852
  %13 = load i8*, i8** %12, align 4, !dbg !8852
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !8854
  %15 = load i8, i8* %14, align 1, !dbg !8854
  %16 = zext i8 %15 to i32, !dbg !8854
  %17 = and i32 %10, %16, !dbg !8855
  %18 = icmp eq i32 %17, 0, !dbg !8855
  br i1 %18, label %19, label %20, !dbg !8856

19:                                               ; preds = %8, %1
  br label %20, !dbg !8857

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !8843
  ret i32 %21, !dbg !8858
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !8859 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8863, metadata !DIExpression()), !dbg !8871
  call void @llvm.dbg.value(metadata i32 %1, metadata !8864, metadata !DIExpression()), !dbg !8871
  call void @llvm.dbg.value(metadata i8 %2, metadata !8865, metadata !DIExpression()), !dbg !8871
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8872
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !8867, metadata !DIExpression()), !dbg !8871
  call void @llvm.dbg.value(metadata i32 0, metadata !8868, metadata !DIExpression()), !dbg !8871
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8873
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !8873
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !8873
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !8874
  %9 = load i8, i8* %8, align 1, !dbg !8874
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #21, !dbg !8875
  call void @llvm.dbg.value(metadata i32 %10, metadata !8870, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8871
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8876, !range !2648
  %12 = icmp eq i8 %11, 0, !dbg !8876
  br i1 %12, label %18, label %13, !dbg !8878

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8879, !range !2648
  %15 = icmp eq i8 %14, 0, !dbg !8879
  br i1 %15, label %16, label %17, !dbg !8883

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #21, !dbg !8884
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #23, !dbg !8884
  unreachable, !dbg !8884

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #21, !dbg !8886
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8887
  br label %42, !dbg !8888

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !8870, metadata !DIExpression()), !dbg !8871
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8889
  %20 = bitcast i8* %19 to i8**, !dbg !8889
  %21 = load i8*, i8** %20, align 4, !dbg !8889
  %22 = load i8, i8* %21, align 1, !dbg !8891
  %23 = zext i8 %22 to i32, !dbg !8891
  %24 = and i32 %10, %23, !dbg !8892
  %25 = icmp eq i32 %24, 0, !dbg !8893
  br i1 %25, label %26, label %42, !dbg !8894

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8895
  call void @llvm.dbg.value(metadata i32 %27, metadata !8866, metadata !DIExpression()), !dbg !8871
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8897
  %28 = inttoptr i32 %1 to i8*, !dbg !8898
  %29 = load volatile i8, i8* %28, align 1, !dbg !8899
  call void @llvm.dbg.value(metadata i8 %29, metadata !8869, metadata !DIExpression()), !dbg !8871
  %30 = icmp eq i8 %29, %2, !dbg !8900
  br i1 %30, label %39, label %31, !dbg !8902

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !8868, metadata !DIExpression()), !dbg !8871
  %32 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !8903
  br i1 %32, label %33, label %38, !dbg !8906

33:                                               ; preds = %31
  %34 = and i32 %1, -32, !dbg !8907
  %35 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %34) #20, !dbg !8909
  %36 = load volatile i8, i8* %28, align 1, !dbg !8910
  %37 = icmp eq i8 %36, %2, !dbg !8912
  br i1 %37, label %39, label %38, !dbg !8913

38:                                               ; preds = %33, %31
  call void @llvm.dbg.value(metadata i32 -1, metadata !8868, metadata !DIExpression()), !dbg !8871
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !8914
  br label %42, !dbg !8915

39:                                               ; preds = %33, %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !8868, metadata !DIExpression()), !dbg !8871
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !8914
  %40 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !8916
  %41 = icmp eq i32 %40, 0, !dbg !8919
  br i1 %41, label %42, label %44, !dbg !8920

42:                                               ; preds = %18, %17, %38, %39
  %43 = phi i32 [ 1, %39 ], [ -1, %38 ], [ 0, %17 ], [ 0, %18 ]
  br label %44, !dbg !8921

44:                                               ; preds = %39, %42
  %45 = phi i32 [ %43, %42 ], [ -1, %39 ], !dbg !8871
  ret i32 %45, !dbg !8922
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !8923 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8927, metadata !DIExpression()), !dbg !8930
  call void @llvm.dbg.value(metadata i32 %1, metadata !8928, metadata !DIExpression()), !dbg !8930
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !8931
  %4 = load i32, i32* %3, align 4, !dbg !8931
  %5 = and i32 %4, 16, !dbg !8933
  %6 = icmp eq i32 %5, 0, !dbg !8933
  br i1 %6, label %7, label %8, !dbg !8934

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #21, !dbg !8935
  br label %8, !dbg !8937

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8938
  call void @llvm.dbg.value(metadata i32 %9, metadata !8929, metadata !DIExpression()), !dbg !8930
  tail call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !8939
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8940
  %11 = load i16, i16* %10, align 2, !dbg !8940
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8941
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !8941
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !8942
  %15 = load i8, i8* %14, align 1, !dbg !8942
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !8943
  %17 = load i8, i8* %16, align 1, !dbg !8943
  %18 = zext i8 %17 to i32, !dbg !8944
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #20, !dbg !8945
  tail call void @RestoreIRQMask(i32 noundef %9) #21, !dbg !8946
  ret void, !dbg !8947
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !8948 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8950, metadata !DIExpression()), !dbg !8953
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8951, metadata !DIExpression()), !dbg !8953
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !8954
  %4 = load i8, i8* %3, align 1, !dbg !8954
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !8955

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !8956
  %7 = load i32, i32* %6, align 4, !dbg !8958
  %8 = or i32 %7, 4, !dbg !8958
  store i32 %8, i32* %6, align 4, !dbg !8958
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8959
  call void @llvm.dbg.value(metadata i32 0, metadata !8952, metadata !DIExpression()), !dbg !8953
  br label %18, !dbg !8960

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !8961
  %12 = load i32, i32* %11, align 4, !dbg !8962
  %13 = or i32 %12, 2, !dbg !8962
  store i32 %13, i32* %11, align 4, !dbg !8962
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8963
  call void @llvm.dbg.value(metadata i32 0, metadata !8952, metadata !DIExpression()), !dbg !8953
  call void @llvm.dbg.value(metadata i32 0, metadata !8952, metadata !DIExpression()), !dbg !8953
  br label %18, !dbg !8964

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8965
  call void @llvm.dbg.value(metadata i32 0, metadata !8952, metadata !DIExpression()), !dbg !8953
  br label %18, !dbg !8966

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !8952, metadata !DIExpression()), !dbg !8953
  tail call void @Flash_ReturnReady() #21, !dbg !8967
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.101, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.102, i32 0, i32 0)) #23, !dbg !8967
  unreachable, !dbg !8967

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !8952, metadata !DIExpression()), !dbg !8953
  ret i32 0, !dbg !8971
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !8972 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !8976, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8977, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i32 %2, metadata !8978, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i32 %3, metadata !8979, metadata !DIExpression()), !dbg !8981
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !8982
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !8984
  br i1 %7, label %33, label %8, !dbg !8984

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8985
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8985
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !8987
  br i1 %11, label %33, label %12, !dbg !8988

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8989
  %14 = load i8*, i8** %13, align 4, !dbg !8989
  %15 = icmp eq i8* %14, null, !dbg !8990
  br i1 %15, label %33, label %16, !dbg !8991

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !8992
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !8993
  store i8* %17, i8** %18, align 4, !dbg !8994
  %19 = trunc i32 %3 to i16, !dbg !8995
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !8996
  store i16 %19, i16* %20, align 2, !dbg !8997
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8998
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8999
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !9000
  store i8 -81, i8* %23, align 1, !dbg !9001
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !9002
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !9003
  %25 = load i8, i8* %24, align 1, !dbg !9004
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !9006

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #20, !dbg !9007
  br i1 %27, label %31, label %28, !dbg !9008

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !9009
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !9011
  store i8 -97, i8* %30, align 1, !dbg !9012
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !9013
  br label %31, !dbg !9014

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !9015
  call void @llvm.dbg.value(metadata i32 0, metadata !8980, metadata !DIExpression()), !dbg !8981
  br label %33, !dbg !9016

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !8981
  ret i32 %34, !dbg !9017
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !9018 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9022, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.value(metadata i8* %1, metadata !9023, metadata !DIExpression()), !dbg !9025
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !9026
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9027
  %5 = and i32 %4, 1, !dbg !9027
  %6 = icmp eq i32 %5, 0, !dbg !9029
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9030
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !9030
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !9031
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !9031
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !9031
  %12 = load i8, i8* %11, align 1, !dbg !9030
  store i8 %12, i8* %3, align 1, !dbg !9030
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9032
  %14 = load i16, i16* %13, align 2, !dbg !9032
  call void @llvm.dbg.value(metadata i8* %3, metadata !9024, metadata !DIExpression(DW_OP_deref)), !dbg !9025
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !9033
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !9034
  ret void, !dbg !9034
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !9035 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9039, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i8* %1, metadata !9040, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i8* %2, metadata !9041, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i16 %3, metadata !9042, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i16 %4, metadata !9043, metadata !DIExpression()), !dbg !9045
  %6 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9046
  call void @llvm.dbg.value(metadata i32 %6, metadata !9044, metadata !DIExpression()), !dbg !9045
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #20, !dbg !9047
  tail call void @RestoreIRQMask(i32 noundef %6) #21, !dbg !9048
  ret void, !dbg !9049
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !9050 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9052, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9055, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i32 0, metadata !9053, metadata !DIExpression()), !dbg !9058
  br label %6, !dbg !9059

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !9061
  call void @llvm.dbg.value(metadata i32 %3, metadata !9053, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.value(metadata i32 %8, metadata !9053, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9058
  %4 = icmp ult i32 %8, 4, !dbg !9063
  %5 = icmp eq i32 %3, 5, !dbg !9063
  br i1 %5, label %26, label %6, !dbg !9059, !llvm.loop !9064

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9053, metadata !DIExpression()), !dbg !9058
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9054, metadata !DIExpression()), !dbg !9058
  %12 = icmp eq i8 %10, 0, !dbg !9066
  br i1 %12, label %23, label %13, !dbg !9070

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9054, metadata !DIExpression()), !dbg !9058
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9071
  %16 = load i8, i8* %15, align 1, !dbg !9071
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !9074
  %18 = load i8, i8* %17, align 1, !dbg !9074
  %19 = icmp eq i8 %16, %18, !dbg !9075
  br i1 %19, label %20, label %23, !dbg !9076

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !9077
  call void @llvm.dbg.value(metadata i32 %21, metadata !9054, metadata !DIExpression()), !dbg !9058
  %22 = icmp eq i32 %21, %11, !dbg !9066
  br i1 %22, label %26, label %13, !dbg !9070, !llvm.loop !9078

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !9080
  %25 = icmp eq i32 %24, %11, !dbg !9081
  call void @llvm.dbg.value(metadata i32 %8, metadata !9053, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9058
  br i1 %25, label %26, label %2, !dbg !9083

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !9063
  ret i1 %27, !dbg !9084
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !9085 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !9097
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9097
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !9089, metadata !DIExpression()), !dbg !9098
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9096, metadata !DIExpression()), !dbg !9099
  %3 = load i16, i16* @cmem_index, align 2, !dbg !9100
  %4 = icmp sgt i16 %3, -1, !dbg !9102
  br i1 %4, label %34, label %5, !dbg !9103

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !9104
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #20, !dbg !9105
  call void @llvm.dbg.value(metadata i32 0, metadata !9087, metadata !DIExpression()), !dbg !9099
  br label %7, !dbg !9106

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9087, metadata !DIExpression()), !dbg !9099
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9088, metadata !DIExpression()), !dbg !9099
  %12 = icmp eq i8 %10, 0, !dbg !9108
  br i1 %12, label %24, label %13, !dbg !9113

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9088, metadata !DIExpression()), !dbg !9099
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9114
  %16 = load i8, i8* %15, align 1, !dbg !9114
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !9117
  %18 = load i16, i16* %17, align 2, !dbg !9117
  %19 = zext i8 %16 to i16, !dbg !9118
  %20 = icmp eq i16 %18, %19, !dbg !9118
  br i1 %20, label %21, label %24, !dbg !9119

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !9120
  call void @llvm.dbg.value(metadata i32 %22, metadata !9088, metadata !DIExpression()), !dbg !9099
  %23 = icmp eq i32 %22, %11, !dbg !9108
  br i1 %23, label %27, label %13, !dbg !9113, !llvm.loop !9121

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !9123
  %26 = icmp eq i32 %25, %11, !dbg !9124
  br i1 %26, label %27, label %29, !dbg !9126

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !9127
  store i16 %28, i16* @cmem_index, align 2, !dbg !9129
  br label %34, !dbg !9130

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !9131
  call void @llvm.dbg.value(metadata i32 %30, metadata !9087, metadata !DIExpression()), !dbg !9099
  %31 = icmp eq i32 %30, 5, !dbg !9132
  br i1 %31, label %32, label %7, !dbg !9106, !llvm.loop !9133

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !9135
  br label %34, !dbg !9135

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !9099
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9136
  ret i32 %36, !dbg !9136
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #10 !dbg !9137 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9141, metadata !DIExpression()), !dbg !9142
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !9143
  ret %struct.CMEMEntryID* %2, !dbg !9144
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !9145 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !9149, metadata !DIExpression()), !dbg !9156
  call void @llvm.dbg.value(metadata i8* undef, metadata !9150, metadata !DIExpression()), !dbg !9156
  call void @llvm.dbg.value(metadata i16* %2, metadata !9151, metadata !DIExpression()), !dbg !9156
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9157
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !9157
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9157
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !9154, metadata !DIExpression()), !dbg !9158
  call void @llvm.dbg.value(metadata i8 -81, metadata !9152, metadata !DIExpression()), !dbg !9159
  store i8 -81, i8* %4, align 1, !dbg !9160
  call void @llvm.dbg.value(metadata i8* %4, metadata !9152, metadata !DIExpression(DW_OP_deref)), !dbg !9159
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9161
  %7 = load i8, i8* %6, align 1, !dbg !9162
  %8 = add i8 %7, 1, !dbg !9164
  %9 = icmp ult i8 %8, 2, !dbg !9164
  br i1 %9, label %12, label %10, !dbg !9164

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #21, !dbg !9165
  br i1 %11, label %13, label %12, !dbg !9166

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !9152, metadata !DIExpression()), !dbg !9159
  store i8 -97, i8* %4, align 1, !dbg !9167
  call void @llvm.dbg.value(metadata i8* %4, metadata !9152, metadata !DIExpression(DW_OP_deref)), !dbg !9159
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9169
  br label %13, !dbg !9170

13:                                               ; preds = %12, %10
  br label %14, !dbg !9171

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !9155, metadata !DIExpression()), !dbg !9159
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !9173
  %17 = load i8, i8* %16, align 1, !dbg !9173
  %18 = zext i8 %17 to i16, !dbg !9173
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !9176
  store i16 %18, i16* %19, align 2, !dbg !9177
  %20 = add nuw nsw i32 %15, 1, !dbg !9178
  call void @llvm.dbg.value(metadata i32 %20, metadata !9155, metadata !DIExpression()), !dbg !9159
  %21 = icmp eq i32 %20, 3, !dbg !9179
  br i1 %21, label %22, label %14, !dbg !9171, !llvm.loop !9180

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9182
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9182
  ret void, !dbg !9183
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 section ".ram_code" !dbg !9184 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9186, metadata !DIExpression()), !dbg !9190
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9189, metadata !DIExpression()), !dbg !9190
  call void @llvm.dbg.value(metadata i32 0, metadata !9187, metadata !DIExpression()), !dbg !9190
  br label %6, !dbg !9191

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !9193
  call void @llvm.dbg.value(metadata i32 %3, metadata !9187, metadata !DIExpression()), !dbg !9190
  call void @llvm.dbg.value(metadata i32 %8, metadata !9187, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9190
  %4 = icmp ult i32 %8, 4, !dbg !9195
  %5 = icmp eq i32 %3, 5, !dbg !9195
  br i1 %5, label %26, label %6, !dbg !9191, !llvm.loop !9196

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9187, metadata !DIExpression()), !dbg !9190
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9188, metadata !DIExpression()), !dbg !9190
  %12 = icmp eq i8 %10, 0, !dbg !9198
  br i1 %12, label %23, label %13, !dbg !9202

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9188, metadata !DIExpression()), !dbg !9190
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9203
  %16 = load i8, i8* %15, align 1, !dbg !9203
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !9206
  %18 = load i8, i8* %17, align 1, !dbg !9206
  %19 = icmp eq i8 %16, %18, !dbg !9207
  br i1 %19, label %20, label %23, !dbg !9208

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !9209
  call void @llvm.dbg.value(metadata i32 %21, metadata !9188, metadata !DIExpression()), !dbg !9190
  %22 = icmp eq i32 %21, %11, !dbg !9198
  br i1 %22, label %26, label %13, !dbg !9202, !llvm.loop !9210

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !9212
  %25 = icmp eq i32 %24, %11, !dbg !9213
  call void @llvm.dbg.value(metadata i32 %8, metadata !9187, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9190
  br i1 %25, label %26, label %2, !dbg !9215

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !9195
  ret i1 %27, !dbg !9216
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !9217 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !9223
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9223
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !9221, metadata !DIExpression()), !dbg !9224
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9222, metadata !DIExpression()), !dbg !9225
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !9226
  %4 = icmp sgt i16 %3, -1, !dbg !9228
  br i1 %4, label %34, label %5, !dbg !9229

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !9230
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #21, !dbg !9231
  call void @llvm.dbg.value(metadata i32 0, metadata !9219, metadata !DIExpression()), !dbg !9225
  br label %7, !dbg !9232

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9219, metadata !DIExpression()), !dbg !9225
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9220, metadata !DIExpression()), !dbg !9225
  %12 = icmp eq i8 %10, 0, !dbg !9234
  br i1 %12, label %24, label %13, !dbg !9239

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9220, metadata !DIExpression()), !dbg !9225
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9240
  %16 = load i8, i8* %15, align 1, !dbg !9240
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !9243
  %18 = load i16, i16* %17, align 2, !dbg !9243
  %19 = zext i8 %16 to i16, !dbg !9244
  %20 = icmp eq i16 %18, %19, !dbg !9244
  br i1 %20, label %21, label %24, !dbg !9245

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !9246
  call void @llvm.dbg.value(metadata i32 %22, metadata !9220, metadata !DIExpression()), !dbg !9225
  %23 = icmp eq i32 %22, %11, !dbg !9234
  br i1 %23, label %27, label %13, !dbg !9239, !llvm.loop !9247

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !9249
  %26 = icmp eq i32 %25, %11, !dbg !9250
  br i1 %26, label %27, label %29, !dbg !9252

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !9253
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !9255
  br label %34, !dbg !9256

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !9257
  call void @llvm.dbg.value(metadata i32 %30, metadata !9219, metadata !DIExpression()), !dbg !9225
  %31 = icmp eq i32 %30, 5, !dbg !9258
  br i1 %31, label %32, label %7, !dbg !9232, !llvm.loop !9259

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !9261
  br label %34, !dbg !9261

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !9225
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9262
  ret i32 %36, !dbg !9262
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !9263 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !9271, metadata !DIExpression()), !dbg !9279
  call void @llvm.dbg.value(metadata i16* %1, metadata !9272, metadata !DIExpression()), !dbg !9279
  call void @llvm.dbg.value(metadata i16* %2, metadata !9273, metadata !DIExpression()), !dbg !9279
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9280
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !9280
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9280
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !9277, metadata !DIExpression()), !dbg !9281
  call void @llvm.dbg.value(metadata i8 -81, metadata !9275, metadata !DIExpression()), !dbg !9282
  store i8 -81, i8* %4, align 1, !dbg !9283
  %7 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9284
  call void @llvm.dbg.value(metadata i32 %7, metadata !9274, metadata !DIExpression()), !dbg !9279
  call void @llvm.dbg.value(metadata i8* %4, metadata !9275, metadata !DIExpression(DW_OP_deref)), !dbg !9282
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9285
  call void @RestoreIRQMask(i32 noundef %7) #20, !dbg !9286
  %8 = load i8, i8* %6, align 1, !dbg !9287
  %9 = add i8 %8, 1, !dbg !9289
  %10 = icmp ult i8 %9, 2, !dbg !9289
  br i1 %10, label %13, label %11, !dbg !9289

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #20, !dbg !9290
  br i1 %12, label %15, label %13, !dbg !9291

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !9275, metadata !DIExpression()), !dbg !9282
  store i8 -97, i8* %4, align 1, !dbg !9292
  %14 = call i32 @SaveAndSetIRQMask() #20, !dbg !9294
  call void @llvm.dbg.value(metadata i32 %14, metadata !9274, metadata !DIExpression()), !dbg !9279
  call void @llvm.dbg.value(metadata i8* %4, metadata !9275, metadata !DIExpression(DW_OP_deref)), !dbg !9282
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9295
  call void @RestoreIRQMask(i32 noundef %14) #20, !dbg !9296
  br label %15, !dbg !9297

15:                                               ; preds = %13, %11
  br label %16, !dbg !9298

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !9278, metadata !DIExpression()), !dbg !9282
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !9300
  %19 = load i8, i8* %18, align 1, !dbg !9300
  %20 = zext i8 %19 to i16, !dbg !9300
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !9303
  store i16 %20, i16* %21, align 2, !dbg !9304
  %22 = add nuw nsw i32 %17, 1, !dbg !9305
  call void @llvm.dbg.value(metadata i32 %22, metadata !9278, metadata !DIExpression()), !dbg !9282
  %23 = icmp eq i32 %22, 3, !dbg !9306
  br i1 %23, label %24, label %16, !dbg !9298, !llvm.loop !9307

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9309
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9309
  ret void, !dbg !9310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #10 !dbg !9311 {
  ret i32 3932160, !dbg !9312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #10 !dbg !9313 {
  ret i32 4194304, !dbg !9314
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !9315 {
  %1 = tail call i32 @ComboMem_Initialize() #20, !dbg !9316
  ret void, !dbg !9317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #10 !dbg !9318 {
  ret void, !dbg !9319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #10 !dbg !9320 {
  ret void, !dbg !9321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #10 !dbg !9322 {
  ret i32 3932160, !dbg !9323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #10 !dbg !9324 {
  ret i32 262144, !dbg !9325
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !9326 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #20, !dbg !9327
  ret void, !dbg !9328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #10 !dbg !9329 {
  ret i32 134217728, !dbg !9330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #10 !dbg !9331 {
  ret i32 4194304, !dbg !9332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #6 !dbg !9333 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !9334
  ret i32 134217728, !dbg !9335
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !9336 {
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !9337
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9338
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9339
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !9340
  %4 = load i16, i16* %3, align 2, !dbg !9340
  %5 = zext i16 %4 to i32, !dbg !9338
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9341
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.hal_cache_region_config_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #20, !dbg !9342
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !9343
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !9344
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !9345
  ret i32 0, !dbg !9346
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !9347 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !9350
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !9351
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !9352
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !9353
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !9354
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9355
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !9356
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !9357
  %5 = load i32, i32* %4, align 4, !dbg !9357
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #20, !dbg !9358
  call void @llvm.dbg.value(metadata i32 %6, metadata !9349, metadata !DIExpression()), !dbg !9359
  %7 = icmp eq i32 %6, -120, !dbg !9360
  %8 = select i1 %7, i32 5, i32 0, !dbg !9359
  ret i32 %8, !dbg !9362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #10 !dbg !9363 {
  ret i8 1, !dbg !9365
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !9366 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9370, metadata !DIExpression()), !dbg !9373
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9372, metadata !DIExpression()), !dbg !9373
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9374
  call void @llvm.dbg.value(metadata i32 %2, metadata !9371, metadata !DIExpression()), !dbg !9373
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9372, metadata !DIExpression()), !dbg !9373
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !9375
  %4 = load i32, i32* %3, align 4, !dbg !9375
  ret i32 %4, !dbg !9376
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !9377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9381, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !9382, metadata !DIExpression()), !dbg !9384
  %3 = and i32 %0, 134217727, !dbg !9385
  call void @llvm.dbg.value(metadata i32 %3, metadata !9381, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.value(metadata i16 0, metadata !9383, metadata !DIExpression()), !dbg !9384
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 1, i32 1, !dbg !9386
  %5 = load i32, i32* %4, align 4, !dbg !9386
  %6 = icmp eq i32 %5, 0, !dbg !9389
  br i1 %6, label %25, label %7, !dbg !9390

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !9383, metadata !DIExpression()), !dbg !9384
  %11 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %9, i32 0, !dbg !9391
  %12 = load i32, i32* %11, align 4, !dbg !9391
  %13 = icmp ult i32 %3, %12, !dbg !9394
  br i1 %13, label %18, label %14, !dbg !9395

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %8, i32 0, !dbg !9396
  %16 = load i32, i32* %15, align 4, !dbg !9396
  %17 = icmp ult i32 %3, %16, !dbg !9397
  br i1 %17, label %25, label %18, !dbg !9398

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !9399
  call void @llvm.dbg.value(metadata i16 %19, metadata !9383, metadata !DIExpression()), !dbg !9384
  %20 = zext i16 %19 to i32, !dbg !9400
  %21 = add nuw nsw i32 %20, 1, !dbg !9401
  %22 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %21, i32 1, !dbg !9386
  %23 = load i32, i32* %22, align 4, !dbg !9386
  %24 = icmp eq i32 %23, 0, !dbg !9389
  br i1 %24, label %25, label %7, !dbg !9390, !llvm.loop !9402

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !9400
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %26, i32 1, !dbg !9404
  %28 = load i32, i32* %27, align 4, !dbg !9404
  ret i32 %28, !dbg !9405
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #12 !dbg !9406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9408, metadata !DIExpression()), !dbg !9409
  %2 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9410
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef %2) #21, !dbg !9411
  ret i32 %3, !dbg !9412
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !9413 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9415, metadata !DIExpression()), !dbg !9418
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9419
  call void @llvm.dbg.value(metadata i32 %2, metadata !9416, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9417, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9417, metadata !DIExpression()), !dbg !9418
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !9420
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef nonnull %3) #21, !dbg !9421
  ret i32 %4, !dbg !9422
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !9423 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !9429, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i32 0, metadata !9430, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i32 0, metadata !9431, metadata !DIExpression()), !dbg !9432
  %2 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !9433
  %3 = load i32, i32* %2, align 4, !dbg !9433
  %4 = icmp eq i32 %3, 0, !dbg !9436
  br i1 %4, label %17, label %5, !dbg !9437

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9431, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i32 %8, metadata !9430, metadata !DIExpression()), !dbg !9432
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %7, i32 1, !dbg !9438
  %10 = load i32, i32* %9, align 4, !dbg !9438
  %11 = mul i32 %10, %6, !dbg !9440
  %12 = add i32 %11, %8, !dbg !9441
  call void @llvm.dbg.value(metadata i32 %12, metadata !9430, metadata !DIExpression()), !dbg !9432
  %13 = add i32 %7, 1, !dbg !9442
  call void @llvm.dbg.value(metadata i32 %13, metadata !9431, metadata !DIExpression()), !dbg !9432
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 0, !dbg !9433
  %15 = load i32, i32* %14, align 4, !dbg !9433
  %16 = icmp eq i32 %15, 0, !dbg !9436
  br i1 %16, label %17, label %5, !dbg !9437, !llvm.loop !9443

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !9432
  ret i32 %18, !dbg !9445
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !9446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9450, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.value(metadata i32 %1, metadata !9451, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9452, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !9453, metadata !DIExpression()), !dbg !9459
  %5 = add i32 %1, %0, !dbg !9460
  call void @llvm.dbg.value(metadata i32 %5, metadata !9458, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.value(metadata i32 %0, metadata !9454, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.value(metadata i32 0, metadata !9455, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.value(metadata i32 0, metadata !9457, metadata !DIExpression()), !dbg !9459
  %6 = icmp ugt i32 %5, %0, !dbg !9461
  br i1 %6, label %7, label %34, !dbg !9464

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9457, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.value(metadata i32 %9, metadata !9454, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.value(metadata i32 %10, metadata !9455, metadata !DIExpression()), !dbg !9459
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.hal_cache_region_config_t* noundef %3) #21, !dbg !9465
  call void @llvm.dbg.value(metadata i32 %11, metadata !9456, metadata !DIExpression()), !dbg !9459
  %12 = icmp eq i32 %8, 0, !dbg !9467
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 0, !dbg !9469
  br i1 %12, label %14, label %16, !dbg !9470

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !9471
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !9473
  store i32 1, i32* %15, align 4, !dbg !9474
  br label %29, !dbg !9475

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !9476
  %18 = icmp eq i32 %11, %17, !dbg !9478
  br i1 %18, label %19, label %23, !dbg !9479

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !9480
  %21 = load i32, i32* %20, align 4, !dbg !9482
  %22 = add i32 %21, 1, !dbg !9482
  store i32 %22, i32* %20, align 4, !dbg !9482
  br label %29, !dbg !9483

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !9484
  call void @llvm.dbg.value(metadata i32 %24, metadata !9455, metadata !DIExpression()), !dbg !9459
  %25 = icmp eq i32 %24, 9, !dbg !9486
  br i1 %25, label %34, label %26, !dbg !9488

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 0, !dbg !9489
  store i32 %11, i32* %27, align 4, !dbg !9490
  %28 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 1, !dbg !9491
  store i32 1, i32* %28, align 4, !dbg !9492
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !9493
  call void @llvm.dbg.value(metadata i32 %30, metadata !9455, metadata !DIExpression()), !dbg !9459
  %31 = add i32 %11, %9, !dbg !9494
  call void @llvm.dbg.value(metadata i32 %31, metadata !9454, metadata !DIExpression()), !dbg !9459
  %32 = add i32 %8, 1, !dbg !9495
  call void @llvm.dbg.value(metadata i32 %32, metadata !9457, metadata !DIExpression()), !dbg !9459
  %33 = icmp ult i32 %31, %5, !dbg !9461
  br i1 %33, label %7, label %34, !dbg !9464, !llvm.loop !9496

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !9459
  ret i32 %35, !dbg !9498
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2) local_unnamed_addr #0 !dbg !9499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9503, metadata !DIExpression()), !dbg !9506
  call void @llvm.dbg.value(metadata i32 %1, metadata !9504, metadata !DIExpression()), !dbg !9506
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9505, metadata !DIExpression()), !dbg !9506
  %4 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !9507
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #20, !dbg !9508
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9509
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef %6) #21, !dbg !9510
  ret i32 %7, !dbg !9511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !9512 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9514, metadata !DIExpression()), !dbg !9517
  call void @llvm.dbg.value(metadata i32 %1, metadata !9515, metadata !DIExpression()), !dbg !9517
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9516, metadata !DIExpression()), !dbg !9517
  ret i32 0, !dbg !9518
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !9519 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9521, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.value(metadata i32 %1, metadata !9522, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9523, metadata !DIExpression()), !dbg !9526
  %4 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9527
  call void @llvm.dbg.value(metadata i32 %4, metadata !9524, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9525, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9525, metadata !DIExpression()), !dbg !9526
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !9528
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef nonnull %5) #21, !dbg !9529
  ret i32 %6, !dbg !9530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !9531 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9533, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.value(metadata i32 %1, metadata !9534, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9535, metadata !DIExpression()), !dbg !9536
  ret i32 0, !dbg !9537
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !9538 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9540, metadata !DIExpression()), !dbg !9543
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9544
  call void @llvm.dbg.value(metadata i32 %2, metadata !9541, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9542, metadata !DIExpression()), !dbg !9543
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9542, metadata !DIExpression()), !dbg !9543
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !9545
  %4 = load i32, i32* %3, align 4, !dbg !9545
  ret i32 %4, !dbg !9546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.hal_cache_region_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !9547 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !9551, metadata !DIExpression()), !dbg !9554
  call void @llvm.dbg.value(metadata i32* %1, metadata !9552, metadata !DIExpression()), !dbg !9554
  call void @llvm.dbg.value(metadata i32 %2, metadata !9553, metadata !DIExpression()), !dbg !9554
  %4 = load i32, i32* %1, align 4, !dbg !9555
  %5 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 0, !dbg !9557
  %6 = load i32, i32* %5, align 4, !dbg !9557
  %7 = icmp eq i32 %6, %2, !dbg !9558
  br i1 %7, label %8, label %12, !dbg !9559

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 1, !dbg !9560
  %10 = load i32, i32* %9, align 4, !dbg !9562
  %11 = add i32 %10, 1, !dbg !9562
  store i32 %11, i32* %9, align 4, !dbg !9562
  br label %17, !dbg !9563

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !9564
  store i32 %13, i32* %1, align 4, !dbg !9564
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 1, !dbg !9566
  store i32 1, i32* %14, align 4, !dbg !9567
  %15 = load i32, i32* %1, align 4, !dbg !9568
  %16 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %15, i32 0, !dbg !9569
  store i32 %2, i32* %16, align 4, !dbg !9570
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !9571
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !9572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9576, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 %1, metadata !9577, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9578, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !9579, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 0, metadata !9580, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 0, metadata !9581, metadata !DIExpression()), !dbg !9585
  %5 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !9586
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #20, !dbg !9587
  call void @llvm.dbg.value(metadata i32 0, metadata !9584, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 0, metadata !9583, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 0, metadata !9581, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 0, metadata !9580, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 %0, metadata !9576, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 %1, metadata !9577, metadata !DIExpression()), !dbg !9585
  %7 = icmp eq i32 %1, 0, !dbg !9588
  br i1 %7, label %53, label %8, !dbg !9591

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9584, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 %10, metadata !9583, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 %11, metadata !9581, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 %12, metadata !9580, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 %13, metadata !9576, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 %14, metadata !9577, metadata !DIExpression()), !dbg !9585
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %12, i32 1, !dbg !9592
  %16 = load i32, i32* %15, align 4, !dbg !9592
  %17 = icmp ult i32 %9, %16, !dbg !9595
  %18 = xor i1 %17, true, !dbg !9596
  %19 = zext i1 %18 to i32, !dbg !9596
  %20 = add i32 %12, %19, !dbg !9596
  call void @llvm.dbg.value(metadata i32 undef, metadata !9584, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 %20, metadata !9580, metadata !DIExpression()), !dbg !9585
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %20, i32 0, !dbg !9597
  %22 = load i32, i32* %21, align 4, !dbg !9597
  %23 = add i32 %22, %10, !dbg !9598
  call void @llvm.dbg.value(metadata i32 %23, metadata !9583, metadata !DIExpression()), !dbg !9585
  %24 = icmp ult i32 %23, %13, !dbg !9599
  br i1 %24, label %46, label %25, !dbg !9601

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !9602
  call void @llvm.dbg.value(metadata i32 %26, metadata !9582, metadata !DIExpression()), !dbg !9585
  %27 = icmp ult i32 %14, %26, !dbg !9604
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !9606
  call void @llvm.dbg.value(metadata i32 %28, metadata !9582, metadata !DIExpression()), !dbg !9585
  %29 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 0, !dbg !9607
  %30 = load i32, i32* %29, align 4, !dbg !9607
  %31 = icmp eq i32 %30, %28, !dbg !9609
  br i1 %31, label %32, label %36, !dbg !9610

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 1, !dbg !9611
  %34 = load i32, i32* %33, align 4, !dbg !9613
  %35 = add i32 %34, 1, !dbg !9613
  store i32 %35, i32* %33, align 4, !dbg !9613
  br label %42, !dbg !9614

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !9615
  %38 = zext i1 %37 to i32, !dbg !9618
  %39 = add nsw i32 %11, %38, !dbg !9618
  call void @llvm.dbg.value(metadata i32 %39, metadata !9581, metadata !DIExpression()), !dbg !9585
  %40 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 1, !dbg !9619
  store i32 1, i32* %40, align 4, !dbg !9620
  %41 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 0, !dbg !9621
  store i32 %28, i32* %41, align 4, !dbg !9622
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !9585
  call void @llvm.dbg.value(metadata i32 %43, metadata !9581, metadata !DIExpression()), !dbg !9585
  %44 = add i32 %28, %13, !dbg !9623
  call void @llvm.dbg.value(metadata i32 %44, metadata !9576, metadata !DIExpression()), !dbg !9585
  %45 = sub i32 %14, %28, !dbg !9624
  call void @llvm.dbg.value(metadata i32 %45, metadata !9577, metadata !DIExpression()), !dbg !9585
  br label %46, !dbg !9625

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !9626
  call void @llvm.dbg.value(metadata i32 %49, metadata !9581, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 %48, metadata !9576, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 %47, metadata !9577, metadata !DIExpression()), !dbg !9585
  %50 = add nuw i32 %9, 1, !dbg !9627
  %51 = select i1 %17, i32 %50, i32 1, !dbg !9627
  call void @llvm.dbg.value(metadata i32 %51, metadata !9584, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 %23, metadata !9583, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 %20, metadata !9580, metadata !DIExpression()), !dbg !9585
  %52 = icmp eq i32 %47, 0, !dbg !9588
  br i1 %52, label %53, label %8, !dbg !9591, !llvm.loop !9628

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !9630
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !9631 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9635
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9636
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !9635
  store %struct.hal_cache_region_config_t* %3, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9637
  %4 = tail call i32 @custom_get_fat_addr() #20, !dbg !9638
  %5 = tail call i32 @custom_get_fat_len() #20, !dbg !9639
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9640
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !9641
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !9640
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0), %struct.hal_cache_region_config_t* noundef nonnull %8) #21, !dbg !9642
  %10 = tail call i32 @custom_get_fat_addr() #20, !dbg !9643
  %11 = tail call i32 @custom_get_fat_len() #20, !dbg !9644
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0)) #21, !dbg !9645
  call void @llvm.dbg.value(metadata i32 %12, metadata !9633, metadata !DIExpression()), !dbg !9646
  %13 = icmp eq i32 %12, 0, !dbg !9647
  br i1 %13, label %14, label %46, !dbg !9649

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !9634, metadata !DIExpression()), !dbg !9646
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !9650
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !9652
  call void @llvm.dbg.value(metadata i32 0, metadata !9634, metadata !DIExpression()), !dbg !9646
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !9653
  %16 = icmp eq i32 %15, 0, !dbg !9655
  br i1 %16, label %34, label %17, !dbg !9656

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !9634, metadata !DIExpression()), !dbg !9646
  %22 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !9657
  %23 = load i32, i32* %22, align 4, !dbg !9657
  %24 = add i32 %20, %23, !dbg !9659
  %25 = icmp ugt i32 %18, %21, !dbg !9660
  br i1 %25, label %26, label %27, !dbg !9662

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !9663
  br label %27, !dbg !9665

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !9666
  call void @llvm.dbg.value(metadata i32 %29, metadata !9634, metadata !DIExpression()), !dbg !9646
  %30 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !9653
  %31 = load i32, i32* %30, align 4, !dbg !9653
  %32 = icmp eq i32 %31, 0, !dbg !9655
  br i1 %32, label %33, label %17, !dbg !9656, !llvm.loop !9667

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !9659
  br label %34, !dbg !9656

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !9669
  %36 = mul i32 %35, -5, !dbg !9670
  %37 = add i32 %36, 262144, !dbg !9671
  %38 = lshr i32 %37, 9, !dbg !9672
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !9673
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #21, !dbg !9674
  call void @llvm.dbg.value(metadata i32 0, metadata !9633, metadata !DIExpression()), !dbg !9646
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !9675
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !9676
  %42 = load i8, i8* %41, align 1, !dbg !9676
  %43 = icmp eq i8 %42, 3, !dbg !9677
  br i1 %43, label %44, label %46, !dbg !9677

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #21, !dbg !9678
  call void @llvm.dbg.value(metadata i32 %45, metadata !9633, metadata !DIExpression()), !dbg !9646
  br label %46, !dbg !9680

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !9646
  ret i32 %47, !dbg !9681
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !9682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9686, metadata !DIExpression()), !dbg !9687
  %2 = icmp eq i32 %0, 0, !dbg !9688
  br i1 %2, label %3, label %9, !dbg !9690

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #20, !dbg !9691
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !9693
  %5 = icmp slt i32 %4, 0, !dbg !9694
  br i1 %5, label %6, label %7, !dbg !9696

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !9697
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.117, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #23, !dbg !9697
  unreachable, !dbg !9697

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #20, !dbg !9702
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !9703
  br label %9, !dbg !9704

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9705
  ret void, !dbg !9706
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !9707 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !9708
  %1 = tail call i32 @CMEM_Init_NOR() #21, !dbg !9709
  ret i32 %1, !dbg !9710
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !9711 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !9714
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9715
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9716
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !9717
  %4 = load i16, i16* %3, align 2, !dbg !9717
  %5 = zext i16 %4 to i32, !dbg !9715
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9718
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !9719
  store %struct.hal_cache_region_config_t* %6, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9720
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !9721
  %8 = bitcast %struct.hal_cache_region_config_t* %7 to i8*, !dbg !9721
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.hal_cache_region_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #20, !dbg !9722
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !9723
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !9724
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !9725
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !9726
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !9727
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9728
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !9729
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !9730
  %13 = load i32, i32* %12, align 4, !dbg !9730
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #20, !dbg !9731
  call void @llvm.dbg.value(metadata i32 %14, metadata !9713, metadata !DIExpression()), !dbg !9732
  %15 = icmp eq i32 %14, -120, !dbg !9733
  br i1 %15, label %16, label %17, !dbg !9736

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !9737
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.117, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #23, !dbg !9737
  unreachable, !dbg !9737

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0)) #21, !dbg !9739
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !9740
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #21, !dbg !9741
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !9742
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !9743
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9744
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !9745
  ret i32 0, !dbg !9746
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #10 !dbg !9747 {
  ret void, !dbg !9748
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !9749 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %1, metadata !9751, metadata !DIExpression()), !dbg !9753
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !9754
  br i1 %2, label %4, label %3, !dbg !9756

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !9757
  br label %4, !dbg !9759

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !9760
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !9760
  ret i32 %5, !dbg !9761
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !9762 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9765
  call void @llvm.dbg.value(metadata i32 %1, metadata !9764, metadata !DIExpression()), !dbg !9766
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !9767
  br i1 %2, label %3, label %4, !dbg !9769

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !9770
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !9772
  ret void, !dbg !9773

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !9774
  tail call void @Flash_ReturnReady() #20, !dbg !9776
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.123, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.124, i32 0, i32 0)) #23, !dbg !9776
  unreachable, !dbg !9776
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #10 !dbg !9780 {
  ret void, !dbg !9781
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !9782 {
  br label %1, !dbg !9785

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #21, !dbg !9786
  call void @llvm.dbg.value(metadata i32 %2, metadata !9784, metadata !DIExpression()), !dbg !9788
  %3 = icmp eq i32 %2, 0, !dbg !9789
  br i1 %3, label %4, label %1, !dbg !9790, !llvm.loop !9791

4:                                                ; preds = %1
  ret void, !dbg !9793
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !9794 {
  tail call void @FreeFDMLock() #21, !dbg !9795
  ret void, !dbg !9796
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9797 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9840, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata i32 %1, metadata !9841, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata i8* %2, metadata !9842, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.value(metadata i32 %3, metadata !9843, metadata !DIExpression()), !dbg !9846
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !9847
  %6 = load i32, i32* %5, align 4, !dbg !9847
  call void @llvm.dbg.value(metadata i32 %6, metadata !9845, metadata !DIExpression()), !dbg !9846
  %7 = icmp ule i32 %6, %1, !dbg !9848
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !9850
  br i1 %10, label %26, label %11, !dbg !9850

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9851
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !9851
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !9851
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !9852
  %16 = load i8*, i8** %15, align 4, !dbg !9852
  %17 = ptrtoint i8* %16 to i32, !dbg !9853
  %18 = add i32 %17, %1, !dbg !9854
  call void @llvm.dbg.value(metadata i32 %18, metadata !9844, metadata !DIExpression()), !dbg !9846
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9855
  %20 = load i8, i8* %19, align 4, !dbg !9855, !range !2648
  %21 = icmp eq i8 %20, 0, !dbg !9855
  br i1 %21, label %22, label %23, !dbg !9857

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !9858
  br label %23, !dbg !9860

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #21, !dbg !9861
  %24 = inttoptr i32 %18 to i8*, !dbg !9862
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #20, !dbg !9863
  tail call void @release_FDM_lock() #21, !dbg !9864
  br label %26, !dbg !9865

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !9846
  ret i32 %27, !dbg !9866
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !9867 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9871, metadata !DIExpression()), !dbg !9873
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9874
  %3 = load i8, i8* %2, align 4, !dbg !9874, !range !2648
  %4 = icmp eq i8 %3, 0, !dbg !9874
  br i1 %4, label %5, label %18, !dbg !9876

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #21, !dbg !9877
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !9878
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !9878
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !9879
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !9879
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9880
  %11 = load i8*, i8** %10, align 4, !dbg !9880
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !9881
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !9882
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #20, !dbg !9883
  call void @llvm.dbg.value(metadata i32 %14, metadata !9872, metadata !DIExpression()), !dbg !9873
  tail call void @release_FDM_lock() #21, !dbg !9884
  %15 = icmp slt i32 %14, 0, !dbg !9885
  br i1 %15, label %16, label %17, !dbg !9887

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !9888
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.123, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.124, i32 0, i32 0)) #23, !dbg !9888
  unreachable, !dbg !9888

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !9893
  br label %18, !dbg !9894

18:                                               ; preds = %1, %17
  ret void, !dbg !9894
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9895 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9897, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata i32 %1, metadata !9898, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata i8* %2, metadata !9899, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata i32 %3, metadata !9900, metadata !DIExpression()), !dbg !9918
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !9919
  %7 = load i32, i32* %6, align 4, !dbg !9919
  call void @llvm.dbg.value(metadata i32 %7, metadata !9903, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata i32 0, metadata !9904, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata i32 0, metadata !9905, metadata !DIExpression()), !dbg !9918
  %8 = icmp ugt i32 %7, %1, !dbg !9920
  br i1 %8, label %9, label %101, !dbg !9922

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !9923
  %11 = icmp ugt i32 %10, %7, !dbg !9925
  br i1 %11, label %101, label %12, !dbg !9926

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9927
  %14 = load i8, i8* %13, align 4, !dbg !9927, !range !2648
  %15 = icmp eq i8 %14, 0, !dbg !9927
  br i1 %15, label %16, label %17, !dbg !9929

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !9930
  br label %17, !dbg !9932

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #21, !dbg !9933
  %18 = bitcast i16* %5 to i8*, !dbg !9934
  call void @llvm.dbg.value(metadata i32 0, metadata !9904, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata i32 0, metadata !9905, metadata !DIExpression()), !dbg !9918
  %19 = icmp eq i32 %3, 0, !dbg !9935
  br i1 %19, label %99, label %20, !dbg !9936

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !9936

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !9905, metadata !DIExpression()), !dbg !9918
  %27 = load i8*, i8** %21, align 4, !dbg !9937
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !9938
  %29 = bitcast i8* %28 to i8**, !dbg !9938
  %30 = load i8*, i8** %29, align 4, !dbg !9938
  %31 = ptrtoint i8* %30 to i32, !dbg !9939
  %32 = add i32 %31, %1, !dbg !9940
  %33 = add i32 %32, %26, !dbg !9941
  call void @llvm.dbg.value(metadata i32 %33, metadata !9901, metadata !DIExpression()), !dbg !9918
  %34 = add i32 %26, %22, !dbg !9942
  call void @llvm.dbg.value(metadata i32 %34, metadata !9902, metadata !DIExpression()), !dbg !9918
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9943
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !9944
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !9944
  %38 = add i32 %26, %1, !dbg !9945
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #20, !dbg !9946
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #20, !dbg !9947
  %41 = and i32 %33, 1, !dbg !9948
  %42 = icmp eq i32 %41, 0, !dbg !9948
  br i1 %42, label %43, label %46, !dbg !9949

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !9950
  %45 = icmp eq i32 %44, 1, !dbg !9951
  br i1 %45, label %46, label %57, !dbg !9952

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9953
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !9955
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !9955
  %50 = load i8*, i8** %21, align 4, !dbg !9956
  %51 = inttoptr i32 %33 to i8*, !dbg !9957
  %52 = inttoptr i32 %34 to i8*, !dbg !9958
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #20, !dbg !9959
  call void @llvm.dbg.value(metadata i32 %53, metadata !9904, metadata !DIExpression()), !dbg !9918
  %54 = icmp eq i32 %53, 0, !dbg !9960
  br i1 %54, label %55, label %99, !dbg !9962

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !9963
  call void @llvm.dbg.value(metadata i32 %56, metadata !9905, metadata !DIExpression()), !dbg !9918
  br label %96, !dbg !9964

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !9965
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #20, !dbg !9966
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #20, !dbg !9967
  call void @llvm.dbg.value(metadata i32 %60, metadata !9906, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.value(metadata i32 %44, metadata !9910, metadata !DIExpression()), !dbg !9968
  %61 = add i32 %60, %33, !dbg !9969
  %62 = sub i32 0, %60, !dbg !9970
  %63 = and i32 %61, %62, !dbg !9971
  call void @llvm.dbg.value(metadata i32 %63, metadata !9911, metadata !DIExpression()), !dbg !9968
  %64 = add i32 %32, %3, !dbg !9972
  %65 = icmp ugt i32 %64, %63, !dbg !9974
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !9975
  call void @llvm.dbg.value(metadata i32 %67, metadata !9910, metadata !DIExpression()), !dbg !9968
  %68 = and i32 %67, -2, !dbg !9976
  call void @llvm.dbg.value(metadata i32 %68, metadata !9910, metadata !DIExpression()), !dbg !9968
  %69 = icmp ne i32 %68, 2, !dbg !9977
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !9978
  br i1 %72, label %85, label %73, !dbg !9978

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #22, !dbg !9934
  call void @llvm.dbg.value(metadata i8* %18, metadata !9917, metadata !DIExpression()), !dbg !9979
  %74 = inttoptr i32 %34 to i8*, !dbg !9980
  %75 = load i8, i8* %74, align 1, !dbg !9981
  call void @llvm.dbg.value(metadata i8 undef, metadata !9912, metadata !DIExpression()), !dbg !9979
  store i8 %75, i8* %18, align 2, !dbg !9982
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !9983
  %77 = load i8, i8* %76, align 1, !dbg !9984
  store i8 %77, i8* %24, align 1, !dbg !9985
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9986
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !9987
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !9987
  %81 = load i8*, i8** %21, align 4, !dbg !9988
  %82 = inttoptr i32 %33 to i8*, !dbg !9989
  call void @llvm.dbg.value(metadata i16* %5, metadata !9912, metadata !DIExpression(DW_OP_deref)), !dbg !9979
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #20, !dbg !9990
  call void @llvm.dbg.value(metadata i32 %83, metadata !9904, metadata !DIExpression()), !dbg !9918
  %84 = icmp eq i32 %83, 0, !dbg !9991
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #22, !dbg !9993
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9994
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !9998
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !9998
  %89 = load i8*, i8** %21, align 4, !dbg !9999
  %90 = inttoptr i32 %33 to i8*, !dbg !10000
  %91 = inttoptr i32 %34 to i8*, !dbg !10001
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #20, !dbg !10002
  call void @llvm.dbg.value(metadata i32 %92, metadata !9904, metadata !DIExpression()), !dbg !9918
  %93 = icmp eq i32 %92, 0, !dbg !10003
  br i1 %93, label %94, label %99, !dbg !10005

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !9904, metadata !DIExpression()), !dbg !9918
  %95 = add i32 %68, %26, !dbg !10006
  call void @llvm.dbg.value(metadata i32 %83, metadata !9904, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata i32 %26, metadata !9905, metadata !DIExpression()), !dbg !9918
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !10007
  call void @llvm.dbg.value(metadata i32 0, metadata !9904, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata i32 %97, metadata !9905, metadata !DIExpression()), !dbg !9918
  %98 = icmp ult i32 %97, %3, !dbg !9935
  br i1 %98, label %25, label %99, !dbg !9936, !llvm.loop !10008

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #21, !dbg !10010
  br label %101, !dbg !10011

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !9918
  ret i32 %102, !dbg !10011
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10012 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !10016, metadata !DIExpression()), !dbg !10020
  call void @llvm.dbg.value(metadata i32 %1, metadata !10017, metadata !DIExpression()), !dbg !10020
  %3 = and i32 %1, 16777215, !dbg !10021
  call void @llvm.dbg.value(metadata i32 %3, metadata !10019, metadata !DIExpression()), !dbg !10020
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !10022
  %5 = load i8, i8* %4, align 4, !dbg !10022, !range !2648
  %6 = icmp eq i8 %5, 0, !dbg !10022
  br i1 %6, label %7, label %8, !dbg !10024

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !10025
  br label %8, !dbg !10027

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !10028
  %10 = load i32, i32* %9, align 4, !dbg !10028
  %11 = icmp ult i32 %3, %10, !dbg !10030
  br i1 %11, label %12, label %27, !dbg !10031

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #21, !dbg !10032
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !10033
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !10033
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !10034
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !10034
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !10035
  %18 = load i8*, i8** %17, align 4, !dbg !10035
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #20, !dbg !10036
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !10037
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !10038
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !10038
  %23 = load i8*, i8** %17, align 4, !dbg !10039
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #20, !dbg !10040
  call void @llvm.dbg.value(metadata i32 %24, metadata !10018, metadata !DIExpression()), !dbg !10020
  tail call void @release_FDM_lock() #21, !dbg !10041
  %25 = icmp eq i32 %24, 0, !dbg !10042
  %26 = select i1 %25, i32 0, i32 6, !dbg !10020
  br label %27, !dbg !10020

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !10020
  ret i32 %28, !dbg !10044
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !10045 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !10046
  br i1 %1, label %3, label %2, !dbg !10048

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #20, !dbg !10049
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #21, !dbg !10051
  store i1 true, i1* @flash_init_status, align 4, !dbg !10052
  br label %3, !dbg !10053

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !10054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #4 section ".ram_code" !dbg !10055 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !10056
  %2 = select i1 %1, i32 0, i32 -5, !dbg !10056
  ret i32 %2, !dbg !10057
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !10058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10062, metadata !DIExpression()), !dbg !10069
  call void @llvm.dbg.value(metadata i32 %1, metadata !10063, metadata !DIExpression()), !dbg !10069
  call void @llvm.dbg.value(metadata i8* %2, metadata !10064, metadata !DIExpression()), !dbg !10069
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10065, metadata !DIExpression()), !dbg !10069
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10070
  call void @llvm.dbg.value(metadata i8* %4, metadata !10066, metadata !DIExpression()), !dbg !10069
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !10071
  %6 = ptrtoint i8* %5 to i32, !dbg !10072
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10073
  %8 = bitcast i8* %7 to i8**, !dbg !10073
  %9 = load i8*, i8** %8, align 4, !dbg !10073
  %10 = ptrtoint i8* %9 to i32, !dbg !10074
  %11 = shl i32 %1, 9, !dbg !10075
  %12 = add i32 %11, %6, !dbg !10076
  %13 = sub i32 %12, %10, !dbg !10077
  call void @llvm.dbg.value(metadata i32 %13, metadata !10068, metadata !DIExpression()), !dbg !10069
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !10078
  call void @llvm.dbg.value(metadata i32 %14, metadata !10067, metadata !DIExpression()), !dbg !10069
  %15 = icmp eq i32 %14, 0, !dbg !10079
  %16 = select i1 %15, i32 0, i32 -13, !dbg !10069
  ret i32 %16, !dbg !10081
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !10082 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10084, metadata !DIExpression()), !dbg !10091
  call void @llvm.dbg.value(metadata i32 %1, metadata !10085, metadata !DIExpression()), !dbg !10091
  call void @llvm.dbg.value(metadata i8* %2, metadata !10086, metadata !DIExpression()), !dbg !10091
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10087, metadata !DIExpression()), !dbg !10091
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10092
  call void @llvm.dbg.value(metadata i8* %4, metadata !10088, metadata !DIExpression()), !dbg !10091
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !10093
  %6 = ptrtoint i8* %5 to i32, !dbg !10094
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10095
  %8 = bitcast i8* %7 to i8**, !dbg !10095
  %9 = load i8*, i8** %8, align 4, !dbg !10095
  %10 = ptrtoint i8* %9 to i32, !dbg !10096
  %11 = shl i32 %1, 9, !dbg !10097
  %12 = add i32 %11, %6, !dbg !10098
  %13 = sub i32 %12, %10, !dbg !10099
  call void @llvm.dbg.value(metadata i32 %13, metadata !10090, metadata !DIExpression()), !dbg !10091
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !10100
  call void @llvm.dbg.value(metadata i32 %14, metadata !10089, metadata !DIExpression()), !dbg !10091
  %15 = icmp eq i32 %14, 0, !dbg !10101
  %16 = select i1 %15, i32 0, i32 -14, !dbg !10091
  ret i32 %16, !dbg !10103
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !10104 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10108, metadata !DIExpression()), !dbg !10110
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #21, !dbg !10111
  call void @llvm.dbg.value(metadata i32 %2, metadata !10109, metadata !DIExpression()), !dbg !10110
  %3 = icmp eq i32 %2, 0, !dbg !10112
  %4 = select i1 %3, i32 0, i32 -15, !dbg !10110
  ret i32 %4, !dbg !10114
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !10115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10117, metadata !DIExpression()), !dbg !10120
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10118, metadata !DIExpression()), !dbg !10120
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10121
  call void @llvm.dbg.value(metadata i8* %2, metadata !10119, metadata !DIExpression()), !dbg !10120
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #20, !dbg !10122
  ret i32 %3, !dbg !10123
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !10124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10126, metadata !DIExpression()), !dbg !10129
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10127, metadata !DIExpression()), !dbg !10129
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10130
  call void @llvm.dbg.value(metadata i8* %2, metadata !10128, metadata !DIExpression()), !dbg !10129
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #20, !dbg !10131
  ret i32 %3, !dbg !10132
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !10133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10137, metadata !DIExpression()), !dbg !10142
  call void @llvm.dbg.value(metadata i32* %1, metadata !10138, metadata !DIExpression()), !dbg !10142
  call void @llvm.dbg.value(metadata i32* %2, metadata !10139, metadata !DIExpression()), !dbg !10142
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10140, metadata !DIExpression()), !dbg !10142
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10143
  call void @llvm.dbg.value(metadata i8* %4, metadata !10141, metadata !DIExpression()), !dbg !10142
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #20, !dbg !10144
  store i32 %5, i32* %1, align 4, !dbg !10145
  %6 = icmp eq i32 %5, -1, !dbg !10146
  br i1 %6, label %10, label %7, !dbg !10148

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #20, !dbg !10149
  %9 = urem i32 %0, %8, !dbg !10150
  store i32 %9, i32* %2, align 4, !dbg !10151
  br label %10, !dbg !10152

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !10142
  ret i32 %11, !dbg !10153
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !10154 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10158, metadata !DIExpression()), !dbg !10163
  call void @llvm.dbg.value(metadata i32 %1, metadata !10159, metadata !DIExpression()), !dbg !10163
  call void @llvm.dbg.value(metadata i32* %2, metadata !10160, metadata !DIExpression()), !dbg !10163
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10161, metadata !DIExpression()), !dbg !10163
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10164
  call void @llvm.dbg.value(metadata i8* %4, metadata !10162, metadata !DIExpression()), !dbg !10163
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !10165
  %6 = ptrtoint i8* %5 to i32, !dbg !10166
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10167
  %8 = bitcast i8* %7 to i8**, !dbg !10167
  %9 = load i8*, i8** %8, align 4, !dbg !10167
  %10 = ptrtoint i8* %9 to i32, !dbg !10168
  %11 = add i32 %6, %1, !dbg !10169
  %12 = sub i32 %11, %10, !dbg !10170
  store i32 %12, i32* %2, align 4, !dbg !10171
  ret i32 0, !dbg !10172
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !10173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10177, metadata !DIExpression()), !dbg !10178
  %2 = add i32 %0, 2, !dbg !10179
  %3 = icmp ult i32 %2, 9, !dbg !10179
  br i1 %3, label %5, label %4, !dbg !10179

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #20, !dbg !10180
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.123, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.124, i32 0, i32 0)) #23, !dbg !10180
  unreachable, !dbg !10180

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !10179
  %7 = lshr i16 433, %6, !dbg !10179
  %8 = and i16 %7, 1, !dbg !10179
  %9 = icmp eq i16 %8, 0, !dbg !10179
  br i1 %9, label %4, label %10, !dbg !10179

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !10179
  %12 = load i32, i32* %11, align 4, !dbg !10179
  ret i32 %12, !dbg !10190
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !10191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10196, metadata !DIExpression()), !dbg !10199
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !10200
  call void @llvm.dbg.value(metadata i32 %2, metadata !10198, metadata !DIExpression()), !dbg !10199
  %3 = icmp eq i32 %2, -1, !dbg !10201
  br i1 %3, label %4, label %5, !dbg !10203

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !10204
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.123, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.124, i32 0, i32 0)) #23, !dbg !10204
  unreachable, !dbg !10204

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #21, !dbg !10209
  call void @llvm.dbg.value(metadata i32 %6, metadata !10197, metadata !DIExpression()), !dbg !10199
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !10210

7:                                                ; preds = %5
  br label %10, !dbg !10211

8:                                                ; preds = %5
  br label %10, !dbg !10215

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !10218
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.123, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.124, i32 0, i32 0)) #23, !dbg !10218
  unreachable, !dbg !10218

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !10223
  ret i32 %11, !dbg !10224
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !10225 {
  %1 = tail call i32 @NOR_init() #21, !dbg !10226
  ret i32 0, !dbg !10227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #10 !dbg !10228 {
  ret i32 0, !dbg !10229
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10230 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10234, metadata !DIExpression()), !dbg !10239
  call void @llvm.dbg.value(metadata i32 %1, metadata !10235, metadata !DIExpression()), !dbg !10239
  call void @llvm.dbg.value(metadata i32 0, metadata !10238, metadata !DIExpression()), !dbg !10239
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !10240

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !10241
  %5 = icmp eq i32 %4, 0, !dbg !10245
  br i1 %5, label %12, label %22, !dbg !10246

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !10247
  %8 = icmp eq i32 %7, 0, !dbg !10251
  br i1 %8, label %12, label %22, !dbg !10252

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !10253
  %11 = icmp eq i32 %10, 0, !dbg !10257
  br i1 %11, label %12, label %22, !dbg !10258

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !10259
  call void @llvm.dbg.value(metadata i32 %13, metadata !10238, metadata !DIExpression()), !dbg !10239
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !10260
  call void @llvm.dbg.value(metadata i32 %14, metadata !10237, metadata !DIExpression()), !dbg !10239
  %15 = icmp eq i32 %14, -1, !dbg !10261
  br i1 %15, label %22, label %16, !dbg !10263

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !10264
  call void @llvm.dbg.value(metadata i32 %17, metadata !10237, metadata !DIExpression()), !dbg !10239
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #21, !dbg !10265
  call void @llvm.dbg.value(metadata i32 %18, metadata !10236, metadata !DIExpression()), !dbg !10239
  %19 = icmp eq i32 %18, 0, !dbg !10266
  br i1 %19, label %22, label %20, !dbg !10268

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #21, !dbg !10269
  br label %22, !dbg !10271

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !10239
  ret i32 %23, !dbg !10272
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !10273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10277, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i8* %1, metadata !10278, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata i32 %2, metadata !10279, metadata !DIExpression()), !dbg !10282
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10280, metadata !DIExpression()), !dbg !10282
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !10283
  call void @llvm.dbg.value(metadata i32 %4, metadata !10281, metadata !DIExpression()), !dbg !10282
  %5 = icmp eq i32 %4, 0, !dbg !10284
  br i1 %5, label %8, label %6, !dbg !10286

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !10287
  br label %8, !dbg !10289

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !10282
  ret i32 %9, !dbg !10290
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !10291 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10295, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.value(metadata i8* %1, metadata !10296, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.value(metadata i32 %2, metadata !10297, metadata !DIExpression()), !dbg !10303
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10298, metadata !DIExpression()), !dbg !10303
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !10304
  call void @llvm.dbg.value(metadata i32 %4, metadata !10299, metadata !DIExpression()), !dbg !10303
  %5 = icmp eq i32 %4, 0, !dbg !10305
  br i1 %5, label %8, label %6, !dbg !10307

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !10308
  br label %21, !dbg !10310

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) #20, !dbg !10311
  br i1 %9, label %10, label %21, !dbg !10312

10:                                               ; preds = %8
  %11 = and i32 %0, -32, !dbg !10313
  call void @llvm.dbg.value(metadata i32 %11, metadata !10300, metadata !DIExpression()), !dbg !10315
  %12 = add i32 %0, 32
  %13 = add i32 %12, %2
  %14 = and i32 %13, -32
  call void @llvm.dbg.value(metadata i32 %11, metadata !10300, metadata !DIExpression()), !dbg !10315
  %15 = icmp ugt i32 %11, %14, !dbg !10316
  br i1 %15, label %21, label %16, !dbg !10318

16:                                               ; preds = %10, %16
  %17 = phi i32 [ %19, %16 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !10300, metadata !DIExpression()), !dbg !10315
  %18 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %17) #20, !dbg !10319
  %19 = add i32 %17, 32, !dbg !10321
  call void @llvm.dbg.value(metadata i32 %19, metadata !10300, metadata !DIExpression()), !dbg !10315
  %20 = icmp ugt i32 %19, %14, !dbg !10316
  br i1 %20, label %21, label %16, !dbg !10318, !llvm.loop !10322

21:                                               ; preds = %16, %10, %8, %6
  %22 = phi i32 [ %7, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %16 ], !dbg !10303
  ret i32 %22, !dbg !10324
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !10325 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10329, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32 %1, metadata !10330, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i8* %0, metadata !10331, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32 0, metadata !10332, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32 0, metadata !10333, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32 0, metadata !10334, metadata !DIExpression()), !dbg !10335
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10336
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !10336
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !10336
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !10337
  %7 = load i32, i32* %6, align 4, !dbg !10337
  call void @llvm.dbg.value(metadata i32 %7, metadata !10334, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32 0, metadata !10333, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32 0, metadata !10332, metadata !DIExpression()), !dbg !10335
  %8 = icmp ugt i32 %7, %1, !dbg !10338
  br i1 %8, label %23, label %9, !dbg !10339

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !10340
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10334, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32 %12, metadata !10333, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32 %13, metadata !10332, metadata !DIExpression()), !dbg !10335
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 0, !dbg !10342
  %15 = load i32, i32* %14, align 4, !dbg !10342
  %16 = mul i32 %15, %10, !dbg !10343
  %17 = add i32 %16, %13, !dbg !10344
  call void @llvm.dbg.value(metadata i32 %17, metadata !10332, metadata !DIExpression()), !dbg !10335
  %18 = add i32 %12, 1, !dbg !10345
  call void @llvm.dbg.value(metadata i32 %18, metadata !10333, metadata !DIExpression()), !dbg !10335
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 1, !dbg !10346
  %20 = load i32, i32* %19, align 4, !dbg !10346
  %21 = add i32 %20, %11, !dbg !10347
  call void @llvm.dbg.value(metadata i32 %21, metadata !10334, metadata !DIExpression()), !dbg !10335
  %22 = icmp ugt i32 %21, %1, !dbg !10338
  br i1 %22, label %23, label %9, !dbg !10339, !llvm.loop !10348

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !10350
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !10335
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !10335
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !10335
  call void @llvm.dbg.value(metadata i8* %0, metadata !10331, metadata !DIExpression()), !dbg !10335
  %28 = sub i32 %1, %27, !dbg !10351
  %29 = add i32 %28, %24, !dbg !10352
  %30 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %26, i32 0, !dbg !10353
  %31 = load i32, i32* %30, align 4, !dbg !10353
  %32 = mul i32 %29, %31, !dbg !10354
  %33 = add i32 %32, %25, !dbg !10355
  call void @llvm.dbg.value(metadata i32 %33, metadata !10332, metadata !DIExpression()), !dbg !10335
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !10356
  %35 = bitcast i8* %34 to i8**, !dbg !10356
  %36 = load i8*, i8** %35, align 4, !dbg !10356
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !10357
  ret i8* %37, !dbg !10358
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !10359 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10361, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i32 %1, metadata !10362, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i32 %2, metadata !10363, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i8* %0, metadata !10364, metadata !DIExpression()), !dbg !10365
  %4 = icmp eq i32 %2, 0, !dbg !10366
  br i1 %4, label %6, label %5, !dbg !10369

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !10370
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.139, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.140, i32 0, i32 0)) #23, !dbg !10370
  unreachable, !dbg !10370

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !10364, metadata !DIExpression()), !dbg !10365
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #21, !dbg !10372
  %8 = inttoptr i32 %7 to i8*, !dbg !10373
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !10374
  %10 = bitcast i8* %9 to i8**, !dbg !10374
  store i8* %8, i8** %10, align 4, !dbg !10375
  ret i8* %8, !dbg !10376
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #13 section ".ram_code" !dbg !1981 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1985, metadata !DIExpression()), !dbg !10377
  call void @llvm.dbg.value(metadata i32 %1, metadata !1986, metadata !DIExpression()), !dbg !10377
  call void @llvm.dbg.value(metadata i8* %0, metadata !1987, metadata !DIExpression()), !dbg !10377
  call void @llvm.dbg.value(metadata i32 0, metadata !2032, metadata !DIExpression()), !dbg !10377
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !10378
  %4 = bitcast i8* %3 to [8 x [2 x %struct.hal_cache_region_config_t]]*, !dbg !10378
  %5 = and i32 %1, 7, !dbg !10380
  %6 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !10381
  %7 = load i32, i32* %6, align 4, !dbg !10381
  %8 = icmp eq i32 %7, -1, !dbg !10382
  br i1 %8, label %62, label %9, !dbg !10383

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !10384
  br i1 %10, label %54, label %11, !dbg !10387

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !10388
  %13 = load i32, i32* %12, align 4, !dbg !10388
  %14 = icmp eq i32 %13, -1, !dbg !10391
  br i1 %14, label %44, label %15, !dbg !10392

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !10393
  br i1 %16, label %35, label %17, !dbg !10396

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10397
  %19 = add i32 %18, 1, !dbg !10397
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !10397
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10399
  %21 = shl nuw nsw i32 1, %5, !dbg !10401
  %22 = and i32 %20, %21, !dbg !10402
  %23 = icmp eq i32 %22, 0, !dbg !10402
  br i1 %23, label %30, label %24, !dbg !10403

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !10404
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10406
  %26 = ptrtoint i8* %25 to i32, !dbg !10407
  %27 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10408
  store i32 %26, i32* %27, align 4, !dbg !10409
  call void @llvm.dbg.value(metadata i32 %26, metadata !2032, metadata !DIExpression()), !dbg !10377
  %28 = xor i32 %21, -1, !dbg !10410
  %29 = and i32 %20, %28, !dbg !10411
  br label %71, !dbg !10412

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !10413
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10415
  %32 = ptrtoint i8* %31 to i32, !dbg !10416
  %33 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10417
  store i32 %32, i32* %33, align 4, !dbg !10418
  call void @llvm.dbg.value(metadata i32 %32, metadata !2032, metadata !DIExpression()), !dbg !10377
  %34 = or i32 %20, %21, !dbg !10419
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !10420
  %37 = add i32 %36, 1, !dbg !10420
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !10420
  %38 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10422
  %39 = load i32, i32* %38, align 4, !dbg !10422
  call void @llvm.dbg.value(metadata i32 %39, metadata !2032, metadata !DIExpression()), !dbg !10377
  %40 = shl nuw nsw i32 1, %5, !dbg !10423
  %41 = xor i32 %40, -1, !dbg !10424
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10425
  %43 = and i32 %42, %41, !dbg !10425
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10426
  %46 = add i32 %45, 1, !dbg !10426
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !10426
  store i32 %1, i32* %12, align 4, !dbg !10428
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10429
  %48 = ptrtoint i8* %47 to i32, !dbg !10430
  %49 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10431
  store i32 %48, i32* %49, align 4, !dbg !10432
  call void @llvm.dbg.value(metadata i32 %48, metadata !2032, metadata !DIExpression()), !dbg !10377
  %50 = shl nuw nsw i32 1, %5, !dbg !10433
  %51 = xor i32 %50, -1, !dbg !10434
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10435
  %53 = and i32 %52, %51, !dbg !10435
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !10436
  %56 = add i32 %55, 1, !dbg !10436
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !10436
  %57 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10438
  %58 = load i32, i32* %57, align 4, !dbg !10438
  call void @llvm.dbg.value(metadata i32 %58, metadata !2032, metadata !DIExpression()), !dbg !10377
  %59 = shl nuw nsw i32 1, %5, !dbg !10439
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10440
  %61 = or i32 %60, %59, !dbg !10440
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10441
  %64 = add i32 %63, 1, !dbg !10441
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !10441
  store i32 %1, i32* %6, align 4, !dbg !10443
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10444
  %66 = ptrtoint i8* %65 to i32, !dbg !10445
  %67 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10446
  store i32 %66, i32* %67, align 4, !dbg !10447
  call void @llvm.dbg.value(metadata i32 %66, metadata !2032, metadata !DIExpression()), !dbg !10377
  %68 = shl nuw nsw i32 1, %5, !dbg !10448
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10449
  %70 = or i32 %69, %68, !dbg !10449
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !10450
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !10450
  call void @llvm.dbg.value(metadata i32 %73, metadata !2032, metadata !DIExpression()), !dbg !10377
  ret i32 %73, !dbg !10451
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !10452 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10454, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i32 %1, metadata !10455, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i8* %0, metadata !10456, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i32 0, metadata !10457, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i32 0, metadata !10458, metadata !DIExpression()), !dbg !10459
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10460
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !10460
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !10460
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !10461
  %7 = load i32, i32* %6, align 4, !dbg !10461
  call void @llvm.dbg.value(metadata i32 %7, metadata !10458, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i32 0, metadata !10457, metadata !DIExpression()), !dbg !10459
  %8 = icmp ugt i32 %7, %1, !dbg !10462
  br i1 %8, label %17, label %9, !dbg !10463

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10458, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata i32 %11, metadata !10457, metadata !DIExpression()), !dbg !10459
  %12 = add i32 %11, 1, !dbg !10464
  call void @llvm.dbg.value(metadata i32 %12, metadata !10457, metadata !DIExpression()), !dbg !10459
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 1, !dbg !10466
  %14 = load i32, i32* %13, align 4, !dbg !10466
  %15 = add i32 %14, %10, !dbg !10467
  call void @llvm.dbg.value(metadata i32 %15, metadata !10458, metadata !DIExpression()), !dbg !10459
  %16 = icmp ugt i32 %15, %1, !dbg !10462
  br i1 %16, label %17, label %9, !dbg !10463, !llvm.loop !10468

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !10459
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 0, !dbg !10470
  %20 = load i32, i32* %19, align 4, !dbg !10470
  ret i32 %20, !dbg !10471
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !10472 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10474, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i32 %1, metadata !10475, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i8* %0, metadata !10476, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i32 0, metadata !10477, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i32 0, metadata !10478, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i32 0, metadata !10479, metadata !DIExpression()), !dbg !10480
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10481
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !10481
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !10481
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !10482
  %7 = load i32, i32* %6, align 4, !dbg !10482
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 0, !dbg !10483
  %9 = load i32, i32* %8, align 4, !dbg !10483
  %10 = mul i32 %9, %7, !dbg !10484
  call void @llvm.dbg.value(metadata i32 %10, metadata !10478, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i32 0, metadata !10479, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i32 0, metadata !10477, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i32 %1, metadata !10475, metadata !DIExpression()), !dbg !10480
  %11 = icmp ult i32 %10, %1, !dbg !10485
  br i1 %11, label %12, label %30, !dbg !10486

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !10487
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !10479, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i32 %16, metadata !10478, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i32 %17, metadata !10477, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i32 %18, metadata !10475, metadata !DIExpression()), !dbg !10480
  %19 = icmp eq i32 %14, 0, !dbg !10486
  br i1 %19, label %36, label %20, !dbg !10488

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %21, metadata !10479, metadata !DIExpression()), !dbg !10480
  %22 = sub i32 %18, %16, !dbg !10491
  call void @llvm.dbg.value(metadata i32 %22, metadata !10475, metadata !DIExpression()), !dbg !10480
  %23 = add i32 %17, 1, !dbg !10492
  call void @llvm.dbg.value(metadata i32 %23, metadata !10477, metadata !DIExpression()), !dbg !10480
  %24 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 1, !dbg !10493
  %25 = load i32, i32* %24, align 4, !dbg !10493
  %26 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 0, !dbg !10494
  %27 = load i32, i32* %26, align 4, !dbg !10494
  %28 = mul i32 %27, %25, !dbg !10495
  call void @llvm.dbg.value(metadata i32 %28, metadata !10478, metadata !DIExpression()), !dbg !10480
  %29 = icmp ugt i32 %22, %28, !dbg !10485
  br i1 %29, label %12, label %30, !dbg !10486, !llvm.loop !10496

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !10498
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !10480
  %34 = udiv i32 %32, %31, !dbg !10501
  %35 = add i32 %34, %33, !dbg !10502
  call void @llvm.dbg.value(metadata i32 %35, metadata !10479, metadata !DIExpression()), !dbg !10480
  br label %36, !dbg !10503

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !10504
  call void @llvm.dbg.value(metadata i32 %37, metadata !10479, metadata !DIExpression()), !dbg !10480
  ret i32 %37, !dbg !10505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #10 !dbg !10506 {
  ret i32 134217728, !dbg !10507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #10 !dbg !10508 {
  ret i32 3932160, !dbg !10509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #10 !dbg !10510 {
  ret i32 0, !dbg !10511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #10 !dbg !10512 {
  ret i32 262144, !dbg !10513
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !10514 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10516, metadata !DIExpression()), !dbg !10518
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !10519
  call void @llvm.dbg.value(metadata i32 %2, metadata !10517, metadata !DIExpression()), !dbg !10518
  %3 = icmp eq i32 %2, 0, !dbg !10520
  br i1 %3, label %5, label %4, !dbg !10522

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !10523
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.139, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.140, i32 0, i32 0)) #23, !dbg !10523
  unreachable, !dbg !10523

5:                                                ; preds = %1
  ret void, !dbg !10528
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10529 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10533, metadata !DIExpression()), !dbg !10546
  call void @llvm.dbg.value(metadata i32 %1, metadata !10534, metadata !DIExpression()), !dbg !10546
  call void @llvm.dbg.value(metadata i8* %2, metadata !10535, metadata !DIExpression()), !dbg !10546
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10547
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10547
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10536, metadata !DIExpression()), !dbg !10548
  %7 = bitcast i32* %5 to i8*, !dbg !10549
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10549
  call void @llvm.dbg.value(metadata i32* %5, metadata !10545, metadata !DIExpression(DW_OP_deref)), !dbg !10546
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !10550
  call void @llvm.va_start(i8* nonnull %6), !dbg !10551
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10552
  %10 = load i32, i32* %9, align 4, !dbg !10552
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10552
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !10552
  call void @llvm.va_end(i8* nonnull %6), !dbg !10553
  %13 = load i32, i32* %5, align 4, !dbg !10554
  call void @llvm.dbg.value(metadata i32 %13, metadata !10545, metadata !DIExpression()), !dbg !10546
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !10555
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10556
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10556
  ret void, !dbg !10556
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #18

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #18

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10557 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10559, metadata !DIExpression()), !dbg !10564
  call void @llvm.dbg.value(metadata i32 %1, metadata !10560, metadata !DIExpression()), !dbg !10564
  call void @llvm.dbg.value(metadata i8* %2, metadata !10561, metadata !DIExpression()), !dbg !10564
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10565
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10565
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10562, metadata !DIExpression()), !dbg !10566
  %7 = bitcast i32* %5 to i8*, !dbg !10567
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10567
  call void @llvm.dbg.value(metadata i32* %5, metadata !10563, metadata !DIExpression(DW_OP_deref)), !dbg !10564
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !10568
  call void @llvm.va_start(i8* nonnull %6), !dbg !10569
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10570
  %10 = load i32, i32* %9, align 4, !dbg !10570
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10570
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !10570
  call void @llvm.va_end(i8* nonnull %6), !dbg !10571
  %13 = load i32, i32* %5, align 4, !dbg !10572
  call void @llvm.dbg.value(metadata i32 %13, metadata !10563, metadata !DIExpression()), !dbg !10564
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !10573
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10574
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10574
  ret void, !dbg !10574
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10575 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10577, metadata !DIExpression()), !dbg !10582
  call void @llvm.dbg.value(metadata i32 %1, metadata !10578, metadata !DIExpression()), !dbg !10582
  call void @llvm.dbg.value(metadata i8* %2, metadata !10579, metadata !DIExpression()), !dbg !10582
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10583
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10583
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10580, metadata !DIExpression()), !dbg !10584
  %7 = bitcast i32* %5 to i8*, !dbg !10585
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10585
  call void @llvm.dbg.value(metadata i32* %5, metadata !10581, metadata !DIExpression(DW_OP_deref)), !dbg !10582
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !10586
  call void @llvm.va_start(i8* nonnull %6), !dbg !10587
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10588
  %10 = load i32, i32* %9, align 4, !dbg !10588
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10588
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !10588
  call void @llvm.va_end(i8* nonnull %6), !dbg !10589
  %13 = load i32, i32* %5, align 4, !dbg !10590
  call void @llvm.dbg.value(metadata i32 %13, metadata !10581, metadata !DIExpression()), !dbg !10582
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !10591
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10592
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10592
  ret void, !dbg !10592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #10 !dbg !10593 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10599, metadata !DIExpression()), !dbg !10604
  call void @llvm.dbg.value(metadata i32 %1, metadata !10600, metadata !DIExpression()), !dbg !10604
  call void @llvm.dbg.value(metadata i8* %2, metadata !10601, metadata !DIExpression()), !dbg !10604
  call void @llvm.dbg.value(metadata i8* %3, metadata !10602, metadata !DIExpression()), !dbg !10604
  call void @llvm.dbg.value(metadata i32 %4, metadata !10603, metadata !DIExpression()), !dbg !10604
  ret void, !dbg !10605
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #2 section ".tcm_code" !dbg !10606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10608, metadata !DIExpression()), !dbg !10610
  %2 = shl i32 %0, 20, !dbg !10611
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10612
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !10613
  store volatile i32 %2, i32* %4, align 4, !dbg !10614
  %5 = load volatile i32, i32* %4, align 4, !dbg !10615
  %6 = or i32 %5, 65536, !dbg !10616
  store volatile i32 %6, i32* %4, align 4, !dbg !10617
  br label %7, !dbg !10618

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !10619
  %9 = and i32 %8, 1, !dbg !10620
  %10 = icmp eq i32 %9, 0, !dbg !10621
  br i1 %10, label %7, label %11, !dbg !10618, !llvm.loop !10622

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !10624
  %13 = lshr i32 %12, 8, !dbg !10625
  %14 = and i32 %13, 255, !dbg !10625
  call void @llvm.dbg.value(metadata i32 %14, metadata !10609, metadata !DIExpression()), !dbg !10610
  ret i32 %14, !dbg !10626
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !10627 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10631, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.value(metadata i32 %1, metadata !10632, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.value(metadata i32 %1, metadata !10632, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !10633
  %3 = shl i32 %1, 24, !dbg !10634
  %4 = shl i32 %0, 20, !dbg !10635
  %5 = or i32 %4, %3, !dbg !10636
  %6 = or i32 %5, 131072, !dbg !10636
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10637
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !10638
  store volatile i32 %6, i32* %8, align 4, !dbg !10639
  %9 = load volatile i32, i32* %8, align 4, !dbg !10640
  %10 = or i32 %9, 65536, !dbg !10641
  store volatile i32 %10, i32* %8, align 4, !dbg !10642
  br label %11, !dbg !10643

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !10644
  %13 = and i32 %12, 1, !dbg !10645
  %14 = icmp eq i32 %13, 0, !dbg !10646
  br i1 %14, label %11, label %15, !dbg !10643, !llvm.loop !10647

15:                                               ; preds = %11
  ret void, !dbg !10649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #7 section ".tcm_code" !dbg !10650 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !10651
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !10652
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !10653
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !10654
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !10655
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !10656
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !10657
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !10658
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !10659
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !10660
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !10661
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !10662
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !10663
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !10664
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !10665
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !10666
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !10667
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !10668
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !10669
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !10670
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !10671
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !10672
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !10673
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !10674
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !10675
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !10676
  ret void, !dbg !10677
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #2 section ".tcm_code" !dbg !10678 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10681
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10682
  store volatile i32 21553, i32* %2, align 4, !dbg !10683
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10684
  store volatile i32 20489, i32* %3, align 4, !dbg !10685
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10686
  store volatile i32 20550, i32* %4, align 4, !dbg !10687
  ret i32 0, !dbg !10688
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #2 section ".tcm_code" !dbg !10689 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !10693, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.value(metadata i32 0, metadata !10691, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata i32 16384, metadata !10692, metadata !DIExpression()), !dbg !10698
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10699
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !10700
  store volatile i32 0, i32* %2, align 4, !dbg !10701
  call void @llvm.dbg.value(metadata i32 0, metadata !10695, metadata !DIExpression()), !dbg !10698
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !10695, metadata !DIExpression()), !dbg !10698
  br label %5, !dbg !10702

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !10695, metadata !DIExpression()), !dbg !10698
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !10694, metadata !DIExpression()), !dbg !10698
  br label %8, !dbg !10704

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10694, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata i32 0, metadata !10696, metadata !DIExpression()), !dbg !10698
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !10708

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !10696, metadata !DIExpression()), !dbg !10698
  %12 = icmp eq i32 %30, 2, !dbg !10712
  br i1 %12, label %31, label %13, !dbg !10708, !llvm.loop !10714

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10696, metadata !DIExpression()), !dbg !10698
  store volatile i32 0, i32* %2, align 4, !dbg !10716
  store volatile i32 63, i32* %3, align 4, !dbg !10718
  %15 = load i32, i32* %10, align 4, !dbg !10719
  %16 = shl i32 %15, 16, !dbg !10720
  %17 = shl nuw nsw i32 %14, 13, !dbg !10721
  %18 = or i32 %17, %7, !dbg !10722
  %19 = or i32 %18, %16, !dbg !10723
  store volatile i32 %19, i32* %2, align 4, !dbg !10724
  %20 = load volatile i32, i32* %2, align 4, !dbg !10725
  %21 = or i32 %20, 805, !dbg !10725
  store volatile i32 %21, i32* %2, align 4, !dbg !10725
  br label %22, !dbg !10726

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !10727
  %24 = and i32 %23, 2, !dbg !10728
  %25 = icmp eq i32 %24, 0, !dbg !10729
  br i1 %25, label %22, label %26, !dbg !10726, !llvm.loop !10730

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !10732
  %28 = and i32 %27, 1, !dbg !10734
  %29 = icmp eq i32 %28, 0, !dbg !10735
  %30 = add nuw nsw i32 %14, 1, !dbg !10736
  call void @llvm.dbg.value(metadata i32 %30, metadata !10696, metadata !DIExpression()), !dbg !10698
  br i1 %29, label %11, label %37, !dbg !10737

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !10738
  call void @llvm.dbg.value(metadata i32 %32, metadata !10694, metadata !DIExpression()), !dbg !10698
  %33 = icmp eq i32 %32, 2, !dbg !10739
  br i1 %33, label %34, label %8, !dbg !10704, !llvm.loop !10740

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !10742
  call void @llvm.dbg.value(metadata i32 %35, metadata !10695, metadata !DIExpression()), !dbg !10698
  %36 = icmp eq i32 %35, 2, !dbg !10743
  br i1 %36, label %37, label %5, !dbg !10702, !llvm.loop !10744

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !10698
  store volatile i32 0, i32* %2, align 4, !dbg !10698
  ret i32 %38, !dbg !10746
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #2 section ".tcm_code" !dbg !10747 {
  %1 = tail call i32 @TestCase_MBIST() #21, !dbg !10748
  %2 = icmp ne i32 %1, 0, !dbg !10750
  %3 = sext i1 %2 to i32, !dbg !10751
  ret i32 %3, !dbg !10752
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #2 section ".tcm_code" !dbg !10753 {
  call void @llvm.dbg.value(metadata i32 31, metadata !10755, metadata !DIExpression()), !dbg !10757
  call void @llvm.dbg.value(metadata i32 0, metadata !10756, metadata !DIExpression()), !dbg !10757
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10758
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !10759
  store volatile i32 0, i32* %2, align 4, !dbg !10760
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10761
  store volatile i32 0, i32* %3, align 4, !dbg !10762
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10763
  store volatile i32 0, i32* %4, align 4, !dbg !10764
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10765
  store volatile i32 0, i32* %5, align 4, !dbg !10766
  call void @llvm.dbg.value(metadata i32 31, metadata !10755, metadata !DIExpression()), !dbg !10757
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10767
  store volatile i32 522133279, i32* %6, align 4, !dbg !10771
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10772
  store volatile i32 522133279, i32* %7, align 4, !dbg !10773
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !10774
  %9 = icmp eq i32 %8, 0, !dbg !10776
  call void @llvm.dbg.value(metadata i32 31, metadata !10755, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10757
  br i1 %9, label %36, label %10, !dbg !10777

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10755, metadata !DIExpression()), !dbg !10757
  call void @llvm.dbg.value(metadata i32 %11, metadata !10755, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10757
  call void @llvm.dbg.value(metadata i32 %11, metadata !10755, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10757
  %12 = icmp eq i32 %11, 0, !dbg !10778
  br i1 %12, label %26, label %13, !dbg !10779, !llvm.loop !10780

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !10782
  call void @llvm.dbg.value(metadata i32 %14, metadata !10755, metadata !DIExpression()), !dbg !10757
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10783
  %16 = shl i32 %14, 24, !dbg !10784
  %17 = shl i32 %14, 16, !dbg !10785
  %18 = shl i32 %14, 8, !dbg !10786
  %19 = or i32 %17, %14, !dbg !10787
  %20 = or i32 %19, %16, !dbg !10788
  %21 = or i32 %20, %18, !dbg !10789
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !10767
  store volatile i32 %21, i32* %22, align 4, !dbg !10771
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !10772
  store volatile i32 %21, i32* %23, align 4, !dbg !10773
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !10774
  %25 = icmp eq i32 %24, 0, !dbg !10776
  call void @llvm.dbg.value(metadata i32 %14, metadata !10755, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10757
  br i1 %25, label %36, label %10, !dbg !10777

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !10756, metadata !DIExpression()), !dbg !10757
  %28 = shl nuw nsw i32 %27, 16, !dbg !10790
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10796
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !10797
  store volatile i32 %28, i32* %30, align 4, !dbg !10798
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !10799
  %32 = icmp eq i32 %31, 0, !dbg !10801
  call void @llvm.dbg.value(metadata i32 %27, metadata !10756, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10757
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !10802
  call void @llvm.dbg.value(metadata i32 %33, metadata !10756, metadata !DIExpression()), !dbg !10757
  call void @llvm.dbg.value(metadata i32 %27, metadata !10756, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10757
  br i1 %35, label %36, label %26, !dbg !10802, !llvm.loop !10803

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !10806
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #2 section ".tcm_code" !dbg !10807 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !10808
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10809
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !10810
  store volatile i32 1, i32* %2, align 4, !dbg !10811
  br label %3, !dbg !10812

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10813
  %5 = and i32 %4, 2, !dbg !10814
  %6 = icmp eq i32 %5, 0, !dbg !10814
  br i1 %6, label %3, label %7, !dbg !10812, !llvm.loop !10815

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !10817
  br label %8, !dbg !10818

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !10819
  %10 = and i32 %9, 2, !dbg !10820
  %11 = icmp eq i32 %10, 0, !dbg !10820
  br i1 %11, label %12, label %8, !dbg !10818, !llvm.loop !10821

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !10823
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !10824
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !10825

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !10826
  %17 = and i32 %16, 1, !dbg !10827
  %18 = icmp eq i32 %17, 0, !dbg !10828
  br i1 %18, label %15, label %19, !dbg !10825, !llvm.loop !10829

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #21, !dbg !10831
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #21, !dbg !10832
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !10833

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !10834
  %24 = and i32 %23, 1, !dbg !10835
  %25 = icmp eq i32 %24, 0, !dbg !10836
  br i1 %25, label %22, label %26, !dbg !10833, !llvm.loop !10837

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !10839
  %28 = icmp eq i32 %27, 9507, !dbg !10841
  br i1 %28, label %29, label %37, !dbg !10842

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !10843
  %31 = and i32 %30, 15, !dbg !10846
  %32 = icmp eq i32 %31, 2, !dbg !10847
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !10848
  %34 = and i32 %33, -128, !dbg !10848
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !10848
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !10848
  br label %37, !dbg !10849

37:                                               ; preds = %29, %26
  ret void, !dbg !10849
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !10850 {
  tail call void @EMI_PowerOn_Init() #21, !dbg !10853
  tail call void @__EMI_SetRegValfromCMCP() #21, !dbg !10854
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #21, !dbg !10855
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !10856
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #21, !dbg !10857
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !10858
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #21, !dbg !10859
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !10860
  ret i8 0, !dbg !10861
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !10862 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !10863
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10864
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !10865
  store volatile i32 %1, i32* %3, align 4, !dbg !10866
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !10867
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !10868
  store volatile i32 %4, i32* %5, align 4, !dbg !10869
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !10870
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !10871
  store volatile i32 %6, i32* %7, align 4, !dbg !10872
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !10873
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !10874
  store volatile i32 %8, i32* %9, align 4, !dbg !10875
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !10876
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !10877
  store volatile i32 %10, i32* %11, align 4, !dbg !10878
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !10879
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !10880
  store volatile i32 %12, i32* %13, align 4, !dbg !10881
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !10882
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !10883
  store volatile i32 %14, i32* %15, align 4, !dbg !10884
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !10885
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !10886
  store volatile i32 %16, i32* %17, align 4, !dbg !10887
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !10888
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !10889
  store volatile i32 %18, i32* %19, align 4, !dbg !10890
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !10891
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !10892
  store volatile i32 %20, i32* %21, align 4, !dbg !10893
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !10894
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !10895
  store volatile i32 %22, i32* %23, align 4, !dbg !10896
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !10897
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !10898
  store volatile i32 %24, i32* %25, align 4, !dbg !10899
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !10900
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !10901
  store volatile i32 %26, i32* %27, align 4, !dbg !10902
  tail call void @__EMI_EnableDataAutoTracking() #21, !dbg !10903
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10904
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !10905
  store volatile i32 806289408, i32* %29, align 4, !dbg !10906
  br label %30, !dbg !10907

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !10908
  %32 = and i32 %31, 128, !dbg !10909
  %33 = icmp eq i32 %32, 0, !dbg !10909
  br i1 %33, label %30, label %34, !dbg !10907, !llvm.loop !10910

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !10912
  br label %35, !dbg !10913

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !10914
  %37 = and i32 %36, 128, !dbg !10915
  %38 = icmp eq i32 %37, 0, !dbg !10915
  br i1 %38, label %39, label %35, !dbg !10913, !llvm.loop !10916

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !10918
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #21, !dbg !10919
  ret i8 0, !dbg !10920
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #2 section ".tcm_code" !dbg !10921 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10922
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !10923
  %3 = load volatile i32, i32* %2, align 4, !dbg !10923
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !10924
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !10925
  %5 = load volatile i32, i32* %4, align 4, !dbg !10925
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !10926
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !10927
  %7 = load volatile i32, i32* %6, align 4, !dbg !10927
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !10928
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10929
  %9 = load volatile i32, i32* %8, align 4, !dbg !10929
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !10930
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10931
  %11 = load volatile i32, i32* %10, align 4, !dbg !10931
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !10932
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10933
  %13 = load volatile i32, i32* %12, align 4, !dbg !10933
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !10934
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !10935
  %15 = load volatile i32, i32* %14, align 4, !dbg !10935
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !10936
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !10937
  %17 = load volatile i32, i32* %16, align 4, !dbg !10937
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !10938
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !10939
  %19 = load volatile i32, i32* %18, align 4, !dbg !10939
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !10940
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !10941
  %21 = load volatile i32, i32* %20, align 4, !dbg !10941
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !10942
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !10943
  %23 = load volatile i32, i32* %22, align 4, !dbg !10943
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !10944
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10945
  %25 = load volatile i32, i32* %24, align 4, !dbg !10945
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !10946
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !10947
  %27 = load volatile i32, i32* %26, align 4, !dbg !10947
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !10948
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !10949
  %29 = load volatile i32, i32* %28, align 4, !dbg !10949
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !10950
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10951
  %31 = load volatile i32, i32* %30, align 4, !dbg !10951
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !10952
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10953
  %33 = load volatile i32, i32* %32, align 4, !dbg !10953
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !10954
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10955
  %35 = load volatile i32, i32* %34, align 4, !dbg !10955
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !10956
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !10957
  %37 = load volatile i32, i32* %36, align 4, !dbg !10957
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !10958
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !10959
  %39 = load volatile i32, i32* %38, align 4, !dbg !10959
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !10960
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !10961
  %41 = load volatile i32, i32* %40, align 4, !dbg !10961
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !10962
  ret void, !dbg !10963
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #2 section ".tcm_code" !dbg !10964 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !10965

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10966
  %5 = and i32 %4, 17, !dbg !10967
  %6 = icmp eq i32 %5, 17, !dbg !10968
  br i1 %6, label %7, label %3, !dbg !10965, !llvm.loop !10969

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !10971
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !10972
  store volatile i32 %8, i32* %9, align 4, !dbg !10973
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !10974
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !10975
  store volatile i32 %10, i32* %11, align 4, !dbg !10976
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !10977
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !10978
  store volatile i32 %12, i32* %13, align 4, !dbg !10979
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !10980
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10981
  store volatile i32 %14, i32* %15, align 4, !dbg !10982
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !10983
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10984
  store volatile i32 %16, i32* %17, align 4, !dbg !10985
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !10986
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10987
  store volatile i32 %18, i32* %19, align 4, !dbg !10988
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !10989
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !10990
  store volatile i32 %20, i32* %21, align 4, !dbg !10991
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !10992
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !10993
  store volatile i32 %22, i32* %23, align 4, !dbg !10994
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !10995
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10996
  store volatile i32 %24, i32* %25, align 4, !dbg !10997
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !10998
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !10999
  store volatile i32 %26, i32* %27, align 4, !dbg !11000
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !11001
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !11002
  store volatile i32 %28, i32* %29, align 4, !dbg !11003
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !11004
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !11005
  store volatile i32 %30, i32* %31, align 4, !dbg !11006
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !11007
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !11008
  store volatile i32 %32, i32* %33, align 4, !dbg !11009
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !11010
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !11011
  store volatile i32 %34, i32* %35, align 4, !dbg !11012
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !11013
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !11014
  store volatile i32 %36, i32* %37, align 4, !dbg !11015
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !11016
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !11017
  store volatile i32 %38, i32* %39, align 4, !dbg !11018
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !11019
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !11020
  store volatile i32 %40, i32* %41, align 4, !dbg !11021
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !11022
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !11023
  store volatile i32 %42, i32* %43, align 4, !dbg !11024
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !11025
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !11026
  store volatile i32 %44, i32* %45, align 4, !dbg !11027
  ret void, !dbg !11028
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #2 section ".tcm_code" !dbg !11029 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11030
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !11031
  %3 = load volatile i32, i32* %2, align 4, !dbg !11031
  %4 = and i32 %3, -2097185, !dbg !11032
  store volatile i32 %4, i32* %2, align 4, !dbg !11033
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !11034
  store volatile i32 1, i32* %5, align 4, !dbg !11035
  br label %6, !dbg !11036

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !11037
  %8 = and i32 %7, 2, !dbg !11038
  %9 = icmp eq i32 %8, 0, !dbg !11038
  br i1 %9, label %6, label %10, !dbg !11036, !llvm.loop !11039

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !11041
  br label %11, !dbg !11042

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !11043
  %13 = and i32 %12, 2, !dbg !11044
  %14 = icmp eq i32 %13, 0, !dbg !11044
  br i1 %14, label %15, label %11, !dbg !11042, !llvm.loop !11045

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #21, !dbg !11047
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11048
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !11049
  store volatile i32 806289408, i32* %17, align 4, !dbg !11050
  br label %18, !dbg !11051

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !11052
  %20 = and i32 %19, 128, !dbg !11053
  %21 = icmp eq i32 %20, 0, !dbg !11053
  br i1 %21, label %18, label %22, !dbg !11051, !llvm.loop !11054

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !11056
  br label %23, !dbg !11057

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !11058
  %25 = and i32 %24, 128, !dbg !11059
  %26 = icmp eq i32 %25, 0, !dbg !11059
  br i1 %26, label %27, label %23, !dbg !11057, !llvm.loop !11060

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !11062
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !11063
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !11064
  store volatile i32 %28, i32* %29, align 4, !dbg !11065
  ret void, !dbg !11066
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #2 section ".tcm_code" !dbg !11067 {
  tail call void @EMI_Setting_Save() #21, !dbg !11068
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !11069

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !11070
  %5 = and i32 %4, 17, !dbg !11071
  %6 = icmp eq i32 %5, 17, !dbg !11072
  br i1 %6, label %7, label %3, !dbg !11069, !llvm.loop !11073

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !11075
  %9 = or i32 %8, 1792, !dbg !11076
  store volatile i32 %9, i32* %2, align 4, !dbg !11077
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !11078
  store volatile i32 -261685248, i32* %10, align 4, !dbg !11079
  br label %11, !dbg !11080

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !11081
  %13 = and i32 %12, 1, !dbg !11082
  %14 = icmp eq i32 %13, 0, !dbg !11083
  br i1 %14, label %11, label %15, !dbg !11080, !llvm.loop !11084

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !11086
  store volatile i32 0, i32* %16, align 4, !dbg !11087
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !11088

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !11089
  %20 = and i32 %19, 16, !dbg !11090
  %21 = icmp eq i32 %20, 0, !dbg !11090
  br i1 %21, label %18, label %22, !dbg !11088, !llvm.loop !11091

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !11093
  %24 = load volatile i32, i32* %23, align 4, !dbg !11093
  %25 = or i32 %24, 2097184, !dbg !11094
  store volatile i32 %25, i32* %23, align 4, !dbg !11095
  ret void, !dbg !11096
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !11097 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11102, metadata !DIExpression()), !dbg !11104
  %3 = bitcast i32* %2 to i8*, !dbg !11105
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11105
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11103, metadata !DIExpression()), !dbg !11106
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !11107

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11108
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !11111
  store volatile i32 0, i32* %6, align 4, !dbg !11112
  store volatile i32 806289408, i32* %6, align 4, !dbg !11113
  br label %7, !dbg !11114

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !11115
  %9 = and i32 %8, 128, !dbg !11116
  %10 = icmp eq i32 %9, 0, !dbg !11116
  br i1 %10, label %7, label %11, !dbg !11114, !llvm.loop !11117

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !11119
  br label %12, !dbg !11120

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !11121
  %14 = and i32 %13, 128, !dbg !11122
  %15 = icmp eq i32 %14, 0, !dbg !11122
  br i1 %15, label %16, label %12, !dbg !11120, !llvm.loop !11123

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !11125
  store volatile i32 0, i32* %2, align 4, !dbg !11126
  %17 = load volatile i32, i32* %2, align 4, !dbg !11128
  %18 = icmp ult i32 %17, 255, !dbg !11130
  br i1 %18, label %19, label %25, !dbg !11131

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !11132
  %21 = add i32 %20, 1, !dbg !11132
  store volatile i32 %21, i32* %2, align 4, !dbg !11132
  %22 = load volatile i32, i32* %2, align 4, !dbg !11128
  %23 = icmp ult i32 %22, 255, !dbg !11130
  br i1 %23, label %19, label %25, !dbg !11131, !llvm.loop !11133

24:                                               ; preds = %1
  br label %25, !dbg !11135

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !11104
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11138
  ret i32 %26, !dbg !11138
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !11139 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11140
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !11141
  %3 = load volatile i32, i32* %2, align 4, !dbg !11141
  %4 = or i32 %3, 1792, !dbg !11142
  store volatile i32 %4, i32* %2, align 4, !dbg !11143
  ret void, !dbg !11144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !11145 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11146
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !11147
  %3 = load volatile i32, i32* %2, align 4, !dbg !11147
  %4 = and i32 %3, -1793, !dbg !11148
  store volatile i32 %4, i32* %2, align 4, !dbg !11149
  ret void, !dbg !11150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #10 section ".tcm_code" !dbg !11151 {
  ret i1 false, !dbg !11152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #10 section ".tcm_code" !dbg !11153 {
  ret i1 false, !dbg !11154
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !11155 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #20, !dbg !11156
  ret void, !dbg !11159
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !11160 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #20, !dbg !11161
  ret void, !dbg !11164
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !11165 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #20, !dbg !11166
  ret void, !dbg !11169
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !11170 {
  tail call void @peri_26m_dcxo() #20, !dbg !11171
  ret void, !dbg !11174
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !11175 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11179, metadata !DIExpression()), !dbg !11180
  %2 = trunc i32 %0 to i8, !dbg !11181
  tail call void @hal_uart_put_char(i32 noundef 2, i8 noundef zeroext %2) #20, !dbg !11182
  ret i32 %0, !dbg !11183
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #19 !dbg !11184 {
  tail call fastcc void @SystemClock_Config() #21, !dbg !11185
  tail call void @SystemCoreClockUpdate() #20, !dbg !11186
  tail call fastcc void @prvSetupHardware() #21, !dbg !11187
  tail call void asm sideeffect "cpsie i", "~{memory}"() #22, !dbg !11188, !srcloc !11191
  tail call void asm sideeffect "cpsie f", "~{memory}"() #22, !dbg !11192, !srcloc !11195
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i32 0, i32 0)) #20, !dbg !11196
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.152, i32 0, i32 0)) #20, !dbg !11197
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i32 0, i32 0)) #20, !dbg !11198
  tail call fastcc void @pwm_generate_waveform() #21, !dbg !11199
  br label %4, !dbg !11200

4:                                                ; preds = %0, %4
  br label %4, !dbg !11200, !llvm.loop !11201
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !11203 {
  %1 = tail call i32 @hal_clock_init() #20, !dbg !11204
  ret void, !dbg !11205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !11206 {
  tail call fastcc void @plain_log_uart_init() #21, !dbg !11207
  %1 = tail call i32 @hal_flash_init() #20, !dbg !11208
  %2 = tail call i32 @hal_nvic_init() #20, !dbg !11209
  ret void, !dbg !11210
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pwm_generate_waveform() unnamed_addr #0 !dbg !11211 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !11215
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #22, !dbg !11215
  call void @llvm.dbg.value(metadata i32 0, metadata !11213, metadata !DIExpression()), !dbg !11216
  store i32 0, i32* %1, align 4, !dbg !11217
  call void @llvm.dbg.value(metadata i32 0, metadata !11214, metadata !DIExpression()), !dbg !11216
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0)) #20, !dbg !11218
  %4 = tail call i32 @hal_gpio_init(i32 noundef 35) #20, !dbg !11219
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 35, i8 noundef zeroext 3) #20, !dbg !11220
  %6 = tail call i32 @hal_pwm_init(i32 noundef 5, i32 noundef 1) #20, !dbg !11221
  call void @llvm.dbg.value(metadata i32* %1, metadata !11213, metadata !DIExpression(DW_OP_deref)), !dbg !11216
  %7 = call i32 @hal_pwm_set_frequency(i32 noundef 5, i32 noundef 200, i32* noundef nonnull %1) #20, !dbg !11222
  %8 = load i32, i32* %1, align 4, !dbg !11223
  call void @llvm.dbg.value(metadata i32 %8, metadata !11213, metadata !DIExpression()), !dbg !11216
  %9 = mul i32 %8, 50, !dbg !11224
  %10 = udiv i32 %9, 100, !dbg !11225
  call void @llvm.dbg.value(metadata i32 %10, metadata !11214, metadata !DIExpression()), !dbg !11216
  %11 = call i32 @hal_pwm_set_duty_cycle(i32 noundef 5, i32 noundef %10) #20, !dbg !11226
  %12 = call i32 @hal_pwm_start(i32 noundef 5) #20, !dbg !11227
  %13 = call i32 @hal_gpio_deinit(i32 noundef 35) #20, !dbg !11228
  %14 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i32 0, i32 0)) #20, !dbg !11229
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #22, !dbg !11230
  ret void, !dbg !11230
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @plain_log_uart_init() unnamed_addr #0 !dbg !11231 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !11241
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #22, !dbg !11241
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !11233, metadata !DIExpression()), !dbg !11242
  %3 = tail call i32 @hal_gpio_init(i32 noundef 0) #20, !dbg !11243
  %4 = tail call i32 @hal_gpio_init(i32 noundef 1) #20, !dbg !11244
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #20, !dbg !11245
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #20, !dbg !11246
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !11247
  store i32 9, i32* %7, align 4, !dbg !11248
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !11249
  store i32 3, i32* %8, align 4, !dbg !11250
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !11251
  store i32 0, i32* %9, align 4, !dbg !11252
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !11253
  store i32 0, i32* %10, align 4, !dbg !11254
  %11 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #20, !dbg !11255
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #22, !dbg !11256
  ret void, !dbg !11256
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #10 !dbg !11257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11259, metadata !DIExpression()), !dbg !11260
  ret i32 0, !dbg !11261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #10 !dbg !11262 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11312, metadata !DIExpression()), !dbg !11314
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !11313, metadata !DIExpression()), !dbg !11314
  ret i32 0, !dbg !11315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #10 !dbg !11316 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11318, metadata !DIExpression()), !dbg !11319
  ret i32 1, !dbg !11320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !11321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11325, metadata !DIExpression()), !dbg !11328
  call void @llvm.dbg.value(metadata i32 %1, metadata !11326, metadata !DIExpression()), !dbg !11328
  call void @llvm.dbg.value(metadata i32 %2, metadata !11327, metadata !DIExpression()), !dbg !11328
  ret i32 0, !dbg !11329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !11330 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11334, metadata !DIExpression()), !dbg !11337
  call void @llvm.dbg.value(metadata i32 %1, metadata !11335, metadata !DIExpression()), !dbg !11337
  call void @llvm.dbg.value(metadata i32 %2, metadata !11336, metadata !DIExpression()), !dbg !11337
  ret i32 -1, !dbg !11338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #10 !dbg !11339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11343, metadata !DIExpression()), !dbg !11346
  call void @llvm.dbg.value(metadata i8* %1, metadata !11344, metadata !DIExpression()), !dbg !11346
  call void @llvm.dbg.value(metadata i32 %2, metadata !11345, metadata !DIExpression()), !dbg !11346
  ret i32 0, !dbg !11347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_getpid() local_unnamed_addr #10 !dbg !11348 {
  ret i32 1, !dbg !11349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !11350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11354, metadata !DIExpression()), !dbg !11356
  call void @llvm.dbg.value(metadata i32 %1, metadata !11355, metadata !DIExpression()), !dbg !11356
  ret i32 -1, !dbg !11357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #10 !dbg !11358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11360, metadata !DIExpression()), !dbg !11361
  ret i32 -1, !dbg !11362
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2217 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !2415, metadata !DIExpression()), !dbg !11363
  call void @llvm.dbg.value(metadata i32 %1, metadata !2416, metadata !DIExpression()), !dbg !11363
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #22, !dbg !11364, !srcloc !11365
  call void @llvm.dbg.value(metadata i8* %3, metadata !2418, metadata !DIExpression()), !dbg !11363
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !11366
  %5 = icmp eq i8* %4, null, !dbg !11368
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !11369
  call void @llvm.dbg.value(metadata i8* %6, metadata !2417, metadata !DIExpression()), !dbg !11363
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !11370
  %8 = icmp ult i8* %3, %7, !dbg !11372
  %9 = xor i1 %8, true, !dbg !11373
  %10 = or i1 %5, %9, !dbg !11373
  br i1 %10, label %11, label %13, !dbg !11373

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !11374
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !11373
  br label %13, !dbg !11373

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !11374
  ret i8* %14, !dbg !11373
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !11375 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11377, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.value(metadata i8* %1, metadata !11378, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.value(metadata i32 %2, metadata !11379, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.value(metadata i32 0, metadata !11380, metadata !DIExpression()), !dbg !11381
  %4 = icmp sgt i32 %2, 0, !dbg !11382
  br i1 %4, label %5, label %14, !dbg !11385

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !11380, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.value(metadata i8* %7, metadata !11378, metadata !DIExpression()), !dbg !11381
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !11386
  call void @llvm.dbg.value(metadata i8* %8, metadata !11378, metadata !DIExpression()), !dbg !11381
  %9 = load i8, i8* %7, align 1, !dbg !11388
  %10 = zext i8 %9 to i32, !dbg !11388
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #20, !dbg !11389
  %12 = add nuw nsw i32 %6, 1, !dbg !11390
  call void @llvm.dbg.value(metadata i32 %12, metadata !11380, metadata !DIExpression()), !dbg !11381
  %13 = icmp eq i32 %12, %2, !dbg !11382
  br i1 %13, label %14, label %5, !dbg !11385, !llvm.loop !11391

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !11393
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #2 !dbg !11394 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11396, metadata !DIExpression()), !dbg !11398
  %2 = add i32 %0, -1, !dbg !11399
  %3 = icmp ugt i32 %2, 16777215, !dbg !11401
  br i1 %3, label %8, label %4, !dbg !11402

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11403
  call void @llvm.dbg.value(metadata i32 %5, metadata !11397, metadata !DIExpression()), !dbg !11398
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11404
  %7 = and i32 %6, -4, !dbg !11404
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11404
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11405
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11406
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11407
  br label %8, !dbg !11408

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !11398
  ret i32 %9, !dbg !11409
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #2 !dbg !11410 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !11411
  ret void, !dbg !11412
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #11 !dbg !11413 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !11414
  ret i32 %1, !dbg !11415
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #11 !dbg !11416 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !11419
  %2 = lshr i32 %1, 3, !dbg !11420
  %3 = and i32 %2, 15, !dbg !11420
  call void @llvm.dbg.value(metadata i32 %3, metadata !11418, metadata !DIExpression()), !dbg !11421
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !11422

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !11423

5:                                                ; preds = %0, %0
  br label %9, !dbg !11425

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !11426
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !11427
  br label %15, !dbg !11429

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !11426
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !11427
  %12 = and i32 %11, 1024, !dbg !11430
  %13 = icmp eq i32 %12, 0, !dbg !11430
  br i1 %13, label %15, label %14, !dbg !11429

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !11431
  br label %15, !dbg !11433

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !11434
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !11435 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !11436
  %2 = or i32 %1, 15728640, !dbg !11436
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !11436
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !11437
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11438
  %4 = or i32 %3, 458752, !dbg !11438
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11438
  ret void, !dbg !11439
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #2 !dbg !11440 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11441
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11442
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11443
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !11444
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !11445
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !11446
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11447
  ret void, !dbg !11448
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { argmemonly nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { nofree nosync nounwind willreturn }
attributes #19 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { nobuiltin nounwind optsize "no-builtins" }
attributes #21 = { nobuiltin optsize "no-builtins" }
attributes #22 = { nounwind }
attributes #23 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !2543, !94, !345, !411, !691, !2569, !839, !927, !2573, !1017, !1116, !1441, !2619, !1529, !1540, !1898, !1959, !2621, !2039, !2205, !2623, !2410, !2421, !2531}
!llvm.ident = !{!2626, !2626, !2626, !2626, !2626, !2626, !2626, !2626, !2626, !2626, !2626, !2626, !2626, !2626, !2626, !2626, !2626, !2626, !2626, !2626, !2626, !2626, !2626, !2626, !2626}
!llvm.module.flags = !{!2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !2, file: !3, line: 51, type: !90, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !53, globals: !89, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!4 = !{!5, !17, !37, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 163, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!10 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!11 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!12 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!13 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!14 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!15 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!16 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 186, baseType: !18, size: 32, elements: !19)
!18 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36}
!20 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!21 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!22 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!23 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!24 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!25 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!26 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!27 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!28 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!29 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!30 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!31 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!32 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!33 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!34 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!35 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!36 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 176, baseType: !18, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!40 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!41 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!42 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!43 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 98, baseType: !18, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!46 = !{!47, !48, !49, !50, !51, !52}
!47 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!48 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!49 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!50 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!51 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!52 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!53 = !{!54, !88}
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 32)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !57)
!56 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!57 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !58)
!58 = !{!59, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !78, !79, !83, !87}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !57, file: !56, line: 261, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !62, line: 48, baseType: !63)
!62 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !64, line: 79, baseType: !18)
!64 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!65 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !57, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !57, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !57, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !57, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !57, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !57, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !57, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !57, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !57, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !57, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !76)
!76 = !{!77}
!77 = !DISubrange(count: 1)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !57, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !57, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 16372)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !57, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !85)
!85 = !{!86}
!86 = !DISubrange(count: 16)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !57, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!89 = !{!0}
!90 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !91)
!91 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!92 = !DIGlobalVariableExpression(var: !93, expr: !DIExpression())
!93 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !94, file: !95, line: 48, type: !341, isLocal: false, isDefinition: true)
!94 = distinct !DICompileUnit(language: DW_LANG_C99, file: !95, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !96, retainedTypes: !263, globals: !278, splitDebugInlining: false, nameTableKind: None)
!95 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!96 = !{!97, !157, !162, !168, !245, !254, !259}
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 1170, baseType: !18, size: 32, elements: !99)
!98 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!99 = !{!100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156}
!100 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!101 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!102 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!103 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!104 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!105 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!106 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!107 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!108 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!109 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!110 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!111 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!112 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!113 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!114 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!115 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!116 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!117 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!118 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!119 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!120 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!121 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!122 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!123 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!124 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!125 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!126 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!127 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!128 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!129 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!130 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!131 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!132 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!133 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!134 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!135 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!136 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!137 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!138 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!139 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!140 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!141 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!142 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!143 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!144 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!145 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!146 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!147 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!148 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!149 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!150 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!151 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!152 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!153 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!154 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!155 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!156 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 82, baseType: !18, size: 32, elements: !159)
!158 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!159 = !{!160, !161}
!160 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!161 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!162 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 75, baseType: !18, size: 32, elements: !163)
!163 = !{!164, !165, !166, !167}
!164 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!165 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!166 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!167 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !56, line: 44, baseType: !7, size: 32, elements: !169)
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244}
!170 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!171 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!172 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!173 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!174 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!175 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!176 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!177 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!178 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!179 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!180 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!181 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!182 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!183 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!184 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!185 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!186 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!187 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!188 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!189 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!190 = !DIEnumerator(name: "KP_IRQn", value: 10)
!191 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!192 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!193 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!194 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!195 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!196 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!197 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!198 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!199 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!200 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!201 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!202 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!203 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!204 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!205 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!206 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!207 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!208 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!209 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!210 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!211 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!212 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!213 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!214 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!215 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!216 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!217 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!218 = !DIEnumerator(name: "SF_IRQn", value: 38)
!219 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!220 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!221 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!222 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!223 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!224 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!225 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!226 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!227 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!228 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!229 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!230 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!231 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!232 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!233 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!234 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!235 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!236 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!237 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!238 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!239 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!240 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!241 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!242 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!243 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!244 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!245 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 846, baseType: !18, size: 32, elements: !246)
!246 = !{!247, !248, !249, !250, !251, !252, !253}
!247 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!248 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!249 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!250 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!251 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!252 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!253 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 380, baseType: !18, size: 32, elements: !256)
!255 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!256 = !{!257, !258}
!257 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!258 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 397, baseType: !18, size: 32, elements: !260)
!260 = !{!261, !262}
!261 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!262 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!263 = !{!61, !264, !88}
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !56, line: 1272, baseType: !266)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1262, size: 288, elements: !267)
!267 = !{!268, !269, !270, !271, !273, !274, !275, !276, !277}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !266, file: !56, line: 1263, baseType: !60, size: 32)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !266, file: !56, line: 1264, baseType: !60, size: 32, offset: 32)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !266, file: !56, line: 1265, baseType: !60, size: 32, offset: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !266, file: !56, line: 1266, baseType: !272, size: 32, offset: 96)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !266, file: !56, line: 1267, baseType: !60, size: 32, offset: 128)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !266, file: !56, line: 1268, baseType: !60, size: 32, offset: 160)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !266, file: !56, line: 1269, baseType: !60, size: 32, offset: 192)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !266, file: !56, line: 1270, baseType: !60, size: 32, offset: 224)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !266, file: !56, line: 1271, baseType: !60, size: 32, offset: 256)
!278 = !{!92, !279, !288, !294, !316, !339}
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !94, file: !95, line: 49, type: !281, isLocal: false, isDefinition: true)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !56, line: 1260, baseType: !283)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1256, size: 96, elements: !284)
!284 = !{!285, !286, !287}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !283, file: !56, line: 1257, baseType: !272, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !283, file: !56, line: 1258, baseType: !60, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !283, file: !56, line: 1259, baseType: !60, size: 32, offset: 64)
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "flag", scope: !290, file: !95, line: 88, type: !91, isLocal: true, isDefinition: true)
!290 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !95, file: !95, line: 86, type: !291, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!291 = !DISubroutineType(types: !292)
!292 = !{null}
!293 = !{}
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !94, file: !95, line: 51, type: !296, isLocal: false, isDefinition: true)
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 768, elements: !314)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !158, line: 116, baseType: !298)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 111, size: 128, elements: !299)
!299 = !{!300, !302, !312, !313}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !298, file: !158, line: 112, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !255, line: 400, baseType: !259)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !298, file: !158, line: 113, baseType: !303, size: 64, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !158, line: 109, baseType: !304)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 106, size: 64, elements: !305)
!305 = !{!306, !311}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !304, file: !158, line: 107, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !255, line: 371, baseType: !308)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DISubroutineType(types: !310)
!310 = !{null, !88}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !304, file: !158, line: 108, baseType: !88, size: 32, offset: 32)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !298, file: !158, line: 114, baseType: !91, size: 8, offset: 96)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !298, file: !158, line: 115, baseType: !91, size: 8, offset: 104)
!314 = !{!315}
!315 = !DISubrange(count: 6)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !94, file: !95, line: 52, type: !318, isLocal: false, isDefinition: true)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !158, line: 134, baseType: !319)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 125, size: 4256, elements: !320)
!320 = !{!321, !332, !333, !334, !335, !336, !337, !338}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !319, file: !158, line: 126, baseType: !322, size: 4096)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 4096, elements: !330)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !158, line: 123, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 118, size: 128, elements: !325)
!325 = !{!326, !327, !328, !329}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !324, file: !158, line: 119, baseType: !303, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !324, file: !158, line: 120, baseType: !61, size: 32, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !324, file: !158, line: 121, baseType: !91, size: 8, offset: 96)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !324, file: !158, line: 122, baseType: !91, size: 8, offset: 104)
!330 = !{!331}
!331 = !DISubrange(count: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !319, file: !158, line: 127, baseType: !61, size: 32, offset: 4096)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !319, file: !158, line: 128, baseType: !61, size: 32, offset: 4128)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !319, file: !158, line: 129, baseType: !61, size: 32, offset: 4160)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !319, file: !158, line: 130, baseType: !61, size: 32, offset: 4192)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !319, file: !158, line: 131, baseType: !91, size: 8, offset: 4224)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !319, file: !158, line: 132, baseType: !91, size: 8, offset: 4232)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !319, file: !158, line: 133, baseType: !91, size: 8, offset: 4240)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !94, file: !95, line: 53, type: !61, isLocal: false, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 192, elements: !314)
!342 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "pwm", scope: !345, file: !346, line: 43, type: !401, isLocal: false, isDefinition: true)
!345 = distinct !DICompileUnit(language: DW_LANG_C99, file: !346, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !347, globals: !385, splitDebugInlining: false, nameTableKind: None)
!346 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_pwm.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!347 = !{!97, !348, !356, !365, !369, !376, !380}
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !349, line: 226, baseType: !7, size: 32, elements: !350)
!349 = !DIFile(filename: "../../../../../driver/chip/inc/hal_pwm.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!350 = !{!351, !352, !353, !354, !355}
!351 = !DIEnumerator(name: "HAL_PWM_STATUS_ERROR", value: -4)
!352 = !DIEnumerator(name: "HAL_PWM_STATUS_ERROR_CHANNEL", value: -3)
!353 = !DIEnumerator(name: "HAL_PWM_STATUS_INVALID_PARAMETER", value: -2)
!354 = !DIEnumerator(name: "HAL_PWM_STATUS_INVALID_FREQUENCY", value: -1)
!355 = !DIEnumerator(name: "HAL_PWM_STATUS_OK", value: 0)
!356 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 944, baseType: !18, size: 32, elements: !357)
!357 = !{!358, !359, !360, !361, !362, !363, !364}
!358 = !DIEnumerator(name: "HAL_PWM_0", value: 0)
!359 = !DIEnumerator(name: "HAL_PWM_1", value: 1)
!360 = !DIEnumerator(name: "HAL_PWM_2", value: 2)
!361 = !DIEnumerator(name: "HAL_PWM_3", value: 3)
!362 = !DIEnumerator(name: "HAL_PWM_4", value: 4)
!363 = !DIEnumerator(name: "HAL_PWM_5", value: 5)
!364 = !DIEnumerator(name: "HAL_PWM_MAX_CHANNEL", value: 6)
!365 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 956, baseType: !18, size: 32, elements: !366)
!366 = !{!367, !368}
!367 = !DIEnumerator(name: "HAL_PWM_CLOCK_13MHZ", value: 0)
!368 = !DIEnumerator(name: "HAL_PWM_CLOCK_32KHZ", value: 1)
!369 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !370, line: 101, baseType: !7, size: 32, elements: !371)
!370 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!371 = !{!372, !373, !374, !375}
!372 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!373 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!374 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!375 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!376 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !349, line: 237, baseType: !18, size: 32, elements: !377)
!377 = !{!378, !379}
!378 = !DIEnumerator(name: "HAL_PWM_IDLE", value: 0)
!379 = !DIEnumerator(name: "HAL_PWM_BUSY", value: 1)
!380 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !349, line: 253, baseType: !18, size: 32, elements: !381)
!381 = !{!382, !383, !384}
!382 = !DIEnumerator(name: "HAL_PWM_CLOCK_DIVISION_2", value: 1)
!383 = !DIEnumerator(name: "HAL_PWM_CLOCK_DIVISION_4", value: 2)
!384 = !DIEnumerator(name: "HAL_PWM_CLOCK_DIVISION_8", value: 3)
!385 = !{!343, !386, !391, !398}
!386 = !DIGlobalVariableExpression(var: !387, expr: !DIExpression())
!387 = distinct !DIGlobalVariable(name: "pwm_pdn", scope: !345, file: !346, line: 47, type: !388, isLocal: false, isDefinition: true)
!388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 192, elements: !314)
!389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !390)
!390 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !98, line: 1237, baseType: !97)
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "pwm_init_status", scope: !345, file: !346, line: 49, type: !393, isLocal: true, isDefinition: true)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 48, elements: !314)
!394 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !395)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !62, line: 24, baseType: !396)
!396 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !64, line: 43, baseType: !397)
!397 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!398 = !DIGlobalVariableExpression(var: !399, expr: !DIExpression())
!399 = distinct !DIGlobalVariable(name: "pwm_run_status", scope: !345, file: !346, line: 45, type: !400, isLocal: true, isDefinition: true)
!400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 48, elements: !314)
!401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 192, elements: !314)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 32)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWM_REGISTER_T", file: !56, line: 1173, baseType: !404)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1169, size: 96, elements: !405)
!405 = !{!406, !407, !408}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "PWM_CTRL", scope: !404, file: !56, line: 1170, baseType: !60, size: 32)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "PWM_COUNT", scope: !404, file: !56, line: 1171, baseType: !60, size: 32, offset: 32)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "PWM_THRESH", scope: !404, file: !56, line: 1172, baseType: !60, size: 32, offset: 64)
!409 = !DIGlobalVariableExpression(var: !410, expr: !DIExpression())
!410 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !411, file: !412, line: 64, type: !512, isLocal: false, isDefinition: true)
!411 = distinct !DICompileUnit(language: DW_LANG_C99, file: !412, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !413, retainedTypes: !507, globals: !511, splitDebugInlining: false, nameTableKind: None)
!412 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!413 = !{!414, !466, !473, !477, !483, !487, !496, !501}
!414 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 339, baseType: !18, size: 32, elements: !415)
!415 = !{!416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465}
!416 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!417 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!418 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!419 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!420 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!421 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!422 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!423 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!424 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!425 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!426 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!427 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!428 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!429 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!430 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!431 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!432 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!433 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!434 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!435 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!436 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!437 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!438 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!439 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!440 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!441 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!442 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!443 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!444 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!445 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!446 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!447 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!448 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!449 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!450 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!451 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!452 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!453 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!454 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!455 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!456 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!457 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!458 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!459 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!460 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!461 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!462 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!463 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!464 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!465 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!466 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !467, line: 224, baseType: !7, size: 32, elements: !468)
!467 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!468 = !{!469, !470, !471, !472}
!469 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!470 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!471 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!472 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !467, line: 210, baseType: !18, size: 32, elements: !474)
!474 = !{!475, !476}
!475 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!476 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!477 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !467, line: 233, baseType: !7, size: 32, elements: !478)
!478 = !{!479, !480, !481, !482}
!479 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!480 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!481 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!482 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!483 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !467, line: 217, baseType: !18, size: 32, elements: !484)
!484 = !{!485, !486}
!485 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!486 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!487 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 415, baseType: !18, size: 32, elements: !488)
!488 = !{!489, !490, !491, !492, !493, !494, !495}
!489 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!490 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!491 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!492 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!493 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!494 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!495 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!496 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 427, baseType: !18, size: 32, elements: !497)
!497 = !{!498, !499, !500}
!498 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!499 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!500 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!501 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !467, line: 242, baseType: !18, size: 32, elements: !502)
!502 = !{!503, !504, !505, !506}
!503 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!504 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!505 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!506 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!507 = !{!88, !508, !509, !510}
!508 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !467, line: 213, baseType: !473)
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !467, line: 220, baseType: !483)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !467, line: 247, baseType: !501)
!511 = !{!409}
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 32)
!513 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !56, line: 1554, baseType: !514)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1522, size: 29440, elements: !515)
!515 = !{!516, !530, !534, !543, !544, !553, !554, !563, !564, !574, !575, !584, !585, !594, !595, !604, !605, !614, !618, !627, !628, !637, !638, !647, !656, !657, !668, !672, !681, !682}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !514, file: !56, line: 1523, baseType: !517, size: 256)
!517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !518, size: 256, elements: !528)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !56, line: 1400, baseType: !519)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1395, size: 128, elements: !520)
!520 = !{!521, !522, !523, !524}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !519, file: !56, line: 1396, baseType: !60, size: 32)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !519, file: !56, line: 1397, baseType: !60, size: 32, offset: 32)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !519, file: !56, line: 1398, baseType: !60, size: 32, offset: 64)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !519, file: !56, line: 1399, baseType: !525, size: 32, offset: 96)
!525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !395, size: 32, elements: !526)
!526 = !{!527}
!527 = !DISubrange(count: 4)
!528 = !{!529}
!529 = !DISubrange(count: 2)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !514, file: !56, line: 1524, baseType: !531, size: 1792, offset: 256)
!531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !395, size: 1792, elements: !532)
!532 = !{!533}
!533 = !DISubrange(count: 224)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !514, file: !56, line: 1525, baseType: !535, size: 256, offset: 2048)
!535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 256, elements: !528)
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !56, line: 1409, baseType: !537)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1404, size: 128, elements: !538)
!538 = !{!539, !540, !541, !542}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !537, file: !56, line: 1405, baseType: !60, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !537, file: !56, line: 1406, baseType: !60, size: 32, offset: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !537, file: !56, line: 1407, baseType: !60, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !537, file: !56, line: 1408, baseType: !525, size: 32, offset: 96)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !514, file: !56, line: 1526, baseType: !531, size: 1792, offset: 2304)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !514, file: !56, line: 1527, baseType: !545, size: 256, offset: 4096)
!545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !546, size: 256, elements: !528)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !56, line: 1417, baseType: !547)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1412, size: 128, elements: !548)
!548 = !{!549, !550, !551, !552}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !547, file: !56, line: 1413, baseType: !60, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !547, file: !56, line: 1414, baseType: !60, size: 32, offset: 32)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !547, file: !56, line: 1415, baseType: !60, size: 32, offset: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !547, file: !56, line: 1416, baseType: !525, size: 32, offset: 96)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !514, file: !56, line: 1528, baseType: !531, size: 1792, offset: 4352)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !514, file: !56, line: 1529, baseType: !555, size: 256, offset: 6144)
!555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !556, size: 256, elements: !528)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !56, line: 1426, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1421, size: 128, elements: !558)
!558 = !{!559, !560, !561, !562}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !557, file: !56, line: 1422, baseType: !60, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !557, file: !56, line: 1423, baseType: !60, size: 32, offset: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !557, file: !56, line: 1424, baseType: !60, size: 32, offset: 64)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !557, file: !56, line: 1425, baseType: !525, size: 32, offset: 96)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !514, file: !56, line: 1530, baseType: !531, size: 1792, offset: 6400)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !514, file: !56, line: 1531, baseType: !565, size: 256, offset: 8192)
!565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !566, size: 256, elements: !528)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !56, line: 1432, baseType: !567)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1429, size: 128, elements: !568)
!568 = !{!569, !570}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !567, file: !56, line: 1430, baseType: !60, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !567, file: !56, line: 1431, baseType: !571, size: 96, offset: 32)
!571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !395, size: 96, elements: !572)
!572 = !{!573}
!573 = !DISubrange(count: 12)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !514, file: !56, line: 1532, baseType: !531, size: 1792, offset: 8448)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !514, file: !56, line: 1533, baseType: !576, size: 256, offset: 10240)
!576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 256, elements: !528)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !56, line: 1440, baseType: !578)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1435, size: 128, elements: !579)
!579 = !{!580, !581, !582, !583}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !578, file: !56, line: 1436, baseType: !60, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !578, file: !56, line: 1437, baseType: !60, size: 32, offset: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !578, file: !56, line: 1438, baseType: !60, size: 32, offset: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !578, file: !56, line: 1439, baseType: !525, size: 32, offset: 96)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !514, file: !56, line: 1534, baseType: !531, size: 1792, offset: 10496)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !514, file: !56, line: 1535, baseType: !586, size: 256, offset: 12288)
!586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !587, size: 256, elements: !528)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !56, line: 1448, baseType: !588)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1443, size: 128, elements: !589)
!589 = !{!590, !591, !592, !593}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !588, file: !56, line: 1444, baseType: !60, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !588, file: !56, line: 1445, baseType: !60, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !588, file: !56, line: 1446, baseType: !60, size: 32, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !588, file: !56, line: 1447, baseType: !525, size: 32, offset: 96)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !514, file: !56, line: 1536, baseType: !531, size: 1792, offset: 12544)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !514, file: !56, line: 1537, baseType: !596, size: 256, offset: 14336)
!596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !597, size: 256, elements: !528)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !56, line: 1455, baseType: !598)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1450, size: 128, elements: !599)
!599 = !{!600, !601, !602, !603}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !598, file: !56, line: 1451, baseType: !60, size: 32)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !598, file: !56, line: 1452, baseType: !60, size: 32, offset: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !598, file: !56, line: 1453, baseType: !60, size: 32, offset: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !598, file: !56, line: 1454, baseType: !525, size: 32, offset: 96)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !514, file: !56, line: 1538, baseType: !531, size: 1792, offset: 14592)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !514, file: !56, line: 1539, baseType: !606, size: 512, offset: 16384)
!606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 512, elements: !526)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !56, line: 1463, baseType: !608)
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1458, size: 128, elements: !609)
!609 = !{!610, !611, !612, !613}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !608, file: !56, line: 1459, baseType: !60, size: 32)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !608, file: !56, line: 1460, baseType: !60, size: 32, offset: 32)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !608, file: !56, line: 1461, baseType: !60, size: 32, offset: 64)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !608, file: !56, line: 1462, baseType: !525, size: 32, offset: 96)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !514, file: !56, line: 1540, baseType: !615, size: 1536, offset: 16896)
!615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !395, size: 1536, elements: !616)
!616 = !{!617}
!617 = !DISubrange(count: 192)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !514, file: !56, line: 1541, baseType: !619, size: 256, offset: 18432)
!619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 256, elements: !528)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !56, line: 1471, baseType: !621)
!621 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1466, size: 128, elements: !622)
!622 = !{!623, !624, !625, !626}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !621, file: !56, line: 1467, baseType: !60, size: 32)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !621, file: !56, line: 1468, baseType: !60, size: 32, offset: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !621, file: !56, line: 1469, baseType: !60, size: 32, offset: 64)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !621, file: !56, line: 1470, baseType: !525, size: 32, offset: 96)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !514, file: !56, line: 1542, baseType: !531, size: 1792, offset: 18688)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !514, file: !56, line: 1543, baseType: !629, size: 256, offset: 20480)
!629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !630, size: 256, elements: !528)
!630 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !56, line: 1480, baseType: !631)
!631 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1475, size: 128, elements: !632)
!632 = !{!633, !634, !635, !636}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !631, file: !56, line: 1476, baseType: !60, size: 32)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !631, file: !56, line: 1477, baseType: !60, size: 32, offset: 32)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !631, file: !56, line: 1478, baseType: !60, size: 32, offset: 64)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !631, file: !56, line: 1479, baseType: !525, size: 32, offset: 96)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !514, file: !56, line: 1544, baseType: !531, size: 1792, offset: 20736)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !514, file: !56, line: 1545, baseType: !639, size: 256, offset: 22528)
!639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !640, size: 256, elements: !528)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !56, line: 1489, baseType: !641)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1484, size: 128, elements: !642)
!642 = !{!643, !644, !645, !646}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !641, file: !56, line: 1485, baseType: !60, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !641, file: !56, line: 1486, baseType: !60, size: 32, offset: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !641, file: !56, line: 1487, baseType: !60, size: 32, offset: 64)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !641, file: !56, line: 1488, baseType: !525, size: 32, offset: 96)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !514, file: !56, line: 1546, baseType: !648, size: 256, offset: 22784)
!648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 256, elements: !528)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !56, line: 1497, baseType: !650)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1492, size: 128, elements: !651)
!651 = !{!652, !653, !654, !655}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !650, file: !56, line: 1493, baseType: !60, size: 32)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !650, file: !56, line: 1494, baseType: !60, size: 32, offset: 32)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !650, file: !56, line: 1495, baseType: !60, size: 32, offset: 64)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !650, file: !56, line: 1496, baseType: !525, size: 32, offset: 96)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !514, file: !56, line: 1547, baseType: !615, size: 1536, offset: 23040)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !514, file: !56, line: 1548, baseType: !658, size: 896, offset: 24576)
!658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !659, size: 896, elements: !666)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !56, line: 1505, baseType: !660)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1500, size: 128, elements: !661)
!661 = !{!662, !663, !664, !665}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !660, file: !56, line: 1501, baseType: !60, size: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !660, file: !56, line: 1502, baseType: !60, size: 32, offset: 32)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !660, file: !56, line: 1503, baseType: !60, size: 32, offset: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !660, file: !56, line: 1504, baseType: !525, size: 32, offset: 96)
!666 = !{!667}
!667 = !DISubrange(count: 7)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !514, file: !56, line: 1549, baseType: !669, size: 1152, offset: 25472)
!669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !395, size: 1152, elements: !670)
!670 = !{!671}
!671 = !DISubrange(count: 144)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !514, file: !56, line: 1550, baseType: !673, size: 512, offset: 26624)
!673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !674, size: 512, elements: !526)
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !56, line: 1513, baseType: !675)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1508, size: 128, elements: !676)
!676 = !{!677, !678, !679, !680}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !675, file: !56, line: 1509, baseType: !60, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !675, file: !56, line: 1510, baseType: !60, size: 32, offset: 32)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !675, file: !56, line: 1511, baseType: !60, size: 32, offset: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !675, file: !56, line: 1512, baseType: !525, size: 32, offset: 96)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !514, file: !56, line: 1551, baseType: !615, size: 1536, offset: 27136)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !514, file: !56, line: 1552, baseType: !683, size: 768, offset: 28672)
!683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 768, elements: !314)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !56, line: 1519, baseType: !685)
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1516, size: 128, elements: !686)
!686 = !{!687, !688}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !685, file: !56, line: 1517, baseType: !60, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !685, file: !56, line: 1518, baseType: !571, size: 96, offset: 32)
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !691, file: !692, line: 101, type: !833, isLocal: true, isDefinition: true)
!691 = distinct !DICompileUnit(language: DW_LANG_C99, file: !692, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !693, retainedTypes: !783, globals: !792, splitDebugInlining: false, nameTableKind: None)
!692 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!693 = !{!694, !701, !716, !722, !728, !733, !740, !756, !762, !766, !369, !771, !779}
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 180, baseType: !18, size: 32, elements: !695)
!695 = !{!696, !697, !698, !699, !700}
!696 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!697 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!698 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!699 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!700 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!701 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !702, line: 189, baseType: !18, size: 32, elements: !703)
!702 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!703 = !{!704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715}
!704 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!705 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!706 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!707 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!708 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!709 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!710 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!711 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!712 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!713 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!714 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!715 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!716 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !717, line: 355, baseType: !7, size: 32, elements: !718)
!717 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!718 = !{!719, !720, !721}
!719 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!720 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!721 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!722 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !702, line: 206, baseType: !7, size: 32, elements: !723)
!723 = !{!724, !725, !726, !727}
!724 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!725 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!726 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!727 = !DIEnumerator(name: "VDMA_OK", value: 0)
!728 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !692, line: 65, baseType: !18, size: 32, elements: !729)
!729 = !{!730, !731, !732}
!730 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!731 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!732 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !717, line: 345, baseType: !7, size: 32, elements: !734)
!734 = !{!735, !736, !737, !738, !739}
!735 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!736 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!737 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!738 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!739 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!740 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !717, line: 302, baseType: !18, size: 32, elements: !741)
!741 = !{!742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755}
!742 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!743 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!744 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!745 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!746 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!747 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!748 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!749 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!750 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!751 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!752 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!753 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!754 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!755 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!756 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !717, line: 321, baseType: !18, size: 32, elements: !757)
!757 = !{!758, !759, !760, !761}
!758 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!759 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!760 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!761 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!762 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !717, line: 330, baseType: !18, size: 32, elements: !763)
!763 = !{!764, !765}
!764 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!765 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!766 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !717, line: 337, baseType: !18, size: 32, elements: !767)
!767 = !{!768, !769, !770}
!768 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!769 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!770 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!771 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !772, line: 152, baseType: !7, size: 32, elements: !773)
!772 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!773 = !{!774, !775, !776, !777, !778}
!774 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!775 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!776 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!777 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!778 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!779 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !702, line: 222, baseType: !7, size: 32, elements: !780)
!780 = !{!781, !782}
!781 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!782 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!783 = !{!88, !61, !784}
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 32)
!785 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !786, line: 96, baseType: !787)
!786 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !786, line: 93, size: 64, elements: !788)
!788 = !{!789, !790}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !787, file: !786, line: 94, baseType: !91, size: 8)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !787, file: !786, line: 95, baseType: !791, size: 32, offset: 32)
!791 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !98, line: 186, baseType: !694)
!792 = !{!689, !793, !806, !811, !825, !831}
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !691, file: !692, line: 102, type: !795, isLocal: true, isDefinition: true)
!795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !796, size: 256, elements: !526)
!796 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !692, line: 74, baseType: !797)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !692, line: 71, size: 64, elements: !798)
!798 = !{!799, !805}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !797, file: !692, line: 72, baseType: !800, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !717, line: 410, baseType: !801)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 32)
!802 = !DISubroutineType(types: !803)
!803 = !{null, !804, !88}
!804 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !717, line: 359, baseType: !716)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !797, file: !692, line: 73, baseType: !88, size: 32, offset: 32)
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !691, file: !692, line: 103, type: !808, isLocal: true, isDefinition: true)
!808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !785, size: 512, elements: !809)
!809 = !{!810}
!810 = !DISubrange(count: 8)
!811 = !DIGlobalVariableExpression(var: !812, expr: !DIExpression())
!812 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !691, file: !692, line: 104, type: !813, isLocal: true, isDefinition: true)
!813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !814, size: 896, elements: !526)
!814 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !717, line: 390, baseType: !815)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !717, line: 382, size: 224, elements: !816)
!816 = !{!817, !819, !820, !821, !822, !823, !824}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !815, file: !717, line: 383, baseType: !818, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 32)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !815, file: !717, line: 384, baseType: !61, size: 32, offset: 32)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !815, file: !717, line: 385, baseType: !61, size: 32, offset: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !815, file: !717, line: 386, baseType: !818, size: 32, offset: 96)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !815, file: !717, line: 387, baseType: !61, size: 32, offset: 128)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !815, file: !717, line: 388, baseType: !61, size: 32, offset: 160)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !815, file: !717, line: 389, baseType: !61, size: 32, offset: 192)
!825 = !DIGlobalVariableExpression(var: !826, expr: !DIExpression())
!826 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !691, file: !692, line: 105, type: !827, isLocal: true, isDefinition: true)
!827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !828, size: 416, elements: !829)
!828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !61)
!829 = !{!830}
!830 = !DISubrange(count: 13)
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !691, file: !692, line: 90, type: !91, isLocal: true, isDefinition: true)
!833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !834, size: 128, elements: !526)
!834 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !835)
!835 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !692, line: 69, baseType: !728)
!836 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !839, file: !840, line: 53, type: !918, isLocal: false, isDefinition: true)
!839 = distinct !DICompileUnit(language: DW_LANG_C99, file: !840, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !841, retainedTypes: !852, globals: !908, splitDebugInlining: false, nameTableKind: None)
!840 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!841 = !{!97, !168, !701, !694, !842}
!842 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !786, line: 46, baseType: !18, size: 32, elements: !843)
!843 = !{!844, !845, !846, !847, !848, !849, !850, !851}
!844 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!845 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!846 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!847 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!848 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!849 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!850 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!851 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!852 = !{!853}
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 32)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !855)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !856)
!856 = !{!857, !863, !868, !874, !875, !880, !885, !886, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !855, file: !56, line: 547, baseType: !858, size: 32)
!858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !855, file: !56, line: 543, size: 32, elements: !859)
!859 = !{!860, !861, !862}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !858, file: !56, line: 544, baseType: !272, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !858, file: !56, line: 545, baseType: !60, size: 32)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !858, file: !56, line: 546, baseType: !60, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !855, file: !56, line: 551, baseType: !864, size: 32, offset: 32)
!864 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !855, file: !56, line: 548, size: 32, elements: !865)
!865 = !{!866, !867}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !864, file: !56, line: 549, baseType: !60, size: 32)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !864, file: !56, line: 550, baseType: !60, size: 32)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !855, file: !56, line: 556, baseType: !869, size: 32, offset: 64)
!869 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !855, file: !56, line: 552, size: 32, elements: !870)
!870 = !{!871, !872, !873}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !869, file: !56, line: 553, baseType: !272, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !869, file: !56, line: 554, baseType: !60, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !869, file: !56, line: 555, baseType: !60, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !855, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !855, file: !56, line: 561, baseType: !876, size: 32, offset: 128)
!876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !855, file: !56, line: 558, size: 32, elements: !877)
!877 = !{!878, !879}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !876, file: !56, line: 559, baseType: !60, size: 32)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !876, file: !56, line: 560, baseType: !60, size: 32)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !855, file: !56, line: 565, baseType: !881, size: 32, offset: 160)
!881 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !855, file: !56, line: 562, size: 32, elements: !882)
!882 = !{!883, !884}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !881, file: !56, line: 563, baseType: !272, size: 32)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !881, file: !56, line: 564, baseType: !60, size: 32)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !855, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !855, file: !56, line: 570, baseType: !887, size: 32, offset: 224)
!887 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !855, file: !56, line: 567, size: 32, elements: !888)
!888 = !{!889, !890}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !887, file: !56, line: 568, baseType: !60, size: 32)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !887, file: !56, line: 569, baseType: !60, size: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !855, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !855, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !855, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !855, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !855, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !855, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !855, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !855, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !855, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !855, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !855, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !855, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !855, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !855, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !855, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !855, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !855, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!908 = !{!837, !909, !912}
!909 = !DIGlobalVariableExpression(var: !910, expr: !DIExpression())
!910 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !839, file: !840, line: 54, type: !911, isLocal: false, isDefinition: true)
!911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 128, elements: !526)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !839, file: !840, line: 55, type: !914, isLocal: false, isDefinition: true)
!914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, size: 128, elements: !526)
!915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !916)
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !56, line: 125, baseType: !917)
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !56, line: 123, baseType: !168)
!918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !919, size: 128, elements: !526)
!919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !853)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!921 = distinct !DIGlobalVariable(name: "priority_set", scope: !922, file: !923, line: 128, type: !61, isLocal: true, isDefinition: true)
!922 = distinct !DISubprogram(name: "hal_nvic_init", scope: !923, file: !923, line: 126, type: !924, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !1013)
!923 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!924 = !DISubroutineType(types: !925)
!925 = !{!926}
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !772, line: 158, baseType: !771)
!927 = distinct !DICompileUnit(language: DW_LANG_C99, file: !923, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !928, retainedTypes: !929, globals: !995, splitDebugInlining: false, nameTableKind: None)
!928 = !{!771, !168}
!929 = !{!916, !930, !61, !963, !993}
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !932, line: 418, baseType: !933)
!932 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !932, line: 395, size: 1120, elements: !934)
!934 = !{!935, !936, !937, !938, !939, !940, !941, !943, !944, !945, !946, !947, !948, !949, !950, !952, !953, !954, !956, !960, !962}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !933, file: !932, line: 397, baseType: !272, size: 32)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !933, file: !932, line: 398, baseType: !60, size: 32, offset: 32)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !933, file: !932, line: 399, baseType: !60, size: 32, offset: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !933, file: !932, line: 400, baseType: !60, size: 32, offset: 96)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !933, file: !932, line: 401, baseType: !60, size: 32, offset: 128)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !933, file: !932, line: 402, baseType: !60, size: 32, offset: 160)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !933, file: !932, line: 403, baseType: !942, size: 96, offset: 192)
!942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 96, elements: !572)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !933, file: !932, line: 404, baseType: !60, size: 32, offset: 288)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !933, file: !932, line: 405, baseType: !60, size: 32, offset: 320)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !933, file: !932, line: 406, baseType: !60, size: 32, offset: 352)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !933, file: !932, line: 407, baseType: !60, size: 32, offset: 384)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !933, file: !932, line: 408, baseType: !60, size: 32, offset: 416)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !933, file: !932, line: 409, baseType: !60, size: 32, offset: 448)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !933, file: !932, line: 410, baseType: !60, size: 32, offset: 480)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !933, file: !932, line: 411, baseType: !951, size: 64, offset: 512)
!951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 64, elements: !528)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !933, file: !932, line: 412, baseType: !272, size: 32, offset: 576)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !933, file: !932, line: 413, baseType: !272, size: 32, offset: 608)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !933, file: !932, line: 414, baseType: !955, size: 128, offset: 640)
!955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 128, elements: !526)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !933, file: !932, line: 415, baseType: !957, size: 160, offset: 768)
!957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 160, elements: !958)
!958 = !{!959}
!959 = !DISubrange(count: 5)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !933, file: !932, line: 416, baseType: !961, size: 160, offset: 928)
!961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !958)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !933, file: !932, line: 417, baseType: !60, size: 32, offset: 1088)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !932, line: 378, baseType: !965)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !932, line: 363, size: 28704, elements: !966)
!966 = !{!967, !969, !973, !974, !975, !976, !977, !978, !979, !980, !984, !988, !992}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !965, file: !932, line: 365, baseType: !968, size: 256)
!968 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !809)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !965, file: !932, line: 366, baseType: !970, size: 768, offset: 256)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !971)
!971 = !{!972}
!972 = !DISubrange(count: 24)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !965, file: !932, line: 367, baseType: !968, size: 256, offset: 1024)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !965, file: !932, line: 368, baseType: !970, size: 768, offset: 1280)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !965, file: !932, line: 369, baseType: !968, size: 256, offset: 2048)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !965, file: !932, line: 370, baseType: !970, size: 768, offset: 2304)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !965, file: !932, line: 371, baseType: !968, size: 256, offset: 3072)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !965, file: !932, line: 372, baseType: !970, size: 768, offset: 3328)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !965, file: !932, line: 373, baseType: !968, size: 256, offset: 4096)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !965, file: !932, line: 374, baseType: !981, size: 1792, offset: 4352)
!981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !982)
!982 = !{!983}
!983 = !DISubrange(count: 56)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !965, file: !932, line: 375, baseType: !985, size: 1920, offset: 6144)
!985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 1920, elements: !986)
!986 = !{!987}
!987 = !DISubrange(count: 240)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !965, file: !932, line: 376, baseType: !989, size: 20608, offset: 8064)
!989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !990)
!990 = !{!991}
!991 = !DISubrange(count: 644)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !965, file: !932, line: 377, baseType: !60, size: 32, offset: 28672)
!993 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !62, line: 44, baseType: !994)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !64, line: 77, baseType: !7)
!995 = !{!996, !997, !1010}
!996 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!997 = !DIGlobalVariableExpression(var: !998, expr: !DIExpression())
!998 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !927, file: !923, line: 119, type: !999, isLocal: false, isDefinition: true)
!999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1000, size: 4096, elements: !1008)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !923, line: 50, baseType: !1001)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !923, line: 47, size: 64, elements: !1002)
!1002 = !{!1003, !1007}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !1001, file: !923, line: 48, baseType: !1004, size: 32)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 32)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{null, !916}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !1001, file: !923, line: 49, baseType: !61, size: 32, offset: 32)
!1008 = !{!1009}
!1009 = !DISubrange(count: 64)
!1010 = !DIGlobalVariableExpression(var: !1011, expr: !DIExpression())
!1011 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !927, file: !923, line: 52, type: !1012, isLocal: true, isDefinition: true)
!1012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !828, size: 2048, elements: !1008)
!1013 = !{!1014}
!1014 = !DILocalVariable(name: "i", scope: !922, file: !923, line: 129, type: !61)
!1015 = !DIGlobalVariableExpression(var: !1016, expr: !DIExpression())
!1016 = distinct !DIGlobalVariable(name: "DelayResume", scope: !1017, file: !1018, line: 55, type: !91, isLocal: false, isDefinition: true)
!1017 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1018, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1019, retainedTypes: !1054, globals: !1093, splitDebugInlining: false, nameTableKind: None)
!1018 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1019 = !{!1020, !1028, !1033}
!1020 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !1021, line: 51, baseType: !18, size: 32, elements: !1022)
!1021 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1022 = !{!1023, !1024, !1025, !1026, !1027}
!1023 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!1024 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!1025 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!1026 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!1027 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!1028 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !1021, line: 62, baseType: !18, size: 32, elements: !1029)
!1029 = !{!1030, !1031, !1032}
!1030 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!1031 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!1032 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!1033 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1034, line: 228, baseType: !18, size: 32, elements: !1035)
!1034 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1035 = !{!1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053}
!1036 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!1037 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!1038 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!1039 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!1040 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!1041 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!1042 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!1043 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!1044 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!1045 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!1046 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!1047 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!1048 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!1049 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!1050 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!1051 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!1052 = !DIEnumerator(name: "NR_MUXS", value: 16)
!1053 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!1054 = !{!1055, !1056, !1078, !818, !61, !18, !1084, !1086, !1090, !1092}
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1058)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1059)
!1059 = !{!1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1058, file: !56, line: 2759, baseType: !60, size: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1058, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1058, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1058, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1058, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1058, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1058, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1058, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1058, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1058, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1058, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1058, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1058, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1058, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1058, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1058, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1058, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1058, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 32)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1080)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1081)
!1081 = !{!1082, !1083}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1080, file: !56, line: 2799, baseType: !60, size: 32)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1080, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !18)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !62, line: 36, baseType: !1088)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !64, line: 57, baseType: !1089)
!1089 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !397)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!1093 = !{!1015, !1094, !1096, !1098, !1100, !1102, !1104, !1106, !1108, !1110, !1112}
!1094 = !DIGlobalVariableExpression(var: !1095, expr: !DIExpression())
!1095 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !1017, file: !1018, line: 604, type: !395, isLocal: false, isDefinition: true)
!1096 = !DIGlobalVariableExpression(var: !1097, expr: !DIExpression())
!1097 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !1017, file: !1018, line: 605, type: !61, isLocal: false, isDefinition: true)
!1098 = !DIGlobalVariableExpression(var: !1099, expr: !DIExpression())
!1099 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !1017, file: !1018, line: 606, type: !61, isLocal: false, isDefinition: true)
!1100 = !DIGlobalVariableExpression(var: !1101, expr: !DIExpression())
!1101 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !1017, file: !1018, line: 607, type: !61, isLocal: false, isDefinition: true)
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !1017, file: !1018, line: 608, type: !61, isLocal: false, isDefinition: true)
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !1017, file: !1018, line: 609, type: !61, isLocal: false, isDefinition: true)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !1017, file: !1018, line: 610, type: !61, isLocal: false, isDefinition: true)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !1017, file: !1018, line: 611, type: !61, isLocal: false, isDefinition: true)
!1110 = !DIGlobalVariableExpression(var: !1111, expr: !DIExpression())
!1111 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !1017, file: !1018, line: 665, type: !61, isLocal: false, isDefinition: true)
!1112 = !DIGlobalVariableExpression(var: !1113, expr: !DIExpression())
!1113 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !1017, file: !1018, line: 666, type: !61, isLocal: false, isDefinition: true)
!1114 = !DIGlobalVariableExpression(var: !1115, expr: !DIExpression())
!1115 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !1116, file: !1117, line: 334, type: !91, isLocal: false, isDefinition: true)
!1116 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1117, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1118, retainedTypes: !1286, globals: !1426, splitDebugInlining: false, nameTableKind: None)
!1117 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1118 = !{!1119, !1210, !1216, !1223, !1235, !1246, !1255, !1264, !1268, !1272}
!1119 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1120, line: 58, baseType: !7, size: 32, elements: !1121)
!1120 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1121 = !{!1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209}
!1122 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!1123 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!1124 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!1125 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!1126 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!1127 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!1128 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!1129 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!1130 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!1131 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!1132 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!1133 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!1134 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!1135 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!1136 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!1137 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!1138 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!1139 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!1140 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!1141 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!1142 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!1143 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!1144 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!1145 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!1146 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!1147 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!1148 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!1149 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!1150 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!1151 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!1152 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!1153 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!1154 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!1155 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!1156 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!1157 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!1158 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!1159 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!1160 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!1161 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!1162 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!1163 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!1164 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!1165 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!1166 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!1167 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!1168 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!1169 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!1170 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!1171 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!1172 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!1173 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!1174 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!1175 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!1176 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!1177 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!1178 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!1179 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!1180 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!1181 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!1182 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!1183 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!1184 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!1185 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!1186 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!1187 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!1188 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!1189 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!1190 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!1191 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!1192 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!1193 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!1194 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!1195 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!1196 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!1197 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!1198 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!1199 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!1200 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!1201 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!1202 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!1203 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!1204 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!1205 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!1206 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!1207 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!1208 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!1209 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!1210 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1211, line: 81, baseType: !18, size: 32, elements: !1212)
!1211 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1212 = !{!1213, !1214, !1215}
!1213 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!1214 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!1215 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!1216 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1117, line: 298, baseType: !18, size: 32, elements: !1217)
!1217 = !{!1218, !1219, !1220, !1221, !1222}
!1218 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!1219 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!1220 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!1221 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!1222 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!1223 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1224, line: 51, baseType: !18, size: 32, elements: !1225)
!1224 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1225 = !{!1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234}
!1226 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!1227 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!1228 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!1229 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!1230 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!1231 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!1232 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!1233 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!1234 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!1235 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1236, line: 110, baseType: !7, size: 32, elements: !1237)
!1236 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1237 = !{!1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245}
!1238 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1239 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1240 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1241 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1242 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1243 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1244 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1245 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1246 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1224, line: 73, baseType: !18, size: 32, elements: !1247)
!1247 = !{!1248, !1249, !1250, !1251, !1252, !1253, !1254}
!1248 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!1249 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!1250 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!1251 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!1252 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!1253 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!1254 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!1255 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1224, line: 83, baseType: !18, size: 32, elements: !1256)
!1256 = !{!1257, !1258, !1259, !1260, !1261, !1262, !1263}
!1257 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!1258 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!1259 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!1260 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!1261 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!1262 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!1263 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!1264 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1224, line: 98, baseType: !18, size: 32, elements: !1265)
!1265 = !{!1266, !1267}
!1266 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!1267 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!1268 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1211, line: 76, baseType: !18, size: 32, elements: !1269)
!1269 = !{!1270, !1271}
!1270 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!1271 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!1272 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1211, line: 208, baseType: !18, size: 32, elements: !1273)
!1273 = !{!1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285}
!1274 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!1275 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!1276 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!1277 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!1278 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!1279 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!1280 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!1281 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!1282 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!1283 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!1284 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!1285 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!1286 = !{!61, !1055, !1086, !818, !1287, !1397, !1419, !88, !1425, !397}
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1211, line: 193, baseType: !1289)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1211, line: 134, size: 1824, elements: !1290)
!1290 = !{!1291, !1292, !1293, !1300, !1306, !1310, !1318, !1319, !1326, !1327, !1328, !1329, !1337, !1340, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1391, !1392, !1396}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1289, file: !1211, line: 136, baseType: !61, size: 32)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1289, file: !1211, line: 137, baseType: !818, size: 32, offset: 32)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1289, file: !1211, line: 138, baseType: !1294, size: 32, offset: 64)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1295, line: 56, baseType: !1296)
!1295 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1295, line: 54, size: 8, elements: !1298)
!1298 = !{!1299}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1297, file: !1295, line: 55, baseType: !395, size: 8)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1289, file: !1211, line: 139, baseType: !1301, size: 32, offset: 96)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1295, line: 46, baseType: !1302)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 32)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1295, line: 44, size: 8, elements: !1304)
!1304 = !{!1305}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1303, file: !1295, line: 45, baseType: !395, size: 8)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1289, file: !1211, line: 140, baseType: !1307, size: 8, offset: 128)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !62, line: 20, baseType: !1308)
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !64, line: 41, baseType: !1309)
!1309 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1289, file: !1211, line: 143, baseType: !1311, size: 32, offset: 160)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1313, line: 146, baseType: !1314)
!1313 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 143, size: 64, elements: !1315)
!1315 = !{!1316, !1317}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1314, file: !1313, line: 144, baseType: !61, size: 32)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1314, file: !1313, line: 145, baseType: !61, size: 32, offset: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1289, file: !1211, line: 144, baseType: !818, size: 32, offset: 192)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1289, file: !1211, line: 145, baseType: !1320, size: 32, offset: 224)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 32)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1313, line: 152, baseType: !1322)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 149, size: 64, elements: !1323)
!1323 = !{!1324, !1325}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1322, file: !1313, line: 150, baseType: !61, size: 32)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1322, file: !1313, line: 151, baseType: !61, size: 32, offset: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1289, file: !1211, line: 146, baseType: !818, size: 32, offset: 256)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1289, file: !1211, line: 147, baseType: !61, size: 32, offset: 288)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1289, file: !1211, line: 148, baseType: !818, size: 32, offset: 320)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1289, file: !1211, line: 151, baseType: !1330, size: 1024, offset: 352)
!1330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1331, size: 1024, elements: !1336)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1313, line: 170, baseType: !1332)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 167, size: 64, elements: !1333)
!1333 = !{!1334, !1335}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1332, file: !1313, line: 168, baseType: !61, size: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1332, file: !1313, line: 169, baseType: !61, size: 32, offset: 32)
!1336 = !{!810, !529}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1289, file: !1211, line: 155, baseType: !1338, size: 32, offset: 1376)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 32)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !1224, line: 120, baseType: !395)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1289, file: !1211, line: 156, baseType: !1341, size: 32, offset: 1408)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1211, line: 124, baseType: !1343)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1211, line: 90, size: 200, elements: !1344)
!1344 = !{!1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1343, file: !1211, line: 91, baseType: !395, size: 8)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1343, file: !1211, line: 92, baseType: !395, size: 8, offset: 8)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1343, file: !1211, line: 94, baseType: !395, size: 8, offset: 16)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1343, file: !1211, line: 95, baseType: !395, size: 8, offset: 24)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1343, file: !1211, line: 96, baseType: !395, size: 8, offset: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1343, file: !1211, line: 98, baseType: !395, size: 8, offset: 40)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1343, file: !1211, line: 99, baseType: !395, size: 8, offset: 48)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1343, file: !1211, line: 100, baseType: !395, size: 8, offset: 56)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1343, file: !1211, line: 101, baseType: !395, size: 8, offset: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1343, file: !1211, line: 103, baseType: !395, size: 8, offset: 72)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1343, file: !1211, line: 104, baseType: !395, size: 8, offset: 80)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1343, file: !1211, line: 106, baseType: !395, size: 8, offset: 88)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1343, file: !1211, line: 107, baseType: !395, size: 8, offset: 96)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1343, file: !1211, line: 108, baseType: !395, size: 8, offset: 104)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1343, file: !1211, line: 109, baseType: !395, size: 8, offset: 112)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1343, file: !1211, line: 110, baseType: !395, size: 8, offset: 120)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1343, file: !1211, line: 111, baseType: !395, size: 8, offset: 128)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1343, file: !1211, line: 112, baseType: !395, size: 8, offset: 136)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1343, file: !1211, line: 114, baseType: !395, size: 8, offset: 144)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1343, file: !1211, line: 115, baseType: !395, size: 8, offset: 152)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1343, file: !1211, line: 118, baseType: !395, size: 8, offset: 160)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1343, file: !1211, line: 119, baseType: !395, size: 8, offset: 168)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1343, file: !1211, line: 120, baseType: !395, size: 8, offset: 176)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1343, file: !1211, line: 121, baseType: !395, size: 8, offset: 184)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1343, file: !1211, line: 122, baseType: !395, size: 8, offset: 192)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1289, file: !1211, line: 157, baseType: !61, size: 32, offset: 1440)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1289, file: !1211, line: 158, baseType: !1087, size: 16, offset: 1472)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1289, file: !1211, line: 159, baseType: !1087, size: 16, offset: 1488)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1289, file: !1211, line: 163, baseType: !1087, size: 16, offset: 1504)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1289, file: !1211, line: 164, baseType: !1087, size: 16, offset: 1520)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1289, file: !1211, line: 167, baseType: !395, size: 8, offset: 1536)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1289, file: !1211, line: 168, baseType: !1377, size: 24, offset: 1544)
!1377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !395, size: 24, elements: !1378)
!1378 = !{!1379}
!1379 = !DISubrange(count: 3)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1289, file: !1211, line: 169, baseType: !395, size: 8, offset: 1568)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1289, file: !1211, line: 170, baseType: !395, size: 8, offset: 1576)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1289, file: !1211, line: 173, baseType: !1087, size: 16, offset: 1584)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1289, file: !1211, line: 174, baseType: !61, size: 32, offset: 1600)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1289, file: !1211, line: 175, baseType: !61, size: 32, offset: 1632)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1289, file: !1211, line: 178, baseType: !91, size: 8, offset: 1664)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1289, file: !1211, line: 179, baseType: !91, size: 8, offset: 1672)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1289, file: !1211, line: 182, baseType: !1388, size: 32, offset: 1696)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 32)
!1389 = !DISubroutineType(types: !1390)
!1390 = !{!7, !88}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1289, file: !1211, line: 186, baseType: !1388, size: 32, offset: 1728)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1289, file: !1211, line: 187, baseType: !1393, size: 32, offset: 1760)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 32)
!1394 = !DISubroutineType(types: !1395)
!1395 = !{!7, !88, !61, !88, !61}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1289, file: !1211, line: 188, baseType: !1393, size: 32, offset: 1792)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1399)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1400)
!1400 = !{!1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1399, file: !56, line: 2759, baseType: !60, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1399, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1399, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1399, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1399, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1399, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1399, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1399, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1399, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1399, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1399, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1399, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1399, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1399, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1399, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1399, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1399, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1399, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1421)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1422)
!1422 = !{!1423, !1424}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1421, file: !56, line: 2799, baseType: !60, size: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1421, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 32)
!1426 = !{!1114, !1427, !1429, !1431, !1436}
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !1116, file: !1117, line: 382, type: !61, isLocal: false, isDefinition: true)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !1116, file: !1117, line: 383, type: !61, isLocal: false, isDefinition: true)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !1116, file: !1117, line: 369, type: !1433, isLocal: true, isDefinition: true)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !395, size: 1024, elements: !1434)
!1434 = !{!1435}
!1435 = !DISubrange(count: 128)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !1116, file: !1117, line: 1409, type: !7, isLocal: true, isDefinition: true)
!1438 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !1441, file: !1496, line: 35, type: !1497, isLocal: false, isDefinition: true)
!1441 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1442, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1443, retainedTypes: !1489, globals: !1490, splitDebugInlining: false, nameTableKind: None)
!1442 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1443 = !{!1444}
!1444 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1445, line: 77, baseType: !18, size: 32, elements: !1446)
!1445 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1446 = !{!1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488}
!1447 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!1448 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!1449 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!1450 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!1451 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!1452 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!1453 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!1454 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!1455 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!1456 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!1457 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1458 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1459 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1460 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1461 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1462 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1463 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1464 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1465 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1466 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1467 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1468 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1469 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1470 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1471 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1472 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1473 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1474 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1475 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1476 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1477 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1478 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1479 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1480 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1481 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1482 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1483 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1484 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1485 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1486 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1487 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1488 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1489 = !{!88}
!1490 = !{!1439, !1491, !1494}
!1491 = !DIGlobalVariableExpression(var: !1492, expr: !DIExpression())
!1492 = distinct !DIGlobalVariable(name: "cmem_index", scope: !1441, file: !1442, line: 96, type: !1493, isLocal: true, isDefinition: true)
!1493 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1494 = !DIGlobalVariableExpression(var: !1495, expr: !DIExpression())
!1495 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !1441, file: !1442, line: 94, type: !1493, isLocal: true, isDefinition: true)
!1496 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1498)
!1498 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !1442, line: 54, baseType: !1499)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1442, line: 51, size: 576, elements: !1500)
!1500 = !{!1501, !1511}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1499, file: !1442, line: 52, baseType: !1502, size: 96)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1445, line: 152, baseType: !1503)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1445, line: 144, size: 96, elements: !1504)
!1504 = !{!1505, !1507, !1509}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1503, file: !1445, line: 145, baseType: !1506, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !1445, line: 61, baseType: !18)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1503, file: !1445, line: 146, baseType: !1508, size: 16, offset: 32)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !1445, line: 62, baseType: !1089)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1503, file: !1445, line: 150, baseType: !1510, size: 32, offset: 64)
!1510 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !1445, line: 127, baseType: !1444)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1499, file: !1442, line: 53, baseType: !1512, size: 480, offset: 96)
!1512 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1513, line: 107, baseType: !1514)
!1513 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1513, line: 103, size: 480, elements: !1515)
!1515 = !{!1516, !1517, !1518}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1514, file: !1513, line: 104, baseType: !18, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1514, file: !1513, line: 105, baseType: !18, size: 32, offset: 32)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1514, file: !1513, line: 106, baseType: !1519, size: 400, offset: 64)
!1519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1520, size: 400, elements: !958)
!1520 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1513, line: 100, baseType: !1521)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1513, line: 92, size: 80, elements: !1522)
!1522 = !{!1523, !1524, !1525}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1521, file: !1513, line: 93, baseType: !395, size: 8)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1521, file: !1513, line: 94, baseType: !395, size: 8, offset: 8)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1521, file: !1513, line: 96, baseType: !1526, size: 64, offset: 16)
!1526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !395, size: 64, elements: !809)
!1527 = !DIGlobalVariableExpression(var: !1528, expr: !DIExpression())
!1528 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !1529, file: !1532, line: 96, type: !1533, isLocal: false, isDefinition: true)
!1529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1531, splitDebugInlining: false, nameTableKind: None)
!1530 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1531 = !{!1527}
!1532 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1534, size: 152, elements: !1536)
!1534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1535)
!1535 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1536 = !{!1537}
!1537 = !DISubrange(count: 19)
!1538 = !DIGlobalVariableExpression(var: !1539, expr: !DIExpression())
!1539 = distinct !DIGlobalVariable(name: "nor_egid", scope: !1540, file: !1541, line: 168, type: !1891, isLocal: false, isDefinition: true)
!1540 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1541, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1542, retainedTypes: !1553, globals: !1562, splitDebugInlining: false, nameTableKind: None)
!1541 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1542 = !{!1543, !1119, !1444}
!1543 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1544, line: 49, baseType: !18, size: 32, elements: !1545)
!1544 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1545 = !{!1546, !1547, !1548, !1549, !1550, !1551, !1552}
!1546 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!1547 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!1548 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!1549 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!1550 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!1551 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!1552 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!1553 = !{!1554, !61, !1556}
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !1120, line: 47, baseType: !397)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1313, line: 146, baseType: !1558)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 143, size: 64, elements: !1559)
!1559 = !{!1560, !1561}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1558, file: !1313, line: 144, baseType: !61, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1558, file: !1313, line: 145, baseType: !61, size: 32, offset: 32)
!1562 = !{!1538, !1563, !1565, !1575, !1712, !1714, !1716, !1718, !1720, !1725, !1728, !1737, !1739, !1741, !1749, !1751, !1753, !1836, !1839, !1841, !1843, !1854, !1856, !1869}
!1563 = !DIGlobalVariableExpression(var: !1564, expr: !DIExpression())
!1564 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !1540, file: !1541, line: 94, type: !993, isLocal: true, isDefinition: true)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(name: "cmem_id", scope: !1540, file: !1541, line: 95, type: !1567, isLocal: false, isDefinition: true)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1569)
!1569 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1513, line: 100, baseType: !1570)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1513, line: 92, size: 80, elements: !1571)
!1571 = !{!1572, !1573, !1574}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1570, file: !1513, line: 93, baseType: !395, size: 8)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1570, file: !1513, line: 94, baseType: !395, size: 8, offset: 8)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1570, file: !1513, line: 96, baseType: !1526, size: 64, offset: 16)
!1575 = !DIGlobalVariableExpression(var: !1576, expr: !DIExpression())
!1576 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !1540, file: !1541, line: 127, type: !1577, isLocal: false, isDefinition: true)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !1313, line: 317, baseType: !1578)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !1313, line: 237, size: 2720, elements: !1579)
!1579 = !{!1580, !1581, !1633, !1634, !1637, !1638, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1679, !1680, !1681, !1686, !1687, !1688, !1689, !1690, !1694, !1698, !1705, !1706, !1707, !1708, !1709, !1710, !1711}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !1578, file: !1313, line: 238, baseType: !61, size: 32)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1578, file: !1313, line: 239, baseType: !1582, size: 32, offset: 32)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1313, line: 121, baseType: !1584)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 105, size: 480, elements: !1585)
!1585 = !{!1586, !1590, !1591, !1595, !1599, !1603, !1604, !1608, !1609, !1610, !1611, !1616, !1621, !1625, !1629}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !1584, file: !1313, line: 106, baseType: !1587, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 32)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{!7, !88, !88}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !1584, file: !1313, line: 107, baseType: !1388, size: 32, offset: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !1584, file: !1313, line: 108, baseType: !1592, size: 32, offset: 64)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 32)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{!88, !88, !61, !61}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !1584, file: !1313, line: 109, baseType: !1596, size: 32, offset: 96)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 32)
!1597 = !DISubroutineType(types: !1598)
!1598 = !{!7, !88, !61}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !1584, file: !1313, line: 110, baseType: !1600, size: 32, offset: 128)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 32)
!1601 = !DISubroutineType(types: !1602)
!1602 = !{!7, !88, !88, !88, !61}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !1584, file: !1313, line: 111, baseType: !1596, size: 32, offset: 160)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !1584, file: !1313, line: 112, baseType: !1605, size: 32, offset: 192)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 32)
!1606 = !DISubroutineType(types: !1607)
!1607 = !{!993, !88, !61}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !1584, file: !1313, line: 113, baseType: !1596, size: 32, offset: 224)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !1584, file: !1313, line: 114, baseType: !1596, size: 32, offset: 256)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !1584, file: !1313, line: 115, baseType: !1596, size: 32, offset: 288)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !1584, file: !1313, line: 116, baseType: !1612, size: 32, offset: 320)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 32)
!1613 = !DISubroutineType(types: !1614)
!1614 = !{!7, !88, !7, !1615, !88, !1615}
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !1120, line: 50, baseType: !18)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !1584, file: !1313, line: 117, baseType: !1617, size: 32, offset: 352)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 32)
!1618 = !DISubroutineType(types: !1619)
!1619 = !{!7, !88, !1620}
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !1584, file: !1313, line: 118, baseType: !1622, size: 32, offset: 384)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 32)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{!7, !88, !88, !61}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1584, file: !1313, line: 119, baseType: !1626, size: 32, offset: 416)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 32)
!1627 = !DISubroutineType(types: !1628)
!1628 = !{!91, !88, !61}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !1584, file: !1313, line: 120, baseType: !1630, size: 32, offset: 448)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 32)
!1631 = !DISubroutineType(types: !1632)
!1632 = !{!7, !88, !61, !88}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1578, file: !1313, line: 240, baseType: !88, size: 32, offset: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !1578, file: !1313, line: 241, baseType: !1635, size: 32, offset: 96)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !1120, line: 46, baseType: !1089)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !1578, file: !1313, line: 242, baseType: !1635, size: 32, offset: 128)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1578, file: !1313, line: 243, baseType: !1639, size: 928, offset: 160)
!1639 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1313, line: 99, baseType: !1640)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 90, size: 928, elements: !1641)
!1641 = !{!1642, !1643, !1645, !1646, !1647, !1648, !1649, !1650}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !1640, file: !1313, line: 91, baseType: !61, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1640, file: !1313, line: 92, baseType: !1644, size: 256, offset: 32)
!1644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 256, elements: !809)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !1640, file: !1313, line: 93, baseType: !1644, size: 256, offset: 288)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1640, file: !1313, line: 94, baseType: !1644, size: 256, offset: 544)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !1640, file: !1313, line: 95, baseType: !61, size: 32, offset: 800)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !1640, file: !1313, line: 96, baseType: !1636, size: 16, offset: 832)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !1640, file: !1313, line: 97, baseType: !61, size: 32, offset: 864)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !1640, file: !1313, line: 98, baseType: !61, size: 32, offset: 896)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1578, file: !1313, line: 244, baseType: !1644, size: 256, offset: 1088)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !1578, file: !1313, line: 245, baseType: !1644, size: 256, offset: 1344)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !1578, file: !1313, line: 246, baseType: !61, size: 32, offset: 1600)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !1578, file: !1313, line: 247, baseType: !61, size: 32, offset: 1632)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !1578, file: !1313, line: 248, baseType: !61, size: 32, offset: 1664)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !1578, file: !1313, line: 249, baseType: !61, size: 32, offset: 1696)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !1578, file: !1313, line: 250, baseType: !61, size: 32, offset: 1728)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !1578, file: !1313, line: 252, baseType: !61, size: 32, offset: 1760)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !1578, file: !1313, line: 255, baseType: !61, size: 32, offset: 1792)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !1578, file: !1313, line: 256, baseType: !61, size: 32, offset: 1824)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !1578, file: !1313, line: 257, baseType: !61, size: 32, offset: 1856)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !1578, file: !1313, line: 261, baseType: !61, size: 32, offset: 1888)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !1578, file: !1313, line: 262, baseType: !61, size: 32, offset: 1920)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !1578, file: !1313, line: 263, baseType: !61, size: 32, offset: 1952)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !1578, file: !1313, line: 264, baseType: !61, size: 32, offset: 1984)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !1578, file: !1313, line: 265, baseType: !61, size: 32, offset: 2016)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !1578, file: !1313, line: 266, baseType: !61, size: 32, offset: 2048)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !1578, file: !1313, line: 267, baseType: !61, size: 32, offset: 2080)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !1578, file: !1313, line: 268, baseType: !61, size: 32, offset: 2112)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !1578, file: !1313, line: 270, baseType: !61, size: 32, offset: 2144)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !1578, file: !1313, line: 271, baseType: !61, size: 32, offset: 2176)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !1578, file: !1313, line: 272, baseType: !1673, size: 32, offset: 2208)
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 32)
!1674 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !1313, line: 229, baseType: !1675)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 226, size: 64, elements: !1676)
!1676 = !{!1677, !1678}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !1675, file: !1313, line: 227, baseType: !61, size: 32)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !1675, file: !1313, line: 228, baseType: !61, size: 32, offset: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !1578, file: !1313, line: 273, baseType: !1554, size: 32, offset: 2240)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !1578, file: !1313, line: 274, baseType: !1554, size: 32, offset: 2272)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !1578, file: !1313, line: 276, baseType: !1682, size: 32, offset: 2304)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = !DISubroutineType(types: !1684)
!1684 = !{null, !1685}
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !1578, file: !1313, line: 278, baseType: !61, size: 32, offset: 2336)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !1578, file: !1313, line: 280, baseType: !1682, size: 32, offset: 2368)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !1578, file: !1313, line: 281, baseType: !1682, size: 32, offset: 2400)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !1578, file: !1313, line: 283, baseType: !61, size: 32, offset: 2432)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !1578, file: !1313, line: 284, baseType: !1691, size: 32, offset: 2464)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!61, !1685}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !1578, file: !1313, line: 285, baseType: !1695, size: 32, offset: 2496)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 32)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{!61, !1685, !61, !61}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !1578, file: !1313, line: 293, baseType: !1699, size: 32, offset: 2528)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 32)
!1700 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !1313, line: 162, baseType: !1701)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 159, size: 64, elements: !1702)
!1702 = !{!1703, !1704}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1701, file: !1313, line: 160, baseType: !61, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !1701, file: !1313, line: 161, baseType: !61, size: 32, offset: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !1578, file: !1313, line: 295, baseType: !61, size: 32, offset: 2560)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !1578, file: !1313, line: 296, baseType: !61, size: 32, offset: 2592)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !1578, file: !1313, line: 297, baseType: !61, size: 32, offset: 2624)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !1578, file: !1313, line: 298, baseType: !1636, size: 16, offset: 2656)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !1578, file: !1313, line: 302, baseType: !1636, size: 16, offset: 2672)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !1578, file: !1313, line: 310, baseType: !91, size: 8, offset: 2688)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1578, file: !1313, line: 313, baseType: !91, size: 8, offset: 2696)
!1712 = !DIGlobalVariableExpression(var: !1713, expr: !DIExpression())
!1713 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !1540, file: !1541, line: 129, type: !61, isLocal: false, isDefinition: true)
!1714 = !DIGlobalVariableExpression(var: !1715, expr: !DIExpression())
!1715 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !1540, file: !1541, line: 130, type: !61, isLocal: false, isDefinition: true)
!1716 = !DIGlobalVariableExpression(var: !1717, expr: !DIExpression())
!1717 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !1540, file: !1541, line: 131, type: !61, isLocal: false, isDefinition: true)
!1718 = !DIGlobalVariableExpression(var: !1719, expr: !DIExpression())
!1719 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !1540, file: !1541, line: 132, type: !1087, isLocal: true, isDefinition: true)
!1720 = !DIGlobalVariableExpression(var: !1721, expr: !DIExpression())
!1721 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !1540, file: !1541, line: 136, type: !1722, isLocal: false, isDefinition: true)
!1722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !395, size: 4096, elements: !1723)
!1723 = !{!1724}
!1724 = !DISubrange(count: 512)
!1725 = !DIGlobalVariableExpression(var: !1726, expr: !DIExpression())
!1726 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !1540, file: !1541, line: 146, type: !1727, isLocal: true, isDefinition: true)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1557, size: 512, elements: !809)
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression())
!1729 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !1540, file: !1541, line: 152, type: !1730, isLocal: true, isDefinition: true)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1732)
!1732 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1513, line: 116, baseType: !1733)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1513, line: 113, size: 64, elements: !1734)
!1734 = !{!1735, !1736}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !1733, file: !1513, line: 114, baseType: !61, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !1733, file: !1513, line: 115, baseType: !61, size: 32, offset: 32)
!1737 = !DIGlobalVariableExpression(var: !1738, expr: !DIExpression())
!1738 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !1540, file: !1541, line: 156, type: !61, isLocal: false, isDefinition: true)
!1739 = !DIGlobalVariableExpression(var: !1740, expr: !DIExpression())
!1740 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !1540, file: !1541, line: 157, type: !61, isLocal: false, isDefinition: true)
!1741 = !DIGlobalVariableExpression(var: !1742, expr: !DIExpression())
!1742 = distinct !DIGlobalVariable(name: "BankInfo", scope: !1540, file: !1541, line: 160, type: !1743, isLocal: true, isDefinition: true)
!1743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1744, size: 512, elements: !809)
!1744 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1313, line: 152, baseType: !1745)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 149, size: 64, elements: !1746)
!1746 = !{!1747, !1748}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1745, file: !1313, line: 150, baseType: !61, size: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1745, file: !1313, line: 151, baseType: !61, size: 32, offset: 32)
!1749 = !DIGlobalVariableExpression(var: !1750, expr: !DIExpression())
!1750 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !1540, file: !1541, line: 173, type: !61, isLocal: false, isDefinition: true)
!1751 = !DIGlobalVariableExpression(var: !1752, expr: !DIExpression())
!1752 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !1540, file: !1541, line: 176, type: !1583, isLocal: false, isDefinition: true)
!1753 = !DIGlobalVariableExpression(var: !1754, expr: !DIExpression())
!1754 = distinct !DIGlobalVariable(name: "mtdflash", scope: !1540, file: !1541, line: 177, type: !1755, isLocal: false, isDefinition: true)
!1755 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1211, line: 193, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1211, line: 134, size: 1824, elements: !1757)
!1757 = !{!1758, !1759, !1760, !1766, !1772, !1773, !1774, !1775, !1777, !1778, !1779, !1780, !1787, !1788, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1756, file: !1211, line: 136, baseType: !61, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1756, file: !1211, line: 137, baseType: !818, size: 32, offset: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1756, file: !1211, line: 138, baseType: !1761, size: 32, offset: 64)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1295, line: 56, baseType: !1762)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 32)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1295, line: 54, size: 8, elements: !1764)
!1764 = !{!1765}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1763, file: !1295, line: 55, baseType: !395, size: 8)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1756, file: !1211, line: 139, baseType: !1767, size: 32, offset: 96)
!1767 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1295, line: 46, baseType: !1768)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 32)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1295, line: 44, size: 8, elements: !1770)
!1770 = !{!1771}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1769, file: !1295, line: 45, baseType: !395, size: 8)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1756, file: !1211, line: 140, baseType: !1307, size: 8, offset: 128)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1756, file: !1211, line: 143, baseType: !1556, size: 32, offset: 160)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1756, file: !1211, line: 144, baseType: !818, size: 32, offset: 192)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1756, file: !1211, line: 145, baseType: !1776, size: 32, offset: 224)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1756, file: !1211, line: 146, baseType: !818, size: 32, offset: 256)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1756, file: !1211, line: 147, baseType: !61, size: 32, offset: 288)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1756, file: !1211, line: 148, baseType: !818, size: 32, offset: 320)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1756, file: !1211, line: 151, baseType: !1781, size: 1024, offset: 352)
!1781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1782, size: 1024, elements: !1336)
!1782 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1313, line: 170, baseType: !1783)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 167, size: 64, elements: !1784)
!1784 = !{!1785, !1786}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1783, file: !1313, line: 168, baseType: !61, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1783, file: !1313, line: 169, baseType: !61, size: 32, offset: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1756, file: !1211, line: 155, baseType: !1338, size: 32, offset: 1376)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1756, file: !1211, line: 156, baseType: !1789, size: 32, offset: 1408)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1211, line: 124, baseType: !1791)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1211, line: 90, size: 200, elements: !1792)
!1792 = !{!1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1791, file: !1211, line: 91, baseType: !395, size: 8)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1791, file: !1211, line: 92, baseType: !395, size: 8, offset: 8)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1791, file: !1211, line: 94, baseType: !395, size: 8, offset: 16)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1791, file: !1211, line: 95, baseType: !395, size: 8, offset: 24)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1791, file: !1211, line: 96, baseType: !395, size: 8, offset: 32)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1791, file: !1211, line: 98, baseType: !395, size: 8, offset: 40)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1791, file: !1211, line: 99, baseType: !395, size: 8, offset: 48)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1791, file: !1211, line: 100, baseType: !395, size: 8, offset: 56)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1791, file: !1211, line: 101, baseType: !395, size: 8, offset: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1791, file: !1211, line: 103, baseType: !395, size: 8, offset: 72)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1791, file: !1211, line: 104, baseType: !395, size: 8, offset: 80)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1791, file: !1211, line: 106, baseType: !395, size: 8, offset: 88)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1791, file: !1211, line: 107, baseType: !395, size: 8, offset: 96)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1791, file: !1211, line: 108, baseType: !395, size: 8, offset: 104)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1791, file: !1211, line: 109, baseType: !395, size: 8, offset: 112)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1791, file: !1211, line: 110, baseType: !395, size: 8, offset: 120)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1791, file: !1211, line: 111, baseType: !395, size: 8, offset: 128)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1791, file: !1211, line: 112, baseType: !395, size: 8, offset: 136)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1791, file: !1211, line: 114, baseType: !395, size: 8, offset: 144)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1791, file: !1211, line: 115, baseType: !395, size: 8, offset: 152)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1791, file: !1211, line: 118, baseType: !395, size: 8, offset: 160)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1791, file: !1211, line: 119, baseType: !395, size: 8, offset: 168)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1791, file: !1211, line: 120, baseType: !395, size: 8, offset: 176)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1791, file: !1211, line: 121, baseType: !395, size: 8, offset: 184)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1791, file: !1211, line: 122, baseType: !395, size: 8, offset: 192)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1756, file: !1211, line: 157, baseType: !61, size: 32, offset: 1440)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1756, file: !1211, line: 158, baseType: !1087, size: 16, offset: 1472)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1756, file: !1211, line: 159, baseType: !1087, size: 16, offset: 1488)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1756, file: !1211, line: 163, baseType: !1087, size: 16, offset: 1504)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1756, file: !1211, line: 164, baseType: !1087, size: 16, offset: 1520)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1756, file: !1211, line: 167, baseType: !395, size: 8, offset: 1536)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1756, file: !1211, line: 168, baseType: !1377, size: 24, offset: 1544)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1756, file: !1211, line: 169, baseType: !395, size: 8, offset: 1568)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1756, file: !1211, line: 170, baseType: !395, size: 8, offset: 1576)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1756, file: !1211, line: 173, baseType: !1087, size: 16, offset: 1584)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1756, file: !1211, line: 174, baseType: !61, size: 32, offset: 1600)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1756, file: !1211, line: 175, baseType: !61, size: 32, offset: 1632)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1756, file: !1211, line: 178, baseType: !91, size: 8, offset: 1664)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1756, file: !1211, line: 179, baseType: !91, size: 8, offset: 1672)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1756, file: !1211, line: 182, baseType: !1388, size: 32, offset: 1696)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1756, file: !1211, line: 186, baseType: !1388, size: 32, offset: 1728)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1756, file: !1211, line: 187, baseType: !1393, size: 32, offset: 1760)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1756, file: !1211, line: 188, baseType: !1393, size: 32, offset: 1792)
!1836 = !DIGlobalVariableExpression(var: !1837, expr: !DIExpression())
!1837 = distinct !DIGlobalVariable(name: "StatusMap", scope: !1540, file: !1541, line: 178, type: !1838, isLocal: false, isDefinition: true)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1339, size: 64, elements: !809)
!1839 = !DIGlobalVariableExpression(var: !1840, expr: !DIExpression())
!1840 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !1540, file: !1541, line: 179, type: !1790, isLocal: false, isDefinition: true)
!1841 = !DIGlobalVariableExpression(var: !1842, expr: !DIExpression())
!1842 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !1540, file: !1541, line: 204, type: !1727, isLocal: true, isDefinition: true)
!1843 = !DIGlobalVariableExpression(var: !1844, expr: !DIExpression())
!1844 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !1540, file: !1541, line: 205, type: !1845, isLocal: false, isDefinition: true)
!1845 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1846, line: 93, baseType: !1847)
!1846 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1846, line: 83, size: 1056, elements: !1848)
!1848 = !{!1849, !1850, !1851, !1852, !1853}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !1847, file: !1846, line: 84, baseType: !61, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1847, file: !1846, line: 85, baseType: !1582, size: 32, offset: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1847, file: !1846, line: 86, baseType: !88, size: 32, offset: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1847, file: !1846, line: 87, baseType: !1639, size: 928, offset: 96)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !1847, file: !1846, line: 92, baseType: !91, size: 8, offset: 1024)
!1854 = !DIGlobalVariableExpression(var: !1855, expr: !DIExpression())
!1855 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !1540, file: !1541, line: 208, type: !1755, isLocal: false, isDefinition: true)
!1856 = !DIGlobalVariableExpression(var: !1857, expr: !DIExpression())
!1857 = distinct !DIGlobalVariable(name: "nor_list", scope: !1540, file: !1541, line: 114, type: !1858, isLocal: true, isDefinition: true)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 32)
!1859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1860)
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1513, line: 125, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1513, line: 119, size: 1088, elements: !1862)
!1862 = !{!1863, !1864, !1865, !1866, !1868}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !1861, file: !1513, line: 120, baseType: !1087, size: 16)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !1861, file: !1513, line: 121, baseType: !1087, size: 16, offset: 16)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !1861, file: !1513, line: 122, baseType: !61, size: 32, offset: 32)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !1861, file: !1513, line: 123, baseType: !1867, size: 512, offset: 64)
!1867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1732, size: 512, elements: !809)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1861, file: !1513, line: 124, baseType: !1743, size: 512, offset: 576)
!1869 = !DIGlobalVariableExpression(var: !1870, expr: !DIExpression())
!1870 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !1540, file: !1871, line: 42, type: !1872, isLocal: true, isDefinition: true)
!1871 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1873)
!1873 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !1541, line: 66, baseType: !1874)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1541, line: 63, size: 5600, elements: !1875)
!1875 = !{!1876, !1883}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1874, file: !1541, line: 64, baseType: !1877, size: 96)
!1877 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1445, line: 152, baseType: !1878)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1445, line: 144, size: 96, elements: !1879)
!1879 = !{!1880, !1881, !1882}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1878, file: !1445, line: 145, baseType: !1506, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1878, file: !1445, line: 146, baseType: !1508, size: 16, offset: 32)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1878, file: !1445, line: 150, baseType: !1510, size: 32, offset: 64)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1874, file: !1541, line: 65, baseType: !1884, size: 5504, offset: 96)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1513, line: 132, baseType: !1885)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1513, line: 128, size: 5504, elements: !1886)
!1886 = !{!1887, !1888, !1889}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1885, file: !1513, line: 129, baseType: !18, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1885, file: !1513, line: 130, baseType: !18, size: 32, offset: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1885, file: !1513, line: 131, baseType: !1890, size: 5440, offset: 64)
!1890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1860, size: 5440, elements: !958)
!1891 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !1295, line: 79, baseType: !1892)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 32)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1295, line: 77, size: 8, elements: !1894)
!1894 = !{!1895}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1893, file: !1295, line: 78, baseType: !395, size: 8)
!1896 = !DIGlobalVariableExpression(var: !1897, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1897 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !1898, file: !1899, line: 82, type: !7, isLocal: true, isDefinition: true)
!1898 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1899, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1900, retainedTypes: !1906, globals: !1951, splitDebugInlining: false, nameTableKind: None)
!1899 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1900 = !{!1235, !1119, !1901}
!1901 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1236, line: 123, baseType: !18, size: 32, elements: !1902)
!1902 = !{!1903, !1904, !1905}
!1903 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!1904 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!1905 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!1906 = !{!61, !1907, !88, !818}
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 32)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1313, line: 190, baseType: !1909)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 173, size: 1376, elements: !1910)
!1910 = !{!1911, !1912, !1913, !1919, !1925, !1926, !1933, !1934, !1941, !1942, !1943, !1944}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1909, file: !1313, line: 174, baseType: !61, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1909, file: !1313, line: 175, baseType: !1554, size: 32, offset: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1909, file: !1313, line: 176, baseType: !1914, size: 32, offset: 64)
!1914 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1295, line: 56, baseType: !1915)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 32)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1295, line: 54, size: 8, elements: !1917)
!1917 = !{!1918}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1916, file: !1295, line: 55, baseType: !395, size: 8)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1909, file: !1313, line: 177, baseType: !1920, size: 32, offset: 96)
!1920 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1295, line: 46, baseType: !1921)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1295, line: 44, size: 8, elements: !1923)
!1923 = !{!1924}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1922, file: !1295, line: 45, baseType: !395, size: 8)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1909, file: !1313, line: 178, baseType: !1307, size: 8, offset: 128)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1909, file: !1313, line: 180, baseType: !1927, size: 32, offset: 160)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 32)
!1928 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1313, line: 146, baseType: !1929)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 143, size: 64, elements: !1930)
!1930 = !{!1931, !1932}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1929, file: !1313, line: 144, baseType: !61, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1929, file: !1313, line: 145, baseType: !61, size: 32, offset: 32)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1909, file: !1313, line: 181, baseType: !1554, size: 32, offset: 192)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1909, file: !1313, line: 182, baseType: !1935, size: 32, offset: 224)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 32)
!1936 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1313, line: 152, baseType: !1937)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 149, size: 64, elements: !1938)
!1938 = !{!1939, !1940}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1937, file: !1313, line: 150, baseType: !61, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1937, file: !1313, line: 151, baseType: !61, size: 32, offset: 32)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1909, file: !1313, line: 183, baseType: !1554, size: 32, offset: 256)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1909, file: !1313, line: 184, baseType: !61, size: 32, offset: 288)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1909, file: !1313, line: 185, baseType: !1554, size: 32, offset: 320)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1909, file: !1313, line: 188, baseType: !1945, size: 1024, offset: 352)
!1945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1946, size: 1024, elements: !1336)
!1946 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1313, line: 170, baseType: !1947)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 167, size: 64, elements: !1948)
!1948 = !{!1949, !1950}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1947, file: !1313, line: 168, baseType: !61, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1947, file: !1313, line: 169, baseType: !61, size: 32, offset: 32)
!1951 = !{!1952, !1953}
!1952 = !DIGlobalVariableExpression(var: !1897, expr: !DIExpression())
!1953 = !DIGlobalVariableExpression(var: !1954, expr: !DIExpression())
!1954 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !1898, file: !1899, line: 432, type: !1955, isLocal: true, isDefinition: true)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !1236, line: 119, baseType: !1235)
!1956 = !DIGlobalVariableExpression(var: !1954, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!1957 = !DIGlobalVariableExpression(var: !1958, expr: !DIExpression())
!1958 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !1959, file: !1960, line: 60, type: !61, isLocal: false, isDefinition: true)
!1959 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1960, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1961, retainedTypes: !1969, globals: !1970, splitDebugInlining: false, nameTableKind: None)
!1960 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!1961 = !{!1962}
!1962 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 387, baseType: !7, size: 32, elements: !1963)
!1963 = !{!1964, !1965, !1966, !1967, !1968}
!1964 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!1965 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!1966 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!1967 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!1968 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!1969 = !{!88, !61}
!1970 = !{!1957, !1971, !1973, !1975, !1977, !1979, !2033, !2035}
!1971 = !DIGlobalVariableExpression(var: !1972, expr: !DIExpression())
!1972 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !1959, file: !1960, line: 61, type: !61, isLocal: false, isDefinition: true)
!1973 = !DIGlobalVariableExpression(var: !1974, expr: !DIExpression())
!1974 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !1959, file: !1960, line: 107, type: !61, isLocal: false, isDefinition: true)
!1975 = !DIGlobalVariableExpression(var: !1976, expr: !DIExpression())
!1976 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !1959, file: !1960, line: 132, type: !91, isLocal: false, isDefinition: true)
!1977 = !DIGlobalVariableExpression(var: !1978, expr: !DIExpression())
!1978 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !1959, file: !1960, line: 133, type: !91, isLocal: false, isDefinition: true)
!1979 = !DIGlobalVariableExpression(var: !1980, expr: !DIExpression())
!1980 = distinct !DIGlobalVariable(name: "replaced", scope: !1981, file: !1960, line: 139, type: !61, isLocal: true, isDefinition: true)
!1981 = distinct !DISubprogram(name: "LookupAddress", scope: !1960, file: !1960, line: 135, type: !1982, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1959, retainedNodes: !1984)
!1982 = !DISubroutineType(types: !1983)
!1983 = !{!61, !88, !61}
!1984 = !{!1985, !1986, !1987, !2032}
!1985 = !DILocalVariable(name: "DriveData", arg: 1, scope: !1981, file: !1960, line: 135, type: !88)
!1986 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !1981, file: !1960, line: 135, type: !61)
!1987 = !DILocalVariable(name: "D", scope: !1981, file: !1960, line: 137, type: !1988)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 32)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1313, line: 190, baseType: !1990)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 173, size: 1376, elements: !1991)
!1991 = !{!1992, !1993, !1994, !2000, !2006, !2007, !2014, !2015, !2022, !2023, !2024, !2025}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1990, file: !1313, line: 174, baseType: !61, size: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1990, file: !1313, line: 175, baseType: !1554, size: 32, offset: 32)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1990, file: !1313, line: 176, baseType: !1995, size: 32, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1295, line: 56, baseType: !1996)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 32)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1295, line: 54, size: 8, elements: !1998)
!1998 = !{!1999}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1997, file: !1295, line: 55, baseType: !395, size: 8)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1990, file: !1313, line: 177, baseType: !2001, size: 32, offset: 96)
!2001 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1295, line: 46, baseType: !2002)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 32)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1295, line: 44, size: 8, elements: !2004)
!2004 = !{!2005}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2003, file: !1295, line: 45, baseType: !395, size: 8)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1990, file: !1313, line: 178, baseType: !1307, size: 8, offset: 128)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1990, file: !1313, line: 180, baseType: !2008, size: 32, offset: 160)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1313, line: 146, baseType: !2010)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 143, size: 64, elements: !2011)
!2011 = !{!2012, !2013}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2010, file: !1313, line: 144, baseType: !61, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2010, file: !1313, line: 145, baseType: !61, size: 32, offset: 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1990, file: !1313, line: 181, baseType: !1554, size: 32, offset: 192)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1990, file: !1313, line: 182, baseType: !2016, size: 32, offset: 224)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1313, line: 152, baseType: !2018)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 149, size: 64, elements: !2019)
!2019 = !{!2020, !2021}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2018, file: !1313, line: 150, baseType: !61, size: 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2018, file: !1313, line: 151, baseType: !61, size: 32, offset: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1990, file: !1313, line: 183, baseType: !1554, size: 32, offset: 256)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1990, file: !1313, line: 184, baseType: !61, size: 32, offset: 288)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1990, file: !1313, line: 185, baseType: !1554, size: 32, offset: 320)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1990, file: !1313, line: 188, baseType: !2026, size: 1024, offset: 352)
!2026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2027, size: 1024, elements: !1336)
!2027 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1313, line: 170, baseType: !2028)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 167, size: 64, elements: !2029)
!2029 = !{!2030, !2031}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2028, file: !1313, line: 168, baseType: !61, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2028, file: !1313, line: 169, baseType: !61, size: 32, offset: 32)
!2032 = !DILocalVariable(name: "addr", scope: !1981, file: !1960, line: 138, type: !61)
!2033 = !DIGlobalVariableExpression(var: !2034, expr: !DIExpression())
!2034 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !1981, file: !1960, line: 140, type: !61, isLocal: true, isDefinition: true)
!2035 = !DIGlobalVariableExpression(var: !2036, expr: !DIExpression())
!2036 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !1981, file: !1960, line: 141, type: !61, isLocal: true, isDefinition: true)
!2037 = !DIGlobalVariableExpression(var: !2038, expr: !DIExpression())
!2038 = distinct !DIGlobalVariable(name: "emi_settings", scope: !2039, file: !2040, line: 44, type: !2186, isLocal: false, isDefinition: true)
!2039 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2040, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2041, retainedTypes: !2047, globals: !2048, splitDebugInlining: false, nameTableKind: None)
!2040 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!2041 = !{!2042}
!2042 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !2043, line: 40, baseType: !18, size: 32, elements: !2044)
!2043 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!2044 = !{!2045, !2046}
!2045 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!2046 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!2047 = !{!1092}
!2048 = !{!2037, !2049, !2051, !2053, !2055, !2156, !2158, !2160, !2162, !2164, !2166, !2168, !2170, !2172, !2174, !2176, !2178, !2180, !2182, !2184}
!2049 = !DIGlobalVariableExpression(var: !2050, expr: !DIExpression())
!2050 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !2039, file: !2040, line: 65, type: !61, isLocal: false, isDefinition: true)
!2051 = !DIGlobalVariableExpression(var: !2052, expr: !DIExpression())
!2052 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !2039, file: !2040, line: 66, type: !61, isLocal: false, isDefinition: true)
!2053 = !DIGlobalVariableExpression(var: !2054, expr: !DIExpression())
!2054 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !2039, file: !2040, line: 67, type: !61, isLocal: false, isDefinition: true)
!2055 = !DIGlobalVariableExpression(var: !2056, expr: !DIExpression())
!2056 = distinct !DIGlobalVariable(name: "emi_register", scope: !2039, file: !2040, line: 83, type: !2057, isLocal: false, isDefinition: true)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !56, line: 2524, baseType: !2059)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2447, size: 6752, elements: !2060)
!2060 = !{!2061, !2065, !2066, !2067, !2068, !2072, !2073, !2075, !2076, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2059, file: !56, line: 2448, baseType: !2062, size: 768)
!2062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 768, elements: !2063)
!2063 = !{!2064}
!2064 = !DISubrange(count: 96)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !2059, file: !56, line: 2449, baseType: !60, size: 32, offset: 768)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2059, file: !56, line: 2450, baseType: !942, size: 96, offset: 800)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !2059, file: !56, line: 2451, baseType: !60, size: 32, offset: 896)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2059, file: !56, line: 2452, baseType: !2069, size: 160, offset: 928)
!2069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 160, elements: !2070)
!2070 = !{!2071}
!2071 = !DISubrange(count: 20)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !2059, file: !56, line: 2453, baseType: !60, size: 32, offset: 1088)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2059, file: !56, line: 2454, baseType: !2074, size: 32, offset: 1120)
!2074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 32, elements: !526)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !2059, file: !56, line: 2455, baseType: !60, size: 32, offset: 1152)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2059, file: !56, line: 2456, baseType: !2077, size: 480, offset: 1184)
!2077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 480, elements: !2078)
!2078 = !{!2079}
!2079 = !DISubrange(count: 60)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !2059, file: !56, line: 2457, baseType: !60, size: 32, offset: 1664)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2059, file: !56, line: 2458, baseType: !2074, size: 32, offset: 1696)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !2059, file: !56, line: 2459, baseType: !60, size: 32, offset: 1728)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2059, file: !56, line: 2460, baseType: !2074, size: 32, offset: 1760)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !2059, file: !56, line: 2461, baseType: !60, size: 32, offset: 1792)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2059, file: !56, line: 2462, baseType: !2069, size: 160, offset: 1824)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !2059, file: !56, line: 2463, baseType: !60, size: 32, offset: 1984)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2059, file: !56, line: 2464, baseType: !2074, size: 32, offset: 2016)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !2059, file: !56, line: 2465, baseType: !60, size: 32, offset: 2048)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2059, file: !56, line: 2466, baseType: !2074, size: 32, offset: 2080)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !2059, file: !56, line: 2467, baseType: !60, size: 32, offset: 2112)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2059, file: !56, line: 2468, baseType: !2074, size: 32, offset: 2144)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !2059, file: !56, line: 2469, baseType: !60, size: 32, offset: 2176)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2059, file: !56, line: 2470, baseType: !2094, size: 224, offset: 2208)
!2094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 224, elements: !2095)
!2095 = !{!2096}
!2096 = !DISubrange(count: 28)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !2059, file: !56, line: 2471, baseType: !60, size: 32, offset: 2432)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !2059, file: !56, line: 2472, baseType: !2074, size: 32, offset: 2464)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !2059, file: !56, line: 2473, baseType: !60, size: 32, offset: 2496)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !2059, file: !56, line: 2474, baseType: !942, size: 96, offset: 2528)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !2059, file: !56, line: 2475, baseType: !60, size: 32, offset: 2624)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !2059, file: !56, line: 2476, baseType: !2074, size: 32, offset: 2656)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !2059, file: !56, line: 2477, baseType: !60, size: 32, offset: 2688)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !2059, file: !56, line: 2478, baseType: !2074, size: 32, offset: 2720)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !2059, file: !56, line: 2479, baseType: !60, size: 32, offset: 2752)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !2059, file: !56, line: 2480, baseType: !2074, size: 32, offset: 2784)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !2059, file: !56, line: 2481, baseType: !60, size: 32, offset: 2816)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !2059, file: !56, line: 2482, baseType: !942, size: 96, offset: 2848)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !2059, file: !56, line: 2483, baseType: !60, size: 32, offset: 2944)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !2059, file: !56, line: 2484, baseType: !2074, size: 32, offset: 2976)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !2059, file: !56, line: 2485, baseType: !60, size: 32, offset: 3008)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !2059, file: !56, line: 2486, baseType: !2074, size: 32, offset: 3040)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !2059, file: !56, line: 2487, baseType: !60, size: 32, offset: 3072)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !2059, file: !56, line: 2488, baseType: !2069, size: 160, offset: 3104)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !2059, file: !56, line: 2489, baseType: !60, size: 32, offset: 3264)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !2059, file: !56, line: 2490, baseType: !2074, size: 32, offset: 3296)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !2059, file: !56, line: 2491, baseType: !60, size: 32, offset: 3328)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !2059, file: !56, line: 2492, baseType: !2119, size: 736, offset: 3360)
!2119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 736, elements: !2120)
!2120 = !{!2121}
!2121 = !DISubrange(count: 92)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !2059, file: !56, line: 2493, baseType: !60, size: 32, offset: 4096)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !2059, file: !56, line: 2494, baseType: !2074, size: 32, offset: 4128)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !2059, file: !56, line: 2495, baseType: !60, size: 32, offset: 4160)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !2059, file: !56, line: 2496, baseType: !2074, size: 32, offset: 4192)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !2059, file: !56, line: 2497, baseType: !60, size: 32, offset: 4224)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !2059, file: !56, line: 2498, baseType: !2074, size: 32, offset: 4256)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !2059, file: !56, line: 2499, baseType: !60, size: 32, offset: 4288)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !2059, file: !56, line: 2500, baseType: !2074, size: 32, offset: 4320)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !2059, file: !56, line: 2501, baseType: !60, size: 32, offset: 4352)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !2059, file: !56, line: 2502, baseType: !2074, size: 32, offset: 4384)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !2059, file: !56, line: 2503, baseType: !60, size: 32, offset: 4416)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !2059, file: !56, line: 2504, baseType: !2074, size: 32, offset: 4448)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !2059, file: !56, line: 2505, baseType: !60, size: 32, offset: 4480)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !2059, file: !56, line: 2506, baseType: !2074, size: 32, offset: 4512)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !2059, file: !56, line: 2507, baseType: !60, size: 32, offset: 4544)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !2059, file: !56, line: 2508, baseType: !2074, size: 32, offset: 4576)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !2059, file: !56, line: 2509, baseType: !60, size: 32, offset: 4608)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !2059, file: !56, line: 2510, baseType: !2077, size: 480, offset: 4640)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !2059, file: !56, line: 2511, baseType: !60, size: 32, offset: 5120)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !2059, file: !56, line: 2512, baseType: !2142, size: 992, offset: 5152)
!2142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 992, elements: !2143)
!2143 = !{!2144}
!2144 = !DISubrange(count: 124)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !2059, file: !56, line: 2513, baseType: !60, size: 32, offset: 6144)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !2059, file: !56, line: 2514, baseType: !2074, size: 32, offset: 6176)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !2059, file: !56, line: 2515, baseType: !60, size: 32, offset: 6208)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !2059, file: !56, line: 2516, baseType: !2074, size: 32, offset: 6240)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !2059, file: !56, line: 2517, baseType: !60, size: 32, offset: 6272)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !2059, file: !56, line: 2518, baseType: !2074, size: 32, offset: 6304)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !2059, file: !56, line: 2519, baseType: !60, size: 32, offset: 6336)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !2059, file: !56, line: 2520, baseType: !2069, size: 160, offset: 6368)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !2059, file: !56, line: 2521, baseType: !60, size: 32, offset: 6528)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !2059, file: !56, line: 2522, baseType: !2069, size: 160, offset: 6560)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !2059, file: !56, line: 2523, baseType: !60, size: 32, offset: 6720)
!2156 = !DIGlobalVariableExpression(var: !2157, expr: !DIExpression())
!2157 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !2039, file: !2040, line: 485, type: !60, isLocal: false, isDefinition: true)
!2158 = !DIGlobalVariableExpression(var: !2159, expr: !DIExpression())
!2159 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !2039, file: !2040, line: 68, type: !61, isLocal: false, isDefinition: true)
!2160 = !DIGlobalVariableExpression(var: !2161, expr: !DIExpression())
!2161 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !2039, file: !2040, line: 69, type: !61, isLocal: false, isDefinition: true)
!2162 = !DIGlobalVariableExpression(var: !2163, expr: !DIExpression())
!2163 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !2039, file: !2040, line: 70, type: !61, isLocal: false, isDefinition: true)
!2164 = !DIGlobalVariableExpression(var: !2165, expr: !DIExpression())
!2165 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !2039, file: !2040, line: 71, type: !61, isLocal: false, isDefinition: true)
!2166 = !DIGlobalVariableExpression(var: !2167, expr: !DIExpression())
!2167 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !2039, file: !2040, line: 72, type: !61, isLocal: false, isDefinition: true)
!2168 = !DIGlobalVariableExpression(var: !2169, expr: !DIExpression())
!2169 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !2039, file: !2040, line: 73, type: !61, isLocal: false, isDefinition: true)
!2170 = !DIGlobalVariableExpression(var: !2171, expr: !DIExpression())
!2171 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !2039, file: !2040, line: 74, type: !61, isLocal: false, isDefinition: true)
!2172 = !DIGlobalVariableExpression(var: !2173, expr: !DIExpression())
!2173 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !2039, file: !2040, line: 75, type: !61, isLocal: false, isDefinition: true)
!2174 = !DIGlobalVariableExpression(var: !2175, expr: !DIExpression())
!2175 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !2039, file: !2040, line: 76, type: !61, isLocal: false, isDefinition: true)
!2176 = !DIGlobalVariableExpression(var: !2177, expr: !DIExpression())
!2177 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !2039, file: !2040, line: 77, type: !61, isLocal: false, isDefinition: true)
!2178 = !DIGlobalVariableExpression(var: !2179, expr: !DIExpression())
!2179 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !2039, file: !2040, line: 78, type: !61, isLocal: false, isDefinition: true)
!2180 = !DIGlobalVariableExpression(var: !2181, expr: !DIExpression())
!2181 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !2039, file: !2040, line: 79, type: !61, isLocal: false, isDefinition: true)
!2182 = !DIGlobalVariableExpression(var: !2183, expr: !DIExpression())
!2183 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !2039, file: !2040, line: 80, type: !61, isLocal: false, isDefinition: true)
!2184 = !DIGlobalVariableExpression(var: !2185, expr: !DIExpression())
!2185 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !2039, file: !2040, line: 84, type: !2058, isLocal: false, isDefinition: true)
!2186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2187, size: 416, elements: !76)
!2187 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !2043, line: 60, baseType: !2188)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2043, line: 45, size: 416, elements: !2189)
!2189 = !{!2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !2188, file: !2043, line: 46, baseType: !61, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !2188, file: !2043, line: 47, baseType: !61, size: 32, offset: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !2188, file: !2043, line: 48, baseType: !61, size: 32, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !2188, file: !2043, line: 49, baseType: !61, size: 32, offset: 96)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !2188, file: !2043, line: 50, baseType: !61, size: 32, offset: 128)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !2188, file: !2043, line: 51, baseType: !61, size: 32, offset: 160)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !2188, file: !2043, line: 52, baseType: !61, size: 32, offset: 192)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !2188, file: !2043, line: 53, baseType: !61, size: 32, offset: 224)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !2188, file: !2043, line: 54, baseType: !61, size: 32, offset: 256)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !2188, file: !2043, line: 55, baseType: !61, size: 32, offset: 288)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !2188, file: !2043, line: 56, baseType: !61, size: 32, offset: 320)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !2188, file: !2043, line: 57, baseType: !61, size: 32, offset: 352)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !2188, file: !2043, line: 58, baseType: !61, size: 32, offset: 384)
!2203 = !DIGlobalVariableExpression(var: !2204, expr: !DIExpression())
!2204 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !2205, file: !2206, line: 48, type: !2214, isLocal: false, isDefinition: true)
!2205 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2206, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2207, globals: !2213, splitDebugInlining: false, nameTableKind: None)
!2206 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!2207 = !{!2208}
!2208 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1034, line: 100, baseType: !18, size: 32, elements: !2209)
!2209 = !{!2210, !2211, !2212}
!2210 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!2211 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!2212 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!2213 = !{!2203}
!2214 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !1034, line: 104, baseType: !2208)
!2215 = !DIGlobalVariableExpression(var: !2216, expr: !DIExpression())
!2216 = distinct !DIGlobalVariable(name: "heap_end", scope: !2217, file: !2218, line: 69, type: !2223, isLocal: true, isDefinition: true)
!2217 = distinct !DISubprogram(name: "_sbrk_r", scope: !2218, file: !2218, line: 66, type: !2219, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !2414)
!2218 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!2221, !2224, !2409}
!2221 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !2222, line: 123, baseType: !2223)
!2222 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 32)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !2226, line: 377, size: 1920, elements: !2227)
!2226 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!2227 = !{!2228, !2229, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2308, !2329, !2333, !2334, !2335, !2336, !2346, !2359, !2360, !2365, !2383, !2384, !2391, !2392, !2408}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !2225, file: !2226, line: 381, baseType: !7, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !2225, file: !2226, line: 386, baseType: !2230, size: 32, offset: 32)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !2226, line: 292, baseType: !2232)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !2226, line: 186, size: 832, elements: !2233)
!2233 = !{!2234, !2236, !2237, !2238, !2239, !2240, !2245, !2246, !2247, !2248, !2252, !2257, !2264, !2268, !2269, !2270, !2271, !2273, !2275, !2276, !2277, !2279, !2285, !2298}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !2232, file: !2226, line: 187, baseType: !2235, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !2232, file: !2226, line: 188, baseType: !7, size: 32, offset: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !2232, file: !2226, line: 189, baseType: !7, size: 32, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2232, file: !2226, line: 190, baseType: !1493, size: 16, offset: 96)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !2232, file: !2226, line: 191, baseType: !1493, size: 16, offset: 112)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !2232, file: !2226, line: 192, baseType: !2241, size: 64, offset: 128)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !2226, line: 122, size: 64, elements: !2242)
!2242 = !{!2243, !2244}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !2241, file: !2226, line: 123, baseType: !2235, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !2241, file: !2226, line: 124, baseType: !7, size: 32, offset: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !2232, file: !2226, line: 193, baseType: !7, size: 32, offset: 192)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !2232, file: !2226, line: 196, baseType: !2224, size: 32, offset: 224)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !2232, file: !2226, line: 200, baseType: !88, size: 32, offset: 256)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !2232, file: !2226, line: 202, baseType: !2249, size: 32, offset: 288)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 32)
!2250 = !DISubroutineType(types: !2251)
!2251 = !{!7, !2224, !88, !2223, !7}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !2232, file: !2226, line: 204, baseType: !2253, size: 32, offset: 320)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!2254 = !DISubroutineType(types: !2255)
!2255 = !{!7, !2224, !88, !2256, !7}
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !2232, file: !2226, line: 207, baseType: !2258, size: 32, offset: 352)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 32)
!2259 = !DISubroutineType(types: !2260)
!2260 = !{!2261, !2224, !88, !2261, !7}
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !2262, line: 116, baseType: !2263)
!2262 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!2263 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !2232, file: !2226, line: 208, baseType: !2265, size: 32, offset: 384)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!2266 = !DISubroutineType(types: !2267)
!2267 = !{!7, !2224, !88}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !2232, file: !2226, line: 211, baseType: !2241, size: 64, offset: 416)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !2232, file: !2226, line: 212, baseType: !2235, size: 32, offset: 480)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !2232, file: !2226, line: 213, baseType: !7, size: 32, offset: 512)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !2232, file: !2226, line: 216, baseType: !2272, size: 24, offset: 544)
!2272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 24, elements: !1378)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !2232, file: !2226, line: 217, baseType: !2274, size: 8, offset: 568)
!2274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 8, elements: !76)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !2232, file: !2226, line: 220, baseType: !2241, size: 64, offset: 576)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !2232, file: !2226, line: 223, baseType: !7, size: 32, offset: 640)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2232, file: !2226, line: 224, baseType: !2278, size: 32, offset: 672)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !2262, line: 46, baseType: !2263)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2232, file: !2226, line: 231, baseType: !2280, size: 32, offset: 704)
!2280 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !2226, line: 35, baseType: !2281)
!2281 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !2282, line: 34, baseType: !2283)
!2282 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 32)
!2284 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !2282, line: 33, flags: DIFlagFwdDecl)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !2232, file: !2226, line: 233, baseType: !2286, size: 64, offset: 736)
!2286 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !2262, line: 170, baseType: !2287)
!2287 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2262, line: 162, size: 64, elements: !2288)
!2288 = !{!2289, !2290}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2287, file: !2262, line: 164, baseType: !7, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2287, file: !2262, line: 169, baseType: !2291, size: 32, offset: 32)
!2291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2287, file: !2262, line: 165, size: 32, elements: !2292)
!2292 = !{!2293, !2296}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2291, file: !2262, line: 167, baseType: !2294, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2295, line: 116, baseType: !7)
!2295 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2291, file: !2262, line: 168, baseType: !2297, size: 32)
!2297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 32, elements: !526)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2232, file: !2226, line: 234, baseType: !7, size: 32, offset: 800)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !2225, file: !2226, line: 386, baseType: !2230, size: 32, offset: 64)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !2225, file: !2226, line: 386, baseType: !2230, size: 32, offset: 96)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !2225, file: !2226, line: 388, baseType: !7, size: 32, offset: 128)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !2225, file: !2226, line: 390, baseType: !2223, size: 32, offset: 160)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !2225, file: !2226, line: 392, baseType: !7, size: 32, offset: 192)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !2225, file: !2226, line: 394, baseType: !7, size: 32, offset: 224)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !2225, file: !2226, line: 395, baseType: !2306, size: 32, offset: 256)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 32)
!2307 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !2226, line: 45, flags: DIFlagFwdDecl)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !2225, file: !2226, line: 397, baseType: !2309, size: 32, offset: 288)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 32)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !2226, line: 349, size: 128, elements: !2311)
!2311 = !{!2312, !2325, !2326, !2327}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !2310, file: !2226, line: 352, baseType: !2313, size: 32)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 32)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !2226, line: 52, size: 192, elements: !2315)
!2315 = !{!2316, !2317, !2318, !2319, !2320, !2321}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2314, file: !2226, line: 54, baseType: !2313, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !2314, file: !2226, line: 55, baseType: !7, size: 32, offset: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !2314, file: !2226, line: 55, baseType: !7, size: 32, offset: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !2314, file: !2226, line: 55, baseType: !7, size: 32, offset: 96)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !2314, file: !2226, line: 55, baseType: !7, size: 32, offset: 128)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !2314, file: !2226, line: 56, baseType: !2322, size: 32, offset: 160)
!2322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2323, size: 32, elements: !76)
!2323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !2226, line: 22, baseType: !2324)
!2324 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !2310, file: !2226, line: 353, baseType: !7, size: 32, offset: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !2310, file: !2226, line: 354, baseType: !2313, size: 32, offset: 64)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !2310, file: !2226, line: 355, baseType: !2328, size: 32, offset: 96)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !2225, file: !2226, line: 399, baseType: !2330, size: 32, offset: 320)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 32)
!2331 = !DISubroutineType(types: !2332)
!2332 = !{null, !2224}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !2225, file: !2226, line: 401, baseType: !7, size: 32, offset: 352)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !2225, file: !2226, line: 404, baseType: !7, size: 32, offset: 384)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !2225, file: !2226, line: 405, baseType: !2223, size: 32, offset: 416)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !2225, file: !2226, line: 407, baseType: !2337, size: 32, offset: 448)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 32)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !2226, line: 324, size: 192, elements: !2339)
!2339 = !{!2340, !2342, !2343, !2344}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !2338, file: !2226, line: 325, baseType: !2341, size: 48)
!2341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1089, size: 48, elements: !1378)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !2338, file: !2226, line: 326, baseType: !2341, size: 48, offset: 48)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !2338, file: !2226, line: 327, baseType: !1089, size: 16, offset: 96)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !2338, file: !2226, line: 330, baseType: !2345, size: 64, offset: 128)
!2345 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !2225, file: !2226, line: 408, baseType: !2347, size: 32, offset: 480)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 32)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !2226, line: 60, size: 288, elements: !2349)
!2349 = !{!2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !2348, file: !2226, line: 62, baseType: !7, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !2348, file: !2226, line: 63, baseType: !7, size: 32, offset: 32)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !2348, file: !2226, line: 64, baseType: !7, size: 32, offset: 64)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !2348, file: !2226, line: 65, baseType: !7, size: 32, offset: 96)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !2348, file: !2226, line: 66, baseType: !7, size: 32, offset: 128)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !2348, file: !2226, line: 67, baseType: !7, size: 32, offset: 160)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !2348, file: !2226, line: 68, baseType: !7, size: 32, offset: 192)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !2348, file: !2226, line: 69, baseType: !7, size: 32, offset: 224)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !2348, file: !2226, line: 70, baseType: !7, size: 32, offset: 256)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !2225, file: !2226, line: 409, baseType: !2223, size: 32, offset: 512)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !2225, file: !2226, line: 412, baseType: !2361, size: 32, offset: 544)
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 32)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 32)
!2363 = !DISubroutineType(types: !2364)
!2364 = !{null, !7}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !2225, file: !2226, line: 416, baseType: !2366, size: 32, offset: 576)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 32)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !2226, line: 90, size: 1120, elements: !2368)
!2368 = !{!2369, !2370, !2371, !2374}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2367, file: !2226, line: 91, baseType: !2366, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !2367, file: !2226, line: 92, baseType: !7, size: 32, offset: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !2367, file: !2226, line: 93, baseType: !2372, size: 1024, offset: 64)
!2372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2373, size: 1024, elements: !330)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !2367, file: !2226, line: 94, baseType: !2375, size: 32, offset: 1088)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 32)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !2226, line: 79, size: 2112, elements: !2377)
!2377 = !{!2378, !2380, !2381, !2382}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !2376, file: !2226, line: 80, baseType: !2379, size: 1024)
!2379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 1024, elements: !330)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !2376, file: !2226, line: 81, baseType: !2379, size: 1024, offset: 1024)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !2376, file: !2226, line: 83, baseType: !2323, size: 32, offset: 2048)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !2376, file: !2226, line: 86, baseType: !2323, size: 32, offset: 2080)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !2225, file: !2226, line: 417, baseType: !2367, size: 1120, offset: 608)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !2225, file: !2226, line: 420, baseType: !2385, size: 96, offset: 1728)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !2226, line: 296, size: 96, elements: !2386)
!2386 = !{!2387, !2389, !2390}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2385, file: !2226, line: 298, baseType: !2388, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !2385, file: !2226, line: 299, baseType: !7, size: 32, offset: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !2385, file: !2226, line: 300, baseType: !2230, size: 32, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !2225, file: !2226, line: 421, baseType: !2230, size: 32, offset: 1824)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !2225, file: !2226, line: 422, baseType: !2393, size: 32, offset: 1856)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 32)
!2394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !2226, line: 359, size: 640, elements: !2395)
!2395 = !{!2396, !2397, !2398, !2399, !2400, !2402, !2403, !2404, !2405, !2406, !2407}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !2394, file: !2226, line: 362, baseType: !2223, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !2394, file: !2226, line: 363, baseType: !2286, size: 64, offset: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !2394, file: !2226, line: 364, baseType: !2286, size: 64, offset: 96)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !2394, file: !2226, line: 365, baseType: !2286, size: 64, offset: 160)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !2394, file: !2226, line: 366, baseType: !2401, size: 64, offset: 224)
!2401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1535, size: 64, elements: !809)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !2394, file: !2226, line: 367, baseType: !7, size: 32, offset: 288)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !2394, file: !2226, line: 368, baseType: !2286, size: 64, offset: 320)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !2394, file: !2226, line: 369, baseType: !2286, size: 64, offset: 384)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !2394, file: !2226, line: 370, baseType: !2286, size: 64, offset: 448)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !2394, file: !2226, line: 371, baseType: !2286, size: 64, offset: 512)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !2394, file: !2226, line: 372, baseType: !2286, size: 64, offset: 576)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !2225, file: !2226, line: 423, baseType: !2223, size: 32, offset: 1888)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2295, line: 46, baseType: !18)
!2410 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2411, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2412, globals: !2413, splitDebugInlining: false, nameTableKind: None)
!2411 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!2412 = !{!2223, !2221}
!2413 = !{!2215}
!2414 = !{!2415, !2416, !2417, !2418}
!2415 = !DILocalVariable(name: "r", arg: 1, scope: !2217, file: !2218, line: 66, type: !2224)
!2416 = !DILocalVariable(name: "nbytes", arg: 2, scope: !2217, file: !2218, line: 66, type: !2409)
!2417 = !DILocalVariable(name: "prev_heap_end", scope: !2217, file: !2218, line: 70, type: !2223)
!2418 = !DILocalVariable(name: "stack", scope: !2217, file: !2218, line: 71, type: !2223)
!2419 = !DIGlobalVariableExpression(var: !2420, expr: !DIExpression())
!2420 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !2421, file: !2422, line: 52, type: !60, isLocal: true, isDefinition: true)
!2421 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2422, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2423, globals: !2526, splitDebugInlining: false, nameTableKind: None)
!2422 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/pwm_generate_waveform/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!2423 = !{!2424, !2432, !61, !2477, !2482, !2507}
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !932, line: 656, baseType: !2426)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !932, line: 650, size: 128, elements: !2427)
!2427 = !{!2428, !2429, !2430, !2431}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2426, file: !932, line: 652, baseType: !60, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2426, file: !932, line: 653, baseType: !60, size: 32, offset: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2426, file: !932, line: 654, baseType: !60, size: 32, offset: 64)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2426, file: !932, line: 655, baseType: !272, size: 32, offset: 96)
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !56, line: 1952, baseType: !2434)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1921, size: 8288, elements: !2435)
!2435 = !{!2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2446, !2447, !2451, !2452, !2454, !2455, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2474, !2475, !2476}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !2434, file: !56, line: 1922, baseType: !60, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !2434, file: !56, line: 1923, baseType: !60, size: 32, offset: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !2434, file: !56, line: 1924, baseType: !60, size: 32, offset: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !2434, file: !56, line: 1925, baseType: !60, size: 32, offset: 96)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !2434, file: !56, line: 1926, baseType: !60, size: 32, offset: 128)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !2434, file: !56, line: 1927, baseType: !60, size: 32, offset: 160)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !2434, file: !56, line: 1928, baseType: !60, size: 32, offset: 192)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !2434, file: !56, line: 1929, baseType: !60, size: 32, offset: 224)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !2434, file: !56, line: 1930, baseType: !2445, size: 768, offset: 256)
!2445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 768, elements: !971)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !2434, file: !56, line: 1931, baseType: !60, size: 32, offset: 1024)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !2434, file: !56, line: 1932, baseType: !2448, size: 992, offset: 1056)
!2448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 992, elements: !2449)
!2449 = !{!2450}
!2450 = !DISubrange(count: 31)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !2434, file: !56, line: 1933, baseType: !60, size: 32, offset: 2048)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !2434, file: !56, line: 1934, baseType: !2453, size: 416, offset: 2080)
!2453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 416, elements: !829)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !2434, file: !56, line: 1935, baseType: !60, size: 32, offset: 2496)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !2434, file: !56, line: 1936, baseType: !2456, size: 1568, offset: 2528)
!2456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 1568, elements: !2457)
!2457 = !{!2458}
!2458 = !DISubrange(count: 49)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !2434, file: !56, line: 1937, baseType: !272, size: 32, offset: 4096)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !2434, file: !56, line: 1938, baseType: !272, size: 32, offset: 4128)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !2434, file: !56, line: 1939, baseType: !272, size: 32, offset: 4160)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !2434, file: !56, line: 1940, baseType: !60, size: 32, offset: 4192)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !2434, file: !56, line: 1941, baseType: !60, size: 32, offset: 4224)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !2434, file: !56, line: 1942, baseType: !60, size: 32, offset: 4256)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !2434, file: !56, line: 1943, baseType: !60, size: 32, offset: 4288)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !2434, file: !56, line: 1944, baseType: !60, size: 32, offset: 4320)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !2434, file: !56, line: 1945, baseType: !60, size: 32, offset: 4352)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !2434, file: !56, line: 1946, baseType: !60, size: 32, offset: 4384)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !2434, file: !56, line: 1947, baseType: !60, size: 32, offset: 4416)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !2434, file: !56, line: 1948, baseType: !2471, size: 3744, offset: 4448)
!2471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 3744, elements: !2472)
!2472 = !{!2473}
!2473 = !DISubrange(count: 117)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !2434, file: !56, line: 1949, baseType: !60, size: 32, offset: 8192)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !2434, file: !56, line: 1950, baseType: !60, size: 32, offset: 8224)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !2434, file: !56, line: 1951, baseType: !272, size: 32, offset: 8256)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 32)
!2478 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !56, line: 2158, baseType: !2479)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2156, size: 32, elements: !2480)
!2480 = !{!2481}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !2479, file: !56, line: 2157, baseType: !60, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 32)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !932, line: 418, baseType: !2484)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !932, line: 395, size: 1120, elements: !2485)
!2485 = !{!2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2484, file: !932, line: 397, baseType: !272, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2484, file: !932, line: 398, baseType: !60, size: 32, offset: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2484, file: !932, line: 399, baseType: !60, size: 32, offset: 64)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2484, file: !932, line: 400, baseType: !60, size: 32, offset: 96)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2484, file: !932, line: 401, baseType: !60, size: 32, offset: 128)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2484, file: !932, line: 402, baseType: !60, size: 32, offset: 160)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2484, file: !932, line: 403, baseType: !942, size: 96, offset: 192)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2484, file: !932, line: 404, baseType: !60, size: 32, offset: 288)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2484, file: !932, line: 405, baseType: !60, size: 32, offset: 320)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2484, file: !932, line: 406, baseType: !60, size: 32, offset: 352)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2484, file: !932, line: 407, baseType: !60, size: 32, offset: 384)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2484, file: !932, line: 408, baseType: !60, size: 32, offset: 416)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2484, file: !932, line: 409, baseType: !60, size: 32, offset: 448)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2484, file: !932, line: 410, baseType: !60, size: 32, offset: 480)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2484, file: !932, line: 411, baseType: !951, size: 64, offset: 512)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2484, file: !932, line: 412, baseType: !272, size: 32, offset: 576)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2484, file: !932, line: 413, baseType: !272, size: 32, offset: 608)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2484, file: !932, line: 414, baseType: !955, size: 128, offset: 640)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2484, file: !932, line: 415, baseType: !957, size: 160, offset: 768)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2484, file: !932, line: 416, baseType: !961, size: 160, offset: 928)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2484, file: !932, line: 417, baseType: !60, size: 32, offset: 1088)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !2509)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !2510)
!2510 = !{!2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !2509, file: !56, line: 261, baseType: !60, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !2509, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !2509, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !2509, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !2509, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !2509, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !2509, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !2509, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !2509, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !2509, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2509, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !2509, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2509, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !2509, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !2509, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!2526 = !{!2527, !2419}
!2527 = !DIGlobalVariableExpression(var: !2528, expr: !DIExpression())
!2528 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2421, file: !2422, line: 50, type: !61, isLocal: false, isDefinition: true)
!2529 = !DIGlobalVariableExpression(var: !2530, expr: !DIExpression())
!2530 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2531, file: !2536, line: 4, type: !2542, isLocal: false, isDefinition: true)
!2531 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2532, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2533, splitDebugInlining: false, nameTableKind: None)
!2532 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!2533 = !{!2529, !2534, !2540}
!2534 = !DIGlobalVariableExpression(var: !2535, expr: !DIExpression())
!2535 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2531, file: !2536, line: 5, type: !2537, isLocal: false, isDefinition: true)
!2536 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!2537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1535, size: 88, elements: !2538)
!2538 = !{!2539}
!2539 = !DISubrange(count: 11)
!2540 = !DIGlobalVariableExpression(var: !2541, expr: !DIExpression())
!2541 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2531, file: !2536, line: 6, type: !2537, isLocal: false, isDefinition: true)
!2542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1535, size: 248, elements: !2449)
!2543 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2544, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2545, retainedTypes: !2568, splitDebugInlining: false, nameTableKind: None)
!2544 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!2545 = !{!1962, !245, !259, !2546, !2550, !254, !157}
!2546 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 857, baseType: !18, size: 32, elements: !2547)
!2547 = !{!2548, !2549}
!2548 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!2549 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!2550 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 87, baseType: !18, size: 32, elements: !2551)
!2551 = !{!2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567}
!2552 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!2553 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!2554 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!2555 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!2556 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!2557 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!2558 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!2559 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!2560 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!2561 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!2562 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!2563 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!2564 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!2565 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!2566 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!2567 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!2568 = !{!61, !88, !307}
!2569 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2570, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2571, retainedTypes: !2572, splitDebugInlining: false, nameTableKind: None)
!2570 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!2571 = !{!756, !762, !766, !842}
!2572 = !{!395}
!2573 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2574, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2575, retainedTypes: !2576, splitDebugInlining: false, nameTableKind: None)
!2574 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!2575 = !{!168, !771}
!2576 = !{!916, !2577, !61, !2602, !993}
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !932, line: 418, baseType: !2579)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !932, line: 395, size: 1120, elements: !2580)
!2580 = !{!2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2579, file: !932, line: 397, baseType: !272, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2579, file: !932, line: 398, baseType: !60, size: 32, offset: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2579, file: !932, line: 399, baseType: !60, size: 32, offset: 64)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2579, file: !932, line: 400, baseType: !60, size: 32, offset: 96)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2579, file: !932, line: 401, baseType: !60, size: 32, offset: 128)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2579, file: !932, line: 402, baseType: !60, size: 32, offset: 160)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2579, file: !932, line: 403, baseType: !942, size: 96, offset: 192)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2579, file: !932, line: 404, baseType: !60, size: 32, offset: 288)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2579, file: !932, line: 405, baseType: !60, size: 32, offset: 320)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2579, file: !932, line: 406, baseType: !60, size: 32, offset: 352)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2579, file: !932, line: 407, baseType: !60, size: 32, offset: 384)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2579, file: !932, line: 408, baseType: !60, size: 32, offset: 416)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2579, file: !932, line: 409, baseType: !60, size: 32, offset: 448)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2579, file: !932, line: 410, baseType: !60, size: 32, offset: 480)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2579, file: !932, line: 411, baseType: !951, size: 64, offset: 512)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2579, file: !932, line: 412, baseType: !272, size: 32, offset: 576)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2579, file: !932, line: 413, baseType: !272, size: 32, offset: 608)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2579, file: !932, line: 414, baseType: !955, size: 128, offset: 640)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2579, file: !932, line: 415, baseType: !957, size: 160, offset: 768)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2579, file: !932, line: 416, baseType: !961, size: 160, offset: 928)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2579, file: !932, line: 417, baseType: !60, size: 32, offset: 1088)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 32)
!2603 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !932, line: 378, baseType: !2604)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !932, line: 363, size: 28704, elements: !2605)
!2605 = !{!2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2604, file: !932, line: 365, baseType: !968, size: 256)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2604, file: !932, line: 366, baseType: !970, size: 768, offset: 256)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2604, file: !932, line: 367, baseType: !968, size: 256, offset: 1024)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !2604, file: !932, line: 368, baseType: !970, size: 768, offset: 1280)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2604, file: !932, line: 369, baseType: !968, size: 256, offset: 2048)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2604, file: !932, line: 370, baseType: !970, size: 768, offset: 2304)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2604, file: !932, line: 371, baseType: !968, size: 256, offset: 3072)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2604, file: !932, line: 372, baseType: !970, size: 768, offset: 3328)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2604, file: !932, line: 373, baseType: !968, size: 256, offset: 4096)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2604, file: !932, line: 374, baseType: !981, size: 1792, offset: 4352)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2604, file: !932, line: 375, baseType: !985, size: 1920, offset: 6144)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2604, file: !932, line: 376, baseType: !989, size: 20608, offset: 8064)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2604, file: !932, line: 377, baseType: !60, size: 32, offset: 28672)
!2619 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2620, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2620 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!2621 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2622, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2622 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!2623 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2624, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2625, splitDebugInlining: false, nameTableKind: None)
!2624 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/pwm_generate_waveform/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!2625 = !{!694, !740, !756, !762, !766, !414, !356, !365}
!2626 = !{!"Ubuntu clang version 14.0.6"}
!2627 = !{i32 7, !"Dwarf Version", i32 2}
!2628 = !{i32 2, !"Debug Info Version", i32 3}
!2629 = !{i32 1, !"wchar_size", i32 4}
!2630 = !{i32 1, !"min_enum_size", i32 4}
!2631 = !{i32 1, !"branch-target-enforcement", i32 0}
!2632 = !{i32 1, !"sign-return-address", i32 0}
!2633 = !{i32 1, !"sign-return-address-all", i32 0}
!2634 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2635 = !{i32 7, !"frame-pointer", i32 2}
!2636 = distinct !DISubprogram(name: "hal_cache_init", scope: !3, file: !3, line: 53, type: !2637, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2640)
!2637 = !DISubroutineType(types: !2638)
!2638 = !{!2639}
!2639 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !6, line: 172, baseType: !5)
!2640 = !{!2641, !2643}
!2641 = !DILocalVariable(name: "region", scope: !2636, file: !3, line: 55, type: !2642)
!2642 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !6, line: 204, baseType: !17)
!2643 = !DILocalVariable(name: "irq_flag", scope: !2636, file: !3, line: 56, type: !61)
!2644 = !DILocation(line: 59, column: 16, scope: !2636)
!2645 = !DILocation(line: 0, scope: !2636)
!2646 = !DILocation(line: 62, column: 9, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2636, file: !3, line: 62, column: 9)
!2648 = !{i8 0, i8 2}
!2649 = !DILocation(line: 62, column: 9, scope: !2636)
!2650 = !DILocation(line: 64, column: 9, scope: !2651)
!2651 = distinct !DILexicalBlock(scope: !2647, file: !3, line: 62, column: 39)
!2652 = !DILocation(line: 66, column: 9, scope: !2651)
!2653 = !DILocation(line: 69, column: 24, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2647, file: !3, line: 67, column: 12)
!2655 = !DILocation(line: 72, column: 9, scope: !2654)
!2656 = !DILocation(line: 77, column: 5, scope: !2636)
!2657 = !DILocation(line: 80, column: 22, scope: !2636)
!2658 = !DILocation(line: 81, column: 28, scope: !2636)
!2659 = !DILocation(line: 84, column: 19, scope: !2636)
!2660 = !DILocation(line: 85, column: 23, scope: !2636)
!2661 = !DILocation(line: 88, column: 5, scope: !2662)
!2662 = distinct !DILexicalBlock(scope: !2636, file: !3, line: 88, column: 5)
!2663 = !DILocation(line: 90, column: 9, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2665, file: !3, line: 88, column: 81)
!2665 = distinct !DILexicalBlock(scope: !2662, file: !3, line: 88, column: 5)
!2666 = !DILocation(line: 90, column: 38, scope: !2664)
!2667 = !DILocation(line: 91, column: 9, scope: !2664)
!2668 = !DILocation(line: 91, column: 42, scope: !2664)
!2669 = !DILocation(line: 94, column: 45, scope: !2664)
!2670 = !DILocation(line: 94, column: 47, scope: !2664)
!2671 = !DILocation(line: 95, column: 49, scope: !2664)
!2672 = !DILocation(line: 95, column: 51, scope: !2664)
!2673 = !DILocation(line: 88, column: 77, scope: !2665)
!2674 = !DILocation(line: 88, column: 46, scope: !2665)
!2675 = distinct !{!2675, !2661, !2676}
!2676 = !DILocation(line: 96, column: 5, scope: !2662)
!2677 = !DILocation(line: 99, column: 1, scope: !2636)
!2678 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !3, file: !3, line: 327, type: !2637, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2679)
!2679 = !{!2680}
!2680 = !DILocalVariable(name: "irq_flag", scope: !2678, file: !3, line: 329, type: !61)
!2681 = !DILocation(line: 332, column: 16, scope: !2678)
!2682 = !DILocation(line: 0, scope: !2678)
!2683 = !DILocation(line: 335, column: 21, scope: !2678)
!2684 = !DILocation(line: 336, column: 21, scope: !2678)
!2685 = !DILocation(line: 339, column: 21, scope: !2678)
!2686 = !DILocation(line: 340, column: 21, scope: !2678)
!2687 = !DILocation(line: 434, column: 3, scope: !2688, inlinedAt: !2690)
!2688 = distinct !DISubprogram(name: "__ISB", scope: !2689, file: !2689, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2689 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!2690 = distinct !DILocation(line: 343, column: 5, scope: !2678)
!2691 = !{i64 442812}
!2692 = !DILocation(line: 346, column: 5, scope: !2678)
!2693 = !DILocation(line: 348, column: 5, scope: !2678)
!2694 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !3, file: !3, line: 101, type: !2637, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2695)
!2695 = !{!2696}
!2696 = !DILocalVariable(name: "region", scope: !2694, file: !3, line: 103, type: !2642)
!2697 = !DILocation(line: 107, column: 5, scope: !2694)
!2698 = !DILocation(line: 110, column: 22, scope: !2694)
!2699 = !DILocation(line: 111, column: 28, scope: !2694)
!2700 = !DILocation(line: 114, column: 19, scope: !2694)
!2701 = !DILocation(line: 115, column: 23, scope: !2694)
!2702 = !DILocation(line: 0, scope: !2694)
!2703 = !DILocation(line: 118, column: 5, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2694, file: !3, line: 118, column: 5)
!2705 = !DILocation(line: 120, column: 9, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2707, file: !3, line: 118, column: 81)
!2707 = distinct !DILexicalBlock(scope: !2704, file: !3, line: 118, column: 5)
!2708 = !DILocation(line: 120, column: 38, scope: !2706)
!2709 = !DILocation(line: 121, column: 9, scope: !2706)
!2710 = !DILocation(line: 121, column: 42, scope: !2706)
!2711 = !DILocation(line: 124, column: 45, scope: !2706)
!2712 = !DILocation(line: 124, column: 47, scope: !2706)
!2713 = !DILocation(line: 125, column: 49, scope: !2706)
!2714 = !DILocation(line: 125, column: 51, scope: !2706)
!2715 = !DILocation(line: 118, column: 77, scope: !2707)
!2716 = !DILocation(line: 118, column: 46, scope: !2707)
!2717 = distinct !{!2717, !2703, !2718}
!2718 = !DILocation(line: 126, column: 5, scope: !2704)
!2719 = !DILocation(line: 129, column: 20, scope: !2694)
!2720 = !DILocation(line: 131, column: 5, scope: !2694)
!2721 = distinct !DISubprogram(name: "hal_cache_enable", scope: !3, file: !3, line: 134, type: !2637, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2722 = !DILocation(line: 137, column: 45, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2721, file: !3, line: 137, column: 9)
!2724 = !DILocation(line: 137, column: 28, scope: !2723)
!2725 = !DILocation(line: 137, column: 9, scope: !2721)
!2726 = !DILocation(line: 142, column: 22, scope: !2721)
!2727 = !DILocation(line: 145, column: 28, scope: !2721)
!2728 = !DILocation(line: 145, column: 19, scope: !2721)
!2729 = !DILocation(line: 147, column: 5, scope: !2721)
!2730 = !DILocation(line: 0, scope: !2721)
!2731 = !DILocation(line: 148, column: 1, scope: !2721)
!2732 = distinct !DISubprogram(name: "hal_cache_disable", scope: !3, file: !3, line: 150, type: !2637, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2733)
!2733 = !{!2734}
!2734 = !DILocalVariable(name: "irq_flag", scope: !2732, file: !3, line: 152, type: !61)
!2735 = !DILocation(line: 155, column: 16, scope: !2732)
!2736 = !DILocation(line: 0, scope: !2732)
!2737 = !DILocation(line: 158, column: 16, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2732, file: !3, line: 158, column: 9)
!2739 = !DILocation(line: 158, column: 26, scope: !2738)
!2740 = !DILocation(line: 158, column: 9, scope: !2732)
!2741 = !DILocation(line: 160, column: 9, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2738, file: !3, line: 158, column: 49)
!2743 = !DILocation(line: 161, column: 5, scope: !2742)
!2744 = !DILocation(line: 164, column: 22, scope: !2732)
!2745 = !DILocation(line: 167, column: 28, scope: !2732)
!2746 = !DILocation(line: 167, column: 19, scope: !2732)
!2747 = !DILocation(line: 170, column: 5, scope: !2732)
!2748 = !DILocation(line: 172, column: 5, scope: !2732)
!2749 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !3, file: !3, line: 175, type: !2750, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2752)
!2750 = !DISubroutineType(types: !2751)
!2751 = !{!2639, !2642}
!2752 = !{!2753}
!2753 = !DILocalVariable(name: "region", arg: 1, scope: !2749, file: !3, line: 175, type: !2642)
!2754 = !DILocation(line: 0, scope: !2749)
!2755 = !DILocation(line: 178, column: 16, scope: !2756)
!2756 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 178, column: 9)
!2757 = !DILocation(line: 178, column: 9, scope: !2749)
!2758 = !DILocation(line: 183, column: 9, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 183, column: 9)
!2760 = !DILocation(line: 183, column: 38, scope: !2759)
!2761 = !DILocation(line: 183, column: 9, scope: !2749)
!2762 = !DILocation(line: 184, column: 38, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2759, file: !3, line: 183, column: 62)
!2764 = !DILocation(line: 184, column: 32, scope: !2763)
!2765 = !DILocation(line: 190, column: 32, scope: !2749)
!2766 = !DILocation(line: 190, column: 23, scope: !2749)
!2767 = !DILocation(line: 192, column: 5, scope: !2749)
!2768 = !DILocation(line: 193, column: 1, scope: !2749)
!2769 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !3, file: !3, line: 195, type: !2750, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2770)
!2770 = !{!2771}
!2771 = !DILocalVariable(name: "region", arg: 1, scope: !2769, file: !3, line: 195, type: !2642)
!2772 = !DILocation(line: 0, scope: !2769)
!2773 = !DILocation(line: 198, column: 16, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !2769, file: !3, line: 198, column: 9)
!2775 = !DILocation(line: 198, column: 9, scope: !2769)
!2776 = !DILocation(line: 203, column: 35, scope: !2769)
!2777 = !DILocation(line: 203, column: 31, scope: !2769)
!2778 = !DILocation(line: 203, column: 28, scope: !2769)
!2779 = !DILocation(line: 206, column: 32, scope: !2769)
!2780 = !DILocation(line: 206, column: 23, scope: !2769)
!2781 = !DILocation(line: 209, column: 41, scope: !2769)
!2782 = !DILocation(line: 209, column: 43, scope: !2769)
!2783 = !DILocation(line: 210, column: 45, scope: !2769)
!2784 = !DILocation(line: 210, column: 47, scope: !2769)
!2785 = !DILocation(line: 212, column: 5, scope: !2769)
!2786 = !DILocation(line: 213, column: 1, scope: !2769)
!2787 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !3, file: !3, line: 215, type: !2788, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2791)
!2788 = !DISubroutineType(types: !2789)
!2789 = !{!2639, !2790}
!2790 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !6, line: 182, baseType: !37)
!2791 = !{!2792}
!2792 = !DILocalVariable(name: "cache_size", arg: 1, scope: !2787, file: !3, line: 215, type: !2790)
!2793 = !DILocation(line: 0, scope: !2787)
!2794 = !DILocation(line: 218, column: 20, scope: !2795)
!2795 = distinct !DILexicalBlock(scope: !2787, file: !3, line: 218, column: 9)
!2796 = !DILocation(line: 218, column: 9, scope: !2787)
!2797 = !DILocation(line: 223, column: 22, scope: !2787)
!2798 = !DILocation(line: 224, column: 37, scope: !2787)
!2799 = !DILocation(line: 224, column: 22, scope: !2787)
!2800 = !DILocation(line: 227, column: 20, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2787, file: !3, line: 227, column: 9)
!2802 = !DILocation(line: 227, column: 9, scope: !2787)
!2803 = !DILocation(line: 228, column: 26, scope: !2804)
!2804 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 227, column: 43)
!2805 = !DILocation(line: 229, column: 5, scope: !2804)
!2806 = !DILocation(line: 232, column: 28, scope: !2787)
!2807 = !DILocation(line: 232, column: 19, scope: !2787)
!2808 = !DILocation(line: 234, column: 5, scope: !2787)
!2809 = !DILocation(line: 235, column: 1, scope: !2787)
!2810 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !3, file: !3, line: 237, type: !2811, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2820)
!2811 = !DISubroutineType(types: !2812)
!2812 = !{!2639, !2642, !2813}
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 32)
!2814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2815)
!2815 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !6, line: 222, baseType: !2816)
!2816 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 219, size: 64, elements: !2817)
!2817 = !{!2818, !2819}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !2816, file: !6, line: 220, baseType: !61, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !2816, file: !6, line: 221, baseType: !61, size: 32, offset: 32)
!2820 = !{!2821, !2822}
!2821 = !DILocalVariable(name: "region", arg: 1, scope: !2810, file: !3, line: 237, type: !2642)
!2822 = !DILocalVariable(name: "region_config", arg: 2, scope: !2810, file: !3, line: 237, type: !2813)
!2823 = !DILocation(line: 0, scope: !2810)
!2824 = !DILocation(line: 240, column: 16, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2810, file: !3, line: 240, column: 9)
!2826 = !DILocation(line: 240, column: 9, scope: !2810)
!2827 = !DILocation(line: 245, column: 23, scope: !2828)
!2828 = distinct !DILexicalBlock(scope: !2810, file: !3, line: 245, column: 9)
!2829 = !DILocation(line: 245, column: 9, scope: !2810)
!2830 = !DILocation(line: 250, column: 24, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !2810, file: !3, line: 250, column: 9)
!2832 = !DILocation(line: 250, column: 45, scope: !2831)
!2833 = !DILocation(line: 250, column: 9, scope: !2810)
!2834 = !DILocation(line: 251, column: 9, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2831, file: !3, line: 250, column: 81)
!2836 = !DILocation(line: 256, column: 24, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2810, file: !3, line: 256, column: 9)
!2838 = !DILocation(line: 256, column: 42, scope: !2837)
!2839 = !DILocation(line: 256, column: 9, scope: !2810)
!2840 = !DILocation(line: 257, column: 9, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2837, file: !3, line: 256, column: 78)
!2842 = !DILocation(line: 262, column: 5, scope: !2810)
!2843 = !DILocation(line: 262, column: 34, scope: !2810)
!2844 = !DILocation(line: 263, column: 55, scope: !2810)
!2845 = !DILocation(line: 263, column: 93, scope: !2810)
!2846 = !DILocation(line: 263, column: 76, scope: !2810)
!2847 = !DILocation(line: 263, column: 5, scope: !2810)
!2848 = !DILocation(line: 263, column: 38, scope: !2810)
!2849 = !DILocation(line: 266, column: 34, scope: !2810)
!2850 = !DILocation(line: 269, column: 45, scope: !2810)
!2851 = !DILocation(line: 269, column: 41, scope: !2810)
!2852 = !DILocation(line: 269, column: 43, scope: !2810)
!2853 = !DILocation(line: 270, column: 49, scope: !2810)
!2854 = !DILocation(line: 270, column: 45, scope: !2810)
!2855 = !DILocation(line: 270, column: 47, scope: !2810)
!2856 = !DILocation(line: 272, column: 5, scope: !2810)
!2857 = !DILocation(line: 273, column: 1, scope: !2810)
!2858 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !3, file: !3, line: 275, type: !2859, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2861)
!2859 = !DISubroutineType(types: !2860)
!2860 = !{!2639, !61}
!2861 = !{!2862, !2863}
!2862 = !DILocalVariable(name: "address", arg: 1, scope: !2858, file: !3, line: 275, type: !61)
!2863 = !DILocalVariable(name: "irq_flag", scope: !2858, file: !3, line: 277, type: !61)
!2864 = !DILocation(line: 0, scope: !2858)
!2865 = !DILocation(line: 280, column: 17, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2858, file: !3, line: 280, column: 9)
!2867 = !DILocation(line: 280, column: 9, scope: !2858)
!2868 = !DILocation(line: 284, column: 16, scope: !2858)
!2869 = !DILocation(line: 287, column: 32, scope: !2858)
!2870 = !DILocation(line: 287, column: 21, scope: !2858)
!2871 = !DILocation(line: 288, column: 21, scope: !2858)
!2872 = !DILocation(line: 434, column: 3, scope: !2688, inlinedAt: !2873)
!2873 = distinct !DILocation(line: 291, column: 5, scope: !2858)
!2874 = !DILocation(line: 294, column: 5, scope: !2858)
!2875 = !DILocation(line: 296, column: 5, scope: !2858)
!2876 = !DILocation(line: 297, column: 1, scope: !2858)
!2877 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !3, file: !3, line: 299, type: !2878, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2880)
!2878 = !DISubroutineType(types: !2879)
!2879 = !{!2639, !61, !61}
!2880 = !{!2881, !2882, !2883, !2884}
!2881 = !DILocalVariable(name: "address", arg: 1, scope: !2877, file: !3, line: 299, type: !61)
!2882 = !DILocalVariable(name: "length", arg: 2, scope: !2877, file: !3, line: 299, type: !61)
!2883 = !DILocalVariable(name: "irq_flag", scope: !2877, file: !3, line: 301, type: !61)
!2884 = !DILocalVariable(name: "end_address", scope: !2877, file: !3, line: 302, type: !61)
!2885 = !DILocation(line: 0, scope: !2877)
!2886 = !DILocation(line: 302, column: 36, scope: !2877)
!2887 = !DILocation(line: 305, column: 47, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2877, file: !3, line: 305, column: 9)
!2889 = !DILocation(line: 310, column: 16, scope: !2877)
!2890 = !DILocation(line: 313, column: 20, scope: !2877)
!2891 = !DILocation(line: 313, column: 5, scope: !2877)
!2892 = !DILocation(line: 314, column: 9, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2877, file: !3, line: 313, column: 35)
!2894 = !DILocation(line: 315, column: 17, scope: !2893)
!2895 = distinct !{!2895, !2891, !2896}
!2896 = !DILocation(line: 316, column: 5, scope: !2877)
!2897 = !DILocation(line: 434, column: 3, scope: !2688, inlinedAt: !2898)
!2898 = distinct !DILocation(line: 319, column: 5, scope: !2877)
!2899 = !DILocation(line: 322, column: 5, scope: !2877)
!2900 = !DILocation(line: 324, column: 5, scope: !2877)
!2901 = !DILocation(line: 325, column: 1, scope: !2877)
!2902 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !3, file: !3, line: 351, type: !2859, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2903)
!2903 = !{!2904, !2905}
!2904 = !DILocalVariable(name: "address", arg: 1, scope: !2902, file: !3, line: 351, type: !61)
!2905 = !DILocalVariable(name: "irq_flag", scope: !2902, file: !3, line: 353, type: !61)
!2906 = !DILocation(line: 0, scope: !2902)
!2907 = !DILocation(line: 356, column: 17, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2902, file: !3, line: 356, column: 9)
!2909 = !DILocation(line: 356, column: 9, scope: !2902)
!2910 = !DILocation(line: 361, column: 16, scope: !2902)
!2911 = !DILocation(line: 364, column: 32, scope: !2902)
!2912 = !DILocation(line: 364, column: 21, scope: !2902)
!2913 = !DILocation(line: 365, column: 21, scope: !2902)
!2914 = !DILocation(line: 434, column: 3, scope: !2688, inlinedAt: !2915)
!2915 = distinct !DILocation(line: 368, column: 5, scope: !2902)
!2916 = !DILocation(line: 371, column: 5, scope: !2902)
!2917 = !DILocation(line: 373, column: 5, scope: !2902)
!2918 = !DILocation(line: 374, column: 1, scope: !2902)
!2919 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !3, file: !3, line: 376, type: !2878, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2920)
!2920 = !{!2921, !2922, !2923, !2924}
!2921 = !DILocalVariable(name: "address", arg: 1, scope: !2919, file: !3, line: 376, type: !61)
!2922 = !DILocalVariable(name: "length", arg: 2, scope: !2919, file: !3, line: 376, type: !61)
!2923 = !DILocalVariable(name: "irq_flag", scope: !2919, file: !3, line: 378, type: !61)
!2924 = !DILocalVariable(name: "end_address", scope: !2919, file: !3, line: 379, type: !61)
!2925 = !DILocation(line: 0, scope: !2919)
!2926 = !DILocation(line: 379, column: 36, scope: !2919)
!2927 = !DILocation(line: 382, column: 47, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2919, file: !3, line: 382, column: 9)
!2929 = !DILocation(line: 387, column: 16, scope: !2919)
!2930 = !DILocation(line: 390, column: 20, scope: !2919)
!2931 = !DILocation(line: 390, column: 5, scope: !2919)
!2932 = !DILocation(line: 391, column: 9, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2919, file: !3, line: 390, column: 35)
!2934 = !DILocation(line: 392, column: 17, scope: !2933)
!2935 = distinct !{!2935, !2931, !2936}
!2936 = !DILocation(line: 393, column: 5, scope: !2919)
!2937 = !DILocation(line: 434, column: 3, scope: !2688, inlinedAt: !2938)
!2938 = distinct !DILocation(line: 396, column: 5, scope: !2919)
!2939 = !DILocation(line: 399, column: 5, scope: !2919)
!2940 = !DILocation(line: 401, column: 5, scope: !2919)
!2941 = !DILocation(line: 402, column: 1, scope: !2919)
!2942 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !3, file: !3, line: 404, type: !2637, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2943)
!2943 = !{!2944}
!2944 = !DILocalVariable(name: "irq_flag", scope: !2942, file: !3, line: 406, type: !61)
!2945 = !DILocation(line: 409, column: 16, scope: !2942)
!2946 = !DILocation(line: 0, scope: !2942)
!2947 = !DILocation(line: 412, column: 21, scope: !2942)
!2948 = !DILocation(line: 413, column: 21, scope: !2942)
!2949 = !DILocation(line: 434, column: 3, scope: !2688, inlinedAt: !2950)
!2950 = distinct !DILocation(line: 416, column: 5, scope: !2942)
!2951 = !DILocation(line: 419, column: 5, scope: !2942)
!2952 = !DILocation(line: 421, column: 5, scope: !2942)
!2953 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !3, file: !3, line: 424, type: !2954, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2956)
!2954 = !DISubroutineType(types: !2955)
!2955 = !{!91, !61}
!2956 = !{!2957, !2958}
!2957 = !DILocalVariable(name: "address", arg: 1, scope: !2953, file: !3, line: 424, type: !61)
!2958 = !DILocalVariable(name: "region", scope: !2953, file: !3, line: 426, type: !2642)
!2959 = !DILocation(line: 0, scope: !2953)
!2960 = !DILocation(line: 429, column: 18, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 429, column: 9)
!2962 = !DILocation(line: 429, column: 28, scope: !2961)
!2963 = !DILocation(line: 429, column: 9, scope: !2953)
!2964 = !DILocation(line: 435, column: 20, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 435, column: 13)
!2966 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 433, column: 81)
!2967 = distinct !DILexicalBlock(scope: !2968, file: !3, line: 433, column: 5)
!2968 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 433, column: 5)
!2969 = !DILocation(line: 435, column: 41, scope: !2965)
!2970 = !DILocation(line: 435, column: 36, scope: !2965)
!2971 = !DILocation(line: 435, column: 13, scope: !2966)
!2972 = !DILocation(line: 436, column: 30, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 436, column: 17)
!2974 = distinct !DILexicalBlock(scope: !2965, file: !3, line: 435, column: 53)
!2975 = !DILocation(line: 436, column: 59, scope: !2973)
!2976 = !DILocation(line: 436, column: 26, scope: !2973)
!2977 = !DILocation(line: 436, column: 85, scope: !2973)
!2978 = !DILocation(line: 436, column: 99, scope: !2973)
!2979 = !DILocation(line: 436, column: 97, scope: !2973)
!2980 = !DILocation(line: 436, column: 17, scope: !2974)
!2981 = !DILocation(line: 433, column: 77, scope: !2967)
!2982 = !DILocation(line: 433, column: 46, scope: !2967)
!2983 = !DILocation(line: 433, column: 5, scope: !2968)
!2984 = distinct !{!2984, !2983, !2985}
!2985 = !DILocation(line: 440, column: 5, scope: !2968)
!2986 = !DILocation(line: 442, column: 1, scope: !2953)
!2987 = distinct !DISubprogram(name: "hal_gpt_init", scope: !2544, file: !2544, line: 95, type: !2988, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !2992)
!2988 = !DISubroutineType(types: !2989)
!2989 = !{!2990, !2991}
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !255, line: 393, baseType: !1962)
!2991 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !98, line: 854, baseType: !245)
!2992 = !{!2993}
!2993 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2987, file: !2544, line: 95, type: !2991)
!2994 = !DILocation(line: 0, scope: !2987)
!2995 = !DILocation(line: 98, column: 9, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2987, file: !2544, line: 98, column: 9)
!2997 = !DILocation(line: 98, column: 9, scope: !2987)
!2998 = !DILocation(line: 102, column: 10, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2987, file: !2544, line: 102, column: 9)
!3000 = !DILocation(line: 102, column: 34, scope: !2999)
!3001 = !DILocation(line: 102, column: 49, scope: !2999)
!3002 = !DILocation(line: 102, column: 69, scope: !2999)
!3003 = !DILocation(line: 103, column: 38, scope: !2999)
!3004 = !DILocation(line: 102, column: 9, scope: !2987)
!3005 = !DILocation(line: 109, column: 12, scope: !2987)
!3006 = !DILocation(line: 109, column: 5, scope: !2987)
!3007 = !DILocation(line: 112, column: 5, scope: !2987)
!3008 = !DILocation(line: 115, column: 44, scope: !2987)
!3009 = !DILocation(line: 118, column: 5, scope: !2987)
!3010 = !DILocation(line: 118, column: 23, scope: !2987)
!3011 = !DILocation(line: 118, column: 35, scope: !2987)
!3012 = !DILocation(line: 121, column: 42, scope: !2987)
!3013 = !DILocation(line: 121, column: 38, scope: !2987)
!3014 = !DILocation(line: 121, column: 5, scope: !2987)
!3015 = !DILocation(line: 121, column: 17, scope: !2987)
!3016 = !DILocation(line: 121, column: 35, scope: !2987)
!3017 = !DILocation(line: 129, column: 5, scope: !2987)
!3018 = !DILocation(line: 131, column: 1, scope: !2987)
!3019 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !2544, file: !2544, line: 81, type: !3020, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !3022)
!3020 = !DISubroutineType(types: !3021)
!3021 = !{!91, !2991}
!3022 = !{!3023}
!3023 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3019, file: !2544, line: 81, type: !2991)
!3024 = !DILocation(line: 0, scope: !3019)
!3025 = !DILocation(line: 84, column: 25, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !3019, file: !2544, line: 84, column: 9)
!3027 = !DILocation(line: 84, column: 35, scope: !3026)
!3028 = !DILocation(line: 84, column: 45, scope: !3026)
!3029 = !DILocation(line: 93, column: 1, scope: !3019)
!3030 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !2544, file: !2544, line: 133, type: !2988, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !3031)
!3031 = !{!3032}
!3032 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3030, file: !2544, line: 133, type: !2991)
!3033 = !DILocation(line: 0, scope: !3030)
!3034 = !DILocation(line: 136, column: 9, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !3030, file: !2544, line: 136, column: 9)
!3036 = !DILocation(line: 136, column: 9, scope: !3030)
!3037 = !DILocation(line: 140, column: 9, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3030, file: !2544, line: 140, column: 9)
!3039 = !DILocation(line: 140, column: 33, scope: !3038)
!3040 = !DILocation(line: 140, column: 48, scope: !3038)
!3041 = !DILocation(line: 140, column: 9, scope: !3030)
!3042 = !DILocation(line: 146, column: 12, scope: !3030)
!3043 = !DILocation(line: 146, column: 5, scope: !3030)
!3044 = !DILocation(line: 149, column: 29, scope: !3030)
!3045 = !DILocation(line: 149, column: 44, scope: !3030)
!3046 = !DILocation(line: 151, column: 29, scope: !3030)
!3047 = !DILocation(line: 151, column: 5, scope: !3030)
!3048 = !DILocation(line: 159, column: 5, scope: !3030)
!3049 = !DILocation(line: 160, column: 1, scope: !3030)
!3050 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !2544, file: !2544, line: 163, type: !3051, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !3054)
!3051 = !DISubroutineType(types: !3052)
!3052 = !{!2990, !3053, !1055}
!3053 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !98, line: 860, baseType: !2546)
!3054 = !{!3055, !3056}
!3055 = !DILocalVariable(name: "clock_source", arg: 1, scope: !3050, file: !2544, line: 163, type: !3053)
!3056 = !DILocalVariable(name: "count", arg: 2, scope: !3050, file: !2544, line: 163, type: !1055)
!3057 = !DILocation(line: 0, scope: !3050)
!3058 = !DILocation(line: 166, column: 9, scope: !3050)
!3059 = !DILocation(line: 167, column: 44, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3061, file: !2544, line: 167, column: 13)
!3061 = distinct !DILexicalBlock(scope: !3062, file: !2544, line: 166, column: 51)
!3062 = distinct !DILexicalBlock(scope: !3050, file: !2544, line: 166, column: 9)
!3063 = !DILocation(line: 167, column: 59, scope: !3060)
!3064 = !DILocation(line: 167, column: 13, scope: !3061)
!3065 = !DILocation(line: 170, column: 38, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !3060, file: !2544, line: 167, column: 79)
!3067 = !DILocation(line: 170, column: 13, scope: !3066)
!3068 = !DILocation(line: 172, column: 59, scope: !3066)
!3069 = !DILocation(line: 173, column: 9, scope: !3066)
!3070 = !DILocation(line: 175, column: 36, scope: !3061)
!3071 = !DILocation(line: 175, column: 18, scope: !3061)
!3072 = !DILocation(line: 177, column: 5, scope: !3061)
!3073 = !DILocation(line: 179, column: 44, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3075, file: !2544, line: 179, column: 13)
!3075 = distinct !DILexicalBlock(scope: !3076, file: !2544, line: 178, column: 55)
!3076 = distinct !DILexicalBlock(scope: !3062, file: !2544, line: 178, column: 14)
!3077 = !DILocation(line: 179, column: 59, scope: !3074)
!3078 = !DILocation(line: 179, column: 13, scope: !3075)
!3079 = !DILocation(line: 182, column: 38, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3074, file: !2544, line: 179, column: 79)
!3081 = !DILocation(line: 182, column: 13, scope: !3080)
!3082 = !DILocation(line: 184, column: 59, scope: !3080)
!3083 = !DILocation(line: 186, column: 9, scope: !3080)
!3084 = !DILocation(line: 188, column: 68, scope: !3075)
!3085 = !DILocation(line: 188, column: 50, scope: !3075)
!3086 = !DILocation(line: 188, column: 18, scope: !3075)
!3087 = !DILocation(line: 0, scope: !3062)
!3088 = !DILocation(line: 193, column: 5, scope: !3050)
!3089 = !DILocation(line: 194, column: 1, scope: !3050)
!3090 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !2544, file: !2544, line: 196, type: !3091, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !3093)
!3091 = !DISubroutineType(types: !3092)
!3092 = !{!2990, !61, !61, !1055}
!3093 = !{!3094, !3095, !3096}
!3094 = !DILocalVariable(name: "start_count", arg: 1, scope: !3090, file: !2544, line: 196, type: !61)
!3095 = !DILocalVariable(name: "end_count", arg: 2, scope: !3090, file: !2544, line: 196, type: !61)
!3096 = !DILocalVariable(name: "duration_count", arg: 3, scope: !3090, file: !2544, line: 196, type: !1055)
!3097 = !DILocation(line: 0, scope: !3090)
!3098 = !DILocation(line: 198, column: 24, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3090, file: !2544, line: 198, column: 9)
!3100 = !DILocation(line: 198, column: 9, scope: !3090)
!3101 = !DILocation(line: 0, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3090, file: !2544, line: 202, column: 9)
!3103 = !DILocation(line: 208, column: 5, scope: !3090)
!3104 = !DILocation(line: 209, column: 1, scope: !3090)
!3105 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !2544, file: !2544, line: 211, type: !3106, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !3109)
!3106 = !DISubroutineType(types: !3107)
!3107 = !{!2990, !2991, !3108}
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!3109 = !{!3110, !3111}
!3110 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3105, file: !2544, line: 211, type: !2991)
!3111 = !DILocalVariable(name: "running_status", arg: 2, scope: !3105, file: !2544, line: 211, type: !3108)
!3112 = !DILocation(line: 0, scope: !3105)
!3113 = !DILocation(line: 213, column: 18, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3105, file: !2544, line: 213, column: 9)
!3115 = !DILocation(line: 213, column: 9, scope: !3105)
!3116 = !DILocation(line: 217, column: 47, scope: !3105)
!3117 = !DILocation(line: 217, column: 21, scope: !3105)
!3118 = !DILocation(line: 219, column: 5, scope: !3105)
!3119 = !DILocation(line: 220, column: 1, scope: !3105)
!3120 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !2544, file: !2544, line: 222, type: !3121, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !3123)
!3121 = !DISubroutineType(types: !3122)
!3122 = !{!2990, !2991, !307, !88}
!3123 = !{!3124, !3125, !3126}
!3124 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3120, file: !2544, line: 222, type: !2991)
!3125 = !DILocalVariable(name: "callback", arg: 2, scope: !3120, file: !2544, line: 223, type: !307)
!3126 = !DILocalVariable(name: "user_data", arg: 3, scope: !3120, file: !2544, line: 224, type: !88)
!3127 = !DILocation(line: 0, scope: !3120)
!3128 = !DILocation(line: 227, column: 9, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3120, file: !2544, line: 227, column: 9)
!3130 = !DILocation(line: 227, column: 9, scope: !3120)
!3131 = !DILocation(line: 231, column: 34, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3120, file: !2544, line: 231, column: 9)
!3133 = !DILocation(line: 231, column: 49, scope: !3132)
!3134 = !DILocation(line: 231, column: 69, scope: !3132)
!3135 = !DILocation(line: 232, column: 38, scope: !3132)
!3136 = !DILocation(line: 232, column: 53, scope: !3132)
!3137 = !DILocation(line: 231, column: 9, scope: !3120)
!3138 = !DILocation(line: 237, column: 18, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3120, file: !2544, line: 237, column: 9)
!3140 = !DILocation(line: 237, column: 9, scope: !3120)
!3141 = !DILocation(line: 245, column: 46, scope: !3120)
!3142 = !DILocation(line: 245, column: 56, scope: !3120)
!3143 = !DILocation(line: 246, column: 46, scope: !3120)
!3144 = !DILocation(line: 246, column: 56, scope: !3120)
!3145 = !DILocation(line: 248, column: 5, scope: !3120)
!3146 = !DILocation(line: 250, column: 5, scope: !3120)
!3147 = !DILocation(line: 252, column: 1, scope: !3120)
!3148 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !2544, file: !2544, line: 256, type: !3149, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !3152)
!3149 = !DISubroutineType(types: !3150)
!3150 = !{!2990, !2991, !61, !3151}
!3151 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !255, line: 383, baseType: !254)
!3152 = !{!3153, !3154, !3155, !3156}
!3153 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3148, file: !2544, line: 256, type: !2991)
!3154 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3148, file: !2544, line: 256, type: !61)
!3155 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3148, file: !2544, line: 256, type: !3151)
!3156 = !DILocalVariable(name: "mask", scope: !3148, file: !2544, line: 259, type: !60)
!3157 = !DILocation(line: 0, scope: !3148)
!3158 = !DILocation(line: 259, column: 5, scope: !3148)
!3159 = !DILocation(line: 259, column: 23, scope: !3148)
!3160 = !DILocation(line: 261, column: 9, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3148, file: !2544, line: 261, column: 9)
!3162 = !DILocation(line: 261, column: 9, scope: !3148)
!3163 = !DILocation(line: 265, column: 34, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3148, file: !2544, line: 265, column: 9)
!3165 = !DILocation(line: 265, column: 49, scope: !3164)
!3166 = !DILocation(line: 266, column: 13, scope: !3164)
!3167 = !DILocation(line: 266, column: 41, scope: !3164)
!3168 = !DILocation(line: 266, column: 56, scope: !3164)
!3169 = !DILocation(line: 265, column: 9, scope: !3148)
!3170 = !DILocation(line: 271, column: 25, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3148, file: !2544, line: 271, column: 9)
!3172 = !DILocation(line: 271, column: 9, scope: !3148)
!3173 = !DILocation(line: 282, column: 12, scope: !3148)
!3174 = !DILocation(line: 282, column: 10, scope: !3148)
!3175 = !DILocation(line: 284, column: 5, scope: !3148)
!3176 = !DILocation(line: 286, column: 5, scope: !3148)
!3177 = !DILocation(line: 286, column: 23, scope: !3148)
!3178 = !DILocation(line: 286, column: 34, scope: !3148)
!3179 = !DILocation(line: 287, column: 5, scope: !3148)
!3180 = !DILocation(line: 287, column: 23, scope: !3148)
!3181 = !DILocation(line: 287, column: 34, scope: !3148)
!3182 = !DILocation(line: 290, column: 5, scope: !3148)
!3183 = !DILocation(line: 290, column: 23, scope: !3148)
!3184 = !DILocation(line: 290, column: 37, scope: !3148)
!3185 = !DILocation(line: 291, column: 39, scope: !3148)
!3186 = !DILocation(line: 291, column: 5, scope: !3148)
!3187 = !DILocation(line: 291, column: 23, scope: !3148)
!3188 = !DILocation(line: 291, column: 37, scope: !3148)
!3189 = !DILocation(line: 292, column: 5, scope: !3148)
!3190 = !DILocation(line: 292, column: 23, scope: !3148)
!3191 = !DILocation(line: 292, column: 37, scope: !3148)
!3192 = !DILocation(line: 297, column: 47, scope: !3148)
!3193 = !DILocation(line: 298, column: 33, scope: !3148)
!3194 = !DILocation(line: 296, column: 5, scope: !3148)
!3195 = !DILocation(line: 296, column: 23, scope: !3148)
!3196 = !DILocation(line: 296, column: 31, scope: !3148)
!3197 = !DILocation(line: 300, column: 5, scope: !3148)
!3198 = !DILocation(line: 300, column: 29, scope: !3148)
!3199 = distinct !{!3199, !3197, !3200}
!3200 = !DILocation(line: 300, column: 39, scope: !3148)
!3201 = !DILocation(line: 301, column: 23, scope: !3148)
!3202 = !DILocation(line: 301, column: 33, scope: !3148)
!3203 = !DILocation(line: 302, column: 5, scope: !3148)
!3204 = !DILocation(line: 302, column: 23, scope: !3148)
!3205 = !DILocation(line: 302, column: 34, scope: !3148)
!3206 = !DILocation(line: 303, column: 44, scope: !3148)
!3207 = !DILocation(line: 305, column: 28, scope: !3148)
!3208 = !DILocation(line: 305, column: 5, scope: !3148)
!3209 = !DILocation(line: 306, column: 5, scope: !3148)
!3210 = !DILocation(line: 307, column: 1, scope: !3148)
!3211 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !2544, file: !2544, line: 310, type: !3212, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !3214)
!3212 = !DISubroutineType(types: !3213)
!3213 = !{!2990, !61}
!3214 = !{!3215}
!3215 = !DILocalVariable(name: "ms", arg: 1, scope: !3211, file: !2544, line: 310, type: !61)
!3216 = !DILocation(line: 0, scope: !3211)
!3217 = !DILocation(line: 313, column: 40, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3211, file: !2544, line: 313, column: 9)
!3219 = !DILocation(line: 313, column: 55, scope: !3218)
!3220 = !DILocation(line: 313, column: 9, scope: !3211)
!3221 = !DILocation(line: 316, column: 34, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3218, file: !2544, line: 313, column: 75)
!3223 = !DILocation(line: 316, column: 9, scope: !3222)
!3224 = !DILocation(line: 317, column: 55, scope: !3222)
!3225 = !DILocation(line: 318, column: 5, scope: !3222)
!3226 = !DILocation(line: 320, column: 20, scope: !3211)
!3227 = !DILocation(line: 320, column: 45, scope: !3211)
!3228 = !DILocation(line: 320, column: 5, scope: !3211)
!3229 = !DILocation(line: 322, column: 5, scope: !3211)
!3230 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !2544, file: !2544, line: 327, type: !3149, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !3231)
!3231 = !{!3232, !3233, !3234, !3235}
!3232 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3230, file: !2544, line: 327, type: !2991)
!3233 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !3230, file: !2544, line: 327, type: !61)
!3234 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3230, file: !2544, line: 327, type: !3151)
!3235 = !DILocalVariable(name: "mask", scope: !3230, file: !2544, line: 329, type: !60)
!3236 = !DILocation(line: 0, scope: !3230)
!3237 = !DILocation(line: 329, column: 5, scope: !3230)
!3238 = !DILocation(line: 329, column: 23, scope: !3230)
!3239 = !DILocation(line: 331, column: 9, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3230, file: !2544, line: 331, column: 9)
!3241 = !DILocation(line: 331, column: 9, scope: !3230)
!3242 = !DILocation(line: 336, column: 34, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3230, file: !2544, line: 336, column: 9)
!3244 = !DILocation(line: 336, column: 49, scope: !3243)
!3245 = !DILocation(line: 337, column: 13, scope: !3243)
!3246 = !DILocation(line: 337, column: 41, scope: !3243)
!3247 = !DILocation(line: 337, column: 56, scope: !3243)
!3248 = !DILocation(line: 336, column: 9, scope: !3230)
!3249 = !DILocation(line: 349, column: 29, scope: !3230)
!3250 = !DILocation(line: 349, column: 49, scope: !3230)
!3251 = !DILocation(line: 351, column: 12, scope: !3230)
!3252 = !DILocation(line: 351, column: 10, scope: !3230)
!3253 = !DILocation(line: 353, column: 5, scope: !3230)
!3254 = !DILocation(line: 355, column: 5, scope: !3230)
!3255 = !DILocation(line: 355, column: 23, scope: !3230)
!3256 = !DILocation(line: 355, column: 34, scope: !3230)
!3257 = !DILocation(line: 356, column: 5, scope: !3230)
!3258 = !DILocation(line: 356, column: 23, scope: !3230)
!3259 = !DILocation(line: 356, column: 34, scope: !3230)
!3260 = !DILocation(line: 359, column: 5, scope: !3230)
!3261 = !DILocation(line: 359, column: 23, scope: !3230)
!3262 = !DILocation(line: 359, column: 37, scope: !3230)
!3263 = !DILocation(line: 360, column: 39, scope: !3230)
!3264 = !DILocation(line: 360, column: 5, scope: !3230)
!3265 = !DILocation(line: 360, column: 23, scope: !3230)
!3266 = !DILocation(line: 360, column: 37, scope: !3230)
!3267 = !DILocation(line: 361, column: 5, scope: !3230)
!3268 = !DILocation(line: 361, column: 23, scope: !3230)
!3269 = !DILocation(line: 361, column: 37, scope: !3230)
!3270 = !DILocation(line: 366, column: 47, scope: !3230)
!3271 = !DILocation(line: 367, column: 33, scope: !3230)
!3272 = !DILocation(line: 365, column: 5, scope: !3230)
!3273 = !DILocation(line: 365, column: 23, scope: !3230)
!3274 = !DILocation(line: 365, column: 31, scope: !3230)
!3275 = !DILocation(line: 369, column: 5, scope: !3230)
!3276 = !DILocation(line: 369, column: 29, scope: !3230)
!3277 = distinct !{!3277, !3275, !3278}
!3278 = !DILocation(line: 369, column: 39, scope: !3230)
!3279 = !DILocation(line: 370, column: 23, scope: !3230)
!3280 = !DILocation(line: 370, column: 33, scope: !3230)
!3281 = !DILocation(line: 371, column: 5, scope: !3230)
!3282 = !DILocation(line: 371, column: 23, scope: !3230)
!3283 = !DILocation(line: 371, column: 34, scope: !3230)
!3284 = !DILocation(line: 373, column: 28, scope: !3230)
!3285 = !DILocation(line: 373, column: 5, scope: !3230)
!3286 = !DILocation(line: 375, column: 44, scope: !3230)
!3287 = !DILocation(line: 377, column: 5, scope: !3230)
!3288 = !DILocation(line: 378, column: 1, scope: !3230)
!3289 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !2544, file: !2544, line: 382, type: !3212, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !3290)
!3290 = !{!3291}
!3291 = !DILocalVariable(name: "us", arg: 1, scope: !3289, file: !2544, line: 382, type: !61)
!3292 = !DILocation(line: 0, scope: !3289)
!3293 = !DILocation(line: 385, column: 40, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3289, file: !2544, line: 385, column: 9)
!3295 = !DILocation(line: 385, column: 55, scope: !3294)
!3296 = !DILocation(line: 385, column: 9, scope: !3289)
!3297 = !DILocation(line: 388, column: 34, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3294, file: !2544, line: 385, column: 75)
!3299 = !DILocation(line: 388, column: 9, scope: !3298)
!3300 = !DILocation(line: 390, column: 55, scope: !3298)
!3301 = !DILocation(line: 391, column: 5, scope: !3298)
!3302 = !DILocation(line: 392, column: 20, scope: !3289)
!3303 = !DILocation(line: 392, column: 45, scope: !3289)
!3304 = !DILocation(line: 392, column: 5, scope: !3289)
!3305 = !DILocation(line: 394, column: 5, scope: !3289)
!3306 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !2544, file: !2544, line: 398, type: !2988, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !3307)
!3307 = !{!3308, !3309}
!3308 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3306, file: !2544, line: 398, type: !2991)
!3309 = !DILocalVariable(name: "mask", scope: !3306, file: !2544, line: 400, type: !60)
!3310 = !DILocation(line: 0, scope: !3306)
!3311 = !DILocation(line: 400, column: 5, scope: !3306)
!3312 = !DILocation(line: 400, column: 23, scope: !3306)
!3313 = !DILocation(line: 402, column: 9, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3306, file: !2544, line: 402, column: 9)
!3315 = !DILocation(line: 402, column: 9, scope: !3306)
!3316 = !DILocation(line: 413, column: 12, scope: !3306)
!3317 = !DILocation(line: 413, column: 10, scope: !3306)
!3318 = !DILocation(line: 415, column: 5, scope: !3306)
!3319 = !DILocation(line: 415, column: 23, scope: !3306)
!3320 = !DILocation(line: 415, column: 34, scope: !3306)
!3321 = !DILocation(line: 418, column: 5, scope: !3306)
!3322 = !DILocation(line: 418, column: 23, scope: !3306)
!3323 = !DILocation(line: 418, column: 34, scope: !3306)
!3324 = !DILocation(line: 420, column: 5, scope: !3306)
!3325 = !DILocation(line: 420, column: 23, scope: !3306)
!3326 = !DILocation(line: 420, column: 35, scope: !3306)
!3327 = !DILocation(line: 422, column: 29, scope: !3306)
!3328 = !DILocation(line: 422, column: 44, scope: !3306)
!3329 = !DILocation(line: 423, column: 28, scope: !3306)
!3330 = !DILocation(line: 423, column: 5, scope: !3306)
!3331 = !DILocation(line: 425, column: 33, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3306, file: !2544, line: 425, column: 9)
!3333 = !DILocation(line: 425, column: 9, scope: !3306)
!3334 = !DILocation(line: 427, column: 53, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3332, file: !2544, line: 425, column: 62)
!3336 = !DILocation(line: 428, column: 5, scope: !3335)
!3337 = !DILocation(line: 430, column: 1, scope: !3306)
!3338 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !2544, file: !2544, line: 434, type: !3339, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !3341)
!3339 = !DISubroutineType(types: !3340)
!3340 = !{!2990, !1055}
!3341 = !{!3342, !3343, !3344}
!3342 = !DILocalVariable(name: "handle", arg: 1, scope: !3338, file: !2544, line: 434, type: !1055)
!3343 = !DILocalVariable(name: "timer", scope: !3338, file: !2544, line: 436, type: !61)
!3344 = !DILocalVariable(name: "mask", scope: !3338, file: !2544, line: 437, type: !61)
!3345 = !DILocation(line: 0, scope: !3338)
!3346 = !DILocation(line: 439, column: 24, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3338, file: !2544, line: 439, column: 9)
!3348 = !DILocation(line: 439, column: 41, scope: !3347)
!3349 = !DILocation(line: 439, column: 9, scope: !3338)
!3350 = !DILocation(line: 443, column: 16, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3338, file: !2544, line: 443, column: 9)
!3352 = !DILocation(line: 443, column: 9, scope: !3338)
!3353 = !DILocation(line: 448, column: 12, scope: !3338)
!3354 = !DILocation(line: 450, column: 15, scope: !3338)
!3355 = !DILocation(line: 451, column: 21, scope: !3338)
!3356 = !DILocation(line: 451, column: 13, scope: !3338)
!3357 = !DILocation(line: 452, column: 33, scope: !3338)
!3358 = !DILocation(line: 452, column: 41, scope: !3338)
!3359 = !DILocation(line: 453, column: 36, scope: !3338)
!3360 = !DILocation(line: 455, column: 5, scope: !3338)
!3361 = !DILocation(line: 456, column: 5, scope: !3338)
!3362 = !DILocation(line: 457, column: 1, scope: !3338)
!3363 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !2544, file: !2544, line: 459, type: !3212, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !3364)
!3364 = !{!3365, !3366}
!3365 = !DILocalVariable(name: "handle", arg: 1, scope: !3363, file: !2544, line: 459, type: !61)
!3366 = !DILocalVariable(name: "timer", scope: !3363, file: !2544, line: 461, type: !60)
!3367 = !DILocation(line: 0, scope: !3363)
!3368 = !DILocation(line: 461, column: 5, scope: !3363)
!3369 = !DILocation(line: 461, column: 23, scope: !3363)
!3370 = !DILocation(line: 463, column: 17, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3363, file: !2544, line: 463, column: 9)
!3372 = !DILocation(line: 463, column: 37, scope: !3371)
!3373 = !DILocation(line: 463, column: 9, scope: !3363)
!3374 = !DILocation(line: 467, column: 20, scope: !3363)
!3375 = !DILocation(line: 467, column: 11, scope: !3363)
!3376 = !DILocation(line: 469, column: 24, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3363, file: !2544, line: 469, column: 9)
!3378 = !DILocation(line: 469, column: 41, scope: !3377)
!3379 = !DILocation(line: 469, column: 9, scope: !3363)
!3380 = !DILocation(line: 473, column: 30, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3363, file: !2544, line: 473, column: 9)
!3382 = !DILocation(line: 473, column: 37, scope: !3381)
!3383 = !DILocation(line: 473, column: 9, scope: !3363)
!3384 = !DILocation(line: 477, column: 30, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3363, file: !2544, line: 477, column: 9)
!3386 = !DILocation(line: 477, column: 37, scope: !3385)
!3387 = !DILocation(line: 477, column: 45, scope: !3385)
!3388 = !DILocation(line: 477, column: 9, scope: !3363)
!3389 = !DILocation(line: 481, column: 26, scope: !3363)
!3390 = !DILocation(line: 481, column: 33, scope: !3363)
!3391 = !DILocation(line: 481, column: 41, scope: !3363)
!3392 = !DILocation(line: 482, column: 36, scope: !3363)
!3393 = !DILocation(line: 484, column: 5, scope: !3363)
!3394 = !DILocation(line: 485, column: 1, scope: !3363)
!3395 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !2544, file: !2544, line: 487, type: !3396, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !3398)
!3396 = !DISubroutineType(types: !3397)
!3397 = !{!2990, !61, !61, !307, !88}
!3398 = !{!3399, !3400, !3401, !3402, !3403, !3404, !3405}
!3399 = !DILocalVariable(name: "handle", arg: 1, scope: !3395, file: !2544, line: 487, type: !61)
!3400 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3395, file: !2544, line: 487, type: !61)
!3401 = !DILocalVariable(name: "callback", arg: 3, scope: !3395, file: !2544, line: 487, type: !307)
!3402 = !DILocalVariable(name: "user_data", arg: 4, scope: !3395, file: !2544, line: 487, type: !88)
!3403 = !DILocalVariable(name: "current_time", scope: !3395, file: !2544, line: 489, type: !61)
!3404 = !DILocalVariable(name: "mask", scope: !3395, file: !2544, line: 490, type: !61)
!3405 = !DILocalVariable(name: "timer", scope: !3395, file: !2544, line: 491, type: !61)
!3406 = !DILocation(line: 0, scope: !3395)
!3407 = !DILocation(line: 493, column: 17, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3395, file: !2544, line: 493, column: 9)
!3409 = !DILocation(line: 493, column: 37, scope: !3408)
!3410 = !DILocation(line: 493, column: 9, scope: !3395)
!3411 = !DILocation(line: 497, column: 20, scope: !3395)
!3412 = !DILocation(line: 503, column: 37, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3395, file: !2544, line: 503, column: 9)
!3414 = !DILocation(line: 503, column: 9, scope: !3395)
!3415 = !DILocation(line: 507, column: 37, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3395, file: !2544, line: 507, column: 9)
!3417 = !DILocation(line: 507, column: 45, scope: !3416)
!3418 = !DILocation(line: 507, column: 9, scope: !3395)
!3419 = !DILocation(line: 511, column: 25, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3395, file: !2544, line: 511, column: 9)
!3421 = !DILocation(line: 511, column: 9, scope: !3395)
!3422 = !DILocation(line: 516, column: 12, scope: !3395)
!3423 = !DILocation(line: 519, column: 30, scope: !3395)
!3424 = !DILocation(line: 521, column: 24, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3395, file: !2544, line: 521, column: 9)
!3426 = !DILocation(line: 521, column: 38, scope: !3425)
!3427 = !DILocation(line: 521, column: 9, scope: !3395)
!3428 = !DILocation(line: 522, column: 9, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3425, file: !2544, line: 521, column: 48)
!3430 = !DILocation(line: 523, column: 9, scope: !3429)
!3431 = !DILocation(line: 524, column: 38, scope: !3429)
!3432 = !DILocation(line: 525, column: 5, scope: !3429)
!3433 = !DILocation(line: 526, column: 5, scope: !3395)
!3434 = !DILocation(line: 528, column: 23, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3395, file: !2544, line: 528, column: 8)
!3436 = !DILocation(line: 528, column: 41, scope: !3435)
!3437 = !DILocation(line: 528, column: 8, scope: !3395)
!3438 = !DILocation(line: 529, column: 51, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3435, file: !2544, line: 528, column: 51)
!3440 = !DILocation(line: 529, column: 24, scope: !3439)
!3441 = !DILocation(line: 530, column: 5, scope: !3439)
!3442 = !DILocation(line: 0, scope: !3435)
!3443 = !DILocation(line: 534, column: 34, scope: !3395)
!3444 = !DILocation(line: 535, column: 39, scope: !3395)
!3445 = !DILocation(line: 537, column: 49, scope: !3395)
!3446 = !DILocation(line: 538, column: 80, scope: !3395)
!3447 = !DILocation(line: 538, column: 33, scope: !3395)
!3448 = !DILocation(line: 538, column: 49, scope: !3395)
!3449 = !DILocation(line: 539, column: 50, scope: !3395)
!3450 = !DILocation(line: 539, column: 61, scope: !3395)
!3451 = !DILocation(line: 540, column: 50, scope: !3395)
!3452 = !DILocation(line: 540, column: 61, scope: !3395)
!3453 = !DILocation(line: 542, column: 5, scope: !3395)
!3454 = !DILocation(line: 546, column: 30, scope: !3395)
!3455 = !DILocation(line: 548, column: 5, scope: !3395)
!3456 = !DILocation(line: 550, column: 5, scope: !3395)
!3457 = !DILocation(line: 551, column: 1, scope: !3395)
!3458 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !2544, file: !2544, line: 553, type: !3212, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !3459)
!3459 = !{!3460, !3461, !3462, !3463}
!3460 = !DILocalVariable(name: "handle", arg: 1, scope: !3458, file: !2544, line: 553, type: !61)
!3461 = !DILocalVariable(name: "current_time", scope: !3458, file: !2544, line: 555, type: !61)
!3462 = !DILocalVariable(name: "mask", scope: !3458, file: !2544, line: 556, type: !61)
!3463 = !DILocalVariable(name: "timer", scope: !3458, file: !2544, line: 557, type: !61)
!3464 = !DILocation(line: 0, scope: !3458)
!3465 = !DILocation(line: 559, column: 17, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3458, file: !2544, line: 559, column: 9)
!3467 = !DILocation(line: 559, column: 37, scope: !3466)
!3468 = !DILocation(line: 559, column: 9, scope: !3458)
!3469 = !DILocation(line: 563, column: 20, scope: !3458)
!3470 = !DILocation(line: 565, column: 37, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3458, file: !2544, line: 565, column: 9)
!3472 = !DILocation(line: 565, column: 48, scope: !3471)
!3473 = !DILocation(line: 565, column: 9, scope: !3458)
!3474 = !DILocation(line: 569, column: 37, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3458, file: !2544, line: 569, column: 9)
!3476 = !DILocation(line: 569, column: 45, scope: !3475)
!3477 = !DILocation(line: 569, column: 9, scope: !3458)
!3478 = !DILocation(line: 574, column: 12, scope: !3458)
!3479 = !DILocation(line: 577, column: 30, scope: !3458)
!3480 = !DILocation(line: 578, column: 5, scope: !3458)
!3481 = !DILocation(line: 579, column: 30, scope: !3458)
!3482 = !DILocation(line: 581, column: 23, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3458, file: !2544, line: 581, column: 8)
!3484 = !DILocation(line: 581, column: 41, scope: !3483)
!3485 = !DILocation(line: 581, column: 8, scope: !3458)
!3486 = !DILocation(line: 582, column: 51, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3483, file: !2544, line: 581, column: 51)
!3488 = !DILocation(line: 582, column: 24, scope: !3487)
!3489 = !DILocation(line: 583, column: 5, scope: !3487)
!3490 = !DILocation(line: 0, scope: !3483)
!3491 = !DILocation(line: 587, column: 34, scope: !3458)
!3492 = !DILocation(line: 588, column: 39, scope: !3458)
!3493 = !DILocation(line: 590, column: 44, scope: !3458)
!3494 = !DILocation(line: 592, column: 24, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3458, file: !2544, line: 592, column: 9)
!3496 = !DILocation(line: 592, column: 44, scope: !3495)
!3497 = !DILocation(line: 592, column: 9, scope: !3458)
!3498 = !DILocation(line: 593, column: 9, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3495, file: !2544, line: 592, column: 50)
!3500 = !DILocation(line: 594, column: 5, scope: !3499)
!3501 = !DILocation(line: 598, column: 30, scope: !3458)
!3502 = !DILocation(line: 599, column: 5, scope: !3458)
!3503 = !DILocation(line: 601, column: 5, scope: !3458)
!3504 = !DILocation(line: 603, column: 1, scope: !3458)
!3505 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !2544, file: !2544, line: 605, type: !3506, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !3508)
!3506 = !DISubroutineType(types: !3507)
!3507 = !{!2990, !61, !1055}
!3508 = !{!3509, !3510, !3511, !3512, !3513}
!3509 = !DILocalVariable(name: "handle", arg: 1, scope: !3505, file: !2544, line: 605, type: !61)
!3510 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !3505, file: !2544, line: 605, type: !1055)
!3511 = !DILocalVariable(name: "current_time", scope: !3505, file: !2544, line: 607, type: !61)
!3512 = !DILocalVariable(name: "mask", scope: !3505, file: !2544, line: 608, type: !61)
!3513 = !DILocalVariable(name: "timer", scope: !3505, file: !2544, line: 609, type: !61)
!3514 = !DILocation(line: 0, scope: !3505)
!3515 = !DILocation(line: 611, column: 17, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3505, file: !2544, line: 611, column: 9)
!3517 = !DILocation(line: 611, column: 37, scope: !3516)
!3518 = !DILocation(line: 611, column: 9, scope: !3505)
!3519 = !DILocation(line: 615, column: 20, scope: !3505)
!3520 = !DILocation(line: 617, column: 37, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3505, file: !2544, line: 617, column: 9)
!3522 = !DILocation(line: 617, column: 45, scope: !3521)
!3523 = !DILocation(line: 617, column: 9, scope: !3505)
!3524 = !DILocation(line: 622, column: 12, scope: !3505)
!3525 = !DILocation(line: 624, column: 35, scope: !3505)
!3526 = !DILocation(line: 624, column: 51, scope: !3505)
!3527 = !DILocation(line: 624, column: 76, scope: !3505)
!3528 = !DILocation(line: 624, column: 49, scope: !3505)
!3529 = !DILocation(line: 626, column: 37, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3505, file: !2544, line: 626, column: 9)
!3531 = !DILocation(line: 626, column: 9, scope: !3505)
!3532 = !DILocation(line: 0, scope: !3530)
!3533 = !DILocation(line: 632, column: 5, scope: !3505)
!3534 = !DILocation(line: 634, column: 5, scope: !3505)
!3535 = !DILocation(line: 636, column: 1, scope: !3505)
!3536 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !95, file: !95, line: 56, type: !3537, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3539)
!3537 = !DISubroutineType(types: !3538)
!3538 = !{!61, !61, !61, !61}
!3539 = !{!3540, !3541, !3542, !3543, !3545, !3546}
!3540 = !DILocalVariable(name: "mul1", arg: 1, scope: !3536, file: !95, line: 56, type: !61)
!3541 = !DILocalVariable(name: "mul2", arg: 2, scope: !3536, file: !95, line: 56, type: !61)
!3542 = !DILocalVariable(name: "div", arg: 3, scope: !3536, file: !95, line: 56, type: !61)
!3543 = !DILocalVariable(name: "data1", scope: !3536, file: !95, line: 58, type: !3544)
!3544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 64, elements: !528)
!3545 = !DILocalVariable(name: "data2", scope: !3536, file: !95, line: 59, type: !3544)
!3546 = !DILocalVariable(name: "result", scope: !3536, file: !95, line: 60, type: !3544)
!3547 = !DILocation(line: 0, scope: !3536)
!3548 = !DILocation(line: 63, column: 22, scope: !3536)
!3549 = !DILocation(line: 63, column: 32, scope: !3536)
!3550 = !DILocation(line: 64, column: 23, scope: !3536)
!3551 = !DILocation(line: 64, column: 40, scope: !3536)
!3552 = !DILocation(line: 66, column: 27, scope: !3536)
!3553 = !DILocation(line: 67, column: 27, scope: !3536)
!3554 = !DILocation(line: 67, column: 44, scope: !3536)
!3555 = !DILocation(line: 69, column: 26, scope: !3536)
!3556 = !DILocation(line: 70, column: 36, scope: !3536)
!3557 = !DILocation(line: 70, column: 43, scope: !3536)
!3558 = !DILocation(line: 70, column: 55, scope: !3536)
!3559 = !DILocation(line: 72, column: 34, scope: !3536)
!3560 = !DILocation(line: 72, column: 41, scope: !3536)
!3561 = !DILocation(line: 72, column: 5, scope: !3536)
!3562 = distinct !DISubprogram(name: "gpt_current_count", scope: !95, file: !95, line: 75, type: !3563, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3565)
!3563 = !DISubroutineType(types: !3564)
!3564 = !{!61, !264}
!3565 = !{!3566}
!3566 = !DILocalVariable(name: "gpt", arg: 1, scope: !3562, file: !95, line: 75, type: !264)
!3567 = !DILocation(line: 0, scope: !3562)
!3568 = !DILocation(line: 77, column: 17, scope: !3562)
!3569 = !DILocation(line: 77, column: 5, scope: !3562)
!3570 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !95, file: !95, line: 81, type: !3571, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3573)
!3571 = !DISubroutineType(types: !3572)
!3572 = !{!61, !61}
!3573 = !{!3574}
!3574 = !DILocalVariable(name: "ms", arg: 1, scope: !3570, file: !95, line: 81, type: !61)
!3575 = !DILocation(line: 0, scope: !3570)
!3576 = !DILocation(line: 83, column: 27, scope: !3570)
!3577 = !DILocation(line: 83, column: 37, scope: !3570)
!3578 = !DILocation(line: 83, column: 43, scope: !3570)
!3579 = !DILocation(line: 83, column: 32, scope: !3570)
!3580 = !DILocation(line: 83, column: 53, scope: !3570)
!3581 = !DILocation(line: 83, column: 59, scope: !3570)
!3582 = !DILocation(line: 83, column: 48, scope: !3570)
!3583 = !DILocation(line: 83, column: 70, scope: !3570)
!3584 = !DILocation(line: 83, column: 76, scope: !3570)
!3585 = !DILocation(line: 83, column: 65, scope: !3570)
!3586 = !DILocation(line: 83, column: 5, scope: !3570)
!3587 = !DILocation(line: 90, column: 9, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !290, file: !95, line: 90, column: 9)
!3589 = !DILocation(line: 90, column: 9, scope: !290)
!3590 = !DILocation(line: 91, column: 13, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3592, file: !95, line: 91, column: 13)
!3592 = distinct !DILexicalBlock(scope: !3588, file: !95, line: 90, column: 24)
!3593 = !DILocation(line: 91, column: 13, scope: !3592)
!3594 = !DILocation(line: 92, column: 32, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3591, file: !95, line: 91, column: 41)
!3596 = !DILocation(line: 92, column: 30, scope: !3595)
!3597 = !DILocation(line: 93, column: 41, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3595, file: !95, line: 93, column: 17)
!3599 = !DILocation(line: 0, scope: !3591)
!3600 = !DILocation(line: 105, column: 1, scope: !290)
!3601 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !95, file: !95, line: 107, type: !291, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3602 = !DILocation(line: 109, column: 9, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3601, file: !95, line: 109, column: 9)
!3604 = !DILocation(line: 109, column: 9, scope: !3601)
!3605 = !DILocation(line: 110, column: 9, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3603, file: !95, line: 109, column: 61)
!3607 = !DILocation(line: 111, column: 5, scope: !3606)
!3608 = !DILocation(line: 112, column: 1, scope: !3601)
!3609 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !95, file: !95, line: 114, type: !3571, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3610)
!3610 = !{!3611}
!3611 = !DILocalVariable(name: "time_us", arg: 1, scope: !3609, file: !95, line: 114, type: !61)
!3612 = !DILocation(line: 0, scope: !3609)
!3613 = !DILocation(line: 116, column: 5, scope: !3609)
!3614 = !DILocation(line: 118, column: 9, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3609, file: !95, line: 118, column: 9)
!3616 = !DILocation(line: 118, column: 9, scope: !3609)
!3617 = !DILocation(line: 120, column: 49, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3615, file: !95, line: 118, column: 37)
!3619 = !DILocation(line: 120, column: 16, scope: !3618)
!3620 = !DILocation(line: 120, column: 9, scope: !3618)
!3621 = !DILocation(line: 0, scope: !3615)
!3622 = !DILocation(line: 125, column: 1, scope: !3609)
!3623 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !95, file: !95, line: 127, type: !3571, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3624)
!3624 = !{!3625}
!3625 = !DILocalVariable(name: "count", arg: 1, scope: !3623, file: !95, line: 127, type: !61)
!3626 = !DILocation(line: 0, scope: !3623)
!3627 = !DILocation(line: 129, column: 5, scope: !3623)
!3628 = !DILocation(line: 131, column: 9, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3623, file: !95, line: 131, column: 9)
!3630 = !DILocation(line: 131, column: 9, scope: !3623)
!3631 = !DILocation(line: 133, column: 69, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3629, file: !95, line: 131, column: 37)
!3633 = !DILocation(line: 133, column: 16, scope: !3632)
!3634 = !DILocation(line: 133, column: 9, scope: !3632)
!3635 = !DILocation(line: 0, scope: !3629)
!3636 = !DILocation(line: 138, column: 1, scope: !3623)
!3637 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !95, file: !95, line: 141, type: !3638, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3640)
!3638 = !DISubroutineType(types: !3639)
!3639 = !{null, !264, !61, !61}
!3640 = !{!3641, !3642, !3643}
!3641 = !DILocalVariable(name: "gpt", arg: 1, scope: !3637, file: !95, line: 141, type: !264)
!3642 = !DILocalVariable(name: "clock_source", arg: 2, scope: !3637, file: !95, line: 141, type: !61)
!3643 = !DILocalVariable(name: "divide", arg: 3, scope: !3637, file: !95, line: 141, type: !61)
!3644 = !DILocation(line: 0, scope: !3637)
!3645 = !DILocation(line: 143, column: 5, scope: !3637)
!3646 = !DILocation(line: 145, column: 33, scope: !3637)
!3647 = !DILocation(line: 145, column: 10, scope: !3637)
!3648 = !DILocation(line: 145, column: 18, scope: !3637)
!3649 = !DILocation(line: 148, column: 10, scope: !3637)
!3650 = !DILocation(line: 148, column: 18, scope: !3637)
!3651 = !DILocation(line: 149, column: 1, scope: !3637)
!3652 = distinct !DISubprogram(name: "gpt_delay_time", scope: !95, file: !95, line: 151, type: !3653, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3655)
!3653 = !DISubroutineType(types: !3654)
!3654 = !{null, !264, !828}
!3655 = !{!3656, !3657, !3658, !3659}
!3656 = !DILocalVariable(name: "gpt", arg: 1, scope: !3652, file: !95, line: 151, type: !264)
!3657 = !DILocalVariable(name: "count", arg: 2, scope: !3652, file: !95, line: 151, type: !828)
!3658 = !DILocalVariable(name: "end_count", scope: !3652, file: !95, line: 153, type: !61)
!3659 = !DILocalVariable(name: "current", scope: !3652, file: !95, line: 153, type: !61)
!3660 = !DILocation(line: 0, scope: !3652)
!3661 = !DILocation(line: 155, column: 17, scope: !3652)
!3662 = !DILocation(line: 156, column: 25, scope: !3652)
!3663 = !DILocation(line: 156, column: 33, scope: !3652)
!3664 = !DILocation(line: 159, column: 19, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3652, file: !95, line: 159, column: 9)
!3666 = !DILocation(line: 159, column: 9, scope: !3652)
!3667 = !DILocation(line: 160, column: 16, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3665, file: !95, line: 159, column: 30)
!3669 = !DILocation(line: 160, column: 39, scope: !3668)
!3670 = !DILocation(line: 160, column: 9, scope: !3668)
!3671 = distinct !{!3671, !3670, !3672}
!3672 = !DILocation(line: 160, column: 51, scope: !3668)
!3673 = !DILocation(line: 162, column: 16, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3665, file: !95, line: 161, column: 12)
!3675 = !DILocation(line: 162, column: 39, scope: !3674)
!3676 = !DILocation(line: 162, column: 9, scope: !3674)
!3677 = distinct !{!3677, !3676, !3678}
!3678 = !DILocation(line: 162, column: 50, scope: !3674)
!3679 = !DILocation(line: 163, column: 16, scope: !3674)
!3680 = !DILocation(line: 163, column: 39, scope: !3674)
!3681 = !DILocation(line: 163, column: 9, scope: !3674)
!3682 = distinct !{!3682, !3681, !3683}
!3683 = !DILocation(line: 163, column: 51, scope: !3674)
!3684 = !DILocation(line: 165, column: 1, scope: !3652)
!3685 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !95, file: !95, line: 166, type: !3686, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3688)
!3686 = !DISubroutineType(types: !3687)
!3687 = !{null, !264}
!3688 = !{!3689}
!3689 = !DILocalVariable(name: "gpt", arg: 1, scope: !3685, file: !95, line: 166, type: !264)
!3690 = !DILocation(line: 0, scope: !3685)
!3691 = !DILocation(line: 168, column: 10, scope: !3685)
!3692 = !DILocation(line: 168, column: 22, scope: !3685)
!3693 = !DILocation(line: 169, column: 10, scope: !3685)
!3694 = !DILocation(line: 169, column: 22, scope: !3685)
!3695 = !DILocation(line: 170, column: 21, scope: !3685)
!3696 = !DILocation(line: 171, column: 5, scope: !3685)
!3697 = !DILocation(line: 171, column: 16, scope: !3685)
!3698 = distinct !{!3698, !3696, !3699}
!3699 = !DILocation(line: 171, column: 26, scope: !3685)
!3700 = !DILocation(line: 172, column: 10, scope: !3685)
!3701 = !DILocation(line: 172, column: 22, scope: !3685)
!3702 = !DILocation(line: 173, column: 10, scope: !3685)
!3703 = !DILocation(line: 173, column: 22, scope: !3685)
!3704 = !DILocation(line: 174, column: 10, scope: !3685)
!3705 = !DILocation(line: 174, column: 22, scope: !3685)
!3706 = !DILocation(line: 176, column: 13, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3685, file: !95, line: 176, column: 9)
!3708 = !DILocation(line: 176, column: 9, scope: !3685)
!3709 = !DILocation(line: 177, column: 27, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3707, file: !95, line: 176, column: 22)
!3711 = !DILocation(line: 178, column: 5, scope: !3710)
!3712 = !DILocation(line: 179, column: 1, scope: !3685)
!3713 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !95, file: !95, line: 181, type: !3563, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3714)
!3714 = !{!3715, !3716}
!3715 = !DILocalVariable(name: "gpt", arg: 1, scope: !3713, file: !95, line: 181, type: !264)
!3716 = !DILocalVariable(name: "mask", scope: !3713, file: !95, line: 183, type: !60)
!3717 = !DILocation(line: 0, scope: !3713)
!3718 = !DILocation(line: 183, column: 5, scope: !3713)
!3719 = !DILocation(line: 183, column: 23, scope: !3713)
!3720 = !DILocation(line: 185, column: 17, scope: !3713)
!3721 = !DILocation(line: 185, column: 10, scope: !3713)
!3722 = !DILocation(line: 187, column: 22, scope: !3713)
!3723 = !DILocation(line: 189, column: 12, scope: !3713)
!3724 = !DILocation(line: 190, column: 1, scope: !3713)
!3725 = !DILocation(line: 189, column: 5, scope: !3713)
!3726 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !95, file: !95, line: 192, type: !3727, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3729)
!3727 = !DISubroutineType(types: !3728)
!3728 = !{null, !264, !61}
!3729 = !{!3730, !3731}
!3730 = !DILocalVariable(name: "gpt", arg: 1, scope: !3726, file: !95, line: 192, type: !264)
!3731 = !DILocalVariable(name: "mask", arg: 2, scope: !3726, file: !95, line: 192, type: !61)
!3732 = !DILocation(line: 0, scope: !3726)
!3733 = !DILocation(line: 194, column: 10, scope: !3726)
!3734 = !DILocation(line: 194, column: 21, scope: !3726)
!3735 = !DILocation(line: 195, column: 1, scope: !3726)
!3736 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !95, file: !95, line: 197, type: !1005, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3737)
!3737 = !{!3738, !3739, !3740, !3741, !3742}
!3738 = !DILocalVariable(name: "irq_number", arg: 1, scope: !3736, file: !95, line: 197, type: !916)
!3739 = !DILocalVariable(name: "i", scope: !3736, file: !95, line: 199, type: !61)
!3740 = !DILocalVariable(name: "mask", scope: !3736, file: !95, line: 200, type: !60)
!3741 = !DILocalVariable(name: "state", scope: !3736, file: !95, line: 201, type: !60)
!3742 = !DILocalVariable(name: "enable", scope: !3736, file: !95, line: 202, type: !60)
!3743 = !DILocation(line: 0, scope: !3736)
!3744 = !DILocation(line: 200, column: 5, scope: !3736)
!3745 = !DILocation(line: 200, column: 23, scope: !3736)
!3746 = !DILocation(line: 201, column: 5, scope: !3736)
!3747 = !DILocation(line: 201, column: 23, scope: !3736)
!3748 = !DILocation(line: 202, column: 5, scope: !3736)
!3749 = !DILocation(line: 202, column: 23, scope: !3736)
!3750 = !DILocation(line: 207, column: 5, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3736, file: !95, line: 207, column: 5)
!3752 = !DILocation(line: 209, column: 18, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3754, file: !95, line: 207, column: 44)
!3754 = distinct !DILexicalBlock(scope: !3751, file: !95, line: 207, column: 5)
!3755 = !DILocation(line: 209, column: 29, scope: !3753)
!3756 = !DILocation(line: 209, column: 16, scope: !3753)
!3757 = !DILocation(line: 210, column: 29, scope: !3753)
!3758 = !DILocation(line: 210, column: 16, scope: !3753)
!3759 = !DILocation(line: 212, column: 16, scope: !3753)
!3760 = !DILocation(line: 212, column: 14, scope: !3753)
!3761 = !DILocation(line: 214, column: 9, scope: !3753)
!3762 = !DILocation(line: 214, column: 20, scope: !3753)
!3763 = !DILocation(line: 214, column: 32, scope: !3753)
!3764 = !DILocation(line: 216, column: 14, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3753, file: !95, line: 216, column: 13)
!3766 = !DILocation(line: 216, column: 20, scope: !3765)
!3767 = !DILocation(line: 216, column: 40, scope: !3765)
!3768 = !DILocation(line: 216, column: 44, scope: !3765)
!3769 = !DILocation(line: 216, column: 51, scope: !3765)
!3770 = !DILocation(line: 216, column: 13, scope: !3753)
!3771 = !DILocation(line: 224, column: 51, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3773, file: !95, line: 224, column: 17)
!3773 = distinct !DILexicalBlock(scope: !3765, file: !95, line: 216, column: 70)
!3774 = !DILocation(line: 224, column: 60, scope: !3772)
!3775 = !DILocation(line: 224, column: 17, scope: !3773)
!3776 = !DILocation(line: 225, column: 94, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3772, file: !95, line: 224, column: 69)
!3778 = !DILocation(line: 225, column: 17, scope: !3777)
!3779 = !DILocation(line: 226, column: 13, scope: !3777)
!3780 = !DILocation(line: 229, column: 31, scope: !3753)
!3781 = !DILocation(line: 229, column: 42, scope: !3753)
!3782 = !DILocation(line: 229, column: 9, scope: !3753)
!3783 = !DILocation(line: 207, column: 40, scope: !3754)
!3784 = !DILocation(line: 207, column: 19, scope: !3754)
!3785 = distinct !{!3785, !3750, !3786}
!3786 = !DILocation(line: 231, column: 5, scope: !3751)
!3787 = !DILocation(line: 233, column: 1, scope: !3736)
!3788 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !95, file: !95, line: 236, type: !291, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3789 = !DILocation(line: 238, column: 5, scope: !3788)
!3790 = !DILocation(line: 239, column: 5, scope: !3788)
!3791 = !DILocation(line: 240, column: 5, scope: !3788)
!3792 = !DILocation(line: 241, column: 1, scope: !3788)
!3793 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !95, file: !95, line: 242, type: !3563, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3794)
!3794 = !{!3795, !3796, !3797, !3798, !3799}
!3795 = !DILocalVariable(name: "gpt", arg: 1, scope: !3793, file: !95, line: 242, type: !264)
!3796 = !DILocalVariable(name: "time", scope: !3793, file: !95, line: 244, type: !60)
!3797 = !DILocalVariable(name: "count", scope: !3793, file: !95, line: 245, type: !61)
!3798 = !DILocalVariable(name: "time_s", scope: !3793, file: !95, line: 245, type: !61)
!3799 = !DILocalVariable(name: "time_ms", scope: !3793, file: !95, line: 245, type: !61)
!3800 = !DILocation(line: 0, scope: !3793)
!3801 = !DILocation(line: 244, column: 5, scope: !3793)
!3802 = !DILocation(line: 244, column: 23, scope: !3793)
!3803 = !DILocation(line: 247, column: 13, scope: !3793)
!3804 = !DILocation(line: 248, column: 20, scope: !3793)
!3805 = !DILocation(line: 249, column: 23, scope: !3793)
!3806 = !DILocation(line: 249, column: 32, scope: !3793)
!3807 = !DILocation(line: 249, column: 39, scope: !3793)
!3808 = !DILocation(line: 249, column: 48, scope: !3793)
!3809 = !DILocation(line: 250, column: 19, scope: !3793)
!3810 = !DILocation(line: 250, column: 26, scope: !3793)
!3811 = !DILocation(line: 250, column: 10, scope: !3793)
!3812 = !DILocation(line: 253, column: 5, scope: !3793)
!3813 = !DILocation(line: 253, column: 30, scope: !3793)
!3814 = !DILocation(line: 253, column: 38, scope: !3793)
!3815 = !DILocation(line: 254, column: 5, scope: !3793)
!3816 = !DILocation(line: 254, column: 36, scope: !3793)
!3817 = distinct !{!3817, !3815, !3818}
!3818 = !DILocation(line: 254, column: 46, scope: !3793)
!3819 = !DILocation(line: 255, column: 12, scope: !3793)
!3820 = !DILocation(line: 256, column: 1, scope: !3793)
!3821 = !DILocation(line: 255, column: 5, scope: !3793)
!3822 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !95, file: !95, line: 258, type: !3823, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3825)
!3823 = !DISubroutineType(types: !3824)
!3824 = !{!61}
!3825 = !{!3826}
!3826 = !DILocalVariable(name: "i", scope: !3822, file: !95, line: 260, type: !61)
!3827 = !DILocation(line: 0, scope: !3822)
!3828 = !DILocation(line: 262, column: 5, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3822, file: !95, line: 262, column: 5)
!3830 = !DILocation(line: 263, column: 37, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3832, file: !95, line: 263, column: 13)
!3832 = distinct !DILexicalBlock(scope: !3833, file: !95, line: 262, column: 45)
!3833 = distinct !DILexicalBlock(scope: !3829, file: !95, line: 262, column: 5)
!3834 = !DILocation(line: 263, column: 45, scope: !3831)
!3835 = !DILocation(line: 263, column: 13, scope: !3832)
!3836 = !DILocation(line: 262, column: 41, scope: !3833)
!3837 = !DILocation(line: 262, column: 19, scope: !3833)
!3838 = distinct !{!3838, !3828, !3839}
!3839 = !DILocation(line: 266, column: 5, scope: !3829)
!3840 = !DILocation(line: 269, column: 1, scope: !3822)
!3841 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !95, file: !95, line: 271, type: !291, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3842)
!3842 = !{!3843, !3844}
!3843 = !DILocalVariable(name: "minimum_time", scope: !3841, file: !95, line: 273, type: !61)
!3844 = !DILocalVariable(name: "current_timer", scope: !3841, file: !95, line: 273, type: !61)
!3845 = !DILocation(line: 273, column: 5, scope: !3841)
!3846 = !DILocation(line: 275, column: 24, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3841, file: !95, line: 275, column: 9)
!3848 = !DILocation(line: 275, column: 9, scope: !3841)
!3849 = !DILocation(line: 0, scope: !3841)
!3850 = !DILocation(line: 279, column: 5, scope: !3841)
!3851 = !DILocation(line: 282, column: 56, scope: !3841)
!3852 = !DILocation(line: 282, column: 39, scope: !3841)
!3853 = !DILocation(line: 284, column: 30, scope: !3841)
!3854 = !DILocation(line: 285, column: 45, scope: !3841)
!3855 = !DILocation(line: 285, column: 5, scope: !3841)
!3856 = !DILocation(line: 286, column: 30, scope: !3841)
!3857 = !DILocation(line: 287, column: 1, scope: !3841)
!3858 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !95, file: !95, line: 308, type: !3859, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3861)
!3859 = !DISubroutineType(types: !3860)
!3860 = !{null, !1055, !1055}
!3861 = !{!3862, !3863, !3864, !3865, !3866}
!3862 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !3858, file: !95, line: 308, type: !1055)
!3863 = !DILocalVariable(name: "number", arg: 2, scope: !3858, file: !95, line: 308, type: !1055)
!3864 = !DILocalVariable(name: "i", scope: !3858, file: !95, line: 310, type: !61)
!3865 = !DILocalVariable(name: "minimum", scope: !3858, file: !95, line: 311, type: !61)
!3866 = !DILocalVariable(name: "data", scope: !3858, file: !95, line: 312, type: !61)
!3867 = !DILocation(line: 0, scope: !3858)
!3868 = !DILocation(line: 314, column: 5, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3858, file: !95, line: 314, column: 5)
!3870 = !DILocation(line: 315, column: 37, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3872, file: !95, line: 315, column: 13)
!3872 = distinct !DILexicalBlock(scope: !3873, file: !95, line: 314, column: 45)
!3873 = distinct !DILexicalBlock(scope: !3869, file: !95, line: 314, column: 5)
!3874 = !DILocation(line: 315, column: 13, scope: !3872)
!3875 = !DILocation(line: 316, column: 20, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3871, file: !95, line: 315, column: 57)
!3877 = !DILocation(line: 318, column: 22, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3876, file: !95, line: 318, column: 17)
!3879 = !DILocation(line: 318, column: 17, scope: !3876)
!3880 = !DILocation(line: 320, column: 25, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3878, file: !95, line: 318, column: 33)
!3882 = !DILocation(line: 321, column: 13, scope: !3881)
!3883 = !DILocation(line: 314, column: 41, scope: !3873)
!3884 = !DILocation(line: 314, column: 19, scope: !3873)
!3885 = distinct !{!3885, !3868, !3886}
!3886 = !DILocation(line: 323, column: 5, scope: !3869)
!3887 = !DILocation(line: 325, column: 19, scope: !3858)
!3888 = !DILocation(line: 326, column: 1, scope: !3858)
!3889 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !95, file: !95, line: 289, type: !3571, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3890)
!3890 = !{!3891, !3892, !3893, !3894}
!3891 = !DILocalVariable(name: "timer_number", arg: 1, scope: !3889, file: !95, line: 289, type: !61)
!3892 = !DILocalVariable(name: "time_out_delta", scope: !3889, file: !95, line: 291, type: !61)
!3893 = !DILocalVariable(name: "current_delta", scope: !3889, file: !95, line: 292, type: !61)
!3894 = !DILocalVariable(name: "ret_value", scope: !3889, file: !95, line: 293, type: !61)
!3895 = !DILocation(line: 0, scope: !3889)
!3896 = !DILocation(line: 295, column: 22, scope: !3889)
!3897 = !DILocation(line: 296, column: 22, scope: !3889)
!3898 = !DILocation(line: 298, column: 24, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3889, file: !95, line: 298, column: 9)
!3900 = !DILocation(line: 298, column: 9, scope: !3889)
!3901 = !DILocation(line: 306, column: 5, scope: !3889)
!3902 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !95, file: !95, line: 329, type: !309, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3903)
!3903 = !{!3904, !3905, !3906, !3907}
!3904 = !DILocalVariable(name: "parameter", arg: 1, scope: !3902, file: !95, line: 329, type: !88)
!3905 = !DILocalVariable(name: "i", scope: !3902, file: !95, line: 331, type: !61)
!3906 = !DILocalVariable(name: "time_ms", scope: !3902, file: !95, line: 332, type: !60)
!3907 = !DILocalVariable(name: "data", scope: !3902, file: !95, line: 333, type: !60)
!3908 = !DILocation(line: 0, scope: !3902)
!3909 = !DILocation(line: 332, column: 5, scope: !3902)
!3910 = !DILocation(line: 332, column: 23, scope: !3902)
!3911 = !DILocation(line: 333, column: 5, scope: !3902)
!3912 = !DILocation(line: 333, column: 23, scope: !3902)
!3913 = !DILocation(line: 336, column: 24, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3902, file: !95, line: 336, column: 9)
!3915 = !DILocation(line: 336, column: 41, scope: !3914)
!3916 = !DILocation(line: 336, column: 9, scope: !3902)
!3917 = !DILocation(line: 338, column: 34, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3914, file: !95, line: 336, column: 47)
!3919 = !DILocation(line: 339, column: 9, scope: !3918)
!3920 = !DILocation(line: 340, column: 34, scope: !3918)
!3921 = !DILocation(line: 342, column: 46, scope: !3918)
!3922 = !DILocation(line: 342, column: 19, scope: !3918)
!3923 = !DILocation(line: 342, column: 17, scope: !3918)
!3924 = !DILocation(line: 344, column: 41, scope: !3918)
!3925 = !DILocation(line: 344, column: 38, scope: !3918)
!3926 = !DILocation(line: 345, column: 42, scope: !3918)
!3927 = !DILocation(line: 347, column: 9, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3918, file: !95, line: 347, column: 9)
!3929 = !DILocation(line: 348, column: 41, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3931, file: !95, line: 348, column: 17)
!3931 = distinct !DILexicalBlock(scope: !3932, file: !95, line: 347, column: 49)
!3932 = distinct !DILexicalBlock(scope: !3928, file: !95, line: 347, column: 9)
!3933 = !DILocation(line: 348, column: 17, scope: !3931)
!3934 = !DILocation(line: 350, column: 24, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3930, file: !95, line: 348, column: 61)
!3936 = !DILocation(line: 350, column: 22, scope: !3935)
!3937 = !DILocation(line: 352, column: 21, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3935, file: !95, line: 352, column: 21)
!3939 = !DILocation(line: 352, column: 26, scope: !3938)
!3940 = !DILocation(line: 352, column: 21, scope: !3935)
!3941 = !DILocation(line: 353, column: 56, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3938, file: !95, line: 352, column: 32)
!3943 = !DILocation(line: 354, column: 55, scope: !3942)
!3944 = !DILocation(line: 356, column: 62, scope: !3942)
!3945 = !DILocation(line: 356, column: 112, scope: !3942)
!3946 = !DILocation(line: 356, column: 21, scope: !3942)
!3947 = !DILocation(line: 357, column: 17, scope: !3942)
!3948 = !DILocation(line: 347, column: 45, scope: !3932)
!3949 = !DILocation(line: 347, column: 23, scope: !3932)
!3950 = distinct !{!3950, !3927, !3951}
!3951 = !DILocation(line: 360, column: 9, scope: !3928)
!3952 = !DILocation(line: 362, column: 42, scope: !3918)
!3953 = !DILocation(line: 364, column: 28, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3918, file: !95, line: 364, column: 13)
!3955 = !DILocation(line: 364, column: 48, scope: !3954)
!3956 = !DILocation(line: 364, column: 13, scope: !3918)
!3957 = !DILocation(line: 365, column: 13, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3954, file: !95, line: 364, column: 54)
!3959 = !DILocation(line: 366, column: 9, scope: !3958)
!3960 = !DILocation(line: 369, column: 1, scope: !3902)
!3961 = distinct !DISubprogram(name: "hal_pwm_init", scope: !346, file: !346, line: 89, type: !3962, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !3967)
!3962 = !DISubroutineType(types: !3963)
!3963 = !{!3964, !3965, !3966}
!3964 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pwm_status_t", file: !349, line: 232, baseType: !348)
!3965 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pwm_channel_t", file: !98, line: 952, baseType: !356)
!3966 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pwm_source_clock_t", file: !98, line: 959, baseType: !365)
!3967 = !{!3968, !3969, !3970, !3971}
!3968 = !DILocalVariable(name: "pwm_channel", arg: 1, scope: !3961, file: !346, line: 89, type: !3965)
!3969 = !DILocalVariable(name: "source_clock", arg: 2, scope: !3961, file: !346, line: 89, type: !3966)
!3970 = !DILocalVariable(name: "busy_status", scope: !3961, file: !346, line: 93, type: !3964)
!3971 = !DILocalVariable(name: "saved_mask", scope: !3972, file: !346, line: 104, type: !61)
!3972 = distinct !DILexicalBlock(scope: !3961, file: !346, line: 104, column: 5)
!3973 = !DILocation(line: 0, scope: !3961)
!3974 = !DILocation(line: 96, column: 21, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3961, file: !346, line: 96, column: 9)
!3976 = !DILocation(line: 96, column: 9, scope: !3961)
!3977 = !DILocation(line: 104, column: 5, scope: !3972)
!3978 = !DILocation(line: 0, scope: !3972)
!3979 = !DILocation(line: 104, column: 5, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3972, file: !346, line: 104, column: 5)
!3981 = !DILocation(line: 104, column: 5, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3980, file: !346, line: 104, column: 5)
!3983 = !DILocation(line: 110, column: 5, scope: !3961)
!3984 = !DILocation(line: 110, column: 23, scope: !3961)
!3985 = !DILocation(line: 110, column: 32, scope: !3961)
!3986 = !DILocation(line: 111, column: 5, scope: !3961)
!3987 = !DILocation(line: 111, column: 23, scope: !3961)
!3988 = !DILocation(line: 111, column: 33, scope: !3961)
!3989 = !DILocation(line: 112, column: 5, scope: !3961)
!3990 = !DILocation(line: 112, column: 23, scope: !3961)
!3991 = !DILocation(line: 112, column: 34, scope: !3961)
!3992 = !DILocation(line: 115, column: 5, scope: !3961)
!3993 = !DILocation(line: 115, column: 23, scope: !3961)
!3994 = !DILocation(line: 115, column: 32, scope: !3961)
!3995 = !DILocation(line: 116, column: 48, scope: !3961)
!3996 = !DILocation(line: 116, column: 5, scope: !3961)
!3997 = !DILocation(line: 116, column: 23, scope: !3961)
!3998 = !DILocation(line: 116, column: 32, scope: !3961)
!3999 = !DILocation(line: 118, column: 5, scope: !3961)
!4000 = !DILocation(line: 105, column: 9, scope: !3961)
!4001 = !DILocation(line: 119, column: 1, scope: !3961)
!4002 = distinct !DISubprogram(name: "hal_pwm_deinit", scope: !346, file: !346, line: 121, type: !4003, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4005)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{!3964, !3965}
!4005 = !{!4006}
!4006 = !DILocalVariable(name: "pwm_channel", arg: 1, scope: !4002, file: !346, line: 121, type: !3965)
!4007 = !DILocation(line: 0, scope: !4002)
!4008 = !DILocation(line: 127, column: 21, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4002, file: !346, line: 127, column: 9)
!4010 = !DILocation(line: 127, column: 9, scope: !4002)
!4011 = !DILocation(line: 131, column: 5, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4002, file: !346, line: 131, column: 5)
!4013 = !DILocation(line: 133, column: 5, scope: !4002)
!4014 = !DILocation(line: 134, column: 1, scope: !4002)
!4015 = distinct !DISubprogram(name: "hal_pwm_set_frequency", scope: !346, file: !346, line: 136, type: !4016, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4018)
!4016 = !DISubroutineType(types: !4017)
!4017 = !{!3964, !3965, !61, !1055}
!4018 = !{!4019, !4020, !4021, !4022, !4023, !4024, !4026, !4027}
!4019 = !DILocalVariable(name: "pwm_channel", arg: 1, scope: !4015, file: !346, line: 136, type: !3965)
!4020 = !DILocalVariable(name: "frequency", arg: 2, scope: !4015, file: !346, line: 136, type: !61)
!4021 = !DILocalVariable(name: "total_count", arg: 3, scope: !4015, file: !346, line: 136, type: !1055)
!4022 = !DILocalVariable(name: "clock", scope: !4015, file: !346, line: 139, type: !61)
!4023 = !DILocalVariable(name: "clock_div", scope: !4015, file: !346, line: 140, type: !1087)
!4024 = !DILocalVariable(name: "control", scope: !4015, file: !346, line: 141, type: !4025)
!4025 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1087)
!4026 = !DILocalVariable(name: "tmp", scope: !4015, file: !346, line: 142, type: !1087)
!4027 = !DILocalVariable(name: "smallest_frequency", scope: !4015, file: !346, line: 143, type: !61)
!4028 = !DILocation(line: 0, scope: !4015)
!4029 = !DILocation(line: 141, column: 5, scope: !4015)
!4030 = !DILocation(line: 141, column: 24, scope: !4015)
!4031 = !DILocation(line: 145, column: 21, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4015, file: !346, line: 145, column: 9)
!4033 = !DILocation(line: 145, column: 9, scope: !4015)
!4034 = !DILocation(line: 150, column: 15, scope: !4015)
!4035 = !DILocation(line: 150, column: 33, scope: !4015)
!4036 = !DILocation(line: 150, column: 13, scope: !4015)
!4037 = !DILocation(line: 151, column: 24, scope: !4015)
!4038 = !DILocation(line: 151, column: 32, scope: !4015)
!4039 = !DILocation(line: 152, column: 9, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4015, file: !346, line: 152, column: 9)
!4041 = !DILocation(line: 152, column: 17, scope: !4040)
!4042 = !DILocation(line: 157, column: 19, scope: !4015)
!4043 = !DILocation(line: 159, column: 11, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4015, file: !346, line: 159, column: 9)
!4045 = !DILocation(line: 159, column: 9, scope: !4015)
!4046 = !DILocation(line: 158, column: 32, scope: !4015)
!4047 = !DILocation(line: 161, column: 26, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4044, file: !346, line: 161, column: 16)
!4049 = !DILocation(line: 161, column: 16, scope: !4044)
!4050 = !DILocation(line: 164, column: 21, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !4048, file: !346, line: 163, column: 12)
!4052 = !DILocation(line: 0, scope: !4044)
!4053 = !DILocation(line: 168, column: 8, scope: !4015)
!4054 = !DILocation(line: 169, column: 9, scope: !4015)
!4055 = !DILocation(line: 172, column: 35, scope: !4015)
!4056 = !DILocation(line: 172, column: 23, scope: !4015)
!4057 = !DILocation(line: 172, column: 33, scope: !4015)
!4058 = !DILocation(line: 174, column: 18, scope: !4015)
!4059 = !DILocation(line: 175, column: 5, scope: !4015)
!4060 = !DILocation(line: 177, column: 1, scope: !4015)
!4061 = distinct !DISubprogram(name: "hal_pwm_set_duty_cycle", scope: !346, file: !346, line: 179, type: !4062, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4064)
!4062 = !DISubroutineType(types: !4063)
!4063 = !{!3964, !3965, !61}
!4064 = !{!4065, !4066, !4067, !4068}
!4065 = !DILocalVariable(name: "pwm_channel", arg: 1, scope: !4061, file: !346, line: 179, type: !3965)
!4066 = !DILocalVariable(name: "duty_cycle", arg: 2, scope: !4061, file: !346, line: 179, type: !61)
!4067 = !DILocalVariable(name: "tmp", scope: !4061, file: !346, line: 182, type: !4025)
!4068 = !DILocalVariable(name: "threshold", scope: !4061, file: !346, line: 183, type: !1087)
!4069 = !DILocation(line: 0, scope: !4061)
!4070 = !DILocation(line: 182, column: 5, scope: !4061)
!4071 = !DILocation(line: 182, column: 23, scope: !4061)
!4072 = !DILocation(line: 185, column: 21, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4061, file: !346, line: 185, column: 9)
!4074 = !DILocation(line: 185, column: 9, scope: !4061)
!4075 = !DILocation(line: 189, column: 11, scope: !4061)
!4076 = !DILocation(line: 189, column: 29, scope: !4061)
!4077 = !DILocation(line: 189, column: 9, scope: !4061)
!4078 = !DILocation(line: 191, column: 22, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4061, file: !346, line: 191, column: 9)
!4080 = !DILocation(line: 191, column: 20, scope: !4079)
!4081 = !DILocation(line: 191, column: 9, scope: !4061)
!4082 = !DILocation(line: 194, column: 22, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4079, file: !346, line: 193, column: 5)
!4084 = !DILocation(line: 195, column: 5, scope: !4083)
!4085 = !DILocation(line: 196, column: 21, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4079, file: !346, line: 195, column: 12)
!4087 = !DILocation(line: 0, scope: !4079)
!4088 = !DILocation(line: 199, column: 36, scope: !4061)
!4089 = !DILocation(line: 199, column: 23, scope: !4061)
!4090 = !DILocation(line: 199, column: 34, scope: !4061)
!4091 = !DILocation(line: 201, column: 5, scope: !4061)
!4092 = !DILocation(line: 203, column: 1, scope: !4061)
!4093 = distinct !DISubprogram(name: "hal_pwm_start", scope: !346, file: !346, line: 206, type: !4003, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4094)
!4094 = !{!4095, !4096, !4097}
!4095 = !DILocalVariable(name: "pwm_channel", arg: 1, scope: !4093, file: !346, line: 206, type: !3965)
!4096 = !DILocalVariable(name: "saved_mask", scope: !4093, file: !346, line: 208, type: !61)
!4097 = !DILocalVariable(name: "clock_status", scope: !4093, file: !346, line: 210, type: !4098)
!4098 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !370, line: 106, baseType: !369)
!4099 = !DILocation(line: 0, scope: !4093)
!4100 = !DILocation(line: 211, column: 21, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4093, file: !346, line: 211, column: 9)
!4102 = !DILocation(line: 211, column: 9, scope: !4093)
!4103 = !DILocation(line: 215, column: 18, scope: !4093)
!4104 = !DILocation(line: 217, column: 9, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4093, file: !346, line: 217, column: 9)
!4106 = !DILocation(line: 217, column: 37, scope: !4105)
!4107 = !DILocation(line: 217, column: 9, scope: !4093)
!4108 = !DILocation(line: 218, column: 37, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4105, file: !346, line: 217, column: 47)
!4110 = !DILocation(line: 219, column: 41, scope: !4109)
!4111 = !DILocation(line: 219, column: 24, scope: !4109)
!4112 = !DILocation(line: 220, column: 36, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4109, file: !346, line: 220, column: 13)
!4114 = !DILocation(line: 220, column: 13, scope: !4109)
!4115 = !DILocation(line: 232, column: 1, scope: !4093)
!4116 = distinct !DISubprogram(name: "hal_pwm_stop", scope: !346, file: !346, line: 234, type: !4003, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4117)
!4117 = !{!4118, !4119, !4120}
!4118 = !DILocalVariable(name: "pwm_channel", arg: 1, scope: !4116, file: !346, line: 234, type: !3965)
!4119 = !DILocalVariable(name: "saved_mask", scope: !4116, file: !346, line: 237, type: !61)
!4120 = !DILocalVariable(name: "clock_status", scope: !4116, file: !346, line: 238, type: !4098)
!4121 = !DILocation(line: 0, scope: !4116)
!4122 = !DILocation(line: 240, column: 21, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4116, file: !346, line: 240, column: 9)
!4124 = !DILocation(line: 240, column: 9, scope: !4116)
!4125 = !DILocation(line: 244, column: 18, scope: !4116)
!4126 = !DILocation(line: 246, column: 9, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4116, file: !346, line: 246, column: 9)
!4128 = !DILocation(line: 246, column: 9, scope: !4116)
!4129 = !DILocation(line: 247, column: 37, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4127, file: !346, line: 246, column: 46)
!4131 = !DILocation(line: 250, column: 42, scope: !4130)
!4132 = !DILocation(line: 250, column: 24, scope: !4130)
!4133 = !DILocation(line: 251, column: 36, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4130, file: !346, line: 251, column: 13)
!4135 = !DILocation(line: 251, column: 13, scope: !4130)
!4136 = !DILocation(line: 262, column: 1, scope: !4116)
!4137 = distinct !DISubprogram(name: "hal_pwm_get_frequency", scope: !346, file: !346, line: 264, type: !4138, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4140)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{!3964, !3965, !1055}
!4140 = !{!4141, !4142, !4143, !4144, !4145, !4146}
!4141 = !DILocalVariable(name: "pwm_channel", arg: 1, scope: !4137, file: !346, line: 264, type: !3965)
!4142 = !DILocalVariable(name: "frequency", arg: 2, scope: !4137, file: !346, line: 264, type: !1055)
!4143 = !DILocalVariable(name: "clock", scope: !4137, file: !346, line: 266, type: !61)
!4144 = !DILocalVariable(name: "clock_div", scope: !4137, file: !346, line: 267, type: !1087)
!4145 = !DILocalVariable(name: "control", scope: !4137, file: !346, line: 268, type: !4025)
!4146 = !DILocalVariable(name: "tmp", scope: !4137, file: !346, line: 269, type: !4025)
!4147 = !DILocation(line: 0, scope: !4137)
!4148 = !DILocation(line: 268, column: 5, scope: !4137)
!4149 = !DILocation(line: 268, column: 24, scope: !4137)
!4150 = !DILocation(line: 269, column: 5, scope: !4137)
!4151 = !DILocation(line: 269, column: 23, scope: !4137)
!4152 = !DILocation(line: 271, column: 21, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4137, file: !346, line: 271, column: 9)
!4154 = !DILocation(line: 271, column: 9, scope: !4137)
!4155 = !DILocation(line: 276, column: 15, scope: !4137)
!4156 = !DILocation(line: 276, column: 33, scope: !4137)
!4157 = !DILocation(line: 276, column: 13, scope: !4137)
!4158 = !DILocation(line: 277, column: 24, scope: !4137)
!4159 = !DILocation(line: 277, column: 32, scope: !4137)
!4160 = !DILocation(line: 278, column: 9, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4137, file: !346, line: 278, column: 9)
!4162 = !DILocation(line: 278, column: 17, scope: !4161)
!4163 = !DILocation(line: 284, column: 29, scope: !4137)
!4164 = !DILocation(line: 284, column: 11, scope: !4137)
!4165 = !DILocation(line: 284, column: 9, scope: !4137)
!4166 = !DILocation(line: 285, column: 12, scope: !4137)
!4167 = !DILocation(line: 285, column: 16, scope: !4137)
!4168 = !DILocation(line: 285, column: 21, scope: !4137)
!4169 = !DILocation(line: 285, column: 9, scope: !4137)
!4170 = !DILocation(line: 287, column: 26, scope: !4137)
!4171 = !DILocation(line: 287, column: 24, scope: !4137)
!4172 = !DILocation(line: 287, column: 16, scope: !4137)
!4173 = !DILocation(line: 289, column: 5, scope: !4137)
!4174 = !DILocation(line: 292, column: 1, scope: !4137)
!4175 = distinct !DISubprogram(name: "hal_pwm_get_duty_cycle", scope: !346, file: !346, line: 294, type: !4138, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4176)
!4176 = !{!4177, !4178, !4179}
!4177 = !DILocalVariable(name: "pwm_channel", arg: 1, scope: !4175, file: !346, line: 294, type: !3965)
!4178 = !DILocalVariable(name: "duty_cycle", arg: 2, scope: !4175, file: !346, line: 294, type: !1055)
!4179 = !DILocalVariable(name: "tmp", scope: !4175, file: !346, line: 297, type: !4025)
!4180 = !DILocation(line: 0, scope: !4175)
!4181 = !DILocation(line: 297, column: 5, scope: !4175)
!4182 = !DILocation(line: 297, column: 23, scope: !4175)
!4183 = !DILocation(line: 299, column: 21, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4175, file: !346, line: 299, column: 9)
!4185 = !DILocation(line: 299, column: 9, scope: !4175)
!4186 = !DILocation(line: 303, column: 11, scope: !4175)
!4187 = !DILocation(line: 303, column: 29, scope: !4175)
!4188 = !DILocation(line: 303, column: 9, scope: !4175)
!4189 = !DILocation(line: 306, column: 19, scope: !4175)
!4190 = !DILocation(line: 306, column: 17, scope: !4175)
!4191 = !DILocation(line: 308, column: 5, scope: !4175)
!4192 = !DILocation(line: 310, column: 1, scope: !4175)
!4193 = distinct !DISubprogram(name: "hal_pwm_get_running_status", scope: !346, file: !346, line: 312, type: !4194, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4198)
!4194 = !DISubroutineType(types: !4195)
!4195 = !{!3964, !3965, !4196}
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4197, size: 32)
!4197 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pwm_running_status_t", file: !349, line: 240, baseType: !376)
!4198 = !{!4199, !4200}
!4199 = !DILocalVariable(name: "pwm_channel", arg: 1, scope: !4193, file: !346, line: 312, type: !3965)
!4200 = !DILocalVariable(name: "running_status", arg: 2, scope: !4193, file: !346, line: 312, type: !4196)
!4201 = !DILocation(line: 0, scope: !4193)
!4202 = !DILocation(line: 315, column: 21, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4193, file: !346, line: 315, column: 9)
!4204 = !DILocation(line: 315, column: 9, scope: !4193)
!4205 = !DILocation(line: 319, column: 17, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4193, file: !346, line: 319, column: 9)
!4207 = !DILocation(line: 0, scope: !4206)
!4208 = !DILocation(line: 327, column: 5, scope: !4193)
!4209 = !DILocation(line: 328, column: 1, scope: !4193)
!4210 = distinct !DISubprogram(name: "hal_pwm_set_advanced_config", scope: !346, file: !346, line: 330, type: !4211, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4214)
!4211 = !DISubroutineType(types: !4212)
!4212 = !{!3964, !3965, !4213}
!4213 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pwm_advanced_config_t", file: !349, line: 257, baseType: !380)
!4214 = !{!4215, !4216}
!4215 = !DILocalVariable(name: "pwm_channel", arg: 1, scope: !4210, file: !346, line: 330, type: !3965)
!4216 = !DILocalVariable(name: "advanced_config", arg: 2, scope: !4210, file: !346, line: 330, type: !4213)
!4217 = !DILocation(line: 0, scope: !4210)
!4218 = !DILocation(line: 334, column: 21, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4210, file: !346, line: 334, column: 9)
!4220 = !DILocation(line: 334, column: 9, scope: !4210)
!4221 = !DILocation(line: 342, column: 5, scope: !4210)
!4222 = !DILocation(line: 342, column: 23, scope: !4210)
!4223 = !DILocation(line: 342, column: 32, scope: !4210)
!4224 = !DILocation(line: 344, column: 5, scope: !4210)
!4225 = !DILocation(line: 346, column: 1, scope: !4210)
!4226 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !412, file: !412, line: 50, type: !4227, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4230)
!4227 = !DISubroutineType(types: !4228)
!4228 = !{!61, !4229}
!4229 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !98, line: 390, baseType: !414)
!4230 = !{!4231, !4232, !4233}
!4231 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4226, file: !412, line: 50, type: !4229)
!4232 = !DILocalVariable(name: "i", scope: !4226, file: !412, line: 52, type: !61)
!4233 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !4226, file: !412, line: 53, type: !961)
!4234 = !DILocation(line: 0, scope: !4226)
!4235 = !DILocation(line: 53, column: 14, scope: !4226)
!4236 = !DILocation(line: 55, column: 5, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4226, file: !412, line: 55, column: 5)
!4238 = !DILocation(line: 55, column: 25, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4237, file: !412, line: 55, column: 5)
!4240 = !DILocation(line: 55, column: 19, scope: !4239)
!4241 = distinct !{!4241, !4236, !4242}
!4242 = !DILocation(line: 59, column: 5, scope: !4237)
!4243 = !DILocation(line: 56, column: 13, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4245, file: !412, line: 56, column: 13)
!4245 = distinct !DILexicalBlock(scope: !4239, file: !412, line: 55, column: 29)
!4246 = !DILocation(line: 56, column: 40, scope: !4244)
!4247 = !DILocation(line: 56, column: 13, scope: !4245)
!4248 = !DILocation(line: 61, column: 1, scope: !4226)
!4249 = distinct !DISubprogram(name: "hal_gpio_init", scope: !412, file: !412, line: 66, type: !4250, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4253)
!4250 = !DISubroutineType(types: !4251)
!4251 = !{!4252, !4229}
!4252 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !467, line: 229, baseType: !466)
!4253 = !{!4254}
!4254 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4249, file: !412, line: 66, type: !4229)
!4255 = !DILocation(line: 0, scope: !4249)
!4256 = !DILocation(line: 68, column: 5, scope: !4249)
!4257 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !412, file: !412, line: 72, type: !4250, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4258)
!4258 = !{!4259}
!4259 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4257, file: !412, line: 72, type: !4229)
!4260 = !DILocation(line: 0, scope: !4257)
!4261 = !DILocation(line: 74, column: 5, scope: !4257)
!4262 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !412, file: !412, line: 79, type: !4263, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4265)
!4263 = !DISubroutineType(types: !4264)
!4264 = !{!4252, !4229, !508}
!4265 = !{!4266, !4267, !4268, !4269}
!4266 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4262, file: !412, line: 79, type: !4229)
!4267 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4262, file: !412, line: 79, type: !508)
!4268 = !DILocalVariable(name: "no", scope: !4262, file: !412, line: 81, type: !61)
!4269 = !DILocalVariable(name: "remainder", scope: !4262, file: !412, line: 82, type: !61)
!4270 = !DILocation(line: 0, scope: !4262)
!4271 = !DILocation(line: 84, column: 18, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4262, file: !412, line: 84, column: 9)
!4273 = !DILocation(line: 84, column: 9, scope: !4262)
!4274 = !DILocation(line: 89, column: 19, scope: !4262)
!4275 = !DILocation(line: 92, column: 26, scope: !4262)
!4276 = !DILocation(line: 94, column: 24, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4262, file: !412, line: 94, column: 9)
!4278 = !DILocation(line: 0, scope: !4277)
!4279 = !DILocation(line: 94, column: 9, scope: !4262)
!4280 = !DILocation(line: 101, column: 1, scope: !4262)
!4281 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !412, file: !412, line: 105, type: !4282, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4285)
!4282 = !DISubroutineType(types: !4283)
!4283 = !{!4252, !4229, !4284}
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 32)
!4285 = !{!4286, !4287, !4288, !4289, !4290}
!4286 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4281, file: !412, line: 105, type: !4229)
!4287 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4281, file: !412, line: 105, type: !4284)
!4288 = !DILocalVariable(name: "no", scope: !4281, file: !412, line: 107, type: !61)
!4289 = !DILocalVariable(name: "remainder", scope: !4281, file: !412, line: 108, type: !61)
!4290 = !DILocalVariable(name: "temp", scope: !4281, file: !412, line: 109, type: !61)
!4291 = !DILocation(line: 0, scope: !4281)
!4292 = !DILocation(line: 111, column: 18, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4281, file: !412, line: 111, column: 9)
!4294 = !DILocation(line: 111, column: 9, scope: !4281)
!4295 = !DILocation(line: 115, column: 14, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4281, file: !412, line: 115, column: 9)
!4297 = !DILocation(line: 115, column: 9, scope: !4281)
!4298 = !DILocation(line: 120, column: 19, scope: !4281)
!4299 = !DILocation(line: 123, column: 26, scope: !4281)
!4300 = !DILocation(line: 125, column: 12, scope: !4281)
!4301 = !DILocation(line: 125, column: 54, scope: !4281)
!4302 = !DILocation(line: 126, column: 45, scope: !4281)
!4303 = !DILocation(line: 126, column: 17, scope: !4281)
!4304 = !DILocation(line: 127, column: 51, scope: !4281)
!4305 = !DILocation(line: 127, column: 21, scope: !4281)
!4306 = !DILocation(line: 128, column: 5, scope: !4281)
!4307 = !DILocation(line: 130, column: 1, scope: !4281)
!4308 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !412, file: !412, line: 134, type: !4309, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4312)
!4309 = !DISubroutineType(types: !4310)
!4310 = !{!4311, !4229, !395}
!4311 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !467, line: 238, baseType: !477)
!4312 = !{!4313, !4314, !4315, !4316, !4317}
!4313 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4308, file: !412, line: 134, type: !4229)
!4314 = !DILocalVariable(name: "function_index", arg: 2, scope: !4308, file: !412, line: 134, type: !395)
!4315 = !DILocalVariable(name: "no", scope: !4308, file: !412, line: 136, type: !61)
!4316 = !DILocalVariable(name: "remainder", scope: !4308, file: !412, line: 137, type: !61)
!4317 = !DILocalVariable(name: "irq_status", scope: !4308, file: !412, line: 138, type: !61)
!4318 = !DILocation(line: 0, scope: !4308)
!4319 = !DILocation(line: 140, column: 18, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4308, file: !412, line: 140, column: 9)
!4321 = !DILocation(line: 140, column: 9, scope: !4308)
!4322 = !DILocation(line: 145, column: 24, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4308, file: !412, line: 145, column: 9)
!4324 = !DILocation(line: 145, column: 9, scope: !4308)
!4325 = !DILocation(line: 145, column: 9, scope: !4323)
!4326 = !DILocation(line: 150, column: 19, scope: !4308)
!4327 = !DILocation(line: 156, column: 18, scope: !4308)
!4328 = !DILocation(line: 157, column: 105, scope: !4308)
!4329 = !DILocation(line: 157, column: 91, scope: !4308)
!4330 = !DILocation(line: 157, column: 5, scope: !4308)
!4331 = !DILocation(line: 157, column: 48, scope: !4308)
!4332 = !DILocation(line: 157, column: 62, scope: !4308)
!4333 = !DILocation(line: 158, column: 80, scope: !4308)
!4334 = !DILocation(line: 158, column: 5, scope: !4308)
!4335 = !DILocation(line: 158, column: 48, scope: !4308)
!4336 = !DILocation(line: 158, column: 62, scope: !4308)
!4337 = !DILocation(line: 159, column: 5, scope: !4308)
!4338 = !DILocation(line: 160, column: 5, scope: !4308)
!4339 = !DILocation(line: 162, column: 1, scope: !4308)
!4340 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !412, file: !412, line: 166, type: !4341, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4344)
!4341 = !DISubroutineType(types: !4342)
!4342 = !{!4252, !4229, !4343}
!4343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 32)
!4344 = !{!4345, !4346, !4347, !4348, !4349}
!4345 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4340, file: !412, line: 166, type: !4229)
!4346 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4340, file: !412, line: 166, type: !4343)
!4347 = !DILocalVariable(name: "no", scope: !4340, file: !412, line: 168, type: !61)
!4348 = !DILocalVariable(name: "remainder", scope: !4340, file: !412, line: 169, type: !61)
!4349 = !DILocalVariable(name: "temp", scope: !4340, file: !412, line: 170, type: !61)
!4350 = !DILocation(line: 0, scope: !4340)
!4351 = !DILocation(line: 172, column: 18, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4340, file: !412, line: 172, column: 9)
!4353 = !DILocation(line: 172, column: 9, scope: !4340)
!4354 = !DILocation(line: 176, column: 14, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4340, file: !412, line: 176, column: 9)
!4356 = !DILocation(line: 176, column: 9, scope: !4340)
!4357 = !DILocation(line: 181, column: 19, scope: !4340)
!4358 = !DILocation(line: 184, column: 26, scope: !4340)
!4359 = !DILocation(line: 186, column: 12, scope: !4340)
!4360 = !DILocation(line: 186, column: 54, scope: !4340)
!4361 = !DILocation(line: 187, column: 45, scope: !4340)
!4362 = !DILocation(line: 187, column: 17, scope: !4340)
!4363 = !DILocation(line: 188, column: 41, scope: !4340)
!4364 = !DILocation(line: 188, column: 16, scope: !4340)
!4365 = !DILocation(line: 189, column: 5, scope: !4340)
!4366 = !DILocation(line: 191, column: 1, scope: !4340)
!4367 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !412, file: !412, line: 195, type: !4368, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4370)
!4368 = !DISubroutineType(types: !4369)
!4369 = !{!4252, !4229, !509}
!4370 = !{!4371, !4372, !4373, !4374}
!4371 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4367, file: !412, line: 195, type: !4229)
!4372 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4367, file: !412, line: 195, type: !509)
!4373 = !DILocalVariable(name: "no", scope: !4367, file: !412, line: 197, type: !61)
!4374 = !DILocalVariable(name: "remainder", scope: !4367, file: !412, line: 198, type: !61)
!4375 = !DILocation(line: 0, scope: !4367)
!4376 = !DILocation(line: 200, column: 18, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4367, file: !412, line: 200, column: 9)
!4378 = !DILocation(line: 200, column: 9, scope: !4367)
!4379 = !DILocation(line: 205, column: 19, scope: !4367)
!4380 = !DILocation(line: 208, column: 26, scope: !4367)
!4381 = !DILocation(line: 210, column: 9, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4367, file: !412, line: 210, column: 9)
!4383 = !DILocation(line: 0, scope: !4382)
!4384 = !DILocation(line: 210, column: 9, scope: !4367)
!4385 = !DILocation(line: 216, column: 1, scope: !4367)
!4386 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !412, file: !412, line: 220, type: !4341, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4387)
!4387 = !{!4388, !4389, !4390, !4391, !4392}
!4388 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4386, file: !412, line: 220, type: !4229)
!4389 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4386, file: !412, line: 220, type: !4343)
!4390 = !DILocalVariable(name: "no", scope: !4386, file: !412, line: 222, type: !61)
!4391 = !DILocalVariable(name: "remainder", scope: !4386, file: !412, line: 223, type: !61)
!4392 = !DILocalVariable(name: "temp", scope: !4386, file: !412, line: 224, type: !61)
!4393 = !DILocation(line: 0, scope: !4386)
!4394 = !DILocation(line: 226, column: 18, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4386, file: !412, line: 226, column: 9)
!4396 = !DILocation(line: 226, column: 9, scope: !4386)
!4397 = !DILocation(line: 230, column: 14, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4386, file: !412, line: 230, column: 9)
!4399 = !DILocation(line: 230, column: 9, scope: !4386)
!4400 = !DILocation(line: 235, column: 19, scope: !4386)
!4401 = !DILocation(line: 238, column: 26, scope: !4386)
!4402 = !DILocation(line: 240, column: 12, scope: !4386)
!4403 = !DILocation(line: 240, column: 55, scope: !4386)
!4404 = !DILocation(line: 241, column: 45, scope: !4386)
!4405 = !DILocation(line: 241, column: 17, scope: !4386)
!4406 = !DILocation(line: 242, column: 41, scope: !4386)
!4407 = !DILocation(line: 242, column: 16, scope: !4386)
!4408 = !DILocation(line: 243, column: 5, scope: !4386)
!4409 = !DILocation(line: 245, column: 1, scope: !4386)
!4410 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !412, file: !412, line: 249, type: !4250, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4411)
!4411 = !{!4412, !4413, !4414, !4415}
!4412 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4410, file: !412, line: 249, type: !4229)
!4413 = !DILocalVariable(name: "no", scope: !4410, file: !412, line: 251, type: !61)
!4414 = !DILocalVariable(name: "remainder", scope: !4410, file: !412, line: 252, type: !61)
!4415 = !DILocalVariable(name: "temp", scope: !4410, file: !412, line: 253, type: !61)
!4416 = !DILocation(line: 0, scope: !4410)
!4417 = !DILocation(line: 255, column: 18, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4410, file: !412, line: 255, column: 9)
!4419 = !DILocation(line: 255, column: 9, scope: !4410)
!4420 = !DILocation(line: 260, column: 19, scope: !4410)
!4421 = !DILocation(line: 263, column: 26, scope: !4410)
!4422 = !DILocation(line: 265, column: 12, scope: !4410)
!4423 = !DILocation(line: 265, column: 55, scope: !4410)
!4424 = !DILocation(line: 266, column: 45, scope: !4410)
!4425 = !DILocation(line: 266, column: 17, scope: !4410)
!4426 = !DILocation(line: 267, column: 15, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4410, file: !412, line: 267, column: 9)
!4428 = !DILocation(line: 267, column: 9, scope: !4410)
!4429 = !DILocation(line: 0, scope: !4427)
!4430 = !DILocation(line: 273, column: 1, scope: !4410)
!4431 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !412, file: !412, line: 278, type: !4250, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4432)
!4432 = !{!4433, !4434, !4435}
!4433 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4431, file: !412, line: 278, type: !4229)
!4434 = !DILocalVariable(name: "no", scope: !4431, file: !412, line: 280, type: !61)
!4435 = !DILocalVariable(name: "remainder", scope: !4431, file: !412, line: 281, type: !61)
!4436 = !DILocation(line: 0, scope: !4431)
!4437 = !DILocation(line: 283, column: 18, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4431, file: !412, line: 283, column: 9)
!4439 = !DILocation(line: 283, column: 9, scope: !4431)
!4440 = !DILocation(line: 288, column: 19, scope: !4431)
!4441 = !DILocation(line: 291, column: 26, scope: !4431)
!4442 = !DILocation(line: 293, column: 90, scope: !4431)
!4443 = !DILocation(line: 293, column: 5, scope: !4431)
!4444 = !DILocation(line: 293, column: 48, scope: !4431)
!4445 = !DILocation(line: 293, column: 62, scope: !4431)
!4446 = !DILocation(line: 294, column: 5, scope: !4431)
!4447 = !DILocation(line: 295, column: 1, scope: !4431)
!4448 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !412, file: !412, line: 299, type: !4250, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4449)
!4449 = !{!4450, !4451, !4452}
!4450 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4448, file: !412, line: 299, type: !4229)
!4451 = !DILocalVariable(name: "no", scope: !4448, file: !412, line: 301, type: !61)
!4452 = !DILocalVariable(name: "remainder", scope: !4448, file: !412, line: 302, type: !61)
!4453 = !DILocation(line: 0, scope: !4448)
!4454 = !DILocation(line: 304, column: 18, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4448, file: !412, line: 304, column: 9)
!4456 = !DILocation(line: 304, column: 9, scope: !4448)
!4457 = !DILocation(line: 309, column: 19, scope: !4448)
!4458 = !DILocation(line: 312, column: 26, scope: !4448)
!4459 = !DILocation(line: 314, column: 90, scope: !4448)
!4460 = !DILocation(line: 314, column: 5, scope: !4448)
!4461 = !DILocation(line: 314, column: 48, scope: !4448)
!4462 = !DILocation(line: 314, column: 62, scope: !4448)
!4463 = !DILocation(line: 315, column: 5, scope: !4448)
!4464 = !DILocation(line: 316, column: 1, scope: !4448)
!4465 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !412, file: !412, line: 321, type: !4250, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4466)
!4466 = !{!4467, !4468, !4469}
!4467 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4465, file: !412, line: 321, type: !4229)
!4468 = !DILocalVariable(name: "no", scope: !4465, file: !412, line: 323, type: !61)
!4469 = !DILocalVariable(name: "remainder", scope: !4465, file: !412, line: 324, type: !61)
!4470 = !DILocation(line: 0, scope: !4465)
!4471 = !DILocation(line: 326, column: 19, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4465, file: !412, line: 326, column: 9)
!4473 = !DILocation(line: 326, column: 36, scope: !4472)
!4474 = !DILocation(line: 326, column: 41, scope: !4472)
!4475 = !DILocation(line: 326, column: 9, scope: !4465)
!4476 = !DILocation(line: 331, column: 19, scope: !4465)
!4477 = !DILocation(line: 334, column: 26, scope: !4465)
!4478 = !DILocation(line: 336, column: 94, scope: !4465)
!4479 = !DILocation(line: 336, column: 5, scope: !4465)
!4480 = !DILocation(line: 336, column: 50, scope: !4465)
!4481 = !DILocation(line: 336, column: 66, scope: !4465)
!4482 = !DILocation(line: 337, column: 5, scope: !4465)
!4483 = !DILocation(line: 337, column: 51, scope: !4465)
!4484 = !DILocation(line: 337, column: 68, scope: !4465)
!4485 = !DILocation(line: 338, column: 5, scope: !4465)
!4486 = !DILocation(line: 339, column: 1, scope: !4465)
!4487 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !412, file: !412, line: 343, type: !4250, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4488)
!4488 = !{!4489, !4490, !4491}
!4489 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4487, file: !412, line: 343, type: !4229)
!4490 = !DILocalVariable(name: "no", scope: !4487, file: !412, line: 345, type: !61)
!4491 = !DILocalVariable(name: "remainder", scope: !4487, file: !412, line: 346, type: !61)
!4492 = !DILocation(line: 0, scope: !4487)
!4493 = !DILocation(line: 348, column: 19, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4487, file: !412, line: 348, column: 9)
!4495 = !DILocation(line: 348, column: 36, scope: !4494)
!4496 = !DILocation(line: 348, column: 41, scope: !4494)
!4497 = !DILocation(line: 348, column: 9, scope: !4487)
!4498 = !DILocation(line: 353, column: 19, scope: !4487)
!4499 = !DILocation(line: 356, column: 26, scope: !4487)
!4500 = !DILocation(line: 358, column: 94, scope: !4487)
!4501 = !DILocation(line: 358, column: 5, scope: !4487)
!4502 = !DILocation(line: 358, column: 50, scope: !4487)
!4503 = !DILocation(line: 358, column: 66, scope: !4487)
!4504 = !DILocation(line: 359, column: 5, scope: !4487)
!4505 = !DILocation(line: 359, column: 51, scope: !4487)
!4506 = !DILocation(line: 359, column: 68, scope: !4487)
!4507 = !DILocation(line: 360, column: 5, scope: !4487)
!4508 = !DILocation(line: 361, column: 1, scope: !4487)
!4509 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !412, file: !412, line: 365, type: !4250, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4510)
!4510 = !{!4511, !4512, !4513}
!4511 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4509, file: !412, line: 365, type: !4229)
!4512 = !DILocalVariable(name: "no", scope: !4509, file: !412, line: 367, type: !61)
!4513 = !DILocalVariable(name: "remainder", scope: !4509, file: !412, line: 368, type: !61)
!4514 = !DILocation(line: 0, scope: !4509)
!4515 = !DILocation(line: 370, column: 19, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4509, file: !412, line: 370, column: 9)
!4517 = !DILocation(line: 370, column: 36, scope: !4516)
!4518 = !DILocation(line: 370, column: 41, scope: !4516)
!4519 = !DILocation(line: 370, column: 9, scope: !4509)
!4520 = !DILocation(line: 375, column: 19, scope: !4509)
!4521 = !DILocation(line: 378, column: 26, scope: !4509)
!4522 = !DILocation(line: 380, column: 94, scope: !4509)
!4523 = !DILocation(line: 380, column: 5, scope: !4509)
!4524 = !DILocation(line: 380, column: 50, scope: !4509)
!4525 = !DILocation(line: 380, column: 66, scope: !4509)
!4526 = !DILocation(line: 381, column: 5, scope: !4509)
!4527 = !DILocation(line: 382, column: 1, scope: !4509)
!4528 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !412, file: !412, line: 387, type: !4529, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4533)
!4529 = !DISubroutineType(types: !4530)
!4530 = !{!4252, !4531, !4532}
!4531 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !98, line: 423, baseType: !487)
!4532 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !98, line: 431, baseType: !496)
!4533 = !{!4534, !4535}
!4534 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !4528, file: !412, line: 387, type: !4531)
!4535 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !4528, file: !412, line: 387, type: !4532)
!4536 = !DILocation(line: 0, scope: !4528)
!4537 = !DILocation(line: 390, column: 24, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4528, file: !412, line: 390, column: 9)
!4539 = !DILocation(line: 390, column: 9, scope: !4528)
!4540 = !DILocation(line: 394, column: 5, scope: !4528)
!4541 = !DILocation(line: 394, column: 62, scope: !4528)
!4542 = !DILocation(line: 394, column: 74, scope: !4528)
!4543 = !DILocation(line: 395, column: 5, scope: !4528)
!4544 = !DILocation(line: 396, column: 1, scope: !4528)
!4545 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !412, file: !412, line: 403, type: !4546, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4548)
!4546 = !DISubroutineType(types: !4547)
!4547 = !{!4252, !4229, !395, !395, !395}
!4548 = !{!4549, !4550, !4551, !4552, !4553, !4554}
!4549 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4545, file: !412, line: 403, type: !4229)
!4550 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !4545, file: !412, line: 403, type: !395)
!4551 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !4545, file: !412, line: 403, type: !395)
!4552 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !4545, file: !412, line: 403, type: !395)
!4553 = !DILocalVariable(name: "no", scope: !4545, file: !412, line: 405, type: !61)
!4554 = !DILocalVariable(name: "remainder", scope: !4545, file: !412, line: 406, type: !61)
!4555 = !DILocation(line: 0, scope: !4545)
!4556 = !DILocation(line: 408, column: 19, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4545, file: !412, line: 408, column: 9)
!4558 = !DILocation(line: 408, column: 36, scope: !4557)
!4559 = !DILocation(line: 408, column: 40, scope: !4557)
!4560 = !DILocation(line: 408, column: 9, scope: !4545)
!4561 = !DILocation(line: 413, column: 19, scope: !4545)
!4562 = !DILocation(line: 416, column: 26, scope: !4545)
!4563 = !DILocation(line: 418, column: 9, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4545, file: !412, line: 418, column: 9)
!4565 = !DILocation(line: 0, scope: !4564)
!4566 = !DILocation(line: 418, column: 9, scope: !4545)
!4567 = !DILocation(line: 424, column: 9, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4545, file: !412, line: 424, column: 9)
!4569 = !DILocation(line: 0, scope: !4568)
!4570 = !DILocation(line: 424, column: 9, scope: !4545)
!4571 = !DILocation(line: 430, column: 9, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4545, file: !412, line: 430, column: 9)
!4573 = !DILocation(line: 0, scope: !4572)
!4574 = !DILocation(line: 430, column: 9, scope: !4545)
!4575 = !DILocation(line: 436, column: 1, scope: !4545)
!4576 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !412, file: !412, line: 441, type: !4250, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4577)
!4577 = !{!4578, !4579, !4580, !4581, !4582, !4583, !4584}
!4578 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4576, file: !412, line: 441, type: !4229)
!4579 = !DILocalVariable(name: "no1", scope: !4576, file: !412, line: 443, type: !61)
!4580 = !DILocalVariable(name: "no2", scope: !4576, file: !412, line: 443, type: !61)
!4581 = !DILocalVariable(name: "no3", scope: !4576, file: !412, line: 443, type: !61)
!4582 = !DILocalVariable(name: "remainder1", scope: !4576, file: !412, line: 444, type: !61)
!4583 = !DILocalVariable(name: "remainder2", scope: !4576, file: !412, line: 444, type: !61)
!4584 = !DILocalVariable(name: "remainder3", scope: !4576, file: !412, line: 444, type: !61)
!4585 = !DILocation(line: 0, scope: !4576)
!4586 = !DILocation(line: 446, column: 18, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4576, file: !412, line: 446, column: 9)
!4588 = !DILocation(line: 446, column: 9, scope: !4576)
!4589 = !DILocation(line: 451, column: 20, scope: !4576)
!4590 = !DILocation(line: 454, column: 27, scope: !4576)
!4591 = !DILocation(line: 457, column: 20, scope: !4576)
!4592 = !DILocation(line: 463, column: 20, scope: !4576)
!4593 = !DILocation(line: 469, column: 107, scope: !4576)
!4594 = !DILocation(line: 469, column: 92, scope: !4576)
!4595 = !DILocation(line: 469, column: 5, scope: !4576)
!4596 = !DILocation(line: 469, column: 49, scope: !4576)
!4597 = !DILocation(line: 469, column: 63, scope: !4576)
!4598 = !DILocation(line: 472, column: 89, scope: !4576)
!4599 = !DILocation(line: 472, column: 5, scope: !4576)
!4600 = !DILocation(line: 472, column: 48, scope: !4576)
!4601 = !DILocation(line: 472, column: 61, scope: !4576)
!4602 = !DILocation(line: 475, column: 5, scope: !4576)
!4603 = !DILocation(line: 475, column: 48, scope: !4576)
!4604 = !DILocation(line: 475, column: 61, scope: !4576)
!4605 = !DILocation(line: 478, column: 9, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4576, file: !412, line: 478, column: 9)
!4607 = !DILocation(line: 0, scope: !4606)
!4608 = !DILocation(line: 478, column: 9, scope: !4576)
!4609 = !DILocation(line: 479, column: 55, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4606, file: !412, line: 478, column: 40)
!4611 = !DILocation(line: 480, column: 5, scope: !4610)
!4612 = !DILocation(line: 483, column: 53, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4606, file: !412, line: 482, column: 10)
!4614 = !DILocation(line: 483, column: 67, scope: !4613)
!4615 = !DILocation(line: 484, column: 9, scope: !4613)
!4616 = !DILocation(line: 484, column: 55, scope: !4613)
!4617 = !DILocation(line: 484, column: 71, scope: !4613)
!4618 = !DILocation(line: 485, column: 9, scope: !4613)
!4619 = !DILocation(line: 485, column: 55, scope: !4613)
!4620 = !DILocation(line: 490, column: 5, scope: !4576)
!4621 = !DILocation(line: 490, column: 48, scope: !4576)
!4622 = !DILocation(line: 490, column: 61, scope: !4576)
!4623 = !DILocation(line: 493, column: 5, scope: !4576)
!4624 = !DILocation(line: 493, column: 47, scope: !4576)
!4625 = !DILocation(line: 493, column: 59, scope: !4576)
!4626 = !DILocation(line: 496, column: 108, scope: !4576)
!4627 = !DILocation(line: 496, column: 93, scope: !4576)
!4628 = !DILocation(line: 496, column: 5, scope: !4576)
!4629 = !DILocation(line: 496, column: 50, scope: !4576)
!4630 = !DILocation(line: 496, column: 65, scope: !4576)
!4631 = !DILocation(line: 498, column: 5, scope: !4576)
!4632 = !DILocation(line: 499, column: 1, scope: !4576)
!4633 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !412, file: !412, line: 502, type: !4250, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4634)
!4634 = !{!4635, !4636, !4637, !4638, !4639}
!4635 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4633, file: !412, line: 502, type: !4229)
!4636 = !DILocalVariable(name: "no1", scope: !4633, file: !412, line: 504, type: !61)
!4637 = !DILocalVariable(name: "no2", scope: !4633, file: !412, line: 504, type: !61)
!4638 = !DILocalVariable(name: "remainder1", scope: !4633, file: !412, line: 505, type: !61)
!4639 = !DILocalVariable(name: "remainder2", scope: !4633, file: !412, line: 505, type: !61)
!4640 = !DILocation(line: 0, scope: !4633)
!4641 = !DILocation(line: 507, column: 18, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4633, file: !412, line: 507, column: 9)
!4643 = !DILocation(line: 507, column: 9, scope: !4633)
!4644 = !DILocation(line: 512, column: 20, scope: !4633)
!4645 = !DILocation(line: 515, column: 27, scope: !4633)
!4646 = !DILocation(line: 518, column: 20, scope: !4633)
!4647 = !DILocation(line: 524, column: 107, scope: !4633)
!4648 = !DILocation(line: 524, column: 92, scope: !4633)
!4649 = !DILocation(line: 524, column: 5, scope: !4633)
!4650 = !DILocation(line: 524, column: 49, scope: !4633)
!4651 = !DILocation(line: 524, column: 63, scope: !4633)
!4652 = !DILocation(line: 527, column: 89, scope: !4633)
!4653 = !DILocation(line: 527, column: 5, scope: !4633)
!4654 = !DILocation(line: 527, column: 48, scope: !4633)
!4655 = !DILocation(line: 527, column: 61, scope: !4633)
!4656 = !DILocation(line: 530, column: 9, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4633, file: !412, line: 530, column: 9)
!4658 = !DILocation(line: 0, scope: !4657)
!4659 = !DILocation(line: 530, column: 9, scope: !4633)
!4660 = !DILocation(line: 531, column: 55, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4657, file: !412, line: 530, column: 40)
!4662 = !DILocation(line: 531, column: 71, scope: !4661)
!4663 = !DILocation(line: 532, column: 9, scope: !4661)
!4664 = !DILocation(line: 532, column: 56, scope: !4661)
!4665 = !DILocation(line: 533, column: 5, scope: !4661)
!4666 = !DILocation(line: 536, column: 53, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4657, file: !412, line: 535, column: 10)
!4668 = !DILocation(line: 536, column: 67, scope: !4667)
!4669 = !DILocation(line: 537, column: 9, scope: !4667)
!4670 = !DILocation(line: 537, column: 55, scope: !4667)
!4671 = !DILocation(line: 537, column: 71, scope: !4667)
!4672 = !DILocation(line: 538, column: 9, scope: !4667)
!4673 = !DILocation(line: 538, column: 55, scope: !4667)
!4674 = !DILocation(line: 543, column: 5, scope: !4633)
!4675 = !DILocation(line: 543, column: 48, scope: !4633)
!4676 = !DILocation(line: 543, column: 61, scope: !4633)
!4677 = !DILocation(line: 546, column: 5, scope: !4633)
!4678 = !DILocation(line: 546, column: 47, scope: !4633)
!4679 = !DILocation(line: 546, column: 59, scope: !4633)
!4680 = !DILocation(line: 549, column: 5, scope: !4633)
!4681 = !DILocation(line: 550, column: 1, scope: !4633)
!4682 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !412, file: !412, line: 554, type: !4683, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4685)
!4683 = !DISubroutineType(types: !4684)
!4684 = !{!4252, !4229, !510}
!4685 = !{!4686, !4687, !4688, !4689}
!4686 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4682, file: !412, line: 554, type: !4229)
!4687 = !DILocalVariable(name: "driving", arg: 2, scope: !4682, file: !412, line: 554, type: !510)
!4688 = !DILocalVariable(name: "no", scope: !4682, file: !412, line: 556, type: !61)
!4689 = !DILocalVariable(name: "remainder", scope: !4682, file: !412, line: 557, type: !61)
!4690 = !DILocation(line: 0, scope: !4682)
!4691 = !DILocation(line: 559, column: 19, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4682, file: !412, line: 559, column: 9)
!4693 = !DILocation(line: 559, column: 9, scope: !4682)
!4694 = !DILocation(line: 564, column: 19, scope: !4682)
!4695 = !DILocation(line: 569, column: 102, scope: !4682)
!4696 = !DILocation(line: 569, column: 88, scope: !4682)
!4697 = !DILocation(line: 569, column: 5, scope: !4682)
!4698 = !DILocation(line: 569, column: 47, scope: !4682)
!4699 = !DILocation(line: 569, column: 60, scope: !4682)
!4700 = !DILocation(line: 570, column: 71, scope: !4682)
!4701 = !DILocation(line: 570, column: 5, scope: !4682)
!4702 = !DILocation(line: 570, column: 47, scope: !4682)
!4703 = !DILocation(line: 570, column: 60, scope: !4682)
!4704 = !DILocation(line: 571, column: 5, scope: !4682)
!4705 = !DILocation(line: 572, column: 1, scope: !4682)
!4706 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !412, file: !412, line: 575, type: !4707, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !411, retainedNodes: !4710)
!4707 = !DISubroutineType(types: !4708)
!4708 = !{!4252, !4229, !4709}
!4709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 32)
!4710 = !{!4711, !4712, !4713, !4714, !4715}
!4711 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4706, file: !412, line: 575, type: !4229)
!4712 = !DILocalVariable(name: "driving", arg: 2, scope: !4706, file: !412, line: 575, type: !4709)
!4713 = !DILocalVariable(name: "no", scope: !4706, file: !412, line: 577, type: !61)
!4714 = !DILocalVariable(name: "remainder", scope: !4706, file: !412, line: 578, type: !61)
!4715 = !DILocalVariable(name: "temp", scope: !4706, file: !412, line: 579, type: !61)
!4716 = !DILocation(line: 0, scope: !4706)
!4717 = !DILocation(line: 581, column: 19, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4706, file: !412, line: 581, column: 9)
!4719 = !DILocation(line: 581, column: 9, scope: !4706)
!4720 = !DILocation(line: 585, column: 14, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4706, file: !412, line: 585, column: 9)
!4722 = !DILocation(line: 585, column: 9, scope: !4706)
!4723 = !DILocation(line: 590, column: 19, scope: !4706)
!4724 = !DILocation(line: 595, column: 12, scope: !4706)
!4725 = !DILocation(line: 595, column: 54, scope: !4706)
!4726 = !DILocation(line: 596, column: 59, scope: !4706)
!4727 = !DILocation(line: 596, column: 45, scope: !4706)
!4728 = !DILocation(line: 596, column: 17, scope: !4706)
!4729 = !DILocation(line: 597, column: 18, scope: !4706)
!4730 = !DILocation(line: 600, column: 56, scope: !4706)
!4731 = !DILocation(line: 600, column: 14, scope: !4706)
!4732 = !DILocation(line: 602, column: 5, scope: !4706)
!4733 = !DILocation(line: 603, column: 1, scope: !4706)
!4734 = distinct !DISubprogram(name: "uart_receive_handler", scope: !692, file: !692, line: 146, type: !4735, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !4737)
!4735 = !DISubroutineType(types: !4736)
!4736 = !{null, !791, !91}
!4737 = !{!4738, !4739, !4740, !4742, !4743, !4744, !4745, !4801}
!4738 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4734, file: !692, line: 146, type: !791)
!4739 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !4734, file: !692, line: 146, type: !91)
!4740 = !DILocalVariable(name: "channel", scope: !4734, file: !692, line: 148, type: !4741)
!4741 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !702, line: 203, baseType: !701)
!4742 = !DILocalVariable(name: "avail_bytes", scope: !4734, file: !692, line: 149, type: !61)
!4743 = !DILocalVariable(name: "callback", scope: !4734, file: !692, line: 150, type: !800)
!4744 = !DILocalVariable(name: "arg", scope: !4734, file: !692, line: 151, type: !88)
!4745 = !DILocalVariable(name: "uartx", scope: !4734, file: !692, line: 152, type: !4746)
!4746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4747, size: 32)
!4747 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !4748)
!4748 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !4749)
!4749 = !{!4750, !4756, !4761, !4767, !4768, !4773, !4778, !4779, !4784, !4785, !4786, !4787, !4788, !4789, !4790, !4791, !4792, !4793, !4794, !4795, !4796, !4797, !4798, !4799, !4800}
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !4748, file: !56, line: 547, baseType: !4751, size: 32)
!4751 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4748, file: !56, line: 543, size: 32, elements: !4752)
!4752 = !{!4753, !4754, !4755}
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !4751, file: !56, line: 544, baseType: !272, size: 32)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !4751, file: !56, line: 545, baseType: !60, size: 32)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !4751, file: !56, line: 546, baseType: !60, size: 32)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !4748, file: !56, line: 551, baseType: !4757, size: 32, offset: 32)
!4757 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4748, file: !56, line: 548, size: 32, elements: !4758)
!4758 = !{!4759, !4760}
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !4757, file: !56, line: 549, baseType: !60, size: 32)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !4757, file: !56, line: 550, baseType: !60, size: 32)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !4748, file: !56, line: 556, baseType: !4762, size: 32, offset: 64)
!4762 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4748, file: !56, line: 552, size: 32, elements: !4763)
!4763 = !{!4764, !4765, !4766}
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !4762, file: !56, line: 553, baseType: !272, size: 32)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !4762, file: !56, line: 554, baseType: !60, size: 32)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !4762, file: !56, line: 555, baseType: !60, size: 32)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !4748, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !4748, file: !56, line: 561, baseType: !4769, size: 32, offset: 128)
!4769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4748, file: !56, line: 558, size: 32, elements: !4770)
!4770 = !{!4771, !4772}
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !4769, file: !56, line: 559, baseType: !60, size: 32)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !4769, file: !56, line: 560, baseType: !60, size: 32)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !4748, file: !56, line: 565, baseType: !4774, size: 32, offset: 160)
!4774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4748, file: !56, line: 562, size: 32, elements: !4775)
!4775 = !{!4776, !4777}
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !4774, file: !56, line: 563, baseType: !272, size: 32)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !4774, file: !56, line: 564, baseType: !60, size: 32)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !4748, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !4748, file: !56, line: 570, baseType: !4780, size: 32, offset: 224)
!4780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4748, file: !56, line: 567, size: 32, elements: !4781)
!4781 = !{!4782, !4783}
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !4780, file: !56, line: 568, baseType: !60, size: 32)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !4780, file: !56, line: 569, baseType: !60, size: 32)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !4748, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !4748, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !4748, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !4748, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !4748, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !4748, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !4748, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !4748, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !4748, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !4748, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !4748, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !4748, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !4748, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !4748, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !4748, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !4748, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !4748, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!4801 = !DILocalVariable(name: "status", scope: !4734, file: !692, line: 153, type: !4802)
!4802 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !702, line: 211, baseType: !722)
!4803 = !DILocation(line: 0, scope: !4734)
!4804 = !DILocation(line: 149, column: 5, scope: !4734)
!4805 = !DILocation(line: 155, column: 9, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4734, file: !692, line: 155, column: 9)
!4807 = !DILocation(line: 155, column: 36, scope: !4806)
!4808 = !DILocation(line: 155, column: 9, scope: !4734)
!4809 = !DILocation(line: 156, column: 9, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4806, file: !692, line: 155, column: 70)
!4811 = !DILocation(line: 160, column: 13, scope: !4734)
!4812 = !DILocation(line: 161, column: 15, scope: !4734)
!4813 = !DILocation(line: 163, column: 9, scope: !4734)
!4814 = !DILocation(line: 164, column: 9, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4816, file: !692, line: 163, column: 29)
!4816 = distinct !DILexicalBlock(scope: !4734, file: !692, line: 163, column: 9)
!4817 = !DILocation(line: 165, column: 5, scope: !4815)
!4818 = !DILocation(line: 167, column: 14, scope: !4734)
!4819 = !DILocation(line: 168, column: 16, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4734, file: !692, line: 168, column: 9)
!4821 = !DILocation(line: 168, column: 9, scope: !4734)
!4822 = !DILocation(line: 169, column: 9, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4820, file: !692, line: 168, column: 28)
!4824 = !DILocation(line: 172, column: 9, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4734, file: !692, line: 172, column: 9)
!4826 = !DILocation(line: 172, column: 21, scope: !4825)
!4827 = !DILocation(line: 172, column: 9, scope: !4734)
!4828 = !DILocation(line: 176, column: 43, scope: !4734)
!4829 = !DILocation(line: 178, column: 18, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4734, file: !692, line: 178, column: 9)
!4831 = !DILocation(line: 178, column: 9, scope: !4734)
!4832 = !DILocation(line: 179, column: 9, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4830, file: !692, line: 178, column: 27)
!4834 = !DILocation(line: 177, column: 38, scope: !4734)
!4835 = !DILocation(line: 183, column: 5, scope: !4734)
!4836 = !DILocation(line: 184, column: 5, scope: !4734)
!4837 = !DILocation(line: 185, column: 5, scope: !4734)
!4838 = !DILocation(line: 187, column: 14, scope: !4734)
!4839 = !DILocation(line: 188, column: 16, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4734, file: !692, line: 188, column: 9)
!4841 = !DILocation(line: 188, column: 9, scope: !4734)
!4842 = !DILocation(line: 189, column: 9, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4840, file: !692, line: 188, column: 28)
!4844 = !DILocation(line: 192, column: 9, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4734, file: !692, line: 192, column: 9)
!4846 = !DILocation(line: 192, column: 53, scope: !4845)
!4847 = !DILocation(line: 192, column: 21, scope: !4845)
!4848 = !DILocation(line: 192, column: 9, scope: !4734)
!4849 = !DILocation(line: 193, column: 18, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4845, file: !692, line: 192, column: 83)
!4851 = !DILocation(line: 194, column: 20, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4850, file: !692, line: 194, column: 13)
!4853 = !DILocation(line: 194, column: 13, scope: !4850)
!4854 = !DILocation(line: 195, column: 13, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4852, file: !692, line: 194, column: 32)
!4856 = !DILocation(line: 199, column: 1, scope: !4734)
!4857 = distinct !DISubprogram(name: "uart_send_handler", scope: !692, file: !692, line: 210, type: !4735, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !4858)
!4858 = !{!4859, !4860, !4861, !4862, !4863, !4864, !4865, !4866}
!4859 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4857, file: !692, line: 210, type: !791)
!4860 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !4857, file: !692, line: 210, type: !91)
!4861 = !DILocalVariable(name: "channel", scope: !4857, file: !692, line: 212, type: !4741)
!4862 = !DILocalVariable(name: "status", scope: !4857, file: !692, line: 213, type: !4802)
!4863 = !DILocalVariable(name: "compare_space", scope: !4857, file: !692, line: 214, type: !61)
!4864 = !DILocalVariable(name: "avail_space", scope: !4857, file: !692, line: 214, type: !61)
!4865 = !DILocalVariable(name: "callback", scope: !4857, file: !692, line: 215, type: !800)
!4866 = !DILocalVariable(name: "arg", scope: !4857, file: !692, line: 216, type: !88)
!4867 = !DILocation(line: 0, scope: !4857)
!4868 = !DILocation(line: 214, column: 5, scope: !4857)
!4869 = !DILocation(line: 221, column: 9, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4857, file: !692, line: 221, column: 9)
!4871 = !DILocation(line: 221, column: 36, scope: !4870)
!4872 = !DILocation(line: 221, column: 9, scope: !4857)
!4873 = !DILocation(line: 222, column: 9, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4870, file: !692, line: 221, column: 70)
!4875 = !DILocation(line: 226, column: 15, scope: !4857)
!4876 = !DILocation(line: 228, column: 9, scope: !4857)
!4877 = !DILocation(line: 253, column: 47, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4879, file: !692, line: 252, column: 12)
!4879 = distinct !DILexicalBlock(scope: !4857, file: !692, line: 228, column: 9)
!4880 = !DILocation(line: 255, column: 22, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4878, file: !692, line: 255, column: 13)
!4882 = !DILocation(line: 255, column: 13, scope: !4878)
!4883 = !DILocation(line: 256, column: 13, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4881, file: !692, line: 255, column: 31)
!4885 = !DILocation(line: 254, column: 42, scope: !4878)
!4886 = !DILocation(line: 260, column: 9, scope: !4878)
!4887 = !DILocation(line: 261, column: 9, scope: !4878)
!4888 = !DILocation(line: 262, column: 9, scope: !4878)
!4889 = !DILocation(line: 264, column: 18, scope: !4878)
!4890 = !DILocation(line: 265, column: 20, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4878, file: !692, line: 265, column: 13)
!4892 = !DILocation(line: 265, column: 13, scope: !4878)
!4893 = !DILocation(line: 266, column: 13, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4891, file: !692, line: 265, column: 32)
!4895 = !DILocation(line: 269, column: 54, scope: !4878)
!4896 = !DILocation(line: 270, column: 56, scope: !4878)
!4897 = !DILocation(line: 270, column: 25, scope: !4878)
!4898 = !DILocation(line: 271, column: 13, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4878, file: !692, line: 271, column: 13)
!4900 = !DILocation(line: 271, column: 25, scope: !4899)
!4901 = !DILocation(line: 271, column: 13, scope: !4878)
!4902 = !DILocation(line: 272, column: 22, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4899, file: !692, line: 271, column: 43)
!4904 = !DILocation(line: 273, column: 24, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4903, file: !692, line: 273, column: 17)
!4906 = !DILocation(line: 273, column: 17, scope: !4903)
!4907 = !DILocation(line: 274, column: 17, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4905, file: !692, line: 273, column: 36)
!4909 = !DILocation(line: 279, column: 1, scope: !4857)
!4910 = distinct !DISubprogram(name: "uart_error_handler", scope: !692, file: !692, line: 282, type: !4911, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !4913)
!4911 = !DISubroutineType(types: !4912)
!4912 = !{null, !791}
!4913 = !{!4914, !4915, !4916, !4917}
!4914 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4910, file: !692, line: 282, type: !791)
!4915 = !DILocalVariable(name: "uartx", scope: !4910, file: !692, line: 284, type: !4746)
!4916 = !DILocalVariable(name: "callback", scope: !4910, file: !692, line: 285, type: !800)
!4917 = !DILocalVariable(name: "arg", scope: !4910, file: !692, line: 286, type: !88)
!4918 = !DILocation(line: 0, scope: !4910)
!4919 = !DILocation(line: 288, column: 13, scope: !4910)
!4920 = !DILocation(line: 290, column: 10, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4910, file: !692, line: 290, column: 9)
!4922 = !DILocation(line: 290, column: 9, scope: !4910)
!4923 = !DILocation(line: 291, column: 9, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4921, file: !692, line: 290, column: 36)
!4925 = !DILocation(line: 292, column: 9, scope: !4924)
!4926 = !DILocation(line: 293, column: 47, scope: !4924)
!4927 = !DILocation(line: 295, column: 22, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4924, file: !692, line: 295, column: 13)
!4929 = !DILocation(line: 295, column: 13, scope: !4924)
!4930 = !DILocation(line: 296, column: 13, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4928, file: !692, line: 295, column: 31)
!4932 = !DILocation(line: 294, column: 42, scope: !4924)
!4933 = !DILocation(line: 299, column: 9, scope: !4924)
!4934 = !DILocation(line: 300, column: 5, scope: !4924)
!4935 = !DILocation(line: 301, column: 1, scope: !4910)
!4936 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !692, file: !692, line: 416, type: !4937, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !4941)
!4937 = !DISubroutineType(types: !4938)
!4938 = !{!4939, !791, !4940}
!4939 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !717, line: 351, baseType: !733)
!4940 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !717, line: 317, baseType: !740)
!4941 = !{!4942, !4943, !4944, !4945, !4946}
!4942 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4936, file: !692, line: 416, type: !791)
!4943 = !DILocalVariable(name: "baudrate", arg: 2, scope: !4936, file: !692, line: 416, type: !4940)
!4944 = !DILocalVariable(name: "actual_baudrate", scope: !4936, file: !692, line: 418, type: !61)
!4945 = !DILocalVariable(name: "irq_status", scope: !4936, file: !692, line: 418, type: !61)
!4946 = !DILocalVariable(name: "uartx", scope: !4936, file: !692, line: 419, type: !4746)
!4947 = !DILocation(line: 0, scope: !4936)
!4948 = !DILocation(line: 421, column: 11, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4936, file: !692, line: 421, column: 9)
!4950 = !DILocation(line: 421, column: 42, scope: !4949)
!4951 = !DILocation(line: 422, column: 11, scope: !4949)
!4952 = !DILocation(line: 421, column: 9, scope: !4936)
!4953 = !DILocation(line: 426, column: 9, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4936, file: !692, line: 426, column: 9)
!4955 = !DILocation(line: 426, column: 36, scope: !4954)
!4956 = !DILocation(line: 426, column: 9, scope: !4936)
!4957 = !DILocation(line: 430, column: 18, scope: !4936)
!4958 = !DILocation(line: 434, column: 5, scope: !4936)
!4959 = !DILocation(line: 436, column: 13, scope: !4936)
!4960 = !DILocation(line: 437, column: 23, scope: !4936)
!4961 = !DILocation(line: 439, column: 5, scope: !4936)
!4962 = !DILocation(line: 441, column: 5, scope: !4936)
!4963 = !DILocation(line: 442, column: 1, scope: !4936)
!4964 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !692, file: !692, line: 120, type: !4965, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !4967)
!4965 = !DISubroutineType(types: !4966)
!4966 = !{!91, !791}
!4967 = !{!4968}
!4968 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4964, file: !692, line: 120, type: !791)
!4969 = !DILocation(line: 0, scope: !4964)
!4970 = !DILocation(line: 122, column: 23, scope: !4964)
!4971 = !DILocation(line: 122, column: 5, scope: !4964)
!4972 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !692, file: !692, line: 125, type: !4973, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !4975)
!4973 = !DISubroutineType(types: !4974)
!4974 = !{!91, !4940}
!4975 = !{!4976}
!4976 = !DILocalVariable(name: "baudrate", arg: 1, scope: !4972, file: !692, line: 125, type: !4940)
!4977 = !DILocation(line: 0, scope: !4972)
!4978 = !DILocation(line: 127, column: 22, scope: !4972)
!4979 = !DILocation(line: 127, column: 5, scope: !4972)
!4980 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !692, file: !692, line: 444, type: !4981, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !4995)
!4981 = !DISubroutineType(types: !4982)
!4982 = !{!4939, !791, !4983}
!4983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4984, size: 32)
!4984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4985)
!4985 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !717, line: 378, baseType: !4986)
!4986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !717, line: 373, size: 128, elements: !4987)
!4987 = !{!4988, !4989, !4991, !4993}
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !4986, file: !717, line: 374, baseType: !4940, size: 32)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !4986, file: !717, line: 375, baseType: !4990, size: 32, offset: 32)
!4990 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !717, line: 326, baseType: !756)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !4986, file: !717, line: 376, baseType: !4992, size: 32, offset: 64)
!4992 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !717, line: 333, baseType: !762)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4986, file: !717, line: 377, baseType: !4994, size: 32, offset: 96)
!4994 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !717, line: 341, baseType: !766)
!4995 = !{!4996, !4997, !4998, !4999}
!4996 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4980, file: !692, line: 444, type: !791)
!4997 = !DILocalVariable(name: "config", arg: 2, scope: !4980, file: !692, line: 445, type: !4983)
!4998 = !DILocalVariable(name: "irq_status", scope: !4980, file: !692, line: 447, type: !61)
!4999 = !DILocalVariable(name: "uartx", scope: !4980, file: !692, line: 448, type: !4746)
!5000 = !DILocation(line: 0, scope: !4980)
!5001 = !DILocation(line: 450, column: 11, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4980, file: !692, line: 450, column: 9)
!5003 = !DILocation(line: 450, column: 42, scope: !5002)
!5004 = !DILocation(line: 451, column: 11, scope: !5002)
!5005 = !DILocation(line: 450, column: 9, scope: !4980)
!5006 = !DILocation(line: 455, column: 9, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4980, file: !692, line: 455, column: 9)
!5008 = !DILocation(line: 455, column: 36, scope: !5007)
!5009 = !DILocation(line: 455, column: 9, scope: !4980)
!5010 = !DILocation(line: 459, column: 18, scope: !4980)
!5011 = !DILocation(line: 466, column: 5, scope: !4980)
!5012 = !DILocation(line: 468, column: 13, scope: !4980)
!5013 = !DILocation(line: 470, column: 46, scope: !4980)
!5014 = !DILocation(line: 470, column: 5, scope: !4980)
!5015 = !DILocation(line: 471, column: 36, scope: !4980)
!5016 = !DILocation(line: 471, column: 57, scope: !4980)
!5017 = !DILocation(line: 471, column: 75, scope: !4980)
!5018 = !DILocation(line: 471, column: 5, scope: !4980)
!5019 = !DILocation(line: 473, column: 5, scope: !4980)
!5020 = !DILocation(line: 474, column: 1, scope: !4980)
!5021 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !692, file: !692, line: 130, type: !5022, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5024)
!5022 = !DISubroutineType(types: !5023)
!5023 = !{!91, !4983}
!5024 = !{!5025}
!5025 = !DILocalVariable(name: "config", arg: 1, scope: !5021, file: !692, line: 130, type: !4983)
!5026 = !DILocation(line: 0, scope: !5021)
!5027 = !DILocation(line: 132, column: 22, scope: !5021)
!5028 = !DILocation(line: 132, column: 31, scope: !5021)
!5029 = !DILocation(line: 132, column: 56, scope: !5021)
!5030 = !DILocation(line: 133, column: 22, scope: !5021)
!5031 = !DILocation(line: 133, column: 34, scope: !5021)
!5032 = !DILocation(line: 133, column: 61, scope: !5021)
!5033 = !DILocation(line: 134, column: 22, scope: !5021)
!5034 = !DILocation(line: 134, column: 31, scope: !5021)
!5035 = !DILocation(line: 134, column: 55, scope: !5021)
!5036 = !DILocation(line: 135, column: 22, scope: !5021)
!5037 = !DILocation(line: 135, column: 29, scope: !5021)
!5038 = !DILocation(line: 132, column: 5, scope: !5021)
!5039 = distinct !DISubprogram(name: "hal_uart_init", scope: !692, file: !692, line: 476, type: !5040, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5043)
!5040 = !DISubroutineType(types: !5041)
!5041 = !{!4939, !791, !5042}
!5042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4985, size: 32)
!5043 = !{!5044, !5045, !5046, !5047, !5048, !5049, !5050}
!5044 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5039, file: !692, line: 476, type: !791)
!5045 = !DILocalVariable(name: "uart_config", arg: 2, scope: !5039, file: !692, line: 476, type: !5042)
!5046 = !DILocalVariable(name: "uartx", scope: !5039, file: !692, line: 478, type: !4746)
!5047 = !DILocalVariable(name: "i", scope: !5039, file: !692, line: 479, type: !61)
!5048 = !DILocalVariable(name: "actual_baudrate", scope: !5039, file: !692, line: 479, type: !61)
!5049 = !DILocalVariable(name: "irq_status", scope: !5039, file: !692, line: 479, type: !61)
!5050 = !DILocalVariable(name: "status", scope: !5039, file: !692, line: 480, type: !4098)
!5051 = !DILocation(line: 0, scope: !5039)
!5052 = !DILocation(line: 482, column: 11, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5039, file: !692, line: 482, column: 9)
!5054 = !DILocation(line: 482, column: 42, scope: !5053)
!5055 = !DILocation(line: 483, column: 11, scope: !5053)
!5056 = !DILocation(line: 482, column: 9, scope: !5039)
!5057 = !DILocation(line: 487, column: 18, scope: !5039)
!5058 = !DILocation(line: 488, column: 9, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5039, file: !692, line: 488, column: 9)
!5060 = !DILocation(line: 488, column: 36, scope: !5059)
!5061 = !DILocation(line: 488, column: 9, scope: !5039)
!5062 = !DILocation(line: 489, column: 9, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5059, file: !692, line: 488, column: 68)
!5064 = !DILocation(line: 490, column: 9, scope: !5063)
!5065 = !DILocation(line: 502, column: 9, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5039, file: !692, line: 502, column: 9)
!5067 = !DILocation(line: 502, column: 9, scope: !5039)
!5068 = !DILocation(line: 504, column: 13, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5070, file: !692, line: 503, column: 44)
!5070 = distinct !DILexicalBlock(scope: !5071, file: !692, line: 503, column: 9)
!5071 = distinct !DILexicalBlock(scope: !5072, file: !692, line: 503, column: 9)
!5072 = distinct !DILexicalBlock(scope: !5066, file: !692, line: 502, column: 50)
!5073 = !DILocation(line: 504, column: 32, scope: !5069)
!5074 = !DILocation(line: 510, column: 32, scope: !5069)
!5075 = !DILocation(line: 510, column: 36, scope: !5069)
!5076 = !DILocation(line: 511, column: 32, scope: !5069)
!5077 = !DILocation(line: 511, column: 37, scope: !5069)
!5078 = !DILocation(line: 503, column: 40, scope: !5070)
!5079 = !DILocation(line: 503, column: 23, scope: !5070)
!5080 = !DILocation(line: 503, column: 9, scope: !5071)
!5081 = distinct !{!5081, !5080, !5082}
!5082 = !DILocation(line: 512, column: 9, scope: !5071)
!5083 = !DILocation(line: 513, column: 40, scope: !5072)
!5084 = !DILocation(line: 514, column: 5, scope: !5072)
!5085 = !DILocation(line: 521, column: 32, scope: !5039)
!5086 = !DILocation(line: 522, column: 5, scope: !5039)
!5087 = !DILocation(line: 524, column: 31, scope: !5039)
!5088 = !DILocation(line: 524, column: 14, scope: !5039)
!5089 = !DILocation(line: 525, column: 16, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5039, file: !692, line: 525, column: 9)
!5091 = !DILocation(line: 525, column: 9, scope: !5039)
!5092 = !DILocation(line: 526, column: 9, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5090, file: !692, line: 525, column: 40)
!5094 = !DILocation(line: 530, column: 13, scope: !5039)
!5095 = !DILocation(line: 532, column: 5, scope: !5039)
!5096 = !DILocation(line: 533, column: 56, scope: !5039)
!5097 = !DILocation(line: 533, column: 23, scope: !5039)
!5098 = !DILocation(line: 534, column: 5, scope: !5039)
!5099 = !DILocation(line: 535, column: 41, scope: !5039)
!5100 = !DILocation(line: 535, column: 67, scope: !5039)
!5101 = !DILocation(line: 535, column: 90, scope: !5039)
!5102 = !DILocation(line: 535, column: 5, scope: !5039)
!5103 = !DILocation(line: 536, column: 5, scope: !5039)
!5104 = !DILocation(line: 541, column: 5, scope: !5039)
!5105 = !DILocation(line: 542, column: 1, scope: !5039)
!5106 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !692, file: !692, line: 544, type: !5107, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5109)
!5107 = !DISubroutineType(types: !5108)
!5108 = !{!4939, !791}
!5109 = !{!5110, !5111, !5112, !5113, !5114, !5115, !5116}
!5110 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5106, file: !692, line: 544, type: !791)
!5111 = !DILocalVariable(name: "uartx", scope: !5106, file: !692, line: 546, type: !4746)
!5112 = !DILocalVariable(name: "tx_dma_channel", scope: !5106, file: !692, line: 547, type: !4741)
!5113 = !DILocalVariable(name: "rx_dma_channel", scope: !5106, file: !692, line: 547, type: !4741)
!5114 = !DILocalVariable(name: "irq_status", scope: !5106, file: !692, line: 548, type: !61)
!5115 = !DILocalVariable(name: "status", scope: !5106, file: !692, line: 549, type: !4802)
!5116 = !DILocalVariable(name: "clock_status", scope: !5106, file: !692, line: 550, type: !4098)
!5117 = !DILocation(line: 0, scope: !5106)
!5118 = !DILocation(line: 552, column: 10, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5106, file: !692, line: 552, column: 9)
!5120 = !DILocation(line: 552, column: 9, scope: !5106)
!5121 = !DILocation(line: 556, column: 18, scope: !5106)
!5122 = !DILocation(line: 557, column: 9, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5106, file: !692, line: 557, column: 9)
!5124 = !DILocation(line: 557, column: 36, scope: !5123)
!5125 = !DILocation(line: 557, column: 9, scope: !5106)
!5126 = !DILocation(line: 562, column: 13, scope: !5106)
!5127 = !DILocation(line: 565, column: 5, scope: !5106)
!5128 = !DILocation(line: 568, column: 9, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5106, file: !692, line: 568, column: 9)
!5130 = !DILocation(line: 568, column: 36, scope: !5129)
!5131 = !DILocation(line: 568, column: 9, scope: !5106)
!5132 = !DILocation(line: 569, column: 26, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5129, file: !692, line: 568, column: 70)
!5134 = !DILocation(line: 570, column: 26, scope: !5133)
!5135 = !DILocation(line: 572, column: 18, scope: !5133)
!5136 = !DILocation(line: 573, column: 20, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5133, file: !692, line: 573, column: 13)
!5138 = !DILocation(line: 573, column: 13, scope: !5133)
!5139 = !DILocation(line: 574, column: 13, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5137, file: !692, line: 573, column: 32)
!5141 = !DILocation(line: 575, column: 13, scope: !5140)
!5142 = !DILocation(line: 578, column: 18, scope: !5133)
!5143 = !DILocation(line: 579, column: 20, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5133, file: !692, line: 579, column: 13)
!5145 = !DILocation(line: 579, column: 13, scope: !5133)
!5146 = !DILocation(line: 580, column: 13, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5144, file: !692, line: 579, column: 32)
!5148 = !DILocation(line: 581, column: 13, scope: !5147)
!5149 = !DILocation(line: 584, column: 18, scope: !5133)
!5150 = !DILocation(line: 585, column: 20, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5133, file: !692, line: 585, column: 13)
!5152 = !DILocation(line: 585, column: 13, scope: !5133)
!5153 = !DILocation(line: 586, column: 13, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5151, file: !692, line: 585, column: 32)
!5155 = !DILocation(line: 587, column: 13, scope: !5154)
!5156 = !DILocation(line: 590, column: 18, scope: !5133)
!5157 = !DILocation(line: 591, column: 20, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5133, file: !692, line: 591, column: 13)
!5159 = !DILocation(line: 591, column: 13, scope: !5133)
!5160 = !DILocation(line: 592, column: 13, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5158, file: !692, line: 591, column: 32)
!5162 = !DILocation(line: 593, column: 13, scope: !5161)
!5163 = !DILocation(line: 596, column: 18, scope: !5133)
!5164 = !DILocation(line: 597, column: 20, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5133, file: !692, line: 597, column: 13)
!5166 = !DILocation(line: 597, column: 13, scope: !5133)
!5167 = !DILocation(line: 598, column: 13, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5165, file: !692, line: 597, column: 32)
!5169 = !DILocation(line: 599, column: 13, scope: !5168)
!5170 = !DILocation(line: 602, column: 18, scope: !5133)
!5171 = !DILocation(line: 603, column: 20, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5133, file: !692, line: 603, column: 13)
!5173 = !DILocation(line: 603, column: 13, scope: !5133)
!5174 = !DILocation(line: 604, column: 13, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5172, file: !692, line: 603, column: 32)
!5176 = !DILocation(line: 605, column: 13, scope: !5175)
!5177 = !DILocation(line: 608, column: 30, scope: !5133)
!5178 = !DILocation(line: 608, column: 9, scope: !5133)
!5179 = !DILocation(line: 609, column: 5, scope: !5133)
!5180 = !DILocation(line: 610, column: 5, scope: !5106)
!5181 = !DILocation(line: 611, column: 38, scope: !5106)
!5182 = !DILocation(line: 611, column: 20, scope: !5106)
!5183 = !DILocation(line: 612, column: 22, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5106, file: !692, line: 612, column: 9)
!5185 = !DILocation(line: 612, column: 9, scope: !5106)
!5186 = !DILocation(line: 613, column: 9, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5184, file: !692, line: 612, column: 46)
!5188 = !DILocation(line: 614, column: 9, scope: !5187)
!5189 = !DILocation(line: 618, column: 32, scope: !5106)
!5190 = !DILocation(line: 618, column: 37, scope: !5106)
!5191 = !DILocation(line: 619, column: 32, scope: !5106)
!5192 = !DILocation(line: 619, column: 36, scope: !5106)
!5193 = !DILocation(line: 635, column: 32, scope: !5106)
!5194 = !DILocation(line: 639, column: 5, scope: !5106)
!5195 = !DILocation(line: 640, column: 1, scope: !5106)
!5196 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !692, file: !692, line: 642, type: !5197, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5199)
!5197 = !DISubroutineType(types: !5198)
!5198 = !{null, !791, !1535}
!5199 = !{!5200, !5201, !5202}
!5200 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5196, file: !692, line: 642, type: !791)
!5201 = !DILocalVariable(name: "byte", arg: 2, scope: !5196, file: !692, line: 642, type: !1535)
!5202 = !DILocalVariable(name: "uartx", scope: !5196, file: !692, line: 644, type: !4746)
!5203 = !DILocation(line: 0, scope: !5196)
!5204 = !DILocation(line: 646, column: 10, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5196, file: !692, line: 646, column: 9)
!5206 = !DILocation(line: 646, column: 9, scope: !5196)
!5207 = !DILocation(line: 650, column: 9, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5196, file: !692, line: 650, column: 9)
!5209 = !DILocation(line: 650, column: 36, scope: !5208)
!5210 = !DILocation(line: 650, column: 9, scope: !5196)
!5211 = !DILocation(line: 654, column: 13, scope: !5196)
!5212 = !DILocation(line: 655, column: 5, scope: !5196)
!5213 = !DILocation(line: 656, column: 1, scope: !5196)
!5214 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !692, file: !692, line: 658, type: !5215, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5219)
!5215 = !DISubroutineType(types: !5216)
!5216 = !{!61, !791, !5217, !61}
!5217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5218, size: 32)
!5218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !395)
!5219 = !{!5220, !5221, !5222, !5223}
!5220 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5214, file: !692, line: 658, type: !791)
!5221 = !DILocalVariable(name: "data", arg: 2, scope: !5214, file: !692, line: 658, type: !5217)
!5222 = !DILocalVariable(name: "size", arg: 3, scope: !5214, file: !692, line: 658, type: !61)
!5223 = !DILocalVariable(name: "i", scope: !5214, file: !692, line: 660, type: !61)
!5224 = !DILocation(line: 0, scope: !5214)
!5225 = !DILocation(line: 662, column: 11, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5214, file: !692, line: 662, column: 9)
!5227 = !DILocation(line: 662, column: 42, scope: !5226)
!5228 = !DILocation(line: 666, column: 9, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5214, file: !692, line: 666, column: 9)
!5230 = !DILocation(line: 666, column: 36, scope: !5229)
!5231 = !DILocation(line: 666, column: 9, scope: !5214)
!5232 = !DILocation(line: 671, column: 38, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5234, file: !692, line: 670, column: 32)
!5234 = distinct !DILexicalBlock(scope: !5235, file: !692, line: 670, column: 5)
!5235 = distinct !DILexicalBlock(scope: !5214, file: !692, line: 670, column: 5)
!5236 = !DILocation(line: 671, column: 9, scope: !5233)
!5237 = !DILocation(line: 672, column: 13, scope: !5233)
!5238 = !DILocation(line: 670, column: 28, scope: !5234)
!5239 = !DILocation(line: 670, column: 19, scope: !5234)
!5240 = !DILocation(line: 670, column: 5, scope: !5235)
!5241 = distinct !{!5241, !5240, !5242}
!5242 = !DILocation(line: 673, column: 5, scope: !5235)
!5243 = !DILocation(line: 676, column: 1, scope: !5214)
!5244 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !692, file: !692, line: 678, type: !5215, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5245)
!5245 = !{!5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253}
!5246 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5244, file: !692, line: 678, type: !791)
!5247 = !DILocalVariable(name: "data", arg: 2, scope: !5244, file: !692, line: 678, type: !5217)
!5248 = !DILocalVariable(name: "size", arg: 3, scope: !5244, file: !692, line: 678, type: !61)
!5249 = !DILocalVariable(name: "channel", scope: !5244, file: !692, line: 680, type: !4741)
!5250 = !DILocalVariable(name: "i", scope: !5244, file: !692, line: 681, type: !61)
!5251 = !DILocalVariable(name: "real_count", scope: !5244, file: !692, line: 681, type: !61)
!5252 = !DILocalVariable(name: "avail_space", scope: !5244, file: !692, line: 681, type: !61)
!5253 = !DILocalVariable(name: "status", scope: !5244, file: !692, line: 682, type: !4802)
!5254 = !DILocation(line: 0, scope: !5244)
!5255 = !DILocation(line: 681, column: 5, scope: !5244)
!5256 = !DILocation(line: 687, column: 11, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5244, file: !692, line: 687, column: 9)
!5258 = !DILocation(line: 687, column: 42, scope: !5257)
!5259 = !DILocation(line: 691, column: 9, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5244, file: !692, line: 691, column: 9)
!5261 = !DILocation(line: 691, column: 36, scope: !5260)
!5262 = !DILocation(line: 691, column: 9, scope: !5244)
!5263 = !DILocation(line: 704, column: 15, scope: !5244)
!5264 = !DILocation(line: 706, column: 14, scope: !5244)
!5265 = !DILocation(line: 707, column: 16, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5244, file: !692, line: 707, column: 9)
!5267 = !DILocation(line: 707, column: 9, scope: !5244)
!5268 = !DILocation(line: 708, column: 9, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5266, file: !692, line: 707, column: 28)
!5270 = !DILocation(line: 712, column: 9, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5244, file: !692, line: 712, column: 9)
!5272 = !DILocation(line: 712, column: 21, scope: !5271)
!5273 = !DILocation(line: 717, column: 19, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5275, file: !692, line: 717, column: 5)
!5275 = distinct !DILexicalBlock(scope: !5244, file: !692, line: 717, column: 5)
!5276 = !DILocation(line: 717, column: 5, scope: !5275)
!5277 = distinct !{!5277, !5276, !5278}
!5278 = !DILocation(line: 723, column: 5, scope: !5275)
!5279 = !DILocation(line: 718, column: 42, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5274, file: !692, line: 717, column: 38)
!5281 = !DILocation(line: 718, column: 18, scope: !5280)
!5282 = !DILocation(line: 719, column: 20, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5280, file: !692, line: 719, column: 13)
!5284 = !DILocation(line: 717, column: 34, scope: !5274)
!5285 = !DILocation(line: 719, column: 13, scope: !5280)
!5286 = !DILocation(line: 720, column: 13, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5283, file: !692, line: 719, column: 32)
!5288 = !DILocation(line: 728, column: 23, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5244, file: !692, line: 728, column: 9)
!5290 = !DILocation(line: 728, column: 20, scope: !5289)
!5291 = !DILocation(line: 728, column: 9, scope: !5244)
!5292 = !DILocation(line: 729, column: 18, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5289, file: !692, line: 728, column: 36)
!5294 = !DILocation(line: 730, column: 20, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5293, file: !692, line: 730, column: 13)
!5296 = !DILocation(line: 730, column: 13, scope: !5293)
!5297 = !DILocation(line: 731, column: 13, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5295, file: !692, line: 730, column: 32)
!5299 = !DILocation(line: 737, column: 1, scope: !5244)
!5300 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !692, file: !692, line: 739, type: !5301, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5303)
!5301 = !DISubroutineType(types: !5302)
!5302 = !{!1535, !791}
!5303 = !{!5304, !5305, !5306}
!5304 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5300, file: !692, line: 739, type: !791)
!5305 = !DILocalVariable(name: "data", scope: !5300, file: !692, line: 741, type: !1535)
!5306 = !DILocalVariable(name: "uartx", scope: !5300, file: !692, line: 742, type: !4746)
!5307 = !DILocation(line: 0, scope: !5300)
!5308 = !DILocation(line: 744, column: 10, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5300, file: !692, line: 744, column: 9)
!5310 = !DILocation(line: 744, column: 9, scope: !5300)
!5311 = !DILocation(line: 748, column: 9, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5300, file: !692, line: 748, column: 9)
!5313 = !DILocation(line: 748, column: 36, scope: !5312)
!5314 = !DILocation(line: 748, column: 9, scope: !5300)
!5315 = !DILocation(line: 752, column: 13, scope: !5300)
!5316 = !DILocation(line: 754, column: 12, scope: !5300)
!5317 = !DILocation(line: 756, column: 5, scope: !5300)
!5318 = !DILocation(line: 757, column: 1, scope: !5300)
!5319 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !692, file: !692, line: 759, type: !5320, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5322)
!5320 = !DISubroutineType(types: !5321)
!5321 = !{!61, !791}
!5322 = !{!5323, !5324, !5325}
!5323 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5319, file: !692, line: 759, type: !791)
!5324 = !DILocalVariable(name: "data", scope: !5319, file: !692, line: 761, type: !61)
!5325 = !DILocalVariable(name: "uartx", scope: !5319, file: !692, line: 762, type: !4746)
!5326 = !DILocation(line: 0, scope: !5319)
!5327 = !DILocation(line: 764, column: 10, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5319, file: !692, line: 764, column: 9)
!5329 = !DILocation(line: 764, column: 9, scope: !5319)
!5330 = !DILocation(line: 768, column: 9, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5319, file: !692, line: 768, column: 9)
!5332 = !DILocation(line: 768, column: 36, scope: !5331)
!5333 = !DILocation(line: 768, column: 9, scope: !5319)
!5334 = !DILocation(line: 772, column: 13, scope: !5319)
!5335 = !DILocation(line: 774, column: 12, scope: !5319)
!5336 = !DILocation(line: 776, column: 5, scope: !5319)
!5337 = !DILocation(line: 777, column: 1, scope: !5319)
!5338 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !692, file: !692, line: 779, type: !5339, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5341)
!5339 = !DISubroutineType(types: !5340)
!5340 = !{!61, !791, !818, !61}
!5341 = !{!5342, !5343, !5344, !5345, !5346}
!5342 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5338, file: !692, line: 779, type: !791)
!5343 = !DILocalVariable(name: "buffer", arg: 2, scope: !5338, file: !692, line: 779, type: !818)
!5344 = !DILocalVariable(name: "size", arg: 3, scope: !5338, file: !692, line: 779, type: !61)
!5345 = !DILocalVariable(name: "i", scope: !5338, file: !692, line: 781, type: !61)
!5346 = !DILocalVariable(name: "pbuf", scope: !5338, file: !692, line: 782, type: !818)
!5347 = !DILocation(line: 0, scope: !5338)
!5348 = !DILocation(line: 784, column: 11, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5338, file: !692, line: 784, column: 9)
!5350 = !DILocation(line: 784, column: 42, scope: !5349)
!5351 = !DILocation(line: 789, column: 9, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5338, file: !692, line: 789, column: 9)
!5353 = !DILocation(line: 789, column: 36, scope: !5352)
!5354 = !DILocation(line: 789, column: 9, scope: !5338)
!5355 = !DILocation(line: 794, column: 19, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5357, file: !692, line: 793, column: 32)
!5357 = distinct !DILexicalBlock(scope: !5358, file: !692, line: 793, column: 5)
!5358 = distinct !DILexicalBlock(scope: !5338, file: !692, line: 793, column: 5)
!5359 = !DILocation(line: 794, column: 9, scope: !5356)
!5360 = !DILocation(line: 794, column: 17, scope: !5356)
!5361 = !DILocation(line: 793, column: 28, scope: !5357)
!5362 = !DILocation(line: 793, column: 19, scope: !5357)
!5363 = !DILocation(line: 793, column: 5, scope: !5358)
!5364 = distinct !{!5364, !5363, !5365}
!5365 = !DILocation(line: 795, column: 5, scope: !5358)
!5366 = !DILocation(line: 798, column: 1, scope: !5338)
!5367 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !692, file: !692, line: 800, type: !5339, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5368)
!5368 = !{!5369, !5370, !5371, !5372, !5373, !5374, !5375, !5376}
!5369 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5367, file: !692, line: 800, type: !791)
!5370 = !DILocalVariable(name: "buffer", arg: 2, scope: !5367, file: !692, line: 800, type: !818)
!5371 = !DILocalVariable(name: "size", arg: 3, scope: !5367, file: !692, line: 800, type: !61)
!5372 = !DILocalVariable(name: "channel", scope: !5367, file: !692, line: 802, type: !4741)
!5373 = !DILocalVariable(name: "receive_count", scope: !5367, file: !692, line: 803, type: !61)
!5374 = !DILocalVariable(name: "avail_count", scope: !5367, file: !692, line: 803, type: !61)
!5375 = !DILocalVariable(name: "index", scope: !5367, file: !692, line: 804, type: !61)
!5376 = !DILocalVariable(name: "status", scope: !5367, file: !692, line: 805, type: !4802)
!5377 = !DILocation(line: 0, scope: !5367)
!5378 = !DILocation(line: 803, column: 5, scope: !5367)
!5379 = !DILocation(line: 807, column: 11, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5367, file: !692, line: 807, column: 9)
!5381 = !DILocation(line: 807, column: 42, scope: !5380)
!5382 = !DILocation(line: 813, column: 9, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5367, file: !692, line: 813, column: 9)
!5384 = !DILocation(line: 813, column: 36, scope: !5383)
!5385 = !DILocation(line: 813, column: 9, scope: !5367)
!5386 = !DILocation(line: 817, column: 15, scope: !5367)
!5387 = !DILocation(line: 819, column: 14, scope: !5367)
!5388 = !DILocation(line: 820, column: 16, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5367, file: !692, line: 820, column: 9)
!5390 = !DILocation(line: 820, column: 9, scope: !5367)
!5391 = !DILocation(line: 821, column: 9, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5389, file: !692, line: 820, column: 28)
!5393 = !DILocation(line: 825, column: 9, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5367, file: !692, line: 825, column: 9)
!5395 = !DILocation(line: 825, column: 21, scope: !5394)
!5396 = !DILocation(line: 830, column: 27, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5398, file: !692, line: 830, column: 5)
!5398 = distinct !DILexicalBlock(scope: !5367, file: !692, line: 830, column: 5)
!5399 = !DILocation(line: 830, column: 5, scope: !5398)
!5400 = distinct !{!5400, !5399, !5401}
!5401 = !DILocation(line: 836, column: 5, scope: !5398)
!5402 = !DILocation(line: 831, column: 42, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5397, file: !692, line: 830, column: 53)
!5404 = !DILocation(line: 831, column: 18, scope: !5403)
!5405 = !DILocation(line: 832, column: 20, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5403, file: !692, line: 832, column: 13)
!5407 = !DILocation(line: 830, column: 49, scope: !5397)
!5408 = !DILocation(line: 832, column: 13, scope: !5403)
!5409 = !DILocation(line: 833, column: 13, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5406, file: !692, line: 832, column: 32)
!5411 = !DILocation(line: 841, column: 26, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5367, file: !692, line: 841, column: 9)
!5413 = !DILocation(line: 841, column: 23, scope: !5412)
!5414 = !DILocation(line: 841, column: 9, scope: !5367)
!5415 = !DILocation(line: 842, column: 18, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5412, file: !692, line: 841, column: 39)
!5417 = !DILocation(line: 843, column: 20, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5416, file: !692, line: 843, column: 13)
!5419 = !DILocation(line: 843, column: 13, scope: !5416)
!5420 = !DILocation(line: 844, column: 13, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5418, file: !692, line: 843, column: 32)
!5422 = !DILocation(line: 850, column: 1, scope: !5367)
!5423 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !692, file: !692, line: 891, type: !5424, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5426)
!5424 = !DISubroutineType(types: !5425)
!5425 = !{!4939, !791, !800, !88}
!5426 = !{!5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434}
!5427 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5423, file: !692, line: 891, type: !791)
!5428 = !DILocalVariable(name: "user_callback", arg: 2, scope: !5423, file: !692, line: 892, type: !800)
!5429 = !DILocalVariable(name: "user_data", arg: 3, scope: !5423, file: !692, line: 893, type: !88)
!5430 = !DILocalVariable(name: "tx_dma_channel", scope: !5423, file: !692, line: 895, type: !4741)
!5431 = !DILocalVariable(name: "rx_dma_channel", scope: !5423, file: !692, line: 895, type: !4741)
!5432 = !DILocalVariable(name: "irq_status", scope: !5423, file: !692, line: 896, type: !61)
!5433 = !DILocalVariable(name: "status", scope: !5423, file: !692, line: 897, type: !4802)
!5434 = !DILocalVariable(name: "nvic_status", scope: !5423, file: !692, line: 898, type: !926)
!5435 = !DILocation(line: 0, scope: !5423)
!5436 = !DILocation(line: 900, column: 11, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5423, file: !692, line: 900, column: 9)
!5438 = !DILocation(line: 900, column: 42, scope: !5437)
!5439 = !DILocation(line: 905, column: 18, scope: !5423)
!5440 = !DILocation(line: 906, column: 9, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5423, file: !692, line: 906, column: 9)
!5442 = !DILocation(line: 906, column: 36, scope: !5441)
!5443 = !DILocation(line: 906, column: 9, scope: !5423)
!5444 = !DILocation(line: 911, column: 22, scope: !5423)
!5445 = !DILocation(line: 912, column: 22, scope: !5423)
!5446 = !DILocation(line: 914, column: 32, scope: !5423)
!5447 = !DILocation(line: 914, column: 37, scope: !5423)
!5448 = !DILocation(line: 915, column: 32, scope: !5423)
!5449 = !DILocation(line: 915, column: 36, scope: !5423)
!5450 = !DILocation(line: 917, column: 91, scope: !5423)
!5451 = !DILocation(line: 917, column: 56, scope: !5423)
!5452 = !DILocation(line: 917, column: 5, scope: !5423)
!5453 = !DILocation(line: 918, column: 80, scope: !5423)
!5454 = !DILocation(line: 918, column: 14, scope: !5423)
!5455 = !DILocation(line: 919, column: 16, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5423, file: !692, line: 919, column: 9)
!5457 = !DILocation(line: 919, column: 9, scope: !5423)
!5458 = !DILocation(line: 920, column: 9, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5456, file: !692, line: 919, column: 28)
!5460 = !DILocation(line: 921, column: 9, scope: !5459)
!5461 = !DILocation(line: 924, column: 97, scope: !5423)
!5462 = !DILocation(line: 924, column: 56, scope: !5423)
!5463 = !DILocation(line: 924, column: 5, scope: !5423)
!5464 = !DILocation(line: 925, column: 80, scope: !5423)
!5465 = !DILocation(line: 925, column: 14, scope: !5423)
!5466 = !DILocation(line: 926, column: 16, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5423, file: !692, line: 926, column: 9)
!5468 = !DILocation(line: 926, column: 9, scope: !5423)
!5469 = !DILocation(line: 927, column: 9, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5467, file: !692, line: 926, column: 28)
!5471 = !DILocation(line: 928, column: 9, scope: !5470)
!5472 = !DILocation(line: 931, column: 49, scope: !5423)
!5473 = !DILocation(line: 931, column: 19, scope: !5423)
!5474 = !DILocation(line: 932, column: 21, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5423, file: !692, line: 932, column: 9)
!5476 = !DILocation(line: 932, column: 9, scope: !5423)
!5477 = !DILocation(line: 933, column: 9, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5475, file: !692, line: 932, column: 44)
!5479 = !DILocation(line: 934, column: 9, scope: !5478)
!5480 = !DILocation(line: 938, column: 5, scope: !5423)
!5481 = !DILocation(line: 940, column: 32, scope: !5423)
!5482 = !DILocation(line: 944, column: 5, scope: !5423)
!5483 = !DILocation(line: 945, column: 1, scope: !5423)
!5484 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !692, file: !692, line: 303, type: !5485, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5488)
!5485 = !DISubroutineType(types: !5486)
!5486 = !{null, !5487, !88}
!5487 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !702, line: 225, baseType: !779)
!5488 = !{!5489, !5490, !5491}
!5489 = !DILocalVariable(name: "event", arg: 1, scope: !5484, file: !692, line: 303, type: !5487)
!5490 = !DILocalVariable(name: "user_data", arg: 2, scope: !5484, file: !692, line: 303, type: !88)
!5491 = !DILocalVariable(name: "callback_data", scope: !5484, file: !692, line: 305, type: !784)
!5492 = !DILocation(line: 0, scope: !5484)
!5493 = !DILocation(line: 307, column: 24, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5484, file: !692, line: 307, column: 9)
!5495 = !DILocation(line: 0, scope: !5494)
!5496 = !DILocation(line: 307, column: 9, scope: !5484)
!5497 = !DILocation(line: 308, column: 9, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5494, file: !692, line: 307, column: 39)
!5499 = !DILocation(line: 309, column: 5, scope: !5498)
!5500 = !DILocation(line: 310, column: 9, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5494, file: !692, line: 309, column: 12)
!5502 = !DILocation(line: 312, column: 1, scope: !5484)
!5503 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !692, file: !692, line: 852, type: !4911, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5504)
!5504 = !{!5505, !5506, !5507, !5508, !5509}
!5505 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5503, file: !692, line: 852, type: !791)
!5506 = !DILocalVariable(name: "uartx", scope: !5503, file: !692, line: 854, type: !4746)
!5507 = !DILocalVariable(name: "tx_dma_channel", scope: !5503, file: !692, line: 855, type: !4741)
!5508 = !DILocalVariable(name: "rx_dma_channel", scope: !5503, file: !692, line: 855, type: !4741)
!5509 = !DILocalVariable(name: "status", scope: !5503, file: !692, line: 856, type: !4802)
!5510 = !DILocation(line: 0, scope: !5503)
!5511 = !DILocation(line: 858, column: 13, scope: !5503)
!5512 = !DILocation(line: 859, column: 22, scope: !5503)
!5513 = !DILocation(line: 860, column: 22, scope: !5503)
!5514 = !DILocation(line: 866, column: 5, scope: !5503)
!5515 = !DILocation(line: 867, column: 25, scope: !5503)
!5516 = !DILocation(line: 867, column: 5, scope: !5503)
!5517 = !DILocation(line: 868, column: 14, scope: !5503)
!5518 = !DILocation(line: 869, column: 16, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5503, file: !692, line: 869, column: 9)
!5520 = !DILocation(line: 869, column: 9, scope: !5503)
!5521 = !DILocation(line: 870, column: 9, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5519, file: !692, line: 869, column: 28)
!5523 = !DILocation(line: 873, column: 14, scope: !5503)
!5524 = !DILocation(line: 874, column: 16, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5503, file: !692, line: 874, column: 9)
!5526 = !DILocation(line: 874, column: 9, scope: !5503)
!5527 = !DILocation(line: 875, column: 9, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5525, file: !692, line: 874, column: 28)
!5529 = !DILocation(line: 878, column: 14, scope: !5503)
!5530 = !DILocation(line: 879, column: 16, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5503, file: !692, line: 879, column: 9)
!5532 = !DILocation(line: 879, column: 9, scope: !5503)
!5533 = !DILocation(line: 880, column: 9, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5531, file: !692, line: 879, column: 28)
!5535 = !DILocation(line: 883, column: 14, scope: !5503)
!5536 = !DILocation(line: 884, column: 16, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5503, file: !692, line: 884, column: 9)
!5538 = !DILocation(line: 884, column: 9, scope: !5503)
!5539 = !DILocation(line: 885, column: 9, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5537, file: !692, line: 884, column: 28)
!5541 = !DILocation(line: 888, column: 5, scope: !5503)
!5542 = !DILocation(line: 889, column: 1, scope: !5503)
!5543 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !692, file: !692, line: 947, type: !5320, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5544)
!5544 = !{!5545, !5546, !5547, !5548}
!5545 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5543, file: !692, line: 947, type: !791)
!5546 = !DILocalVariable(name: "channel", scope: !5543, file: !692, line: 949, type: !4741)
!5547 = !DILocalVariable(name: "roomleft", scope: !5543, file: !692, line: 950, type: !61)
!5548 = !DILocalVariable(name: "status", scope: !5543, file: !692, line: 951, type: !4802)
!5549 = !DILocation(line: 0, scope: !5543)
!5550 = !DILocation(line: 950, column: 5, scope: !5543)
!5551 = !DILocation(line: 953, column: 10, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5543, file: !692, line: 953, column: 9)
!5553 = !DILocation(line: 953, column: 9, scope: !5543)
!5554 = !DILocation(line: 957, column: 9, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5543, file: !692, line: 957, column: 9)
!5556 = !DILocation(line: 957, column: 36, scope: !5555)
!5557 = !DILocation(line: 957, column: 9, scope: !5543)
!5558 = !DILocation(line: 961, column: 15, scope: !5543)
!5559 = !DILocation(line: 962, column: 14, scope: !5543)
!5560 = !DILocation(line: 963, column: 16, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5543, file: !692, line: 963, column: 9)
!5562 = !DILocation(line: 963, column: 9, scope: !5543)
!5563 = !DILocation(line: 964, column: 9, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5561, file: !692, line: 963, column: 28)
!5565 = !DILocation(line: 968, column: 12, scope: !5543)
!5566 = !DILocation(line: 968, column: 5, scope: !5543)
!5567 = !DILocation(line: 969, column: 1, scope: !5543)
!5568 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !692, file: !692, line: 971, type: !5320, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5569)
!5569 = !{!5570, !5571, !5572, !5573}
!5570 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5568, file: !692, line: 971, type: !791)
!5571 = !DILocalVariable(name: "channel", scope: !5568, file: !692, line: 973, type: !4741)
!5572 = !DILocalVariable(name: "avail", scope: !5568, file: !692, line: 974, type: !61)
!5573 = !DILocalVariable(name: "status", scope: !5568, file: !692, line: 975, type: !4802)
!5574 = !DILocation(line: 0, scope: !5568)
!5575 = !DILocation(line: 974, column: 5, scope: !5568)
!5576 = !DILocation(line: 977, column: 10, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5568, file: !692, line: 977, column: 9)
!5578 = !DILocation(line: 977, column: 9, scope: !5568)
!5579 = !DILocation(line: 981, column: 9, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5568, file: !692, line: 981, column: 9)
!5581 = !DILocation(line: 981, column: 36, scope: !5580)
!5582 = !DILocation(line: 981, column: 9, scope: !5568)
!5583 = !DILocation(line: 985, column: 15, scope: !5568)
!5584 = !DILocation(line: 986, column: 14, scope: !5568)
!5585 = !DILocation(line: 987, column: 16, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5568, file: !692, line: 987, column: 9)
!5587 = !DILocation(line: 987, column: 9, scope: !5568)
!5588 = !DILocation(line: 988, column: 9, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5586, file: !692, line: 987, column: 28)
!5590 = !DILocation(line: 992, column: 12, scope: !5568)
!5591 = !DILocation(line: 992, column: 5, scope: !5568)
!5592 = !DILocation(line: 993, column: 1, scope: !5568)
!5593 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !692, file: !692, line: 995, type: !5107, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5594)
!5594 = !{!5595, !5596}
!5595 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5593, file: !692, line: 995, type: !791)
!5596 = !DILocalVariable(name: "uartx", scope: !5593, file: !692, line: 997, type: !4746)
!5597 = !DILocation(line: 0, scope: !5593)
!5598 = !DILocation(line: 999, column: 10, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5593, file: !692, line: 999, column: 9)
!5600 = !DILocation(line: 999, column: 9, scope: !5593)
!5601 = !DILocation(line: 1003, column: 9, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5593, file: !692, line: 1003, column: 9)
!5603 = !DILocation(line: 1003, column: 36, scope: !5602)
!5604 = !DILocation(line: 1003, column: 9, scope: !5593)
!5605 = !DILocation(line: 1007, column: 13, scope: !5593)
!5606 = !DILocation(line: 1009, column: 5, scope: !5593)
!5607 = !DILocation(line: 1015, column: 5, scope: !5593)
!5608 = !DILocation(line: 1016, column: 1, scope: !5593)
!5609 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !692, file: !692, line: 1018, type: !5610, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5612)
!5610 = !DISubroutineType(types: !5611)
!5611 = !{!4939, !791, !395, !395, !395}
!5612 = !{!5613, !5614, !5615, !5616, !5617}
!5613 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5609, file: !692, line: 1018, type: !791)
!5614 = !DILocalVariable(name: "xon", arg: 2, scope: !5609, file: !692, line: 1019, type: !395)
!5615 = !DILocalVariable(name: "xoff", arg: 3, scope: !5609, file: !692, line: 1020, type: !395)
!5616 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5609, file: !692, line: 1021, type: !395)
!5617 = !DILocalVariable(name: "uartx", scope: !5609, file: !692, line: 1023, type: !4746)
!5618 = !DILocation(line: 0, scope: !5609)
!5619 = !DILocation(line: 1025, column: 10, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5609, file: !692, line: 1025, column: 9)
!5621 = !DILocation(line: 1025, column: 9, scope: !5609)
!5622 = !DILocation(line: 1029, column: 9, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5609, file: !692, line: 1029, column: 9)
!5624 = !DILocation(line: 1029, column: 36, scope: !5623)
!5625 = !DILocation(line: 1029, column: 9, scope: !5609)
!5626 = !DILocation(line: 1033, column: 13, scope: !5609)
!5627 = !DILocation(line: 1035, column: 5, scope: !5609)
!5628 = !DILocation(line: 1044, column: 5, scope: !5609)
!5629 = !DILocation(line: 1045, column: 1, scope: !5609)
!5630 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !692, file: !692, line: 1047, type: !5107, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5631)
!5631 = !{!5632, !5633}
!5632 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5630, file: !692, line: 1047, type: !791)
!5633 = !DILocalVariable(name: "uartx", scope: !5630, file: !692, line: 1049, type: !4746)
!5634 = !DILocation(line: 0, scope: !5630)
!5635 = !DILocation(line: 1051, column: 10, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5630, file: !692, line: 1051, column: 9)
!5637 = !DILocation(line: 1051, column: 9, scope: !5630)
!5638 = !DILocation(line: 1055, column: 9, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5630, file: !692, line: 1055, column: 9)
!5640 = !DILocation(line: 1055, column: 36, scope: !5639)
!5641 = !DILocation(line: 1055, column: 9, scope: !5630)
!5642 = !DILocation(line: 1059, column: 13, scope: !5630)
!5643 = !DILocation(line: 1061, column: 5, scope: !5630)
!5644 = !DILocation(line: 1067, column: 5, scope: !5630)
!5645 = !DILocation(line: 1068, column: 1, scope: !5630)
!5646 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !692, file: !692, line: 1071, type: !5647, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !5651)
!5647 = !DISubroutineType(types: !5648)
!5648 = !{!4939, !791, !5649}
!5649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5650, size: 32)
!5650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !814)
!5651 = !{!5652, !5653, !5654, !5655, !5661, !5662, !5663}
!5652 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5646, file: !692, line: 1071, type: !791)
!5653 = !DILocalVariable(name: "dma_config", arg: 2, scope: !5646, file: !692, line: 1071, type: !5649)
!5654 = !DILocalVariable(name: "irq_status", scope: !5646, file: !692, line: 1073, type: !61)
!5655 = !DILocalVariable(name: "internal_dma_config", scope: !5646, file: !692, line: 1074, type: !5656)
!5656 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !702, line: 283, baseType: !5657)
!5657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !702, line: 280, size: 64, elements: !5658)
!5658 = !{!5659, !5660}
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !5657, file: !702, line: 281, baseType: !61, size: 32)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5657, file: !702, line: 282, baseType: !61, size: 32, offset: 32)
!5661 = !DILocalVariable(name: "tx_dma_channel", scope: !5646, file: !692, line: 1075, type: !4741)
!5662 = !DILocalVariable(name: "rx_dma_channel", scope: !5646, file: !692, line: 1075, type: !4741)
!5663 = !DILocalVariable(name: "status", scope: !5646, file: !692, line: 1076, type: !4802)
!5664 = !DILocation(line: 0, scope: !5646)
!5665 = !DILocation(line: 1074, column: 5, scope: !5646)
!5666 = !DILocation(line: 1074, column: 19, scope: !5646)
!5667 = !DILocation(line: 1078, column: 10, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5646, file: !692, line: 1078, column: 9)
!5669 = !DILocation(line: 1078, column: 9, scope: !5646)
!5670 = !DILocation(line: 1081, column: 22, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5646, file: !692, line: 1081, column: 9)
!5672 = !DILocation(line: 1081, column: 40, scope: !5671)
!5673 = !DILocation(line: 1081, column: 49, scope: !5671)
!5674 = !DILocation(line: 1082, column: 22, scope: !5671)
!5675 = !DILocation(line: 1082, column: 43, scope: !5671)
!5676 = !DILocation(line: 1081, column: 9, scope: !5646)
!5677 = !DILocation(line: 1085, column: 22, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5646, file: !692, line: 1085, column: 9)
!5679 = !DILocation(line: 1085, column: 45, scope: !5678)
!5680 = !DILocation(line: 1085, column: 76, scope: !5678)
!5681 = !DILocation(line: 1086, column: 22, scope: !5678)
!5682 = !DILocation(line: 1086, column: 48, scope: !5678)
!5683 = !DILocation(line: 1086, column: 79, scope: !5678)
!5684 = !DILocation(line: 1090, column: 22, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5646, file: !692, line: 1090, column: 9)
!5686 = !DILocation(line: 1090, column: 48, scope: !5685)
!5687 = !DILocation(line: 1090, column: 79, scope: !5685)
!5688 = !DILocation(line: 1091, column: 22, scope: !5685)
!5689 = !DILocation(line: 1091, column: 51, scope: !5685)
!5690 = !DILocation(line: 1091, column: 82, scope: !5685)
!5691 = !DILocation(line: 1092, column: 22, scope: !5685)
!5692 = !DILocation(line: 1092, column: 47, scope: !5685)
!5693 = !DILocation(line: 1092, column: 78, scope: !5685)
!5694 = !DILocation(line: 1098, column: 9, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5646, file: !692, line: 1098, column: 9)
!5696 = !DILocation(line: 1098, column: 36, scope: !5695)
!5697 = !DILocation(line: 1098, column: 9, scope: !5646)
!5698 = !DILocation(line: 1102, column: 22, scope: !5646)
!5699 = !DILocation(line: 1103, column: 22, scope: !5646)
!5700 = !DILocation(line: 1105, column: 14, scope: !5646)
!5701 = !DILocation(line: 1106, column: 16, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5646, file: !692, line: 1106, column: 9)
!5703 = !DILocation(line: 1106, column: 9, scope: !5646)
!5704 = !DILocation(line: 1107, column: 9, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5702, file: !692, line: 1106, column: 28)
!5706 = !DILocation(line: 1110, column: 62, scope: !5646)
!5707 = !DILocation(line: 1110, column: 40, scope: !5646)
!5708 = !DILocation(line: 1110, column: 25, scope: !5646)
!5709 = !DILocation(line: 1110, column: 38, scope: !5646)
!5710 = !DILocation(line: 1111, column: 44, scope: !5646)
!5711 = !DILocation(line: 1111, column: 25, scope: !5646)
!5712 = !DILocation(line: 1111, column: 30, scope: !5646)
!5713 = !DILocation(line: 1112, column: 14, scope: !5646)
!5714 = !DILocation(line: 1113, column: 16, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5646, file: !692, line: 1113, column: 9)
!5716 = !DILocation(line: 1113, column: 9, scope: !5646)
!5717 = !DILocation(line: 1114, column: 9, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5715, file: !692, line: 1113, column: 28)
!5719 = !DILocation(line: 1117, column: 61, scope: !5646)
!5720 = !DILocation(line: 1117, column: 14, scope: !5646)
!5721 = !DILocation(line: 1118, column: 16, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5646, file: !692, line: 1118, column: 9)
!5723 = !DILocation(line: 1118, column: 9, scope: !5646)
!5724 = !DILocation(line: 1119, column: 9, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5722, file: !692, line: 1118, column: 28)
!5726 = !DILocation(line: 1123, column: 14, scope: !5646)
!5727 = !DILocation(line: 1124, column: 16, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5646, file: !692, line: 1124, column: 9)
!5729 = !DILocation(line: 1124, column: 9, scope: !5646)
!5730 = !DILocation(line: 1125, column: 9, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5728, file: !692, line: 1124, column: 28)
!5732 = !DILocation(line: 1128, column: 62, scope: !5646)
!5733 = !DILocation(line: 1128, column: 40, scope: !5646)
!5734 = !DILocation(line: 1128, column: 38, scope: !5646)
!5735 = !DILocation(line: 1129, column: 44, scope: !5646)
!5736 = !DILocation(line: 1129, column: 30, scope: !5646)
!5737 = !DILocation(line: 1130, column: 14, scope: !5646)
!5738 = !DILocation(line: 1131, column: 16, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5646, file: !692, line: 1131, column: 9)
!5740 = !DILocation(line: 1131, column: 9, scope: !5646)
!5741 = !DILocation(line: 1132, column: 9, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5739, file: !692, line: 1131, column: 28)
!5743 = !DILocation(line: 1135, column: 61, scope: !5646)
!5744 = !DILocation(line: 1135, column: 14, scope: !5646)
!5745 = !DILocation(line: 1136, column: 16, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5646, file: !692, line: 1136, column: 9)
!5747 = !DILocation(line: 1136, column: 9, scope: !5646)
!5748 = !DILocation(line: 1137, column: 9, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5746, file: !692, line: 1136, column: 28)
!5750 = !DILocation(line: 1140, column: 64, scope: !5646)
!5751 = !DILocation(line: 1140, column: 14, scope: !5646)
!5752 = !DILocation(line: 1141, column: 16, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5646, file: !692, line: 1141, column: 9)
!5754 = !DILocation(line: 1141, column: 9, scope: !5646)
!5755 = !DILocation(line: 1142, column: 9, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5753, file: !692, line: 1141, column: 28)
!5757 = !DILocation(line: 1146, column: 18, scope: !5646)
!5758 = !DILocation(line: 1147, column: 66, scope: !5646)
!5759 = !DILocation(line: 1147, column: 34, scope: !5646)
!5760 = !DILocation(line: 1147, column: 52, scope: !5646)
!5761 = !DILocation(line: 1148, column: 71, scope: !5646)
!5762 = !DILocation(line: 1148, column: 34, scope: !5646)
!5763 = !DILocation(line: 1148, column: 57, scope: !5646)
!5764 = !DILocation(line: 1149, column: 74, scope: !5646)
!5765 = !DILocation(line: 1149, column: 34, scope: !5646)
!5766 = !DILocation(line: 1149, column: 60, scope: !5646)
!5767 = !DILocation(line: 1150, column: 73, scope: !5646)
!5768 = !DILocation(line: 1150, column: 34, scope: !5646)
!5769 = !DILocation(line: 1150, column: 59, scope: !5646)
!5770 = !DILocation(line: 1151, column: 69, scope: !5646)
!5771 = !DILocation(line: 1151, column: 34, scope: !5646)
!5772 = !DILocation(line: 1151, column: 55, scope: !5646)
!5773 = !DILocation(line: 1152, column: 74, scope: !5646)
!5774 = !DILocation(line: 1152, column: 34, scope: !5646)
!5775 = !DILocation(line: 1152, column: 60, scope: !5646)
!5776 = !DILocation(line: 1153, column: 77, scope: !5646)
!5777 = !DILocation(line: 1153, column: 34, scope: !5646)
!5778 = !DILocation(line: 1153, column: 63, scope: !5646)
!5779 = !DILocation(line: 1154, column: 5, scope: !5646)
!5780 = !DILocation(line: 1156, column: 5, scope: !5646)
!5781 = !DILocation(line: 1157, column: 1, scope: !5646)
!5782 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !2570, file: !2570, line: 52, type: !5783, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5840)
!5783 = !DISubroutineType(types: !5784)
!5784 = !{null, !5785, !61}
!5785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5786, size: 32)
!5786 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !5787)
!5787 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !5788)
!5788 = !{!5789, !5795, !5800, !5806, !5807, !5812, !5817, !5818, !5823, !5824, !5825, !5826, !5827, !5828, !5829, !5830, !5831, !5832, !5833, !5834, !5835, !5836, !5837, !5838, !5839}
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !5787, file: !56, line: 547, baseType: !5790, size: 32)
!5790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5787, file: !56, line: 543, size: 32, elements: !5791)
!5791 = !{!5792, !5793, !5794}
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !5790, file: !56, line: 544, baseType: !272, size: 32)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !5790, file: !56, line: 545, baseType: !60, size: 32)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !5790, file: !56, line: 546, baseType: !60, size: 32)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !5787, file: !56, line: 551, baseType: !5796, size: 32, offset: 32)
!5796 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5787, file: !56, line: 548, size: 32, elements: !5797)
!5797 = !{!5798, !5799}
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !5796, file: !56, line: 549, baseType: !60, size: 32)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !5796, file: !56, line: 550, baseType: !60, size: 32)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !5787, file: !56, line: 556, baseType: !5801, size: 32, offset: 64)
!5801 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5787, file: !56, line: 552, size: 32, elements: !5802)
!5802 = !{!5803, !5804, !5805}
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !5801, file: !56, line: 553, baseType: !272, size: 32)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !5801, file: !56, line: 554, baseType: !60, size: 32)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !5801, file: !56, line: 555, baseType: !60, size: 32)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !5787, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !5787, file: !56, line: 561, baseType: !5808, size: 32, offset: 128)
!5808 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5787, file: !56, line: 558, size: 32, elements: !5809)
!5809 = !{!5810, !5811}
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !5808, file: !56, line: 559, baseType: !60, size: 32)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !5808, file: !56, line: 560, baseType: !60, size: 32)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !5787, file: !56, line: 565, baseType: !5813, size: 32, offset: 160)
!5813 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5787, file: !56, line: 562, size: 32, elements: !5814)
!5814 = !{!5815, !5816}
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !5813, file: !56, line: 563, baseType: !272, size: 32)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !5813, file: !56, line: 564, baseType: !60, size: 32)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !5787, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !5787, file: !56, line: 570, baseType: !5819, size: 32, offset: 224)
!5819 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5787, file: !56, line: 567, size: 32, elements: !5820)
!5820 = !{!5821, !5822}
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !5819, file: !56, line: 568, baseType: !60, size: 32)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !5819, file: !56, line: 569, baseType: !60, size: 32)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !5787, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !5787, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !5787, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !5787, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !5787, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !5787, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !5787, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !5787, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !5787, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !5787, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !5787, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !5787, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !5787, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !5787, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !5787, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !5787, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !5787, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!5840 = !{!5841, !5842, !5843, !5844, !5845, !5846, !5847, !5848, !5849, !5850, !5851, !5855}
!5841 = !DILocalVariable(name: "uartx", arg: 1, scope: !5782, file: !2570, line: 52, type: !5785)
!5842 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !5782, file: !2570, line: 52, type: !61)
!5843 = !DILocalVariable(name: "uart_clock", scope: !5782, file: !2570, line: 54, type: !61)
!5844 = !DILocalVariable(name: "integer", scope: !5782, file: !2570, line: 54, type: !61)
!5845 = !DILocalVariable(name: "remainder", scope: !5782, file: !2570, line: 54, type: !61)
!5846 = !DILocalVariable(name: "fraction", scope: !5782, file: !2570, line: 54, type: !61)
!5847 = !DILocalVariable(name: "dll_dlm", scope: !5782, file: !2570, line: 55, type: !61)
!5848 = !DILocalVariable(name: "sample_count", scope: !5782, file: !2570, line: 55, type: !61)
!5849 = !DILocalVariable(name: "sample_point", scope: !5782, file: !2570, line: 55, type: !61)
!5850 = !DILocalVariable(name: "temp_lcr", scope: !5782, file: !2570, line: 55, type: !61)
!5851 = !DILocalVariable(name: "fraction_L_mapping", scope: !5782, file: !2570, line: 56, type: !5852)
!5852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !5853)
!5853 = !{!5854}
!5854 = !DISubrange(count: 10)
!5855 = !DILocalVariable(name: "fraction_M_mapping", scope: !5782, file: !2570, line: 57, type: !5852)
!5856 = !DILocation(line: 0, scope: !5782)
!5857 = !DILocation(line: 56, column: 14, scope: !5782)
!5858 = !DILocation(line: 57, column: 5, scope: !5782)
!5859 = !DILocation(line: 57, column: 14, scope: !5782)
!5860 = !DILocation(line: 59, column: 12, scope: !5782)
!5861 = !DILocation(line: 59, column: 23, scope: !5782)
!5862 = !DILocation(line: 60, column: 12, scope: !5782)
!5863 = !DILocation(line: 60, column: 22, scope: !5782)
!5864 = !DILocation(line: 61, column: 12, scope: !5782)
!5865 = !DILocation(line: 61, column: 22, scope: !5782)
!5866 = !DILocation(line: 63, column: 9, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5782, file: !2570, line: 63, column: 9)
!5868 = !DILocation(line: 63, column: 9, scope: !5782)
!5869 = !DILocation(line: 64, column: 22, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5867, file: !2570, line: 63, column: 37)
!5871 = !DILocation(line: 64, column: 45, scope: !5870)
!5872 = !DILocation(line: 65, column: 5, scope: !5870)
!5873 = !DILocation(line: 0, scope: !5867)
!5874 = !DILocation(line: 69, column: 45, scope: !5782)
!5875 = !DILocation(line: 69, column: 26, scope: !5782)
!5876 = !DILocation(line: 70, column: 30, scope: !5782)
!5877 = !DILocation(line: 70, column: 36, scope: !5782)
!5878 = !DILocation(line: 70, column: 63, scope: !5782)
!5879 = !DILocation(line: 71, column: 20, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5782, file: !2570, line: 71, column: 9)
!5881 = !DILocation(line: 71, column: 26, scope: !5880)
!5882 = !DILocation(line: 77, column: 5, scope: !5782)
!5883 = !DILocation(line: 77, column: 25, scope: !5782)
!5884 = !DILocation(line: 78, column: 16, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5782, file: !2570, line: 77, column: 32)
!5886 = distinct !{!5886, !5882, !5887}
!5887 = !DILocation(line: 80, column: 5, scope: !5782)
!5888 = !DILocation(line: 82, column: 35, scope: !5782)
!5889 = !DILocation(line: 82, column: 66, scope: !5782)
!5890 = !DILocation(line: 84, column: 18, scope: !5782)
!5891 = !DILocation(line: 85, column: 34, scope: !5782)
!5892 = !DILocation(line: 85, column: 39, scope: !5782)
!5893 = !DILocation(line: 87, column: 12, scope: !5782)
!5894 = !DILocation(line: 87, column: 22, scope: !5782)
!5895 = !DILocation(line: 89, column: 23, scope: !5782)
!5896 = !DILocation(line: 90, column: 27, scope: !5782)
!5897 = !DILocation(line: 90, column: 16, scope: !5782)
!5898 = !DILocation(line: 91, column: 38, scope: !5782)
!5899 = !DILocation(line: 91, column: 24, scope: !5782)
!5900 = !DILocation(line: 91, column: 28, scope: !5782)
!5901 = !DILocation(line: 92, column: 35, scope: !5782)
!5902 = !DILocation(line: 92, column: 41, scope: !5782)
!5903 = !DILocation(line: 92, column: 20, scope: !5782)
!5904 = !DILocation(line: 92, column: 24, scope: !5782)
!5905 = !DILocation(line: 93, column: 16, scope: !5782)
!5906 = !DILocation(line: 95, column: 12, scope: !5782)
!5907 = !DILocation(line: 95, column: 25, scope: !5782)
!5908 = !DILocation(line: 96, column: 12, scope: !5782)
!5909 = !DILocation(line: 96, column: 25, scope: !5782)
!5910 = !DILocation(line: 98, column: 24, scope: !5782)
!5911 = !DILocation(line: 98, column: 22, scope: !5782)
!5912 = !DILocation(line: 99, column: 24, scope: !5782)
!5913 = !DILocation(line: 99, column: 22, scope: !5782)
!5914 = !DILocation(line: 101, column: 25, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5782, file: !2570, line: 101, column: 9)
!5916 = !DILocation(line: 101, column: 9, scope: !5782)
!5917 = !DILocation(line: 102, column: 16, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5915, file: !2570, line: 101, column: 37)
!5919 = !DILocation(line: 102, column: 22, scope: !5918)
!5920 = !DILocation(line: 103, column: 5, scope: !5918)
!5921 = !DILocation(line: 104, column: 1, scope: !5782)
!5922 = distinct !DISubprogram(name: "uart_set_format", scope: !2570, file: !2570, line: 106, type: !5923, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5925)
!5923 = !DISubroutineType(types: !5924)
!5924 = !{null, !5785, !4990, !4992, !4994}
!5925 = !{!5926, !5927, !5928, !5929, !5930}
!5926 = !DILocalVariable(name: "uartx", arg: 1, scope: !5922, file: !2570, line: 106, type: !5785)
!5927 = !DILocalVariable(name: "word_length", arg: 2, scope: !5922, file: !2570, line: 107, type: !4990)
!5928 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !5922, file: !2570, line: 108, type: !4992)
!5929 = !DILocalVariable(name: "parity", arg: 4, scope: !5922, file: !2570, line: 109, type: !4994)
!5930 = !DILocalVariable(name: "byte", scope: !5922, file: !2570, line: 111, type: !1087)
!5931 = !DILocation(line: 0, scope: !5922)
!5932 = !DILocation(line: 114, column: 19, scope: !5922)
!5933 = !DILocation(line: 115, column: 16, scope: !5922)
!5934 = !DILocation(line: 118, column: 10, scope: !5922)
!5935 = !DILocation(line: 119, column: 5, scope: !5922)
!5936 = !DILocation(line: 124, column: 18, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5922, file: !2570, line: 119, column: 26)
!5938 = !DILocation(line: 125, column: 13, scope: !5937)
!5939 = !DILocation(line: 127, column: 18, scope: !5937)
!5940 = !DILocation(line: 128, column: 13, scope: !5937)
!5941 = !DILocation(line: 130, column: 18, scope: !5937)
!5942 = !DILocation(line: 131, column: 13, scope: !5937)
!5943 = !DILocation(line: 137, column: 10, scope: !5922)
!5944 = !DILocation(line: 138, column: 5, scope: !5922)
!5945 = !DILocation(line: 151, column: 5, scope: !5922)
!5946 = !DILocation(line: 166, column: 18, scope: !5922)
!5947 = !DILocation(line: 166, column: 16, scope: !5922)
!5948 = !DILocation(line: 167, column: 1, scope: !5922)
!5949 = distinct !DISubprogram(name: "uart_put_char_block", scope: !2570, file: !2570, line: 169, type: !5950, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5952)
!5950 = !DISubroutineType(types: !5951)
!5951 = !{null, !5785, !395}
!5952 = !{!5953, !5954, !5955}
!5953 = !DILocalVariable(name: "uartx", arg: 1, scope: !5949, file: !2570, line: 169, type: !5785)
!5954 = !DILocalVariable(name: "byte", arg: 2, scope: !5949, file: !2570, line: 169, type: !395)
!5955 = !DILocalVariable(name: "LSR", scope: !5949, file: !2570, line: 171, type: !1087)
!5956 = !DILocation(line: 0, scope: !5949)
!5957 = !DILocation(line: 173, column: 5, scope: !5949)
!5958 = !DILocation(line: 174, column: 31, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5949, file: !2570, line: 173, column: 15)
!5960 = !DILocation(line: 175, column: 17, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5959, file: !2570, line: 175, column: 13)
!5962 = !DILocation(line: 175, column: 13, scope: !5959)
!5963 = distinct !{!5963, !5957, !5964}
!5964 = !DILocation(line: 179, column: 5, scope: !5949)
!5965 = !DILocation(line: 176, column: 38, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5961, file: !2570, line: 175, column: 39)
!5967 = !DILocation(line: 176, column: 32, scope: !5966)
!5968 = !DILocation(line: 176, column: 36, scope: !5966)
!5969 = !DILocation(line: 180, column: 1, scope: !5949)
!5970 = distinct !DISubprogram(name: "uart_get_char_block", scope: !2570, file: !2570, line: 182, type: !5971, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5973)
!5971 = !DISubroutineType(types: !5972)
!5972 = !{!395, !5785}
!5973 = !{!5974, !5975, !5976}
!5974 = !DILocalVariable(name: "uartx", arg: 1, scope: !5970, file: !2570, line: 182, type: !5785)
!5975 = !DILocalVariable(name: "LSR", scope: !5970, file: !2570, line: 184, type: !1087)
!5976 = !DILocalVariable(name: "byte", scope: !5970, file: !2570, line: 185, type: !395)
!5977 = !DILocation(line: 0, scope: !5970)
!5978 = !DILocation(line: 187, column: 5, scope: !5970)
!5979 = !DILocation(line: 188, column: 31, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5970, file: !2570, line: 187, column: 15)
!5981 = !DILocation(line: 189, column: 17, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5980, file: !2570, line: 189, column: 13)
!5983 = !DILocation(line: 189, column: 13, scope: !5980)
!5984 = distinct !{!5984, !5978, !5985}
!5985 = !DILocation(line: 193, column: 5, scope: !5970)
!5986 = !DILocation(line: 190, column: 48, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5982, file: !2570, line: 189, column: 37)
!5988 = !DILocation(line: 190, column: 20, scope: !5987)
!5989 = !DILocation(line: 195, column: 5, scope: !5970)
!5990 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !2570, file: !2570, line: 198, type: !5991, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5993)
!5991 = !DISubroutineType(types: !5992)
!5992 = !{!61, !5785}
!5993 = !{!5994, !5995, !5996}
!5994 = !DILocalVariable(name: "uartx", arg: 1, scope: !5990, file: !2570, line: 198, type: !5785)
!5995 = !DILocalVariable(name: "LSR", scope: !5990, file: !2570, line: 200, type: !1087)
!5996 = !DILocalVariable(name: "value", scope: !5990, file: !2570, line: 201, type: !61)
!5997 = !DILocation(line: 0, scope: !5990)
!5998 = !DILocation(line: 203, column: 27, scope: !5990)
!5999 = !DILocation(line: 204, column: 13, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5990, file: !2570, line: 204, column: 9)
!6001 = !DILocation(line: 204, column: 9, scope: !5990)
!6002 = !DILocation(line: 205, column: 36, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !6000, file: !2570, line: 204, column: 33)
!6004 = !DILocation(line: 206, column: 5, scope: !6003)
!6005 = !DILocation(line: 0, scope: !6000)
!6006 = !DILocation(line: 210, column: 5, scope: !5990)
!6007 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !2570, file: !2570, line: 213, type: !6008, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !6010)
!6008 = !DISubroutineType(types: !6009)
!6009 = !{null, !5785}
!6010 = !{!6011, !6012, !6013}
!6011 = !DILocalVariable(name: "uartx", arg: 1, scope: !6007, file: !2570, line: 213, type: !5785)
!6012 = !DILocalVariable(name: "EFR", scope: !6007, file: !2570, line: 215, type: !1087)
!6013 = !DILocalVariable(name: "LCR", scope: !6007, file: !2570, line: 215, type: !1087)
!6014 = !DILocation(line: 0, scope: !6007)
!6015 = !DILocation(line: 217, column: 18, scope: !6007)
!6016 = !DILocation(line: 219, column: 16, scope: !6007)
!6017 = !DILocation(line: 220, column: 30, scope: !6007)
!6018 = !DILocation(line: 222, column: 30, scope: !6007)
!6019 = !DILocation(line: 222, column: 28, scope: !6007)
!6020 = !DILocation(line: 223, column: 12, scope: !6007)
!6021 = !DILocation(line: 223, column: 22, scope: !6007)
!6022 = !DILocation(line: 225, column: 16, scope: !6007)
!6023 = !DILocation(line: 226, column: 21, scope: !6007)
!6024 = !DILocation(line: 226, column: 25, scope: !6007)
!6025 = !DILocation(line: 228, column: 18, scope: !6007)
!6026 = !DILocation(line: 228, column: 16, scope: !6007)
!6027 = !DILocation(line: 229, column: 1, scope: !6007)
!6028 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !2570, file: !2570, line: 231, type: !6029, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !6031)
!6029 = !DISubroutineType(types: !6030)
!6030 = !{null, !5785, !395, !395, !395}
!6031 = !{!6032, !6033, !6034, !6035, !6036, !6037}
!6032 = !DILocalVariable(name: "uartx", arg: 1, scope: !6028, file: !2570, line: 231, type: !5785)
!6033 = !DILocalVariable(name: "xon", arg: 2, scope: !6028, file: !2570, line: 232, type: !395)
!6034 = !DILocalVariable(name: "xoff", arg: 3, scope: !6028, file: !2570, line: 233, type: !395)
!6035 = !DILocalVariable(name: "escape_character", arg: 4, scope: !6028, file: !2570, line: 234, type: !395)
!6036 = !DILocalVariable(name: "EFR", scope: !6028, file: !2570, line: 236, type: !1087)
!6037 = !DILocalVariable(name: "LCR", scope: !6028, file: !2570, line: 236, type: !1087)
!6038 = !DILocation(line: 0, scope: !6028)
!6039 = !DILocation(line: 238, column: 18, scope: !6028)
!6040 = !DILocation(line: 240, column: 16, scope: !6028)
!6041 = !DILocation(line: 241, column: 28, scope: !6028)
!6042 = !DILocation(line: 241, column: 21, scope: !6028)
!6043 = !DILocation(line: 241, column: 26, scope: !6028)
!6044 = !DILocation(line: 242, column: 20, scope: !6028)
!6045 = !DILocation(line: 242, column: 12, scope: !6028)
!6046 = !DILocation(line: 242, column: 18, scope: !6028)
!6047 = !DILocation(line: 243, column: 30, scope: !6028)
!6048 = !DILocation(line: 245, column: 30, scope: !6028)
!6049 = !DILocation(line: 245, column: 28, scope: !6028)
!6050 = !DILocation(line: 246, column: 25, scope: !6028)
!6051 = !DILocation(line: 246, column: 12, scope: !6028)
!6052 = !DILocation(line: 246, column: 23, scope: !6028)
!6053 = !DILocation(line: 247, column: 12, scope: !6028)
!6054 = !DILocation(line: 247, column: 22, scope: !6028)
!6055 = !DILocation(line: 249, column: 18, scope: !6028)
!6056 = !DILocation(line: 249, column: 16, scope: !6028)
!6057 = !DILocation(line: 250, column: 1, scope: !6028)
!6058 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !2570, file: !2570, line: 252, type: !6008, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !6059)
!6059 = !{!6060, !6061}
!6060 = !DILocalVariable(name: "uartx", arg: 1, scope: !6058, file: !2570, line: 252, type: !5785)
!6061 = !DILocalVariable(name: "LCR", scope: !6058, file: !2570, line: 254, type: !1087)
!6062 = !DILocation(line: 0, scope: !6058)
!6063 = !DILocation(line: 256, column: 18, scope: !6058)
!6064 = !DILocation(line: 258, column: 16, scope: !6058)
!6065 = !DILocation(line: 259, column: 24, scope: !6058)
!6066 = !DILocation(line: 259, column: 28, scope: !6058)
!6067 = !DILocation(line: 261, column: 16, scope: !6058)
!6068 = !DILocation(line: 262, column: 18, scope: !6058)
!6069 = !DILocation(line: 262, column: 16, scope: !6058)
!6070 = !DILocation(line: 263, column: 1, scope: !6058)
!6071 = distinct !DISubprogram(name: "uart_set_fifo", scope: !2570, file: !2570, line: 265, type: !6008, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !6072)
!6072 = !{!6073, !6074, !6075}
!6073 = !DILocalVariable(name: "uartx", arg: 1, scope: !6071, file: !2570, line: 265, type: !5785)
!6074 = !DILocalVariable(name: "EFR", scope: !6071, file: !2570, line: 267, type: !1087)
!6075 = !DILocalVariable(name: "LCR", scope: !6071, file: !2570, line: 267, type: !1087)
!6076 = !DILocation(line: 0, scope: !6071)
!6077 = !DILocation(line: 269, column: 18, scope: !6071)
!6078 = !DILocation(line: 271, column: 16, scope: !6071)
!6079 = !DILocation(line: 272, column: 30, scope: !6071)
!6080 = !DILocation(line: 274, column: 30, scope: !6071)
!6081 = !DILocation(line: 274, column: 28, scope: !6071)
!6082 = !DILocation(line: 276, column: 16, scope: !6071)
!6083 = !DILocation(line: 277, column: 28, scope: !6071)
!6084 = !DILocation(line: 283, column: 18, scope: !6071)
!6085 = !DILocation(line: 283, column: 16, scope: !6071)
!6086 = !DILocation(line: 284, column: 1, scope: !6071)
!6087 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !2570, file: !2570, line: 307, type: !6008, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !6088)
!6088 = !{!6089, !6090, !6091}
!6089 = !DILocalVariable(name: "uartx", arg: 1, scope: !6087, file: !2570, line: 307, type: !5785)
!6090 = !DILocalVariable(name: "IER", scope: !6087, file: !2570, line: 309, type: !1087)
!6091 = !DILocalVariable(name: "LCR", scope: !6087, file: !2570, line: 309, type: !1087)
!6092 = !DILocation(line: 0, scope: !6087)
!6093 = !DILocation(line: 311, column: 18, scope: !6087)
!6094 = !DILocation(line: 313, column: 16, scope: !6087)
!6095 = !DILocation(line: 314, column: 26, scope: !6087)
!6096 = !DILocation(line: 316, column: 26, scope: !6087)
!6097 = !DILocation(line: 316, column: 24, scope: !6087)
!6098 = !DILocation(line: 318, column: 19, scope: !6087)
!6099 = !DILocation(line: 318, column: 16, scope: !6087)
!6100 = !DILocation(line: 319, column: 1, scope: !6087)
!6101 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !2570, file: !2570, line: 321, type: !6102, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !6104)
!6102 = !DISubroutineType(types: !6103)
!6103 = !{null, !5785, !993}
!6104 = !{!6105, !6106, !6107}
!6105 = !DILocalVariable(name: "uartx", arg: 1, scope: !6101, file: !2570, line: 321, type: !5785)
!6106 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6101, file: !2570, line: 321, type: !993)
!6107 = !DILocalVariable(name: "FCR", scope: !6101, file: !2570, line: 323, type: !1087)
!6108 = !DILocation(line: 0, scope: !6101)
!6109 = !DILocation(line: 327, column: 9, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6101, file: !2570, line: 327, column: 9)
!6111 = !DILocation(line: 333, column: 24, scope: !6101)
!6112 = !DILocation(line: 333, column: 28, scope: !6101)
!6113 = !DILocation(line: 334, column: 1, scope: !6101)
!6114 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !2570, file: !2570, line: 336, type: !6115, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !6118)
!6115 = !DISubroutineType(types: !6116)
!6116 = !{!6117, !5785}
!6117 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !786, line: 55, baseType: !842)
!6118 = !{!6119, !6120, !6121, !6122}
!6119 = !DILocalVariable(name: "uartx", arg: 1, scope: !6114, file: !2570, line: 336, type: !5785)
!6120 = !DILocalVariable(name: "IIR", scope: !6114, file: !2570, line: 338, type: !1087)
!6121 = !DILocalVariable(name: "LSR", scope: !6114, file: !2570, line: 338, type: !1087)
!6122 = !DILocalVariable(name: "type", scope: !6114, file: !2570, line: 339, type: !6117)
!6123 = !DILocation(line: 0, scope: !6114)
!6124 = !DILocation(line: 341, column: 30, scope: !6114)
!6125 = !DILocation(line: 342, column: 13, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6114, file: !2570, line: 342, column: 9)
!6127 = !DILocation(line: 342, column: 9, scope: !6114)
!6128 = !DILocation(line: 346, column: 17, scope: !6114)
!6129 = !DILocation(line: 346, column: 5, scope: !6114)
!6130 = !DILocation(line: 350, column: 13, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6114, file: !2570, line: 346, column: 37)
!6132 = !DILocation(line: 353, column: 35, scope: !6131)
!6133 = !DILocation(line: 354, column: 21, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6131, file: !2570, line: 354, column: 17)
!6135 = !DILocation(line: 363, column: 13, scope: !6131)
!6136 = !DILocation(line: 369, column: 1, scope: !6114)
!6137 = distinct !DISubprogram(name: "uart_verify_error", scope: !2570, file: !2570, line: 371, type: !6138, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !6140)
!6138 = !DISubroutineType(types: !6139)
!6139 = !{!993, !5785}
!6140 = !{!6141, !6142, !6143}
!6141 = !DILocalVariable(name: "uartx", arg: 1, scope: !6137, file: !2570, line: 371, type: !5785)
!6142 = !DILocalVariable(name: "LSR", scope: !6137, file: !2570, line: 373, type: !1087)
!6143 = !DILocalVariable(name: "ret", scope: !6137, file: !2570, line: 374, type: !993)
!6144 = !DILocation(line: 0, scope: !6137)
!6145 = !DILocation(line: 376, column: 27, scope: !6137)
!6146 = !DILocation(line: 377, column: 15, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6137, file: !2570, line: 377, column: 9)
!6148 = !DILocation(line: 377, column: 9, scope: !6137)
!6149 = !DILocation(line: 381, column: 5, scope: !6137)
!6150 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !2570, file: !2570, line: 384, type: !6008, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !6151)
!6151 = !{!6152, !6153}
!6152 = !DILocalVariable(name: "uartx", arg: 1, scope: !6150, file: !2570, line: 384, type: !5785)
!6153 = !DILocalVariable(name: "DMA_EN", scope: !6150, file: !2570, line: 386, type: !1087)
!6154 = !DILocation(line: 0, scope: !6150)
!6155 = !DILocation(line: 388, column: 21, scope: !6150)
!6156 = !DILocation(line: 390, column: 1, scope: !6150)
!6157 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !2570, file: !2570, line: 392, type: !6008, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !6158)
!6158 = !{!6159}
!6159 = !DILocalVariable(name: "uartx", arg: 1, scope: !6157, file: !2570, line: 392, type: !5785)
!6160 = !DILocation(line: 0, scope: !6157)
!6161 = !DILocation(line: 394, column: 12, scope: !6157)
!6162 = !DILocation(line: 394, column: 16, scope: !6157)
!6163 = !DILocation(line: 395, column: 24, scope: !6157)
!6164 = !DILocation(line: 395, column: 28, scope: !6157)
!6165 = !DILocation(line: 396, column: 21, scope: !6157)
!6166 = !DILocation(line: 396, column: 26, scope: !6157)
!6167 = !DILocation(line: 397, column: 12, scope: !6157)
!6168 = !DILocation(line: 397, column: 18, scope: !6157)
!6169 = !DILocation(line: 399, column: 16, scope: !6157)
!6170 = !DILocation(line: 400, column: 24, scope: !6157)
!6171 = !DILocation(line: 400, column: 28, scope: !6157)
!6172 = !DILocation(line: 401, column: 20, scope: !6157)
!6173 = !DILocation(line: 401, column: 24, scope: !6157)
!6174 = !DILocation(line: 403, column: 16, scope: !6157)
!6175 = !DILocation(line: 404, column: 24, scope: !6157)
!6176 = !DILocation(line: 405, column: 28, scope: !6157)
!6177 = !DILocation(line: 407, column: 16, scope: !6157)
!6178 = !DILocation(line: 408, column: 28, scope: !6157)
!6179 = !DILocation(line: 409, column: 16, scope: !6157)
!6180 = !DILocation(line: 411, column: 25, scope: !6157)
!6181 = !DILocation(line: 412, column: 22, scope: !6157)
!6182 = !DILocation(line: 412, column: 26, scope: !6157)
!6183 = !DILocation(line: 413, column: 12, scope: !6157)
!6184 = !DILocation(line: 413, column: 24, scope: !6157)
!6185 = !DILocation(line: 414, column: 12, scope: !6157)
!6186 = !DILocation(line: 414, column: 22, scope: !6157)
!6187 = !DILocation(line: 415, column: 12, scope: !6157)
!6188 = !DILocation(line: 415, column: 25, scope: !6157)
!6189 = !DILocation(line: 416, column: 12, scope: !6157)
!6190 = !DILocation(line: 416, column: 25, scope: !6157)
!6191 = !DILocation(line: 417, column: 12, scope: !6157)
!6192 = !DILocation(line: 417, column: 23, scope: !6157)
!6193 = !DILocation(line: 418, column: 12, scope: !6157)
!6194 = !DILocation(line: 418, column: 27, scope: !6157)
!6195 = !DILocation(line: 419, column: 12, scope: !6157)
!6196 = !DILocation(line: 419, column: 18, scope: !6157)
!6197 = !DILocation(line: 420, column: 12, scope: !6157)
!6198 = !DILocation(line: 420, column: 23, scope: !6157)
!6199 = !DILocation(line: 421, column: 12, scope: !6157)
!6200 = !DILocation(line: 421, column: 22, scope: !6157)
!6201 = !DILocation(line: 422, column: 12, scope: !6157)
!6202 = !DILocation(line: 422, column: 21, scope: !6157)
!6203 = !DILocation(line: 423, column: 12, scope: !6157)
!6204 = !DILocation(line: 423, column: 19, scope: !6157)
!6205 = !DILocation(line: 424, column: 23, scope: !6157)
!6206 = !DILocation(line: 425, column: 12, scope: !6157)
!6207 = !DILocation(line: 425, column: 22, scope: !6157)
!6208 = !DILocation(line: 426, column: 12, scope: !6157)
!6209 = !DILocation(line: 426, column: 22, scope: !6157)
!6210 = !DILocation(line: 427, column: 1, scope: !6157)
!6211 = distinct !DISubprogram(name: "uart_query_empty", scope: !2570, file: !2570, line: 429, type: !6008, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !6212)
!6212 = !{!6213}
!6213 = !DILocalVariable(name: "uartx", arg: 1, scope: !6211, file: !2570, line: 429, type: !5785)
!6214 = !DILocation(line: 0, scope: !6211)
!6215 = !DILocation(line: 431, column: 5, scope: !6211)
!6216 = !DILocation(line: 431, column: 31, scope: !6211)
!6217 = !DILocation(line: 431, column: 36, scope: !6211)
!6218 = !DILocation(line: 431, column: 12, scope: !6211)
!6219 = distinct !{!6219, !6215, !6220}
!6220 = !DILocation(line: 431, column: 44, scope: !6211)
!6221 = !DILocation(line: 432, column: 1, scope: !6211)
!6222 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !840, file: !840, line: 134, type: !6223, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !6225)
!6223 = !DISubroutineType(types: !6224)
!6224 = !{!4741, !791, !993}
!6225 = !{!6226, !6227, !6228}
!6226 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6222, file: !840, line: 134, type: !791)
!6227 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6222, file: !840, line: 134, type: !993)
!6228 = !DILocalVariable(name: "dma_channel", scope: !6222, file: !840, line: 136, type: !4741)
!6229 = !DILocation(line: 0, scope: !6222)
!6230 = !DILocation(line: 138, column: 5, scope: !6222)
!6231 = !DILocation(line: 140, column: 17, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6233, file: !840, line: 140, column: 17)
!6233 = distinct !DILexicalBlock(scope: !6222, file: !840, line: 138, column: 24)
!6234 = !DILocation(line: 147, column: 17, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6233, file: !840, line: 147, column: 17)
!6236 = !DILocation(line: 154, column: 17, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6233, file: !840, line: 154, column: 17)
!6238 = !DILocation(line: 161, column: 17, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6233, file: !840, line: 161, column: 17)
!6240 = !DILocation(line: 171, column: 5, scope: !6222)
!6241 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !840, file: !840, line: 174, type: !6242, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !6250)
!6242 = !DISubroutineType(types: !6243)
!6243 = !{null, !4741, !6244}
!6244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6245, size: 32)
!6245 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !786, line: 96, baseType: !6246)
!6246 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !786, line: 93, size: 64, elements: !6247)
!6247 = !{!6248, !6249}
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !6246, file: !786, line: 94, baseType: !91, size: 8)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !6246, file: !786, line: 95, baseType: !791, size: 32, offset: 32)
!6250 = !{!6251, !6252}
!6251 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !6241, file: !840, line: 174, type: !4741)
!6252 = !DILocalVariable(name: "user_data", arg: 2, scope: !6241, file: !840, line: 174, type: !6244)
!6253 = !DILocation(line: 0, scope: !6241)
!6254 = !DILocation(line: 176, column: 5, scope: !6241)
!6255 = !DILocation(line: 0, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6241, file: !840, line: 176, column: 26)
!6257 = !DILocation(line: 212, column: 1, scope: !6241)
!6258 = distinct !DISubprogram(name: "uart_enable_dma", scope: !840, file: !840, line: 214, type: !6259, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !6261)
!6259 = !DISubroutineType(types: !6260)
!6260 = !{null, !853}
!6261 = !{!6262}
!6262 = !DILocalVariable(name: "uartx", arg: 1, scope: !6258, file: !840, line: 214, type: !853)
!6263 = !DILocation(line: 0, scope: !6258)
!6264 = !DILocation(line: 216, column: 12, scope: !6258)
!6265 = !DILocation(line: 216, column: 19, scope: !6258)
!6266 = !DILocation(line: 217, column: 1, scope: !6258)
!6267 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !840, file: !840, line: 219, type: !1005, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !839, retainedNodes: !6268)
!6268 = !{!6269, !6270, !6271, !6272}
!6269 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6267, file: !840, line: 219, type: !916)
!6270 = !DILocalVariable(name: "uart_port", scope: !6267, file: !840, line: 221, type: !791)
!6271 = !DILocalVariable(name: "type", scope: !6267, file: !840, line: 222, type: !6117)
!6272 = !DILocalVariable(name: "uartx", scope: !6267, file: !840, line: 223, type: !853)
!6273 = !DILocation(line: 0, scope: !6267)
!6274 = !DILocation(line: 225, column: 5, scope: !6267)
!6275 = !DILocation(line: 242, column: 13, scope: !6267)
!6276 = !DILocation(line: 243, column: 12, scope: !6267)
!6277 = !DILocation(line: 245, column: 5, scope: !6267)
!6278 = !DILocation(line: 248, column: 13, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6267, file: !840, line: 245, column: 19)
!6280 = !DILocation(line: 249, column: 13, scope: !6279)
!6281 = !DILocation(line: 252, column: 13, scope: !6279)
!6282 = !DILocation(line: 253, column: 13, scope: !6279)
!6283 = !DILocation(line: 263, column: 13, scope: !6279)
!6284 = !DILocation(line: 264, column: 13, scope: !6279)
!6285 = !DILocation(line: 276, column: 13, scope: !6279)
!6286 = !DILocation(line: 278, column: 1, scope: !6267)
!6287 = !DILocation(line: 131, column: 9, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !922, file: !923, line: 131, column: 9)
!6289 = !DILocation(line: 131, column: 9, scope: !922)
!6290 = !DILocation(line: 0, scope: !922)
!6291 = !DILocation(line: 134, column: 49, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6293, file: !923, line: 133, column: 46)
!6293 = distinct !DILexicalBlock(scope: !6294, file: !923, line: 133, column: 9)
!6294 = distinct !DILexicalBlock(scope: !6295, file: !923, line: 133, column: 9)
!6295 = distinct !DILexicalBlock(scope: !6288, file: !923, line: 131, column: 28)
!6296 = !DILocation(line: 134, column: 13, scope: !6292)
!6297 = !DILocation(line: 133, column: 42, scope: !6293)
!6298 = !DILocation(line: 133, column: 23, scope: !6293)
!6299 = !DILocation(line: 133, column: 9, scope: !6294)
!6300 = distinct !{!6300, !6299, !6301}
!6301 = !DILocation(line: 135, column: 9, scope: !6294)
!6302 = !DILocation(line: 136, column: 22, scope: !6295)
!6303 = !DILocation(line: 137, column: 5, scope: !6295)
!6304 = !DILocation(line: 138, column: 5, scope: !922)
!6305 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !932, file: !932, line: 1577, type: !6306, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6308)
!6306 = !DISubroutineType(types: !6307)
!6307 = !{null, !917, !61}
!6308 = !{!6309, !6310}
!6309 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6305, file: !932, line: 1577, type: !917)
!6310 = !DILocalVariable(name: "priority", arg: 2, scope: !6305, file: !932, line: 1577, type: !61)
!6311 = !DILocation(line: 0, scope: !6305)
!6312 = !DILocation(line: 1582, column: 34, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6314, file: !932, line: 1581, column: 8)
!6314 = distinct !DILexicalBlock(scope: !6305, file: !932, line: 1579, column: 6)
!6315 = !DILocation(line: 1582, column: 5, scope: !6313)
!6316 = !DILocation(line: 1582, column: 32, scope: !6313)
!6317 = !DILocation(line: 1583, column: 1, scope: !6305)
!6318 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !923, file: !923, line: 141, type: !6319, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6321)
!6319 = !DISubroutineType(types: !6320)
!6320 = !{!926, !916}
!6321 = !{!6322, !6323}
!6322 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6318, file: !923, line: 141, type: !916)
!6323 = !DILocalVariable(name: "status", scope: !6318, file: !923, line: 143, type: !926)
!6324 = !DILocation(line: 0, scope: !6318)
!6325 = !DILocation(line: 145, column: 40, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6318, file: !923, line: 145, column: 9)
!6327 = !DILocation(line: 149, column: 9, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6326, file: !923, line: 148, column: 12)
!6329 = !DILocation(line: 153, column: 5, scope: !6318)
!6330 = !DILocation(line: 154, column: 1, scope: !6318)
!6331 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !932, file: !932, line: 1494, type: !6332, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6334)
!6332 = !DISubroutineType(types: !6333)
!6333 = !{null, !917}
!6334 = !{!6335}
!6335 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6331, file: !932, line: 1494, type: !917)
!6336 = !DILocation(line: 0, scope: !6331)
!6337 = !DILocation(line: 1497, column: 91, scope: !6331)
!6338 = !DILocation(line: 1497, column: 61, scope: !6331)
!6339 = !DILocation(line: 1497, column: 40, scope: !6331)
!6340 = !DILocation(line: 1497, column: 3, scope: !6331)
!6341 = !DILocation(line: 1497, column: 46, scope: !6331)
!6342 = !DILocation(line: 1498, column: 1, scope: !6331)
!6343 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !923, file: !923, line: 156, type: !6319, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6344)
!6344 = !{!6345, !6346}
!6345 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6343, file: !923, line: 156, type: !916)
!6346 = !DILocalVariable(name: "status", scope: !6343, file: !923, line: 158, type: !926)
!6347 = !DILocation(line: 0, scope: !6343)
!6348 = !DILocation(line: 160, column: 40, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6343, file: !923, line: 160, column: 9)
!6350 = !DILocation(line: 164, column: 9, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6349, file: !923, line: 163, column: 12)
!6352 = !DILocation(line: 168, column: 5, scope: !6343)
!6353 = !DILocation(line: 169, column: 1, scope: !6343)
!6354 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !932, file: !932, line: 1507, type: !6332, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6355)
!6355 = !{!6356}
!6356 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6354, file: !932, line: 1507, type: !917)
!6357 = !DILocation(line: 0, scope: !6354)
!6358 = !DILocation(line: 1509, column: 65, scope: !6354)
!6359 = !DILocation(line: 1509, column: 44, scope: !6354)
!6360 = !DILocation(line: 1509, column: 32, scope: !6354)
!6361 = !DILocation(line: 1509, column: 3, scope: !6354)
!6362 = !DILocation(line: 1509, column: 39, scope: !6354)
!6363 = !DILocation(line: 1510, column: 1, scope: !6354)
!6364 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !923, file: !923, line: 171, type: !6365, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6367)
!6365 = !DISubroutineType(types: !6366)
!6366 = !{!61, !916}
!6367 = !{!6368, !6369}
!6368 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6364, file: !923, line: 171, type: !916)
!6369 = !DILocalVariable(name: "ret", scope: !6364, file: !923, line: 173, type: !61)
!6370 = !DILocation(line: 0, scope: !6364)
!6371 = !DILocation(line: 175, column: 40, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6364, file: !923, line: 175, column: 9)
!6373 = !DILocation(line: 178, column: 15, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6372, file: !923, line: 177, column: 12)
!6375 = !DILocation(line: 181, column: 5, scope: !6364)
!6376 = !DILocation(line: 182, column: 1, scope: !6364)
!6377 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !932, file: !932, line: 1523, type: !6378, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6380)
!6378 = !DISubroutineType(types: !6379)
!6379 = !{!61, !917}
!6380 = !{!6381}
!6381 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6377, file: !932, line: 1523, type: !917)
!6382 = !DILocation(line: 0, scope: !6377)
!6383 = !DILocation(line: 1525, column: 51, scope: !6377)
!6384 = !DILocation(line: 1525, column: 23, scope: !6377)
!6385 = !DILocation(line: 1525, column: 83, scope: !6377)
!6386 = !DILocation(line: 1525, column: 22, scope: !6377)
!6387 = !DILocation(line: 1525, column: 3, scope: !6377)
!6388 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !923, file: !923, line: 184, type: !6319, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6389)
!6389 = !{!6390, !6391}
!6390 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6388, file: !923, line: 184, type: !916)
!6391 = !DILocalVariable(name: "status", scope: !6388, file: !923, line: 186, type: !926)
!6392 = !DILocation(line: 0, scope: !6388)
!6393 = !DILocation(line: 188, column: 40, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6388, file: !923, line: 188, column: 9)
!6395 = !DILocation(line: 192, column: 9, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6394, file: !923, line: 191, column: 12)
!6397 = !DILocation(line: 196, column: 5, scope: !6388)
!6398 = !DILocation(line: 197, column: 1, scope: !6388)
!6399 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !932, file: !932, line: 1535, type: !6332, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6400)
!6400 = !{!6401}
!6401 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6399, file: !932, line: 1535, type: !917)
!6402 = !DILocation(line: 0, scope: !6399)
!6403 = !DILocation(line: 1537, column: 65, scope: !6399)
!6404 = !DILocation(line: 1537, column: 44, scope: !6399)
!6405 = !DILocation(line: 1537, column: 32, scope: !6399)
!6406 = !DILocation(line: 1537, column: 3, scope: !6399)
!6407 = !DILocation(line: 1537, column: 39, scope: !6399)
!6408 = !DILocation(line: 1538, column: 1, scope: !6399)
!6409 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !923, file: !923, line: 199, type: !6319, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6410)
!6410 = !{!6411, !6412}
!6411 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6409, file: !923, line: 199, type: !916)
!6412 = !DILocalVariable(name: "status", scope: !6409, file: !923, line: 201, type: !926)
!6413 = !DILocation(line: 0, scope: !6409)
!6414 = !DILocation(line: 203, column: 40, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6409, file: !923, line: 203, column: 9)
!6416 = !DILocation(line: 207, column: 9, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6415, file: !923, line: 206, column: 12)
!6418 = !DILocation(line: 211, column: 5, scope: !6409)
!6419 = !DILocation(line: 212, column: 1, scope: !6409)
!6420 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !932, file: !932, line: 1547, type: !6332, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6421)
!6421 = !{!6422}
!6422 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6420, file: !932, line: 1547, type: !917)
!6423 = !DILocation(line: 0, scope: !6420)
!6424 = !DILocation(line: 1549, column: 65, scope: !6420)
!6425 = !DILocation(line: 1549, column: 44, scope: !6420)
!6426 = !DILocation(line: 1549, column: 32, scope: !6420)
!6427 = !DILocation(line: 1549, column: 3, scope: !6420)
!6428 = !DILocation(line: 1549, column: 39, scope: !6420)
!6429 = !DILocation(line: 1550, column: 1, scope: !6420)
!6430 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !923, file: !923, line: 214, type: !6431, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6433)
!6431 = !DISubroutineType(types: !6432)
!6432 = !{!926, !916, !61}
!6433 = !{!6434, !6435, !6436}
!6434 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6430, file: !923, line: 214, type: !916)
!6435 = !DILocalVariable(name: "priority", arg: 2, scope: !6430, file: !923, line: 214, type: !61)
!6436 = !DILocalVariable(name: "status", scope: !6430, file: !923, line: 216, type: !926)
!6437 = !DILocation(line: 0, scope: !6430)
!6438 = !DILocation(line: 218, column: 40, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6430, file: !923, line: 218, column: 9)
!6440 = !DILocation(line: 222, column: 9, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6439, file: !923, line: 221, column: 12)
!6442 = !DILocation(line: 226, column: 5, scope: !6430)
!6443 = !DILocation(line: 227, column: 1, scope: !6430)
!6444 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !923, file: !923, line: 229, type: !6365, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6445)
!6445 = !{!6446, !6447}
!6446 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6444, file: !923, line: 229, type: !916)
!6447 = !DILocalVariable(name: "ret", scope: !6444, file: !923, line: 231, type: !61)
!6448 = !DILocation(line: 0, scope: !6444)
!6449 = !DILocation(line: 233, column: 40, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6444, file: !923, line: 233, column: 9)
!6451 = !DILocation(line: 236, column: 15, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6450, file: !923, line: 235, column: 12)
!6453 = !DILocation(line: 239, column: 5, scope: !6444)
!6454 = !DILocation(line: 240, column: 1, scope: !6444)
!6455 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !932, file: !932, line: 1597, type: !6378, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6456)
!6456 = !{!6457}
!6457 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6455, file: !932, line: 1597, type: !917)
!6458 = !DILocation(line: 0, scope: !6455)
!6459 = !DILocation(line: 1603, column: 23, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6461, file: !932, line: 1602, column: 8)
!6461 = distinct !DILexicalBlock(scope: !6455, file: !932, line: 1600, column: 6)
!6462 = !DILocation(line: 1603, column: 60, scope: !6460)
!6463 = !DILocation(line: 1604, column: 1, scope: !6455)
!6464 = distinct !DISubprogram(name: "isrC_main", scope: !923, file: !923, line: 248, type: !924, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6465)
!6465 = !{!6466, !6467}
!6466 = !DILocalVariable(name: "status", scope: !6464, file: !923, line: 250, type: !926)
!6467 = !DILocalVariable(name: "irq_number", scope: !6464, file: !923, line: 251, type: !916)
!6468 = !DILocation(line: 0, scope: !6464)
!6469 = !DILocation(line: 253, column: 5, scope: !6464)
!6470 = !DILocation(line: 255, column: 35, scope: !6464)
!6471 = !DILocation(line: 256, column: 40, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6464, file: !923, line: 256, column: 9)
!6473 = !DILocation(line: 259, column: 48, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6472, file: !923, line: 259, column: 16)
!6475 = !DILocation(line: 259, column: 62, scope: !6474)
!6476 = !DILocation(line: 259, column: 16, scope: !6472)
!6477 = !DILocation(line: 261, column: 9, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6474, file: !923, line: 259, column: 71)
!6479 = !DILocation(line: 262, column: 9, scope: !6478)
!6480 = !DILocation(line: 264, column: 55, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6474, file: !923, line: 263, column: 12)
!6482 = !DILocation(line: 264, column: 41, scope: !6481)
!6483 = !DILocation(line: 264, column: 53, scope: !6481)
!6484 = !DILocation(line: 265, column: 41, scope: !6481)
!6485 = !DILocation(line: 265, column: 9, scope: !6481)
!6486 = !DILocation(line: 269, column: 5, scope: !6464)
!6487 = !DILocation(line: 270, column: 1, scope: !6464)
!6488 = distinct !DISubprogram(name: "get_current_irq", scope: !923, file: !923, line: 242, type: !3823, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6489)
!6489 = !{!6490}
!6490 = !DILocalVariable(name: "irq_num", scope: !6488, file: !923, line: 244, type: !61)
!6491 = !DILocation(line: 244, column: 31, scope: !6488)
!6492 = !DILocation(line: 244, column: 36, scope: !6488)
!6493 = !DILocation(line: 0, scope: !6488)
!6494 = !DILocation(line: 245, column: 21, scope: !6488)
!6495 = !DILocation(line: 245, column: 5, scope: !6488)
!6496 = distinct !DISubprogram(name: "get_pending_irq", scope: !923, file: !923, line: 121, type: !3823, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !293)
!6497 = !DILocation(line: 123, column: 19, scope: !6496)
!6498 = !DILocation(line: 123, column: 51, scope: !6496)
!6499 = !DILocation(line: 123, column: 5, scope: !6496)
!6500 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !923, file: !923, line: 272, type: !6501, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6504)
!6501 = !DISubroutineType(types: !6502)
!6502 = !{!926, !916, !6503}
!6503 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !772, line: 175, baseType: !1004)
!6504 = !{!6505, !6506, !6507}
!6505 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6500, file: !923, line: 272, type: !916)
!6506 = !DILocalVariable(name: "callback", arg: 2, scope: !6500, file: !923, line: 272, type: !6503)
!6507 = !DILocalVariable(name: "mask", scope: !6500, file: !923, line: 274, type: !61)
!6508 = !DILocation(line: 0, scope: !6500)
!6509 = !DILocation(line: 276, column: 40, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6500, file: !923, line: 276, column: 9)
!6511 = !DILocation(line: 280, column: 12, scope: !6500)
!6512 = !DILocation(line: 281, column: 5, scope: !6500)
!6513 = !DILocation(line: 282, column: 37, scope: !6500)
!6514 = !DILocation(line: 282, column: 51, scope: !6500)
!6515 = !DILocation(line: 283, column: 37, scope: !6500)
!6516 = !DILocation(line: 283, column: 49, scope: !6500)
!6517 = !DILocation(line: 284, column: 5, scope: !6500)
!6518 = !DILocation(line: 286, column: 5, scope: !6500)
!6519 = !DILocation(line: 287, column: 1, scope: !6500)
!6520 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !923, file: !923, line: 289, type: !6521, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6523)
!6521 = !DISubroutineType(types: !6522)
!6522 = !{!926, !1055}
!6523 = !{!6524}
!6524 = !DILocalVariable(name: "mask", arg: 1, scope: !6520, file: !923, line: 289, type: !1055)
!6525 = !DILocation(line: 0, scope: !6520)
!6526 = !DILocation(line: 291, column: 13, scope: !6520)
!6527 = !DILocation(line: 291, column: 11, scope: !6520)
!6528 = !DILocation(line: 292, column: 5, scope: !6520)
!6529 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !923, file: !923, line: 295, type: !6530, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !927, retainedNodes: !6532)
!6530 = !DISubroutineType(types: !6531)
!6531 = !{!926, !61}
!6532 = !{!6533}
!6533 = !DILocalVariable(name: "mask", arg: 1, scope: !6529, file: !923, line: 295, type: !61)
!6534 = !DILocation(line: 0, scope: !6529)
!6535 = !DILocation(line: 297, column: 5, scope: !6529)
!6536 = !DILocation(line: 298, column: 5, scope: !6529)
!6537 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2574, file: !2574, line: 51, type: !3823, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6538)
!6538 = !{!6539, !6540}
!6539 = !DILocalVariable(name: "mask", scope: !6537, file: !2574, line: 53, type: !61)
!6540 = !DILocalVariable(name: "priority", scope: !6537, file: !2574, line: 55, type: !61)
!6541 = !DILocation(line: 521, column: 3, scope: !6542, inlinedAt: !6546)
!6542 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !6543, file: !6543, line: 517, type: !3823, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6544)
!6543 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!6544 = !{!6545}
!6545 = !DILocalVariable(name: "result", scope: !6542, file: !6543, line: 519, type: !61)
!6546 = distinct !DILocation(line: 53, column: 21, scope: !6537)
!6547 = !{i64 457576}
!6548 = !DILocation(line: 0, scope: !6542, inlinedAt: !6546)
!6549 = !DILocation(line: 0, scope: !6537)
!6550 = !DILocalVariable(name: "value", arg: 1, scope: !6551, file: !6543, line: 532, type: !61)
!6551 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !6543, file: !6543, line: 532, type: !6552, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6554)
!6552 = !DISubroutineType(types: !6553)
!6553 = !{null, !61}
!6554 = !{!6550}
!6555 = !DILocation(line: 0, scope: !6551, inlinedAt: !6556)
!6556 = distinct !DILocation(line: 56, column: 5, scope: !6537)
!6557 = !DILocation(line: 534, column: 3, scope: !6551, inlinedAt: !6556)
!6558 = !{i64 457909}
!6559 = !DILocation(line: 456, column: 3, scope: !6560, inlinedAt: !6561)
!6560 = distinct !DISubprogram(name: "__DMB", scope: !2689, file: !2689, line: 454, type: !291, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !293)
!6561 = distinct !DILocation(line: 57, column: 5, scope: !6537)
!6562 = !{i64 430665}
!6563 = !DILocation(line: 434, column: 3, scope: !6564, inlinedAt: !6565)
!6564 = distinct !DISubprogram(name: "__ISB", scope: !2689, file: !2689, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !293)
!6565 = distinct !DILocation(line: 58, column: 5, scope: !6537)
!6566 = !{i64 430080}
!6567 = !DILocation(line: 59, column: 5, scope: !6537)
!6568 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2574, file: !2574, line: 62, type: !6552, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6569)
!6569 = !{!6570}
!6570 = !DILocalVariable(name: "mask", arg: 1, scope: !6568, file: !2574, line: 62, type: !61)
!6571 = !DILocation(line: 0, scope: !6568)
!6572 = !DILocation(line: 0, scope: !6551, inlinedAt: !6573)
!6573 = distinct !DILocation(line: 64, column: 5, scope: !6568)
!6574 = !DILocation(line: 534, column: 3, scope: !6551, inlinedAt: !6573)
!6575 = !DILocation(line: 456, column: 3, scope: !6560, inlinedAt: !6576)
!6576 = distinct !DILocation(line: 65, column: 5, scope: !6568)
!6577 = !DILocation(line: 434, column: 3, scope: !6564, inlinedAt: !6578)
!6578 = distinct !DILocation(line: 66, column: 5, scope: !6568)
!6579 = !DILocation(line: 67, column: 1, scope: !6568)
!6580 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !2574, file: !2574, line: 69, type: !291, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6581)
!6581 = !{!6582, !6583}
!6582 = !DILocalVariable(name: "irq_number", scope: !6580, file: !2574, line: 71, type: !916)
!6583 = !DILocalVariable(name: "mask", scope: !6580, file: !2574, line: 72, type: !61)
!6584 = !DILocation(line: 72, column: 21, scope: !6580)
!6585 = !DILocation(line: 0, scope: !6580)
!6586 = !DILocation(line: 73, column: 5, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6580, file: !2574, line: 73, column: 5)
!6588 = !DILocation(line: 74, column: 9, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6590, file: !2574, line: 73, column: 85)
!6590 = distinct !DILexicalBlock(scope: !6587, file: !2574, line: 73, column: 5)
!6591 = !DILocation(line: 73, column: 81, scope: !6590)
!6592 = !DILocation(line: 73, column: 53, scope: !6590)
!6593 = distinct !{!6593, !6586, !6594}
!6594 = !DILocation(line: 75, column: 5, scope: !6587)
!6595 = !DILocation(line: 76, column: 5, scope: !6580)
!6596 = !DILocation(line: 77, column: 1, scope: !6580)
!6597 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !932, file: !932, line: 1507, type: !6332, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6598)
!6598 = !{!6599}
!6599 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6597, file: !932, line: 1507, type: !917)
!6600 = !DILocation(line: 0, scope: !6597)
!6601 = !DILocation(line: 1509, column: 65, scope: !6597)
!6602 = !DILocation(line: 1509, column: 44, scope: !6597)
!6603 = !DILocation(line: 1509, column: 32, scope: !6597)
!6604 = !DILocation(line: 1509, column: 3, scope: !6597)
!6605 = !DILocation(line: 1509, column: 39, scope: !6597)
!6606 = !DILocation(line: 1510, column: 1, scope: !6597)
!6607 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !2574, file: !2574, line: 79, type: !291, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6608)
!6608 = !{!6609, !6610}
!6609 = !DILocalVariable(name: "irq_number", scope: !6607, file: !2574, line: 81, type: !916)
!6610 = !DILocalVariable(name: "mask", scope: !6607, file: !2574, line: 82, type: !61)
!6611 = !DILocation(line: 82, column: 21, scope: !6607)
!6612 = !DILocation(line: 0, scope: !6607)
!6613 = !DILocation(line: 84, column: 5, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6607, file: !2574, line: 84, column: 5)
!6615 = !DILocation(line: 85, column: 9, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6617, file: !2574, line: 84, column: 85)
!6617 = distinct !DILexicalBlock(scope: !6614, file: !2574, line: 84, column: 5)
!6618 = !DILocation(line: 84, column: 81, scope: !6617)
!6619 = !DILocation(line: 84, column: 53, scope: !6617)
!6620 = distinct !{!6620, !6613, !6621}
!6621 = !DILocation(line: 86, column: 5, scope: !6614)
!6622 = !DILocation(line: 87, column: 5, scope: !6607)
!6623 = !DILocation(line: 88, column: 1, scope: !6607)
!6624 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !932, file: !932, line: 1494, type: !6332, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6625)
!6625 = !{!6626}
!6626 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6624, file: !932, line: 1494, type: !917)
!6627 = !DILocation(line: 0, scope: !6624)
!6628 = !DILocation(line: 1497, column: 91, scope: !6624)
!6629 = !DILocation(line: 1497, column: 61, scope: !6624)
!6630 = !DILocation(line: 1497, column: 40, scope: !6624)
!6631 = !DILocation(line: 1497, column: 3, scope: !6624)
!6632 = !DILocation(line: 1497, column: 46, scope: !6624)
!6633 = !DILocation(line: 1498, column: 1, scope: !6624)
!6634 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !2574, file: !2574, line: 90, type: !291, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6635)
!6635 = !{!6636}
!6636 = !DILocalVariable(name: "irq_number", scope: !6634, file: !2574, line: 92, type: !916)
!6637 = !DILocation(line: 0, scope: !6634)
!6638 = !DILocation(line: 93, column: 5, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6634, file: !2574, line: 93, column: 5)
!6640 = !DILocation(line: 94, column: 9, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6642, file: !2574, line: 93, column: 85)
!6642 = distinct !DILexicalBlock(scope: !6639, file: !2574, line: 93, column: 5)
!6643 = !DILocation(line: 93, column: 81, scope: !6642)
!6644 = !DILocation(line: 93, column: 53, scope: !6642)
!6645 = distinct !{!6645, !6638, !6646}
!6646 = !DILocation(line: 95, column: 5, scope: !6639)
!6647 = !DILocation(line: 96, column: 1, scope: !6634)
!6648 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !932, file: !932, line: 1547, type: !6332, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6649)
!6649 = !{!6650}
!6650 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6648, file: !932, line: 1547, type: !917)
!6651 = !DILocation(line: 0, scope: !6648)
!6652 = !DILocation(line: 1549, column: 65, scope: !6648)
!6653 = !DILocation(line: 1549, column: 44, scope: !6648)
!6654 = !DILocation(line: 1549, column: 32, scope: !6648)
!6655 = !DILocation(line: 1549, column: 3, scope: !6648)
!6656 = !DILocation(line: 1549, column: 39, scope: !6648)
!6657 = !DILocation(line: 1550, column: 1, scope: !6648)
!6658 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !2574, file: !2574, line: 98, type: !6319, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6659)
!6659 = !{!6660}
!6660 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6658, file: !2574, line: 98, type: !916)
!6661 = !DILocation(line: 0, scope: !6658)
!6662 = !DILocation(line: 100, column: 24, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6658, file: !2574, line: 100, column: 9)
!6664 = !DILocation(line: 104, column: 5, scope: !6658)
!6665 = !DILocation(line: 105, column: 5, scope: !6658)
!6666 = !DILocation(line: 106, column: 1, scope: !6658)
!6667 = distinct !DISubprogram(name: "software_trigger_irq", scope: !2574, file: !2574, line: 45, type: !1005, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !6668)
!6668 = !{!6669}
!6669 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6667, file: !2574, line: 45, type: !916)
!6670 = !DILocation(line: 0, scope: !6667)
!6671 = !DILocation(line: 47, column: 54, scope: !6667)
!6672 = !DILocation(line: 47, column: 16, scope: !6667)
!6673 = !DILocation(line: 445, column: 3, scope: !6674, inlinedAt: !6675)
!6674 = distinct !DISubprogram(name: "__DSB", scope: !2689, file: !2689, line: 443, type: !291, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !293)
!6675 = distinct !DILocation(line: 48, column: 5, scope: !6667)
!6676 = !{i64 430376}
!6677 = !DILocation(line: 49, column: 1, scope: !6667)
!6678 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !2574, file: !2574, line: 114, type: !3823, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !293)
!6679 = !DILocation(line: 116, column: 19, scope: !6678)
!6680 = !DILocation(line: 116, column: 24, scope: !6678)
!6681 = !DILocation(line: 116, column: 5, scope: !6678)
!6682 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !1018, file: !1018, line: 71, type: !6683, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !6685)
!6683 = !DISubroutineType(types: !6684)
!6684 = !{null, !88, !61}
!6685 = !{!6686, !6687, !6688, !6782, !6783, !6784}
!6686 = !DILocalVariable(name: "MTDData", arg: 1, scope: !6682, file: !1018, line: 71, type: !88)
!6687 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !6682, file: !1018, line: 71, type: !61)
!6688 = !DILocalVariable(name: "D", scope: !6682, file: !1018, line: 73, type: !6689)
!6689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6690, size: 32)
!6690 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1211, line: 193, baseType: !6691)
!6691 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1211, line: 134, size: 1824, elements: !6692)
!6692 = !{!6693, !6694, !6695, !6701, !6707, !6708, !6715, !6716, !6723, !6724, !6725, !6726, !6733, !6734, !6764, !6765, !6766, !6767, !6768, !6769, !6770, !6771, !6772, !6773, !6774, !6775, !6776, !6777, !6778, !6779, !6780, !6781}
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !6691, file: !1211, line: 136, baseType: !61, size: 32)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !6691, file: !1211, line: 137, baseType: !818, size: 32, offset: 32)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !6691, file: !1211, line: 138, baseType: !6696, size: 32, offset: 64)
!6696 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1295, line: 56, baseType: !6697)
!6697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6698, size: 32)
!6698 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1295, line: 54, size: 8, elements: !6699)
!6699 = !{!6700}
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !6698, file: !1295, line: 55, baseType: !395, size: 8)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !6691, file: !1211, line: 139, baseType: !6702, size: 32, offset: 96)
!6702 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1295, line: 46, baseType: !6703)
!6703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6704, size: 32)
!6704 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1295, line: 44, size: 8, elements: !6705)
!6705 = !{!6706}
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !6704, file: !1295, line: 45, baseType: !395, size: 8)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !6691, file: !1211, line: 140, baseType: !1307, size: 8, offset: 128)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !6691, file: !1211, line: 143, baseType: !6709, size: 32, offset: 160)
!6709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6710, size: 32)
!6710 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1313, line: 146, baseType: !6711)
!6711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 143, size: 64, elements: !6712)
!6712 = !{!6713, !6714}
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !6711, file: !1313, line: 144, baseType: !61, size: 32)
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !6711, file: !1313, line: 145, baseType: !61, size: 32, offset: 32)
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !6691, file: !1211, line: 144, baseType: !818, size: 32, offset: 192)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !6691, file: !1211, line: 145, baseType: !6717, size: 32, offset: 224)
!6717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6718, size: 32)
!6718 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1313, line: 152, baseType: !6719)
!6719 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 149, size: 64, elements: !6720)
!6720 = !{!6721, !6722}
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !6719, file: !1313, line: 150, baseType: !61, size: 32)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !6719, file: !1313, line: 151, baseType: !61, size: 32, offset: 32)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !6691, file: !1211, line: 146, baseType: !818, size: 32, offset: 256)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !6691, file: !1211, line: 147, baseType: !61, size: 32, offset: 288)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !6691, file: !1211, line: 148, baseType: !818, size: 32, offset: 320)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !6691, file: !1211, line: 151, baseType: !6727, size: 1024, offset: 352)
!6727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6728, size: 1024, elements: !1336)
!6728 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1313, line: 170, baseType: !6729)
!6729 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 167, size: 64, elements: !6730)
!6730 = !{!6731, !6732}
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !6729, file: !1313, line: 168, baseType: !61, size: 32)
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !6729, file: !1313, line: 169, baseType: !61, size: 32, offset: 32)
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !6691, file: !1211, line: 155, baseType: !1338, size: 32, offset: 1376)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !6691, file: !1211, line: 156, baseType: !6735, size: 32, offset: 1408)
!6735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6736, size: 32)
!6736 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1211, line: 124, baseType: !6737)
!6737 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1211, line: 90, size: 200, elements: !6738)
!6738 = !{!6739, !6740, !6741, !6742, !6743, !6744, !6745, !6746, !6747, !6748, !6749, !6750, !6751, !6752, !6753, !6754, !6755, !6756, !6757, !6758, !6759, !6760, !6761, !6762, !6763}
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !6737, file: !1211, line: 91, baseType: !395, size: 8)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !6737, file: !1211, line: 92, baseType: !395, size: 8, offset: 8)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !6737, file: !1211, line: 94, baseType: !395, size: 8, offset: 16)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !6737, file: !1211, line: 95, baseType: !395, size: 8, offset: 24)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !6737, file: !1211, line: 96, baseType: !395, size: 8, offset: 32)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !6737, file: !1211, line: 98, baseType: !395, size: 8, offset: 40)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !6737, file: !1211, line: 99, baseType: !395, size: 8, offset: 48)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !6737, file: !1211, line: 100, baseType: !395, size: 8, offset: 56)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !6737, file: !1211, line: 101, baseType: !395, size: 8, offset: 64)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !6737, file: !1211, line: 103, baseType: !395, size: 8, offset: 72)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !6737, file: !1211, line: 104, baseType: !395, size: 8, offset: 80)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !6737, file: !1211, line: 106, baseType: !395, size: 8, offset: 88)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !6737, file: !1211, line: 107, baseType: !395, size: 8, offset: 96)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !6737, file: !1211, line: 108, baseType: !395, size: 8, offset: 104)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !6737, file: !1211, line: 109, baseType: !395, size: 8, offset: 112)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !6737, file: !1211, line: 110, baseType: !395, size: 8, offset: 120)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !6737, file: !1211, line: 111, baseType: !395, size: 8, offset: 128)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !6737, file: !1211, line: 112, baseType: !395, size: 8, offset: 136)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !6737, file: !1211, line: 114, baseType: !395, size: 8, offset: 144)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !6737, file: !1211, line: 115, baseType: !395, size: 8, offset: 152)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !6737, file: !1211, line: 118, baseType: !395, size: 8, offset: 160)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !6737, file: !1211, line: 119, baseType: !395, size: 8, offset: 168)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !6737, file: !1211, line: 120, baseType: !395, size: 8, offset: 176)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !6737, file: !1211, line: 121, baseType: !395, size: 8, offset: 184)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !6737, file: !1211, line: 122, baseType: !395, size: 8, offset: 192)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !6691, file: !1211, line: 157, baseType: !61, size: 32, offset: 1440)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !6691, file: !1211, line: 158, baseType: !1087, size: 16, offset: 1472)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !6691, file: !1211, line: 159, baseType: !1087, size: 16, offset: 1488)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !6691, file: !1211, line: 163, baseType: !1087, size: 16, offset: 1504)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !6691, file: !1211, line: 164, baseType: !1087, size: 16, offset: 1520)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !6691, file: !1211, line: 167, baseType: !395, size: 8, offset: 1536)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !6691, file: !1211, line: 168, baseType: !1377, size: 24, offset: 1544)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !6691, file: !1211, line: 169, baseType: !395, size: 8, offset: 1568)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !6691, file: !1211, line: 170, baseType: !395, size: 8, offset: 1576)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !6691, file: !1211, line: 173, baseType: !1087, size: 16, offset: 1584)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !6691, file: !1211, line: 174, baseType: !61, size: 32, offset: 1600)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !6691, file: !1211, line: 175, baseType: !61, size: 32, offset: 1632)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !6691, file: !1211, line: 178, baseType: !91, size: 8, offset: 1664)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !6691, file: !1211, line: 179, baseType: !91, size: 8, offset: 1672)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !6691, file: !1211, line: 182, baseType: !1388, size: 32, offset: 1696)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !6691, file: !1211, line: 186, baseType: !1388, size: 32, offset: 1728)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !6691, file: !1211, line: 187, baseType: !1393, size: 32, offset: 1760)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !6691, file: !1211, line: 188, baseType: !1393, size: 32, offset: 1792)
!6782 = !DILocalVariable(name: "i", scope: !6682, file: !1018, line: 74, type: !61)
!6783 = !DILocalVariable(name: "data_cnt", scope: !6682, file: !1018, line: 74, type: !61)
!6784 = !DILocalVariable(name: "p_data", scope: !6682, file: !1018, line: 75, type: !1055)
!6785 = !DILocation(line: 0, scope: !6682)
!6786 = !DILocation(line: 77, column: 16, scope: !6682)
!6787 = !DILocation(line: 79, column: 53, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6789, file: !1018, line: 79, column: 5)
!6789 = distinct !DILexicalBlock(scope: !6682, file: !1018, line: 79, column: 5)
!6790 = !DILocation(line: 79, column: 5, scope: !6789)
!6791 = !DILocation(line: 79, column: 41, scope: !6789)
!6792 = !DILocation(line: 77, column: 47, scope: !6682)
!6793 = !DILocation(line: 80, column: 13, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !1018, line: 80, column: 13)
!6795 = distinct !DILexicalBlock(scope: !6788, file: !1018, line: 79, column: 80)
!6796 = !DILocation(line: 80, column: 21, scope: !6794)
!6797 = !DILocation(line: 80, column: 13, scope: !6795)
!6798 = !DILocation(line: 81, column: 13, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6800, file: !1018, line: 81, column: 13)
!6800 = distinct !DILexicalBlock(scope: !6801, file: !1018, line: 81, column: 13)
!6801 = distinct !DILexicalBlock(scope: !6802, file: !1018, line: 81, column: 13)
!6802 = distinct !DILexicalBlock(scope: !6794, file: !1018, line: 80, column: 36)
!6803 = !DILocation(line: 79, column: 65, scope: !6788)
!6804 = !DILocation(line: 79, column: 70, scope: !6788)
!6805 = distinct !{!6805, !6790, !6806}
!6806 = !DILocation(line: 84, column: 5, scope: !6789)
!6807 = !DILocation(line: 85, column: 1, scope: !6682)
!6808 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !1018, file: !1018, line: 93, type: !3571, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !6809)
!6809 = !{!6810, !6811}
!6810 = !DILocalVariable(name: "num", arg: 1, scope: !6808, file: !1018, line: 93, type: !61)
!6811 = !DILocalVariable(name: "ret", scope: !6808, file: !1018, line: 95, type: !18)
!6812 = !DILocation(line: 0, scope: !6808)
!6813 = !DILocation(line: 100, column: 9, scope: !6808)
!6814 = !DILocation(line: 102, column: 5, scope: !6808)
!6815 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !1018, file: !1018, line: 110, type: !6816, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !6819)
!6816 = !DISubroutineType(types: !6817)
!6817 = !{null, !6818}
!6818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1087)
!6819 = !{!6820, !6821}
!6820 = !DILocalVariable(name: "CS", arg: 1, scope: !6815, file: !1018, line: 110, type: !6818)
!6821 = !DILocalVariable(name: "val", scope: !6815, file: !1018, line: 112, type: !61)
!6822 = !DILocation(line: 0, scope: !6815)
!6823 = !DILocation(line: 114, column: 5, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6825, file: !1018, line: 114, column: 5)
!6825 = distinct !DILexicalBlock(scope: !6815, file: !1018, line: 114, column: 5)
!6826 = !DILocation(line: 116, column: 16, scope: !6815)
!6827 = !DILocation(line: 117, column: 9, scope: !6815)
!6828 = !DILocation(line: 122, column: 13, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6830, file: !1018, line: 121, column: 27)
!6830 = distinct !DILexicalBlock(scope: !6831, file: !1018, line: 121, column: 16)
!6831 = distinct !DILexicalBlock(scope: !6815, file: !1018, line: 117, column: 9)
!6832 = !DILocation(line: 127, column: 9, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6834, file: !1018, line: 127, column: 9)
!6834 = distinct !DILexicalBlock(scope: !6835, file: !1018, line: 127, column: 9)
!6835 = distinct !DILexicalBlock(scope: !6836, file: !1018, line: 127, column: 9)
!6836 = distinct !DILexicalBlock(scope: !6830, file: !1018, line: 125, column: 12)
!6837 = !DILocation(line: 0, scope: !6831)
!6838 = !DILocation(line: 134, column: 5, scope: !6815)
!6839 = !DILocation(line: 134, column: 19, scope: !6815)
!6840 = !DILocation(line: 134, column: 35, scope: !6815)
!6841 = !DILocation(line: 134, column: 12, scope: !6815)
!6842 = distinct !{!6842, !6838, !6843}
!6843 = !DILocation(line: 134, column: 57, scope: !6815)
!6844 = !DILocation(line: 135, column: 19, scope: !6815)
!6845 = !DILocation(line: 135, column: 34, scope: !6815)
!6846 = !DILocation(line: 135, column: 12, scope: !6815)
!6847 = !DILocation(line: 135, column: 5, scope: !6815)
!6848 = distinct !{!6848, !6847, !6849}
!6849 = !DILocation(line: 135, column: 50, scope: !6815)
!6850 = !DILocation(line: 130, column: 9, scope: !6815)
!6851 = !DILocation(line: 138, column: 24, scope: !6815)
!6852 = !DILocation(line: 139, column: 1, scope: !6815)
!6853 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !1018, file: !1018, line: 148, type: !6816, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !6854)
!6854 = !{!6855, !6856}
!6855 = !DILocalVariable(name: "CS", arg: 1, scope: !6853, file: !1018, line: 148, type: !6818)
!6856 = !DILocalVariable(name: "val", scope: !6853, file: !1018, line: 150, type: !61)
!6857 = !DILocation(line: 0, scope: !6853)
!6858 = !DILocation(line: 153, column: 16, scope: !6853)
!6859 = !DILocation(line: 154, column: 9, scope: !6853)
!6860 = !DILocation(line: 155, column: 24, scope: !6853)
!6861 = !DILocation(line: 158, column: 5, scope: !6853)
!6862 = !DILocation(line: 158, column: 18, scope: !6853)
!6863 = !DILocation(line: 158, column: 32, scope: !6853)
!6864 = distinct !{!6864, !6861, !6865}
!6865 = !DILocation(line: 158, column: 49, scope: !6853)
!6866 = !DILocation(line: 163, column: 16, scope: !6853)
!6867 = !DILocation(line: 164, column: 9, scope: !6853)
!6868 = !DILocation(line: 165, column: 24, scope: !6853)
!6869 = !DILocation(line: 168, column: 5, scope: !6853)
!6870 = !DILocation(line: 168, column: 18, scope: !6853)
!6871 = !DILocation(line: 168, column: 32, scope: !6853)
!6872 = distinct !{!6872, !6869, !6873}
!6873 = !DILocation(line: 168, column: 46, scope: !6853)
!6874 = !DILocation(line: 174, column: 10, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6853, file: !1018, line: 174, column: 9)
!6876 = !DILocation(line: 174, column: 25, scope: !6875)
!6877 = !DILocation(line: 174, column: 9, scope: !6853)
!6878 = !DILocation(line: 175, column: 9, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6880, file: !1018, line: 175, column: 9)
!6880 = distinct !DILexicalBlock(scope: !6881, file: !1018, line: 175, column: 9)
!6881 = distinct !DILexicalBlock(scope: !6875, file: !1018, line: 174, column: 36)
!6882 = !DILocation(line: 176, column: 5, scope: !6881)
!6883 = !DILocation(line: 179, column: 1, scope: !6853)
!6884 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !1018, file: !1018, line: 186, type: !6885, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !6887)
!6885 = !DISubroutineType(types: !6886)
!6886 = !{!61, !6818}
!6887 = !{!6888, !6889, !6890}
!6888 = !DILocalVariable(name: "CS", arg: 1, scope: !6884, file: !1018, line: 186, type: !6818)
!6889 = !DILocalVariable(name: "val", scope: !6884, file: !1018, line: 188, type: !61)
!6890 = !DILocalVariable(name: "misc_ctl", scope: !6884, file: !1018, line: 189, type: !61)
!6891 = !DILocation(line: 0, scope: !6884)
!6892 = !DILocation(line: 204, column: 16, scope: !6884)
!6893 = !DILocation(line: 208, column: 12, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6884, file: !1018, line: 208, column: 9)
!6895 = !DILocation(line: 208, column: 9, scope: !6884)
!6896 = !DILocation(line: 212, column: 20, scope: !6884)
!6897 = !DILocation(line: 215, column: 1, scope: !6884)
!6898 = !DILocation(line: 215, column: 15, scope: !6884)
!6899 = !DILocation(line: 215, column: 29, scope: !6884)
!6900 = !DILocation(line: 215, column: 8, scope: !6884)
!6901 = distinct !{!6901, !6897, !6902}
!6902 = !DILocation(line: 215, column: 46, scope: !6884)
!6903 = !DILocation(line: 216, column: 22, scope: !6884)
!6904 = !DILocation(line: 216, column: 36, scope: !6884)
!6905 = !DILocation(line: 216, column: 9, scope: !6884)
!6906 = distinct !{!6906, !6905, !6907}
!6907 = !DILocation(line: 216, column: 47, scope: !6884)
!6908 = !DILocation(line: 218, column: 13, scope: !6884)
!6909 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !1018, file: !1018, line: 227, type: !6816, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !6910)
!6910 = !{!6911}
!6911 = !DILocalVariable(name: "CS", arg: 1, scope: !6909, file: !1018, line: 227, type: !6818)
!6912 = !DILocation(line: 0, scope: !6909)
!6913 = !DILocation(line: 235, column: 5, scope: !6909)
!6914 = !DILocation(line: 236, column: 5, scope: !6909)
!6915 = !DILocation(line: 238, column: 1, scope: !6909)
!6916 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !1018, file: !1018, line: 249, type: !6917, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !6919)
!6917 = !DISubroutineType(types: !6918)
!6918 = !{null, !6818, !828}
!6919 = !{!6920, !6921, !6922, !6923, !6924}
!6920 = !DILocalVariable(name: "CS", arg: 1, scope: !6916, file: !1018, line: 249, type: !6818)
!6921 = !DILocalVariable(name: "cmd", arg: 2, scope: !6916, file: !1018, line: 249, type: !828)
!6922 = !DILocalVariable(name: "cmdi", scope: !6916, file: !1018, line: 251, type: !61)
!6923 = !DILocalVariable(name: "cmdo", scope: !6916, file: !1018, line: 251, type: !61)
!6924 = !DILocalVariable(name: "len", scope: !6916, file: !1018, line: 252, type: !395)
!6925 = !DILocation(line: 0, scope: !6916)
!6926 = !DILocation(line: 254, column: 46, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6928, file: !1018, line: 254, column: 5)
!6928 = distinct !DILexicalBlock(scope: !6916, file: !1018, line: 254, column: 5)
!6929 = !DILocation(line: 254, column: 5, scope: !6928)
!6930 = !DILocation(line: 255, column: 22, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6927, file: !1018, line: 254, column: 103)
!6932 = !DILocation(line: 255, column: 59, scope: !6931)
!6933 = !DILocation(line: 255, column: 51, scope: !6931)
!6934 = !DILocation(line: 254, column: 65, scope: !6927)
!6935 = !DILocation(line: 254, column: 97, scope: !6927)
!6936 = distinct !{!6936, !6929, !6937}
!6937 = !DILocation(line: 256, column: 5, scope: !6928)
!6938 = !DILocation(line: 258, column: 9, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6916, file: !1018, line: 258, column: 9)
!6940 = !DILocation(line: 262, column: 5, scope: !6916)
!6941 = !DILocation(line: 263, column: 33, scope: !6916)
!6942 = !DILocation(line: 264, column: 25, scope: !6916)
!6943 = !DILocation(line: 265, column: 24, scope: !6916)
!6944 = !DILocation(line: 266, column: 5, scope: !6916)
!6945 = !DILocation(line: 268, column: 5, scope: !6916)
!6946 = !DILocation(line: 269, column: 1, scope: !6916)
!6947 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !1018, file: !1018, line: 281, type: !6948, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !6950)
!6948 = !DISubroutineType(types: !6949)
!6949 = !{null, !6818, !5218, !828, !828}
!6950 = !{!6951, !6952, !6953, !6954, !6955, !6956}
!6951 = !DILocalVariable(name: "CS", arg: 1, scope: !6947, file: !1018, line: 281, type: !6818)
!6952 = !DILocalVariable(name: "cmd", arg: 2, scope: !6947, file: !1018, line: 281, type: !5218)
!6953 = !DILocalVariable(name: "address", arg: 3, scope: !6947, file: !1018, line: 281, type: !828)
!6954 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !6947, file: !1018, line: 281, type: !828)
!6955 = !DILocalVariable(name: "cmd1", scope: !6947, file: !1018, line: 283, type: !61)
!6956 = !DILocalVariable(name: "cmd2", scope: !6947, file: !1018, line: 283, type: !61)
!6957 = !DILocation(line: 0, scope: !6947)
!6958 = !DILocation(line: 285, column: 12, scope: !6947)
!6959 = !DILocation(line: 287, column: 23, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6947, file: !1018, line: 287, column: 9)
!6961 = !DILocation(line: 287, column: 9, scope: !6947)
!6962 = !DILocation(line: 288, column: 22, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6960, file: !1018, line: 287, column: 31)
!6964 = !DILocation(line: 288, column: 55, scope: !6963)
!6965 = !DILocation(line: 288, column: 53, scope: !6963)
!6966 = !DILocation(line: 289, column: 5, scope: !6963)
!6967 = !DILocation(line: 290, column: 22, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6960, file: !1018, line: 289, column: 12)
!6969 = !DILocation(line: 290, column: 53, scope: !6968)
!6970 = !DILocation(line: 290, column: 51, scope: !6968)
!6971 = !DILocation(line: 291, column: 21, scope: !6968)
!6972 = !DILocation(line: 0, scope: !6960)
!6973 = !DILocation(line: 294, column: 33, scope: !6947)
!6974 = !DILocation(line: 295, column: 38, scope: !6947)
!6975 = !DILocation(line: 296, column: 41, scope: !6947)
!6976 = !DILocation(line: 296, column: 25, scope: !6947)
!6977 = !DILocation(line: 297, column: 24, scope: !6947)
!6978 = !DILocation(line: 299, column: 5, scope: !6947)
!6979 = !DILocation(line: 300, column: 5, scope: !6947)
!6980 = !DILocation(line: 302, column: 1, scope: !6947)
!6981 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !1018, file: !1018, line: 312, type: !6982, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !6984)
!6982 = !DISubroutineType(types: !6983)
!6983 = !{!61, !828, !828}
!6984 = !{!6985, !6986}
!6985 = !DILocalVariable(name: "cmd", arg: 1, scope: !6981, file: !1018, line: 312, type: !828)
!6986 = !DILocalVariable(name: "address", arg: 2, scope: !6981, file: !1018, line: 312, type: !828)
!6987 = !DILocation(line: 0, scope: !6981)
!6988 = !DILocation(line: 314, column: 14, scope: !6981)
!6989 = !DILocation(line: 314, column: 44, scope: !6981)
!6990 = !DILocation(line: 314, column: 82, scope: !6981)
!6991 = !DILocation(line: 314, column: 75, scope: !6981)
!6992 = !DILocation(line: 314, column: 5, scope: !6981)
!6993 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !1018, file: !1018, line: 332, type: !6994, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !6997)
!6994 = !DISubroutineType(types: !6995)
!6995 = !{!61, !828, !828, !6996, !1055}
!6996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 32)
!6997 = !{!6998, !6999, !7000, !7001, !7002, !7010, !7011, !7012}
!6998 = !DILocalVariable(name: "cmd", arg: 1, scope: !6993, file: !1018, line: 332, type: !828)
!6999 = !DILocalVariable(name: "address", arg: 2, scope: !6993, file: !1018, line: 332, type: !828)
!7000 = !DILocalVariable(name: "p_data", arg: 3, scope: !6993, file: !1018, line: 332, type: !6996)
!7001 = !DILocalVariable(name: "length", arg: 4, scope: !6993, file: !1018, line: 332, type: !1055)
!7002 = !DILocalVariable(name: "tmp", scope: !6993, file: !1018, line: 334, type: !7003)
!7003 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !1211, line: 202, baseType: !7004)
!7004 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1211, line: 198, size: 32, elements: !7005)
!7005 = !{!7006, !7007, !7009}
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !7004, file: !1211, line: 199, baseType: !61, size: 32)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !7004, file: !1211, line: 200, baseType: !7008, size: 32)
!7008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1087, size: 32, elements: !528)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !7004, file: !1211, line: 201, baseType: !525, size: 32)
!7010 = !DILocalVariable(name: "cmd1", scope: !6993, file: !1018, line: 335, type: !61)
!7011 = !DILocalVariable(name: "cmd2", scope: !6993, file: !1018, line: 335, type: !61)
!7012 = !DILocalVariable(name: "i", scope: !6993, file: !1018, line: 336, type: !61)
!7013 = !DILocation(line: 0, scope: !6993)
!7014 = !DILocation(line: 334, column: 5, scope: !6993)
!7015 = !DILocation(line: 334, column: 16, scope: !6993)
!7016 = !DILocation(line: 338, column: 12, scope: !6993)
!7017 = !DILocation(line: 340, column: 17, scope: !6993)
!7018 = !DILocation(line: 342, column: 17, scope: !6993)
!7019 = !DILocation(line: 342, column: 9, scope: !6993)
!7020 = !DILocation(line: 342, column: 15, scope: !6993)
!7021 = !DILocation(line: 344, column: 22, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7023, file: !1018, line: 343, column: 29)
!7023 = distinct !DILexicalBlock(scope: !7024, file: !1018, line: 343, column: 5)
!7024 = distinct !DILexicalBlock(scope: !6993, file: !1018, line: 343, column: 5)
!7025 = !DILocation(line: 343, column: 5, scope: !7024)
!7026 = !DILocation(line: 344, column: 21, scope: !7022)
!7027 = !DILocation(line: 344, column: 9, scope: !7022)
!7028 = !DILocation(line: 344, column: 19, scope: !7022)
!7029 = !DILocation(line: 345, column: 18, scope: !7022)
!7030 = !DILocation(line: 343, column: 25, scope: !7023)
!7031 = !DILocation(line: 343, column: 19, scope: !7023)
!7032 = distinct !{!7032, !7025, !7033}
!7033 = !DILocation(line: 346, column: 5, scope: !7024)
!7034 = !DILocation(line: 347, column: 16, scope: !6993)
!7035 = !DILocation(line: 348, column: 16, scope: !6993)
!7036 = !DILocation(line: 348, column: 15, scope: !6993)
!7037 = !DILocation(line: 339, column: 17, scope: !6993)
!7038 = !DILocation(line: 339, column: 52, scope: !6993)
!7039 = !DILocation(line: 339, column: 45, scope: !6993)
!7040 = !DILocation(line: 348, column: 13, scope: !6993)
!7041 = !DILocation(line: 349, column: 38, scope: !6993)
!7042 = !DILocation(line: 351, column: 1, scope: !6993)
!7043 = !DILocation(line: 350, column: 5, scope: !6993)
!7044 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !1018, file: !1018, line: 367, type: !7045, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !7047)
!7045 = !DISubroutineType(types: !7046)
!7046 = !{null, !61, !88, !993}
!7047 = !{!7048, !7049, !7050, !7051, !7052, !7053}
!7048 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !7044, file: !1018, line: 367, type: !61)
!7049 = !DILocalVariable(name: "buff", arg: 2, scope: !7044, file: !1018, line: 367, type: !88)
!7050 = !DILocalVariable(name: "length", arg: 3, scope: !7044, file: !1018, line: 367, type: !993)
!7051 = !DILocalVariable(name: "i", scope: !7044, file: !1018, line: 369, type: !61)
!7052 = !DILocalVariable(name: "p_data", scope: !7044, file: !1018, line: 370, type: !818)
!7053 = !DILocalVariable(name: "tmp", scope: !7044, file: !1018, line: 371, type: !7003)
!7054 = !DILocation(line: 0, scope: !7044)
!7055 = !DILocation(line: 371, column: 5, scope: !7044)
!7056 = !DILocation(line: 371, column: 13, scope: !7044)
!7057 = !DILocation(line: 373, column: 18, scope: !7044)
!7058 = !DILocation(line: 376, column: 15, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7044, file: !1018, line: 376, column: 9)
!7060 = !DILocation(line: 376, column: 30, scope: !7059)
!7061 = !DILocation(line: 376, column: 11, scope: !7059)
!7062 = !DILocation(line: 376, column: 9, scope: !7044)
!7063 = !DILocation(line: 377, column: 23, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7065, file: !1018, line: 377, column: 9)
!7065 = distinct !DILexicalBlock(scope: !7066, file: !1018, line: 377, column: 9)
!7066 = distinct !DILexicalBlock(scope: !7059, file: !1018, line: 376, column: 41)
!7067 = !DILocation(line: 377, column: 9, scope: !7065)
!7068 = !DILocation(line: 378, column: 13, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7064, file: !1018, line: 377, column: 80)
!7070 = !DILocation(line: 377, column: 41, scope: !7064)
!7071 = !DILocation(line: 377, column: 54, scope: !7064)
!7072 = !DILocation(line: 377, column: 67, scope: !7064)
!7073 = distinct !{!7073, !7067, !7074}
!7074 = !DILocation(line: 379, column: 9, scope: !7065)
!7075 = !DILocation(line: 382, column: 37, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7059, file: !1018, line: 382, column: 14)
!7077 = !DILocation(line: 382, column: 16, scope: !7076)
!7078 = !DILocation(line: 0, scope: !7076)
!7079 = !DILocation(line: 382, column: 14, scope: !7059)
!7080 = !DILocation(line: 391, column: 9, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7082, file: !1018, line: 391, column: 9)
!7082 = distinct !DILexicalBlock(scope: !7076, file: !1018, line: 390, column: 13)
!7083 = !DILocation(line: 383, column: 9, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7085, file: !1018, line: 383, column: 9)
!7085 = distinct !DILexicalBlock(scope: !7076, file: !1018, line: 382, column: 49)
!7086 = !DILocation(line: 384, column: 26, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7088, file: !1018, line: 383, column: 80)
!7088 = distinct !DILexicalBlock(scope: !7084, file: !1018, line: 383, column: 9)
!7089 = !DILocation(line: 384, column: 24, scope: !7087)
!7090 = !DILocation(line: 385, column: 47, scope: !7087)
!7091 = !DILocation(line: 385, column: 26, scope: !7087)
!7092 = !DILocation(line: 385, column: 24, scope: !7087)
!7093 = !DILocation(line: 386, column: 13, scope: !7087)
!7094 = !DILocation(line: 383, column: 41, scope: !7088)
!7095 = !DILocation(line: 383, column: 54, scope: !7088)
!7096 = !DILocation(line: 383, column: 67, scope: !7088)
!7097 = !DILocation(line: 383, column: 23, scope: !7088)
!7098 = distinct !{!7098, !7083, !7099}
!7099 = !DILocation(line: 387, column: 9, scope: !7084)
!7100 = !DILocation(line: 392, column: 13, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7102, file: !1018, line: 392, column: 13)
!7102 = distinct !DILexicalBlock(scope: !7103, file: !1018, line: 391, column: 61)
!7103 = distinct !DILexicalBlock(scope: !7081, file: !1018, line: 391, column: 9)
!7104 = !DILocation(line: 393, column: 36, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7106, file: !1018, line: 392, column: 51)
!7106 = distinct !DILexicalBlock(scope: !7101, file: !1018, line: 392, column: 13)
!7107 = !DILocation(line: 393, column: 29, scope: !7105)
!7108 = !DILocation(line: 393, column: 17, scope: !7105)
!7109 = !DILocation(line: 393, column: 27, scope: !7105)
!7110 = !DILocation(line: 392, column: 47, scope: !7106)
!7111 = !DILocation(line: 392, column: 27, scope: !7106)
!7112 = !DILocation(line: 392, column: 31, scope: !7106)
!7113 = distinct !{!7113, !7100, !7114}
!7114 = !DILocation(line: 394, column: 13, scope: !7101)
!7115 = !DILocation(line: 395, column: 13, scope: !7102)
!7116 = !DILocation(line: 391, column: 41, scope: !7103)
!7117 = !DILocation(line: 391, column: 54, scope: !7103)
!7118 = !DILocation(line: 391, column: 23, scope: !7103)
!7119 = distinct !{!7119, !7080, !7120}
!7120 = !DILocation(line: 396, column: 9, scope: !7081)
!7121 = !DILocation(line: 398, column: 1, scope: !7044)
!7122 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !1018, file: !1018, line: 414, type: !7123, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !7125)
!7123 = !DISubroutineType(types: !7124)
!7124 = !{null, !6818, !5217, !818, !6818, !6818}
!7125 = !{!7126, !7127, !7128, !7129, !7130, !7131, !7132, !7133, !7134, !7135}
!7126 = !DILocalVariable(name: "CS", arg: 1, scope: !7122, file: !1018, line: 414, type: !6818)
!7127 = !DILocalVariable(name: "cmd", arg: 2, scope: !7122, file: !1018, line: 414, type: !5217)
!7128 = !DILocalVariable(name: "data", arg: 3, scope: !7122, file: !1018, line: 414, type: !818)
!7129 = !DILocalVariable(name: "outl", arg: 4, scope: !7122, file: !1018, line: 414, type: !6818)
!7130 = !DILocalVariable(name: "inl", arg: 5, scope: !7122, file: !1018, line: 414, type: !6818)
!7131 = !DILocalVariable(name: "tmp", scope: !7122, file: !1018, line: 416, type: !61)
!7132 = !DILocalVariable(name: "i", scope: !7122, file: !1018, line: 417, type: !61)
!7133 = !DILocalVariable(name: "j", scope: !7122, file: !1018, line: 417, type: !61)
!7134 = !DILocalVariable(name: "p_data", scope: !7122, file: !1018, line: 418, type: !818)
!7135 = !DILocalVariable(name: "p_tmp", scope: !7122, file: !1018, line: 418, type: !818)
!7136 = !DILocation(line: 0, scope: !7122)
!7137 = !DILocation(line: 416, column: 5, scope: !7122)
!7138 = !DILocation(line: 422, column: 60, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7140, file: !1018, line: 422, column: 5)
!7140 = distinct !DILexicalBlock(scope: !7122, file: !1018, line: 422, column: 5)
!7141 = !DILocation(line: 422, column: 5, scope: !7140)
!7142 = !DILocation(line: 423, column: 25, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7144, file: !1018, line: 423, column: 9)
!7144 = distinct !DILexicalBlock(scope: !7139, file: !1018, line: 422, column: 83)
!7145 = !DILocation(line: 423, column: 32, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7143, file: !1018, line: 423, column: 9)
!7147 = !DILocation(line: 423, column: 9, scope: !7143)
!7148 = !DILocation(line: 424, column: 24, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7146, file: !1018, line: 423, column: 59)
!7150 = !DILocation(line: 424, column: 13, scope: !7149)
!7151 = !DILocation(line: 424, column: 22, scope: !7149)
!7152 = !DILocation(line: 423, column: 50, scope: !7146)
!7153 = !DILocation(line: 423, column: 55, scope: !7146)
!7154 = !DILocation(line: 423, column: 39, scope: !7146)
!7155 = distinct !{!7155, !7147, !7156}
!7156 = !DILocation(line: 425, column: 9, scope: !7143)
!7157 = !DILocation(line: 426, column: 9, scope: !7144)
!7158 = !DILocation(line: 0, scope: !7140)
!7159 = !DILocation(line: 422, column: 75, scope: !7139)
!7160 = distinct !{!7160, !7141, !7161}
!7161 = !DILocation(line: 427, column: 5, scope: !7140)
!7162 = !DILocation(line: 428, column: 25, scope: !7122)
!7163 = !DILocation(line: 429, column: 26, scope: !7122)
!7164 = !DILocation(line: 429, column: 24, scope: !7122)
!7165 = !DILocation(line: 430, column: 5, scope: !7122)
!7166 = !DILocation(line: 431, column: 5, scope: !7122)
!7167 = !DILocation(line: 433, column: 67, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7169, file: !1018, line: 433, column: 5)
!7169 = distinct !DILexicalBlock(scope: !7122, file: !1018, line: 433, column: 5)
!7170 = !DILocation(line: 433, column: 5, scope: !7169)
!7171 = !DILocation(line: 433, column: 56, scope: !7169)
!7172 = !DILocation(line: 434, column: 17, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7168, file: !1018, line: 433, column: 100)
!7174 = !DILocation(line: 434, column: 15, scope: !7173)
!7175 = !DILocation(line: 433, column: 74, scope: !7168)
!7176 = !DILocation(line: 433, column: 79, scope: !7168)
!7177 = !DILocation(line: 433, column: 87, scope: !7168)
!7178 = distinct !{!7178, !7170, !7179}
!7179 = !DILocation(line: 435, column: 5, scope: !7169)
!7180 = !DILocation(line: 437, column: 1, scope: !7122)
!7181 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !1018, file: !1018, line: 462, type: !7182, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !7184)
!7182 = !DISubroutineType(types: !7183)
!7183 = !{null, !6818, !5217}
!7184 = !{!7185, !7186, !7187, !7188, !7189}
!7185 = !DILocalVariable(name: "CS", arg: 1, scope: !7181, file: !1018, line: 462, type: !6818)
!7186 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !7181, file: !1018, line: 462, type: !5217)
!7187 = !DILocalVariable(name: "i", scope: !7181, file: !1018, line: 464, type: !61)
!7188 = !DILocalVariable(name: "val", scope: !7181, file: !1018, line: 465, type: !61)
!7189 = !DILocalVariable(name: "status", scope: !7190, file: !1018, line: 492, type: !395)
!7190 = distinct !DILexicalBlock(scope: !7191, file: !1018, line: 491, column: 47)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !1018, line: 491, column: 13)
!7192 = distinct !DILexicalBlock(scope: !7181, file: !1018, line: 477, column: 17)
!7193 = !DILocation(line: 0, scope: !7181)
!7194 = !DILocation(line: 467, column: 17, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7181, file: !1018, line: 467, column: 9)
!7196 = !DILocation(line: 467, column: 9, scope: !7181)
!7197 = !DILocation(line: 474, column: 11, scope: !7181)
!7198 = !DILocation(line: 477, column: 5, scope: !7181)
!7199 = !DILocation(line: 478, column: 17, scope: !7192)
!7200 = !DILocation(line: 478, column: 9, scope: !7192)
!7201 = !DILocation(line: 481, column: 17, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7203, file: !1018, line: 481, column: 17)
!7203 = distinct !DILexicalBlock(scope: !7192, file: !1018, line: 478, column: 29)
!7204 = !DILocation(line: 481, column: 17, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7206, file: !1018, line: 481, column: 17)
!7206 = distinct !DILexicalBlock(scope: !7207, file: !1018, line: 481, column: 17)
!7207 = distinct !DILexicalBlock(scope: !7202, file: !1018, line: 481, column: 17)
!7208 = !DILocation(line: 481, column: 17, scope: !7206)
!7209 = !DILocation(line: 481, column: 17, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7211, file: !1018, line: 481, column: 17)
!7211 = distinct !DILexicalBlock(scope: !7207, file: !1018, line: 481, column: 17)
!7212 = !DILocation(line: 484, column: 17, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7203, file: !1018, line: 484, column: 17)
!7214 = !DILocation(line: 484, column: 17, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7216, file: !1018, line: 484, column: 17)
!7216 = distinct !DILexicalBlock(scope: !7217, file: !1018, line: 484, column: 17)
!7217 = distinct !DILexicalBlock(scope: !7213, file: !1018, line: 484, column: 17)
!7218 = !DILocation(line: 484, column: 17, scope: !7216)
!7219 = !DILocation(line: 484, column: 17, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7221, file: !1018, line: 484, column: 17)
!7221 = distinct !DILexicalBlock(scope: !7217, file: !1018, line: 484, column: 17)
!7222 = !DILocation(line: 0, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7224, file: !1018, line: 487, column: 17)
!7224 = distinct !DILexicalBlock(scope: !7203, file: !1018, line: 487, column: 17)
!7225 = !DILocation(line: 487, column: 17, scope: !7224)
!7226 = !DILocation(line: 487, column: 17, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7228, file: !1018, line: 487, column: 17)
!7228 = distinct !DILexicalBlock(scope: !7223, file: !1018, line: 487, column: 17)
!7229 = !DILocation(line: 487, column: 17, scope: !7228)
!7230 = !DILocation(line: 487, column: 17, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7232, file: !1018, line: 487, column: 17)
!7232 = distinct !DILexicalBlock(scope: !7223, file: !1018, line: 487, column: 17)
!7233 = !DILocation(line: 487, column: 17, scope: !7232)
!7234 = !DILocation(line: 491, column: 23, scope: !7191)
!7235 = !DILocation(line: 491, column: 13, scope: !7191)
!7236 = !DILocation(line: 491, column: 28, scope: !7191)
!7237 = !DILocation(line: 491, column: 13, scope: !7192)
!7238 = !DILocation(line: 492, column: 13, scope: !7190)
!7239 = !DILocation(line: 494, column: 13, scope: !7190)
!7240 = !DILocation(line: 0, scope: !7190)
!7241 = !DILocation(line: 495, column: 17, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7190, file: !1018, line: 494, column: 16)
!7243 = !DILocation(line: 496, column: 22, scope: !7190)
!7244 = !DILocation(line: 496, column: 31, scope: !7190)
!7245 = !DILocation(line: 496, column: 29, scope: !7190)
!7246 = !DILocation(line: 496, column: 13, scope: !7242)
!7247 = distinct !{!7247, !7239, !7248}
!7248 = !DILocation(line: 496, column: 45, scope: !7190)
!7249 = !DILocation(line: 497, column: 9, scope: !7191)
!7250 = !DILocation(line: 503, column: 25, scope: !7192)
!7251 = !DILocation(line: 497, column: 9, scope: !7190)
!7252 = !DILocation(line: 500, column: 70, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7191, file: !1018, line: 499, column: 14)
!7254 = !DILocation(line: 500, column: 60, scope: !7253)
!7255 = !DILocation(line: 500, column: 13, scope: !7253)
!7256 = !DILocation(line: 503, column: 15, scope: !7192)
!7257 = !DILocation(line: 503, column: 11, scope: !7192)
!7258 = distinct !{!7258, !7198, !7259}
!7259 = !DILocation(line: 504, column: 5, scope: !7181)
!7260 = !DILocation(line: 505, column: 1, scope: !7181)
!7261 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !1018, file: !1018, line: 514, type: !7262, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !7264)
!7262 = !DISubroutineType(types: !7263)
!7263 = !{null, !6818, !818, !395}
!7264 = !{!7265, !7266, !7267}
!7265 = !DILocalVariable(name: "CS", arg: 1, scope: !7261, file: !1018, line: 514, type: !6818)
!7266 = !DILocalVariable(name: "id", arg: 2, scope: !7261, file: !1018, line: 514, type: !818)
!7267 = !DILocalVariable(name: "cmd", arg: 3, scope: !7261, file: !1018, line: 514, type: !395)
!7268 = !DILocation(line: 0, scope: !7261)
!7269 = !DILocation(line: 517, column: 5, scope: !7261)
!7270 = !DILocation(line: 518, column: 1, scope: !7261)
!7271 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !1018, file: !1018, line: 521, type: !7272, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !7274)
!7272 = !DISubroutineType(types: !7273)
!7273 = !{null, !6818, !818}
!7274 = !{!7275, !7276}
!7275 = !DILocalVariable(name: "CS", arg: 1, scope: !7271, file: !1018, line: 521, type: !6818)
!7276 = !DILocalVariable(name: "id", arg: 2, scope: !7271, file: !1018, line: 521, type: !818)
!7277 = !DILocation(line: 0, scope: !7271)
!7278 = !DILocation(line: 523, column: 5, scope: !7271)
!7279 = !DILocation(line: 524, column: 1, scope: !7271)
!7280 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !1018, file: !1018, line: 536, type: !7281, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !293)
!7281 = !DISubroutineType(types: !7282)
!7282 = !{!7283}
!7283 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !1021, line: 57, baseType: !1020)
!7284 = !DILocation(line: 540, column: 5, scope: !7280)
!7285 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !1018, file: !1018, line: 561, type: !7286, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !293)
!7286 = !DISubroutineType(types: !7287)
!7287 = !{!7288}
!7288 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !1021, line: 66, baseType: !1028)
!7289 = !DILocation(line: 564, column: 15, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7285, file: !1018, line: 564, column: 9)
!7291 = !DILocation(line: 564, column: 31, scope: !7290)
!7292 = !DILocation(line: 564, column: 45, scope: !7290)
!7293 = !DILocation(line: 0, scope: !7290)
!7294 = !DILocation(line: 569, column: 1, scope: !7285)
!7295 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !1018, file: !1018, line: 580, type: !7296, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !7298)
!7296 = !DISubroutineType(types: !7297)
!7297 = !{!91, !818}
!7298 = !{!7299, !7300}
!7299 = !DILocalVariable(name: "buffer", arg: 1, scope: !7295, file: !1018, line: 580, type: !818)
!7300 = !DILocalVariable(name: "i", scope: !7295, file: !1018, line: 582, type: !7)
!7301 = !DILocation(line: 0, scope: !7295)
!7302 = !DILocation(line: 583, column: 5, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7295, file: !1018, line: 583, column: 5)
!7304 = !DILocation(line: 584, column: 9, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7306, file: !1018, line: 583, column: 29)
!7306 = distinct !DILexicalBlock(scope: !7303, file: !1018, line: 583, column: 5)
!7307 = !DILocation(line: 584, column: 19, scope: !7305)
!7308 = !DILocation(line: 583, column: 25, scope: !7306)
!7309 = !DILocation(line: 583, column: 19, scope: !7306)
!7310 = distinct !{!7310, !7302, !7311}
!7311 = !DILocation(line: 585, column: 5, scope: !7303)
!7312 = !DILocation(line: 586, column: 5, scope: !7295)
!7313 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !1018, file: !1018, line: 613, type: !291, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !7314)
!7314 = !{!7315}
!7315 = !DILocalVariable(name: "D", scope: !7313, file: !1018, line: 615, type: !6689)
!7316 = !DILocation(line: 0, scope: !7313)
!7317 = !DILocation(line: 616, column: 32, scope: !7313)
!7318 = !DILocation(line: 616, column: 37, scope: !7313)
!7319 = !DILocation(line: 616, column: 27, scope: !7313)
!7320 = !DILocation(line: 617, column: 44, scope: !7313)
!7321 = !DILocation(line: 617, column: 31, scope: !7313)
!7322 = !DILocation(line: 617, column: 28, scope: !7313)
!7323 = !DILocation(line: 618, column: 32, scope: !7313)
!7324 = !DILocation(line: 618, column: 31, scope: !7313)
!7325 = !DILocation(line: 618, column: 29, scope: !7313)
!7326 = !DILocation(line: 621, column: 31, scope: !7313)
!7327 = !DILocation(line: 621, column: 24, scope: !7313)
!7328 = !DILocation(line: 622, column: 34, scope: !7313)
!7329 = !DILocation(line: 622, column: 27, scope: !7313)
!7330 = !DILocation(line: 623, column: 32, scope: !7313)
!7331 = !DILocation(line: 623, column: 25, scope: !7313)
!7332 = !DILocation(line: 624, column: 33, scope: !7313)
!7333 = !DILocation(line: 624, column: 26, scope: !7313)
!7334 = !DILocation(line: 625, column: 33, scope: !7313)
!7335 = !DILocation(line: 625, column: 26, scope: !7313)
!7336 = !DILocation(line: 629, column: 32, scope: !7313)
!7337 = !DILocation(line: 629, column: 47, scope: !7313)
!7338 = !DILocation(line: 629, column: 25, scope: !7313)
!7339 = !DILocation(line: 630, column: 32, scope: !7313)
!7340 = !DILocation(line: 630, column: 47, scope: !7313)
!7341 = !DILocation(line: 630, column: 25, scope: !7313)
!7342 = !DILocation(line: 633, column: 24, scope: !7313)
!7343 = !DILocation(line: 633, column: 31, scope: !7313)
!7344 = !DILocation(line: 633, column: 36, scope: !7313)
!7345 = !DILocation(line: 633, column: 28, scope: !7313)
!7346 = !DILocation(line: 633, column: 5, scope: !7313)
!7347 = !DILocation(line: 635, column: 5, scope: !7313)
!7348 = !DILocation(line: 636, column: 1, scope: !7313)
!7349 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !1018, file: !1018, line: 641, type: !291, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !293)
!7350 = !DILocation(line: 644, column: 26, scope: !7349)
!7351 = !DILocation(line: 644, column: 24, scope: !7349)
!7352 = !DILocation(line: 645, column: 29, scope: !7349)
!7353 = !DILocation(line: 645, column: 27, scope: !7349)
!7354 = !DILocation(line: 646, column: 27, scope: !7349)
!7355 = !DILocation(line: 646, column: 25, scope: !7349)
!7356 = !DILocation(line: 647, column: 28, scope: !7349)
!7357 = !DILocation(line: 647, column: 26, scope: !7349)
!7358 = !DILocation(line: 648, column: 27, scope: !7349)
!7359 = !DILocation(line: 648, column: 25, scope: !7349)
!7360 = !DILocation(line: 652, column: 32, scope: !7349)
!7361 = !DILocation(line: 652, column: 47, scope: !7349)
!7362 = !DILocation(line: 652, column: 25, scope: !7349)
!7363 = !DILocation(line: 655, column: 24, scope: !7349)
!7364 = !DILocation(line: 655, column: 5, scope: !7349)
!7365 = !DILocation(line: 657, column: 5, scope: !7349)
!7366 = !DILocation(line: 660, column: 9, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7349, file: !1018, line: 660, column: 9)
!7368 = !DILocation(line: 660, column: 59, scope: !7367)
!7369 = !DILocation(line: 660, column: 38, scope: !7367)
!7370 = !DILocation(line: 660, column: 37, scope: !7367)
!7371 = !DILocation(line: 660, column: 33, scope: !7367)
!7372 = !DILocation(line: 660, column: 9, scope: !7349)
!7373 = !DILocation(line: 661, column: 9, scope: !7367)
!7374 = distinct !{!7374, !7373, !7375}
!7375 = !DILocation(line: 661, column: 18, scope: !7367)
!7376 = !DILocation(line: 662, column: 1, scope: !7349)
!7377 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !1018, file: !1018, line: 668, type: !291, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !293)
!7378 = !DILocation(line: 671, column: 9, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7377, file: !1018, line: 671, column: 9)
!7380 = !DILocation(line: 671, column: 40, scope: !7379)
!7381 = !DILocation(line: 671, column: 9, scope: !7377)
!7382 = !DILocation(line: 672, column: 47, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7379, file: !1018, line: 671, column: 46)
!7384 = !DILocation(line: 672, column: 40, scope: !7383)
!7385 = !DILocation(line: 673, column: 5, scope: !7383)
!7386 = !DILocation(line: 674, column: 9, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7377, file: !1018, line: 674, column: 9)
!7388 = !DILocation(line: 674, column: 41, scope: !7387)
!7389 = !DILocation(line: 674, column: 9, scope: !7377)
!7390 = !DILocation(line: 675, column: 48, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7387, file: !1018, line: 674, column: 47)
!7392 = !DILocation(line: 675, column: 41, scope: !7391)
!7393 = !DILocation(line: 676, column: 5, scope: !7391)
!7394 = !DILocation(line: 679, column: 33, scope: !7377)
!7395 = !DILocation(line: 679, column: 48, scope: !7377)
!7396 = !DILocation(line: 679, column: 25, scope: !7377)
!7397 = !DILocation(line: 680, column: 25, scope: !7377)
!7398 = !DILocation(line: 686, column: 5, scope: !7377)
!7399 = !DILocation(line: 688, column: 1, scope: !7377)
!7400 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !1018, file: !1018, line: 689, type: !291, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !293)
!7401 = !DILocation(line: 692, column: 9, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7400, file: !1018, line: 692, column: 9)
!7403 = !DILocation(line: 692, column: 40, scope: !7402)
!7404 = !DILocation(line: 692, column: 9, scope: !7400)
!7405 = !DILocation(line: 693, column: 29, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7402, file: !1018, line: 692, column: 46)
!7407 = !DILocation(line: 694, column: 5, scope: !7406)
!7408 = !DILocation(line: 695, column: 9, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7400, file: !1018, line: 695, column: 9)
!7410 = !DILocation(line: 695, column: 41, scope: !7409)
!7411 = !DILocation(line: 695, column: 9, scope: !7400)
!7412 = !DILocation(line: 696, column: 29, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7409, file: !1018, line: 695, column: 47)
!7414 = !DILocation(line: 697, column: 5, scope: !7413)
!7415 = !DILocation(line: 698, column: 5, scope: !7400)
!7416 = !DILocation(line: 699, column: 1, scope: !7400)
!7417 = distinct !DISubprogram(name: "ust_get_current_time", scope: !1117, file: !1117, line: 91, type: !3823, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7418)
!7418 = !{!7419}
!7419 = !DILocalVariable(name: "counter", scope: !7417, file: !1117, line: 102, type: !61)
!7420 = !DILocation(line: 0, scope: !7417)
!7421 = !DILocation(line: 110, column: 5, scope: !7417)
!7422 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !1117, file: !1117, line: 114, type: !3823, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7423)
!7423 = !{!7424}
!7424 = !DILocalVariable(name: "counter", scope: !7422, file: !1117, line: 125, type: !61)
!7425 = !DILocation(line: 0, scope: !7422)
!7426 = !DILocation(line: 133, column: 5, scope: !7422)
!7427 = distinct !DISubprogram(name: "ust_busy_wait", scope: !1117, file: !1117, line: 137, type: !6552, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7428)
!7428 = !{!7429}
!7429 = !DILocalVariable(name: "delay_us", arg: 1, scope: !7427, file: !1117, line: 137, type: !61)
!7430 = !DILocation(line: 0, scope: !7427)
!7431 = !DILocation(line: 142, column: 5, scope: !7427)
!7432 = !DILocation(line: 144, column: 1, scope: !7427)
!7433 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !1117, file: !1117, line: 163, type: !3823, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7434)
!7434 = !{!7435}
!7435 = !DILocalVariable(name: "mask", scope: !7433, file: !1117, line: 165, type: !61)
!7436 = !DILocation(line: 166, column: 12, scope: !7433)
!7437 = !DILocation(line: 0, scope: !7433)
!7438 = !DILocation(line: 167, column: 5, scope: !7433)
!7439 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !1117, file: !1117, line: 171, type: !6552, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7440)
!7440 = !{!7441}
!7441 = !DILocalVariable(name: "mask", arg: 1, scope: !7439, file: !1117, line: 171, type: !61)
!7442 = !DILocation(line: 0, scope: !7439)
!7443 = !DILocation(line: 173, column: 5, scope: !7439)
!7444 = !DILocation(line: 174, column: 1, scope: !7439)
!7445 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !1117, file: !1117, line: 199, type: !1389, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7446)
!7446 = !{!7447}
!7447 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7445, file: !1117, line: 199, type: !88)
!7448 = !DILocation(line: 0, scope: !7445)
!7449 = !DILocation(line: 201, column: 5, scope: !7445)
!7450 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !1117, file: !1117, line: 388, type: !7451, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !293)
!7451 = !DISubroutineType(types: !7452)
!7452 = !{!993}
!7453 = !DILocation(line: 390, column: 5, scope: !7450)
!7454 = distinct !DISubprogram(name: "CompareData", scope: !1117, file: !1117, line: 872, type: !7455, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7457)
!7455 = !DISubroutineType(types: !7456)
!7456 = !{!91, !88, !88, !61}
!7457 = !{!7458, !7459, !7460, !7461, !7462, !7465, !7466, !7469, !7470, !7472}
!7458 = !DILocalVariable(name: "Address", arg: 1, scope: !7454, file: !1117, line: 872, type: !88)
!7459 = !DILocalVariable(name: "Data", arg: 2, scope: !7454, file: !1117, line: 872, type: !88)
!7460 = !DILocalVariable(name: "Length", arg: 3, scope: !7454, file: !1117, line: 872, type: !61)
!7461 = !DILocalVariable(name: "i", scope: !7454, file: !1117, line: 874, type: !61)
!7462 = !DILocalVariable(name: "Source", scope: !7463, file: !1117, line: 877, type: !1055)
!7463 = distinct !DILexicalBlock(scope: !7464, file: !1117, line: 876, column: 74)
!7464 = distinct !DILexicalBlock(scope: !7454, file: !1117, line: 876, column: 9)
!7465 = !DILocalVariable(name: "Dest", scope: !7463, file: !1117, line: 878, type: !1055)
!7466 = !DILocalVariable(name: "Source", scope: !7467, file: !1117, line: 885, type: !1086)
!7467 = distinct !DILexicalBlock(scope: !7468, file: !1117, line: 884, column: 79)
!7468 = distinct !DILexicalBlock(scope: !7464, file: !1117, line: 884, column: 16)
!7469 = !DILocalVariable(name: "Dest", scope: !7467, file: !1117, line: 886, type: !1086)
!7470 = !DILocalVariable(name: "Source", scope: !7471, file: !1117, line: 893, type: !818)
!7471 = distinct !DILexicalBlock(scope: !7468, file: !1117, line: 892, column: 12)
!7472 = !DILocalVariable(name: "Dest", scope: !7471, file: !1117, line: 894, type: !818)
!7473 = !DILocation(line: 0, scope: !7454)
!7474 = !DILocation(line: 876, column: 11, scope: !7464)
!7475 = !DILocation(line: 876, column: 42, scope: !7464)
!7476 = !DILocation(line: 877, column: 28, scope: !7463)
!7477 = !DILocation(line: 0, scope: !7463)
!7478 = !DILocation(line: 878, column: 26, scope: !7463)
!7479 = !DILocation(line: 879, column: 23, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7481, file: !1117, line: 879, column: 9)
!7481 = distinct !DILexicalBlock(scope: !7463, file: !1117, line: 879, column: 9)
!7482 = !DILocation(line: 879, column: 9, scope: !7481)
!7483 = !DILocation(line: 880, column: 17, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7485, file: !1117, line: 880, column: 17)
!7485 = distinct !DILexicalBlock(scope: !7480, file: !1117, line: 879, column: 68)
!7486 = !DILocation(line: 880, column: 30, scope: !7484)
!7487 = !DILocation(line: 880, column: 27, scope: !7484)
!7488 = !DILocation(line: 879, column: 64, scope: !7480)
!7489 = !DILocation(line: 880, column: 17, scope: !7485)
!7490 = distinct !{!7490, !7482, !7491}
!7491 = !DILocation(line: 883, column: 9, scope: !7481)
!7492 = !DILocation(line: 884, column: 47, scope: !7468)
!7493 = !DILocation(line: 895, column: 23, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7495, file: !1117, line: 895, column: 9)
!7495 = distinct !DILexicalBlock(scope: !7471, file: !1117, line: 895, column: 9)
!7496 = !DILocation(line: 895, column: 9, scope: !7495)
!7497 = !DILocation(line: 885, column: 28, scope: !7467)
!7498 = !DILocation(line: 0, scope: !7467)
!7499 = !DILocation(line: 886, column: 26, scope: !7467)
!7500 = !DILocation(line: 887, column: 23, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7502, file: !1117, line: 887, column: 9)
!7502 = distinct !DILexicalBlock(scope: !7467, file: !1117, line: 887, column: 9)
!7503 = !DILocation(line: 887, column: 9, scope: !7502)
!7504 = !DILocation(line: 888, column: 17, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7506, file: !1117, line: 888, column: 17)
!7506 = distinct !DILexicalBlock(scope: !7501, file: !1117, line: 887, column: 68)
!7507 = !DILocation(line: 888, column: 30, scope: !7505)
!7508 = !DILocation(line: 888, column: 27, scope: !7505)
!7509 = !DILocation(line: 887, column: 64, scope: !7501)
!7510 = !DILocation(line: 888, column: 17, scope: !7506)
!7511 = distinct !{!7511, !7503, !7512}
!7512 = !DILocation(line: 891, column: 9, scope: !7502)
!7513 = !DILocation(line: 896, column: 17, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7515, file: !1117, line: 896, column: 17)
!7515 = distinct !DILexicalBlock(scope: !7494, file: !1117, line: 895, column: 38)
!7516 = !DILocation(line: 896, column: 30, scope: !7514)
!7517 = !DILocation(line: 896, column: 27, scope: !7514)
!7518 = !DILocation(line: 895, column: 34, scope: !7494)
!7519 = !DILocation(line: 896, column: 17, scope: !7515)
!7520 = distinct !{!7520, !7496, !7521}
!7521 = !DILocation(line: 899, column: 9, scope: !7495)
!7522 = !DILocation(line: 902, column: 1, scope: !7454)
!7523 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !1117, file: !1117, line: 919, type: !7524, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7526)
!7524 = !DISubroutineType(types: !7525)
!7525 = !{null, !88, !88, !61}
!7526 = !{!7527, !7528, !7529, !7530, !7531, !7532, !7533, !7534, !7535, !7536, !7537}
!7527 = !DILocalVariable(name: "Target", arg: 1, scope: !7523, file: !1117, line: 919, type: !88)
!7528 = !DILocalVariable(name: "Data", arg: 2, scope: !7523, file: !1117, line: 919, type: !88)
!7529 = !DILocalVariable(name: "Size", arg: 3, scope: !7523, file: !1117, line: 919, type: !61)
!7530 = !DILocalVariable(name: "D", scope: !7523, file: !1117, line: 921, type: !1287)
!7531 = !DILocalVariable(name: "address", scope: !7523, file: !1117, line: 922, type: !61)
!7532 = !DILocalVariable(name: "p_data", scope: !7523, file: !1117, line: 923, type: !818)
!7533 = !DILocalVariable(name: "cmd1", scope: !7523, file: !1117, line: 924, type: !61)
!7534 = !DILocalVariable(name: "length", scope: !7523, file: !1117, line: 924, type: !61)
!7535 = !DILocalVariable(name: "written", scope: !7523, file: !1117, line: 924, type: !61)
!7536 = !DILocalVariable(name: "status", scope: !7523, file: !1117, line: 925, type: !1339)
!7537 = !DILocalVariable(name: "savedMask", scope: !7523, file: !1117, line: 926, type: !61)
!7538 = !DILocation(line: 0, scope: !7523)
!7539 = !DILocation(line: 921, column: 60, scope: !7523)
!7540 = !DILocation(line: 923, column: 5, scope: !7523)
!7541 = !DILocation(line: 923, column: 19, scope: !7523)
!7542 = !DILocation(line: 924, column: 5, scope: !7523)
!7543 = !DILocation(line: 932, column: 9, scope: !7523)
!7544 = !DILocation(line: 933, column: 8, scope: !7523)
!7545 = !DILocation(line: 933, column: 21, scope: !7523)
!7546 = !DILocation(line: 935, column: 14, scope: !7523)
!7547 = !DILocation(line: 935, column: 5, scope: !7523)
!7548 = !DILocation(line: 922, column: 29, scope: !7523)
!7549 = !DILocation(line: 937, column: 18, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7523, file: !1117, line: 935, column: 23)
!7551 = !DILocation(line: 937, column: 35, scope: !7550)
!7552 = !DILocation(line: 937, column: 74, scope: !7550)
!7553 = !DILocation(line: 937, column: 50, scope: !7550)
!7554 = !DILocation(line: 937, column: 39, scope: !7550)
!7555 = !DILocation(line: 940, column: 35, scope: !7550)
!7556 = !DILocation(line: 940, column: 29, scope: !7550)
!7557 = !DILocation(line: 940, column: 16, scope: !7550)
!7558 = !DILocation(line: 942, column: 18, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7550, file: !1117, line: 942, column: 13)
!7560 = !DILocation(line: 942, column: 29, scope: !7559)
!7561 = !DILocation(line: 942, column: 13, scope: !7550)
!7562 = !DILocation(line: 943, column: 13, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7559, file: !1117, line: 942, column: 55)
!7564 = !DILocation(line: 944, column: 9, scope: !7563)
!7565 = !DILocation(line: 947, column: 16, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7550, file: !1117, line: 947, column: 13)
!7567 = !DILocation(line: 947, column: 29, scope: !7566)
!7568 = !DILocation(line: 0, scope: !7566)
!7569 = !DILocation(line: 947, column: 13, scope: !7550)
!7570 = !DILocation(line: 948, column: 20, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7566, file: !1117, line: 947, column: 35)
!7572 = !DILocation(line: 949, column: 32, scope: !7571)
!7573 = !DILocation(line: 949, column: 40, scope: !7571)
!7574 = !DILocation(line: 949, column: 13, scope: !7571)
!7575 = !DILocation(line: 950, column: 9, scope: !7571)
!7576 = !DILocation(line: 953, column: 20, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7566, file: !1117, line: 952, column: 9)
!7578 = !DILocation(line: 954, column: 32, scope: !7577)
!7579 = !DILocation(line: 954, column: 40, scope: !7577)
!7580 = !DILocation(line: 954, column: 13, scope: !7577)
!7581 = !DILocation(line: 957, column: 21, scope: !7550)
!7582 = !DILocation(line: 963, column: 45, scope: !7550)
!7583 = !DILocation(line: 963, column: 42, scope: !7550)
!7584 = !DILocation(line: 963, column: 40, scope: !7550)
!7585 = !DILocation(line: 963, column: 58, scope: !7550)
!7586 = !DILocation(line: 963, column: 29, scope: !7550)
!7587 = !DILocation(line: 964, column: 28, scope: !7550)
!7588 = !DILocation(line: 965, column: 37, scope: !7550)
!7589 = !DILocation(line: 966, column: 9, scope: !7550)
!7590 = !DILocation(line: 967, column: 26, scope: !7550)
!7591 = !DILocation(line: 967, column: 9, scope: !7550)
!7592 = !DILocation(line: 968, column: 29, scope: !7550)
!7593 = !DILocation(line: 968, column: 9, scope: !7550)
!7594 = !DILocation(line: 972, column: 9, scope: !7550)
!7595 = !DILocation(line: 978, column: 9, scope: !7550)
!7596 = !DILocation(line: 979, column: 50, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7550, file: !1117, line: 978, column: 22)
!7598 = !DILocation(line: 979, column: 55, scope: !7597)
!7599 = !DILocation(line: 979, column: 22, scope: !7597)
!7600 = !DILocation(line: 980, column: 35, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7597, file: !1117, line: 980, column: 17)
!7602 = !DILocation(line: 980, column: 32, scope: !7601)
!7603 = !DILocation(line: 980, column: 30, scope: !7601)
!7604 = !DILocation(line: 980, column: 19, scope: !7601)
!7605 = !DILocation(line: 980, column: 17, scope: !7597)
!7606 = distinct !{!7606, !7595, !7607}
!7607 = !DILocation(line: 983, column: 9, scope: !7550)
!7608 = !DILocation(line: 991, column: 9, scope: !7550)
!7609 = !DILocation(line: 993, column: 19, scope: !7550)
!7610 = !DILocation(line: 993, column: 16, scope: !7550)
!7611 = !DILocation(line: 994, column: 14, scope: !7550)
!7612 = !DILocation(line: 995, column: 17, scope: !7550)
!7613 = distinct !{!7613, !7547, !7614}
!7614 = !DILocation(line: 996, column: 5, scope: !7523)
!7615 = !DILocation(line: 998, column: 21, scope: !7523)
!7616 = !DILocation(line: 1005, column: 9, scope: !7523)
!7617 = !DILocation(line: 1008, column: 1, scope: !7523)
!7618 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !1117, file: !1117, line: 1427, type: !7619, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7621)
!7619 = !DISubroutineType(types: !7620)
!7620 = !{null, !1287}
!7621 = !{!7622, !7623}
!7622 = !DILocalVariable(name: "D", arg: 1, scope: !7618, file: !1117, line: 1427, type: !1287)
!7623 = !DILocalVariable(name: "Result", scope: !7618, file: !1117, line: 1429, type: !1955)
!7624 = !DILocation(line: 0, scope: !7618)
!7625 = !DILocation(line: 1430, column: 5, scope: !7618)
!7626 = !DILocation(line: 1431, column: 18, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7618, file: !1117, line: 1430, column: 8)
!7628 = !DILocation(line: 1432, column: 21, scope: !7618)
!7629 = !DILocation(line: 1432, column: 5, scope: !7627)
!7630 = distinct !{!7630, !7625, !7631}
!7631 = !DILocation(line: 1432, column: 43, scope: !7618)
!7632 = !DILocation(line: 1433, column: 1, scope: !7618)
!7633 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !1117, file: !1117, line: 3478, type: !7619, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7634)
!7634 = !{!7635}
!7635 = !DILocalVariable(name: "D", arg: 1, scope: !7633, file: !1117, line: 3478, type: !1287)
!7636 = !DILocation(line: 0, scope: !7633)
!7637 = !DILocation(line: 3480, column: 30, scope: !7633)
!7638 = !DILocation(line: 3480, column: 35, scope: !7633)
!7639 = !DILocation(line: 3480, column: 27, scope: !7633)
!7640 = !DILocation(line: 3480, column: 5, scope: !7633)
!7641 = !DILocation(line: 3481, column: 1, scope: !7633)
!7642 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !1117, file: !1117, line: 2382, type: !291, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7643)
!7643 = !{!7644}
!7644 = !DILocalVariable(name: "savedMask", scope: !7642, file: !1117, line: 2384, type: !61)
!7645 = !DILocation(line: 2385, column: 17, scope: !7642)
!7646 = !DILocation(line: 0, scope: !7642)
!7647 = !DILocation(line: 2390, column: 20, scope: !7642)
!7648 = !DILocation(line: 2391, column: 5, scope: !7642)
!7649 = !DILocation(line: 2392, column: 1, scope: !7642)
!7650 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !1117, file: !1117, line: 3536, type: !7651, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7653)
!7651 = !DISubroutineType(types: !7652)
!7652 = !{!61, !1287, !395}
!7653 = !{!7654, !7655, !7656, !7657}
!7654 = !DILocalVariable(name: "D", arg: 1, scope: !7650, file: !1117, line: 3536, type: !1287)
!7655 = !DILocalVariable(name: "cmd", arg: 2, scope: !7650, file: !1117, line: 3536, type: !395)
!7656 = !DILocalVariable(name: "savedMask", scope: !7650, file: !1117, line: 3538, type: !61)
!7657 = !DILocalVariable(name: "result", scope: !7650, file: !1117, line: 3539, type: !61)
!7658 = !DILocation(line: 0, scope: !7650)
!7659 = !DILocation(line: 3541, column: 17, scope: !7650)
!7660 = !DILocation(line: 3542, column: 22, scope: !7650)
!7661 = !DILocation(line: 3542, column: 5, scope: !7650)
!7662 = !DILocation(line: 3543, column: 35, scope: !7650)
!7663 = !DILocation(line: 3543, column: 33, scope: !7650)
!7664 = !DILocation(line: 3544, column: 25, scope: !7650)
!7665 = !DILocation(line: 3545, column: 24, scope: !7650)
!7666 = !DILocation(line: 3546, column: 25, scope: !7650)
!7667 = !DILocation(line: 3546, column: 5, scope: !7650)
!7668 = !DILocation(line: 3547, column: 42, scope: !7650)
!7669 = !DILocation(line: 3547, column: 60, scope: !7650)
!7670 = !DILocation(line: 3547, column: 14, scope: !7650)
!7671 = !DILocation(line: 3548, column: 5, scope: !7650)
!7672 = !DILocation(line: 3550, column: 5, scope: !7650)
!7673 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !1117, file: !1117, line: 2393, type: !291, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7674)
!7674 = !{!7675}
!7675 = !DILocalVariable(name: "savedMask", scope: !7673, file: !1117, line: 2395, type: !61)
!7676 = !DILocation(line: 2396, column: 17, scope: !7673)
!7677 = !DILocation(line: 0, scope: !7673)
!7678 = !DILocation(line: 2401, column: 20, scope: !7673)
!7679 = !DILocation(line: 2402, column: 5, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7681, file: !1117, line: 2402, column: 5)
!7681 = distinct !DILexicalBlock(scope: !7673, file: !1117, line: 2402, column: 5)
!7682 = !DILocation(line: 2403, column: 5, scope: !7673)
!7683 = !DILocation(line: 2404, column: 1, scope: !7673)
!7684 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !1117, file: !1117, line: 1440, type: !7619, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7685)
!7685 = !{!7686, !7687}
!7686 = !DILocalVariable(name: "D", arg: 1, scope: !7684, file: !1117, line: 1440, type: !1287)
!7687 = !DILocalVariable(name: "savedMask", scope: !7684, file: !1117, line: 1442, type: !993)
!7688 = !DILocation(line: 0, scope: !7684)
!7689 = !DILocation(line: 1443, column: 17, scope: !7684)
!7690 = !DILocation(line: 1444, column: 9, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7684, file: !1117, line: 1444, column: 9)
!7692 = !DILocation(line: 1444, column: 9, scope: !7684)
!7693 = !DILocation(line: 1445, column: 17, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7691, file: !1117, line: 1444, column: 24)
!7695 = !DILocation(line: 1446, column: 9, scope: !7694)
!7696 = !DILocation(line: 1451, column: 1, scope: !7684)
!7697 = !DILocation(line: 1448, column: 9, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7691, file: !1117, line: 1447, column: 12)
!7699 = !DILocation(line: 1449, column: 9, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7701, file: !1117, line: 1449, column: 9)
!7701 = distinct !DILexicalBlock(scope: !7702, file: !1117, line: 1449, column: 9)
!7702 = distinct !DILexicalBlock(scope: !7698, file: !1117, line: 1449, column: 9)
!7703 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !1117, file: !1117, line: 1027, type: !291, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7704)
!7704 = !{!7705, !7706, !7707, !7708}
!7705 = !DILocalVariable(name: "D", scope: !7703, file: !1117, line: 1029, type: !1287)
!7706 = !DILocalVariable(name: "status", scope: !7703, file: !1117, line: 1030, type: !1339)
!7707 = !DILocalVariable(name: "savedMask", scope: !7703, file: !1117, line: 1031, type: !61)
!7708 = !DILocalVariable(name: "duration", scope: !7709, file: !1117, line: 1231, type: !61)
!7709 = distinct !DILexicalBlock(scope: !7703, file: !1117, line: 1230, column: 5)
!7710 = !DILocation(line: 0, scope: !7703)
!7711 = !DILocation(line: 1033, column: 17, scope: !7703)
!7712 = !DILocation(line: 1034, column: 8, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7703, file: !1117, line: 1034, column: 8)
!7714 = !DILocation(line: 1034, column: 30, scope: !7713)
!7715 = !DILocation(line: 1034, column: 8, scope: !7703)
!7716 = !DILocation(line: 1039, column: 27, scope: !7703)
!7717 = !DILocation(line: 1058, column: 48, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7703, file: !1117, line: 1055, column: 5)
!7719 = !DILocation(line: 1069, column: 5, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7721, file: !1117, line: 1069, column: 5)
!7721 = distinct !DILexicalBlock(scope: !7703, file: !1117, line: 1069, column: 5)
!7722 = !DILocation(line: 1069, column: 5, scope: !7721)
!7723 = !DILocation(line: 1069, column: 5, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7720, file: !1117, line: 1069, column: 5)
!7725 = !DILocation(line: 1075, column: 10, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7703, file: !1117, line: 1075, column: 9)
!7727 = !DILocation(line: 1075, column: 27, scope: !7726)
!7728 = !DILocation(line: 1075, column: 33, scope: !7726)
!7729 = !DILocation(line: 1075, column: 40, scope: !7726)
!7730 = !DILocation(line: 1075, column: 53, scope: !7726)
!7731 = !DILocation(line: 1075, column: 9, scope: !7703)
!7732 = !DILocation(line: 1084, column: 9, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7726, file: !1117, line: 1083, column: 11)
!7734 = !DILocation(line: 1085, column: 50, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7733, file: !1117, line: 1084, column: 21)
!7736 = !DILocation(line: 1085, column: 55, scope: !7735)
!7737 = !DILocation(line: 1085, column: 22, scope: !7735)
!7738 = !DILocation(line: 1086, column: 35, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7735, file: !1117, line: 1086, column: 17)
!7740 = !DILocation(line: 1086, column: 32, scope: !7739)
!7741 = !DILocation(line: 1086, column: 30, scope: !7739)
!7742 = !DILocation(line: 1086, column: 19, scope: !7739)
!7743 = !DILocation(line: 1086, column: 17, scope: !7735)
!7744 = distinct !{!7744, !7732, !7745}
!7745 = !DILocation(line: 1089, column: 9, scope: !7733)
!7746 = !DILocation(line: 1107, column: 11, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7703, file: !1117, line: 1107, column: 9)
!7748 = !DILocation(line: 1107, column: 30, scope: !7747)
!7749 = !DILocation(line: 1117, column: 46, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7747, file: !1117, line: 1107, column: 53)
!7751 = !DILocation(line: 1117, column: 51, scope: !7750)
!7752 = !DILocation(line: 1117, column: 18, scope: !7750)
!7753 = !DILocation(line: 1120, column: 31, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7750, file: !1117, line: 1120, column: 13)
!7755 = !DILocation(line: 1120, column: 28, scope: !7754)
!7756 = !DILocation(line: 1120, column: 26, scope: !7754)
!7757 = !DILocation(line: 1120, column: 15, scope: !7754)
!7758 = !DILocation(line: 1120, column: 13, scope: !7750)
!7759 = !DILocation(line: 1128, column: 13, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7754, file: !1117, line: 1120, column: 55)
!7761 = !DILocation(line: 1131, column: 13, scope: !7760)
!7762 = !DILocation(line: 1132, column: 54, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7760, file: !1117, line: 1131, column: 23)
!7764 = !DILocation(line: 1132, column: 59, scope: !7763)
!7765 = !DILocation(line: 1132, column: 26, scope: !7763)
!7766 = !DILocation(line: 1133, column: 39, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7763, file: !1117, line: 1133, column: 21)
!7768 = !DILocation(line: 1133, column: 36, scope: !7767)
!7769 = !DILocation(line: 1133, column: 34, scope: !7767)
!7770 = !DILocation(line: 1133, column: 23, scope: !7767)
!7771 = !DILocation(line: 1133, column: 21, scope: !7763)
!7772 = distinct !{!7772, !7761, !7773}
!7773 = !DILocation(line: 1158, column: 13, scope: !7760)
!7774 = !DILocation(line: 1162, column: 21, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7760, file: !1117, line: 1162, column: 17)
!7776 = !DILocation(line: 1162, column: 32, scope: !7775)
!7777 = !DILocation(line: 1162, column: 51, scope: !7775)
!7778 = !DILocation(line: 1162, column: 58, scope: !7775)
!7779 = !DILocation(line: 1162, column: 71, scope: !7775)
!7780 = !DILocation(line: 1162, column: 17, scope: !7760)
!7781 = !DILocation(line: 1164, column: 45, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7775, file: !1117, line: 1162, column: 91)
!7783 = !DILocation(line: 1165, column: 36, scope: !7782)
!7784 = !DILocation(line: 1166, column: 37, scope: !7782)
!7785 = !DILocation(line: 1167, column: 34, scope: !7782)
!7786 = !DILocation(line: 1167, column: 17, scope: !7782)
!7787 = !DILocation(line: 1168, column: 37, scope: !7782)
!7788 = !DILocation(line: 1168, column: 17, scope: !7782)
!7789 = !DILocation(line: 1171, column: 50, scope: !7782)
!7790 = !DILocation(line: 1172, column: 37, scope: !7782)
!7791 = !DILocation(line: 1173, column: 45, scope: !7782)
!7792 = !DILocation(line: 1174, column: 34, scope: !7782)
!7793 = !DILocation(line: 1174, column: 17, scope: !7782)
!7794 = !DILocation(line: 1175, column: 37, scope: !7782)
!7795 = !DILocation(line: 1175, column: 17, scope: !7782)
!7796 = !DILocation(line: 1178, column: 17, scope: !7782)
!7797 = !DILocation(line: 1179, column: 49, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7782, file: !1117, line: 1178, column: 20)
!7799 = !DILocation(line: 1180, column: 40, scope: !7798)
!7800 = !DILocation(line: 1181, column: 41, scope: !7798)
!7801 = !DILocation(line: 1182, column: 38, scope: !7798)
!7802 = !DILocation(line: 1182, column: 21, scope: !7798)
!7803 = !DILocation(line: 1183, column: 41, scope: !7798)
!7804 = !DILocation(line: 1183, column: 21, scope: !7798)
!7805 = !DILocation(line: 1184, column: 43, scope: !7798)
!7806 = !DILocation(line: 1185, column: 17, scope: !7798)
!7807 = distinct !{!7807, !7796, !7808}
!7808 = !DILocation(line: 1185, column: 32, scope: !7782)
!7809 = !DILocation(line: 1194, column: 13, scope: !7760)
!7810 = !DILocation(line: 1195, column: 9, scope: !7760)
!7811 = !DILocation(line: 1197, column: 21, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7813, file: !1117, line: 1197, column: 17)
!7813 = distinct !DILexicalBlock(scope: !7754, file: !1117, line: 1195, column: 16)
!7814 = !DILocation(line: 1197, column: 32, scope: !7812)
!7815 = !DILocation(line: 1197, column: 53, scope: !7812)
!7816 = !DILocation(line: 1197, column: 60, scope: !7812)
!7817 = !DILocation(line: 1197, column: 76, scope: !7812)
!7818 = !DILocation(line: 1197, column: 17, scope: !7813)
!7819 = !DILocation(line: 1198, column: 54, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7812, file: !1117, line: 1197, column: 98)
!7821 = !DILocation(line: 1198, column: 59, scope: !7820)
!7822 = !DILocation(line: 1198, column: 26, scope: !7820)
!7823 = !DILocation(line: 1199, column: 40, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7820, file: !1117, line: 1199, column: 21)
!7825 = !DILocation(line: 1199, column: 37, scope: !7824)
!7826 = !DILocation(line: 1199, column: 35, scope: !7824)
!7827 = !DILocation(line: 1199, column: 24, scope: !7824)
!7828 = !DILocation(line: 1199, column: 63, scope: !7824)
!7829 = !DILocation(line: 1200, column: 41, scope: !7824)
!7830 = !DILocation(line: 1200, column: 39, scope: !7824)
!7831 = !DILocation(line: 1200, column: 28, scope: !7824)
!7832 = !DILocation(line: 1199, column: 21, scope: !7820)
!7833 = !DILocation(line: 1201, column: 40, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7824, file: !1117, line: 1200, column: 68)
!7835 = !DILocation(line: 1201, column: 21, scope: !7834)
!7836 = !DILocation(line: 1202, column: 40, scope: !7834)
!7837 = !DILocation(line: 1202, column: 21, scope: !7834)
!7838 = !DILocation(line: 1203, column: 17, scope: !7834)
!7839 = !DILocation(line: 1206, column: 13, scope: !7813)
!7840 = !DILocation(line: 1228, column: 25, scope: !7703)
!7841 = !DILocation(line: 1231, column: 29, scope: !7709)
!7842 = !DILocation(line: 0, scope: !7709)
!7843 = !DILocation(line: 1232, column: 13, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7709, file: !1117, line: 1232, column: 13)
!7845 = !DILocation(line: 1232, column: 43, scope: !7844)
!7846 = !DILocation(line: 1232, column: 13, scope: !7709)
!7847 = !DILocation(line: 1233, column: 43, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7844, file: !1117, line: 1232, column: 55)
!7849 = !DILocation(line: 1234, column: 9, scope: !7848)
!7850 = !DILocation(line: 1237, column: 5, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7852, file: !1117, line: 1237, column: 5)
!7852 = distinct !DILexicalBlock(scope: !7703, file: !1117, line: 1237, column: 5)
!7853 = !DILocation(line: 1240, column: 5, scope: !7703)
!7854 = !DILocation(line: 1241, column: 1, scope: !7703)
!7855 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !1117, file: !1117, line: 3421, type: !7619, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7856)
!7856 = !{!7857, !7858, !7859, !7860}
!7857 = !DILocalVariable(name: "D", arg: 1, scope: !7855, file: !1117, line: 3421, type: !1287)
!7858 = !DILocalVariable(name: "savedMask", scope: !7855, file: !1117, line: 3423, type: !61)
!7859 = !DILocalVariable(name: "currtime", scope: !7855, file: !1117, line: 3424, type: !61)
!7860 = !DILocalVariable(name: "difftime", scope: !7855, file: !1117, line: 3424, type: !61)
!7861 = !DILocation(line: 0, scope: !7855)
!7862 = !DILocation(line: 3427, column: 9, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7855, file: !1117, line: 3427, column: 9)
!7864 = !DILocation(line: 3427, column: 28, scope: !7863)
!7865 = !DILocation(line: 3427, column: 9, scope: !7855)
!7866 = !DILocation(line: 3429, column: 20, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7863, file: !1117, line: 3427, column: 59)
!7868 = !DILocation(line: 3430, column: 27, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7867, file: !1117, line: 3430, column: 13)
!7870 = !DILocation(line: 3430, column: 24, scope: !7869)
!7871 = !DILocation(line: 3430, column: 22, scope: !7869)
!7872 = !DILocation(line: 3430, column: 13, scope: !7867)
!7873 = !DILocation(line: 3431, column: 47, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7869, file: !1117, line: 3430, column: 46)
!7875 = !DILocation(line: 3431, column: 13, scope: !7874)
!7876 = !DILocation(line: 3432, column: 9, scope: !7874)
!7877 = !DILocation(line: 3435, column: 17, scope: !7855)
!7878 = !DILocation(line: 3436, column: 24, scope: !7855)
!7879 = !DILocation(line: 3436, column: 31, scope: !7855)
!7880 = !DILocation(line: 3436, column: 36, scope: !7855)
!7881 = !DILocation(line: 3436, column: 28, scope: !7855)
!7882 = !DILocation(line: 3436, column: 5, scope: !7855)
!7883 = !DILocation(line: 3442, column: 5, scope: !7855)
!7884 = !DILocation(line: 3443, column: 1, scope: !7855)
!7885 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !1117, file: !1117, line: 2405, type: !291, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7886)
!7886 = !{!7887}
!7887 = !DILocalVariable(name: "savedMask", scope: !7885, file: !1117, line: 2407, type: !61)
!7888 = !DILocation(line: 2408, column: 17, scope: !7885)
!7889 = !DILocation(line: 0, scope: !7885)
!7890 = !DILocation(line: 2413, column: 25, scope: !7885)
!7891 = !DILocation(line: 2414, column: 5, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7893, file: !1117, line: 2414, column: 5)
!7893 = distinct !DILexicalBlock(scope: !7885, file: !1117, line: 2414, column: 5)
!7894 = !DILocation(line: 2415, column: 5, scope: !7885)
!7895 = !DILocation(line: 2416, column: 1, scope: !7885)
!7896 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !1117, file: !1117, line: 3561, type: !7897, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7899)
!7897 = !DISubroutineType(types: !7898)
!7898 = !{null, !1287, !828, !395}
!7899 = !{!7900, !7901, !7902, !7903}
!7900 = !DILocalVariable(name: "D", arg: 1, scope: !7896, file: !1117, line: 3561, type: !1287)
!7901 = !DILocalVariable(name: "cmd", arg: 2, scope: !7896, file: !1117, line: 3561, type: !828)
!7902 = !DILocalVariable(name: "outlen", arg: 3, scope: !7896, file: !1117, line: 3561, type: !395)
!7903 = !DILocalVariable(name: "savedMask", scope: !7896, file: !1117, line: 3563, type: !61)
!7904 = !DILocation(line: 0, scope: !7896)
!7905 = !DILocation(line: 3565, column: 17, scope: !7896)
!7906 = !DILocation(line: 3566, column: 22, scope: !7896)
!7907 = !DILocation(line: 3566, column: 5, scope: !7896)
!7908 = !DILocation(line: 3567, column: 33, scope: !7896)
!7909 = !DILocation(line: 3568, column: 27, scope: !7896)
!7910 = !DILocation(line: 3568, column: 25, scope: !7896)
!7911 = !DILocation(line: 3569, column: 24, scope: !7896)
!7912 = !DILocation(line: 3570, column: 25, scope: !7896)
!7913 = !DILocation(line: 3570, column: 5, scope: !7896)
!7914 = !DILocation(line: 3571, column: 5, scope: !7896)
!7915 = !DILocation(line: 3573, column: 1, scope: !7896)
!7916 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !1117, file: !1117, line: 1410, type: !7917, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7919)
!7917 = !DISubroutineType(types: !7918)
!7918 = !{!1955}
!7919 = !{!7920}
!7920 = !DILocalVariable(name: "savedMask", scope: !7916, file: !1117, line: 1412, type: !993)
!7921 = !DILocation(line: 1413, column: 17, scope: !7916)
!7922 = !DILocation(line: 0, scope: !7916)
!7923 = !DILocation(line: 1414, column: 9, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7916, file: !1117, line: 1414, column: 9)
!7925 = !DILocation(line: 1414, column: 9, scope: !7916)
!7926 = !DILocation(line: 1415, column: 17, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7924, file: !1117, line: 1414, column: 24)
!7928 = !DILocation(line: 1417, column: 9, scope: !7927)
!7929 = !DILocation(line: 0, scope: !7924)
!7930 = !DILocation(line: 1425, column: 1, scope: !7916)
!7931 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !1117, file: !1117, line: 1257, type: !7932, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7934)
!7932 = !DISubroutineType(types: !7933)
!7933 = !{!91}
!7934 = !{!7935, !7936, !7937}
!7935 = !DILocalVariable(name: "D", scope: !7931, file: !1117, line: 1259, type: !1287)
!7936 = !DILocalVariable(name: "status", scope: !7931, file: !1117, line: 1260, type: !1339)
!7937 = !DILocalVariable(name: "result", scope: !7931, file: !1117, line: 1261, type: !91)
!7938 = !DILocation(line: 1259, column: 57, scope: !7931)
!7939 = !DILocation(line: 0, scope: !7931)
!7940 = !DILocation(line: 1263, column: 5, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7942, file: !1117, line: 1263, column: 5)
!7942 = distinct !DILexicalBlock(scope: !7931, file: !1117, line: 1263, column: 5)
!7943 = !DILocation(line: 1263, column: 5, scope: !7942)
!7944 = !DILocation(line: 1263, column: 5, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7941, file: !1117, line: 1263, column: 5)
!7946 = !DILocation(line: 1265, column: 5, scope: !7931)
!7947 = !DILocation(line: 1267, column: 42, scope: !7931)
!7948 = !DILocation(line: 1267, column: 47, scope: !7931)
!7949 = !DILocation(line: 1267, column: 14, scope: !7931)
!7950 = !DILocation(line: 1269, column: 27, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7931, file: !1117, line: 1269, column: 9)
!7952 = !DILocation(line: 1269, column: 24, scope: !7951)
!7953 = !DILocation(line: 1269, column: 22, scope: !7951)
!7954 = !DILocation(line: 1269, column: 11, scope: !7951)
!7955 = !DILocation(line: 1269, column: 9, scope: !7931)
!7956 = !DILocation(line: 1270, column: 9, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7951, file: !1117, line: 1269, column: 51)
!7958 = !DILocation(line: 1272, column: 5, scope: !7957)
!7959 = !DILocation(line: 1274, column: 5, scope: !7931)
!7960 = !DILocation(line: 1276, column: 5, scope: !7931)
!7961 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !1117, file: !1117, line: 1289, type: !291, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7962)
!7962 = !{!7963}
!7963 = !DILocalVariable(name: "D", scope: !7961, file: !1117, line: 1291, type: !1287)
!7964 = !DILocation(line: 0, scope: !7961)
!7965 = !DILocation(line: 1293, column: 5, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7967, file: !1117, line: 1293, column: 5)
!7967 = distinct !DILexicalBlock(scope: !7961, file: !1117, line: 1293, column: 5)
!7968 = !DILocation(line: 1293, column: 5, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7966, file: !1117, line: 1293, column: 5)
!7970 = !DILocation(line: 1293, column: 5, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7972, file: !1117, line: 1293, column: 5)
!7972 = distinct !DILexicalBlock(scope: !7973, file: !1117, line: 1293, column: 5)
!7973 = distinct !DILexicalBlock(scope: !7969, file: !1117, line: 1293, column: 5)
!7974 = !DILocation(line: 1291, column: 60, scope: !7961)
!7975 = !DILocation(line: 1295, column: 5, scope: !7961)
!7976 = !DILocation(line: 1296, column: 1, scope: !7961)
!7977 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !1117, file: !1117, line: 3452, type: !7619, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7978)
!7978 = !{!7979, !7980}
!7979 = !DILocalVariable(name: "D", arg: 1, scope: !7977, file: !1117, line: 3452, type: !1287)
!7980 = !DILocalVariable(name: "savedMask", scope: !7977, file: !1117, line: 3454, type: !61)
!7981 = !DILocation(line: 0, scope: !7977)
!7982 = !DILocation(line: 3456, column: 17, scope: !7977)
!7983 = !DILocation(line: 3462, column: 24, scope: !7977)
!7984 = !DILocation(line: 3462, column: 31, scope: !7977)
!7985 = !DILocation(line: 3462, column: 36, scope: !7977)
!7986 = !DILocation(line: 3462, column: 28, scope: !7977)
!7987 = !DILocation(line: 3462, column: 5, scope: !7977)
!7988 = !DILocation(line: 3463, column: 12, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7977, file: !1117, line: 3463, column: 9)
!7990 = !DILocation(line: 3463, column: 27, scope: !7989)
!7991 = !DILocation(line: 3463, column: 9, scope: !7977)
!7992 = !DILocation(line: 3464, column: 28, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7989, file: !1117, line: 3463, column: 33)
!7994 = !DILocation(line: 3465, column: 5, scope: !7993)
!7995 = !DILocation(line: 3467, column: 5, scope: !7977)
!7996 = !DILocation(line: 3468, column: 5, scope: !7977)
!7997 = !DILocation(line: 3469, column: 1, scope: !7977)
!7998 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !1117, file: !1117, line: 2417, type: !291, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7999)
!7999 = !{!8000}
!8000 = !DILocalVariable(name: "savedMask", scope: !7998, file: !1117, line: 2419, type: !61)
!8001 = !DILocation(line: 2420, column: 17, scope: !7998)
!8002 = !DILocation(line: 0, scope: !7998)
!8003 = !DILocation(line: 2425, column: 25, scope: !7998)
!8004 = !DILocation(line: 2426, column: 5, scope: !7998)
!8005 = !DILocation(line: 2427, column: 1, scope: !7998)
!8006 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !1117, file: !1117, line: 1308, type: !291, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8007)
!8007 = !{!8008, !8009}
!8008 = !DILocalVariable(name: "D", scope: !8006, file: !1117, line: 1310, type: !1287)
!8009 = !DILocalVariable(name: "status", scope: !8006, file: !1117, line: 1311, type: !1339)
!8010 = !DILocation(line: 1310, column: 60, scope: !8006)
!8011 = !DILocation(line: 0, scope: !8006)
!8012 = !DILocation(line: 1313, column: 5, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !8014, file: !1117, line: 1313, column: 5)
!8014 = distinct !DILexicalBlock(scope: !8006, file: !1117, line: 1313, column: 5)
!8015 = !DILocation(line: 1313, column: 5, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8013, file: !1117, line: 1313, column: 5)
!8017 = !DILocation(line: 1313, column: 5, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8019, file: !1117, line: 1313, column: 5)
!8019 = distinct !DILexicalBlock(scope: !8020, file: !1117, line: 1313, column: 5)
!8020 = distinct !DILexicalBlock(scope: !8016, file: !1117, line: 1313, column: 5)
!8021 = !DILocation(line: 1315, column: 5, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8023, file: !1117, line: 1315, column: 5)
!8023 = distinct !DILexicalBlock(scope: !8006, file: !1117, line: 1315, column: 5)
!8024 = !DILocation(line: 1315, column: 5, scope: !8023)
!8025 = !DILocation(line: 1315, column: 5, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8022, file: !1117, line: 1315, column: 5)
!8027 = !DILocation(line: 1317, column: 5, scope: !8006)
!8028 = !DILocation(line: 1319, column: 5, scope: !8006)
!8029 = !DILocation(line: 1320, column: 46, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8006, file: !1117, line: 1319, column: 15)
!8031 = !DILocation(line: 1320, column: 51, scope: !8030)
!8032 = !DILocation(line: 1320, column: 18, scope: !8030)
!8033 = !DILocation(line: 1322, column: 31, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8030, file: !1117, line: 1322, column: 13)
!8035 = !DILocation(line: 1322, column: 28, scope: !8034)
!8036 = !DILocation(line: 1322, column: 26, scope: !8034)
!8037 = !DILocation(line: 1322, column: 15, scope: !8034)
!8038 = !DILocation(line: 1322, column: 13, scope: !8030)
!8039 = distinct !{!8039, !8028, !8040}
!8040 = !DILocation(line: 1325, column: 5, scope: !8006)
!8041 = !DILocation(line: 1327, column: 5, scope: !8006)
!8042 = !DILocation(line: 1328, column: 1, scope: !8006)
!8043 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !1117, file: !1117, line: 1394, type: !7619, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8044)
!8044 = !{!8045}
!8045 = !DILocalVariable(name: "D", arg: 1, scope: !8043, file: !1117, line: 1394, type: !1287)
!8046 = !DILocation(line: 0, scope: !8043)
!8047 = !DILocation(line: 1401, column: 1, scope: !8043)
!8048 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !1117, file: !1117, line: 1556, type: !8049, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8070)
!8049 = !DISubroutineType(types: !8050)
!8050 = !{!993, !8051, !1287}
!8051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8052, size: 32)
!8052 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1313, line: 121, baseType: !8053)
!8053 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 105, size: 480, elements: !8054)
!8054 = !{!8055, !8056, !8057, !8058, !8059, !8060, !8061, !8062, !8063, !8064, !8065, !8066, !8067, !8068, !8069}
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !8053, file: !1313, line: 106, baseType: !1587, size: 32)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !8053, file: !1313, line: 107, baseType: !1388, size: 32, offset: 32)
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !8053, file: !1313, line: 108, baseType: !1592, size: 32, offset: 64)
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !8053, file: !1313, line: 109, baseType: !1596, size: 32, offset: 96)
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !8053, file: !1313, line: 110, baseType: !1600, size: 32, offset: 128)
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !8053, file: !1313, line: 111, baseType: !1596, size: 32, offset: 160)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !8053, file: !1313, line: 112, baseType: !1605, size: 32, offset: 192)
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !8053, file: !1313, line: 113, baseType: !1596, size: 32, offset: 224)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !8053, file: !1313, line: 114, baseType: !1596, size: 32, offset: 256)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !8053, file: !1313, line: 115, baseType: !1596, size: 32, offset: 288)
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !8053, file: !1313, line: 116, baseType: !1612, size: 32, offset: 320)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !8053, file: !1313, line: 117, baseType: !1617, size: 32, offset: 352)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !8053, file: !1313, line: 118, baseType: !1622, size: 32, offset: 384)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !8053, file: !1313, line: 119, baseType: !1626, size: 32, offset: 416)
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !8053, file: !1313, line: 120, baseType: !1630, size: 32, offset: 448)
!8070 = !{!8071, !8072, !8073}
!8071 = !DILocalVariable(name: "driver", arg: 1, scope: !8048, file: !1117, line: 1556, type: !8051)
!8072 = !DILocalVariable(name: "D", arg: 2, scope: !8048, file: !1117, line: 1556, type: !1287)
!8073 = !DILocalVariable(name: "smap", scope: !8048, file: !1117, line: 1558, type: !1338)
!8074 = !DILocation(line: 0, scope: !8048)
!8075 = !DILocation(line: 1561, column: 15, scope: !8048)
!8076 = !DILocation(line: 1562, column: 22, scope: !8048)
!8077 = !DILocation(line: 1563, column: 5, scope: !8048)
!8078 = !DILocation(line: 1563, column: 22, scope: !8048)
!8079 = !DILocation(line: 1565, column: 5, scope: !8048)
!8080 = !DILocation(line: 1565, column: 22, scope: !8048)
!8081 = !DILocation(line: 1566, column: 5, scope: !8048)
!8082 = !DILocation(line: 1566, column: 22, scope: !8048)
!8083 = !DILocation(line: 1568, column: 5, scope: !8048)
!8084 = !DILocation(line: 1568, column: 22, scope: !8048)
!8085 = !DILocation(line: 1569, column: 5, scope: !8048)
!8086 = !DILocation(line: 1569, column: 22, scope: !8048)
!8087 = !DILocation(line: 1570, column: 5, scope: !8048)
!8088 = !DILocation(line: 1570, column: 22, scope: !8048)
!8089 = !DILocation(line: 1573, column: 8, scope: !8048)
!8090 = !DILocation(line: 1573, column: 13, scope: !8048)
!8091 = !DILocation(line: 1573, column: 28, scope: !8048)
!8092 = !DILocation(line: 1574, column: 8, scope: !8048)
!8093 = !DILocation(line: 1574, column: 13, scope: !8048)
!8094 = !DILocation(line: 1574, column: 29, scope: !8048)
!8095 = !DILocation(line: 1575, column: 8, scope: !8048)
!8096 = !DILocation(line: 1575, column: 13, scope: !8048)
!8097 = !DILocation(line: 1575, column: 30, scope: !8048)
!8098 = !DILocation(line: 1576, column: 8, scope: !8048)
!8099 = !DILocation(line: 1576, column: 13, scope: !8048)
!8100 = !DILocation(line: 1576, column: 23, scope: !8048)
!8101 = !DILocation(line: 1577, column: 8, scope: !8048)
!8102 = !DILocation(line: 1577, column: 13, scope: !8048)
!8103 = !DILocation(line: 1577, column: 24, scope: !8048)
!8104 = !DILocation(line: 1578, column: 8, scope: !8048)
!8105 = !DILocation(line: 1578, column: 13, scope: !8048)
!8106 = !DILocation(line: 1578, column: 25, scope: !8048)
!8107 = !DILocation(line: 1579, column: 8, scope: !8048)
!8108 = !DILocation(line: 1579, column: 23, scope: !8048)
!8109 = !DILocation(line: 1583, column: 10, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8048, file: !1117, line: 1583, column: 9)
!8111 = !DILocation(line: 1583, column: 24, scope: !8110)
!8112 = !DILocation(line: 1583, column: 32, scope: !8110)
!8113 = !DILocation(line: 1583, column: 35, scope: !8110)
!8114 = !DILocation(line: 1583, column: 49, scope: !8110)
!8115 = !DILocation(line: 1583, column: 9, scope: !8048)
!8116 = !DILocation(line: 1586, column: 12, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8110, file: !1117, line: 1583, column: 59)
!8118 = !DILocation(line: 1586, column: 17, scope: !8117)
!8119 = !DILocation(line: 1586, column: 25, scope: !8117)
!8120 = !DILocation(line: 1587, column: 12, scope: !8117)
!8121 = !DILocation(line: 1587, column: 17, scope: !8117)
!8122 = !DILocation(line: 1587, column: 24, scope: !8117)
!8123 = !DILocation(line: 1591, column: 10, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8048, file: !1117, line: 1591, column: 9)
!8125 = !DILocation(line: 1589, column: 5, scope: !8117)
!8126 = !DILocation(line: 1600, column: 32, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8048, file: !1117, line: 1600, column: 9)
!8128 = !DILocation(line: 1600, column: 35, scope: !8127)
!8129 = !DILocation(line: 1600, column: 49, scope: !8127)
!8130 = !DILocation(line: 1600, column: 9, scope: !8048)
!8131 = !DILocation(line: 1601, column: 12, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8127, file: !1117, line: 1600, column: 59)
!8133 = !DILocation(line: 1601, column: 17, scope: !8132)
!8134 = !DILocation(line: 1601, column: 25, scope: !8132)
!8135 = !DILocation(line: 1602, column: 12, scope: !8132)
!8136 = !DILocation(line: 1602, column: 17, scope: !8132)
!8137 = !DILocation(line: 1602, column: 24, scope: !8132)
!8138 = !DILocation(line: 1603, column: 5, scope: !8132)
!8139 = !DILocation(line: 1607, column: 8, scope: !8048)
!8140 = !DILocation(line: 1607, column: 20, scope: !8048)
!8141 = !DILocation(line: 1622, column: 5, scope: !8048)
!8142 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !1117, file: !1117, line: 4553, type: !1389, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8143)
!8143 = !{!8144, !8145, !8146, !8147}
!8144 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8142, file: !1117, line: 4553, type: !88)
!8145 = !DILocalVariable(name: "D", scope: !8142, file: !1117, line: 4555, type: !1287)
!8146 = !DILocalVariable(name: "unlock", scope: !8142, file: !1117, line: 4556, type: !61)
!8147 = !DILocalVariable(name: "cmd", scope: !8142, file: !1117, line: 4557, type: !395)
!8148 = !DILocation(line: 0, scope: !8142)
!8149 = !DILocation(line: 4555, column: 24, scope: !8142)
!8150 = !DILocation(line: 4557, column: 5, scope: !8142)
!8151 = !DILocation(line: 4558, column: 12, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8142, file: !1117, line: 4558, column: 9)
!8153 = !DILocation(line: 4558, column: 9, scope: !8152)
!8154 = !DILocation(line: 4558, column: 23, scope: !8152)
!8155 = !DILocation(line: 4558, column: 31, scope: !8152)
!8156 = !DILocation(line: 4558, column: 34, scope: !8152)
!8157 = !DILocation(line: 4558, column: 48, scope: !8152)
!8158 = !DILocation(line: 4558, column: 56, scope: !8152)
!8159 = !DILocation(line: 4558, column: 59, scope: !8152)
!8160 = !DILocation(line: 4558, column: 73, scope: !8152)
!8161 = !DILocation(line: 4558, column: 9, scope: !8142)
!8162 = !DILocation(line: 4563, column: 24, scope: !8142)
!8163 = !DILocation(line: 4563, column: 31, scope: !8142)
!8164 = !DILocation(line: 4563, column: 36, scope: !8142)
!8165 = !DILocation(line: 4563, column: 28, scope: !8142)
!8166 = !DILocation(line: 4563, column: 5, scope: !8142)
!8167 = !DILocation(line: 4564, column: 5, scope: !8142)
!8168 = !DILocation(line: 4567, column: 28, scope: !8142)
!8169 = !DILocation(line: 4567, column: 36, scope: !8142)
!8170 = !DILocation(line: 4567, column: 41, scope: !8142)
!8171 = !DILocation(line: 4567, column: 5, scope: !8142)
!8172 = !DILocation(line: 4568, column: 17, scope: !8142)
!8173 = !DILocation(line: 4568, column: 22, scope: !8142)
!8174 = !DILocation(line: 4568, column: 14, scope: !8142)
!8175 = !DILocation(line: 4569, column: 22, scope: !8142)
!8176 = !DILocation(line: 4569, column: 54, scope: !8142)
!8177 = !DILocation(line: 4569, column: 65, scope: !8142)
!8178 = !DILocation(line: 4569, column: 62, scope: !8142)
!8179 = !DILocation(line: 4569, column: 87, scope: !8142)
!8180 = !DILocation(line: 4569, column: 85, scope: !8142)
!8181 = !DILocation(line: 4569, column: 60, scope: !8142)
!8182 = !DILocation(line: 4569, column: 58, scope: !8142)
!8183 = !DILocation(line: 4569, column: 51, scope: !8142)
!8184 = !DILocation(line: 4572, column: 24, scope: !8142)
!8185 = !DILocation(line: 4572, column: 5, scope: !8142)
!8186 = !DILocation(line: 4573, column: 5, scope: !8142)
!8187 = !DILocation(line: 4575, column: 5, scope: !8142)
!8188 = !DILocation(line: 4576, column: 1, scope: !8142)
!8189 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !1117, file: !1117, line: 4488, type: !7619, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8190)
!8190 = !{!8191, !8192}
!8191 = !DILocalVariable(name: "D", arg: 1, scope: !8189, file: !1117, line: 4488, type: !1287)
!8192 = !DILocalVariable(name: "status", scope: !8189, file: !1117, line: 4490, type: !1339)
!8193 = !DILocation(line: 0, scope: !8189)
!8194 = !DILocation(line: 4490, column: 5, scope: !8189)
!8195 = !DILocation(line: 4491, column: 5, scope: !8189)
!8196 = !DILocation(line: 4492, column: 32, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8189, file: !1117, line: 4491, column: 10)
!8198 = !DILocation(line: 4492, column: 40, scope: !8197)
!8199 = !DILocation(line: 4492, column: 45, scope: !8197)
!8200 = !DILocation(line: 4492, column: 9, scope: !8197)
!8201 = !DILocation(line: 4493, column: 20, scope: !8189)
!8202 = !DILocation(line: 4493, column: 32, scope: !8189)
!8203 = !DILocation(line: 4493, column: 29, scope: !8189)
!8204 = !DILocation(line: 4493, column: 27, scope: !8189)
!8205 = !DILocation(line: 4493, column: 16, scope: !8189)
!8206 = !DILocation(line: 4493, column: 5, scope: !8197)
!8207 = distinct !{!8207, !8195, !8208}
!8208 = !DILocation(line: 4493, column: 54, scope: !8189)
!8209 = !DILocation(line: 4494, column: 1, scope: !8189)
!8210 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !1117, file: !1117, line: 1742, type: !8049, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8211)
!8211 = !{!8212, !8213, !8214}
!8212 = !DILocalVariable(name: "driver", arg: 1, scope: !8210, file: !1117, line: 1742, type: !8051)
!8213 = !DILocalVariable(name: "D", arg: 2, scope: !8210, file: !1117, line: 1742, type: !1287)
!8214 = !DILocalVariable(name: "smap", scope: !8210, file: !1117, line: 1744, type: !1338)
!8215 = !DILocation(line: 0, scope: !8210)
!8216 = !DILocation(line: 1747, column: 15, scope: !8210)
!8217 = !DILocation(line: 1748, column: 22, scope: !8210)
!8218 = !DILocation(line: 1749, column: 5, scope: !8210)
!8219 = !DILocation(line: 1749, column: 22, scope: !8210)
!8220 = !DILocation(line: 1750, column: 5, scope: !8210)
!8221 = !DILocation(line: 1750, column: 22, scope: !8210)
!8222 = !DILocation(line: 1751, column: 5, scope: !8210)
!8223 = !DILocation(line: 1751, column: 22, scope: !8210)
!8224 = !DILocation(line: 1752, column: 5, scope: !8210)
!8225 = !DILocation(line: 1752, column: 22, scope: !8210)
!8226 = !DILocation(line: 1753, column: 5, scope: !8210)
!8227 = !DILocation(line: 1753, column: 22, scope: !8210)
!8228 = !DILocation(line: 1756, column: 8, scope: !8210)
!8229 = !DILocation(line: 1756, column: 13, scope: !8210)
!8230 = !DILocation(line: 1756, column: 24, scope: !8210)
!8231 = !DILocation(line: 1758, column: 8, scope: !8210)
!8232 = !DILocation(line: 1758, column: 13, scope: !8210)
!8233 = !DILocation(line: 1758, column: 28, scope: !8210)
!8234 = !DILocation(line: 1759, column: 8, scope: !8210)
!8235 = !DILocation(line: 1759, column: 13, scope: !8210)
!8236 = !DILocation(line: 1759, column: 29, scope: !8210)
!8237 = !DILocation(line: 1760, column: 8, scope: !8210)
!8238 = !DILocation(line: 1760, column: 13, scope: !8210)
!8239 = !DILocation(line: 1760, column: 23, scope: !8210)
!8240 = !DILocation(line: 1761, column: 8, scope: !8210)
!8241 = !DILocation(line: 1761, column: 13, scope: !8210)
!8242 = !DILocation(line: 1761, column: 24, scope: !8210)
!8243 = !DILocation(line: 1762, column: 8, scope: !8210)
!8244 = !DILocation(line: 1762, column: 13, scope: !8210)
!8245 = !DILocation(line: 1762, column: 21, scope: !8210)
!8246 = !DILocation(line: 1763, column: 8, scope: !8210)
!8247 = !DILocation(line: 1763, column: 13, scope: !8210)
!8248 = !DILocation(line: 1763, column: 20, scope: !8210)
!8249 = !DILocation(line: 1764, column: 8, scope: !8210)
!8250 = !DILocation(line: 1764, column: 23, scope: !8210)
!8251 = !DILocation(line: 1768, column: 8, scope: !8210)
!8252 = !DILocation(line: 1768, column: 20, scope: !8210)
!8253 = !DILocation(line: 1770, column: 5, scope: !8210)
!8254 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !1117, file: !1117, line: 1775, type: !8049, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8255)
!8255 = !{!8256, !8257}
!8256 = !DILocalVariable(name: "driver", arg: 1, scope: !8254, file: !1117, line: 1775, type: !8051)
!8257 = !DILocalVariable(name: "D", arg: 2, scope: !8254, file: !1117, line: 1775, type: !1287)
!8258 = !DILocation(line: 0, scope: !8254)
!8259 = !DILocation(line: 1793, column: 5, scope: !8254)
!8260 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !1117, file: !1117, line: 1932, type: !8049, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8261)
!8261 = !{!8262, !8263}
!8262 = !DILocalVariable(name: "driver", arg: 1, scope: !8260, file: !1117, line: 1932, type: !8051)
!8263 = !DILocalVariable(name: "D", arg: 2, scope: !8260, file: !1117, line: 1932, type: !1287)
!8264 = !DILocation(line: 0, scope: !8260)
!8265 = !DILocation(line: 1935, column: 13, scope: !8260)
!8266 = !DILocation(line: 1935, column: 25, scope: !8260)
!8267 = !DILocation(line: 1936, column: 13, scope: !8260)
!8268 = !DILocation(line: 1936, column: 22, scope: !8260)
!8269 = !DILocation(line: 1937, column: 13, scope: !8260)
!8270 = !DILocation(line: 1937, column: 23, scope: !8260)
!8271 = !DILocation(line: 1939, column: 13, scope: !8260)
!8272 = !DILocation(line: 1939, column: 24, scope: !8260)
!8273 = !DILocation(line: 1940, column: 13, scope: !8260)
!8274 = !DILocation(line: 1940, column: 25, scope: !8260)
!8275 = !DILocation(line: 1945, column: 13, scope: !8260)
!8276 = !DILocation(line: 1945, column: 32, scope: !8260)
!8277 = !DILocation(line: 1946, column: 13, scope: !8260)
!8278 = !DILocation(line: 1946, column: 30, scope: !8260)
!8279 = !DILocation(line: 1947, column: 13, scope: !8260)
!8280 = !DILocation(line: 1947, column: 26, scope: !8260)
!8281 = !DILocation(line: 1948, column: 13, scope: !8260)
!8282 = !DILocation(line: 1948, column: 25, scope: !8260)
!8283 = !DILocation(line: 1949, column: 13, scope: !8260)
!8284 = !DILocation(line: 1949, column: 24, scope: !8260)
!8285 = !DILocation(line: 1956, column: 13, scope: !8260)
!8286 = !DILocation(line: 1956, column: 23, scope: !8260)
!8287 = !DILocation(line: 1957, column: 13, scope: !8260)
!8288 = !DILocation(line: 1957, column: 28, scope: !8260)
!8289 = !DILocation(line: 1960, column: 13, scope: !8260)
!8290 = !DILocation(line: 1960, column: 30, scope: !8260)
!8291 = !DILocation(line: 1961, column: 13, scope: !8260)
!8292 = !DILocation(line: 1961, column: 30, scope: !8260)
!8293 = !DILocation(line: 1962, column: 13, scope: !8260)
!8294 = !DILocation(line: 1962, column: 20, scope: !8260)
!8295 = !DILocation(line: 1968, column: 9, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8260, file: !1117, line: 1968, column: 9)
!8297 = !DILocation(line: 1968, column: 36, scope: !8296)
!8298 = !DILocation(line: 1968, column: 9, scope: !8260)
!8299 = !DILocation(line: 1971, column: 12, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8296, file: !1117, line: 1970, column: 5)
!8301 = !DILocation(line: 1971, column: 25, scope: !8300)
!8302 = !DILocation(line: 1979, column: 8, scope: !8260)
!8303 = !DILocation(line: 1979, column: 13, scope: !8260)
!8304 = !DILocation(line: 1979, column: 25, scope: !8260)
!8305 = !DILocation(line: 1980, column: 8, scope: !8260)
!8306 = !DILocation(line: 1980, column: 13, scope: !8260)
!8307 = !DILocation(line: 1980, column: 24, scope: !8260)
!8308 = !DILocation(line: 1981, column: 8, scope: !8260)
!8309 = !DILocation(line: 1981, column: 13, scope: !8260)
!8310 = !DILocation(line: 1981, column: 24, scope: !8260)
!8311 = !DILocation(line: 1982, column: 8, scope: !8260)
!8312 = !DILocation(line: 1982, column: 13, scope: !8260)
!8313 = !DILocation(line: 1982, column: 22, scope: !8260)
!8314 = !DILocation(line: 1983, column: 8, scope: !8260)
!8315 = !DILocation(line: 1983, column: 13, scope: !8260)
!8316 = !DILocation(line: 1983, column: 21, scope: !8260)
!8317 = !DILocation(line: 1984, column: 8, scope: !8260)
!8318 = !DILocation(line: 1984, column: 13, scope: !8260)
!8319 = !DILocation(line: 1984, column: 22, scope: !8260)
!8320 = !DILocation(line: 1985, column: 8, scope: !8260)
!8321 = !DILocation(line: 1985, column: 13, scope: !8260)
!8322 = !DILocation(line: 1985, column: 22, scope: !8260)
!8323 = !DILocation(line: 1986, column: 8, scope: !8260)
!8324 = !DILocation(line: 1986, column: 13, scope: !8260)
!8325 = !DILocation(line: 1986, column: 21, scope: !8260)
!8326 = !DILocation(line: 1987, column: 8, scope: !8260)
!8327 = !DILocation(line: 1987, column: 13, scope: !8260)
!8328 = !DILocation(line: 1987, column: 20, scope: !8260)
!8329 = !DILocation(line: 1988, column: 8, scope: !8260)
!8330 = !DILocation(line: 1988, column: 13, scope: !8260)
!8331 = !DILocation(line: 1988, column: 25, scope: !8260)
!8332 = !DILocation(line: 1989, column: 8, scope: !8260)
!8333 = !DILocation(line: 1989, column: 13, scope: !8260)
!8334 = !DILocation(line: 1989, column: 22, scope: !8260)
!8335 = !DILocation(line: 1990, column: 8, scope: !8260)
!8336 = !DILocation(line: 1990, column: 13, scope: !8260)
!8337 = !DILocation(line: 1990, column: 22, scope: !8260)
!8338 = !DILocation(line: 1993, column: 8, scope: !8260)
!8339 = !DILocation(line: 1993, column: 13, scope: !8260)
!8340 = !DILocation(line: 1993, column: 26, scope: !8260)
!8341 = !DILocation(line: 1996, column: 8, scope: !8260)
!8342 = !DILocation(line: 1996, column: 20, scope: !8260)
!8343 = !DILocation(line: 1999, column: 8, scope: !8260)
!8344 = !DILocation(line: 1999, column: 24, scope: !8260)
!8345 = !DILocation(line: 2000, column: 8, scope: !8260)
!8346 = !DILocation(line: 2000, column: 19, scope: !8260)
!8347 = !DILocation(line: 2001, column: 8, scope: !8260)
!8348 = !DILocation(line: 2001, column: 24, scope: !8260)
!8349 = !DILocation(line: 2002, column: 8, scope: !8260)
!8350 = !DILocation(line: 2002, column: 23, scope: !8260)
!8351 = !DILocation(line: 2004, column: 5, scope: !8260)
!8352 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !1117, file: !1117, line: 2160, type: !1588, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8353)
!8353 = !{!8354, !8355, !8356, !8369, !8370, !8371}
!8354 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8352, file: !1117, line: 2160, type: !88)
!8355 = !DILocalVariable(name: "Info", arg: 2, scope: !8352, file: !1117, line: 2160, type: !88)
!8356 = !DILocalVariable(name: "FlashInfo", scope: !8352, file: !1117, line: 2162, type: !8357)
!8357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8358, size: 32)
!8358 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1313, line: 99, baseType: !8359)
!8359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 90, size: 928, elements: !8360)
!8360 = !{!8361, !8362, !8363, !8364, !8365, !8366, !8367, !8368}
!8361 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !8359, file: !1313, line: 91, baseType: !61, size: 32)
!8362 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !8359, file: !1313, line: 92, baseType: !1644, size: 256, offset: 32)
!8363 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !8359, file: !1313, line: 93, baseType: !1644, size: 256, offset: 288)
!8364 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !8359, file: !1313, line: 94, baseType: !1644, size: 256, offset: 544)
!8365 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !8359, file: !1313, line: 95, baseType: !61, size: 32, offset: 800)
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !8359, file: !1313, line: 96, baseType: !1636, size: 16, offset: 832)
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !8359, file: !1313, line: 97, baseType: !61, size: 32, offset: 864)
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !8359, file: !1313, line: 98, baseType: !61, size: 32, offset: 896)
!8369 = !DILocalVariable(name: "D", scope: !8352, file: !1117, line: 2163, type: !1287)
!8370 = !DILocalVariable(name: "i", scope: !8352, file: !1117, line: 2164, type: !61)
!8371 = !DILocalVariable(name: "result", scope: !8352, file: !1117, line: 2166, type: !993)
!8372 = !DILocation(line: 0, scope: !8352)
!8373 = !DILocation(line: 2163, column: 37, scope: !8352)
!8374 = !DILocation(line: 2202, column: 16, scope: !8352)
!8375 = !DILocation(line: 2202, column: 28, scope: !8352)
!8376 = !DILocation(line: 2204, column: 15, scope: !8352)
!8377 = !DILocation(line: 2204, column: 29, scope: !8352)
!8378 = !DILocation(line: 2204, column: 39, scope: !8352)
!8379 = !DILocation(line: 2204, column: 5, scope: !8352)
!8380 = !DILocation(line: 2205, column: 9, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8352, file: !1117, line: 2204, column: 45)
!8382 = !DILocation(line: 2205, column: 33, scope: !8381)
!8383 = !DILocation(line: 2206, column: 41, scope: !8381)
!8384 = !DILocation(line: 2206, column: 55, scope: !8381)
!8385 = !DILocation(line: 2206, column: 9, scope: !8381)
!8386 = !DILocation(line: 2206, column: 36, scope: !8381)
!8387 = !DILocation(line: 2207, column: 38, scope: !8381)
!8388 = !DILocation(line: 2207, column: 52, scope: !8381)
!8389 = !DILocation(line: 2207, column: 32, scope: !8381)
!8390 = !DILocation(line: 2209, column: 10, scope: !8381)
!8391 = distinct !{!8391, !8379, !8392}
!8392 = !DILocation(line: 2210, column: 5, scope: !8352)
!8393 = !DILocation(line: 2212, column: 16, scope: !8352)
!8394 = !DILocation(line: 2212, column: 32, scope: !8352)
!8395 = !DILocation(line: 2213, column: 16, scope: !8352)
!8396 = !DILocation(line: 2213, column: 25, scope: !8352)
!8397 = !DILocation(line: 2236, column: 5, scope: !8352)
!8398 = !DILocation(line: 2238, column: 5, scope: !8352)
!8399 = !DILocation(line: 2239, column: 18, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8352, file: !1117, line: 2238, column: 10)
!8401 = !DILocation(line: 2240, column: 34, scope: !8352)
!8402 = !DILocation(line: 2240, column: 5, scope: !8400)
!8403 = distinct !{!8403, !8398, !8404}
!8404 = !DILocation(line: 2240, column: 43, scope: !8352)
!8405 = !DILocation(line: 2259, column: 5, scope: !8352)
!8406 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !1117, file: !1117, line: 2275, type: !1389, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8407)
!8407 = !{!8408, !8409, !8410, !8411}
!8408 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8406, file: !1117, line: 2275, type: !88)
!8409 = !DILocalVariable(name: "D", scope: !8406, file: !1117, line: 2278, type: !1287)
!8410 = !DILocalVariable(name: "status", scope: !8406, file: !1117, line: 2279, type: !1339)
!8411 = !DILocalVariable(name: "saved_mask", scope: !8406, file: !1117, line: 2280, type: !61)
!8412 = !DILocation(line: 0, scope: !8406)
!8413 = !DILocation(line: 2278, column: 33, scope: !8406)
!8414 = !DILocation(line: 2286, column: 5, scope: !8406)
!8415 = !DILocation(line: 2293, column: 9, scope: !8406)
!8416 = !DILocation(line: 2294, column: 26, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8406, file: !1117, line: 2293, column: 19)
!8418 = !DILocation(line: 2297, column: 17, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8417, file: !1117, line: 2297, column: 17)
!8420 = !DILocation(line: 2297, column: 17, scope: !8417)
!8421 = !DILocation(line: 2298, column: 17, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8419, file: !1117, line: 2297, column: 36)
!8423 = !DILocation(line: 2299, column: 37, scope: !8422)
!8424 = !DILocation(line: 2300, column: 13, scope: !8422)
!8425 = !DILocation(line: 2303, column: 50, scope: !8417)
!8426 = !DILocation(line: 2303, column: 55, scope: !8417)
!8427 = !DILocation(line: 2303, column: 22, scope: !8417)
!8428 = !DILocation(line: 2306, column: 35, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8417, file: !1117, line: 2306, column: 17)
!8430 = !DILocation(line: 2306, column: 32, scope: !8429)
!8431 = !DILocation(line: 2306, column: 30, scope: !8429)
!8432 = !DILocation(line: 2306, column: 19, scope: !8429)
!8433 = !DILocation(line: 2306, column: 17, scope: !8417)
!8434 = !DILocation(line: 2307, column: 17, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8429, file: !1117, line: 2306, column: 59)
!8436 = !DILocation(line: 2308, column: 17, scope: !8435)
!8437 = !DILocation(line: 2315, column: 12, scope: !8406)
!8438 = !DILocation(line: 2315, column: 21, scope: !8406)
!8439 = !DILocation(line: 2325, column: 9, scope: !8406)
!8440 = !DILocation(line: 2326, column: 5, scope: !8406)
!8441 = !DILocation(line: 2311, column: 17, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8429, file: !1117, line: 2310, column: 20)
!8443 = distinct !{!8443, !8415, !8444}
!8444 = !DILocation(line: 2313, column: 9, scope: !8406)
!8445 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !1117, file: !1117, line: 2819, type: !1597, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8446)
!8446 = !{!8447, !8448, !8449, !8450, !8451, !8452, !8453, !8454, !8455, !8456, !8459, !8460}
!8447 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8445, file: !1117, line: 2819, type: !88)
!8448 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8445, file: !1117, line: 2819, type: !61)
!8449 = !DILocalVariable(name: "result", scope: !8445, file: !1117, line: 2821, type: !993)
!8450 = !DILocalVariable(name: "blocksize", scope: !8445, file: !1117, line: 2822, type: !61)
!8451 = !DILocalVariable(name: "eraseunit", scope: !8445, file: !1117, line: 2823, type: !61)
!8452 = !DILocalVariable(name: "eraseaddr", scope: !8445, file: !1117, line: 2824, type: !61)
!8453 = !DILocalVariable(name: "iteration", scope: !8445, file: !1117, line: 2825, type: !61)
!8454 = !DILocalVariable(name: "D", scope: !8445, file: !1117, line: 2826, type: !1287)
!8455 = !DILocalVariable(name: "erase_block", scope: !8445, file: !1117, line: 2827, type: !61)
!8456 = !DILocalVariable(name: "a", scope: !8457, file: !1117, line: 2853, type: !61)
!8457 = distinct !DILexicalBlock(scope: !8458, file: !1117, line: 2852, column: 56)
!8458 = distinct !DILexicalBlock(scope: !8445, file: !1117, line: 2852, column: 9)
!8459 = !DILocalVariable(name: "b", scope: !8457, file: !1117, line: 2853, type: !61)
!8460 = !DILocalVariable(name: "c", scope: !8457, file: !1117, line: 2853, type: !61)
!8461 = !DILocation(line: 0, scope: !8445)
!8462 = !DILocation(line: 2826, column: 30, scope: !8445)
!8463 = !DILocation(line: 2829, column: 5, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8465, file: !1117, line: 2829, column: 5)
!8465 = distinct !DILexicalBlock(scope: !8445, file: !1117, line: 2829, column: 5)
!8466 = !DILocation(line: 2829, column: 5, scope: !8465)
!8467 = !DILocation(line: 2829, column: 5, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8464, file: !1117, line: 2829, column: 5)
!8469 = !DILocation(line: 2836, column: 9, scope: !8445)
!8470 = !DILocation(line: 2838, column: 8, scope: !8445)
!8471 = !DILocation(line: 2838, column: 21, scope: !8445)
!8472 = !DILocation(line: 2847, column: 5, scope: !8445)
!8473 = !DILocation(line: 2848, column: 18, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8445, file: !1117, line: 2847, column: 10)
!8475 = !DILocation(line: 2850, column: 34, scope: !8445)
!8476 = !DILocation(line: 2850, column: 5, scope: !8474)
!8477 = distinct !{!8477, !8472, !8478}
!8478 = !DILocation(line: 2850, column: 43, scope: !8445)
!8479 = !DILocation(line: 2839, column: 32, scope: !8445)
!8480 = !DILocation(line: 2861, column: 53, scope: !8457)
!8481 = !DILocation(line: 2861, column: 40, scope: !8457)
!8482 = !DILocation(line: 2861, column: 25, scope: !8457)
!8483 = !DILocation(line: 2874, column: 16, scope: !8457)
!8484 = !DILocation(line: 2874, column: 13, scope: !8457)
!8485 = !DILocation(line: 0, scope: !8457)
!8486 = !DILocation(line: 2875, column: 24, scope: !8457)
!8487 = !DILocation(line: 2877, column: 21, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8457, file: !1117, line: 2877, column: 13)
!8489 = !DILocation(line: 2877, column: 13, scope: !8457)
!8490 = !DILocation(line: 2879, column: 23, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8492, file: !1117, line: 2879, column: 21)
!8492 = distinct !DILexicalBlock(scope: !8493, file: !1117, line: 2878, column: 120)
!8493 = distinct !DILexicalBlock(scope: !8494, file: !1117, line: 2878, column: 13)
!8494 = distinct !DILexicalBlock(scope: !8495, file: !1117, line: 2878, column: 13)
!8495 = distinct !DILexicalBlock(scope: !8488, file: !1117, line: 2877, column: 27)
!8496 = !DILocation(line: 2879, column: 21, scope: !8492)
!8497 = !DILocation(line: 2878, column: 48, scope: !8493)
!8498 = !DILocation(line: 2878, column: 83, scope: !8493)
!8499 = !DILocation(line: 2878, column: 113, scope: !8493)
!8500 = !DILocation(line: 2878, column: 35, scope: !8493)
!8501 = !DILocation(line: 2878, column: 13, scope: !8494)
!8502 = distinct !{!8502, !8501, !8503}
!8503 = !DILocation(line: 2883, column: 13, scope: !8494)
!8504 = !DILocation(line: 2863, column: 19, scope: !8457)
!8505 = !DILocation(line: 2825, column: 24, scope: !8445)
!8506 = !DILocation(line: 2886, column: 9, scope: !8457)
!8507 = !DILocation(line: 2888, column: 36, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8457, file: !1117, line: 2886, column: 31)
!8509 = !DILocation(line: 2888, column: 41, scope: !8508)
!8510 = !DILocation(line: 2889, column: 17, scope: !8508)
!8511 = !DILocation(line: 2891, column: 36, scope: !8508)
!8512 = !DILocation(line: 2891, column: 41, scope: !8508)
!8513 = !DILocation(line: 2892, column: 17, scope: !8508)
!8514 = !DILocation(line: 2894, column: 36, scope: !8508)
!8515 = !DILocation(line: 2894, column: 41, scope: !8508)
!8516 = !DILocation(line: 2895, column: 17, scope: !8508)
!8517 = !DILocation(line: 2897, column: 17, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8519, file: !1117, line: 2897, column: 17)
!8519 = distinct !DILexicalBlock(scope: !8520, file: !1117, line: 2897, column: 17)
!8520 = distinct !DILexicalBlock(scope: !8508, file: !1117, line: 2897, column: 17)
!8521 = !DILocation(line: 0, scope: !8508)
!8522 = !DILocation(line: 2906, column: 5, scope: !8445)
!8523 = !DILocation(line: 2908, column: 32, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8445, file: !1117, line: 2906, column: 27)
!8525 = !DILocation(line: 2908, column: 37, scope: !8524)
!8526 = !DILocation(line: 2909, column: 13, scope: !8524)
!8527 = !DILocation(line: 2911, column: 32, scope: !8524)
!8528 = !DILocation(line: 2911, column: 37, scope: !8524)
!8529 = !DILocation(line: 2912, column: 13, scope: !8524)
!8530 = !DILocation(line: 2914, column: 32, scope: !8524)
!8531 = !DILocation(line: 2914, column: 37, scope: !8524)
!8532 = !DILocation(line: 2915, column: 13, scope: !8524)
!8533 = !DILocation(line: 0, scope: !8524)
!8534 = !DILocation(line: 2921, column: 56, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8536, file: !1117, line: 2921, column: 5)
!8536 = distinct !DILexicalBlock(scope: !8445, file: !1117, line: 2921, column: 5)
!8537 = !DILocation(line: 2921, column: 5, scope: !8536)
!8538 = !DILocation(line: 2921, column: 35, scope: !8536)
!8539 = !DILocation(line: 2921, column: 22, scope: !8536)
!8540 = !DILocation(line: 2922, column: 9, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8535, file: !1117, line: 2921, column: 99)
!8542 = !DILocation(line: 2929, column: 9, scope: !8541)
!8543 = !DILocation(line: 2938, column: 26, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8541, file: !1117, line: 2929, column: 26)
!8545 = !DILocation(line: 2939, column: 37, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8544, file: !1117, line: 2939, column: 17)
!8547 = !DILocation(line: 2939, column: 17, scope: !8544)
!8548 = distinct !{!8548, !8542, !8549}
!8549 = !DILocation(line: 2943, column: 9, scope: !8541)
!8550 = !DILocation(line: 2921, column: 71, scope: !8535)
!8551 = !DILocation(line: 2921, column: 85, scope: !8535)
!8552 = distinct !{!8552, !8537, !8553}
!8553 = !DILocation(line: 2983, column: 5, scope: !8536)
!8554 = !DILocation(line: 2985, column: 21, scope: !8445)
!8555 = !DILocation(line: 2992, column: 9, scope: !8445)
!8556 = !DILocation(line: 3000, column: 5, scope: !8445)
!8557 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !1117, file: !1117, line: 2533, type: !1601, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8558)
!8558 = !{!8559, !8560, !8561, !8562, !8563, !8564, !8565, !8566, !8567, !8568, !8569, !8570, !8571, !8572}
!8559 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8557, file: !1117, line: 2533, type: !88)
!8560 = !DILocalVariable(name: "Address", arg: 2, scope: !8557, file: !1117, line: 2533, type: !88)
!8561 = !DILocalVariable(name: "Data", arg: 3, scope: !8557, file: !1117, line: 2533, type: !88)
!8562 = !DILocalVariable(name: "Length", arg: 4, scope: !8557, file: !1117, line: 2533, type: !61)
!8563 = !DILocalVariable(name: "D", scope: !8557, file: !1117, line: 2535, type: !1287)
!8564 = !DILocalVariable(name: "savedMask", scope: !8557, file: !1117, line: 2536, type: !61)
!8565 = !DILocalVariable(name: "address", scope: !8557, file: !1117, line: 2537, type: !61)
!8566 = !DILocalVariable(name: "p_data", scope: !8557, file: !1117, line: 2538, type: !818)
!8567 = !DILocalVariable(name: "p_data_first", scope: !8557, file: !1117, line: 2539, type: !818)
!8568 = !DILocalVariable(name: "result", scope: !8557, file: !1117, line: 2540, type: !993)
!8569 = !DILocalVariable(name: "written", scope: !8557, file: !1117, line: 2541, type: !61)
!8570 = !DILocalVariable(name: "length", scope: !8557, file: !1117, line: 2542, type: !61)
!8571 = !DILocalVariable(name: "cmd1", scope: !8557, file: !1117, line: 2543, type: !61)
!8572 = !DILocalVariable(name: "j", scope: !8573, file: !1117, line: 2599, type: !61)
!8573 = distinct !DILexicalBlock(scope: !8574, file: !1117, line: 2597, column: 61)
!8574 = distinct !DILexicalBlock(scope: !8575, file: !1117, line: 2597, column: 13)
!8575 = distinct !DILexicalBlock(scope: !8557, file: !1117, line: 2583, column: 25)
!8576 = !DILocation(line: 0, scope: !8557)
!8577 = !DILocation(line: 2535, column: 26, scope: !8557)
!8578 = !DILocation(line: 2537, column: 37, scope: !8557)
!8579 = !DILocation(line: 2538, column: 5, scope: !8557)
!8580 = !DILocation(line: 2538, column: 19, scope: !8557)
!8581 = !DILocation(line: 2542, column: 5, scope: !8557)
!8582 = !DILocation(line: 2545, column: 5, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8584, file: !1117, line: 2545, column: 5)
!8584 = distinct !DILexicalBlock(scope: !8557, file: !1117, line: 2545, column: 5)
!8585 = !DILocation(line: 2545, column: 5, scope: !8584)
!8586 = !DILocation(line: 2545, column: 5, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8583, file: !1117, line: 2545, column: 5)
!8588 = !DILocation(line: 2567, column: 9, scope: !8557)
!8589 = !DILocation(line: 2569, column: 8, scope: !8557)
!8590 = !DILocation(line: 2569, column: 21, scope: !8557)
!8591 = !DILocation(line: 2576, column: 5, scope: !8557)
!8592 = !DILocation(line: 2577, column: 18, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8557, file: !1117, line: 2576, column: 10)
!8594 = !DILocation(line: 2579, column: 34, scope: !8557)
!8595 = !DILocation(line: 2579, column: 5, scope: !8593)
!8596 = distinct !{!8596, !8591, !8597}
!8597 = !DILocation(line: 2579, column: 43, scope: !8557)
!8598 = !DILocation(line: 2583, column: 14, scope: !8557)
!8599 = !DILocation(line: 2583, column: 5, scope: !8557)
!8600 = !DILocation(line: 2584, column: 27, scope: !8575)
!8601 = !DILocation(line: 2592, column: 18, scope: !8575)
!8602 = !DILocation(line: 2592, column: 35, scope: !8575)
!8603 = !DILocation(line: 2592, column: 74, scope: !8575)
!8604 = !DILocation(line: 2592, column: 50, scope: !8575)
!8605 = !DILocation(line: 2592, column: 39, scope: !8575)
!8606 = !DILocation(line: 2595, column: 37, scope: !8575)
!8607 = !DILocation(line: 2595, column: 29, scope: !8575)
!8608 = !DILocation(line: 2595, column: 16, scope: !8575)
!8609 = !DILocation(line: 2597, column: 13, scope: !8574)
!8610 = !DILocation(line: 2597, column: 30, scope: !8574)
!8611 = !DILocation(line: 2597, column: 13, scope: !8575)
!8612 = !DILocation(line: 0, scope: !8573)
!8613 = !DILocation(line: 2600, column: 27, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8615, file: !1117, line: 2600, column: 13)
!8615 = distinct !DILexicalBlock(scope: !8573, file: !1117, line: 2600, column: 13)
!8616 = !DILocation(line: 2600, column: 13, scope: !8615)
!8617 = !DILocation(line: 2601, column: 38, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8614, file: !1117, line: 2600, column: 42)
!8619 = !DILocation(line: 2601, column: 17, scope: !8618)
!8620 = !DILocation(line: 2601, column: 36, scope: !8618)
!8621 = !DILocation(line: 2600, column: 38, scope: !8614)
!8622 = distinct !{!8622, !8616, !8623}
!8623 = !DILocation(line: 2602, column: 13, scope: !8615)
!8624 = !DILocation(line: 0, scope: !8575)
!8625 = !DILocation(line: 2606, column: 18, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8575, file: !1117, line: 2606, column: 13)
!8627 = !DILocation(line: 2606, column: 29, scope: !8626)
!8628 = !DILocation(line: 2606, column: 13, scope: !8575)
!8629 = !DILocation(line: 2607, column: 13, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8626, file: !1117, line: 2606, column: 55)
!8631 = !DILocation(line: 2608, column: 9, scope: !8630)
!8632 = !DILocation(line: 2613, column: 16, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8575, file: !1117, line: 2613, column: 13)
!8634 = !DILocation(line: 2613, column: 29, scope: !8633)
!8635 = !DILocation(line: 0, scope: !8633)
!8636 = !DILocation(line: 2613, column: 13, scope: !8575)
!8637 = !DILocation(line: 2614, column: 20, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8633, file: !1117, line: 2613, column: 35)
!8639 = !DILocation(line: 2615, column: 32, scope: !8638)
!8640 = !DILocation(line: 2615, column: 40, scope: !8638)
!8641 = !DILocation(line: 2615, column: 13, scope: !8638)
!8642 = !DILocation(line: 2616, column: 9, scope: !8638)
!8643 = !DILocation(line: 2619, column: 20, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8633, file: !1117, line: 2618, column: 9)
!8645 = !DILocation(line: 2620, column: 32, scope: !8644)
!8646 = !DILocation(line: 2620, column: 40, scope: !8644)
!8647 = !DILocation(line: 2620, column: 13, scope: !8644)
!8648 = !DILocation(line: 2626, column: 21, scope: !8575)
!8649 = !DILocation(line: 2633, column: 37, scope: !8575)
!8650 = !DILocation(line: 2634, column: 45, scope: !8575)
!8651 = !DILocation(line: 2634, column: 42, scope: !8575)
!8652 = !DILocation(line: 2634, column: 40, scope: !8575)
!8653 = !DILocation(line: 2634, column: 58, scope: !8575)
!8654 = !DILocation(line: 2634, column: 29, scope: !8575)
!8655 = !DILocation(line: 2635, column: 28, scope: !8575)
!8656 = !DILocation(line: 2636, column: 9, scope: !8575)
!8657 = !DILocation(line: 2638, column: 26, scope: !8575)
!8658 = !DILocation(line: 2638, column: 9, scope: !8575)
!8659 = !DILocation(line: 2639, column: 29, scope: !8575)
!8660 = !DILocation(line: 2639, column: 9, scope: !8575)
!8661 = !DILocation(line: 2662, column: 9, scope: !8575)
!8662 = !DILocation(line: 2670, column: 9, scope: !8575)
!8663 = !DILocation(line: 2676, column: 89, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8575, file: !1117, line: 2670, column: 13)
!8665 = !DILocation(line: 2676, column: 26, scope: !8664)
!8666 = !DILocation(line: 2678, column: 36, scope: !8575)
!8667 = !DILocation(line: 2678, column: 9, scope: !8664)
!8668 = distinct !{!8668, !8662, !8669}
!8669 = !DILocation(line: 2678, column: 45, scope: !8575)
!8670 = !DILocation(line: 2718, column: 19, scope: !8575)
!8671 = !DILocation(line: 2718, column: 16, scope: !8575)
!8672 = !DILocation(line: 2719, column: 16, scope: !8575)
!8673 = !DILocation(line: 2722, column: 31, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8575, file: !1117, line: 2722, column: 13)
!8675 = !DILocation(line: 2722, column: 13, scope: !8575)
!8676 = distinct !{!8676, !8599, !8677}
!8677 = !DILocation(line: 2725, column: 5, scope: !8557)
!8678 = !DILocation(line: 2748, column: 21, scope: !8557)
!8679 = !DILocation(line: 2755, column: 9, scope: !8557)
!8680 = !DILocation(line: 2757, column: 16, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8557, file: !1117, line: 2757, column: 9)
!8682 = !DILocation(line: 2761, column: 1, scope: !8557)
!8683 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !1117, file: !1117, line: 3019, type: !1597, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8684)
!8684 = !{!8685, !8686}
!8685 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8683, file: !1117, line: 3019, type: !88)
!8686 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8683, file: !1117, line: 3019, type: !61)
!8687 = !DILocation(line: 0, scope: !8683)
!8688 = !DILocation(line: 3021, column: 5, scope: !8683)
!8689 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !1117, file: !1117, line: 3124, type: !1606, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8690)
!8690 = !{!8691, !8692, !8693, !8694, !8695, !8696, !8697, !8698}
!8691 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8689, file: !1117, line: 3124, type: !88)
!8692 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8689, file: !1117, line: 3124, type: !61)
!8693 = !DILocalVariable(name: "result", scope: !8689, file: !1117, line: 3126, type: !993)
!8694 = !DILocalVariable(name: "savedMask", scope: !8689, file: !1117, line: 3127, type: !61)
!8695 = !DILocalVariable(name: "D", scope: !8689, file: !1117, line: 3128, type: !1287)
!8696 = !DILocalVariable(name: "status_busy", scope: !8689, file: !1117, line: 3129, type: !1339)
!8697 = !DILocalVariable(name: "status_suspend", scope: !8689, file: !1117, line: 3129, type: !1339)
!8698 = !DILocalVariable(name: "check_status", scope: !8699, file: !1117, line: 3141, type: !1339)
!8699 = distinct !DILexicalBlock(scope: !8700, file: !1117, line: 3140, column: 56)
!8700 = distinct !DILexicalBlock(scope: !8689, file: !1117, line: 3140, column: 9)
!8701 = !DILocation(line: 0, scope: !8689)
!8702 = !DILocation(line: 3128, column: 47, scope: !8689)
!8703 = !DILocation(line: 3131, column: 5, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8705, file: !1117, line: 3131, column: 5)
!8705 = distinct !DILexicalBlock(scope: !8689, file: !1117, line: 3131, column: 5)
!8706 = !DILocation(line: 3131, column: 5, scope: !8705)
!8707 = !DILocation(line: 3131, column: 5, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8704, file: !1117, line: 3131, column: 5)
!8709 = !DILocation(line: 3134, column: 50, scope: !8689)
!8710 = !DILocation(line: 3134, column: 55, scope: !8689)
!8711 = !DILocation(line: 3134, column: 22, scope: !8689)
!8712 = !DILocation(line: 3135, column: 50, scope: !8689)
!8713 = !DILocation(line: 3135, column: 55, scope: !8689)
!8714 = !DILocation(line: 3135, column: 22, scope: !8689)
!8715 = !DILocation(line: 3138, column: 17, scope: !8689)
!8716 = !DILocation(line: 3140, column: 32, scope: !8700)
!8717 = !DILocation(line: 3140, column: 29, scope: !8700)
!8718 = !DILocation(line: 3140, column: 27, scope: !8700)
!8719 = !DILocation(line: 3140, column: 11, scope: !8700)
!8720 = !DILocation(line: 3140, column: 9, scope: !8689)
!8721 = !DILocation(line: 3141, column: 34, scope: !8699)
!8722 = !DILocation(line: 3141, column: 60, scope: !8699)
!8723 = !DILocation(line: 3141, column: 58, scope: !8699)
!8724 = !DILocation(line: 0, scope: !8699)
!8725 = !DILocation(line: 3144, column: 37, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8699, file: !1117, line: 3144, column: 13)
!8727 = !DILocation(line: 3144, column: 35, scope: !8726)
!8728 = !DILocation(line: 3144, column: 16, scope: !8726)
!8729 = !DILocation(line: 3144, column: 52, scope: !8726)
!8730 = !DILocation(line: 3145, column: 21, scope: !8726)
!8731 = !DILocation(line: 3145, column: 38, scope: !8726)
!8732 = !DILocation(line: 3147, column: 13, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8734, file: !1117, line: 3147, column: 13)
!8734 = distinct !DILexicalBlock(scope: !8735, file: !1117, line: 3147, column: 13)
!8735 = distinct !DILexicalBlock(scope: !8726, file: !1117, line: 3145, column: 61)
!8736 = !DILocation(line: 3147, column: 13, scope: !8734)
!8737 = !DILocation(line: 3147, column: 13, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8733, file: !1117, line: 3147, column: 13)
!8739 = !DILocation(line: 3150, column: 13, scope: !8735)
!8740 = !DILocation(line: 3151, column: 33, scope: !8735)
!8741 = !DILocation(line: 3153, column: 9, scope: !8735)
!8742 = !DILocation(line: 3155, column: 20, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8744, file: !1117, line: 3155, column: 17)
!8744 = distinct !DILexicalBlock(scope: !8726, file: !1117, line: 3153, column: 16)
!8745 = !DILocation(line: 3155, column: 31, scope: !8743)
!8746 = !DILocation(line: 3155, column: 17, scope: !8744)
!8747 = !DILocation(line: 3156, column: 36, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8743, file: !1117, line: 3155, column: 54)
!8749 = !DILocation(line: 3156, column: 17, scope: !8748)
!8750 = !DILocation(line: 3157, column: 36, scope: !8748)
!8751 = !DILocation(line: 3157, column: 17, scope: !8748)
!8752 = !DILocation(line: 3158, column: 13, scope: !8748)
!8753 = !DILocation(line: 3191, column: 5, scope: !8689)
!8754 = !DILocation(line: 3193, column: 9, scope: !8689)
!8755 = !DILocation(line: 3160, column: 13, scope: !8744)
!8756 = !DILocation(line: 3173, column: 13, scope: !8744)
!8757 = !DILocation(line: 3194, column: 18, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !8759, file: !1117, line: 3193, column: 32)
!8759 = distinct !DILexicalBlock(scope: !8689, file: !1117, line: 3193, column: 9)
!8760 = !DILocation(line: 3195, column: 5, scope: !8758)
!8761 = !DILocation(line: 3197, column: 5, scope: !8689)
!8762 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !1117, file: !1117, line: 3225, type: !1597, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8763)
!8763 = !{!8764, !8765, !8766, !8767, !8768}
!8764 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8762, file: !1117, line: 3225, type: !88)
!8765 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8762, file: !1117, line: 3225, type: !61)
!8766 = !DILocalVariable(name: "D", scope: !8762, file: !1117, line: 3227, type: !1287)
!8767 = !DILocalVariable(name: "status", scope: !8762, file: !1117, line: 3228, type: !1339)
!8768 = !DILocalVariable(name: "savedMask", scope: !8762, file: !1117, line: 3229, type: !61)
!8769 = !DILocation(line: 0, scope: !8762)
!8770 = !DILocation(line: 3227, column: 30, scope: !8762)
!8771 = !DILocation(line: 3231, column: 17, scope: !8762)
!8772 = !DILocation(line: 3234, column: 5, scope: !8762)
!8773 = !DILocation(line: 3238, column: 5, scope: !8762)
!8774 = !DILocation(line: 3239, column: 46, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8762, file: !1117, line: 3238, column: 15)
!8776 = !DILocation(line: 3239, column: 51, scope: !8775)
!8777 = !DILocation(line: 3239, column: 18, scope: !8775)
!8778 = !DILocation(line: 3241, column: 31, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8775, file: !1117, line: 3241, column: 13)
!8780 = !DILocation(line: 3241, column: 28, scope: !8779)
!8781 = !DILocation(line: 3241, column: 26, scope: !8779)
!8782 = !DILocation(line: 3241, column: 15, scope: !8779)
!8783 = !DILocation(line: 3241, column: 13, scope: !8775)
!8784 = distinct !{!8784, !8773, !8785}
!8785 = !DILocation(line: 3244, column: 5, scope: !8762)
!8786 = !DILocation(line: 3246, column: 5, scope: !8762)
!8787 = !DILocation(line: 3248, column: 5, scope: !8762)
!8788 = !DILocation(line: 3250, column: 5, scope: !8762)
!8789 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !1117, file: !1117, line: 3277, type: !1597, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8790)
!8790 = !{!8791, !8792, !8793}
!8791 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8789, file: !1117, line: 3277, type: !88)
!8792 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8789, file: !1117, line: 3277, type: !61)
!8793 = !DILocalVariable(name: "D", scope: !8789, file: !1117, line: 3279, type: !1287)
!8794 = !DILocation(line: 0, scope: !8789)
!8795 = !DILocation(line: 3279, column: 29, scope: !8789)
!8796 = !DILocation(line: 3281, column: 5, scope: !8789)
!8797 = !DILocation(line: 3282, column: 5, scope: !8789)
!8798 = !DILocation(line: 3283, column: 5, scope: !8789)
!8799 = !DILocation(line: 3285, column: 5, scope: !8789)
!8800 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !1117, file: !1117, line: 3332, type: !1623, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8801)
!8801 = !{!8802, !8803, !8804}
!8802 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8800, file: !1117, line: 3332, type: !88)
!8803 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !8800, file: !1117, line: 3332, type: !88)
!8804 = !DILocalVariable(name: "ACTION", arg: 3, scope: !8800, file: !1117, line: 3332, type: !61)
!8805 = !DILocation(line: 0, scope: !8800)
!8806 = !DILocation(line: 3334, column: 5, scope: !8800)
!8807 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !1117, file: !1117, line: 2350, type: !1631, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8808)
!8808 = !{!8809, !8810, !8811, !8812}
!8809 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8807, file: !1117, line: 2350, type: !88)
!8810 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !8807, file: !1117, line: 2350, type: !61)
!8811 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !8807, file: !1117, line: 2350, type: !88)
!8812 = !DILocalVariable(name: "D", scope: !8807, file: !1117, line: 2352, type: !1287)
!8813 = !DILocation(line: 0, scope: !8807)
!8814 = !DILocation(line: 2353, column: 9, scope: !8807)
!8815 = !DILocation(line: 2354, column: 12, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8817, file: !1117, line: 2353, column: 51)
!8817 = distinct !DILexicalBlock(scope: !8807, file: !1117, line: 2353, column: 9)
!8818 = !DILocation(line: 2354, column: 9, scope: !8816)
!8819 = !DILocation(line: 2355, column: 5, scope: !8816)
!8820 = !DILocation(line: 2356, column: 17, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8822, file: !1117, line: 2356, column: 13)
!8822 = distinct !DILexicalBlock(scope: !8823, file: !1117, line: 2355, column: 71)
!8823 = distinct !DILexicalBlock(scope: !8817, file: !1117, line: 2355, column: 16)
!8824 = !DILocation(line: 2356, column: 14, scope: !8821)
!8825 = !DILocation(line: 2356, column: 28, scope: !8821)
!8826 = !DILocation(line: 2356, column: 49, scope: !8821)
!8827 = !DILocation(line: 2356, column: 56, scope: !8821)
!8828 = !DILocation(line: 2356, column: 70, scope: !8821)
!8829 = !DILocation(line: 2356, column: 80, scope: !8821)
!8830 = !DILocation(line: 2356, column: 13, scope: !8822)
!8831 = !DILocation(line: 2361, column: 9, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8833, file: !1117, line: 2361, column: 9)
!8833 = distinct !DILexicalBlock(scope: !8834, file: !1117, line: 2361, column: 9)
!8834 = distinct !DILexicalBlock(scope: !8835, file: !1117, line: 2361, column: 9)
!8835 = distinct !DILexicalBlock(scope: !8823, file: !1117, line: 2359, column: 12)
!8836 = !DILocation(line: 2363, column: 5, scope: !8807)
!8837 = !DILocation(line: 2364, column: 1, scope: !8807)
!8838 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !1117, file: !1117, line: 3355, type: !1389, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8839)
!8839 = !{!8840, !8841, !8842}
!8840 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8838, file: !1117, line: 3355, type: !88)
!8841 = !DILocalVariable(name: "D", scope: !8838, file: !1117, line: 3357, type: !1287)
!8842 = !DILocalVariable(name: "status", scope: !8838, file: !1117, line: 3358, type: !1087)
!8843 = !DILocation(line: 0, scope: !8838)
!8844 = !DILocation(line: 3366, column: 12, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8838, file: !1117, line: 3366, column: 9)
!8846 = !DILocation(line: 3366, column: 17, scope: !8845)
!8847 = !DILocation(line: 3366, column: 9, scope: !8845)
!8848 = !DILocation(line: 3366, column: 9, scope: !8838)
!8849 = !DILocation(line: 3357, column: 25, scope: !8838)
!8850 = !DILocation(line: 3367, column: 18, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8845, file: !1117, line: 3366, column: 33)
!8852 = !DILocation(line: 3368, column: 25, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8851, file: !1117, line: 3368, column: 13)
!8854 = !DILocation(line: 3368, column: 22, scope: !8853)
!8855 = !DILocation(line: 3368, column: 20, scope: !8853)
!8856 = !DILocation(line: 3368, column: 13, scope: !8851)
!8857 = !DILocation(line: 3373, column: 5, scope: !8838)
!8858 = !DILocation(line: 3374, column: 1, scope: !8838)
!8859 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !1117, file: !1117, line: 3044, type: !8860, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8862)
!8860 = !DISubroutineType(types: !8861)
!8861 = !{!993, !88, !61, !395}
!8862 = !{!8863, !8864, !8865, !8866, !8867, !8868, !8869, !8870}
!8863 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8859, file: !1117, line: 3044, type: !88)
!8864 = !DILocalVariable(name: "addr", arg: 2, scope: !8859, file: !1117, line: 3044, type: !61)
!8865 = !DILocalVariable(name: "data", arg: 3, scope: !8859, file: !1117, line: 3044, type: !395)
!8866 = !DILocalVariable(name: "savedMask", scope: !8859, file: !1117, line: 3046, type: !61)
!8867 = !DILocalVariable(name: "D", scope: !8859, file: !1117, line: 3047, type: !1287)
!8868 = !DILocalVariable(name: "result", scope: !8859, file: !1117, line: 3048, type: !993)
!8869 = !DILocalVariable(name: "check_data", scope: !8859, file: !1117, line: 3049, type: !395)
!8870 = !DILocalVariable(name: "status_busy", scope: !8859, file: !1117, line: 3050, type: !1087)
!8871 = !DILocation(line: 0, scope: !8859)
!8872 = !DILocation(line: 3047, column: 43, scope: !8859)
!8873 = !DILocation(line: 3053, column: 47, scope: !8859)
!8874 = !DILocation(line: 3053, column: 52, scope: !8859)
!8875 = !DILocation(line: 3053, column: 19, scope: !8859)
!8876 = !DILocation(line: 3056, column: 9, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8859, file: !1117, line: 3056, column: 9)
!8878 = !DILocation(line: 3056, column: 9, scope: !8859)
!8879 = !DILocation(line: 3058, column: 9, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8881, file: !1117, line: 3058, column: 9)
!8881 = distinct !DILexicalBlock(scope: !8882, file: !1117, line: 3058, column: 9)
!8882 = distinct !DILexicalBlock(scope: !8877, file: !1117, line: 3056, column: 28)
!8883 = !DILocation(line: 3058, column: 9, scope: !8881)
!8884 = !DILocation(line: 3058, column: 9, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8880, file: !1117, line: 3058, column: 9)
!8886 = !DILocation(line: 3060, column: 9, scope: !8882)
!8887 = !DILocation(line: 3062, column: 29, scope: !8882)
!8888 = !DILocation(line: 3063, column: 5, scope: !8882)
!8889 = !DILocation(line: 3065, column: 38, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8877, file: !1117, line: 3065, column: 15)
!8891 = !DILocation(line: 3065, column: 35, scope: !8890)
!8892 = !DILocation(line: 3065, column: 33, scope: !8890)
!8893 = !DILocation(line: 3065, column: 17, scope: !8890)
!8894 = !DILocation(line: 3065, column: 15, scope: !8877)
!8895 = !DILocation(line: 3066, column: 21, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8890, file: !1117, line: 3065, column: 62)
!8897 = !DILocation(line: 3068, column: 9, scope: !8896)
!8898 = !DILocation(line: 3071, column: 23, scope: !8896)
!8899 = !DILocation(line: 3071, column: 22, scope: !8896)
!8900 = !DILocation(line: 3073, column: 24, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8896, file: !1117, line: 3073, column: 13)
!8902 = !DILocation(line: 3073, column: 13, scope: !8896)
!8903 = !DILocation(line: 3078, column: 16, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8905, file: !1117, line: 3078, column: 16)
!8905 = distinct !DILexicalBlock(scope: !8901, file: !1117, line: 3075, column: 16)
!8906 = !DILocation(line: 3078, column: 16, scope: !8905)
!8907 = !DILocation(line: 3081, column: 58, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8904, file: !1117, line: 3078, column: 46)
!8909 = !DILocation(line: 3081, column: 17, scope: !8908)
!8910 = !DILocation(line: 3082, column: 22, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8908, file: !1117, line: 3082, column: 21)
!8912 = !DILocation(line: 3082, column: 49, scope: !8911)
!8913 = !DILocation(line: 3082, column: 21, scope: !8908)
!8914 = !DILocation(line: 3088, column: 9, scope: !8896)
!8915 = !DILocation(line: 3091, column: 9, scope: !8859)
!8916 = !DILocation(line: 3092, column: 13, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8918, file: !1117, line: 3092, column: 13)
!8918 = distinct !DILexicalBlock(scope: !8859, file: !1117, line: 3091, column: 9)
!8919 = !DILocation(line: 3092, column: 33, scope: !8917)
!8920 = !DILocation(line: 3092, column: 13, scope: !8918)
!8921 = !DILocation(line: 3106, column: 5, scope: !8859)
!8922 = !DILocation(line: 3107, column: 1, scope: !8859)
!8923 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !1117, file: !1117, line: 3497, type: !8924, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8926)
!8924 = !DISubroutineType(types: !8925)
!8925 = !{null, !1287, !61}
!8926 = !{!8927, !8928, !8929}
!8927 = !DILocalVariable(name: "D", arg: 1, scope: !8923, file: !1117, line: 3497, type: !1287)
!8928 = !DILocalVariable(name: "addr", arg: 2, scope: !8923, file: !1117, line: 3497, type: !61)
!8929 = !DILocalVariable(name: "savedMask", scope: !8923, file: !1117, line: 3499, type: !61)
!8930 = !DILocation(line: 0, scope: !8923)
!8931 = !DILocation(line: 3501, column: 14, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8923, file: !1117, line: 3501, column: 9)
!8933 = !DILocation(line: 3501, column: 25, scope: !8932)
!8934 = !DILocation(line: 3501, column: 9, scope: !8923)
!8935 = !DILocation(line: 3502, column: 9, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8932, file: !1117, line: 3501, column: 51)
!8937 = !DILocation(line: 3503, column: 5, scope: !8936)
!8938 = !DILocation(line: 3507, column: 17, scope: !8923)
!8939 = !DILocation(line: 3516, column: 5, scope: !8923)
!8940 = !DILocation(line: 3517, column: 31, scope: !8923)
!8941 = !DILocation(line: 3517, column: 38, scope: !8923)
!8942 = !DILocation(line: 3517, column: 43, scope: !8923)
!8943 = !DILocation(line: 3517, column: 59, scope: !8923)
!8944 = !DILocation(line: 3517, column: 56, scope: !8923)
!8945 = !DILocation(line: 3517, column: 5, scope: !8923)
!8946 = !DILocation(line: 3523, column: 5, scope: !8923)
!8947 = !DILocation(line: 3524, column: 1, scope: !8923)
!8948 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !1117, file: !1117, line: 2018, type: !8049, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8949)
!8949 = !{!8950, !8951, !8952}
!8950 = !DILocalVariable(name: "driver", arg: 1, scope: !8948, file: !1117, line: 2018, type: !8051)
!8951 = !DILocalVariable(name: "D", arg: 2, scope: !8948, file: !1117, line: 2018, type: !1287)
!8952 = !DILocalVariable(name: "result", scope: !8948, file: !1117, line: 2020, type: !993)
!8953 = !DILocation(line: 0, scope: !8948)
!8954 = !DILocation(line: 2022, column: 13, scope: !8948)
!8955 = !DILocation(line: 2022, column: 5, scope: !8948)
!8956 = !DILocation(line: 2031, column: 16, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8948, file: !1117, line: 2022, column: 31)
!8958 = !DILocation(line: 2031, column: 27, scope: !8957)
!8959 = !DILocation(line: 2033, column: 22, scope: !8957)
!8960 = !DILocation(line: 2034, column: 13, scope: !8957)
!8961 = !DILocation(line: 2049, column: 16, scope: !8957)
!8962 = !DILocation(line: 2049, column: 27, scope: !8957)
!8963 = !DILocation(line: 2051, column: 23, scope: !8957)
!8964 = !DILocation(line: 2053, column: 13, scope: !8957)
!8965 = !DILocation(line: 2058, column: 22, scope: !8957)
!8966 = !DILocation(line: 2059, column: 13, scope: !8957)
!8967 = !DILocation(line: 2079, column: 13, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8969, file: !1117, line: 2079, column: 13)
!8969 = distinct !DILexicalBlock(scope: !8970, file: !1117, line: 2079, column: 13)
!8970 = distinct !DILexicalBlock(scope: !8957, file: !1117, line: 2079, column: 13)
!8971 = !DILocation(line: 2083, column: 5, scope: !8948)
!8972 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !1117, file: !1117, line: 2100, type: !8973, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8975)
!8973 = !DISubroutineType(types: !8974)
!8974 = !{!993, !8051, !1287, !61, !61}
!8975 = !{!8976, !8977, !8978, !8979, !8980}
!8976 = !DILocalVariable(name: "driver", arg: 1, scope: !8972, file: !1117, line: 2100, type: !8051)
!8977 = !DILocalVariable(name: "D", arg: 2, scope: !8972, file: !1117, line: 2100, type: !1287)
!8978 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !8972, file: !1117, line: 2100, type: !61)
!8979 = !DILocalVariable(name: "parameter", arg: 4, scope: !8972, file: !1117, line: 2100, type: !61)
!8980 = !DILocalVariable(name: "result", scope: !8972, file: !1117, line: 2102, type: !993)
!8981 = !DILocation(line: 0, scope: !8972)
!8982 = !DILocation(line: 2105, column: 16, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8972, file: !1117, line: 2105, column: 9)
!8984 = !DILocation(line: 2105, column: 24, scope: !8983)
!8985 = !DILocation(line: 2109, column: 12, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8972, file: !1117, line: 2109, column: 9)
!8987 = !DILocation(line: 2109, column: 16, scope: !8986)
!8988 = !DILocation(line: 2109, column: 24, scope: !8986)
!8989 = !DILocation(line: 2109, column: 30, scope: !8986)
!8990 = !DILocation(line: 2109, column: 40, scope: !8986)
!8991 = !DILocation(line: 2109, column: 9, scope: !8972)
!8992 = !DILocation(line: 2118, column: 19, scope: !8972)
!8993 = !DILocation(line: 2118, column: 8, scope: !8972)
!8994 = !DILocation(line: 2118, column: 17, scope: !8972)
!8995 = !DILocation(line: 2119, column: 23, scope: !8972)
!8996 = !DILocation(line: 2119, column: 8, scope: !8972)
!8997 = !DILocation(line: 2119, column: 21, scope: !8972)
!8998 = !DILocation(line: 2122, column: 5, scope: !8972)
!8999 = !DILocation(line: 2125, column: 8, scope: !8972)
!9000 = !DILocation(line: 2125, column: 13, scope: !8972)
!9001 = !DILocation(line: 2125, column: 24, scope: !8972)
!9002 = !DILocation(line: 2126, column: 26, scope: !8972)
!9003 = !DILocation(line: 2126, column: 5, scope: !8972)
!9004 = !DILocation(line: 2128, column: 9, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8972, file: !1117, line: 2128, column: 9)
!9006 = !DILocation(line: 2128, column: 31, scope: !9005)
!9007 = !DILocation(line: 2128, column: 60, scope: !9005)
!9008 = !DILocation(line: 2128, column: 9, scope: !8972)
!9009 = !DILocation(line: 2129, column: 12, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9005, file: !1117, line: 2128, column: 110)
!9011 = !DILocation(line: 2129, column: 17, scope: !9010)
!9012 = !DILocation(line: 2129, column: 28, scope: !9010)
!9013 = !DILocation(line: 2130, column: 9, scope: !9010)
!9014 = !DILocation(line: 2131, column: 5, scope: !9010)
!9015 = !DILocation(line: 2134, column: 14, scope: !8972)
!9016 = !DILocation(line: 2136, column: 5, scope: !8972)
!9017 = !DILocation(line: 2137, column: 1, scope: !8972)
!9018 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !1117, file: !1117, line: 3387, type: !9019, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !9021)
!9019 = !DISubroutineType(types: !9020)
!9020 = !{null, !1287, !818}
!9021 = !{!9022, !9023, !9024}
!9022 = !DILocalVariable(name: "D", arg: 1, scope: !9018, file: !1117, line: 3387, type: !1287)
!9023 = !DILocalVariable(name: "id", arg: 2, scope: !9018, file: !1117, line: 3387, type: !818)
!9024 = !DILocalVariable(name: "cmd", scope: !9018, file: !1117, line: 3389, type: !395)
!9025 = !DILocation(line: 0, scope: !9018)
!9026 = !DILocation(line: 3389, column: 5, scope: !9018)
!9027 = !DILocation(line: 3405, column: 9, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9018, file: !1117, line: 3405, column: 9)
!9029 = !DILocation(line: 3405, column: 21, scope: !9028)
!9030 = !DILocation(line: 0, scope: !9028)
!9031 = !DILocation(line: 3405, column: 9, scope: !9018)
!9032 = !DILocation(line: 3411, column: 31, scope: !9018)
!9033 = !DILocation(line: 3411, column: 5, scope: !9018)
!9034 = !DILocation(line: 3412, column: 1, scope: !9018)
!9035 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !1117, file: !1117, line: 3585, type: !9036, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !9038)
!9036 = !DISubroutineType(types: !9037)
!9037 = !{null, !6818, !818, !818, !6818, !6818}
!9038 = !{!9039, !9040, !9041, !9042, !9043, !9044}
!9039 = !DILocalVariable(name: "CS", arg: 1, scope: !9035, file: !1117, line: 3585, type: !6818)
!9040 = !DILocalVariable(name: "cmd", arg: 2, scope: !9035, file: !1117, line: 3585, type: !818)
!9041 = !DILocalVariable(name: "data", arg: 3, scope: !9035, file: !1117, line: 3585, type: !818)
!9042 = !DILocalVariable(name: "outl", arg: 4, scope: !9035, file: !1117, line: 3585, type: !6818)
!9043 = !DILocalVariable(name: "inl", arg: 5, scope: !9035, file: !1117, line: 3585, type: !6818)
!9044 = !DILocalVariable(name: "savedMask", scope: !9035, file: !1117, line: 3587, type: !61)
!9045 = !DILocation(line: 0, scope: !9035)
!9046 = !DILocation(line: 3589, column: 17, scope: !9035)
!9047 = !DILocation(line: 3590, column: 5, scope: !9035)
!9048 = !DILocation(line: 3591, column: 5, scope: !9035)
!9049 = !DILocation(line: 3593, column: 1, scope: !9035)
!9050 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !1442, file: !1442, line: 110, type: !7296, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !9051)
!9051 = !{!9052, !9053, !9054, !9055}
!9052 = !DILocalVariable(name: "id", arg: 1, scope: !9050, file: !1442, line: 110, type: !818)
!9053 = !DILocalVariable(name: "i", scope: !9050, file: !1442, line: 114, type: !993)
!9054 = !DILocalVariable(name: "j", scope: !9050, file: !1442, line: 114, type: !993)
!9055 = !DILocalVariable(name: "id_list", scope: !9050, file: !1442, line: 115, type: !9056)
!9056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9057, size: 32)
!9057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1520)
!9058 = !DILocation(line: 0, scope: !9050)
!9059 = !DILocation(line: 119, column: 5, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9050, file: !1442, line: 119, column: 5)
!9061 = !DILocation(line: 119, column: 46, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9060, file: !1442, line: 119, column: 5)
!9063 = !DILocation(line: 119, column: 19, scope: !9062)
!9064 = distinct !{!9064, !9059, !9065}
!9065 = !DILocation(line: 131, column: 5, scope: !9060)
!9066 = !DILocation(line: 121, column: 23, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9068, file: !1442, line: 121, column: 9)
!9068 = distinct !DILexicalBlock(scope: !9069, file: !1442, line: 121, column: 9)
!9069 = distinct !DILexicalBlock(scope: !9062, file: !1442, line: 119, column: 50)
!9070 = !DILocation(line: 121, column: 9, scope: !9068)
!9071 = !DILocation(line: 122, column: 17, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9073, file: !1442, line: 122, column: 17)
!9073 = distinct !DILexicalBlock(scope: !9067, file: !1442, line: 121, column: 51)
!9074 = !DILocation(line: 122, column: 37, scope: !9072)
!9075 = !DILocation(line: 122, column: 34, scope: !9072)
!9076 = !DILocation(line: 122, column: 17, scope: !9073)
!9077 = !DILocation(line: 121, column: 47, scope: !9067)
!9078 = distinct !{!9078, !9070, !9079}
!9079 = !DILocation(line: 125, column: 9, scope: !9068)
!9080 = !DILocation(line: 0, scope: !9068)
!9081 = !DILocation(line: 127, column: 15, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9069, file: !1442, line: 127, column: 13)
!9083 = !DILocation(line: 127, column: 13, scope: !9069)
!9084 = !DILocation(line: 134, column: 1, scope: !9050)
!9085 = distinct !DISubprogram(name: "CMEM_Index", scope: !1442, file: !1442, line: 153, type: !7451, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !9086)
!9086 = !{!9087, !9088, !9089, !9096}
!9087 = !DILocalVariable(name: "i", scope: !9085, file: !1442, line: 156, type: !993)
!9088 = !DILocalVariable(name: "j", scope: !9085, file: !1442, line: 156, type: !993)
!9089 = !DILocalVariable(name: "id", scope: !9085, file: !1442, line: 157, type: !9090)
!9090 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1513, line: 89, baseType: !9091)
!9091 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1513, line: 86, size: 64, elements: !9092)
!9092 = !{!9093, !9094}
!9093 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !9091, file: !1513, line: 87, baseType: !1526, size: 64)
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !9091, file: !1513, line: 88, baseType: !9095, size: 64)
!9095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1087, size: 64, elements: !526)
!9096 = !DILocalVariable(name: "id_list", scope: !9085, file: !1442, line: 158, type: !9056)
!9097 = !DILocation(line: 157, column: 5, scope: !9085)
!9098 = !DILocation(line: 157, column: 17, scope: !9085)
!9099 = !DILocation(line: 0, scope: !9085)
!9100 = !DILocation(line: 161, column: 9, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9085, file: !1442, line: 161, column: 9)
!9102 = !DILocation(line: 161, column: 20, scope: !9101)
!9103 = !DILocation(line: 161, column: 9, scope: !9085)
!9104 = !DILocation(line: 172, column: 58, scope: !9085)
!9105 = !DILocation(line: 172, column: 5, scope: !9085)
!9106 = !DILocation(line: 178, column: 5, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9085, file: !1442, line: 178, column: 5)
!9108 = !DILocation(line: 180, column: 23, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9110, file: !1442, line: 180, column: 9)
!9110 = distinct !DILexicalBlock(scope: !9111, file: !1442, line: 180, column: 9)
!9111 = distinct !DILexicalBlock(scope: !9112, file: !1442, line: 178, column: 53)
!9112 = distinct !DILexicalBlock(scope: !9107, file: !1442, line: 178, column: 5)
!9113 = !DILocation(line: 180, column: 9, scope: !9110)
!9114 = !DILocation(line: 181, column: 17, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9116, file: !1442, line: 181, column: 17)
!9116 = distinct !DILexicalBlock(scope: !9109, file: !1442, line: 180, column: 51)
!9117 = !DILocation(line: 181, column: 37, scope: !9115)
!9118 = !DILocation(line: 181, column: 34, scope: !9115)
!9119 = !DILocation(line: 181, column: 17, scope: !9116)
!9120 = !DILocation(line: 180, column: 47, scope: !9109)
!9121 = distinct !{!9121, !9113, !9122}
!9122 = !DILocation(line: 184, column: 9, scope: !9110)
!9123 = !DILocation(line: 0, scope: !9110)
!9124 = !DILocation(line: 186, column: 15, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9111, file: !1442, line: 186, column: 13)
!9126 = !DILocation(line: 186, column: 13, scope: !9111)
!9127 = !DILocation(line: 188, column: 26, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9125, file: !1442, line: 186, column: 41)
!9129 = !DILocation(line: 188, column: 24, scope: !9128)
!9130 = !DILocation(line: 189, column: 13, scope: !9128)
!9131 = !DILocation(line: 178, column: 46, scope: !9112)
!9132 = !DILocation(line: 178, column: 19, scope: !9112)
!9133 = distinct !{!9133, !9106, !9134}
!9134 = !DILocation(line: 191, column: 5, scope: !9107)
!9135 = !DILocation(line: 222, column: 12, scope: !9085)
!9136 = !DILocation(line: 223, column: 1, scope: !9085)
!9137 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !1442, file: !1442, line: 240, type: !9138, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !9140)
!9138 = !DISubroutineType(types: !9139)
!9139 = !{!9056, !61}
!9140 = !{!9141}
!9141 = !DILocalVariable(name: "index", arg: 1, scope: !9137, file: !1442, line: 240, type: !61)
!9142 = !DILocation(line: 0, scope: !9137)
!9143 = !DILocation(line: 242, column: 13, scope: !9137)
!9144 = !DILocation(line: 242, column: 5, scope: !9137)
!9145 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !1442, file: !1442, line: 254, type: !9146, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !9148)
!9146 = !DISubroutineType(types: !9147)
!9147 = !{null, !6818, !88, !1086}
!9148 = !{!9149, !9150, !9151, !9152, !9154, !9155}
!9149 = !DILocalVariable(name: "CS", arg: 1, scope: !9145, file: !1442, line: 254, type: !6818)
!9150 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !9145, file: !1442, line: 254, type: !88)
!9151 = !DILocalVariable(name: "flashid", arg: 3, scope: !9145, file: !1442, line: 254, type: !1086)
!9152 = !DILocalVariable(name: "cmd", scope: !9153, file: !1442, line: 258, type: !395)
!9153 = distinct !DILexicalBlock(scope: !9145, file: !1442, line: 257, column: 5)
!9154 = !DILocalVariable(name: "id", scope: !9153, file: !1442, line: 258, type: !1377)
!9155 = !DILocalVariable(name: "i", scope: !9153, file: !1442, line: 258, type: !395)
!9156 = !DILocation(line: 0, scope: !9145)
!9157 = !DILocation(line: 258, column: 9, scope: !9153)
!9158 = !DILocation(line: 258, column: 22, scope: !9153)
!9159 = !DILocation(line: 0, scope: !9153)
!9160 = !DILocation(line: 260, column: 13, scope: !9153)
!9161 = !DILocation(line: 261, column: 9, scope: !9153)
!9162 = !DILocation(line: 263, column: 13, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9153, file: !1442, line: 263, column: 13)
!9164 = !DILocation(line: 263, column: 27, scope: !9163)
!9165 = !DILocation(line: 263, column: 48, scope: !9163)
!9166 = !DILocation(line: 263, column: 13, scope: !9153)
!9167 = !DILocation(line: 264, column: 17, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9163, file: !1442, line: 263, column: 95)
!9169 = !DILocation(line: 265, column: 13, scope: !9168)
!9170 = !DILocation(line: 266, column: 9, scope: !9168)
!9171 = !DILocation(line: 268, column: 9, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9153, file: !1442, line: 268, column: 9)
!9173 = !DILocation(line: 269, column: 26, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9175, file: !1442, line: 268, column: 50)
!9175 = distinct !DILexicalBlock(scope: !9172, file: !1442, line: 268, column: 9)
!9176 = !DILocation(line: 269, column: 13, scope: !9174)
!9177 = !DILocation(line: 269, column: 24, scope: !9174)
!9178 = !DILocation(line: 268, column: 46, scope: !9175)
!9179 = !DILocation(line: 268, column: 23, scope: !9175)
!9180 = distinct !{!9180, !9171, !9181}
!9181 = !DILocation(line: 270, column: 9, scope: !9172)
!9182 = !DILocation(line: 271, column: 5, scope: !9145)
!9183 = !DILocation(line: 272, column: 5, scope: !9145)
!9184 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !1442, file: !1442, line: 285, type: !7296, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !9185)
!9185 = !{!9186, !9187, !9188, !9189}
!9186 = !DILocalVariable(name: "id", arg: 1, scope: !9184, file: !1442, line: 285, type: !818)
!9187 = !DILocalVariable(name: "i", scope: !9184, file: !1442, line: 289, type: !993)
!9188 = !DILocalVariable(name: "j", scope: !9184, file: !1442, line: 289, type: !993)
!9189 = !DILocalVariable(name: "id_list", scope: !9184, file: !1442, line: 290, type: !9056)
!9190 = !DILocation(line: 0, scope: !9184)
!9191 = !DILocation(line: 294, column: 5, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9184, file: !1442, line: 294, column: 5)
!9193 = !DILocation(line: 294, column: 46, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9192, file: !1442, line: 294, column: 5)
!9195 = !DILocation(line: 294, column: 19, scope: !9194)
!9196 = distinct !{!9196, !9191, !9197}
!9197 = !DILocation(line: 306, column: 5, scope: !9192)
!9198 = !DILocation(line: 296, column: 23, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9200, file: !1442, line: 296, column: 9)
!9200 = distinct !DILexicalBlock(scope: !9201, file: !1442, line: 296, column: 9)
!9201 = distinct !DILexicalBlock(scope: !9194, file: !1442, line: 294, column: 53)
!9202 = !DILocation(line: 296, column: 9, scope: !9200)
!9203 = !DILocation(line: 297, column: 17, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9205, file: !1442, line: 297, column: 17)
!9205 = distinct !DILexicalBlock(scope: !9199, file: !1442, line: 296, column: 51)
!9206 = !DILocation(line: 297, column: 37, scope: !9204)
!9207 = !DILocation(line: 297, column: 34, scope: !9204)
!9208 = !DILocation(line: 297, column: 17, scope: !9205)
!9209 = !DILocation(line: 296, column: 47, scope: !9199)
!9210 = distinct !{!9210, !9202, !9211}
!9211 = !DILocation(line: 300, column: 9, scope: !9200)
!9212 = !DILocation(line: 0, scope: !9200)
!9213 = !DILocation(line: 302, column: 15, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9201, file: !1442, line: 302, column: 13)
!9215 = !DILocation(line: 302, column: 13, scope: !9201)
!9216 = !DILocation(line: 310, column: 1, scope: !9184)
!9217 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !1442, file: !1442, line: 328, type: !7451, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1441, retainedNodes: !9218)
!9218 = !{!9219, !9220, !9221, !9222}
!9219 = !DILocalVariable(name: "i", scope: !9217, file: !1442, line: 331, type: !993)
!9220 = !DILocalVariable(name: "j", scope: !9217, file: !1442, line: 331, type: !993)
!9221 = !DILocalVariable(name: "id", scope: !9217, file: !1442, line: 332, type: !9090)
!9222 = !DILocalVariable(name: "id_list", scope: !9217, file: !1442, line: 333, type: !9056)
!9223 = !DILocation(line: 332, column: 5, scope: !9217)
!9224 = !DILocation(line: 332, column: 17, scope: !9217)
!9225 = !DILocation(line: 0, scope: !9217)
!9226 = !DILocation(line: 336, column: 9, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9217, file: !1442, line: 336, column: 9)
!9228 = !DILocation(line: 336, column: 28, scope: !9227)
!9229 = !DILocation(line: 336, column: 9, scope: !9217)
!9230 = !DILocation(line: 344, column: 60, scope: !9217)
!9231 = !DILocation(line: 344, column: 5, scope: !9217)
!9232 = !DILocation(line: 350, column: 5, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9217, file: !1442, line: 350, column: 5)
!9234 = !DILocation(line: 352, column: 23, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9236, file: !1442, line: 352, column: 9)
!9236 = distinct !DILexicalBlock(scope: !9237, file: !1442, line: 352, column: 9)
!9237 = distinct !DILexicalBlock(scope: !9238, file: !1442, line: 350, column: 53)
!9238 = distinct !DILexicalBlock(scope: !9233, file: !1442, line: 350, column: 5)
!9239 = !DILocation(line: 352, column: 9, scope: !9236)
!9240 = !DILocation(line: 353, column: 17, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9242, file: !1442, line: 353, column: 17)
!9242 = distinct !DILexicalBlock(scope: !9235, file: !1442, line: 352, column: 51)
!9243 = !DILocation(line: 353, column: 37, scope: !9241)
!9244 = !DILocation(line: 353, column: 34, scope: !9241)
!9245 = !DILocation(line: 353, column: 17, scope: !9242)
!9246 = !DILocation(line: 352, column: 47, scope: !9235)
!9247 = distinct !{!9247, !9239, !9248}
!9248 = !DILocation(line: 356, column: 9, scope: !9236)
!9249 = !DILocation(line: 0, scope: !9236)
!9250 = !DILocation(line: 358, column: 15, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9237, file: !1442, line: 358, column: 13)
!9252 = !DILocation(line: 358, column: 13, scope: !9237)
!9253 = !DILocation(line: 360, column: 34, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9251, file: !1442, line: 358, column: 41)
!9255 = !DILocation(line: 360, column: 32, scope: !9254)
!9256 = !DILocation(line: 361, column: 13, scope: !9254)
!9257 = !DILocation(line: 350, column: 46, scope: !9238)
!9258 = !DILocation(line: 350, column: 19, scope: !9238)
!9259 = distinct !{!9259, !9232, !9260}
!9260 = !DILocation(line: 363, column: 5, scope: !9233)
!9261 = !DILocation(line: 364, column: 12, scope: !9217)
!9262 = !DILocation(line: 365, column: 1, scope: !9217)
!9263 = distinct !DISubprogram(name: "NOR_ReadID", scope: !2620, file: !2620, line: 64, type: !9264, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2619, retainedNodes: !9270)
!9264 = !DISubroutineType(types: !9265)
!9265 = !{null, !6818, !9266, !1086}
!9266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9267, size: 32)
!9267 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !9268)
!9268 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !9269, line: 158, baseType: !1087)
!9269 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!9270 = !{!9271, !9272, !9273, !9274, !9275, !9277, !9278}
!9271 = !DILocalVariable(name: "CS", arg: 1, scope: !9263, file: !2620, line: 64, type: !6818)
!9272 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !9263, file: !2620, line: 64, type: !9266)
!9273 = !DILocalVariable(name: "flashid", arg: 3, scope: !9263, file: !2620, line: 64, type: !1086)
!9274 = !DILocalVariable(name: "savedMask", scope: !9263, file: !2620, line: 66, type: !61)
!9275 = !DILocalVariable(name: "cmd", scope: !9276, file: !2620, line: 70, type: !395)
!9276 = distinct !DILexicalBlock(scope: !9263, file: !2620, line: 69, column: 5)
!9277 = !DILocalVariable(name: "id", scope: !9276, file: !2620, line: 70, type: !1377)
!9278 = !DILocalVariable(name: "i", scope: !9276, file: !2620, line: 70, type: !395)
!9279 = !DILocation(line: 0, scope: !9263)
!9280 = !DILocation(line: 70, column: 9, scope: !9276)
!9281 = !DILocation(line: 70, column: 22, scope: !9276)
!9282 = !DILocation(line: 0, scope: !9276)
!9283 = !DILocation(line: 72, column: 13, scope: !9276)
!9284 = !DILocation(line: 73, column: 21, scope: !9276)
!9285 = !DILocation(line: 74, column: 9, scope: !9276)
!9286 = !DILocation(line: 75, column: 9, scope: !9276)
!9287 = !DILocation(line: 77, column: 13, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9276, file: !2620, line: 77, column: 13)
!9289 = !DILocation(line: 77, column: 27, scope: !9288)
!9290 = !DILocation(line: 77, column: 48, scope: !9288)
!9291 = !DILocation(line: 77, column: 13, scope: !9276)
!9292 = !DILocation(line: 78, column: 17, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9288, file: !2620, line: 77, column: 87)
!9294 = !DILocation(line: 79, column: 25, scope: !9293)
!9295 = !DILocation(line: 80, column: 13, scope: !9293)
!9296 = !DILocation(line: 81, column: 13, scope: !9293)
!9297 = !DILocation(line: 82, column: 9, scope: !9293)
!9298 = !DILocation(line: 84, column: 9, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9276, file: !2620, line: 84, column: 9)
!9300 = !DILocation(line: 85, column: 26, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9302, file: !2620, line: 84, column: 50)
!9302 = distinct !DILexicalBlock(scope: !9299, file: !2620, line: 84, column: 9)
!9303 = !DILocation(line: 85, column: 13, scope: !9301)
!9304 = !DILocation(line: 85, column: 24, scope: !9301)
!9305 = !DILocation(line: 84, column: 46, scope: !9302)
!9306 = !DILocation(line: 84, column: 23, scope: !9302)
!9307 = distinct !{!9307, !9298, !9308}
!9308 = !DILocation(line: 86, column: 9, scope: !9299)
!9309 = !DILocation(line: 87, column: 5, scope: !9263)
!9310 = !DILocation(line: 89, column: 1, scope: !9263)
!9311 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !1530, file: !1530, line: 248, type: !3823, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !293)
!9312 = !DILocation(line: 250, column: 5, scope: !9311)
!9313 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !1530, file: !1530, line: 270, type: !3823, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !293)
!9314 = !DILocation(line: 272, column: 5, scope: !9313)
!9315 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !1530, file: !1530, line: 294, type: !291, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !293)
!9316 = !DILocation(line: 296, column: 5, scope: !9315)
!9317 = !DILocation(line: 297, column: 5, scope: !9315)
!9318 = distinct !DISubprogram(name: "nor_sweep_device", scope: !1530, file: !1530, line: 304, type: !291, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !293)
!9319 = !DILocation(line: 309, column: 5, scope: !9318)
!9320 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !1530, file: !1530, line: 312, type: !291, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !293)
!9321 = !DILocation(line: 317, column: 5, scope: !9320)
!9322 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !1530, file: !1530, line: 334, type: !3823, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !293)
!9323 = !DILocation(line: 336, column: 5, scope: !9322)
!9324 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !1530, file: !1530, line: 353, type: !3823, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !293)
!9325 = !DILocation(line: 355, column: 5, scope: !9324)
!9326 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !1530, file: !1530, line: 374, type: !291, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !293)
!9327 = !DILocation(line: 376, column: 5, scope: !9326)
!9328 = !DILocation(line: 377, column: 1, scope: !9326)
!9329 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !1530, file: !1530, line: 395, type: !3823, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !293)
!9330 = !DILocation(line: 397, column: 5, scope: !9329)
!9331 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !1530, file: !1530, line: 416, type: !3823, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1529, retainedNodes: !293)
!9332 = !DILocation(line: 418, column: 5, scope: !9331)
!9333 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !1541, file: !1541, line: 254, type: !3823, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !293)
!9334 = !DILocation(line: 256, column: 32, scope: !9333)
!9335 = !DILocation(line: 257, column: 5, scope: !9333)
!9336 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !1541, file: !1541, line: 269, type: !7451, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !293)
!9337 = !DILocation(line: 275, column: 24, scope: !9336)
!9338 = !DILocation(line: 278, column: 24, scope: !9336)
!9339 = !DILocation(line: 278, column: 33, scope: !9336)
!9340 = !DILocation(line: 278, column: 49, scope: !9336)
!9341 = !DILocation(line: 278, column: 22, scope: !9336)
!9342 = !DILocation(line: 281, column: 5, scope: !9336)
!9343 = !DILocation(line: 283, column: 34, scope: !9336)
!9344 = !DILocation(line: 283, column: 23, scope: !9336)
!9345 = !DILocation(line: 286, column: 25, scope: !9336)
!9346 = !DILocation(line: 321, column: 5, scope: !9336)
!9347 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !1541, file: !1541, line: 332, type: !7451, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !9348)
!9348 = !{!9349}
!9349 = !DILocalVariable(name: "result", scope: !9347, file: !1541, line: 334, type: !993)
!9350 = !DILocation(line: 340, column: 30, scope: !9347)
!9351 = !DILocation(line: 343, column: 24, scope: !9347)
!9352 = !DILocation(line: 344, column: 18, scope: !9347)
!9353 = !DILocation(line: 348, column: 17, scope: !9347)
!9354 = !DILocation(line: 353, column: 19, scope: !9347)
!9355 = !DILocation(line: 354, column: 18, scope: !9347)
!9356 = !DILocation(line: 354, column: 27, scope: !9347)
!9357 = !DILocation(line: 354, column: 43, scope: !9347)
!9358 = !DILocation(line: 350, column: 14, scope: !9347)
!9359 = !DILocation(line: 0, scope: !9347)
!9360 = !DILocation(line: 356, column: 16, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9347, file: !1541, line: 356, column: 9)
!9362 = !DILocation(line: 395, column: 1, scope: !9347)
!9363 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !1541, file: !1541, line: 406, type: !9364, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !293)
!9364 = !DISubroutineType(types: !2572)
!9365 = !DILocation(line: 408, column: 5, scope: !9363)
!9366 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !1541, file: !1541, line: 420, type: !9367, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !9369)
!9367 = !DISubroutineType(types: !9368)
!9368 = !{!61, !395}
!9369 = !{!9370, !9371, !9372}
!9370 = !DILocalVariable(name: "CS", arg: 1, scope: !9366, file: !1541, line: 420, type: !395)
!9371 = !DILocalVariable(name: "index", scope: !9366, file: !1541, line: 422, type: !61)
!9372 = !DILocalVariable(name: "list", scope: !9366, file: !1541, line: 423, type: !1858)
!9373 = !DILocation(line: 0, scope: !9366)
!9374 = !DILocation(line: 427, column: 13, scope: !9366)
!9375 = !DILocation(line: 430, column: 34, scope: !9366)
!9376 = !DILocation(line: 430, column: 5, scope: !9366)
!9377 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !1541, file: !1541, line: 442, type: !9378, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !9380)
!9378 = !DISubroutineType(types: !9379)
!9379 = !{!61, !61, !1730}
!9380 = !{!9381, !9382, !9383}
!9381 = !DILocalVariable(name: "address", arg: 1, scope: !9377, file: !1541, line: 442, type: !61)
!9382 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !9377, file: !1541, line: 442, type: !1730)
!9383 = !DILocalVariable(name: "i", scope: !9377, file: !1541, line: 444, type: !1087)
!9384 = !DILocation(line: 0, scope: !9377)
!9385 = !DILocation(line: 446, column: 23, scope: !9377)
!9386 = !DILocation(line: 448, column: 36, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9388, file: !1541, line: 448, column: 5)
!9388 = distinct !DILexicalBlock(scope: !9377, file: !1541, line: 448, column: 5)
!9389 = !DILocation(line: 448, column: 41, scope: !9387)
!9390 = !DILocation(line: 448, column: 5, scope: !9388)
!9391 = !DILocation(line: 449, column: 39, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9393, file: !1541, line: 449, column: 13)
!9393 = distinct !DILexicalBlock(scope: !9387, file: !1541, line: 448, column: 54)
!9394 = !DILocation(line: 449, column: 21, scope: !9392)
!9395 = !DILocation(line: 449, column: 46, scope: !9392)
!9396 = !DILocation(line: 450, column: 46, scope: !9392)
!9397 = !DILocation(line: 450, column: 25, scope: !9392)
!9398 = !DILocation(line: 449, column: 13, scope: !9393)
!9399 = !DILocation(line: 448, column: 48, scope: !9387)
!9400 = !DILocation(line: 448, column: 29, scope: !9387)
!9401 = !DILocation(line: 448, column: 31, scope: !9387)
!9402 = distinct !{!9402, !9390, !9403}
!9403 = !DILocation(line: 453, column: 5, scope: !9388)
!9404 = !DILocation(line: 454, column: 27, scope: !9377)
!9405 = !DILocation(line: 454, column: 5, scope: !9377)
!9406 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !1541, file: !1541, line: 462, type: !3571, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !9407)
!9407 = !{!9408}
!9408 = !DILocalVariable(name: "address", arg: 1, scope: !9406, file: !1541, line: 462, type: !61)
!9409 = !DILocation(line: 0, scope: !9406)
!9410 = !DILocation(line: 464, column: 45, scope: !9406)
!9411 = !DILocation(line: 464, column: 12, scope: !9406)
!9412 = !DILocation(line: 464, column: 5, scope: !9406)
!9413 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !1541, file: !1541, line: 487, type: !3571, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !9414)
!9414 = !{!9415, !9416, !9417}
!9415 = !DILocalVariable(name: "address", arg: 1, scope: !9413, file: !1541, line: 487, type: !61)
!9416 = !DILocalVariable(name: "index", scope: !9413, file: !1541, line: 490, type: !61)
!9417 = !DILocalVariable(name: "list", scope: !9413, file: !1541, line: 491, type: !1858)
!9418 = !DILocation(line: 0, scope: !9413)
!9419 = !DILocation(line: 490, column: 22, scope: !9413)
!9420 = !DILocation(line: 495, column: 45, scope: !9413)
!9421 = !DILocation(line: 495, column: 12, scope: !9413)
!9422 = !DILocation(line: 495, column: 5, scope: !9413)
!9423 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !1541, file: !1541, line: 517, type: !9424, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !9428)
!9424 = !DISubroutineType(types: !9425)
!9425 = !{!993, !9426}
!9426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9427, size: 32)
!9427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1744)
!9428 = !{!9429, !9430, !9431}
!9429 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !9423, file: !1541, line: 517, type: !9426)
!9430 = !DILocalVariable(name: "result", scope: !9423, file: !1541, line: 519, type: !61)
!9431 = !DILocalVariable(name: "i", scope: !9423, file: !1541, line: 519, type: !61)
!9432 = !DILocation(line: 0, scope: !9423)
!9433 = !DILocation(line: 522, column: 29, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9435, file: !1541, line: 522, column: 5)
!9435 = distinct !DILexicalBlock(scope: !9423, file: !1541, line: 522, column: 5)
!9436 = !DILocation(line: 522, column: 38, scope: !9434)
!9437 = !DILocation(line: 522, column: 5, scope: !9435)
!9438 = !DILocation(line: 523, column: 31, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9434, file: !1541, line: 522, column: 51)
!9440 = !DILocation(line: 523, column: 37, scope: !9439)
!9441 = !DILocation(line: 523, column: 16, scope: !9439)
!9442 = !DILocation(line: 522, column: 45, scope: !9434)
!9443 = distinct !{!9443, !9437, !9444}
!9444 = !DILocation(line: 524, column: 5, scope: !9435)
!9445 = !DILocation(line: 525, column: 5, scope: !9423)
!9446 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !1541, file: !1541, line: 535, type: !9447, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !9449)
!9447 = !DISubroutineType(types: !9448)
!9448 = !{!61, !61, !61, !1556, !1730}
!9449 = !{!9450, !9451, !9452, !9453, !9454, !9455, !9456, !9457, !9458}
!9450 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9446, file: !1541, line: 536, type: !61)
!9451 = !DILocalVariable(name: "length", arg: 2, scope: !9446, file: !1541, line: 537, type: !61)
!9452 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9446, file: !1541, line: 538, type: !1556)
!9453 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !9446, file: !1541, line: 539, type: !1730)
!9454 = !DILocalVariable(name: "addr", scope: !9446, file: !1541, line: 541, type: !61)
!9455 = !DILocalVariable(name: "ptr", scope: !9446, file: !1541, line: 541, type: !61)
!9456 = !DILocalVariable(name: "blksize", scope: !9446, file: !1541, line: 541, type: !61)
!9457 = !DILocalVariable(name: "total_blocks", scope: !9446, file: !1541, line: 541, type: !61)
!9458 = !DILocalVariable(name: "endaddr", scope: !9446, file: !1541, line: 542, type: !61)
!9459 = !DILocation(line: 0, scope: !9446)
!9460 = !DILocation(line: 542, column: 33, scope: !9446)
!9461 = !DILocation(line: 557, column: 59, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9463, file: !1541, line: 557, column: 5)
!9463 = distinct !DILexicalBlock(scope: !9446, file: !1541, line: 557, column: 5)
!9464 = !DILocation(line: 557, column: 5, scope: !9463)
!9465 = !DILocation(line: 560, column: 19, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9462, file: !1541, line: 559, column: 5)
!9467 = !DILocation(line: 562, column: 26, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9466, file: !1541, line: 562, column: 13)
!9469 = !DILocation(line: 0, scope: !9468)
!9470 = !DILocation(line: 562, column: 13, scope: !9466)
!9471 = !DILocation(line: 563, column: 39, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9468, file: !1541, line: 562, column: 34)
!9473 = !DILocation(line: 564, column: 29, scope: !9472)
!9474 = !DILocation(line: 564, column: 42, scope: !9472)
!9475 = !DILocation(line: 565, column: 9, scope: !9472)
!9476 = !DILocation(line: 567, column: 45, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9468, file: !1541, line: 567, column: 18)
!9478 = !DILocation(line: 567, column: 26, scope: !9477)
!9479 = !DILocation(line: 567, column: 18, scope: !9468)
!9480 = !DILocation(line: 568, column: 29, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9477, file: !1541, line: 567, column: 59)
!9482 = !DILocation(line: 568, column: 41, scope: !9481)
!9483 = !DILocation(line: 569, column: 9, scope: !9481)
!9484 = !DILocation(line: 572, column: 16, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9477, file: !1541, line: 571, column: 14)
!9486 = !DILocation(line: 573, column: 21, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9485, file: !1541, line: 573, column: 17)
!9488 = !DILocation(line: 573, column: 17, scope: !9485)
!9489 = !DILocation(line: 576, column: 29, scope: !9485)
!9490 = !DILocation(line: 576, column: 39, scope: !9485)
!9491 = !DILocation(line: 577, column: 29, scope: !9485)
!9492 = !DILocation(line: 577, column: 42, scope: !9485)
!9493 = !DILocation(line: 0, scope: !9463)
!9494 = !DILocation(line: 579, column: 14, scope: !9466)
!9495 = !DILocation(line: 580, column: 21, scope: !9466)
!9496 = distinct !{!9496, !9464, !9497}
!9497 = !DILocation(line: 581, column: 5, scope: !9463)
!9498 = !DILocation(line: 586, column: 1, scope: !9446)
!9499 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !1541, file: !1541, line: 593, type: !9500, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !9502)
!9500 = !DISubroutineType(types: !9501)
!9501 = !{!993, !61, !61, !1556}
!9502 = !{!9503, !9504, !9505}
!9503 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9499, file: !1541, line: 593, type: !61)
!9504 = !DILocalVariable(name: "length", arg: 2, scope: !9499, file: !1541, line: 593, type: !61)
!9505 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9499, file: !1541, line: 593, type: !1556)
!9506 = !DILocation(line: 0, scope: !9499)
!9507 = !DILocation(line: 595, column: 12, scope: !9499)
!9508 = !DILocation(line: 595, column: 5, scope: !9499)
!9509 = !DILocation(line: 597, column: 81, scope: !9499)
!9510 = !DILocation(line: 597, column: 12, scope: !9499)
!9511 = !DILocation(line: 597, column: 5, scope: !9499)
!9512 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !1541, file: !1541, line: 606, type: !9500, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !9513)
!9513 = !{!9514, !9515, !9516}
!9514 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9512, file: !1541, line: 606, type: !61)
!9515 = !DILocalVariable(name: "length", arg: 2, scope: !9512, file: !1541, line: 606, type: !61)
!9516 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9512, file: !1541, line: 606, type: !1556)
!9517 = !DILocation(line: 0, scope: !9512)
!9518 = !DILocation(line: 624, column: 5, scope: !9512)
!9519 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !1541, file: !1541, line: 637, type: !9500, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !9520)
!9520 = !{!9521, !9522, !9523, !9524, !9525}
!9521 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9519, file: !1541, line: 637, type: !61)
!9522 = !DILocalVariable(name: "length", arg: 2, scope: !9519, file: !1541, line: 637, type: !61)
!9523 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9519, file: !1541, line: 637, type: !1556)
!9524 = !DILocalVariable(name: "index", scope: !9519, file: !1541, line: 642, type: !61)
!9525 = !DILocalVariable(name: "list", scope: !9519, file: !1541, line: 644, type: !1858)
!9526 = !DILocation(line: 0, scope: !9519)
!9527 = !DILocation(line: 642, column: 22, scope: !9519)
!9528 = !DILocation(line: 648, column: 81, scope: !9519)
!9529 = !DILocation(line: 648, column: 12, scope: !9519)
!9530 = !DILocation(line: 648, column: 5, scope: !9519)
!9531 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !1541, file: !1541, line: 658, type: !9500, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !9532)
!9532 = !{!9533, !9534, !9535}
!9533 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9531, file: !1541, line: 658, type: !61)
!9534 = !DILocalVariable(name: "length", arg: 2, scope: !9531, file: !1541, line: 658, type: !61)
!9535 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9531, file: !1541, line: 658, type: !1556)
!9536 = !DILocation(line: 0, scope: !9531)
!9537 = !DILocation(line: 688, column: 5, scope: !9531)
!9538 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !1541, file: !1541, line: 700, type: !6885, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !9539)
!9539 = !{!9540, !9541, !9542}
!9540 = !DILocalVariable(name: "CS", arg: 1, scope: !9538, file: !1541, line: 700, type: !6818)
!9541 = !DILocalVariable(name: "index", scope: !9538, file: !1541, line: 705, type: !61)
!9542 = !DILocalVariable(name: "list", scope: !9538, file: !1541, line: 707, type: !1858)
!9543 = !DILocation(line: 0, scope: !9538)
!9544 = !DILocation(line: 705, column: 22, scope: !9538)
!9545 = !DILocation(line: 711, column: 24, scope: !9538)
!9546 = !DILocation(line: 711, column: 5, scope: !9538)
!9547 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !1541, file: !1541, line: 721, type: !9548, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !9550)
!9548 = !DISubroutineType(types: !9549)
!9549 = !{null, !1776, !1055, !61}
!9550 = !{!9551, !9552, !9553}
!9551 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !9547, file: !1541, line: 721, type: !1776)
!9552 = !DILocalVariable(name: "index", arg: 2, scope: !9547, file: !1541, line: 721, type: !1055)
!9553 = !DILocalVariable(name: "bankSize", arg: 3, scope: !9547, file: !1541, line: 721, type: !61)
!9554 = !DILocation(line: 0, scope: !9547)
!9555 = !DILocation(line: 723, column: 18, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9547, file: !1541, line: 723, column: 9)
!9557 = !DILocation(line: 723, column: 26, scope: !9556)
!9558 = !DILocation(line: 723, column: 35, scope: !9556)
!9559 = !DILocation(line: 723, column: 9, scope: !9547)
!9560 = !DILocation(line: 724, column: 26, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9556, file: !1541, line: 723, column: 48)
!9562 = !DILocation(line: 724, column: 32, scope: !9561)
!9563 = !DILocation(line: 725, column: 5, scope: !9561)
!9564 = !DILocation(line: 726, column: 18, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9556, file: !1541, line: 725, column: 12)
!9566 = !DILocation(line: 727, column: 26, scope: !9565)
!9567 = !DILocation(line: 727, column: 32, scope: !9565)
!9568 = !DILocation(line: 728, column: 18, scope: !9565)
!9569 = !DILocation(line: 728, column: 26, scope: !9565)
!9570 = !DILocation(line: 728, column: 35, scope: !9565)
!9571 = !DILocation(line: 731, column: 1, scope: !9547)
!9572 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !1541, file: !1541, line: 739, type: !9573, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !9575)
!9573 = !DISubroutineType(types: !9574)
!9574 = !{!61, !61, !61, !1776, !9426}
!9575 = !{!9576, !9577, !9578, !9579, !9580, !9581, !9582, !9583, !9584}
!9576 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9572, file: !1541, line: 740, type: !61)
!9577 = !DILocalVariable(name: "length", arg: 2, scope: !9572, file: !1541, line: 741, type: !61)
!9578 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !9572, file: !1541, line: 742, type: !1776)
!9579 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !9572, file: !1541, line: 743, type: !9426)
!9580 = !DILocalVariable(name: "Partition", scope: !9572, file: !1541, line: 745, type: !61)
!9581 = !DILocalVariable(name: "Index", scope: !9572, file: !1541, line: 746, type: !993)
!9582 = !DILocalVariable(name: "bankSize", scope: !9572, file: !1541, line: 747, type: !61)
!9583 = !DILocalVariable(name: "NextBankAddr", scope: !9572, file: !1541, line: 748, type: !61)
!9584 = !DILocalVariable(name: "srcBankIdx", scope: !9572, file: !1541, line: 748, type: !61)
!9585 = !DILocation(line: 0, scope: !9572)
!9586 = !DILocation(line: 750, column: 12, scope: !9572)
!9587 = !DILocation(line: 750, column: 5, scope: !9572)
!9588 = !DILocation(line: 752, column: 51, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9590, file: !1541, line: 752, column: 5)
!9590 = distinct !DILexicalBlock(scope: !9572, file: !1541, line: 752, column: 5)
!9591 = !DILocation(line: 752, column: 5, scope: !9590)
!9592 = !DILocation(line: 753, column: 51, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9594, file: !1541, line: 753, column: 13)
!9594 = distinct !DILexicalBlock(scope: !9589, file: !1541, line: 752, column: 70)
!9595 = !DILocation(line: 753, column: 24, scope: !9593)
!9596 = !DILocation(line: 753, column: 13, scope: !9594)
!9597 = !DILocation(line: 758, column: 49, scope: !9594)
!9598 = !DILocation(line: 758, column: 22, scope: !9594)
!9599 = !DILocation(line: 760, column: 22, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9594, file: !1541, line: 760, column: 13)
!9601 = !DILocation(line: 760, column: 13, scope: !9594)
!9602 = !DILocation(line: 761, column: 37, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9600, file: !1541, line: 760, column: 39)
!9604 = !DILocation(line: 762, column: 24, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9603, file: !1541, line: 762, column: 17)
!9606 = !DILocation(line: 762, column: 17, scope: !9603)
!9607 = !DILocation(line: 767, column: 33, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9603, file: !1541, line: 767, column: 17)
!9609 = !DILocation(line: 767, column: 42, scope: !9608)
!9610 = !DILocation(line: 767, column: 17, scope: !9603)
!9611 = !DILocation(line: 768, column: 33, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9608, file: !1541, line: 767, column: 55)
!9613 = !DILocation(line: 768, column: 39, scope: !9612)
!9614 = !DILocation(line: 769, column: 13, scope: !9612)
!9615 = !DILocation(line: 770, column: 46, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9617, file: !1541, line: 770, column: 21)
!9617 = distinct !DILexicalBlock(scope: !9608, file: !1541, line: 769, column: 20)
!9618 = !DILocation(line: 770, column: 21, scope: !9617)
!9619 = !DILocation(line: 773, column: 33, scope: !9617)
!9620 = !DILocation(line: 773, column: 39, scope: !9617)
!9621 = !DILocation(line: 774, column: 33, scope: !9617)
!9622 = !DILocation(line: 774, column: 42, scope: !9617)
!9623 = !DILocation(line: 777, column: 22, scope: !9603)
!9624 = !DILocation(line: 778, column: 20, scope: !9603)
!9625 = !DILocation(line: 779, column: 9, scope: !9603)
!9626 = !DILocation(line: 746, column: 13, scope: !9572)
!9627 = !DILocation(line: 752, column: 66, scope: !9589)
!9628 = distinct !{!9628, !9591, !9629}
!9629 = !DILocation(line: 781, column: 5, scope: !9590)
!9630 = !DILocation(line: 784, column: 5, scope: !9572)
!9631 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !1541, file: !1541, line: 796, type: !7451, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !9632)
!9632 = !{!9633, !9634}
!9633 = !DILocalVariable(name: "result", scope: !9631, file: !1541, line: 798, type: !993)
!9634 = !DILocalVariable(name: "i", scope: !9631, file: !1541, line: 799, type: !993)
!9635 = !DILocation(line: 803, column: 19, scope: !9631)
!9636 = !DILocation(line: 803, column: 28, scope: !9631)
!9637 = !DILocation(line: 803, column: 17, scope: !9631)
!9638 = !DILocation(line: 822, column: 33, scope: !9631)
!9639 = !DILocation(line: 822, column: 56, scope: !9631)
!9640 = !DILocation(line: 822, column: 88, scope: !9631)
!9641 = !DILocation(line: 822, column: 97, scope: !9631)
!9642 = !DILocation(line: 822, column: 5, scope: !9631)
!9643 = !DILocation(line: 829, column: 39, scope: !9631)
!9644 = !DILocation(line: 829, column: 62, scope: !9631)
!9645 = !DILocation(line: 829, column: 14, scope: !9631)
!9646 = !DILocation(line: 0, scope: !9631)
!9647 = !DILocation(line: 834, column: 16, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9631, file: !1541, line: 834, column: 9)
!9649 = !DILocation(line: 834, column: 9, scope: !9631)
!9650 = !DILocation(line: 838, column: 30, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9631, file: !1541, line: 838, column: 5)
!9652 = !DILocation(line: 838, column: 58, scope: !9651)
!9653 = !DILocation(line: 838, column: 78, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9651, file: !1541, line: 838, column: 5)
!9655 = !DILocation(line: 838, column: 88, scope: !9654)
!9656 = !DILocation(line: 838, column: 5, scope: !9651)
!9657 = !DILocation(line: 839, column: 39, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9654, file: !1541, line: 838, column: 102)
!9659 = !DILocation(line: 839, column: 22, scope: !9658)
!9660 = !DILocation(line: 840, column: 37, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9658, file: !1541, line: 840, column: 13)
!9662 = !DILocation(line: 840, column: 13, scope: !9658)
!9663 = !DILocation(line: 841, column: 36, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9661, file: !1541, line: 840, column: 63)
!9665 = !DILocation(line: 842, column: 9, scope: !9664)
!9666 = !DILocation(line: 838, column: 95, scope: !9654)
!9667 = distinct !{!9667, !9656, !9668}
!9668 = !DILocation(line: 843, column: 5, scope: !9651)
!9669 = !DILocation(line: 871, column: 49, scope: !9631)
!9670 = !DILocation(line: 871, column: 72, scope: !9631)
!9671 = !DILocation(line: 871, column: 47, scope: !9631)
!9672 = !DILocation(line: 871, column: 97, scope: !9631)
!9673 = !DILocation(line: 871, column: 19, scope: !9631)
!9674 = !DILocation(line: 882, column: 14, scope: !9631)
!9675 = !DILocation(line: 887, column: 13, scope: !9631)
!9676 = !DILocation(line: 887, column: 22, scope: !9631)
!9677 = !DILocation(line: 887, column: 5, scope: !9631)
!9678 = !DILocation(line: 889, column: 22, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9631, file: !1541, line: 887, column: 34)
!9680 = !DILocation(line: 890, column: 13, scope: !9679)
!9681 = !DILocation(line: 902, column: 1, scope: !9631)
!9682 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !1541, file: !1541, line: 912, type: !9683, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !9685)
!9683 = !DISubroutineType(types: !9684)
!9684 = !{null, !828}
!9685 = !{!9686}
!9686 = !DILocalVariable(name: "CS", arg: 1, scope: !9682, file: !1541, line: 912, type: !828)
!9687 = !DILocation(line: 0, scope: !9682)
!9688 = !DILocation(line: 914, column: 12, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9682, file: !1541, line: 914, column: 9)
!9690 = !DILocation(line: 914, column: 9, scope: !9682)
!9691 = !DILocation(line: 918, column: 26, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9689, file: !1541, line: 914, column: 18)
!9693 = !DILocation(line: 918, column: 24, scope: !9692)
!9694 = !DILocation(line: 920, column: 28, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9692, file: !1541, line: 920, column: 13)
!9696 = !DILocation(line: 920, column: 13, scope: !9692)
!9697 = !DILocation(line: 921, column: 13, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9699, file: !1541, line: 921, column: 13)
!9699 = distinct !DILexicalBlock(scope: !9700, file: !1541, line: 921, column: 13)
!9700 = distinct !DILexicalBlock(scope: !9701, file: !1541, line: 921, column: 13)
!9701 = distinct !DILexicalBlock(scope: !9695, file: !1541, line: 920, column: 33)
!9702 = !DILocation(line: 923, column: 19, scope: !9692)
!9703 = !DILocation(line: 923, column: 17, scope: !9692)
!9704 = !DILocation(line: 924, column: 5, scope: !9692)
!9705 = !DILocation(line: 935, column: 14, scope: !9682)
!9706 = !DILocation(line: 936, column: 1, scope: !9682)
!9707 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !1541, file: !1541, line: 952, type: !7451, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !293)
!9708 = !DILocation(line: 955, column: 5, scope: !9707)
!9709 = !DILocation(line: 956, column: 12, scope: !9707)
!9710 = !DILocation(line: 956, column: 5, scope: !9707)
!9711 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !1541, file: !1541, line: 974, type: !7451, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1540, retainedNodes: !9712)
!9712 = !{!9713}
!9713 = !DILocalVariable(name: "result", scope: !9711, file: !1541, line: 976, type: !993)
!9714 = !DILocation(line: 981, column: 5, scope: !9711)
!9715 = !DILocation(line: 986, column: 24, scope: !9711)
!9716 = !DILocation(line: 986, column: 33, scope: !9711)
!9717 = !DILocation(line: 986, column: 49, scope: !9711)
!9718 = !DILocation(line: 986, column: 22, scope: !9711)
!9719 = !DILocation(line: 1002, column: 19, scope: !9711)
!9720 = !DILocation(line: 1002, column: 17, scope: !9711)
!9721 = !DILocation(line: 1014, column: 22, scope: !9711)
!9722 = !DILocation(line: 1014, column: 5, scope: !9711)
!9723 = !DILocation(line: 1024, column: 33, scope: !9711)
!9724 = !DILocation(line: 1026, column: 27, scope: !9711)
!9725 = !DILocation(line: 1027, column: 26, scope: !9711)
!9726 = !DILocation(line: 1042, column: 33, scope: !9711)
!9727 = !DILocation(line: 1044, column: 32, scope: !9711)
!9728 = !DILocation(line: 1052, column: 18, scope: !9711)
!9729 = !DILocation(line: 1052, column: 27, scope: !9711)
!9730 = !DILocation(line: 1052, column: 43, scope: !9711)
!9731 = !DILocation(line: 1048, column: 14, scope: !9711)
!9732 = !DILocation(line: 0, scope: !9711)
!9733 = !DILocation(line: 1063, column: 5, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9735, file: !1541, line: 1063, column: 5)
!9735 = distinct !DILexicalBlock(scope: !9711, file: !1541, line: 1063, column: 5)
!9736 = !DILocation(line: 1063, column: 5, scope: !9735)
!9737 = !DILocation(line: 1063, column: 5, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9734, file: !1541, line: 1063, column: 5)
!9739 = !DILocation(line: 1096, column: 36, scope: !9711)
!9740 = !DILocation(line: 1096, column: 34, scope: !9711)
!9741 = !DILocation(line: 1101, column: 5, scope: !9711)
!9742 = !DILocation(line: 1103, column: 34, scope: !9711)
!9743 = !DILocation(line: 1109, column: 35, scope: !9711)
!9744 = !DILocation(line: 1110, column: 33, scope: !9711)
!9745 = !DILocation(line: 1111, column: 34, scope: !9711)
!9746 = !DILocation(line: 1113, column: 5, scope: !9711)
!9747 = distinct !DISubprogram(name: "CreateFDMLock", scope: !1899, file: !1899, line: 84, type: !291, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !293)
!9748 = !DILocation(line: 86, column: 1, scope: !9747)
!9749 = distinct !DISubprogram(name: "GetFDMLock", scope: !1899, file: !1899, line: 87, type: !7917, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !9750)
!9750 = !{!9751}
!9751 = !DILocalVariable(name: "savedMask", scope: !9749, file: !1899, line: 89, type: !993)
!9752 = !DILocation(line: 90, column: 17, scope: !9749)
!9753 = !DILocation(line: 0, scope: !9749)
!9754 = !DILocation(line: 91, column: 9, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9749, file: !1899, line: 91, column: 9)
!9756 = !DILocation(line: 91, column: 9, scope: !9749)
!9757 = !DILocation(line: 92, column: 17, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9755, file: !1899, line: 91, column: 24)
!9759 = !DILocation(line: 94, column: 9, scope: !9758)
!9760 = !DILocation(line: 0, scope: !9755)
!9761 = !DILocation(line: 102, column: 1, scope: !9749)
!9762 = distinct !DISubprogram(name: "FreeFDMLock", scope: !1899, file: !1899, line: 103, type: !291, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !9763)
!9763 = !{!9764}
!9764 = !DILocalVariable(name: "savedMask", scope: !9762, file: !1899, line: 105, type: !993)
!9765 = !DILocation(line: 106, column: 17, scope: !9762)
!9766 = !DILocation(line: 0, scope: !9762)
!9767 = !DILocation(line: 107, column: 9, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9762, file: !1899, line: 107, column: 9)
!9769 = !DILocation(line: 107, column: 9, scope: !9762)
!9770 = !DILocation(line: 108, column: 17, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9768, file: !1899, line: 107, column: 24)
!9772 = !DILocation(line: 109, column: 9, scope: !9771)
!9773 = !DILocation(line: 114, column: 1, scope: !9762)
!9774 = !DILocation(line: 111, column: 9, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9768, file: !1899, line: 110, column: 12)
!9776 = !DILocation(line: 112, column: 9, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9778, file: !1899, line: 112, column: 9)
!9778 = distinct !DILexicalBlock(scope: !9779, file: !1899, line: 112, column: 9)
!9779 = distinct !DILexicalBlock(scope: !9775, file: !1899, line: 112, column: 9)
!9780 = distinct !DISubprogram(name: "create_FDM_lock", scope: !1899, file: !1899, line: 119, type: !291, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !293)
!9781 = !DILocation(line: 123, column: 1, scope: !9780)
!9782 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !1899, file: !1899, line: 130, type: !291, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !9783)
!9783 = !{!9784}
!9784 = !DILocalVariable(name: "Result", scope: !9782, file: !1899, line: 132, type: !1955)
!9785 = !DILocation(line: 133, column: 5, scope: !9782)
!9786 = !DILocation(line: 134, column: 18, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9782, file: !1899, line: 133, column: 8)
!9788 = !DILocation(line: 0, scope: !9782)
!9789 = !DILocation(line: 135, column: 21, scope: !9782)
!9790 = !DILocation(line: 135, column: 5, scope: !9787)
!9791 = distinct !{!9791, !9785, !9792}
!9792 = !DILocation(line: 135, column: 43, scope: !9782)
!9793 = !DILocation(line: 136, column: 1, scope: !9782)
!9794 = distinct !DISubprogram(name: "release_FDM_lock", scope: !1899, file: !1899, line: 143, type: !291, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !293)
!9795 = !DILocation(line: 147, column: 5, scope: !9794)
!9796 = !DILocation(line: 148, column: 1, scope: !9794)
!9797 = distinct !DISubprogram(name: "readRawDiskData", scope: !1899, file: !1899, line: 216, type: !9798, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !9839)
!9798 = !DISubroutineType(types: !9799)
!9799 = !{!993, !9800, !61, !818, !61}
!9800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9801, size: 32)
!9801 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1846, line: 93, baseType: !9802)
!9802 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1846, line: 83, size: 1056, elements: !9803)
!9803 = !{!9804, !9805, !9825, !9826, !9838}
!9804 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !9802, file: !1846, line: 84, baseType: !61, size: 32)
!9805 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !9802, file: !1846, line: 85, baseType: !9806, size: 32, offset: 32)
!9806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9807, size: 32)
!9807 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1313, line: 121, baseType: !9808)
!9808 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 105, size: 480, elements: !9809)
!9809 = !{!9810, !9811, !9812, !9813, !9814, !9815, !9816, !9817, !9818, !9819, !9820, !9821, !9822, !9823, !9824}
!9810 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !9808, file: !1313, line: 106, baseType: !1587, size: 32)
!9811 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !9808, file: !1313, line: 107, baseType: !1388, size: 32, offset: 32)
!9812 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !9808, file: !1313, line: 108, baseType: !1592, size: 32, offset: 64)
!9813 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !9808, file: !1313, line: 109, baseType: !1596, size: 32, offset: 96)
!9814 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !9808, file: !1313, line: 110, baseType: !1600, size: 32, offset: 128)
!9815 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !9808, file: !1313, line: 111, baseType: !1596, size: 32, offset: 160)
!9816 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !9808, file: !1313, line: 112, baseType: !1605, size: 32, offset: 192)
!9817 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !9808, file: !1313, line: 113, baseType: !1596, size: 32, offset: 224)
!9818 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !9808, file: !1313, line: 114, baseType: !1596, size: 32, offset: 256)
!9819 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !9808, file: !1313, line: 115, baseType: !1596, size: 32, offset: 288)
!9820 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !9808, file: !1313, line: 116, baseType: !1612, size: 32, offset: 320)
!9821 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !9808, file: !1313, line: 117, baseType: !1617, size: 32, offset: 352)
!9822 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !9808, file: !1313, line: 118, baseType: !1622, size: 32, offset: 384)
!9823 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !9808, file: !1313, line: 119, baseType: !1626, size: 32, offset: 416)
!9824 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !9808, file: !1313, line: 120, baseType: !1630, size: 32, offset: 448)
!9825 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !9802, file: !1846, line: 86, baseType: !88, size: 32, offset: 64)
!9826 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !9802, file: !1846, line: 87, baseType: !9827, size: 928, offset: 96)
!9827 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1313, line: 99, baseType: !9828)
!9828 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1313, line: 90, size: 928, elements: !9829)
!9829 = !{!9830, !9831, !9832, !9833, !9834, !9835, !9836, !9837}
!9830 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !9828, file: !1313, line: 91, baseType: !61, size: 32)
!9831 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !9828, file: !1313, line: 92, baseType: !1644, size: 256, offset: 32)
!9832 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !9828, file: !1313, line: 93, baseType: !1644, size: 256, offset: 288)
!9833 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !9828, file: !1313, line: 94, baseType: !1644, size: 256, offset: 544)
!9834 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !9828, file: !1313, line: 95, baseType: !61, size: 32, offset: 800)
!9835 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !9828, file: !1313, line: 96, baseType: !1636, size: 16, offset: 832)
!9836 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !9828, file: !1313, line: 97, baseType: !61, size: 32, offset: 864)
!9837 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !9828, file: !1313, line: 98, baseType: !61, size: 32, offset: 896)
!9838 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !9802, file: !1846, line: 92, baseType: !91, size: 8, offset: 1024)
!9839 = !{!9840, !9841, !9842, !9843, !9844, !9845}
!9840 = !DILocalVariable(name: "D", arg: 1, scope: !9797, file: !1899, line: 216, type: !9800)
!9841 = !DILocalVariable(name: "addr", arg: 2, scope: !9797, file: !1899, line: 216, type: !61)
!9842 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9797, file: !1899, line: 216, type: !818)
!9843 = !DILocalVariable(name: "len", arg: 4, scope: !9797, file: !1899, line: 216, type: !61)
!9844 = !DILocalVariable(name: "phyAddr", scope: !9797, file: !1899, line: 219, type: !61)
!9845 = !DILocalVariable(name: "diskSize", scope: !9797, file: !1899, line: 220, type: !61)
!9846 = !DILocation(line: 0, scope: !9797)
!9847 = !DILocation(line: 220, column: 28, scope: !9797)
!9848 = !DILocation(line: 222, column: 14, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9797, file: !1899, line: 222, column: 9)
!9850 = !DILocation(line: 222, column: 26, scope: !9849)
!9851 = !DILocation(line: 225, column: 51, scope: !9797)
!9852 = !DILocation(line: 225, column: 61, scope: !9797)
!9853 = !DILocation(line: 225, column: 15, scope: !9797)
!9854 = !DILocation(line: 225, column: 70, scope: !9797)
!9855 = !DILocation(line: 227, column: 13, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9797, file: !1899, line: 227, column: 9)
!9857 = !DILocation(line: 227, column: 9, scope: !9797)
!9858 = !DILocation(line: 228, column: 9, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9856, file: !1899, line: 227, column: 23)
!9860 = !DILocation(line: 229, column: 5, scope: !9859)
!9861 = !DILocation(line: 231, column: 5, scope: !9797)
!9862 = !DILocation(line: 233, column: 22, scope: !9797)
!9863 = !DILocation(line: 233, column: 5, scope: !9797)
!9864 = !DILocation(line: 235, column: 5, scope: !9797)
!9865 = !DILocation(line: 237, column: 5, scope: !9797)
!9866 = !DILocation(line: 238, column: 1, scope: !9797)
!9867 = distinct !DISubprogram(name: "MountDevice", scope: !1899, file: !1899, line: 165, type: !9868, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !9870)
!9868 = !DISubroutineType(types: !9869)
!9869 = !{null, !9800}
!9870 = !{!9871, !9872}
!9871 = !DILocalVariable(name: "D", arg: 1, scope: !9867, file: !1899, line: 165, type: !9800)
!9872 = !DILocalVariable(name: "Result", scope: !9867, file: !1899, line: 167, type: !993)
!9873 = !DILocation(line: 0, scope: !9867)
!9874 = !DILocation(line: 171, column: 12, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9867, file: !1899, line: 171, column: 9)
!9876 = !DILocation(line: 171, column: 9, scope: !9867)
!9877 = !DILocation(line: 176, column: 5, scope: !9867)
!9878 = !DILocation(line: 186, column: 17, scope: !9867)
!9879 = !DILocation(line: 186, column: 28, scope: !9867)
!9880 = !DILocation(line: 186, column: 43, scope: !9867)
!9881 = !DILocation(line: 186, column: 64, scope: !9867)
!9882 = !DILocation(line: 186, column: 52, scope: !9867)
!9883 = !DILocation(line: 186, column: 14, scope: !9867)
!9884 = !DILocation(line: 188, column: 5, scope: !9867)
!9885 = !DILocation(line: 190, column: 16, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9867, file: !1899, line: 190, column: 9)
!9887 = !DILocation(line: 190, column: 9, scope: !9867)
!9888 = !DILocation(line: 191, column: 9, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9890, file: !1899, line: 191, column: 9)
!9890 = distinct !DILexicalBlock(scope: !9891, file: !1899, line: 191, column: 9)
!9891 = distinct !DILexicalBlock(scope: !9892, file: !1899, line: 191, column: 9)
!9892 = distinct !DILexicalBlock(scope: !9886, file: !1899, line: 190, column: 31)
!9893 = !DILocation(line: 194, column: 17, scope: !9867)
!9894 = !DILocation(line: 195, column: 1, scope: !9867)
!9895 = distinct !DISubprogram(name: "writeRawDiskData", scope: !1899, file: !1899, line: 277, type: !9798, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !9896)
!9896 = !{!9897, !9898, !9899, !9900, !9901, !9902, !9903, !9904, !9905, !9906, !9910, !9911, !9912, !9917}
!9897 = !DILocalVariable(name: "D", arg: 1, scope: !9895, file: !1899, line: 277, type: !9800)
!9898 = !DILocalVariable(name: "addr", arg: 2, scope: !9895, file: !1899, line: 277, type: !61)
!9899 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9895, file: !1899, line: 277, type: !818)
!9900 = !DILocalVariable(name: "len", arg: 4, scope: !9895, file: !1899, line: 277, type: !61)
!9901 = !DILocalVariable(name: "dest", scope: !9895, file: !1899, line: 279, type: !61)
!9902 = !DILocalVariable(name: "src", scope: !9895, file: !1899, line: 279, type: !61)
!9903 = !DILocalVariable(name: "diskSize", scope: !9895, file: !1899, line: 280, type: !61)
!9904 = !DILocalVariable(name: "result", scope: !9895, file: !1899, line: 281, type: !993)
!9905 = !DILocalVariable(name: "DoneLength", scope: !9895, file: !1899, line: 282, type: !61)
!9906 = !DILocalVariable(name: "blockSize", scope: !9907, file: !1899, line: 313, type: !61)
!9907 = distinct !DILexicalBlock(scope: !9908, file: !1899, line: 312, column: 14)
!9908 = distinct !DILexicalBlock(scope: !9909, file: !1899, line: 305, column: 13)
!9909 = distinct !DILexicalBlock(scope: !9895, file: !1899, line: 298, column: 30)
!9910 = !DILocalVariable(name: "programBytes", scope: !9907, file: !1899, line: 314, type: !61)
!9911 = !DILocalVariable(name: "nextBlkAddr", scope: !9907, file: !1899, line: 316, type: !61)
!9912 = !DILocalVariable(name: "Cell", scope: !9913, file: !1899, line: 346, type: !9915)
!9913 = distinct !DILexicalBlock(scope: !9914, file: !1899, line: 345, column: 83)
!9914 = distinct !DILexicalBlock(scope: !9907, file: !1899, line: 345, column: 17)
!9915 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !9916, line: 76, baseType: !1087)
!9916 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/pwm_generate_waveform/GCC")
!9917 = !DILocalVariable(name: "b", scope: !9913, file: !1899, line: 347, type: !818)
!9918 = !DILocation(line: 0, scope: !9895)
!9919 = !DILocation(line: 280, column: 28, scope: !9895)
!9920 = !DILocation(line: 284, column: 14, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9895, file: !1899, line: 284, column: 9)
!9922 = !DILocation(line: 284, column: 9, scope: !9895)
!9923 = !DILocation(line: 288, column: 14, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9895, file: !1899, line: 288, column: 9)
!9925 = !DILocation(line: 288, column: 20, scope: !9924)
!9926 = !DILocation(line: 288, column: 9, scope: !9895)
!9927 = !DILocation(line: 292, column: 13, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9895, file: !1899, line: 292, column: 9)
!9929 = !DILocation(line: 292, column: 9, scope: !9895)
!9930 = !DILocation(line: 293, column: 9, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9928, file: !1899, line: 292, column: 23)
!9932 = !DILocation(line: 294, column: 5, scope: !9931)
!9933 = !DILocation(line: 296, column: 5, scope: !9895)
!9934 = !DILocation(line: 346, column: 17, scope: !9913)
!9935 = !DILocation(line: 298, column: 23, scope: !9895)
!9936 = !DILocation(line: 298, column: 5, scope: !9895)
!9937 = !DILocation(line: 299, column: 52, scope: !9909)
!9938 = !DILocation(line: 299, column: 62, scope: !9909)
!9939 = !DILocation(line: 299, column: 16, scope: !9909)
!9940 = !DILocation(line: 299, column: 71, scope: !9909)
!9941 = !DILocation(line: 299, column: 78, scope: !9909)
!9942 = !DILocation(line: 300, column: 34, scope: !9909)
!9943 = !DILocation(line: 302, column: 12, scope: !9909)
!9944 = !DILocation(line: 302, column: 23, scope: !9909)
!9945 = !DILocation(line: 302, column: 81, scope: !9909)
!9946 = !DILocation(line: 302, column: 45, scope: !9909)
!9947 = !DILocation(line: 302, column: 9, scope: !9909)
!9948 = !DILocation(line: 305, column: 29, scope: !9908)
!9949 = !DILocation(line: 305, column: 57, scope: !9908)
!9950 = !DILocation(line: 305, column: 66, scope: !9908)
!9951 = !DILocation(line: 305, column: 80, scope: !9908)
!9952 = !DILocation(line: 305, column: 13, scope: !9909)
!9953 = !DILocation(line: 306, column: 25, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9908, file: !1899, line: 305, column: 87)
!9955 = !DILocation(line: 306, column: 36, scope: !9954)
!9956 = !DILocation(line: 306, column: 51, scope: !9954)
!9957 = !DILocation(line: 306, column: 60, scope: !9954)
!9958 = !DILocation(line: 306, column: 74, scope: !9954)
!9959 = !DILocation(line: 306, column: 22, scope: !9954)
!9960 = !DILocation(line: 307, column: 24, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9954, file: !1899, line: 307, column: 17)
!9962 = !DILocation(line: 307, column: 17, scope: !9954)
!9963 = !DILocation(line: 310, column: 23, scope: !9954)
!9964 = !DILocation(line: 311, column: 9, scope: !9954)
!9965 = !DILocation(line: 313, column: 47, scope: !9907)
!9966 = !DILocation(line: 313, column: 56, scope: !9907)
!9967 = !DILocation(line: 313, column: 34, scope: !9907)
!9968 = !DILocation(line: 0, scope: !9907)
!9969 = !DILocation(line: 316, column: 42, scope: !9907)
!9970 = !DILocation(line: 316, column: 58, scope: !9907)
!9971 = !DILocation(line: 316, column: 55, scope: !9907)
!9972 = !DILocation(line: 326, column: 22, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9907, file: !1899, line: 326, column: 17)
!9974 = !DILocation(line: 326, column: 37, scope: !9973)
!9975 = !DILocation(line: 326, column: 17, scope: !9907)
!9976 = !DILocation(line: 332, column: 43, scope: !9907)
!9977 = !DILocation(line: 345, column: 30, scope: !9914)
!9978 = !DILocation(line: 345, column: 52, scope: !9914)
!9979 = !DILocation(line: 0, scope: !9913)
!9980 = !DILocation(line: 348, column: 26, scope: !9913)
!9981 = !DILocation(line: 348, column: 24, scope: !9913)
!9982 = !DILocation(line: 348, column: 22, scope: !9913)
!9983 = !DILocation(line: 349, column: 41, scope: !9913)
!9984 = !DILocation(line: 349, column: 24, scope: !9913)
!9985 = !DILocation(line: 349, column: 22, scope: !9913)
!9986 = !DILocation(line: 350, column: 29, scope: !9913)
!9987 = !DILocation(line: 350, column: 40, scope: !9913)
!9988 = !DILocation(line: 350, column: 55, scope: !9913)
!9989 = !DILocation(line: 350, column: 64, scope: !9913)
!9990 = !DILocation(line: 350, column: 26, scope: !9913)
!9991 = !DILocation(line: 351, column: 28, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9913, file: !1899, line: 351, column: 21)
!9993 = !DILocation(line: 354, column: 13, scope: !9914)
!9994 = !DILocation(line: 362, column: 33, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9996, file: !1899, line: 361, column: 24)
!9996 = distinct !DILexicalBlock(scope: !9997, file: !1899, line: 355, column: 21)
!9997 = distinct !DILexicalBlock(scope: !9914, file: !1899, line: 354, column: 20)
!9998 = !DILocation(line: 362, column: 44, scope: !9995)
!9999 = !DILocation(line: 362, column: 59, scope: !9995)
!10000 = !DILocation(line: 362, column: 68, scope: !9995)
!10001 = !DILocation(line: 362, column: 82, scope: !9995)
!10002 = !DILocation(line: 362, column: 30, scope: !9995)
!10003 = !DILocation(line: 364, column: 28, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9997, file: !1899, line: 364, column: 21)
!10005 = !DILocation(line: 364, column: 21, scope: !9997)
!10006 = !DILocation(line: 368, column: 24, scope: !9907)
!10007 = !DILocation(line: 0, scope: !9908)
!10008 = distinct !{!10008, !9936, !10009}
!10009 = !DILocation(line: 370, column: 5, scope: !9895)
!10010 = !DILocation(line: 372, column: 5, scope: !9895)
!10011 = !DILocation(line: 379, column: 1, scope: !9895)
!10012 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !1899, file: !1899, line: 398, type: !10013, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !10015)
!10013 = !DISubroutineType(types: !10014)
!10014 = !{!993, !9800, !61}
!10015 = !{!10016, !10017, !10018, !10019}
!10016 = !DILocalVariable(name: "D", arg: 1, scope: !10012, file: !1899, line: 398, type: !9800)
!10017 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !10012, file: !1899, line: 398, type: !61)
!10018 = !DILocalVariable(name: "result", scope: !10012, file: !1899, line: 401, type: !993)
!10019 = !DILocalVariable(name: "block_index", scope: !10012, file: !1899, line: 402, type: !61)
!10020 = !DILocation(line: 0, scope: !10012)
!10021 = !DILocation(line: 402, column: 36, scope: !10012)
!10022 = !DILocation(line: 403, column: 13, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10012, file: !1899, line: 403, column: 9)
!10024 = !DILocation(line: 403, column: 9, scope: !10012)
!10025 = !DILocation(line: 404, column: 9, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10023, file: !1899, line: 403, column: 23)
!10027 = !DILocation(line: 405, column: 5, scope: !10026)
!10028 = !DILocation(line: 407, column: 37, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10012, file: !1899, line: 407, column: 9)
!10030 = !DILocation(line: 407, column: 21, scope: !10029)
!10031 = !DILocation(line: 407, column: 9, scope: !10012)
!10032 = !DILocation(line: 412, column: 5, scope: !10012)
!10033 = !DILocation(line: 414, column: 8, scope: !10012)
!10034 = !DILocation(line: 414, column: 19, scope: !10012)
!10035 = !DILocation(line: 414, column: 32, scope: !10012)
!10036 = !DILocation(line: 414, column: 5, scope: !10012)
!10037 = !DILocation(line: 416, column: 17, scope: !10012)
!10038 = !DILocation(line: 416, column: 28, scope: !10012)
!10039 = !DILocation(line: 416, column: 42, scope: !10012)
!10040 = !DILocation(line: 416, column: 14, scope: !10012)
!10041 = !DILocation(line: 418, column: 5, scope: !10012)
!10042 = !DILocation(line: 420, column: 16, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10012, file: !1899, line: 420, column: 9)
!10044 = !DILocation(line: 424, column: 1, scope: !10012)
!10045 = distinct !DISubprogram(name: "NOR_init", scope: !1899, file: !1899, line: 433, type: !7451, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !293)
!10046 = !DILocation(line: 436, column: 9, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10045, file: !1899, line: 436, column: 9)
!10048 = !DILocation(line: 436, column: 9, scope: !10045)
!10049 = !DILocation(line: 437, column: 9, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10047, file: !1899, line: 436, column: 62)
!10051 = !DILocation(line: 438, column: 9, scope: !10050)
!10052 = !DILocation(line: 439, column: 27, scope: !10050)
!10053 = !DILocation(line: 440, column: 5, scope: !10050)
!10054 = !DILocation(line: 441, column: 5, scope: !10045)
!10055 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !1899, file: !1899, line: 444, type: !7917, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !293)
!10056 = !DILocation(line: 446, column: 12, scope: !10055)
!10057 = !DILocation(line: 446, column: 5, scope: !10055)
!10058 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !1899, file: !1899, line: 449, type: !10059, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !10061)
!10059 = !DISubroutineType(types: !10060)
!10060 = !{!993, !61, !61, !818}
!10061 = !{!10062, !10063, !10064, !10065, !10066, !10067, !10068}
!10062 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10058, file: !1899, line: 449, type: !61)
!10063 = !DILocalVariable(name: "page_idx", arg: 2, scope: !10058, file: !1899, line: 449, type: !61)
!10064 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10058, file: !1899, line: 449, type: !818)
!10065 = !DILocalVariable(name: "D", scope: !10058, file: !1899, line: 451, type: !9800)
!10066 = !DILocalVariable(name: "mtdData", scope: !10058, file: !1899, line: 452, type: !1907)
!10067 = !DILocalVariable(name: "result", scope: !10058, file: !1899, line: 453, type: !993)
!10068 = !DILocalVariable(name: "addr", scope: !10058, file: !1899, line: 455, type: !61)
!10069 = !DILocation(line: 0, scope: !10058)
!10070 = !DILocation(line: 452, column: 60, scope: !10058)
!10071 = !DILocation(line: 455, column: 32, scope: !10058)
!10072 = !DILocation(line: 455, column: 22, scope: !10058)
!10073 = !DILocation(line: 455, column: 95, scope: !10058)
!10074 = !DILocation(line: 455, column: 76, scope: !10058)
!10075 = !DILocation(line: 455, column: 118, scope: !10058)
!10076 = !DILocation(line: 455, column: 74, scope: !10058)
!10077 = !DILocation(line: 455, column: 106, scope: !10058)
!10078 = !DILocation(line: 457, column: 14, scope: !10058)
!10079 = !DILocation(line: 459, column: 16, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10058, file: !1899, line: 459, column: 9)
!10081 = !DILocation(line: 463, column: 1, scope: !10058)
!10082 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !1899, file: !1899, line: 466, type: !10059, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !10083)
!10083 = !{!10084, !10085, !10086, !10087, !10088, !10089, !10090}
!10084 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10082, file: !1899, line: 466, type: !61)
!10085 = !DILocalVariable(name: "page_idx", arg: 2, scope: !10082, file: !1899, line: 466, type: !61)
!10086 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10082, file: !1899, line: 466, type: !818)
!10087 = !DILocalVariable(name: "D", scope: !10082, file: !1899, line: 468, type: !9800)
!10088 = !DILocalVariable(name: "mtdData", scope: !10082, file: !1899, line: 469, type: !1907)
!10089 = !DILocalVariable(name: "result", scope: !10082, file: !1899, line: 470, type: !993)
!10090 = !DILocalVariable(name: "addr", scope: !10082, file: !1899, line: 472, type: !61)
!10091 = !DILocation(line: 0, scope: !10082)
!10092 = !DILocation(line: 469, column: 60, scope: !10082)
!10093 = !DILocation(line: 472, column: 32, scope: !10082)
!10094 = !DILocation(line: 472, column: 22, scope: !10082)
!10095 = !DILocation(line: 472, column: 95, scope: !10082)
!10096 = !DILocation(line: 472, column: 76, scope: !10082)
!10097 = !DILocation(line: 472, column: 118, scope: !10082)
!10098 = !DILocation(line: 472, column: 74, scope: !10082)
!10099 = !DILocation(line: 472, column: 106, scope: !10082)
!10100 = !DILocation(line: 474, column: 14, scope: !10082)
!10101 = !DILocation(line: 475, column: 16, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10082, file: !1899, line: 475, column: 9)
!10103 = !DILocation(line: 479, column: 1, scope: !10082)
!10104 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !1899, file: !1899, line: 481, type: !10105, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !10107)
!10105 = !DISubroutineType(types: !10106)
!10106 = !{!993, !61}
!10107 = !{!10108, !10109}
!10108 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10104, file: !1899, line: 481, type: !61)
!10109 = !DILocalVariable(name: "result", scope: !10104, file: !1899, line: 483, type: !993)
!10110 = !DILocation(line: 0, scope: !10104)
!10111 = !DILocation(line: 484, column: 14, scope: !10104)
!10112 = !DILocation(line: 485, column: 16, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10104, file: !1899, line: 485, column: 9)
!10114 = !DILocation(line: 489, column: 1, scope: !10104)
!10115 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !1899, file: !1899, line: 492, type: !3571, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !10116)
!10116 = !{!10117, !10118, !10119}
!10117 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10115, file: !1899, line: 492, type: !61)
!10118 = !DILocalVariable(name: "D", scope: !10115, file: !1899, line: 494, type: !9800)
!10119 = !DILocalVariable(name: "mtdData", scope: !10115, file: !1899, line: 495, type: !1907)
!10120 = !DILocation(line: 0, scope: !10115)
!10121 = !DILocation(line: 495, column: 60, scope: !10115)
!10122 = !DILocation(line: 496, column: 12, scope: !10115)
!10123 = !DILocation(line: 496, column: 5, scope: !10115)
!10124 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !1899, file: !1899, line: 499, type: !3571, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !10125)
!10125 = !{!10126, !10127, !10128}
!10126 = !DILocalVariable(name: "block_addr", arg: 1, scope: !10124, file: !1899, line: 499, type: !61)
!10127 = !DILocalVariable(name: "D", scope: !10124, file: !1899, line: 501, type: !9800)
!10128 = !DILocalVariable(name: "mtdData", scope: !10124, file: !1899, line: 502, type: !1907)
!10129 = !DILocation(line: 0, scope: !10124)
!10130 = !DILocation(line: 502, column: 60, scope: !10124)
!10131 = !DILocation(line: 504, column: 12, scope: !10124)
!10132 = !DILocation(line: 504, column: 5, scope: !10124)
!10133 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !1899, file: !1899, line: 510, type: !10134, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !10136)
!10134 = !DISubroutineType(types: !10135)
!10135 = !{!993, !61, !1055, !1055}
!10136 = !{!10137, !10138, !10139, !10140, !10141}
!10137 = !DILocalVariable(name: "block_addr", arg: 1, scope: !10133, file: !1899, line: 510, type: !61)
!10138 = !DILocalVariable(name: "block_index", arg: 2, scope: !10133, file: !1899, line: 510, type: !1055)
!10139 = !DILocalVariable(name: "offset", arg: 3, scope: !10133, file: !1899, line: 510, type: !1055)
!10140 = !DILocalVariable(name: "D", scope: !10133, file: !1899, line: 512, type: !9800)
!10141 = !DILocalVariable(name: "mtdData", scope: !10133, file: !1899, line: 513, type: !1907)
!10142 = !DILocation(line: 0, scope: !10133)
!10143 = !DILocation(line: 513, column: 60, scope: !10133)
!10144 = !DILocation(line: 519, column: 20, scope: !10133)
!10145 = !DILocation(line: 519, column: 18, scope: !10133)
!10146 = !DILocation(line: 520, column: 22, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10133, file: !1899, line: 520, column: 9)
!10148 = !DILocation(line: 520, column: 9, scope: !10133)
!10149 = !DILocation(line: 524, column: 28, scope: !10133)
!10150 = !DILocation(line: 524, column: 26, scope: !10133)
!10151 = !DILocation(line: 524, column: 13, scope: !10133)
!10152 = !DILocation(line: 526, column: 5, scope: !10133)
!10153 = !DILocation(line: 527, column: 1, scope: !10133)
!10154 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !1899, file: !1899, line: 532, type: !10155, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !10157)
!10155 = !DISubroutineType(types: !10156)
!10156 = !{!993, !61, !61, !1055}
!10157 = !{!10158, !10159, !10160, !10161, !10162}
!10158 = !DILocalVariable(name: "block_index", arg: 1, scope: !10154, file: !1899, line: 532, type: !61)
!10159 = !DILocalVariable(name: "offset", arg: 2, scope: !10154, file: !1899, line: 532, type: !61)
!10160 = !DILocalVariable(name: "addr", arg: 3, scope: !10154, file: !1899, line: 532, type: !1055)
!10161 = !DILocalVariable(name: "D", scope: !10154, file: !1899, line: 534, type: !9800)
!10162 = !DILocalVariable(name: "mtdData", scope: !10154, file: !1899, line: 535, type: !1907)
!10163 = !DILocation(line: 0, scope: !10154)
!10164 = !DILocation(line: 535, column: 60, scope: !10154)
!10165 = !DILocation(line: 537, column: 23, scope: !10154)
!10166 = !DILocation(line: 537, column: 13, scope: !10154)
!10167 = !DILocation(line: 537, column: 79, scope: !10154)
!10168 = !DILocation(line: 537, column: 60, scope: !10154)
!10169 = !DILocation(line: 537, column: 58, scope: !10154)
!10170 = !DILocation(line: 537, column: 88, scope: !10154)
!10171 = !DILocation(line: 537, column: 11, scope: !10154)
!10172 = !DILocation(line: 539, column: 5, scope: !10154)
!10173 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !1899, file: !1899, line: 545, type: !10174, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !10176)
!10174 = !DISubroutineType(types: !10175)
!10175 = !{!1955, !993}
!10176 = !{!10177}
!10177 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !10173, file: !1899, line: 545, type: !993)
!10178 = !DILocation(line: 0, scope: !10173)
!10179 = !DILocation(line: 547, column: 9, scope: !10173)
!10180 = !DILocation(line: 558, column: 9, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10182, file: !1899, line: 558, column: 9)
!10182 = distinct !DILexicalBlock(scope: !10183, file: !1899, line: 558, column: 9)
!10183 = distinct !DILexicalBlock(scope: !10184, file: !1899, line: 558, column: 9)
!10184 = distinct !DILexicalBlock(scope: !10185, file: !1899, line: 557, column: 12)
!10185 = distinct !DILexicalBlock(scope: !10186, file: !1899, line: 555, column: 16)
!10186 = distinct !DILexicalBlock(scope: !10187, file: !1899, line: 553, column: 16)
!10187 = distinct !DILexicalBlock(scope: !10188, file: !1899, line: 551, column: 16)
!10188 = distinct !DILexicalBlock(scope: !10189, file: !1899, line: 549, column: 16)
!10189 = distinct !DILexicalBlock(scope: !10173, file: !1899, line: 547, column: 9)
!10190 = !DILocation(line: 560, column: 1, scope: !10173)
!10191 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !1899, file: !1899, line: 561, type: !10192, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !10195)
!10192 = !DISubroutineType(types: !10193)
!10193 = !{!10194, !61}
!10194 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !1236, line: 127, baseType: !1901)
!10195 = !{!10196, !10197, !10198}
!10196 = !DILocalVariable(name: "address", arg: 1, scope: !10191, file: !1899, line: 561, type: !61)
!10197 = !DILocalVariable(name: "block_size", scope: !10191, file: !1899, line: 563, type: !61)
!10198 = !DILocalVariable(name: "block_index", scope: !10191, file: !1899, line: 564, type: !61)
!10199 = !DILocation(line: 0, scope: !10191)
!10200 = !DILocation(line: 566, column: 19, scope: !10191)
!10201 = !DILocation(line: 567, column: 21, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10191, file: !1899, line: 567, column: 9)
!10203 = !DILocation(line: 567, column: 9, scope: !10191)
!10204 = !DILocation(line: 568, column: 9, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10206, file: !1899, line: 568, column: 9)
!10206 = distinct !DILexicalBlock(scope: !10207, file: !1899, line: 568, column: 9)
!10207 = distinct !DILexicalBlock(scope: !10208, file: !1899, line: 568, column: 9)
!10208 = distinct !DILexicalBlock(scope: !10202, file: !1899, line: 567, column: 45)
!10209 = !DILocation(line: 570, column: 18, scope: !10191)
!10210 = !DILocation(line: 571, column: 9, scope: !10191)
!10211 = !DILocation(line: 574, column: 9, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10213, file: !1899, line: 573, column: 38)
!10213 = distinct !DILexicalBlock(scope: !10214, file: !1899, line: 573, column: 16)
!10214 = distinct !DILexicalBlock(scope: !10191, file: !1899, line: 571, column: 9)
!10215 = !DILocation(line: 576, column: 9, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10217, file: !1899, line: 575, column: 39)
!10217 = distinct !DILexicalBlock(scope: !10213, file: !1899, line: 575, column: 16)
!10218 = !DILocation(line: 578, column: 9, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10220, file: !1899, line: 578, column: 9)
!10220 = distinct !DILexicalBlock(scope: !10221, file: !1899, line: 578, column: 9)
!10221 = distinct !DILexicalBlock(scope: !10222, file: !1899, line: 578, column: 9)
!10222 = distinct !DILexicalBlock(scope: !10217, file: !1899, line: 577, column: 12)
!10223 = !DILocation(line: 0, scope: !10214)
!10224 = !DILocation(line: 580, column: 1, scope: !10191)
!10225 = distinct !DISubprogram(name: "hal_flash_init", scope: !1899, file: !1899, line: 583, type: !7917, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !293)
!10226 = !DILocation(line: 585, column: 5, scope: !10225)
!10227 = !DILocation(line: 586, column: 5, scope: !10225)
!10228 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !1899, file: !1899, line: 589, type: !7917, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !293)
!10229 = !DILocation(line: 591, column: 5, scope: !10228)
!10230 = distinct !DISubprogram(name: "hal_flash_erase", scope: !1899, file: !1899, line: 595, type: !10231, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !10233)
!10231 = !DISubroutineType(types: !10232)
!10232 = !{!1955, !61, !10194}
!10233 = !{!10234, !10235, !10236, !10237, !10238}
!10234 = !DILocalVariable(name: "start_address", arg: 1, scope: !10230, file: !1899, line: 595, type: !61)
!10235 = !DILocalVariable(name: "block", arg: 2, scope: !10230, file: !1899, line: 595, type: !10194)
!10236 = !DILocalVariable(name: "result", scope: !10230, file: !1899, line: 597, type: !993)
!10237 = !DILocalVariable(name: "block_index", scope: !10230, file: !1899, line: 598, type: !61)
!10238 = !DILocalVariable(name: "erase_type", scope: !10230, file: !1899, line: 599, type: !61)
!10239 = !DILocation(line: 0, scope: !10230)
!10240 = !DILocation(line: 601, column: 9, scope: !10230)
!10241 = !DILocation(line: 602, column: 28, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10243, file: !1899, line: 602, column: 13)
!10243 = distinct !DILexicalBlock(scope: !10244, file: !1899, line: 601, column: 38)
!10244 = distinct !DILexicalBlock(scope: !10230, file: !1899, line: 601, column: 9)
!10245 = !DILocation(line: 602, column: 37, scope: !10242)
!10246 = !DILocation(line: 602, column: 13, scope: !10243)
!10247 = !DILocation(line: 607, column: 28, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !10249, file: !1899, line: 607, column: 13)
!10249 = distinct !DILexicalBlock(scope: !10250, file: !1899, line: 606, column: 46)
!10250 = distinct !DILexicalBlock(scope: !10244, file: !1899, line: 606, column: 16)
!10251 = !DILocation(line: 607, column: 38, scope: !10248)
!10252 = !DILocation(line: 607, column: 13, scope: !10249)
!10253 = !DILocation(line: 612, column: 28, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10255, file: !1899, line: 612, column: 13)
!10255 = distinct !DILexicalBlock(scope: !10256, file: !1899, line: 611, column: 46)
!10256 = distinct !DILexicalBlock(scope: !10250, file: !1899, line: 611, column: 16)
!10257 = !DILocation(line: 612, column: 38, scope: !10254)
!10258 = !DILocation(line: 612, column: 13, scope: !10255)
!10259 = !DILocation(line: 0, scope: !10244)
!10260 = !DILocation(line: 621, column: 19, scope: !10230)
!10261 = !DILocation(line: 622, column: 21, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10230, file: !1899, line: 622, column: 9)
!10263 = !DILocation(line: 622, column: 9, scope: !10230)
!10264 = !DILocation(line: 626, column: 17, scope: !10230)
!10265 = !DILocation(line: 627, column: 14, scope: !10230)
!10266 = !DILocation(line: 628, column: 16, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10230, file: !1899, line: 628, column: 9)
!10268 = !DILocation(line: 628, column: 9, scope: !10230)
!10269 = !DILocation(line: 629, column: 16, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10267, file: !1899, line: 628, column: 38)
!10271 = !DILocation(line: 629, column: 9, scope: !10270)
!10272 = !DILocation(line: 632, column: 1, scope: !10230)
!10273 = distinct !DISubprogram(name: "hal_flash_read", scope: !1899, file: !1899, line: 634, type: !10274, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !10276)
!10274 = !DISubroutineType(types: !10275)
!10275 = !{!1955, !61, !818, !61}
!10276 = !{!10277, !10278, !10279, !10280, !10281}
!10277 = !DILocalVariable(name: "start_address", arg: 1, scope: !10273, file: !1899, line: 634, type: !61)
!10278 = !DILocalVariable(name: "buffer", arg: 2, scope: !10273, file: !1899, line: 634, type: !818)
!10279 = !DILocalVariable(name: "length", arg: 3, scope: !10273, file: !1899, line: 634, type: !61)
!10280 = !DILocalVariable(name: "D", scope: !10273, file: !1899, line: 636, type: !9800)
!10281 = !DILocalVariable(name: "result", scope: !10273, file: !1899, line: 637, type: !993)
!10282 = !DILocation(line: 0, scope: !10273)
!10283 = !DILocation(line: 639, column: 14, scope: !10273)
!10284 = !DILocation(line: 641, column: 16, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10273, file: !1899, line: 641, column: 9)
!10286 = !DILocation(line: 641, column: 9, scope: !10273)
!10287 = !DILocation(line: 642, column: 16, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10285, file: !1899, line: 641, column: 38)
!10289 = !DILocation(line: 642, column: 9, scope: !10288)
!10290 = !DILocation(line: 645, column: 1, scope: !10273)
!10291 = distinct !DISubprogram(name: "hal_flash_write", scope: !1899, file: !1899, line: 647, type: !10292, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1898, retainedNodes: !10294)
!10292 = !DISubroutineType(types: !10293)
!10293 = !{!1955, !61, !5217, !61}
!10294 = !{!10295, !10296, !10297, !10298, !10299, !10300}
!10295 = !DILocalVariable(name: "address", arg: 1, scope: !10291, file: !1899, line: 647, type: !61)
!10296 = !DILocalVariable(name: "data", arg: 2, scope: !10291, file: !1899, line: 647, type: !5217)
!10297 = !DILocalVariable(name: "length", arg: 3, scope: !10291, file: !1899, line: 647, type: !61)
!10298 = !DILocalVariable(name: "D", scope: !10291, file: !1899, line: 649, type: !9800)
!10299 = !DILocalVariable(name: "result", scope: !10291, file: !1899, line: 650, type: !993)
!10300 = !DILocalVariable(name: "addr", scope: !10301, file: !1899, line: 660, type: !61)
!10301 = distinct !DILexicalBlock(scope: !10302, file: !1899, line: 659, column: 40)
!10302 = distinct !DILexicalBlock(scope: !10291, file: !1899, line: 659, column: 8)
!10303 = !DILocation(line: 0, scope: !10291)
!10304 = !DILocation(line: 652, column: 14, scope: !10291)
!10305 = !DILocation(line: 653, column: 16, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10291, file: !1899, line: 653, column: 9)
!10307 = !DILocation(line: 653, column: 9, scope: !10291)
!10308 = !DILocation(line: 654, column: 16, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10306, file: !1899, line: 653, column: 38)
!10310 = !DILocation(line: 654, column: 9, scope: !10309)
!10311 = !DILocation(line: 659, column: 8, scope: !10302)
!10312 = !DILocation(line: 659, column: 8, scope: !10291)
!10313 = !DILocation(line: 661, column: 25, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10301, file: !1899, line: 661, column: 8)
!10315 = !DILocation(line: 0, scope: !10301)
!10316 = !DILocation(line: 661, column: 58, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10314, file: !1899, line: 661, column: 8)
!10318 = !DILocation(line: 661, column: 8, scope: !10314)
!10319 = !DILocation(line: 662, column: 13, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10317, file: !1899, line: 661, column: 147)
!10321 = !DILocation(line: 661, column: 128, scope: !10317)
!10322 = distinct !{!10322, !10318, !10323}
!10323 = !DILocation(line: 663, column: 8, scope: !10314)
!10324 = !DILocation(line: 668, column: 1, scope: !10291)
!10325 = distinct !DISubprogram(name: "BlockAddress", scope: !1960, file: !1960, line: 111, type: !10326, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1959, retainedNodes: !10328)
!10326 = !DISubroutineType(types: !10327)
!10327 = !{!88, !88, !61}
!10328 = !{!10329, !10330, !10331, !10332, !10333, !10334}
!10329 = !DILocalVariable(name: "DriverData", arg: 1, scope: !10325, file: !1960, line: 111, type: !88)
!10330 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10325, file: !1960, line: 111, type: !61)
!10331 = !DILocalVariable(name: "D", scope: !10325, file: !1960, line: 113, type: !1988)
!10332 = !DILocalVariable(name: "addr", scope: !10325, file: !1960, line: 114, type: !61)
!10333 = !DILocalVariable(name: "region", scope: !10325, file: !1960, line: 115, type: !61)
!10334 = !DILocalVariable(name: "BlockUpperBound", scope: !10325, file: !1960, line: 115, type: !61)
!10335 = !DILocation(line: 0, scope: !10325)
!10336 = !DILocation(line: 117, column: 26, scope: !10325)
!10337 = !DILocation(line: 117, column: 40, scope: !10325)
!10338 = !DILocation(line: 118, column: 28, scope: !10325)
!10339 = !DILocation(line: 118, column: 5, scope: !10325)
!10340 = !DILocation(line: 119, column: 39, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !10325, file: !1960, line: 118, column: 43)
!10342 = !DILocation(line: 119, column: 76, scope: !10341)
!10343 = !DILocation(line: 119, column: 52, scope: !10341)
!10344 = !DILocation(line: 119, column: 14, scope: !10341)
!10345 = !DILocation(line: 120, column: 15, scope: !10341)
!10346 = !DILocation(line: 121, column: 50, scope: !10341)
!10347 = !DILocation(line: 121, column: 25, scope: !10341)
!10348 = distinct !{!10348, !10339, !10349}
!10349 = !DILocation(line: 122, column: 5, scope: !10325)
!10350 = !DILocation(line: 123, column: 68, scope: !10325)
!10351 = !DILocation(line: 123, column: 44, scope: !10325)
!10352 = !DILocation(line: 123, column: 25, scope: !10325)
!10353 = !DILocation(line: 123, column: 107, scope: !10325)
!10354 = !DILocation(line: 123, column: 83, scope: !10325)
!10355 = !DILocation(line: 123, column: 10, scope: !10325)
!10356 = !DILocation(line: 125, column: 16, scope: !10325)
!10357 = !DILocation(line: 125, column: 25, scope: !10325)
!10358 = !DILocation(line: 125, column: 5, scope: !10325)
!10359 = distinct !DISubprogram(name: "MapWindow", scope: !1960, file: !1960, line: 180, type: !1593, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1959, retainedNodes: !10360)
!10360 = !{!10361, !10362, !10363, !10364}
!10361 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10359, file: !1960, line: 180, type: !88)
!10362 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10359, file: !1960, line: 180, type: !61)
!10363 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !10359, file: !1960, line: 180, type: !61)
!10364 = !DILocalVariable(name: "D", scope: !10359, file: !1960, line: 182, type: !1988)
!10365 = !DILocation(line: 0, scope: !10359)
!10366 = !DILocation(line: 185, column: 5, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10368, file: !1960, line: 185, column: 5)
!10368 = distinct !DILexicalBlock(scope: !10359, file: !1960, line: 185, column: 5)
!10369 = !DILocation(line: 185, column: 5, scope: !10368)
!10370 = !DILocation(line: 185, column: 5, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10367, file: !1960, line: 185, column: 5)
!10372 = !DILocation(line: 186, column: 27, scope: !10359)
!10373 = !DILocation(line: 186, column: 19, scope: !10359)
!10374 = !DILocation(line: 186, column: 8, scope: !10359)
!10375 = !DILocation(line: 186, column: 17, scope: !10359)
!10376 = !DILocation(line: 188, column: 5, scope: !10359)
!10377 = !DILocation(line: 0, scope: !1981)
!10378 = !DILocation(line: 142, column: 12, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !1981, file: !1960, line: 142, column: 9)
!10380 = !DILocation(line: 142, column: 34, scope: !10379)
!10381 = !DILocation(line: 142, column: 64, scope: !10379)
!10382 = !DILocation(line: 142, column: 75, scope: !10379)
!10383 = !DILocation(line: 142, column: 9, scope: !1981)
!10384 = !DILocation(line: 143, column: 79, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10386, file: !1960, line: 143, column: 13)
!10386 = distinct !DILexicalBlock(scope: !10379, file: !1960, line: 142, column: 99)
!10387 = !DILocation(line: 143, column: 13, scope: !10386)
!10388 = !DILocation(line: 144, column: 72, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10390, file: !1960, line: 144, column: 17)
!10390 = distinct !DILexicalBlock(scope: !10385, file: !1960, line: 143, column: 94)
!10391 = !DILocation(line: 144, column: 83, scope: !10389)
!10392 = !DILocation(line: 144, column: 17, scope: !10390)
!10393 = !DILocation(line: 145, column: 87, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10395, file: !1960, line: 145, column: 21)
!10395 = distinct !DILexicalBlock(scope: !10389, file: !1960, line: 144, column: 107)
!10396 = !DILocation(line: 145, column: 21, scope: !10395)
!10397 = !DILocation(line: 146, column: 33, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10394, file: !1960, line: 145, column: 102)
!10399 = !DILocation(line: 147, column: 25, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10398, file: !1960, line: 147, column: 25)
!10401 = !DILocation(line: 147, column: 62, scope: !10400)
!10402 = !DILocation(line: 147, column: 34, scope: !10400)
!10403 = !DILocation(line: 147, column: 25, scope: !10398)
!10404 = !DILocation(line: 148, column: 91, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10400, file: !1960, line: 147, column: 106)
!10406 = !DILocation(line: 149, column: 111, scope: !10405)
!10407 = !DILocation(line: 149, column: 101, scope: !10405)
!10408 = !DILocation(line: 149, column: 87, scope: !10405)
!10409 = !DILocation(line: 149, column: 99, scope: !10405)
!10410 = !DILocation(line: 150, column: 37, scope: !10405)
!10411 = !DILocation(line: 150, column: 34, scope: !10405)
!10412 = !DILocation(line: 151, column: 21, scope: !10405)
!10413 = !DILocation(line: 152, column: 91, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10400, file: !1960, line: 151, column: 28)
!10415 = !DILocation(line: 153, column: 111, scope: !10414)
!10416 = !DILocation(line: 153, column: 101, scope: !10414)
!10417 = !DILocation(line: 153, column: 87, scope: !10414)
!10418 = !DILocation(line: 153, column: 99, scope: !10414)
!10419 = !DILocation(line: 154, column: 34, scope: !10414)
!10420 = !DILocation(line: 157, column: 32, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10394, file: !1960, line: 156, column: 24)
!10422 = !DILocation(line: 158, column: 83, scope: !10421)
!10423 = !DILocation(line: 159, column: 60, scope: !10421)
!10424 = !DILocation(line: 159, column: 33, scope: !10421)
!10425 = !DILocation(line: 159, column: 30, scope: !10421)
!10426 = !DILocation(line: 162, column: 29, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10389, file: !1960, line: 161, column: 20)
!10428 = !DILocation(line: 163, column: 83, scope: !10427)
!10429 = !DILocation(line: 164, column: 103, scope: !10427)
!10430 = !DILocation(line: 164, column: 93, scope: !10427)
!10431 = !DILocation(line: 164, column: 79, scope: !10427)
!10432 = !DILocation(line: 164, column: 91, scope: !10427)
!10433 = !DILocation(line: 165, column: 56, scope: !10427)
!10434 = !DILocation(line: 165, column: 29, scope: !10427)
!10435 = !DILocation(line: 165, column: 26, scope: !10427)
!10436 = !DILocation(line: 168, column: 24, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10385, file: !1960, line: 167, column: 16)
!10438 = !DILocation(line: 169, column: 75, scope: !10437)
!10439 = !DILocation(line: 170, column: 50, scope: !10437)
!10440 = !DILocation(line: 170, column: 22, scope: !10437)
!10441 = !DILocation(line: 173, column: 21, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10379, file: !1960, line: 172, column: 12)
!10443 = !DILocation(line: 174, column: 75, scope: !10442)
!10444 = !DILocation(line: 175, column: 95, scope: !10442)
!10445 = !DILocation(line: 175, column: 85, scope: !10442)
!10446 = !DILocation(line: 175, column: 71, scope: !10442)
!10447 = !DILocation(line: 175, column: 83, scope: !10442)
!10448 = !DILocation(line: 176, column: 46, scope: !10442)
!10449 = !DILocation(line: 176, column: 18, scope: !10442)
!10450 = !DILocation(line: 0, scope: !10379)
!10451 = !DILocation(line: 178, column: 5, scope: !1981)
!10452 = distinct !DISubprogram(name: "BlockSize", scope: !1960, file: !1960, line: 191, type: !1982, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1959, retainedNodes: !10453)
!10453 = !{!10454, !10455, !10456, !10457, !10458}
!10454 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10452, file: !1960, line: 191, type: !88)
!10455 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10452, file: !1960, line: 191, type: !61)
!10456 = !DILocalVariable(name: "D", scope: !10452, file: !1960, line: 193, type: !1988)
!10457 = !DILocalVariable(name: "region", scope: !10452, file: !1960, line: 194, type: !61)
!10458 = !DILocalVariable(name: "BlockUpperBound", scope: !10452, file: !1960, line: 194, type: !61)
!10459 = !DILocation(line: 0, scope: !10452)
!10460 = !DILocation(line: 196, column: 26, scope: !10452)
!10461 = !DILocation(line: 196, column: 45, scope: !10452)
!10462 = !DILocation(line: 197, column: 28, scope: !10452)
!10463 = !DILocation(line: 197, column: 5, scope: !10452)
!10464 = !DILocation(line: 198, column: 15, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10452, file: !1960, line: 197, column: 43)
!10466 = !DILocation(line: 199, column: 50, scope: !10465)
!10467 = !DILocation(line: 199, column: 25, scope: !10465)
!10468 = distinct !{!10468, !10463, !10469}
!10469 = !DILocation(line: 200, column: 5, scope: !10452)
!10470 = !DILocation(line: 202, column: 35, scope: !10452)
!10471 = !DILocation(line: 202, column: 5, scope: !10452)
!10472 = distinct !DISubprogram(name: "BlockIndex", scope: !1960, file: !1960, line: 205, type: !1982, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1959, retainedNodes: !10473)
!10473 = !{!10474, !10475, !10476, !10477, !10478, !10479}
!10474 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10472, file: !1960, line: 205, type: !88)
!10475 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !10472, file: !1960, line: 205, type: !61)
!10476 = !DILocalVariable(name: "D", scope: !10472, file: !1960, line: 207, type: !1988)
!10477 = !DILocalVariable(name: "region", scope: !10472, file: !1960, line: 208, type: !61)
!10478 = !DILocalVariable(name: "BlockUpperAddr", scope: !10472, file: !1960, line: 208, type: !61)
!10479 = !DILocalVariable(name: "blk_idx", scope: !10472, file: !1960, line: 209, type: !61)
!10480 = !DILocation(line: 0, scope: !10472)
!10481 = !DILocation(line: 211, column: 25, scope: !10472)
!10482 = !DILocation(line: 211, column: 44, scope: !10472)
!10483 = !DILocation(line: 211, column: 81, scope: !10472)
!10484 = !DILocation(line: 211, column: 57, scope: !10472)
!10485 = !DILocation(line: 213, column: 28, scope: !10472)
!10486 = !DILocation(line: 213, column: 40, scope: !10472)
!10487 = !DILocation(line: 213, column: 66, scope: !10472)
!10488 = !DILocation(line: 213, column: 5, scope: !10472)
!10489 = !DILocation(line: 214, column: 17, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10472, file: !1960, line: 213, column: 78)
!10491 = !DILocation(line: 215, column: 18, scope: !10490)
!10492 = !DILocation(line: 216, column: 15, scope: !10490)
!10493 = !DILocation(line: 217, column: 48, scope: !10490)
!10494 = !DILocation(line: 217, column: 85, scope: !10490)
!10495 = !DILocation(line: 217, column: 61, scope: !10490)
!10496 = distinct !{!10496, !10488, !10497}
!10497 = !DILocation(line: 218, column: 5, scope: !10472)
!10498 = !DILocation(line: 221, column: 53, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10500, file: !1960, line: 220, column: 37)
!10500 = distinct !DILexicalBlock(scope: !10472, file: !1960, line: 220, column: 9)
!10501 = !DILocation(line: 221, column: 29, scope: !10499)
!10502 = !DILocation(line: 221, column: 17, scope: !10499)
!10503 = !DILocation(line: 222, column: 5, scope: !10499)
!10504 = !DILocation(line: 0, scope: !10500)
!10505 = !DILocation(line: 225, column: 5, scope: !10472)
!10506 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !1960, file: !1960, line: 232, type: !3823, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1959, retainedNodes: !293)
!10507 = !DILocation(line: 238, column: 5, scope: !10506)
!10508 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !1960, file: !1960, line: 243, type: !3823, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1959, retainedNodes: !293)
!10509 = !DILocation(line: 245, column: 5, scope: !10508)
!10510 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !1960, file: !1960, line: 249, type: !3823, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1959, retainedNodes: !293)
!10511 = !DILocation(line: 254, column: 5, scope: !10510)
!10512 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !1960, file: !1960, line: 259, type: !3823, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1959, retainedNodes: !293)
!10513 = !DILocation(line: 261, column: 5, scope: !10512)
!10514 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !1960, file: !1960, line: 271, type: !6552, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1959, retainedNodes: !10515)
!10515 = !{!10516, !10517}
!10516 = !DILocalVariable(name: "delay", arg: 1, scope: !10514, file: !1960, line: 271, type: !61)
!10517 = !DILocalVariable(name: "ret", scope: !10514, file: !1960, line: 276, type: !2990)
!10518 = !DILocation(line: 0, scope: !10514)
!10519 = !DILocation(line: 277, column: 11, scope: !10514)
!10520 = !DILocation(line: 278, column: 13, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10514, file: !1960, line: 278, column: 9)
!10522 = !DILocation(line: 278, column: 9, scope: !10514)
!10523 = !DILocation(line: 279, column: 9, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10525, file: !1960, line: 279, column: 9)
!10525 = distinct !DILexicalBlock(scope: !10526, file: !1960, line: 279, column: 9)
!10526 = distinct !DILexicalBlock(scope: !10527, file: !1960, line: 279, column: 9)
!10527 = distinct !DILexicalBlock(scope: !10521, file: !1960, line: 278, column: 35)
!10528 = !DILocation(line: 282, column: 1, scope: !10514)
!10529 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !2622, file: !2622, line: 58, type: !10530, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !10532)
!10530 = !DISubroutineType(types: !10531)
!10531 = !{null, !2256, !7, !2256, null}
!10532 = !{!10533, !10534, !10535, !10536, !10545}
!10533 = !DILocalVariable(name: "func", arg: 1, scope: !10529, file: !2622, line: 58, type: !2256)
!10534 = !DILocalVariable(name: "line", arg: 2, scope: !10529, file: !2622, line: 58, type: !7)
!10535 = !DILocalVariable(name: "message", arg: 3, scope: !10529, file: !2622, line: 58, type: !2256)
!10536 = !DILocalVariable(name: "ap", scope: !10529, file: !2622, line: 60, type: !10537)
!10537 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !10538, line: 46, baseType: !10539)
!10538 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!10539 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !10540, line: 32, baseType: !10541)
!10540 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!10541 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2622, baseType: !10542)
!10542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !10543)
!10543 = !{!10544}
!10544 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !10542, file: !2622, line: 60, baseType: !88, size: 32)
!10545 = !DILocalVariable(name: "mask", scope: !10529, file: !2622, line: 62, type: !61)
!10546 = !DILocation(line: 0, scope: !10529)
!10547 = !DILocation(line: 60, column: 5, scope: !10529)
!10548 = !DILocation(line: 60, column: 13, scope: !10529)
!10549 = !DILocation(line: 62, column: 5, scope: !10529)
!10550 = !DILocation(line: 63, column: 5, scope: !10529)
!10551 = !DILocation(line: 65, column: 5, scope: !10529)
!10552 = !DILocation(line: 66, column: 5, scope: !10529)
!10553 = !DILocation(line: 67, column: 5, scope: !10529)
!10554 = !DILocation(line: 69, column: 37, scope: !10529)
!10555 = !DILocation(line: 69, column: 5, scope: !10529)
!10556 = !DILocation(line: 71, column: 1, scope: !10529)
!10557 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !2622, file: !2622, line: 72, type: !10530, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !10558)
!10558 = !{!10559, !10560, !10561, !10562, !10563}
!10559 = !DILocalVariable(name: "func", arg: 1, scope: !10557, file: !2622, line: 72, type: !2256)
!10560 = !DILocalVariable(name: "line", arg: 2, scope: !10557, file: !2622, line: 72, type: !7)
!10561 = !DILocalVariable(name: "message", arg: 3, scope: !10557, file: !2622, line: 72, type: !2256)
!10562 = !DILocalVariable(name: "ap", scope: !10557, file: !2622, line: 74, type: !10537)
!10563 = !DILocalVariable(name: "mask", scope: !10557, file: !2622, line: 76, type: !61)
!10564 = !DILocation(line: 0, scope: !10557)
!10565 = !DILocation(line: 74, column: 5, scope: !10557)
!10566 = !DILocation(line: 74, column: 13, scope: !10557)
!10567 = !DILocation(line: 76, column: 5, scope: !10557)
!10568 = !DILocation(line: 77, column: 5, scope: !10557)
!10569 = !DILocation(line: 79, column: 5, scope: !10557)
!10570 = !DILocation(line: 80, column: 5, scope: !10557)
!10571 = !DILocation(line: 81, column: 5, scope: !10557)
!10572 = !DILocation(line: 83, column: 37, scope: !10557)
!10573 = !DILocation(line: 83, column: 5, scope: !10557)
!10574 = !DILocation(line: 85, column: 1, scope: !10557)
!10575 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !2622, file: !2622, line: 86, type: !10530, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !10576)
!10576 = !{!10577, !10578, !10579, !10580, !10581}
!10577 = !DILocalVariable(name: "func", arg: 1, scope: !10575, file: !2622, line: 86, type: !2256)
!10578 = !DILocalVariable(name: "line", arg: 2, scope: !10575, file: !2622, line: 86, type: !7)
!10579 = !DILocalVariable(name: "message", arg: 3, scope: !10575, file: !2622, line: 86, type: !2256)
!10580 = !DILocalVariable(name: "ap", scope: !10575, file: !2622, line: 88, type: !10537)
!10581 = !DILocalVariable(name: "mask", scope: !10575, file: !2622, line: 90, type: !61)
!10582 = !DILocation(line: 0, scope: !10575)
!10583 = !DILocation(line: 88, column: 5, scope: !10575)
!10584 = !DILocation(line: 88, column: 13, scope: !10575)
!10585 = !DILocation(line: 90, column: 5, scope: !10575)
!10586 = !DILocation(line: 91, column: 5, scope: !10575)
!10587 = !DILocation(line: 93, column: 5, scope: !10575)
!10588 = !DILocation(line: 94, column: 5, scope: !10575)
!10589 = !DILocation(line: 95, column: 5, scope: !10575)
!10590 = !DILocation(line: 97, column: 37, scope: !10575)
!10591 = !DILocation(line: 97, column: 5, scope: !10575)
!10592 = !DILocation(line: 99, column: 1, scope: !10575)
!10593 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !2622, file: !2622, line: 101, type: !10594, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !10598)
!10594 = !DISubroutineType(types: !10595)
!10595 = !{null, !2256, !7, !2256, !10596, !7, null}
!10596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10597, size: 32)
!10597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!10598 = !{!10599, !10600, !10601, !10602, !10603}
!10599 = !DILocalVariable(name: "func", arg: 1, scope: !10593, file: !2622, line: 101, type: !2256)
!10600 = !DILocalVariable(name: "line", arg: 2, scope: !10593, file: !2622, line: 101, type: !7)
!10601 = !DILocalVariable(name: "message", arg: 3, scope: !10593, file: !2622, line: 101, type: !2256)
!10602 = !DILocalVariable(name: "data", arg: 4, scope: !10593, file: !2622, line: 101, type: !10596)
!10603 = !DILocalVariable(name: "length", arg: 5, scope: !10593, file: !2622, line: 101, type: !7)
!10604 = !DILocation(line: 0, scope: !10593)
!10605 = !DILocation(line: 103, column: 1, scope: !10593)
!10606 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !2040, file: !2040, line: 87, type: !3571, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !10607)
!10607 = !{!10608, !10609}
!10608 = !DILocalVariable(name: "bank_no", arg: 1, scope: !10606, file: !2040, line: 87, type: !61)
!10609 = !DILocalVariable(name: "value", scope: !10606, file: !2040, line: 89, type: !61)
!10610 = !DILocation(line: 0, scope: !10606)
!10611 = !DILocation(line: 91, column: 41, scope: !10606)
!10612 = !DILocation(line: 91, column: 5, scope: !10606)
!10613 = !DILocation(line: 91, column: 19, scope: !10606)
!10614 = !DILocation(line: 91, column: 31, scope: !10606)
!10615 = !DILocation(line: 92, column: 77, scope: !10606)
!10616 = !DILocation(line: 92, column: 60, scope: !10606)
!10617 = !DILocation(line: 92, column: 31, scope: !10606)
!10618 = !DILocation(line: 94, column: 5, scope: !10606)
!10619 = !DILocation(line: 94, column: 27, scope: !10606)
!10620 = !DILocation(line: 94, column: 39, scope: !10606)
!10621 = !DILocation(line: 94, column: 65, scope: !10606)
!10622 = distinct !{!10622, !10618, !10623}
!10623 = !DILocation(line: 94, column: 70, scope: !10606)
!10624 = !DILocation(line: 96, column: 29, scope: !10606)
!10625 = !DILocation(line: 96, column: 64, scope: !10606)
!10626 = !DILocation(line: 98, column: 5, scope: !10606)
!10627 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !2040, file: !2040, line: 102, type: !10628, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !10630)
!10628 = !DISubroutineType(types: !10629)
!10629 = !{null, !61, !61}
!10630 = !{!10631, !10632}
!10631 = !DILocalVariable(name: "bank_no", arg: 1, scope: !10627, file: !2040, line: 102, type: !61)
!10632 = !DILocalVariable(name: "value", arg: 2, scope: !10627, file: !2040, line: 102, type: !61)
!10633 = !DILocation(line: 0, scope: !10627)
!10634 = !DILocation(line: 106, column: 40, scope: !10627)
!10635 = !DILocation(line: 106, column: 77, scope: !10627)
!10636 = !DILocation(line: 106, column: 102, scope: !10627)
!10637 = !DILocation(line: 106, column: 5, scope: !10627)
!10638 = !DILocation(line: 106, column: 19, scope: !10627)
!10639 = !DILocation(line: 106, column: 31, scope: !10627)
!10640 = !DILocation(line: 107, column: 77, scope: !10627)
!10641 = !DILocation(line: 107, column: 60, scope: !10627)
!10642 = !DILocation(line: 107, column: 31, scope: !10627)
!10643 = !DILocation(line: 109, column: 5, scope: !10627)
!10644 = !DILocation(line: 109, column: 27, scope: !10627)
!10645 = !DILocation(line: 109, column: 39, scope: !10627)
!10646 = !DILocation(line: 109, column: 65, scope: !10627)
!10647 = distinct !{!10647, !10643, !10648}
!10648 = !DILocation(line: 109, column: 70, scope: !10627)
!10649 = !DILocation(line: 111, column: 5, scope: !10627)
!10650 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !2040, file: !2040, line: 114, type: !291, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !293)
!10651 = !DILocation(line: 117, column: 36, scope: !10650)
!10652 = !DILocation(line: 117, column: 18, scope: !10650)
!10653 = !DILocation(line: 118, column: 37, scope: !10650)
!10654 = !DILocation(line: 118, column: 18, scope: !10650)
!10655 = !DILocation(line: 119, column: 37, scope: !10650)
!10656 = !DILocation(line: 119, column: 19, scope: !10650)
!10657 = !DILocation(line: 120, column: 37, scope: !10650)
!10658 = !DILocation(line: 120, column: 19, scope: !10650)
!10659 = !DILocation(line: 121, column: 37, scope: !10650)
!10660 = !DILocation(line: 121, column: 19, scope: !10650)
!10661 = !DILocation(line: 122, column: 37, scope: !10650)
!10662 = !DILocation(line: 122, column: 19, scope: !10650)
!10663 = !DILocation(line: 123, column: 37, scope: !10650)
!10664 = !DILocation(line: 123, column: 19, scope: !10650)
!10665 = !DILocation(line: 125, column: 37, scope: !10650)
!10666 = !DILocation(line: 125, column: 19, scope: !10650)
!10667 = !DILocation(line: 126, column: 37, scope: !10650)
!10668 = !DILocation(line: 126, column: 19, scope: !10650)
!10669 = !DILocation(line: 127, column: 37, scope: !10650)
!10670 = !DILocation(line: 127, column: 19, scope: !10650)
!10671 = !DILocation(line: 128, column: 37, scope: !10650)
!10672 = !DILocation(line: 128, column: 19, scope: !10650)
!10673 = !DILocation(line: 130, column: 36, scope: !10650)
!10674 = !DILocation(line: 130, column: 18, scope: !10650)
!10675 = !DILocation(line: 131, column: 36, scope: !10650)
!10676 = !DILocation(line: 131, column: 18, scope: !10650)
!10677 = !DILocation(line: 133, column: 5, scope: !10650)
!10678 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !2040, file: !2040, line: 140, type: !10679, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !293)
!10679 = !DISubroutineType(types: !10680)
!10680 = !{!7}
!10681 = !DILocation(line: 144, column: 5, scope: !10678)
!10682 = !DILocation(line: 144, column: 19, scope: !10678)
!10683 = !DILocation(line: 144, column: 28, scope: !10678)
!10684 = !DILocation(line: 147, column: 19, scope: !10678)
!10685 = !DILocation(line: 147, column: 28, scope: !10678)
!10686 = !DILocation(line: 150, column: 19, scope: !10678)
!10687 = !DILocation(line: 150, column: 28, scope: !10678)
!10688 = !DILocation(line: 152, column: 5, scope: !10678)
!10689 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !2040, file: !2040, line: 157, type: !7451, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !10690)
!10690 = !{!10691, !10692, !10693, !10694, !10695, !10696}
!10691 = !DILocalVariable(name: "mbist_src", scope: !10689, file: !2040, line: 159, type: !61)
!10692 = !DILocalVariable(name: "mbist_len", scope: !10689, file: !2040, line: 159, type: !61)
!10693 = !DILocalVariable(name: "mbist_data", scope: !10689, file: !2040, line: 159, type: !3544)
!10694 = !DILocalVariable(name: "i", scope: !10689, file: !2040, line: 160, type: !61)
!10695 = !DILocalVariable(name: "bist_data_inv", scope: !10689, file: !2040, line: 160, type: !61)
!10696 = !DILocalVariable(name: "bist_data_random", scope: !10689, file: !2040, line: 160, type: !61)
!10697 = !DILocation(line: 159, column: 36, scope: !10689)
!10698 = !DILocation(line: 0, scope: !10689)
!10699 = !DILocation(line: 165, column: 5, scope: !10689)
!10700 = !DILocation(line: 165, column: 19, scope: !10689)
!10701 = !DILocation(line: 165, column: 30, scope: !10689)
!10702 = !DILocation(line: 166, column: 5, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10689, file: !2040, line: 166, column: 5)
!10704 = !DILocation(line: 167, column: 9, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10706, file: !2040, line: 167, column: 9)
!10706 = distinct !DILexicalBlock(scope: !10707, file: !2040, line: 166, column: 66)
!10707 = distinct !DILexicalBlock(scope: !10703, file: !2040, line: 166, column: 5)
!10708 = !DILocation(line: 168, column: 13, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10710, file: !2040, line: 168, column: 13)
!10710 = distinct !DILexicalBlock(scope: !10711, file: !2040, line: 167, column: 34)
!10711 = distinct !DILexicalBlock(scope: !10705, file: !2040, line: 167, column: 9)
!10712 = !DILocation(line: 168, column: 57, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10709, file: !2040, line: 168, column: 13)
!10714 = distinct !{!10714, !10708, !10715}
!10715 = !DILocation(line: 183, column: 13, scope: !10709)
!10716 = !DILocation(line: 170, column: 42, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10713, file: !2040, line: 168, column: 83)
!10718 = !DILocation(line: 172, column: 42, scope: !10717)
!10719 = !DILocation(line: 174, column: 45, scope: !10717)
!10720 = !DILocation(line: 174, column: 59, scope: !10717)
!10721 = !DILocation(line: 174, column: 154, scope: !10717)
!10722 = !DILocation(line: 174, column: 87, scope: !10717)
!10723 = !DILocation(line: 174, column: 134, scope: !10717)
!10724 = !DILocation(line: 174, column: 42, scope: !10717)
!10725 = !DILocation(line: 175, column: 42, scope: !10717)
!10726 = !DILocation(line: 177, column: 17, scope: !10717)
!10727 = !DILocation(line: 177, column: 39, scope: !10717)
!10728 = !DILocation(line: 177, column: 50, scope: !10717)
!10729 = !DILocation(line: 177, column: 71, scope: !10717)
!10730 = distinct !{!10730, !10726, !10731}
!10731 = !DILocation(line: 177, column: 78, scope: !10717)
!10732 = !DILocation(line: 179, column: 36, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10717, file: !2040, line: 179, column: 21)
!10734 = !DILocation(line: 179, column: 47, scope: !10733)
!10735 = !DILocation(line: 179, column: 69, scope: !10733)
!10736 = !DILocation(line: 168, column: 79, scope: !10713)
!10737 = !DILocation(line: 179, column: 21, scope: !10717)
!10738 = !DILocation(line: 167, column: 30, scope: !10711)
!10739 = !DILocation(line: 167, column: 23, scope: !10711)
!10740 = distinct !{!10740, !10704, !10741}
!10741 = !DILocation(line: 184, column: 9, scope: !10705)
!10742 = !DILocation(line: 166, column: 62, scope: !10707)
!10743 = !DILocation(line: 166, column: 43, scope: !10707)
!10744 = distinct !{!10744, !10702, !10745}
!10745 = !DILocation(line: 185, column: 5, scope: !10703)
!10746 = !DILocation(line: 189, column: 1, scope: !10689)
!10747 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !2040, file: !2040, line: 190, type: !7451, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !293)
!10748 = !DILocation(line: 192, column: 9, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10747, file: !2040, line: 192, column: 9)
!10750 = !DILocation(line: 192, column: 26, scope: !10749)
!10751 = !DILocation(line: 0, scope: !10747)
!10752 = !DILocation(line: 197, column: 1, scope: !10747)
!10753 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !2040, file: !2040, line: 201, type: !291, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !10754)
!10754 = !{!10755, !10756}
!10755 = !DILocalVariable(name: "dqy_in_del", scope: !10753, file: !2040, line: 203, type: !993)
!10756 = !DILocalVariable(name: "dqs_in_del", scope: !10753, file: !2040, line: 204, type: !993)
!10757 = !DILocation(line: 0, scope: !10753)
!10758 = !DILocation(line: 206, column: 5, scope: !10753)
!10759 = !DILocation(line: 206, column: 19, scope: !10753)
!10760 = !DILocation(line: 206, column: 28, scope: !10753)
!10761 = !DILocation(line: 207, column: 19, scope: !10753)
!10762 = !DILocation(line: 207, column: 28, scope: !10753)
!10763 = !DILocation(line: 208, column: 19, scope: !10753)
!10764 = !DILocation(line: 208, column: 28, scope: !10753)
!10765 = !DILocation(line: 209, column: 19, scope: !10753)
!10766 = !DILocation(line: 209, column: 28, scope: !10753)
!10767 = !DILocation(line: 212, column: 23, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10769, file: !2040, line: 211, column: 78)
!10769 = distinct !DILexicalBlock(scope: !10770, file: !2040, line: 211, column: 5)
!10770 = distinct !DILexicalBlock(scope: !10753, file: !2040, line: 211, column: 5)
!10771 = !DILocation(line: 212, column: 32, scope: !10768)
!10772 = !DILocation(line: 213, column: 23, scope: !10768)
!10773 = !DILocation(line: 213, column: 32, scope: !10768)
!10774 = !DILocation(line: 215, column: 19, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10768, file: !2040, line: 215, column: 13)
!10776 = !DILocation(line: 215, column: 15, scope: !10775)
!10777 = !DILocation(line: 215, column: 13, scope: !10768)
!10778 = !DILocation(line: 211, column: 40, scope: !10769)
!10779 = !DILocation(line: 211, column: 5, scope: !10770)
!10780 = distinct !{!10780, !10779, !10781}
!10781 = !DILocation(line: 218, column: 5, scope: !10770)
!10782 = !DILocation(line: 211, column: 57, scope: !10769)
!10783 = !DILocation(line: 212, column: 9, scope: !10768)
!10784 = !DILocation(line: 212, column: 45, scope: !10768)
!10785 = !DILocation(line: 212, column: 83, scope: !10768)
!10786 = !DILocation(line: 212, column: 121, scope: !10768)
!10787 = !DILocation(line: 212, column: 70, scope: !10768)
!10788 = !DILocation(line: 212, column: 108, scope: !10768)
!10789 = !DILocation(line: 212, column: 146, scope: !10768)
!10790 = !DILocation(line: 222, column: 49, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10792, file: !2040, line: 221, column: 84)
!10792 = distinct !DILexicalBlock(scope: !10793, file: !2040, line: 221, column: 9)
!10793 = distinct !DILexicalBlock(scope: !10794, file: !2040, line: 221, column: 9)
!10794 = distinct !DILexicalBlock(scope: !10795, file: !2040, line: 220, column: 25)
!10795 = distinct !DILexicalBlock(scope: !10753, file: !2040, line: 220, column: 9)
!10796 = !DILocation(line: 222, column: 13, scope: !10791)
!10797 = !DILocation(line: 222, column: 27, scope: !10791)
!10798 = !DILocation(line: 222, column: 36, scope: !10791)
!10799 = !DILocation(line: 224, column: 23, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10791, file: !2040, line: 224, column: 17)
!10801 = !DILocation(line: 224, column: 19, scope: !10800)
!10802 = !DILocation(line: 224, column: 17, scope: !10791)
!10803 = distinct !{!10803, !10804, !10805}
!10804 = !DILocation(line: 221, column: 9, scope: !10793)
!10805 = !DILocation(line: 227, column: 9, scope: !10793)
!10806 = !DILocation(line: 230, column: 1, scope: !10753)
!10807 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !2040, file: !2040, line: 253, type: !291, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !293)
!10808 = !DILocation(line: 257, column: 26, scope: !10807)
!10809 = !DILocation(line: 259, column: 5, scope: !10807)
!10810 = !DILocation(line: 259, column: 19, scope: !10807)
!10811 = !DILocation(line: 259, column: 29, scope: !10807)
!10812 = !DILocation(line: 260, column: 5, scope: !10807)
!10813 = !DILocation(line: 260, column: 27, scope: !10807)
!10814 = !DILocation(line: 260, column: 93, scope: !10807)
!10815 = distinct !{!10815, !10812, !10816}
!10816 = !DILocation(line: 260, column: 98, scope: !10807)
!10817 = !DILocation(line: 261, column: 29, scope: !10807)
!10818 = !DILocation(line: 262, column: 5, scope: !10807)
!10819 = !DILocation(line: 262, column: 27, scope: !10807)
!10820 = !DILocation(line: 262, column: 93, scope: !10807)
!10821 = distinct !{!10821, !10818, !10822}
!10822 = !DILocation(line: 262, column: 98, scope: !10807)
!10823 = !DILocation(line: 264, column: 42, scope: !10807)
!10824 = !DILocation(line: 265, column: 48, scope: !10807)
!10825 = !DILocation(line: 267, column: 5, scope: !10807)
!10826 = !DILocation(line: 267, column: 27, scope: !10807)
!10827 = !DILocation(line: 267, column: 39, scope: !10807)
!10828 = !DILocation(line: 267, column: 65, scope: !10807)
!10829 = distinct !{!10829, !10825, !10830}
!10830 = !DILocation(line: 267, column: 70, scope: !10807)
!10831 = !DILocation(line: 269, column: 5, scope: !10807)
!10832 = !DILocation(line: 273, column: 8, scope: !10807)
!10833 = !DILocation(line: 275, column: 5, scope: !10807)
!10834 = !DILocation(line: 275, column: 27, scope: !10807)
!10835 = !DILocation(line: 275, column: 39, scope: !10807)
!10836 = !DILocation(line: 275, column: 65, scope: !10807)
!10837 = distinct !{!10837, !10833, !10838}
!10838 = !DILocation(line: 275, column: 70, scope: !10807)
!10839 = !DILocation(line: 278, column: 9, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10807, file: !2040, line: 278, column: 9)
!10841 = !DILocation(line: 278, column: 44, scope: !10840)
!10842 = !DILocation(line: 278, column: 9, scope: !10807)
!10843 = !DILocation(line: 279, column: 13, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10845, file: !2040, line: 279, column: 12)
!10845 = distinct !DILexicalBlock(scope: !10840, file: !2040, line: 278, column: 55)
!10846 = !DILocation(line: 279, column: 48, scope: !10844)
!10847 = !DILocation(line: 279, column: 56, scope: !10844)
!10848 = !DILocation(line: 0, scope: !10844)
!10849 = !DILocation(line: 288, column: 1, scope: !10807)
!10850 = distinct !DISubprogram(name: "custom_setEMI", scope: !2040, file: !2040, line: 294, type: !10851, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !293)
!10851 = !DISubroutineType(types: !10852)
!10852 = !{!1307}
!10853 = !DILocation(line: 298, column: 5, scope: !10850)
!10854 = !DILocation(line: 300, column: 5, scope: !10850)
!10855 = !DILocation(line: 302, column: 20, scope: !10850)
!10856 = !DILocation(line: 302, column: 18, scope: !10850)
!10857 = !DILocation(line: 303, column: 20, scope: !10850)
!10858 = !DILocation(line: 303, column: 18, scope: !10850)
!10859 = !DILocation(line: 304, column: 20, scope: !10850)
!10860 = !DILocation(line: 304, column: 18, scope: !10850)
!10861 = !DILocation(line: 307, column: 5, scope: !10850)
!10862 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !2040, file: !2040, line: 312, type: !10851, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !293)
!10863 = !DILocation(line: 319, column: 29, scope: !10862)
!10864 = !DILocation(line: 319, column: 5, scope: !10862)
!10865 = !DILocation(line: 319, column: 19, scope: !10862)
!10866 = !DILocation(line: 319, column: 27, scope: !10862)
!10867 = !DILocation(line: 320, column: 29, scope: !10862)
!10868 = !DILocation(line: 320, column: 19, scope: !10862)
!10869 = !DILocation(line: 320, column: 27, scope: !10862)
!10870 = !DILocation(line: 322, column: 30, scope: !10862)
!10871 = !DILocation(line: 322, column: 19, scope: !10862)
!10872 = !DILocation(line: 322, column: 28, scope: !10862)
!10873 = !DILocation(line: 324, column: 30, scope: !10862)
!10874 = !DILocation(line: 324, column: 19, scope: !10862)
!10875 = !DILocation(line: 324, column: 28, scope: !10862)
!10876 = !DILocation(line: 326, column: 31, scope: !10862)
!10877 = !DILocation(line: 326, column: 19, scope: !10862)
!10878 = !DILocation(line: 326, column: 29, scope: !10862)
!10879 = !DILocation(line: 327, column: 31, scope: !10862)
!10880 = !DILocation(line: 327, column: 19, scope: !10862)
!10881 = !DILocation(line: 327, column: 29, scope: !10862)
!10882 = !DILocation(line: 332, column: 30, scope: !10862)
!10883 = !DILocation(line: 332, column: 19, scope: !10862)
!10884 = !DILocation(line: 332, column: 28, scope: !10862)
!10885 = !DILocation(line: 333, column: 30, scope: !10862)
!10886 = !DILocation(line: 333, column: 19, scope: !10862)
!10887 = !DILocation(line: 333, column: 28, scope: !10862)
!10888 = !DILocation(line: 334, column: 30, scope: !10862)
!10889 = !DILocation(line: 334, column: 19, scope: !10862)
!10890 = !DILocation(line: 334, column: 28, scope: !10862)
!10891 = !DILocation(line: 336, column: 30, scope: !10862)
!10892 = !DILocation(line: 336, column: 19, scope: !10862)
!10893 = !DILocation(line: 336, column: 28, scope: !10862)
!10894 = !DILocation(line: 337, column: 30, scope: !10862)
!10895 = !DILocation(line: 337, column: 19, scope: !10862)
!10896 = !DILocation(line: 337, column: 28, scope: !10862)
!10897 = !DILocation(line: 338, column: 30, scope: !10862)
!10898 = !DILocation(line: 338, column: 19, scope: !10862)
!10899 = !DILocation(line: 338, column: 28, scope: !10862)
!10900 = !DILocation(line: 339, column: 30, scope: !10862)
!10901 = !DILocation(line: 339, column: 19, scope: !10862)
!10902 = !DILocation(line: 339, column: 28, scope: !10862)
!10903 = !DILocation(line: 341, column: 5, scope: !10862)
!10904 = !DILocation(line: 345, column: 5, scope: !10862)
!10905 = !DILocation(line: 345, column: 19, scope: !10862)
!10906 = !DILocation(line: 345, column: 28, scope: !10862)
!10907 = !DILocation(line: 346, column: 5, scope: !10862)
!10908 = !DILocation(line: 346, column: 28, scope: !10862)
!10909 = !DILocation(line: 346, column: 82, scope: !10862)
!10910 = distinct !{!10910, !10907, !10911}
!10911 = !DILocation(line: 346, column: 87, scope: !10862)
!10912 = !DILocation(line: 347, column: 28, scope: !10862)
!10913 = !DILocation(line: 348, column: 5, scope: !10862)
!10914 = !DILocation(line: 348, column: 28, scope: !10862)
!10915 = !DILocation(line: 348, column: 82, scope: !10862)
!10916 = distinct !{!10916, !10913, !10917}
!10917 = !DILocation(line: 348, column: 87, scope: !10862)
!10918 = !DILocation(line: 349, column: 28, scope: !10862)
!10919 = !DILocation(line: 351, column: 5, scope: !10862)
!10920 = !DILocation(line: 353, column: 5, scope: !10862)
!10921 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !2040, file: !2040, line: 358, type: !291, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !293)
!10922 = !DILocation(line: 361, column: 36, scope: !10921)
!10923 = !DILocation(line: 361, column: 50, scope: !10921)
!10924 = !DILocation(line: 361, column: 34, scope: !10921)
!10925 = !DILocation(line: 362, column: 50, scope: !10921)
!10926 = !DILocation(line: 362, column: 34, scope: !10921)
!10927 = !DILocation(line: 363, column: 50, scope: !10921)
!10928 = !DILocation(line: 363, column: 34, scope: !10921)
!10929 = !DILocation(line: 364, column: 50, scope: !10921)
!10930 = !DILocation(line: 364, column: 34, scope: !10921)
!10931 = !DILocation(line: 365, column: 50, scope: !10921)
!10932 = !DILocation(line: 365, column: 34, scope: !10921)
!10933 = !DILocation(line: 366, column: 50, scope: !10921)
!10934 = !DILocation(line: 366, column: 34, scope: !10921)
!10935 = !DILocation(line: 367, column: 50, scope: !10921)
!10936 = !DILocation(line: 367, column: 34, scope: !10921)
!10937 = !DILocation(line: 368, column: 50, scope: !10921)
!10938 = !DILocation(line: 368, column: 34, scope: !10921)
!10939 = !DILocation(line: 369, column: 50, scope: !10921)
!10940 = !DILocation(line: 369, column: 34, scope: !10921)
!10941 = !DILocation(line: 370, column: 50, scope: !10921)
!10942 = !DILocation(line: 370, column: 34, scope: !10921)
!10943 = !DILocation(line: 371, column: 50, scope: !10921)
!10944 = !DILocation(line: 371, column: 34, scope: !10921)
!10945 = !DILocation(line: 372, column: 50, scope: !10921)
!10946 = !DILocation(line: 372, column: 34, scope: !10921)
!10947 = !DILocation(line: 373, column: 51, scope: !10921)
!10948 = !DILocation(line: 373, column: 35, scope: !10921)
!10949 = !DILocation(line: 374, column: 51, scope: !10921)
!10950 = !DILocation(line: 374, column: 35, scope: !10921)
!10951 = !DILocation(line: 375, column: 50, scope: !10921)
!10952 = !DILocation(line: 375, column: 34, scope: !10921)
!10953 = !DILocation(line: 376, column: 50, scope: !10921)
!10954 = !DILocation(line: 376, column: 34, scope: !10921)
!10955 = !DILocation(line: 377, column: 50, scope: !10921)
!10956 = !DILocation(line: 377, column: 34, scope: !10921)
!10957 = !DILocation(line: 378, column: 50, scope: !10921)
!10958 = !DILocation(line: 378, column: 34, scope: !10921)
!10959 = !DILocation(line: 379, column: 50, scope: !10921)
!10960 = !DILocation(line: 379, column: 34, scope: !10921)
!10961 = !DILocation(line: 380, column: 50, scope: !10921)
!10962 = !DILocation(line: 380, column: 34, scope: !10921)
!10963 = !DILocation(line: 382, column: 1, scope: !10921)
!10964 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !2040, file: !2040, line: 384, type: !291, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !293)
!10965 = !DILocation(line: 387, column: 5, scope: !10964)
!10966 = !DILocation(line: 387, column: 27, scope: !10964)
!10967 = !DILocation(line: 387, column: 36, scope: !10964)
!10968 = !DILocation(line: 387, column: 76, scope: !10964)
!10969 = distinct !{!10969, !10965, !10970}
!10970 = !DILocation(line: 387, column: 84, scope: !10964)
!10971 = !DILocation(line: 388, column: 50, scope: !10964)
!10972 = !DILocation(line: 388, column: 19, scope: !10964)
!10973 = !DILocation(line: 388, column: 28, scope: !10964)
!10974 = !DILocation(line: 389, column: 50, scope: !10964)
!10975 = !DILocation(line: 389, column: 19, scope: !10964)
!10976 = !DILocation(line: 389, column: 28, scope: !10964)
!10977 = !DILocation(line: 390, column: 50, scope: !10964)
!10978 = !DILocation(line: 390, column: 19, scope: !10964)
!10979 = !DILocation(line: 390, column: 28, scope: !10964)
!10980 = !DILocation(line: 391, column: 50, scope: !10964)
!10981 = !DILocation(line: 391, column: 19, scope: !10964)
!10982 = !DILocation(line: 391, column: 28, scope: !10964)
!10983 = !DILocation(line: 392, column: 50, scope: !10964)
!10984 = !DILocation(line: 392, column: 19, scope: !10964)
!10985 = !DILocation(line: 392, column: 28, scope: !10964)
!10986 = !DILocation(line: 393, column: 50, scope: !10964)
!10987 = !DILocation(line: 393, column: 19, scope: !10964)
!10988 = !DILocation(line: 393, column: 28, scope: !10964)
!10989 = !DILocation(line: 394, column: 51, scope: !10964)
!10990 = !DILocation(line: 394, column: 19, scope: !10964)
!10991 = !DILocation(line: 394, column: 29, scope: !10964)
!10992 = !DILocation(line: 395, column: 51, scope: !10964)
!10993 = !DILocation(line: 395, column: 19, scope: !10964)
!10994 = !DILocation(line: 395, column: 29, scope: !10964)
!10995 = !DILocation(line: 396, column: 50, scope: !10964)
!10996 = !DILocation(line: 396, column: 19, scope: !10964)
!10997 = !DILocation(line: 396, column: 28, scope: !10964)
!10998 = !DILocation(line: 397, column: 50, scope: !10964)
!10999 = !DILocation(line: 397, column: 19, scope: !10964)
!11000 = !DILocation(line: 397, column: 28, scope: !10964)
!11001 = !DILocation(line: 398, column: 50, scope: !10964)
!11002 = !DILocation(line: 398, column: 19, scope: !10964)
!11003 = !DILocation(line: 398, column: 28, scope: !10964)
!11004 = !DILocation(line: 399, column: 50, scope: !10964)
!11005 = !DILocation(line: 399, column: 19, scope: !10964)
!11006 = !DILocation(line: 399, column: 28, scope: !10964)
!11007 = !DILocation(line: 400, column: 50, scope: !10964)
!11008 = !DILocation(line: 400, column: 19, scope: !10964)
!11009 = !DILocation(line: 400, column: 28, scope: !10964)
!11010 = !DILocation(line: 401, column: 50, scope: !10964)
!11011 = !DILocation(line: 401, column: 19, scope: !10964)
!11012 = !DILocation(line: 401, column: 28, scope: !10964)
!11013 = !DILocation(line: 402, column: 50, scope: !10964)
!11014 = !DILocation(line: 402, column: 19, scope: !10964)
!11015 = !DILocation(line: 402, column: 28, scope: !10964)
!11016 = !DILocation(line: 403, column: 50, scope: !10964)
!11017 = !DILocation(line: 403, column: 19, scope: !10964)
!11018 = !DILocation(line: 403, column: 28, scope: !10964)
!11019 = !DILocation(line: 404, column: 50, scope: !10964)
!11020 = !DILocation(line: 404, column: 19, scope: !10964)
!11021 = !DILocation(line: 404, column: 28, scope: !10964)
!11022 = !DILocation(line: 405, column: 50, scope: !10964)
!11023 = !DILocation(line: 405, column: 19, scope: !10964)
!11024 = !DILocation(line: 405, column: 28, scope: !10964)
!11025 = !DILocation(line: 406, column: 50, scope: !10964)
!11026 = !DILocation(line: 406, column: 19, scope: !10964)
!11027 = !DILocation(line: 406, column: 28, scope: !10964)
!11028 = !DILocation(line: 408, column: 1, scope: !10964)
!11029 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !2040, file: !2040, line: 410, type: !291, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !293)
!11030 = !DILocation(line: 413, column: 29, scope: !11029)
!11031 = !DILocation(line: 413, column: 43, scope: !11029)
!11032 = !DILocation(line: 413, column: 51, scope: !11029)
!11033 = !DILocation(line: 413, column: 27, scope: !11029)
!11034 = !DILocation(line: 416, column: 19, scope: !11029)
!11035 = !DILocation(line: 416, column: 29, scope: !11029)
!11036 = !DILocation(line: 417, column: 5, scope: !11029)
!11037 = !DILocation(line: 417, column: 27, scope: !11029)
!11038 = !DILocation(line: 417, column: 93, scope: !11029)
!11039 = distinct !{!11039, !11036, !11040}
!11040 = !DILocation(line: 417, column: 98, scope: !11029)
!11041 = !DILocation(line: 418, column: 29, scope: !11029)
!11042 = !DILocation(line: 419, column: 5, scope: !11029)
!11043 = !DILocation(line: 419, column: 27, scope: !11029)
!11044 = !DILocation(line: 419, column: 93, scope: !11029)
!11045 = distinct !{!11045, !11042, !11046}
!11046 = !DILocation(line: 419, column: 98, scope: !11029)
!11047 = !DILocation(line: 421, column: 5, scope: !11029)
!11048 = !DILocation(line: 422, column: 5, scope: !11029)
!11049 = !DILocation(line: 422, column: 19, scope: !11029)
!11050 = !DILocation(line: 422, column: 28, scope: !11029)
!11051 = !DILocation(line: 423, column: 5, scope: !11029)
!11052 = !DILocation(line: 423, column: 28, scope: !11029)
!11053 = !DILocation(line: 423, column: 82, scope: !11029)
!11054 = distinct !{!11054, !11051, !11055}
!11055 = !DILocation(line: 423, column: 87, scope: !11029)
!11056 = !DILocation(line: 424, column: 28, scope: !11029)
!11057 = !DILocation(line: 425, column: 5, scope: !11029)
!11058 = !DILocation(line: 425, column: 28, scope: !11029)
!11059 = !DILocation(line: 425, column: 82, scope: !11029)
!11060 = distinct !{!11060, !11057, !11061}
!11061 = !DILocation(line: 425, column: 87, scope: !11029)
!11062 = !DILocation(line: 426, column: 28, scope: !11029)
!11063 = !DILocation(line: 428, column: 50, scope: !11029)
!11064 = !DILocation(line: 428, column: 19, scope: !11029)
!11065 = !DILocation(line: 428, column: 28, scope: !11029)
!11066 = !DILocation(line: 432, column: 1, scope: !11029)
!11067 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !2040, file: !2040, line: 434, type: !291, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !293)
!11068 = !DILocation(line: 437, column: 5, scope: !11067)
!11069 = !DILocation(line: 440, column: 5, scope: !11067)
!11070 = !DILocation(line: 440, column: 27, scope: !11067)
!11071 = !DILocation(line: 440, column: 36, scope: !11067)
!11072 = !DILocation(line: 440, column: 76, scope: !11067)
!11073 = distinct !{!11073, !11069, !11074}
!11074 = !DILocation(line: 440, column: 84, scope: !11067)
!11075 = !DILocation(line: 441, column: 45, scope: !11067)
!11076 = !DILocation(line: 441, column: 54, scope: !11067)
!11077 = !DILocation(line: 441, column: 28, scope: !11067)
!11078 = !DILocation(line: 442, column: 19, scope: !11067)
!11079 = !DILocation(line: 442, column: 31, scope: !11067)
!11080 = !DILocation(line: 443, column: 5, scope: !11067)
!11081 = !DILocation(line: 443, column: 27, scope: !11067)
!11082 = !DILocation(line: 443, column: 39, scope: !11067)
!11083 = !DILocation(line: 443, column: 65, scope: !11067)
!11084 = distinct !{!11084, !11080, !11085}
!11085 = !DILocation(line: 443, column: 70, scope: !11067)
!11086 = !DILocation(line: 444, column: 19, scope: !11067)
!11087 = !DILocation(line: 444, column: 28, scope: !11067)
!11088 = !DILocation(line: 445, column: 5, scope: !11067)
!11089 = !DILocation(line: 445, column: 27, scope: !11067)
!11090 = !DILocation(line: 445, column: 91, scope: !11067)
!11091 = distinct !{!11091, !11088, !11092}
!11092 = !DILocation(line: 445, column: 96, scope: !11067)
!11093 = !DILocation(line: 447, column: 43, scope: !11067)
!11094 = !DILocation(line: 447, column: 51, scope: !11067)
!11095 = !DILocation(line: 447, column: 27, scope: !11067)
!11096 = !DILocation(line: 450, column: 1, scope: !11067)
!11097 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !2040, file: !2040, line: 452, type: !11098, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !11101)
!11098 = !DISubroutineType(types: !11099)
!11099 = !{!993, !11100}
!11100 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !2043, line: 43, baseType: !2042)
!11101 = !{!11102, !11103}
!11102 = !DILocalVariable(name: "clock", arg: 1, scope: !11097, file: !2040, line: 452, type: !11100)
!11103 = !DILocalVariable(name: "delay", scope: !11097, file: !2040, line: 457, type: !60)
!11104 = !DILocation(line: 0, scope: !11097)
!11105 = !DILocation(line: 457, column: 5, scope: !11097)
!11106 = !DILocation(line: 457, column: 23, scope: !11097)
!11107 = !DILocation(line: 458, column: 9, scope: !11097)
!11108 = !DILocation(line: 465, column: 9, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11110, file: !2040, line: 458, column: 39)
!11110 = distinct !DILexicalBlock(scope: !11097, file: !2040, line: 458, column: 9)
!11111 = !DILocation(line: 465, column: 23, scope: !11109)
!11112 = !DILocation(line: 465, column: 32, scope: !11109)
!11113 = !DILocation(line: 466, column: 32, scope: !11109)
!11114 = !DILocation(line: 467, column: 9, scope: !11109)
!11115 = !DILocation(line: 467, column: 32, scope: !11109)
!11116 = !DILocation(line: 467, column: 86, scope: !11109)
!11117 = distinct !{!11117, !11114, !11118}
!11118 = !DILocation(line: 467, column: 91, scope: !11109)
!11119 = !DILocation(line: 468, column: 32, scope: !11109)
!11120 = !DILocation(line: 469, column: 9, scope: !11109)
!11121 = !DILocation(line: 469, column: 32, scope: !11109)
!11122 = !DILocation(line: 469, column: 86, scope: !11109)
!11123 = distinct !{!11123, !11120, !11124}
!11124 = !DILocation(line: 469, column: 91, scope: !11109)
!11125 = !DILocation(line: 470, column: 32, scope: !11109)
!11126 = !DILocation(line: 472, column: 20, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11109, file: !2040, line: 472, column: 9)
!11128 = !DILocation(line: 472, column: 25, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !11127, file: !2040, line: 472, column: 9)
!11130 = !DILocation(line: 472, column: 31, scope: !11129)
!11131 = !DILocation(line: 472, column: 9, scope: !11127)
!11132 = !DILocation(line: 472, column: 44, scope: !11129)
!11133 = distinct !{!11133, !11131, !11134}
!11134 = !DILocation(line: 472, column: 47, scope: !11127)
!11135 = !DILocation(line: 478, column: 9, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11137, file: !2040, line: 477, column: 12)
!11137 = distinct !DILexicalBlock(scope: !11110, file: !2040, line: 475, column: 16)
!11138 = !DILocation(line: 483, column: 1, scope: !11097)
!11139 = distinct !DISubprogram(name: "emi_mask_master", scope: !2040, file: !2040, line: 487, type: !291, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !293)
!11140 = !DILocation(line: 490, column: 30, scope: !11139)
!11141 = !DILocation(line: 490, column: 44, scope: !11139)
!11142 = !DILocation(line: 490, column: 53, scope: !11139)
!11143 = !DILocation(line: 490, column: 28, scope: !11139)
!11144 = !DILocation(line: 492, column: 1, scope: !11139)
!11145 = distinct !DISubprogram(name: "emi_unmask_master", scope: !2040, file: !2040, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !293)
!11146 = !DILocation(line: 497, column: 30, scope: !11145)
!11147 = !DILocation(line: 497, column: 44, scope: !11145)
!11148 = !DILocation(line: 497, column: 53, scope: !11145)
!11149 = !DILocation(line: 497, column: 28, scope: !11145)
!11150 = !DILocation(line: 500, column: 1, scope: !11145)
!11151 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !2206, file: !2206, line: 56, type: !7932, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2205, retainedNodes: !293)
!11152 = !DILocation(line: 61, column: 5, scope: !11151)
!11153 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !2206, file: !2206, line: 65, type: !7932, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2205, retainedNodes: !293)
!11154 = !DILocation(line: 70, column: 5, scope: !11153)
!11155 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !2206, file: !2206, line: 74, type: !291, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2205, retainedNodes: !293)
!11156 = !DILocation(line: 79, column: 9, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11158, file: !2206, line: 78, column: 12)
!11158 = distinct !DILexicalBlock(scope: !11155, file: !2206, line: 76, column: 9)
!11159 = !DILocation(line: 81, column: 1, scope: !11155)
!11160 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !2206, file: !2206, line: 83, type: !291, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2205, retainedNodes: !293)
!11161 = !DILocation(line: 88, column: 9, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11163, file: !2206, line: 87, column: 12)
!11163 = distinct !DILexicalBlock(scope: !11160, file: !2206, line: 85, column: 9)
!11164 = !DILocation(line: 90, column: 1, scope: !11160)
!11165 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !2206, file: !2206, line: 92, type: !291, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2205, retainedNodes: !293)
!11166 = !DILocation(line: 97, column: 9, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11168, file: !2206, line: 96, column: 12)
!11168 = distinct !DILexicalBlock(scope: !11165, file: !2206, line: 94, column: 9)
!11169 = !DILocation(line: 99, column: 1, scope: !11165)
!11170 = distinct !DISubprogram(name: "peri_clk_26m", scope: !2206, file: !2206, line: 101, type: !291, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2205, retainedNodes: !293)
!11171 = !DILocation(line: 106, column: 9, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11173, file: !2206, line: 105, column: 12)
!11173 = distinct !DILexicalBlock(scope: !11170, file: !2206, line: 103, column: 9)
!11174 = !DILocation(line: 108, column: 1, scope: !11170)
!11175 = distinct !DISubprogram(name: "__io_putchar", scope: !2624, file: !2624, line: 55, type: !11176, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !11178)
!11176 = !DISubroutineType(types: !11177)
!11177 = !{!7, !7}
!11178 = !{!11179}
!11179 = !DILocalVariable(name: "ch", arg: 1, scope: !11175, file: !2624, line: 55, type: !7)
!11180 = !DILocation(line: 0, scope: !11175)
!11181 = !DILocation(line: 62, column: 35, scope: !11175)
!11182 = !DILocation(line: 62, column: 5, scope: !11175)
!11183 = !DILocation(line: 63, column: 5, scope: !11175)
!11184 = distinct !DISubprogram(name: "main", scope: !2624, file: !2624, line: 143, type: !10679, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !293)
!11185 = !DILocation(line: 146, column: 5, scope: !11184)
!11186 = !DILocation(line: 148, column: 5, scope: !11184)
!11187 = !DILocation(line: 151, column: 5, scope: !11184)
!11188 = !DILocation(line: 319, column: 3, scope: !11189, inlinedAt: !11190)
!11189 = distinct !DISubprogram(name: "__enable_irq", scope: !6543, file: !6543, line: 317, type: !291, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !293)
!11190 = distinct !DILocation(line: 154, column: 5, scope: !11184)
!11191 = !{i64 658990}
!11192 = !DILocation(line: 496, column: 3, scope: !11193, inlinedAt: !11194)
!11193 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !6543, file: !6543, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !293)
!11194 = distinct !DILocation(line: 155, column: 5, scope: !11184)
!11195 = !{i64 663265}
!11196 = !DILocation(line: 158, column: 5, scope: !11184)
!11197 = !DILocation(line: 160, column: 5, scope: !11184)
!11198 = !DILocation(line: 161, column: 5, scope: !11184)
!11199 = !DILocation(line: 163, column: 5, scope: !11184)
!11200 = !DILocation(line: 165, column: 5, scope: !11184)
!11201 = distinct !{!11201, !11200, !11202}
!11202 = !DILocation(line: 165, column: 14, scope: !11184)
!11203 = distinct !DISubprogram(name: "SystemClock_Config", scope: !2624, file: !2624, line: 94, type: !291, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !293)
!11204 = !DILocation(line: 96, column: 5, scope: !11203)
!11205 = !DILocation(line: 97, column: 1, scope: !11203)
!11206 = distinct !DISubprogram(name: "prvSetupHardware", scope: !2624, file: !2624, line: 104, type: !291, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !293)
!11207 = !DILocation(line: 107, column: 5, scope: !11206)
!11208 = !DILocation(line: 108, column: 5, scope: !11206)
!11209 = !DILocation(line: 109, column: 5, scope: !11206)
!11210 = !DILocation(line: 111, column: 1, scope: !11206)
!11211 = distinct !DISubprogram(name: "pwm_generate_waveform", scope: !2624, file: !2624, line: 118, type: !291, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !11212)
!11212 = !{!11213, !11214}
!11213 = !DILocalVariable(name: "total_count", scope: !11211, file: !2624, line: 121, type: !61)
!11214 = !DILocalVariable(name: "duty_cycle", scope: !11211, file: !2624, line: 122, type: !61)
!11215 = !DILocation(line: 121, column: 5, scope: !11211)
!11216 = !DILocation(line: 0, scope: !11211)
!11217 = !DILocation(line: 121, column: 14, scope: !11211)
!11218 = !DILocation(line: 124, column: 5, scope: !11211)
!11219 = !DILocation(line: 125, column: 5, scope: !11211)
!11220 = !DILocation(line: 127, column: 5, scope: !11211)
!11221 = !DILocation(line: 130, column: 5, scope: !11211)
!11222 = !DILocation(line: 133, column: 5, scope: !11211)
!11223 = !DILocation(line: 136, column: 19, scope: !11211)
!11224 = !DILocation(line: 136, column: 31, scope: !11211)
!11225 = !DILocation(line: 136, column: 37, scope: !11211)
!11226 = !DILocation(line: 137, column: 5, scope: !11211)
!11227 = !DILocation(line: 138, column: 5, scope: !11211)
!11228 = !DILocation(line: 139, column: 5, scope: !11211)
!11229 = !DILocation(line: 140, column: 5, scope: !11211)
!11230 = !DILocation(line: 141, column: 1, scope: !11211)
!11231 = distinct !DISubprogram(name: "plain_log_uart_init", scope: !2624, file: !2624, line: 71, type: !291, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !11232)
!11232 = !{!11233}
!11233 = !DILocalVariable(name: "uart_config", scope: !11231, file: !2624, line: 73, type: !11234)
!11234 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !717, line: 378, baseType: !11235)
!11235 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !717, line: 373, size: 128, elements: !11236)
!11236 = !{!11237, !11238, !11239, !11240}
!11237 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !11235, file: !717, line: 374, baseType: !4940, size: 32)
!11238 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !11235, file: !717, line: 375, baseType: !4990, size: 32, offset: 32)
!11239 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !11235, file: !717, line: 376, baseType: !4992, size: 32, offset: 64)
!11240 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !11235, file: !717, line: 377, baseType: !4994, size: 32, offset: 96)
!11241 = !DILocation(line: 73, column: 5, scope: !11231)
!11242 = !DILocation(line: 73, column: 23, scope: !11231)
!11243 = !DILocation(line: 76, column: 5, scope: !11231)
!11244 = !DILocation(line: 77, column: 5, scope: !11231)
!11245 = !DILocation(line: 78, column: 5, scope: !11231)
!11246 = !DILocation(line: 79, column: 5, scope: !11231)
!11247 = !DILocation(line: 82, column: 17, scope: !11231)
!11248 = !DILocation(line: 82, column: 26, scope: !11231)
!11249 = !DILocation(line: 83, column: 17, scope: !11231)
!11250 = !DILocation(line: 83, column: 29, scope: !11231)
!11251 = !DILocation(line: 84, column: 17, scope: !11231)
!11252 = !DILocation(line: 84, column: 26, scope: !11231)
!11253 = !DILocation(line: 85, column: 17, scope: !11231)
!11254 = !DILocation(line: 85, column: 24, scope: !11231)
!11255 = !DILocation(line: 86, column: 5, scope: !11231)
!11256 = !DILocation(line: 87, column: 1, scope: !11231)
!11257 = distinct !DISubprogram(name: "_close", scope: !2218, file: !2218, line: 5, type: !11176, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !11258)
!11258 = !{!11259}
!11259 = !DILocalVariable(name: "file", arg: 1, scope: !11257, file: !2218, line: 5, type: !7)
!11260 = !DILocation(line: 0, scope: !11257)
!11261 = !DILocation(line: 7, column: 5, scope: !11257)
!11262 = distinct !DISubprogram(name: "_fstat", scope: !2218, file: !2218, line: 10, type: !11263, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !11311)
!11263 = !DISubroutineType(types: !11264)
!11264 = !{!7, !7, !11265}
!11265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11266, size: 32)
!11266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !11267, line: 27, size: 704, elements: !11268)
!11267 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!11268 = !{!11269, !11272, !11275, !11278, !11281, !11284, !11287, !11288, !11291, !11301, !11302, !11303, !11306, !11309}
!11269 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !11266, file: !11267, line: 29, baseType: !11270, size: 16)
!11270 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !2222, line: 161, baseType: !11271)
!11271 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2262, line: 56, baseType: !1493)
!11272 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !11266, file: !11267, line: 30, baseType: !11273, size: 16, offset: 16)
!11273 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !2222, line: 139, baseType: !11274)
!11274 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2262, line: 75, baseType: !1089)
!11275 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !11266, file: !11267, line: 31, baseType: !11276, size: 32, offset: 32)
!11276 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !2222, line: 189, baseType: !11277)
!11277 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2262, line: 90, baseType: !63)
!11278 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !11266, file: !11267, line: 32, baseType: !11279, size: 16, offset: 64)
!11279 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !2222, line: 194, baseType: !11280)
!11280 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2262, line: 209, baseType: !1089)
!11281 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !11266, file: !11267, line: 33, baseType: !11282, size: 16, offset: 80)
!11282 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !2222, line: 165, baseType: !11283)
!11283 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2262, line: 60, baseType: !1089)
!11284 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !11266, file: !11267, line: 34, baseType: !11285, size: 16, offset: 96)
!11285 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !2222, line: 169, baseType: !11286)
!11286 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2262, line: 63, baseType: !1089)
!11287 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !11266, file: !11267, line: 35, baseType: !11270, size: 16, offset: 112)
!11288 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !11266, file: !11267, line: 36, baseType: !11289, size: 32, offset: 128)
!11289 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2222, line: 157, baseType: !11290)
!11290 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2262, line: 102, baseType: !2278)
!11291 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !11266, file: !11267, line: 42, baseType: !11292, size: 128, offset: 192)
!11292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !11293, line: 47, size: 128, elements: !11294)
!11293 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!11294 = !{!11295, !11300}
!11295 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !11292, file: !11293, line: 48, baseType: !11296, size: 64)
!11296 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !11297, line: 42, baseType: !11298)
!11297 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!11298 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !64, line: 200, baseType: !11299)
!11299 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!11300 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !11292, file: !11293, line: 49, baseType: !2263, size: 32, offset: 64)
!11301 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !11266, file: !11267, line: 43, baseType: !11292, size: 128, offset: 320)
!11302 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !11266, file: !11267, line: 44, baseType: !11292, size: 128, offset: 448)
!11303 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !11266, file: !11267, line: 45, baseType: !11304, size: 32, offset: 576)
!11304 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !2222, line: 102, baseType: !11305)
!11305 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2262, line: 34, baseType: !2263)
!11306 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !11266, file: !11267, line: 46, baseType: !11307, size: 32, offset: 608)
!11307 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !2222, line: 97, baseType: !11308)
!11308 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2262, line: 30, baseType: !2263)
!11309 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !11266, file: !11267, line: 48, baseType: !11310, size: 64, offset: 640)
!11310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2263, size: 64, elements: !528)
!11311 = !{!11312, !11313}
!11312 = !DILocalVariable(name: "file", arg: 1, scope: !11262, file: !2218, line: 10, type: !7)
!11313 = !DILocalVariable(name: "st", arg: 2, scope: !11262, file: !2218, line: 10, type: !11265)
!11314 = !DILocation(line: 0, scope: !11262)
!11315 = !DILocation(line: 12, column: 5, scope: !11262)
!11316 = distinct !DISubprogram(name: "_isatty", scope: !2218, file: !2218, line: 15, type: !11176, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !11317)
!11317 = !{!11318}
!11318 = !DILocalVariable(name: "file", arg: 1, scope: !11316, file: !2218, line: 15, type: !7)
!11319 = !DILocation(line: 0, scope: !11316)
!11320 = !DILocation(line: 17, column: 5, scope: !11316)
!11321 = distinct !DISubprogram(name: "_lseek", scope: !2218, file: !2218, line: 20, type: !11322, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !11324)
!11322 = !DISubroutineType(types: !11323)
!11323 = !{!7, !7, !7, !7}
!11324 = !{!11325, !11326, !11327}
!11325 = !DILocalVariable(name: "file", arg: 1, scope: !11321, file: !2218, line: 20, type: !7)
!11326 = !DILocalVariable(name: "ptr", arg: 2, scope: !11321, file: !2218, line: 20, type: !7)
!11327 = !DILocalVariable(name: "dir", arg: 3, scope: !11321, file: !2218, line: 20, type: !7)
!11328 = !DILocation(line: 0, scope: !11321)
!11329 = !DILocation(line: 22, column: 5, scope: !11321)
!11330 = distinct !DISubprogram(name: "_open", scope: !2218, file: !2218, line: 25, type: !11331, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !11333)
!11331 = !DISubroutineType(types: !11332)
!11332 = !{!7, !2256, !7, !7}
!11333 = !{!11334, !11335, !11336}
!11334 = !DILocalVariable(name: "name", arg: 1, scope: !11330, file: !2218, line: 25, type: !2256)
!11335 = !DILocalVariable(name: "flags", arg: 2, scope: !11330, file: !2218, line: 25, type: !7)
!11336 = !DILocalVariable(name: "mode", arg: 3, scope: !11330, file: !2218, line: 25, type: !7)
!11337 = !DILocation(line: 0, scope: !11330)
!11338 = !DILocation(line: 27, column: 5, scope: !11330)
!11339 = distinct !DISubprogram(name: "_read", scope: !2218, file: !2218, line: 30, type: !11340, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !11342)
!11340 = !DISubroutineType(types: !11341)
!11341 = !{!7, !7, !2223, !7}
!11342 = !{!11343, !11344, !11345}
!11343 = !DILocalVariable(name: "file", arg: 1, scope: !11339, file: !2218, line: 30, type: !7)
!11344 = !DILocalVariable(name: "ptr", arg: 2, scope: !11339, file: !2218, line: 30, type: !2223)
!11345 = !DILocalVariable(name: "len", arg: 3, scope: !11339, file: !2218, line: 30, type: !7)
!11346 = !DILocation(line: 0, scope: !11339)
!11347 = !DILocation(line: 32, column: 5, scope: !11339)
!11348 = distinct !DISubprogram(name: "_getpid", scope: !2218, file: !2218, line: 48, type: !10679, scopeLine: 49, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !293)
!11349 = !DILocation(line: 50, column: 5, scope: !11348)
!11350 = distinct !DISubprogram(name: "_kill", scope: !2218, file: !2218, line: 56, type: !11351, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !11353)
!11351 = !DISubroutineType(types: !11352)
!11352 = !{!7, !7, !7}
!11353 = !{!11354, !11355}
!11354 = !DILocalVariable(name: "pid", arg: 1, scope: !11350, file: !2218, line: 56, type: !7)
!11355 = !DILocalVariable(name: "sig", arg: 2, scope: !11350, file: !2218, line: 56, type: !7)
!11356 = !DILocation(line: 0, scope: !11350)
!11357 = !DILocation(line: 58, column: 5, scope: !11350)
!11358 = distinct !DISubprogram(name: "_exit", scope: !2218, file: !2218, line: 61, type: !11176, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !11359)
!11359 = !{!11360}
!11360 = !DILocalVariable(name: "val", arg: 1, scope: !11358, file: !2218, line: 61, type: !7)
!11361 = !DILocation(line: 0, scope: !11358)
!11362 = !DILocation(line: 63, column: 5, scope: !11358)
!11363 = !DILocation(line: 0, scope: !2217)
!11364 = !DILocation(line: 73, column: 5, scope: !2217)
!11365 = !{i64 1127}
!11366 = !DILocation(line: 75, column: 14, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !2217, file: !2218, line: 75, column: 9)
!11368 = !DILocation(line: 75, column: 11, scope: !11367)
!11369 = !DILocation(line: 75, column: 9, scope: !2217)
!11370 = !DILocation(line: 81, column: 32, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !2217, file: !2218, line: 81, column: 9)
!11372 = !DILocation(line: 81, column: 15, scope: !11371)
!11373 = !DILocation(line: 92, column: 1, scope: !2217)
!11374 = !DILocation(line: 81, column: 9, scope: !2217)
!11375 = distinct !DISubprogram(name: "_write", scope: !2218, file: !2218, line: 94, type: !11340, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2410, retainedNodes: !11376)
!11376 = !{!11377, !11378, !11379, !11380}
!11377 = !DILocalVariable(name: "file", arg: 1, scope: !11375, file: !2218, line: 94, type: !7)
!11378 = !DILocalVariable(name: "ptr", arg: 2, scope: !11375, file: !2218, line: 94, type: !2223)
!11379 = !DILocalVariable(name: "len", arg: 3, scope: !11375, file: !2218, line: 94, type: !7)
!11380 = !DILocalVariable(name: "DataIdx", scope: !11375, file: !2218, line: 96, type: !7)
!11381 = !DILocation(line: 0, scope: !11375)
!11382 = !DILocation(line: 98, column: 31, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11384, file: !2218, line: 98, column: 5)
!11384 = distinct !DILexicalBlock(scope: !11375, file: !2218, line: 98, column: 5)
!11385 = !DILocation(line: 98, column: 5, scope: !11384)
!11386 = !DILocation(line: 99, column: 26, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11383, file: !2218, line: 98, column: 49)
!11388 = !DILocation(line: 99, column: 22, scope: !11387)
!11389 = !DILocation(line: 99, column: 9, scope: !11387)
!11390 = !DILocation(line: 98, column: 45, scope: !11383)
!11391 = distinct !{!11391, !11385, !11392}
!11392 = !DILocation(line: 100, column: 5, scope: !11384)
!11393 = !DILocation(line: 101, column: 5, scope: !11375)
!11394 = distinct !DISubprogram(name: "SysTick_Set", scope: !2422, file: !2422, line: 62, type: !3571, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !11395)
!11395 = !{!11396, !11397}
!11396 = !DILocalVariable(name: "ticks", arg: 1, scope: !11394, file: !2422, line: 62, type: !61)
!11397 = !DILocalVariable(name: "val", scope: !11394, file: !2422, line: 64, type: !61)
!11398 = !DILocation(line: 0, scope: !11394)
!11399 = !DILocation(line: 67, column: 16, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11394, file: !2422, line: 67, column: 9)
!11401 = !DILocation(line: 67, column: 21, scope: !11400)
!11402 = !DILocation(line: 67, column: 9, scope: !11394)
!11403 = !DILocation(line: 72, column: 20, scope: !11394)
!11404 = !DILocation(line: 75, column: 19, scope: !11394)
!11405 = !DILocation(line: 79, column: 20, scope: !11394)
!11406 = !DILocation(line: 80, column: 20, scope: !11394)
!11407 = !DILocation(line: 83, column: 19, scope: !11394)
!11408 = !DILocation(line: 85, column: 5, scope: !11394)
!11409 = !DILocation(line: 86, column: 1, scope: !11394)
!11410 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !2422, file: !2422, line: 95, type: !291, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !293)
!11411 = !DILocation(line: 97, column: 28, scope: !11410)
!11412 = !DILocation(line: 98, column: 1, scope: !11410)
!11413 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !2422, file: !2422, line: 107, type: !3823, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !293)
!11414 = !DILocation(line: 109, column: 12, scope: !11413)
!11415 = !DILocation(line: 109, column: 5, scope: !11413)
!11416 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2422, file: !2422, line: 119, type: !291, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !11417)
!11417 = !{!11418}
!11418 = !DILocalVariable(name: "cm_mux_sel", scope: !11416, file: !2422, line: 121, type: !395)
!11419 = !DILocation(line: 121, column: 38, scope: !11416)
!11420 = !DILocation(line: 121, column: 26, scope: !11416)
!11421 = !DILocation(line: 0, scope: !11416)
!11422 = !DILocation(line: 123, column: 5, scope: !11416)
!11423 = !DILocation(line: 132, column: 13, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11416, file: !2422, line: 123, column: 25)
!11425 = !DILocation(line: 140, column: 13, scope: !11424)
!11426 = !DILocation(line: 0, scope: !11424)
!11427 = !DILocation(line: 146, column: 26, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11416, file: !2422, line: 146, column: 9)
!11429 = !DILocation(line: 146, column: 50, scope: !11428)
!11430 = !DILocation(line: 146, column: 41, scope: !11428)
!11431 = !DILocation(line: 148, column: 25, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11428, file: !2422, line: 147, column: 52)
!11433 = !DILocation(line: 149, column: 5, scope: !11432)
!11434 = !DILocation(line: 150, column: 1, scope: !11416)
!11435 = distinct !DISubprogram(name: "SystemInit", scope: !2422, file: !2422, line: 158, type: !291, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !293)
!11436 = !DILocation(line: 162, column: 16, scope: !11435)
!11437 = !DILocation(line: 166, column: 16, scope: !11435)
!11438 = !DILocation(line: 169, column: 16, scope: !11435)
!11439 = !DILocation(line: 172, column: 1, scope: !11435)
!11440 = distinct !DISubprogram(name: "CachePreInit", scope: !2422, file: !2422, line: 180, type: !291, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2421, retainedNodes: !293)
!11441 = !DILocation(line: 183, column: 22, scope: !11440)
!11442 = !DILocation(line: 186, column: 21, scope: !11440)
!11443 = !DILocation(line: 189, column: 21, scope: !11440)
!11444 = !DILocation(line: 192, column: 29, scope: !11440)
!11445 = !DILocation(line: 193, column: 33, scope: !11440)
!11446 = !DILocation(line: 195, column: 28, scope: !11440)
!11447 = !DILocation(line: 200, column: 30, scope: !11440)
!11448 = !DILocation(line: 214, column: 1, scope: !11440)
