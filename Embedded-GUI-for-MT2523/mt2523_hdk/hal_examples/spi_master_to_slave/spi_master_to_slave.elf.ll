; ModuleID = './build/spi_master_to_slave.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.uart_callback_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %struct.anon, %struct.anon, %struct.anon, i32, %struct.anon, %struct.anon, i32, %struct.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.SPI_MASTER_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon.10 = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon.10*, %struct.anon.10*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hal_cache_region_config_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.hal_cache_region_config_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%struct.hal_spi_master_config_t = type { i32, i32, i32, i32, i32 }
%struct.hal_spi_master_send_and_receive_config_t = type { i8*, i32, i8*, i32 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon.10*, %struct.anon.10*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@g_cache_status = dso_local global i8 0, align 1, !dbg !0
@g_cache_con = external dso_local local_unnamed_addr global %union.CACHE_CON_Type, align 4
@g_cache_region_en = external dso_local local_unnamed_addr global i32, align 4
@g_cache_entry = external dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type], align 4
@.str = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt2523/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !92
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !279
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !342
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !339
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !294
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !316
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !343
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !626
@.str.35 = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1.36 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.uart_callback_t] zeroinitializer, align 4, !dbg !737
@g_uart_dma_config = internal unnamed_addr global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !755
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !769
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !780
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !750
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !781
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !853
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !858
@.str.81 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.1.82 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.2 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@g_spi_master_status = internal global [4 x i8] zeroinitializer, align 1, !dbg !866
@__FUNCTION__.hal_spi_master_init = private unnamed_addr constant [20 x i8] c"hal_spi_master_init\00", align 1
@.str.83 = private unnamed_addr constant [23 x i8] c"[SPIM%d][init]:busy.\0D\0A\00", align 1
@g_spix_cg_code = internal unnamed_addr constant [4 x i32] [i32 52, i32 53, i32 54, i32 55], align 4, !dbg !954
@.str.1.84 = private unnamed_addr constant [32 x i8] c"[SPIM%d] Clock enable failed!\0D\0A\00", align 1
@g_spix_irq_code = internal unnamed_addr constant [4 x i32] [i32 43, i32 44, i32 45, i32 46], align 4, !dbg !956
@g_spix_callback = internal unnamed_addr global [4 x void (i32, i8*)*] zeroinitializer, align 4, !dbg !960
@g_spix_user_data = internal unnamed_addr global [4 x i8*] zeroinitializer, align 4, !dbg !968
@g_spix_pri_code = internal unnamed_addr constant [4 x i16] [i16 48, i16 49, i16 50, i16 51], align 2, !dbg !971
@__FUNCTION__.hal_spi_master_send_polling = private unnamed_addr constant [28 x i8] c"hal_spi_master_send_polling\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"[SPIM%d][send_polling]:busy.\0D\0A\00", align 1
@__FUNCTION__.hal_spi_master_send_dma = private unnamed_addr constant [24 x i8] c"hal_spi_master_send_dma\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"[SPIM%d][send_dma]:busy.\0D\0A\00", align 1
@__FUNCTION__.hal_spi_master_send_dma_blocking = private unnamed_addr constant [33 x i8] c"hal_spi_master_send_dma_blocking\00", align 1
@__FUNCTION__.hal_spi_master_send_and_receive_polling = private unnamed_addr constant [40 x i8] c"hal_spi_master_send_and_receive_polling\00", align 1
@.str.4 = private unnamed_addr constant [43 x i8] c"[SPIM%d][send_and_receive_polling]:busy.\0D\0A\00", align 1
@__FUNCTION__.hal_spi_master_send_and_receive_dma = private unnamed_addr constant [36 x i8] c"hal_spi_master_send_and_receive_dma\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"[SPIM%d][send_and_receive_dma]:busy.\0D\0A\00", align 1
@__FUNCTION__.hal_spi_master_send_and_receive_dma_blocking = private unnamed_addr constant [45 x i8] c"hal_spi_master_send_and_receive_dma_blocking\00", align 1
@__FUNCTION__.hal_spi_master_set_chip_select_timing = private unnamed_addr constant [38 x i8] c"hal_spi_master_set_chip_select_timing\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"[SPIM%d][cs_timing]:busy.\0D\0A\00", align 1
@__FUNCTION__.hal_spi_master_set_deassert = private unnamed_addr constant [28 x i8] c"hal_spi_master_set_deassert\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"[SPIM%d][deassert]:busy.\0D\0A\00", align 1
@spi_master_register = dso_local local_unnamed_addr constant [4 x %struct.SPI_MASTER_REGISTER_T*] [%struct.SPI_MASTER_REGISTER_T* inttoptr (i32 -1609498624 to %struct.SPI_MASTER_REGISTER_T*), %struct.SPI_MASTER_REGISTER_T* inttoptr (i32 -1609433088 to %struct.SPI_MASTER_REGISTER_T*), %struct.SPI_MASTER_REGISTER_T* inttoptr (i32 -1609367552 to %struct.SPI_MASTER_REGISTER_T*), %struct.SPI_MASTER_REGISTER_T* inttoptr (i32 -1609302016 to %struct.SPI_MASTER_REGISTER_T*)], align 4, !dbg !980
@g_spi_direction = dso_local local_unnamed_addr global [4 x i32] zeroinitializer, align 4, !dbg !988
@__FUNCTION__.spi_push_data = private unnamed_addr constant [14 x i8] c"spi_push_data\00", align 1
@.str.101 = private unnamed_addr constant [40 x i8] c"[SPIM%d][push_data]:big_endian error.\0D\0A\00", align 1
@g_packet_count = internal unnamed_addr global [4 x i16] zeroinitializer, align 2, !dbg !992
@g_packet_length = internal unnamed_addr global [4 x i16] zeroinitializer, align 2, !dbg !995
@__FUNCTION__.spi_pop_data = private unnamed_addr constant [13 x i8] c"spi_pop_data\00", align 1
@.str.1.104 = private unnamed_addr constant [39 x i8] c"[SPIM%d][pop_data]:big_endian error.\0D\0A\00", align 1
@g_pause_count = internal unnamed_addr global [4 x i32] zeroinitializer, align 4, !dbg !997
@g_small_size_pause_count = internal unnamed_addr global [4 x i32] zeroinitializer, align 4, !dbg !1000
@__FUNCTION__.spi_analyse_transfer_size = private unnamed_addr constant [26 x i8] c"spi_analyse_transfer_size\00", align 1
@.str.2.115 = private unnamed_addr constant [38 x i8] c"[SPIM%d]:pause deassert mode error.\0D\0A\00", align 1
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !1019
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !1109
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !1096
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.126 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1114
@.str.136 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.137 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !1189
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1191
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1193
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1195
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1197
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1199
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1201
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1203
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1205
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1207
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1209
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1522
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1524
@.str.140 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.141 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !1533
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !1526
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !1534
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1586
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1589
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !1622
@nor_egid = dso_local local_unnamed_addr global %struct.anon.10* null, align 4, !dbg !1633
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1949
@RegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1820
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1848
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !1951
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !1658
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1844
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !1846
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !1670
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !1931
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !1934
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }] } }, align 4, !dbg !1964
@BlockLayout = internal unnamed_addr global %struct.hal_cache_region_config_t* null, align 4, !dbg !1823
@BankInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1836
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1807
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1811
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1809
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !1660
@.str.156 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.157 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1936
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !1815
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1832
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1834
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !1991
@.str.162 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.163 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !2051
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !1938
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2052
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !2066
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2068
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2070
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2072
@.str.178 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.179 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !2074
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !2128
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !2130
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !2132
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2144
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2146
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2148
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !2150
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2252
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2254
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2256
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2258
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2260
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2262
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2264
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2266
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2268
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2270
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2272
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2274
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2276
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !2278
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2250
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !2297
@.str.190 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.191 = private unnamed_addr constant [20 x i8] c"welcome to main()\0D\0A\00", align 1
@.str.2.192 = private unnamed_addr constant [61 x i8] c"---spi_master_transfer_data_two_boards_example begins---\0D\0A\0D\0A\00", align 1
@.str.3.193 = private unnamed_addr constant [51 x i8] c"Example will begin to run after 10 secound....\0D\0A\0D\0A\00", align 1
@.str.4.194 = private unnamed_addr constant [26 x i8] c"SPI Master GPIOs config\0D\0A\00", align 1
@.str.5.195 = private unnamed_addr constant [23 x i8] c"SPI Master port init\0D\0A\00", align 1
@.str.6.196 = private unnamed_addr constant [25 x i8] c"SPI master init failed\0D\0A\00", align 1
@.str.7.197 = private unnamed_addr constant [40 x i8] c"SPI master set advanced config failed\0D\0A\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"SPI master register callback failed\0D\0A\00", align 1
@.str.9 = private unnamed_addr constant [54 x i8] c"SPI Master starts to send PWON command to SPI slave\0D\0A\00", align 1
@.str.10 = private unnamed_addr constant [39 x i8] c"  SPI master sends PWON command fail\0D\0A\00", align 1
@.str.11 = private unnamed_addr constant [52 x i8] c"SPI Master starts to send CW command to SPI slave\0D\0A\00", align 1
@.str.12 = private unnamed_addr constant [38 x i8] c"  SPI master send CW command failed\0D\0A\00", align 1
@.str.13 = private unnamed_addr constant [52 x i8] c"SPI Master starts to send WR command to SPI slave\0D\0A\00", align 1
@g_spi_transaction_finish = internal global i8 0, align 1, !dbg !2309
@g_transfer_tx_big_buffer = internal global [1025 x i8] zeroinitializer, section ".noncached_zidata", align 4, !dbg !2316
@.str.14 = private unnamed_addr constant [38 x i8] c"  SPI master send WR command failed\0D\0A\00", align 1
@.str.15 = private unnamed_addr constant [62 x i8] c"Re-initialize the transfer buffer to zero for later receive\0D\0A\00", align 1
@g_transfer_rx_big_buffer = internal global [1025 x i8] zeroinitializer, section ".noncached_zidata", align 4, !dbg !2321
@.str.16 = private unnamed_addr constant [52 x i8] c"SPI master starts to send CR command to SPI slave\0D\0A\00", align 1
@.str.17 = private unnamed_addr constant [38 x i8] c"  SPI master send CR command failed\0D\0A\00", align 1
@.str.18 = private unnamed_addr constant [52 x i8] c"SPI master starts to send RD command to SPI slave\0D\0A\00", align 1
@g_transfer_small_buffer = internal global [64 x i8] zeroinitializer, section ".noncached_zidata", align 4, !dbg !2323
@.str.19 = private unnamed_addr constant [38 x i8] c"  SPI master send RD command failed\0D\0A\00", align 1
@.str.20 = private unnamed_addr constant [52 x i8] c"SPI master starts to send RS command to SPI slave\0D\0A\00", align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"Start to check data integrity\0D\0A\00", align 1
@.str.22 = private unnamed_addr constant [20 x i8] c"  Data check fail\0D\0A\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"  Data check pass\0D\0A\00", align 1
@.str.24 = private unnamed_addr constant [55 x i8] c"SPI master starts to send PWOFF command to SPI slave\0D\0A\00", align 1
@.str.25 = private unnamed_addr constant [41 x i8] c"  SPI master send PWOFF command failed\0D\0A\00", align 1
@.str.26 = private unnamed_addr constant [22 x i8] c"SPI master deinit\0D\0A\0D\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"  SPI master deinit failed\0D\0A\00", align 1
@.str.28 = private unnamed_addr constant [57 x i8] c"---spi_master_transfer_data_two_boards_example ends---\0D\0A\00", align 1
@.str.29 = private unnamed_addr constant [48 x i8] c"  spi_master_dma_callback() enter, event = %d\0D\0A\00", align 1
@.str.30 = private unnamed_addr constant [43 x i8] c"SPI master query status of slaver failed\0D\0A\00", align 1
@.str.31 = private unnamed_addr constant [25 x i8] c"  Status receive: 0x%x\0D\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !2326
@end = external dso_local global i8, align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !2530
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2638
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 07:59:10 GMT +00:00\00", align 1, !dbg !2640
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2645
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !2651

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !2744 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2752
  call void @llvm.dbg.value(metadata i32 %1, metadata !2751, metadata !DIExpression()), !dbg !2753
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !2754, !range !2756
  %3 = icmp eq i8 %2, 0, !dbg !2754
  br i1 %3, label %5, label %4, !dbg !2757

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2758
  br label %15, !dbg !2760

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !2761
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2763
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2764
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2765
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2766
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2767
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2768
  call void @llvm.dbg.value(metadata i32 0, metadata !2749, metadata !DIExpression()), !dbg !2753
  br label %7, !dbg !2769

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !2749, metadata !DIExpression()), !dbg !2753
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %8, !dbg !2771
  store volatile i32 0, i32* %9, align 4, !dbg !2774
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %8, !dbg !2775
  store volatile i32 0, i32* %10, align 4, !dbg !2776
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !2777
  store i32 0, i32* %11, align 4, !dbg !2778
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !2779
  store i32 0, i32* %12, align 4, !dbg !2780
  %13 = add nuw nsw i32 %8, 1, !dbg !2781
  call void @llvm.dbg.value(metadata i32 %13, metadata !2749, metadata !DIExpression()), !dbg !2753
  %14 = icmp eq i32 %13, 16, !dbg !2782
  br i1 %14, label %15, label %7, !dbg !2769, !llvm.loop !2783

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !2753
  ret i32 %16, !dbg !2785
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !2786 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2789
  call void @llvm.dbg.value(metadata i32 %1, metadata !2788, metadata !DIExpression()), !dbg !2790
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2791
  %3 = and i32 %2, -31, !dbg !2791
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2791
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2792
  %5 = or i32 %4, 19, !dbg !2792
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2792
  %6 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2793
  %7 = and i32 %6, -31, !dbg !2793
  store volatile i32 %7, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2793
  %8 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2794
  %9 = or i32 %8, 3, !dbg !2794
  store volatile i32 %9, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2794
  tail call void asm sideeffect "isb", ""() #22, !dbg !2795, !srcloc !2799
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2800
  ret i32 0, !dbg !2801
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !2802 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2805
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2806
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2807
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2808
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2809
  call void @llvm.dbg.value(metadata i32 0, metadata !2804, metadata !DIExpression()), !dbg !2810
  br label %2, !dbg !2811

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !2804, metadata !DIExpression()), !dbg !2810
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %3, !dbg !2813
  store volatile i32 0, i32* %4, align 4, !dbg !2816
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %3, !dbg !2817
  store volatile i32 0, i32* %5, align 4, !dbg !2818
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !2819
  store i32 0, i32* %6, align 4, !dbg !2820
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !2821
  store i32 0, i32* %7, align 4, !dbg !2822
  %8 = add nuw nsw i32 %3, 1, !dbg !2823
  call void @llvm.dbg.value(metadata i32 %8, metadata !2804, metadata !DIExpression()), !dbg !2810
  %9 = icmp eq i32 %8, 16, !dbg !2824
  br i1 %9, label %10, label %2, !dbg !2811, !llvm.loop !2825

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !2827
  ret i32 0, !dbg !2828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #2 !dbg !2829 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2830
  %2 = and i32 %1, 768, !dbg !2832
  %3 = icmp eq i32 %2, 0, !dbg !2832
  br i1 %3, label %8, label %4, !dbg !2833

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2834
  %6 = or i32 %5, 13, !dbg !2834
  store volatile i32 %6, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2834
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2835
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2836
  br label %8, !dbg !2837

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !2838
  ret i32 %9, !dbg !2839
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !2840 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2843
  call void @llvm.dbg.value(metadata i32 %1, metadata !2842, metadata !DIExpression()), !dbg !2844
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2845
  %3 = and i32 %2, 1, !dbg !2847
  %4 = icmp eq i32 %3, 0, !dbg !2847
  br i1 %4, label %7, label %5, !dbg !2848

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2849
  br label %7, !dbg !2851

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2852
  %9 = and i32 %8, -2, !dbg !2852
  store volatile i32 %9, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2852
  %10 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2853
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2854
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2855
  ret i32 0, !dbg !2856
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #2 !dbg !2857 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2861, metadata !DIExpression()), !dbg !2862
  %2 = icmp ugt i32 %0, 15, !dbg !2863
  br i1 %2, label %13, label %3, !dbg !2865

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2866
  %5 = load volatile i32, i32* %4, align 4, !dbg !2866
  %6 = and i32 %5, 256, !dbg !2868
  %7 = icmp eq i32 %6, 0, !dbg !2868
  br i1 %7, label %13, label %8, !dbg !2869

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !2870
  %10 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2872
  %11 = or i32 %10, %9, !dbg !2872
  store volatile i32 %11, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2872
  %12 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2873
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !2874
  br label %13, !dbg !2875

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !2862
  ret i32 %14, !dbg !2876
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #2 !dbg !2877 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2879, metadata !DIExpression()), !dbg !2880
  %2 = icmp ugt i32 %0, 15, !dbg !2881
  br i1 %2, label %11, label %3, !dbg !2883

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !2884
  %5 = xor i32 %4, -1, !dbg !2885
  %6 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2886
  %7 = and i32 %6, %5, !dbg !2886
  store volatile i32 %7, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2886
  %8 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2887
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !2888
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2889
  store i32 0, i32* %9, align 4, !dbg !2890
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2891
  store i32 0, i32* %10, align 4, !dbg !2892
  br label %11, !dbg !2893

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !2880
  ret i32 %12, !dbg !2894
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #2 !dbg !2895 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2900, metadata !DIExpression()), !dbg !2901
  %2 = icmp ugt i32 %0, 3, !dbg !2902
  br i1 %2, label %13, label %3, !dbg !2904

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2905
  %5 = and i32 %4, -769, !dbg !2905
  store volatile i32 %5, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2905
  %6 = shl nuw nsw i32 %0, 8, !dbg !2906
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2907
  %8 = or i32 %7, %6, !dbg !2907
  store volatile i32 %8, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2907
  %9 = icmp eq i32 %0, 0, !dbg !2908
  br i1 %9, label %10, label %11, !dbg !2910

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2911
  br label %11, !dbg !2913

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2914
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2915
  br label %13, !dbg !2916

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !2901
  ret i32 %14, !dbg !2917
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !2918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2929, metadata !DIExpression()), !dbg !2931
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !2930, metadata !DIExpression()), !dbg !2931
  %3 = icmp ugt i32 %0, 15, !dbg !2932
  br i1 %3, label %30, label %4, !dbg !2934

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !2935
  br i1 %5, label %30, label %6, !dbg !2937

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !2938
  %8 = load i32, i32* %7, align 4, !dbg !2938
  %9 = and i32 %8, 4095, !dbg !2940
  %10 = icmp eq i32 %9, 0, !dbg !2940
  br i1 %10, label %12, label %11, !dbg !2941

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !2942
  unreachable, !dbg !2942

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !2944
  %14 = load i32, i32* %13, align 4, !dbg !2944
  %15 = and i32 %14, 4095, !dbg !2946
  %16 = icmp eq i32 %15, 0, !dbg !2946
  br i1 %16, label %18, label %17, !dbg !2947

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !2948
  unreachable, !dbg !2948

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2950
  store volatile i32 %8, i32* %19, align 4, !dbg !2951
  %20 = load i32, i32* %7, align 4, !dbg !2952
  %21 = load i32, i32* %13, align 4, !dbg !2953
  %22 = add i32 %21, %20, !dbg !2954
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %0, !dbg !2955
  store volatile i32 %22, i32* %23, align 4, !dbg !2956
  %24 = load volatile i32, i32* %19, align 4, !dbg !2957
  %25 = or i32 %24, 256, !dbg !2957
  store volatile i32 %25, i32* %19, align 4, !dbg !2957
  %26 = load volatile i32, i32* %19, align 4, !dbg !2958
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2959
  store i32 %26, i32* %27, align 4, !dbg !2960
  %28 = load volatile i32, i32* %23, align 4, !dbg !2961
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2962
  store i32 %28, i32* %29, align 4, !dbg !2963
  br label %30, !dbg !2964

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !2931
  ret i32 %31, !dbg !2965
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2970, metadata !DIExpression()), !dbg !2972
  %2 = and i32 %0, 31, !dbg !2973
  %3 = icmp eq i32 %2, 0, !dbg !2973
  br i1 %3, label %4, label %9, !dbg !2975

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2976
  call void @llvm.dbg.value(metadata i32 %5, metadata !2971, metadata !DIExpression()), !dbg !2972
  %6 = and i32 %0, -32, !dbg !2977
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2978
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2979
  %8 = or i32 %7, 5, !dbg !2979
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2979
  tail call void asm sideeffect "isb", ""() #22, !dbg !2980, !srcloc !2799
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !2982
  br label %9, !dbg !2983

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !2972
  ret i32 %10, !dbg !2984
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !2985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2989, metadata !DIExpression()), !dbg !2993
  call void @llvm.dbg.value(metadata i32 %1, metadata !2990, metadata !DIExpression()), !dbg !2993
  %3 = add i32 %1, %0, !dbg !2994
  call void @llvm.dbg.value(metadata i32 %3, metadata !2992, metadata !DIExpression()), !dbg !2993
  %4 = or i32 %1, %0, !dbg !2995
  %5 = and i32 %4, 31, !dbg !2995
  %6 = icmp eq i32 %5, 0, !dbg !2995
  br i1 %6, label %7, label %16, !dbg !2995

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2997
  call void @llvm.dbg.value(metadata i32 %8, metadata !2991, metadata !DIExpression()), !dbg !2993
  call void @llvm.dbg.value(metadata i32 %0, metadata !2989, metadata !DIExpression()), !dbg !2993
  %9 = icmp ugt i32 %3, %0, !dbg !2998
  br i1 %9, label %10, label %15, !dbg !2999

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !2989, metadata !DIExpression()), !dbg !2993
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #21, !dbg !3000
  %13 = add i32 %11, 32, !dbg !3002
  call void @llvm.dbg.value(metadata i32 %13, metadata !2989, metadata !DIExpression()), !dbg !2993
  %14 = icmp ult i32 %13, %3, !dbg !2998
  br i1 %14, label %10, label %15, !dbg !2999, !llvm.loop !3003

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !3005, !srcloc !2799
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !3007
  br label %16, !dbg !3008

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !2993
  ret i32 %17, !dbg !3009
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3010 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3012, metadata !DIExpression()), !dbg !3014
  %2 = and i32 %0, 31, !dbg !3015
  %3 = icmp eq i32 %2, 0, !dbg !3015
  br i1 %3, label %4, label %9, !dbg !3017

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3018
  call void @llvm.dbg.value(metadata i32 %5, metadata !3013, metadata !DIExpression()), !dbg !3014
  %6 = and i32 %0, -32, !dbg !3019
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3020
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3021
  %8 = or i32 %7, 21, !dbg !3021
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3021
  tail call void asm sideeffect "isb", ""() #22, !dbg !3022, !srcloc !2799
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !3024
  br label %9, !dbg !3025

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !3014
  ret i32 %10, !dbg !3026
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3027 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3029, metadata !DIExpression()), !dbg !3033
  call void @llvm.dbg.value(metadata i32 %1, metadata !3030, metadata !DIExpression()), !dbg !3033
  %3 = add i32 %1, %0, !dbg !3034
  call void @llvm.dbg.value(metadata i32 %3, metadata !3032, metadata !DIExpression()), !dbg !3033
  %4 = or i32 %1, %0, !dbg !3035
  %5 = and i32 %4, 31, !dbg !3035
  %6 = icmp eq i32 %5, 0, !dbg !3035
  br i1 %6, label %7, label %16, !dbg !3035

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3037
  call void @llvm.dbg.value(metadata i32 %8, metadata !3031, metadata !DIExpression()), !dbg !3033
  call void @llvm.dbg.value(metadata i32 %0, metadata !3029, metadata !DIExpression()), !dbg !3033
  %9 = icmp ugt i32 %3, %0, !dbg !3038
  br i1 %9, label %10, label %15, !dbg !3039

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !3029, metadata !DIExpression()), !dbg !3033
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #21, !dbg !3040
  %13 = add i32 %11, 32, !dbg !3042
  call void @llvm.dbg.value(metadata i32 %13, metadata !3029, metadata !DIExpression()), !dbg !3033
  %14 = icmp ult i32 %13, %3, !dbg !3038
  br i1 %14, label %10, label %15, !dbg !3039, !llvm.loop !3043

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !3045, !srcloc !2799
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !3047
  br label %16, !dbg !3048

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !3033
  ret i32 %17, !dbg !3049
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !3050 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3053
  call void @llvm.dbg.value(metadata i32 %1, metadata !3052, metadata !DIExpression()), !dbg !3054
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3055
  %3 = and i32 %2, -31, !dbg !3055
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3055
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3056
  %5 = or i32 %4, 19, !dbg !3056
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3056
  tail call void asm sideeffect "isb", ""() #22, !dbg !3057, !srcloc !2799
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !3059
  ret i32 0, !dbg !3060
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #2 !dbg !3061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3065, metadata !DIExpression()), !dbg !3067
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3068
  %3 = and i32 %2, 8, !dbg !3070
  %4 = icmp eq i32 %3, 0, !dbg !3070
  br i1 %4, label %23, label %5, !dbg !3071

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3066, metadata !DIExpression()), !dbg !3067
  %7 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3072
  %8 = shl nuw nsw i32 1, %6, !dbg !3077
  %9 = and i32 %7, %8, !dbg !3078
  %10 = icmp eq i32 %9, 0, !dbg !3078
  br i1 %10, label %20, label %11, !dbg !3079

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %6, !dbg !3080
  %13 = load volatile i32, i32* %12, align 4, !dbg !3080
  %14 = and i32 %13, -257, !dbg !3083
  %15 = icmp ugt i32 %14, %0, !dbg !3084
  br i1 %15, label %20, label %16, !dbg !3085

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %6, !dbg !3086
  %18 = load volatile i32, i32* %17, align 4, !dbg !3086
  %19 = icmp ugt i32 %18, %0, !dbg !3087
  br i1 %19, label %23, label %20, !dbg !3088

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !3089
  call void @llvm.dbg.value(metadata i32 %21, metadata !3066, metadata !DIExpression()), !dbg !3067
  %22 = icmp eq i32 %21, 16, !dbg !3090
  br i1 %22, label %23, label %5, !dbg !3091, !llvm.loop !3092

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !3067
  ret i1 %24, !dbg !3094
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !3095 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3101, metadata !DIExpression()), !dbg !3102
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3103
  br i1 %2, label %3, label %26, !dbg !3105

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3106
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3108
  %6 = load i32, i32* %5, align 4, !dbg !3108
  %7 = icmp eq i32 %6, 1, !dbg !3109
  br i1 %7, label %26, label %8, !dbg !3110

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3111
  %10 = load i8, i8* %9, align 4, !dbg !3111, !range !2756
  %11 = icmp eq i8 %10, 0, !dbg !3111
  br i1 %11, label %12, label %26, !dbg !3112

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3113
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #20, !dbg !3114
  tail call void @gpt_open_clock_source() #20, !dbg !3115
  store i8 1, i8* %9, align 4, !dbg !3116
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3117
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !3117
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !3118
  %18 = load volatile i32, i32* %17, align 4, !dbg !3119
  %19 = and i32 %18, -2, !dbg !3119
  store volatile i32 %19, i32* %17, align 4, !dbg !3119
  %20 = shl nuw i32 1, %0, !dbg !3120
  %21 = xor i32 %20, -1, !dbg !3121
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !3122
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !3123
  %24 = load volatile i32, i32* %23, align 4, !dbg !3124
  %25 = and i32 %24, %21, !dbg !3124
  store volatile i32 %25, i32* %23, align 4, !dbg !3124
  br label %26, !dbg !3125

26:                                               ; preds = %3, %8, %1, %12
  %27 = phi i32 [ 0, %12 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], !dbg !3102
  ret i32 %27, !dbg !3126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #4 !dbg !3127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3131, metadata !DIExpression()), !dbg !3132
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3133, !range !2756
  %3 = icmp ne i8 %2, 0, !dbg !3135
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !3136
  %7 = and i1 %5, %6, !dbg !3136
  ret i1 %7, !dbg !3137
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !3138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3140, metadata !DIExpression()), !dbg !3141
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3142
  br i1 %2, label %3, label %14, !dbg !3144

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3145
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3147
  %6 = load i32, i32* %5, align 4, !dbg !3147
  %7 = icmp eq i32 %6, 1, !dbg !3148
  br i1 %7, label %14, label %8, !dbg !3149

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3150
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #20, !dbg !3151
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3152
  store i8 0, i8* %11, align 4, !dbg !3153
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3154
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !3154
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #20, !dbg !3155
  br label %14, !dbg !3156

14:                                               ; preds = %3, %1, %8
  %15 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !3141
  ret i32 %15, !dbg !3157
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3163, metadata !DIExpression()), !dbg !3165
  call void @llvm.dbg.value(metadata i32* %1, metadata !3164, metadata !DIExpression()), !dbg !3165
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !3166

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3167
  %5 = icmp eq i32 %4, 1, !dbg !3171
  br i1 %5, label %8, label %6, !dbg !3172

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3173
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #20, !dbg !3175
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3176
  br label %8, !dbg !3177

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3178
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #20, !dbg !3179
  br label %20, !dbg !3180

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3181
  %13 = icmp eq i32 %12, 1, !dbg !3185
  br i1 %13, label %16, label %14, !dbg !3186

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3187
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #20, !dbg !3189
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3190
  br label %16, !dbg !3191

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3192
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #20, !dbg !3193
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #20, !dbg !3194
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !3195
  store i32 %21, i32* %1, align 4, !dbg !3195
  br label %22, !dbg !3196

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !3165
  ret i32 %23, !dbg !3197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #6 section ".tcm_code" !dbg !3198 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3202, metadata !DIExpression()), !dbg !3205
  call void @llvm.dbg.value(metadata i32 %1, metadata !3203, metadata !DIExpression()), !dbg !3205
  call void @llvm.dbg.value(metadata i32* %2, metadata !3204, metadata !DIExpression()), !dbg !3205
  %4 = icmp eq i32* %2, null, !dbg !3206
  br i1 %4, label %7, label %5, !dbg !3208

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !3209
  store i32 %6, i32* %2, align 4, !dbg !3209
  br label %7, !dbg !3211

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !3205
  ret i32 %8, !dbg !3212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !3213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3218, metadata !DIExpression()), !dbg !3220
  call void @llvm.dbg.value(metadata i32* %1, metadata !3219, metadata !DIExpression()), !dbg !3220
  %3 = icmp ugt i32 %0, 5, !dbg !3221
  br i1 %3, label %7, label %4, !dbg !3223

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3224
  %6 = load i32, i32* %5, align 4, !dbg !3224
  store i32 %6, i32* %1, align 4, !dbg !3225
  br label %7, !dbg !3226

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !3220
  ret i32 %8, !dbg !3227
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !3228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3232, metadata !DIExpression()), !dbg !3235
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !3233, metadata !DIExpression()), !dbg !3235
  call void @llvm.dbg.value(metadata i8* %2, metadata !3234, metadata !DIExpression()), !dbg !3235
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3236
  br i1 %4, label %5, label %18, !dbg !3238

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3239
  %7 = load i32, i32* %6, align 4, !dbg !3239
  %8 = icmp eq i32 %7, 1, !dbg !3241
  br i1 %8, label %18, label %9, !dbg !3242

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3243
  %11 = load i8, i8* %10, align 4, !dbg !3243, !range !2756
  %12 = icmp eq i8 %11, 1, !dbg !3244
  br i1 %12, label %13, label %18, !dbg !3245

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !3246
  br i1 %14, label %18, label %15, !dbg !3248

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !3249
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !3250
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !3251
  store i8* %2, i8** %17, align 4, !dbg !3252
  tail call void @gpt_nvic_register() #20, !dbg !3253
  br label %18, !dbg !3254

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !3235
  ret i32 %19, !dbg !3255
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3256 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3261, metadata !DIExpression()), !dbg !3265
  call void @llvm.dbg.value(metadata i32 %1, metadata !3262, metadata !DIExpression()), !dbg !3265
  call void @llvm.dbg.value(metadata i32 %2, metadata !3263, metadata !DIExpression()), !dbg !3265
  %5 = bitcast i32* %4 to i8*, !dbg !3266
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3266
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3264, metadata !DIExpression()), !dbg !3267
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3268
  br i1 %6, label %7, label %51, !dbg !3270

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3271
  %9 = load i32, i32* %8, align 4, !dbg !3271
  %10 = icmp eq i32 %9, 1, !dbg !3273
  br i1 %10, label %51, label %11, !dbg !3274

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3275
  %13 = load i8, i8* %12, align 4, !dbg !3275, !range !2756
  %14 = icmp eq i8 %13, 1, !dbg !3276
  br i1 %14, label %15, label %51, !dbg !3277

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !3278
  br i1 %16, label %51, label %17, !dbg !3280

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3281
  store volatile i32 %18, i32* %4, align 4, !dbg !3282
  tail call void @gpt_open_clock_source() #20, !dbg !3283
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3284
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3284
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !3285
  %22 = load volatile i32, i32* %21, align 4, !dbg !3286
  %23 = and i32 %22, -2, !dbg !3286
  store volatile i32 %23, i32* %21, align 4, !dbg !3286
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3287
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !3288
  %26 = load volatile i32, i32* %25, align 4, !dbg !3289
  %27 = and i32 %26, -2, !dbg !3289
  store volatile i32 %27, i32* %25, align 4, !dbg !3289
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3290
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !3291
  store volatile i32 16, i32* %29, align 4, !dbg !3292
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #20, !dbg !3293
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3294
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !3295
  store volatile i32 %30, i32* %32, align 4, !dbg !3296
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3297
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !3298
  store volatile i32 1, i32* %34, align 4, !dbg !3299
  %35 = shl i32 %2, 4, !dbg !3300
  %36 = or i32 %35, 2, !dbg !3301
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3302
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !3303
  store volatile i32 %36, i32* %38, align 4, !dbg !3304
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !3305

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !3306
  %43 = icmp eq i32 %42, 0, !dbg !3305
  br i1 %43, label %44, label %41, !dbg !3305, !llvm.loop !3307

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3309
  %46 = load volatile i32, i32* %45, align 4, !dbg !3310
  %47 = or i32 %46, 1, !dbg !3310
  store volatile i32 %47, i32* %45, align 4, !dbg !3310
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3311
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !3312
  store volatile i32 1, i32* %49, align 4, !dbg !3313
  store i32 1, i32* %8, align 4, !dbg !3314
  %50 = load volatile i32, i32* %4, align 4, !dbg !3315
  tail call void @restore_interrupt_mask(i32 noundef %50) #20, !dbg !3316
  br label %51, !dbg !3317

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !3265
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3318
  ret i32 %52, !dbg !3318
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3319 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3323, metadata !DIExpression()), !dbg !3324
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3325
  %3 = icmp eq i32 %2, 1, !dbg !3327
  br i1 %3, label %6, label %4, !dbg !3328

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3329
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #20, !dbg !3331
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3332
  br label %6, !dbg !3333

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3334
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #20, !dbg !3335
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3336
  ret i32 0, !dbg !3337
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3338 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3340, metadata !DIExpression()), !dbg !3344
  call void @llvm.dbg.value(metadata i32 %1, metadata !3341, metadata !DIExpression()), !dbg !3344
  call void @llvm.dbg.value(metadata i32 %2, metadata !3342, metadata !DIExpression()), !dbg !3344
  %5 = bitcast i32* %4 to i8*, !dbg !3345
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3345
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3343, metadata !DIExpression()), !dbg !3346
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3347
  br i1 %6, label %7, label %50, !dbg !3349

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3350
  %9 = load i32, i32* %8, align 4, !dbg !3350
  %10 = icmp eq i32 %9, 1, !dbg !3352
  br i1 %10, label %50, label %11, !dbg !3353

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3354
  %13 = load i8, i8* %12, align 4, !dbg !3354, !range !2756
  %14 = icmp eq i8 %13, 1, !dbg !3355
  br i1 %14, label %15, label %50, !dbg !3356

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3357
  store i8 1, i8* %16, align 1, !dbg !3358
  %17 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3359
  store volatile i32 %17, i32* %4, align 4, !dbg !3360
  tail call void @gpt_open_clock_source() #20, !dbg !3361
  %18 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3362
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3362
  %20 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %19, i32 0, i32 2, !dbg !3363
  %21 = load volatile i32, i32* %20, align 4, !dbg !3364
  %22 = and i32 %21, -2, !dbg !3364
  store volatile i32 %22, i32* %20, align 4, !dbg !3364
  %23 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3365
  %24 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %23, i32 0, i32 0, !dbg !3366
  %25 = load volatile i32, i32* %24, align 4, !dbg !3367
  %26 = and i32 %25, -2, !dbg !3367
  store volatile i32 %26, i32* %24, align 4, !dbg !3367
  %27 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3368
  %28 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %27, i32 0, i32 1, !dbg !3369
  store volatile i32 12, i32* %28, align 4, !dbg !3370
  %29 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #20, !dbg !3371
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3372
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 6, !dbg !3373
  store volatile i32 %29, i32* %31, align 4, !dbg !3374
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3375
  %33 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %32, i32 0, i32 4, !dbg !3376
  store volatile i32 1, i32* %33, align 4, !dbg !3377
  %34 = shl i32 %2, 4, !dbg !3378
  %35 = or i32 %34, 2, !dbg !3379
  %36 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3380
  %37 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %36, i32 0, i32 0, !dbg !3381
  store volatile i32 %35, i32* %37, align 4, !dbg !3382
  %38 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4
  %39 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 5
  br label %40, !dbg !3383

40:                                               ; preds = %40, %15
  %41 = load volatile i32, i32* %39, align 4, !dbg !3384
  %42 = icmp eq i32 %41, 0, !dbg !3383
  br i1 %42, label %43, label %40, !dbg !3383, !llvm.loop !3385

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 0, !dbg !3387
  %45 = load volatile i32, i32* %44, align 4, !dbg !3388
  %46 = or i32 %45, 1, !dbg !3388
  store volatile i32 %46, i32* %44, align 4, !dbg !3388
  %47 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3389
  %48 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %47, i32 0, i32 2, !dbg !3390
  store volatile i32 1, i32* %48, align 4, !dbg !3391
  %49 = load volatile i32, i32* %4, align 4, !dbg !3392
  tail call void @restore_interrupt_mask(i32 noundef %49) #20, !dbg !3393
  store i32 1, i32* %8, align 4, !dbg !3394
  br label %50, !dbg !3395

50:                                               ; preds = %7, %11, %3, %43
  %51 = phi i32 [ 0, %43 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !3344
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3396
  ret i32 %51, !dbg !3396
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3399, metadata !DIExpression()), !dbg !3400
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3401
  %3 = icmp eq i32 %2, 1, !dbg !3403
  br i1 %3, label %6, label %4, !dbg !3404

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3405
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #20, !dbg !3407
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3408
  br label %6, !dbg !3409

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3410
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #20, !dbg !3411
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3412
  ret i32 0, !dbg !3413
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !3414 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3416, metadata !DIExpression()), !dbg !3418
  %3 = bitcast i32* %2 to i8*, !dbg !3419
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3419
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3417, metadata !DIExpression()), !dbg !3420
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3421
  br i1 %4, label %5, label %24, !dbg !3423

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3424
  store volatile i32 %6, i32* %2, align 4, !dbg !3425
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3426
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3426
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !3427
  %10 = load volatile i32, i32* %9, align 4, !dbg !3428
  %11 = and i32 %10, -2, !dbg !3428
  store volatile i32 %11, i32* %9, align 4, !dbg !3428
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3429
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3430
  %14 = load volatile i32, i32* %13, align 4, !dbg !3431
  %15 = and i32 %14, -2, !dbg !3431
  store volatile i32 %15, i32* %13, align 4, !dbg !3431
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3432
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !3433
  store volatile i32 1, i32* %17, align 4, !dbg !3434
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3435
  store i32 0, i32* %18, align 4, !dbg !3436
  %19 = load volatile i32, i32* %2, align 4, !dbg !3437
  tail call void @restore_interrupt_mask(i32 noundef %19) #20, !dbg !3438
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3439
  %21 = load i8, i8* %20, align 1, !dbg !3439, !range !2756
  %22 = icmp eq i8 %21, 0, !dbg !3439
  br i1 %22, label %24, label %23, !dbg !3441

23:                                               ; preds = %5
  store i8 0, i8* %20, align 1, !dbg !3442
  br label %24, !dbg !3444

24:                                               ; preds = %5, %23, %1
  %25 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !3418
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3445
  ret i32 %25, !dbg !3445
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !3446 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3450, metadata !DIExpression()), !dbg !3453
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3454
  %3 = icmp ugt i32 %2, 31, !dbg !3456
  br i1 %3, label %13, label %4, !dbg !3457

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !3458
  br i1 %5, label %13, label %6, !dbg !3460

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3461
  call void @llvm.dbg.value(metadata i32 %7, metadata !3452, metadata !DIExpression()), !dbg !3453
  %8 = tail call i32 @gpt_sw_get_free_timer() #20, !dbg !3462
  call void @llvm.dbg.value(metadata i32 %8, metadata !3451, metadata !DIExpression()), !dbg !3453
  %9 = or i32 %8, -559087616, !dbg !3463
  store i32 %9, i32* %0, align 4, !dbg !3464
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !3465
  store i8 1, i8* %10, align 4, !dbg !3466
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3467
  %12 = add i32 %11, 1, !dbg !3467
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3467
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !3468
  br label %13, !dbg !3469

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !3453
  ret i32 %14, !dbg !3470
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #9 !dbg !3471 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3473, metadata !DIExpression()), !dbg !3475
  %3 = bitcast i32* %2 to i8*, !dbg !3476
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3476
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3474, metadata !DIExpression()), !dbg !3477
  %4 = and i32 %0, -559087616, !dbg !3478
  %5 = icmp eq i32 %4, -559087616, !dbg !3480
  br i1 %5, label %6, label %24, !dbg !3481

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !3482
  store volatile i32 %7, i32* %2, align 4, !dbg !3483
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3484
  %9 = icmp eq i32 %8, 0, !dbg !3486
  br i1 %9, label %24, label %10, !dbg !3487

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !3488
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !3490
  %13 = load i8, i8* %12, align 1, !dbg !3490, !range !2756
  %14 = icmp eq i8 %13, 0, !dbg !3490
  br i1 %14, label %15, label %24, !dbg !3491

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !3492
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !3494
  %18 = load i8, i8* %17, align 4, !dbg !3494, !range !2756
  %19 = icmp eq i8 %18, 1, !dbg !3495
  br i1 %19, label %20, label %24, !dbg !3496

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !3497
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !3498
  store i8 0, i8* %22, align 4, !dbg !3499
  %23 = add i32 %8, -1, !dbg !3500
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3500
  br label %24, !dbg !3501

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !3475
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3502
  ret i32 %25, !dbg !3502
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !3503 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3507, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata i32 %1, metadata !3508, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !3509, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata i8* %3, metadata !3510, metadata !DIExpression()), !dbg !3514
  %5 = and i32 %0, -559087616, !dbg !3515
  %6 = icmp ne i32 %5, -559087616, !dbg !3517
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !3518
  call void @llvm.dbg.value(metadata i32 %0, metadata !3513, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !3514
  br i1 %8, label %44, label %9, !dbg !3518

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !3519
  call void @llvm.dbg.value(metadata i32 %10, metadata !3513, metadata !DIExpression()), !dbg !3514
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !3520
  %12 = load i8, i8* %11, align 1, !dbg !3520, !range !2756
  %13 = icmp eq i8 %12, 0, !dbg !3520
  br i1 %13, label %14, label %44, !dbg !3522

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !3523
  %16 = load i8, i8* %15, align 4, !dbg !3523, !range !2756
  %17 = icmp eq i8 %16, 1, !dbg !3525
  br i1 %17, label %18, label %44, !dbg !3526

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !3527
  br i1 %19, label %44, label %20, !dbg !3529

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3530
  call void @llvm.dbg.value(metadata i32 %21, metadata !3512, metadata !DIExpression()), !dbg !3514
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3531
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3532, !range !2756
  %23 = icmp eq i8 %22, 0, !dbg !3534
  br i1 %23, label %24, label %27, !dbg !3535

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #21, !dbg !3536
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #21, !dbg !3538
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3539
  br label %27, !dbg !3540

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3541
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3542, !range !2756
  %30 = icmp eq i8 %29, 0, !dbg !3544
  br i1 %30, label %31, label %34, !dbg !3545

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3546
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #20, !dbg !3548
  call void @llvm.dbg.value(metadata i32 %33, metadata !3511, metadata !DIExpression()), !dbg !3514
  br label %34, !dbg !3549

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !3550
  call void @llvm.dbg.value(metadata i32 %35, metadata !3511, metadata !DIExpression()), !dbg !3514
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3551
  %37 = add i32 %36, %35, !dbg !3551
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3551
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3552
  %39 = add i32 %38, 1, !dbg !3552
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3552
  store i8 1, i8* %11, align 1, !dbg !3553
  %40 = add i32 %37, %1, !dbg !3554
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !3555
  store i32 %40, i32* %41, align 4, !dbg !3556
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !3557
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !3558
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !3559
  store i8* %3, i8** %43, align 4, !dbg !3560
  tail call void @gpt_sw_start_timer() #20, !dbg !3561
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3562
  tail call void @restore_interrupt_mask(i32 noundef %21) #20, !dbg !3563
  br label %44, !dbg !3564

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !3514
  ret i32 %45, !dbg !3565
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !3566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3568, metadata !DIExpression()), !dbg !3572
  %2 = and i32 %0, -559087616, !dbg !3573
  %3 = icmp eq i32 %2, -559087616, !dbg !3575
  br i1 %3, label %4, label %31, !dbg !3576

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !3577
  call void @llvm.dbg.value(metadata i32 %5, metadata !3571, metadata !DIExpression()), !dbg !3572
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !3578
  %7 = load i8, i8* %6, align 1, !dbg !3578, !range !2756
  %8 = icmp eq i8 %7, 1, !dbg !3580
  br i1 %8, label %9, label %31, !dbg !3581

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !3582
  %11 = load i8, i8* %10, align 4, !dbg !3582, !range !2756
  %12 = icmp eq i8 %11, 1, !dbg !3584
  br i1 %12, label %13, label %31, !dbg !3585

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3586
  call void @llvm.dbg.value(metadata i32 %14, metadata !3570, metadata !DIExpression()), !dbg !3572
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3587
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3588
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3589
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3590, !range !2756
  %17 = icmp eq i8 %16, 0, !dbg !3592
  br i1 %17, label %18, label %21, !dbg !3593

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3594
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #20, !dbg !3596
  call void @llvm.dbg.value(metadata i32 %20, metadata !3569, metadata !DIExpression()), !dbg !3572
  br label %21, !dbg !3597

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !3598
  call void @llvm.dbg.value(metadata i32 %22, metadata !3569, metadata !DIExpression()), !dbg !3572
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3599
  %24 = add i32 %23, %22, !dbg !3599
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3599
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3600
  %26 = add i32 %25, -1, !dbg !3600
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3600
  store i8 0, i8* %6, align 1, !dbg !3601
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3602
  %28 = icmp eq i32 %27, 0, !dbg !3604
  br i1 %28, label %30, label %29, !dbg !3605

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #20, !dbg !3606
  br label %30, !dbg !3608

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3609
  tail call void @restore_interrupt_mask(i32 noundef %14) #20, !dbg !3610
  br label %31, !dbg !3611

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !3572
  ret i32 %32, !dbg !3612
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !3613 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3617, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.value(metadata i32* %1, metadata !3618, metadata !DIExpression()), !dbg !3622
  %3 = and i32 %0, -559087616, !dbg !3623
  %4 = icmp eq i32 %3, -559087616, !dbg !3625
  br i1 %4, label %5, label %20, !dbg !3626

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !3627
  call void @llvm.dbg.value(metadata i32 %6, metadata !3621, metadata !DIExpression()), !dbg !3622
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !3628
  %8 = load i8, i8* %7, align 4, !dbg !3628, !range !2756
  %9 = icmp eq i8 %8, 1, !dbg !3630
  br i1 %9, label %10, label %20, !dbg !3631

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3632
  call void @llvm.dbg.value(metadata i32 %11, metadata !3620, metadata !DIExpression()), !dbg !3622
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3633
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3634
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !3635
  %15 = load volatile i32, i32* %14, align 4, !dbg !3635
  %16 = add i32 %15, %12, !dbg !3636
  call void @llvm.dbg.value(metadata i32 %16, metadata !3619, metadata !DIExpression()), !dbg !3622
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !3637
  %18 = load i32, i32* %17, align 4, !dbg !3637
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !3639
  store i32 %19, i32* %1, align 4, !dbg !3640
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !3641
  br label %20, !dbg !3642

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !3622
  ret i32 %21, !dbg !3643
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 section ".tcm_code" !dbg !3644 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3648, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata i32 %1, metadata !3649, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata i32 %2, metadata !3650, metadata !DIExpression()), !dbg !3655
  %4 = and i32 %0, 65535, !dbg !3656
  %5 = mul i32 %4, %1, !dbg !3657
  call void @llvm.dbg.value(metadata i32 %5, metadata !3651, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3655
  %6 = lshr i32 %0, 16, !dbg !3658
  %7 = mul i32 %6, %1, !dbg !3659
  call void @llvm.dbg.value(metadata i32 %7, metadata !3651, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3655
  %8 = and i32 %5, 65535, !dbg !3660
  call void @llvm.dbg.value(metadata i32 %8, metadata !3653, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3655
  %9 = lshr i32 %5, 16, !dbg !3661
  %10 = add i32 %9, %7, !dbg !3662
  call void @llvm.dbg.value(metadata i32 %10, metadata !3653, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3655
  %11 = udiv i32 %10, %2, !dbg !3663
  call void @llvm.dbg.value(metadata i32 %11, metadata !3654, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3655
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !3664
  %15 = or i32 %14, %8, !dbg !3665
  %16 = udiv i32 %15, %2, !dbg !3666
  call void @llvm.dbg.value(metadata i32 %16, metadata !3654, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3655
  %17 = shl i32 %11, 16, !dbg !3667
  %18 = add i32 %16, %17, !dbg !3668
  ret i32 %18, !dbg !3669
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #11 section ".tcm_code" !dbg !3670 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3674, metadata !DIExpression()), !dbg !3675
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !3676
  %3 = load volatile i32, i32* %2, align 4, !dbg !3676
  ret i32 %3, !dbg !3677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !3678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3682, metadata !DIExpression()), !dbg !3683
  %2 = shl i32 %0, 5, !dbg !3684
  %3 = mul i32 %0, 7, !dbg !3685
  %4 = udiv i32 %3, 10, !dbg !3686
  %5 = add i32 %4, %2, !dbg !3687
  %6 = mul i32 %0, 6, !dbg !3688
  %7 = udiv i32 %6, 100, !dbg !3689
  %8 = add i32 %5, %7, !dbg !3690
  %9 = shl i32 %0, 3, !dbg !3691
  %10 = udiv i32 %9, 1000, !dbg !3692
  %11 = add i32 %8, %10, !dbg !3693
  ret i32 %11, !dbg !3694
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !290 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3695
  br i1 %1, label %10, label %2, !dbg !3697

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3698
  br i1 %3, label %4, label %6, !dbg !3701

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !3702
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !3704
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !3705

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !3707
  br label %8, !dbg !3707

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3707
  br label %10, !dbg !3708

10:                                               ; preds = %8, %0
  ret void, !dbg !3708
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !3709 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #20, !dbg !3710
  br i1 %1, label %4, label %2, !dbg !3712

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #20, !dbg !3713
  br label %4, !dbg !3715

4:                                                ; preds = %2, %0
  ret void, !dbg !3716
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3719, metadata !DIExpression()), !dbg !3720
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3721
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3722
  br i1 %2, label %3, label %6, !dbg !3724

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3725
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #21, !dbg !3727
  br label %6, !dbg !3728

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3729
  ret i32 %7, !dbg !3730
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3731 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3733, metadata !DIExpression()), !dbg !3734
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3735
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3736
  br i1 %2, label %3, label %6, !dbg !3738

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3739
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #21, !dbg !3741
  br label %6, !dbg !3742

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3743
  ret i32 %7, !dbg !3744
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !3745 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3749, metadata !DIExpression()), !dbg !3752
  call void @llvm.dbg.value(metadata i32 %1, metadata !3750, metadata !DIExpression()), !dbg !3752
  call void @llvm.dbg.value(metadata i32 %2, metadata !3751, metadata !DIExpression()), !dbg !3752
  tail call void @gpt_open_clock_source() #21, !dbg !3753
  %4 = or i32 %2, %1, !dbg !3754
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3755
  store volatile i32 %4, i32* %5, align 4, !dbg !3756
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3757
  store volatile i32 49, i32* %6, align 4, !dbg !3758
  ret void, !dbg !3759
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !3760 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3764, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.value(metadata i32 %1, metadata !3765, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.value(metadata i32 0, metadata !3766, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.value(metadata i32 0, metadata !3767, metadata !DIExpression()), !dbg !3768
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3769
  call void @llvm.dbg.value(metadata i32 %3, metadata !3767, metadata !DIExpression()), !dbg !3768
  %4 = add i32 %1, 1, !dbg !3770
  %5 = add i32 %4, %3, !dbg !3771
  call void @llvm.dbg.value(metadata i32 %5, metadata !3766, metadata !DIExpression()), !dbg !3768
  %6 = icmp ugt i32 %5, %3, !dbg !3772
  br i1 %6, label %7, label %10, !dbg !3774

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3775
  %9 = icmp ult i32 %8, %5, !dbg !3777
  br i1 %9, label %7, label %16, !dbg !3778, !llvm.loop !3779

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3781
  %12 = icmp ult i32 %11, %3, !dbg !3783
  br i1 %12, label %13, label %10, !dbg !3784, !llvm.loop !3785

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3787
  %15 = icmp ult i32 %14, %5, !dbg !3788
  br i1 %15, label %13, label %16, !dbg !3789, !llvm.loop !3790

16:                                               ; preds = %13, %7
  ret void, !dbg !3792
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !3793 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3797, metadata !DIExpression()), !dbg !3798
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3799
  store volatile i32 0, i32* %2, align 4, !dbg !3800
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3801
  store volatile i32 0, i32* %3, align 4, !dbg !3802
  %4 = load volatile i32, i32* %3, align 4, !dbg !3803
  %5 = or i32 %4, 2, !dbg !3803
  store volatile i32 %5, i32* %3, align 4, !dbg !3803
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !3804

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !3805
  %9 = icmp eq i32 %8, 0, !dbg !3804
  br i1 %9, label %10, label %7, !dbg !3804, !llvm.loop !3806

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3808
  store volatile i32 16, i32* %11, align 4, !dbg !3809
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !3810
  store volatile i32 1, i32* %12, align 4, !dbg !3811
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !3812
  store volatile i32 -1, i32* %13, align 4, !dbg !3813
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !3814
  br i1 %14, label %15, label %16, !dbg !3816

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !3817
  br label %16, !dbg !3819

16:                                               ; preds = %15, %10
  ret void, !dbg !3820
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3821 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3823, metadata !DIExpression()), !dbg !3825
  %3 = bitcast i32* %2 to i8*, !dbg !3826
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3826
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3824, metadata !DIExpression()), !dbg !3827
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3828
  %5 = load volatile i32, i32* %4, align 4, !dbg !3828
  store volatile i32 %5, i32* %2, align 4, !dbg !3829
  %6 = load volatile i32, i32* %4, align 4, !dbg !3830
  %7 = and i32 %6, -2, !dbg !3830
  store volatile i32 %7, i32* %4, align 4, !dbg !3830
  %8 = load volatile i32, i32* %2, align 4, !dbg !3831
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3832
  ret i32 %8, !dbg !3833
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !3834 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3838, metadata !DIExpression()), !dbg !3840
  call void @llvm.dbg.value(metadata i32 %1, metadata !3839, metadata !DIExpression()), !dbg !3840
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3841
  store volatile i32 %1, i32* %3, align 4, !dbg !3842
  ret void, !dbg !3843
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !3844 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3846, metadata !DIExpression()), !dbg !3851
  %5 = bitcast i32* %2 to i8*, !dbg !3852
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3852
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3848, metadata !DIExpression()), !dbg !3853
  %6 = bitcast i32* %3 to i8*, !dbg !3854
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !3854
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3849, metadata !DIExpression()), !dbg !3855
  %7 = bitcast i32* %4 to i8*, !dbg !3856
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !3856
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3850, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.value(metadata i32 undef, metadata !3846, metadata !DIExpression()), !dbg !3851
  call void @llvm.dbg.value(metadata i32 0, metadata !3847, metadata !DIExpression()), !dbg !3851
  br label %8, !dbg !3858

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3847, metadata !DIExpression()), !dbg !3851
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !3860
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3860
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !3863
  %13 = load volatile i32, i32* %12, align 4, !dbg !3863
  store volatile i32 %13, i32* %3, align 4, !dbg !3864
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !3865
  %15 = load volatile i32, i32* %14, align 4, !dbg !3865
  store volatile i32 %15, i32* %4, align 4, !dbg !3866
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #21, !dbg !3867
  store volatile i32 %16, i32* %2, align 4, !dbg !3868
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3869
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !3870
  store volatile i32 1, i32* %18, align 4, !dbg !3871
  %19 = load volatile i32, i32* %3, align 4, !dbg !3872
  %20 = and i32 %19, 1, !dbg !3874
  %21 = icmp eq i32 %20, 0, !dbg !3874
  br i1 %21, label %33, label %22, !dbg !3875

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !3876
  %24 = and i32 %23, 1, !dbg !3877
  %25 = icmp eq i32 %24, 0, !dbg !3877
  br i1 %25, label %33, label %26, !dbg !3878

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !3879
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3879
  %29 = icmp eq void (i8*)* %28, null, !dbg !3882
  br i1 %29, label %33, label %30, !dbg !3883

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !3884
  %32 = load i8*, i8** %31, align 4, !dbg !3884
  tail call void %28(i8* noundef %32) #20, !dbg !3886
  br label %33, !dbg !3887

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3888
  %35 = load volatile i32, i32* %2, align 4, !dbg !3889
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #21, !dbg !3890
  %36 = add nuw nsw i32 %9, 1, !dbg !3891
  call void @llvm.dbg.value(metadata i32 %36, metadata !3847, metadata !DIExpression()), !dbg !3851
  %37 = icmp eq i32 %36, 6, !dbg !3892
  br i1 %37, label %38, label %8, !dbg !3858, !llvm.loop !3893

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !3895
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !3895
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3895
  ret void, !dbg !3895
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !3896 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #20, !dbg !3897
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #20, !dbg !3898
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #20, !dbg !3899
  ret void, !dbg !3900
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3901 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3903, metadata !DIExpression()), !dbg !3908
  %3 = bitcast i32* %2 to i8*, !dbg !3909
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3909
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3904, metadata !DIExpression()), !dbg !3910
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3911
  call void @llvm.dbg.value(metadata i32 %4, metadata !3905, metadata !DIExpression()), !dbg !3908
  %5 = lshr i32 %4, 15, !dbg !3912
  call void @llvm.dbg.value(metadata i32 %5, metadata !3906, metadata !DIExpression()), !dbg !3908
  %6 = and i32 %4, 32767, !dbg !3913
  %7 = mul nuw nsw i32 %6, 1000, !dbg !3914
  %8 = add nuw nsw i32 %7, 16384, !dbg !3915
  %9 = lshr i32 %8, 15, !dbg !3916
  call void @llvm.dbg.value(metadata i32 %9, metadata !3907, metadata !DIExpression()), !dbg !3908
  %10 = mul nuw nsw i32 %5, 1000, !dbg !3917
  %11 = add nuw nsw i32 %9, %10, !dbg !3918
  store volatile i32 %11, i32* %2, align 4, !dbg !3919
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3920
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3921
  %14 = load volatile i32, i32* %13, align 4, !dbg !3922
  %15 = or i32 %14, 2, !dbg !3922
  store volatile i32 %15, i32* %13, align 4, !dbg !3922
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !3923

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !3924
  %20 = icmp eq i32 %19, 0, !dbg !3923
  br i1 %20, label %21, label %18, !dbg !3923, !llvm.loop !3925

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !3927
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3928
  ret i32 %22, !dbg !3929
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #12 !dbg !3930 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3934, metadata !DIExpression()), !dbg !3935
  br label %1, !dbg !3936

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3934, metadata !DIExpression()), !dbg !3935
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !3938
  %4 = load i8, i8* %3, align 4, !dbg !3938, !range !2756
  %5 = icmp eq i8 %4, 1, !dbg !3942
  br i1 %5, label %6, label %9, !dbg !3943

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !3944
  call void @llvm.dbg.value(metadata i32 %7, metadata !3934, metadata !DIExpression()), !dbg !3935
  %8 = icmp eq i32 %7, 32, !dbg !3945
  br i1 %8, label %9, label %1, !dbg !3936, !llvm.loop !3946

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !3935
  ret i32 %10, !dbg !3948
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !3949 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !3953
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3953
  %4 = bitcast i32* %2 to i8*, !dbg !3953
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !3953
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3954, !range !2756
  %6 = icmp eq i8 %5, 0, !dbg !3954
  br i1 %6, label %7, label %11, !dbg !3956

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !3951, metadata !DIExpression(DW_OP_deref)), !dbg !3957
  call void @llvm.dbg.value(metadata i32* %2, metadata !3952, metadata !DIExpression(DW_OP_deref)), !dbg !3957
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #21, !dbg !3958
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3959
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3960
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3961
  %9 = load i32, i32* %1, align 4, !dbg !3962
  call void @llvm.dbg.value(metadata i32 %9, metadata !3951, metadata !DIExpression()), !dbg !3957
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #20, !dbg !3963
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3964
  br label %11, !dbg !3965

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !3965
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3965
  ret void, !dbg !3965
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #13 !dbg !3966 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3970, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i32* %1, metadata !3971, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i32 -1, metadata !3973, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i32 0, metadata !3972, metadata !DIExpression()), !dbg !3975
  br label %3, !dbg !3976

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !3972, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i32 %5, metadata !3973, metadata !DIExpression()), !dbg !3975
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !3978
  %7 = load i8, i8* %6, align 1, !dbg !3978, !range !2756
  %8 = icmp eq i8 %7, 0, !dbg !3978
  br i1 %8, label %13, label %9, !dbg !3982

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #21, !dbg !3983
  call void @llvm.dbg.value(metadata i32 %10, metadata !3974, metadata !DIExpression()), !dbg !3975
  %11 = icmp ult i32 %10, %5, !dbg !3985
  br i1 %11, label %12, label %13, !dbg !3987

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !3973, metadata !DIExpression()), !dbg !3975
  store i32 %4, i32* %1, align 4, !dbg !3988
  br label %13, !dbg !3990

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !3975
  call void @llvm.dbg.value(metadata i32 %14, metadata !3973, metadata !DIExpression()), !dbg !3975
  %15 = add nuw nsw i32 %4, 1, !dbg !3991
  call void @llvm.dbg.value(metadata i32 %15, metadata !3972, metadata !DIExpression()), !dbg !3975
  %16 = icmp eq i32 %15, 32, !dbg !3992
  br i1 %16, label %17, label %3, !dbg !3976, !llvm.loop !3993

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !3995
  ret void, !dbg !3996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #4 !dbg !3997 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3999, metadata !DIExpression()), !dbg !4003
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !4004
  %3 = load i32, i32* %2, align 4, !dbg !4004
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !4004
  %5 = sub i32 %3, %4, !dbg !4004
  call void @llvm.dbg.value(metadata i32 %5, metadata !4000, metadata !DIExpression()), !dbg !4003
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4005
  %7 = sub i32 %6, %4, !dbg !4005
  call void @llvm.dbg.value(metadata i32 %7, metadata !4001, metadata !DIExpression()), !dbg !4003
  %8 = icmp ugt i32 %5, %7, !dbg !4006
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !4008
  call void @llvm.dbg.value(metadata i32 %10, metadata !4002, metadata !DIExpression()), !dbg !4003
  ret i32 %10, !dbg !4009
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !4010 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4012, metadata !DIExpression()), !dbg !4016
  %4 = bitcast i32* %2 to i8*, !dbg !4017
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4017
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4014, metadata !DIExpression()), !dbg !4018
  %5 = bitcast i32* %3 to i8*, !dbg !4019
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4019
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4015, metadata !DIExpression()), !dbg !4020
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4021
  %7 = icmp eq i32 %6, 0, !dbg !4023
  br i1 %7, label %38, label %8, !dbg !4024

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4025
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #20, !dbg !4027
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4028
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !4029
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #21, !dbg !4030
  store volatile i32 %11, i32* %2, align 4, !dbg !4031
  %12 = load volatile i32, i32* %2, align 4, !dbg !4032
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4033
  %14 = add i32 %13, %12, !dbg !4033
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4033
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4034
  call void @llvm.dbg.value(metadata i32 0, metadata !4013, metadata !DIExpression()), !dbg !4016
  br label %15, !dbg !4035

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !4013, metadata !DIExpression()), !dbg !4016
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !4037
  %18 = load i8, i8* %17, align 1, !dbg !4037, !range !2756
  %19 = icmp eq i8 %18, 0, !dbg !4037
  br i1 %19, label %31, label %20, !dbg !4041

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #21, !dbg !4042
  store volatile i32 %21, i32* %3, align 4, !dbg !4044
  %22 = load volatile i32, i32* %3, align 4, !dbg !4045
  %23 = icmp eq i32 %22, 0, !dbg !4047
  br i1 %23, label %24, label %31, !dbg !4048

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !4049
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4051
  %26 = add i32 %25, -1, !dbg !4051
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4051
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !4052
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !4052
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !4053
  %30 = load i8*, i8** %29, align 4, !dbg !4053
  tail call void %28(i8* noundef %30) #20, !dbg !4054
  br label %31, !dbg !4055

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !4056
  call void @llvm.dbg.value(metadata i32 %32, metadata !4013, metadata !DIExpression()), !dbg !4016
  %33 = icmp eq i32 %32, 32, !dbg !4057
  br i1 %33, label %34, label %15, !dbg !4035, !llvm.loop !4058

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4060
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4061
  %36 = icmp eq i32 %35, 0, !dbg !4063
  br i1 %36, label %38, label %37, !dbg !4064

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #21, !dbg !4065
  br label %38, !dbg !4067

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4068
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4068
  ret void, !dbg !4068
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #14 !dbg !4069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4074, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !4076, metadata !DIExpression()), !dbg !4078
  call void @llvm.dbg.value(metadata i32 0, metadata !4075, metadata !DIExpression()), !dbg !4077
  br label %5, !dbg !4079

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !4081
  call void @llvm.dbg.value(metadata i32 %3, metadata !4075, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.value(metadata i32 %6, metadata !4075, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4077
  %4 = icmp eq i32 %3, 5, !dbg !4083
  br i1 %4, label %10, label %5, !dbg !4079, !llvm.loop !4084

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4075, metadata !DIExpression()), !dbg !4077
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !4086
  %8 = load i32, i32* %7, align 4, !dbg !4086
  %9 = icmp eq i32 %8, %0, !dbg !4089
  call void @llvm.dbg.value(metadata i32 %6, metadata !4075, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4077
  br i1 %9, label %10, label %2, !dbg !4090

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !4077
  ret i32 %11, !dbg !4091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #10 !dbg !4092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4097, metadata !DIExpression()), !dbg !4098
  ret i32 0, !dbg !4099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #10 !dbg !4100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4102, metadata !DIExpression()), !dbg !4103
  ret i32 0, !dbg !4104
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4109, metadata !DIExpression()), !dbg !4113
  call void @llvm.dbg.value(metadata i32 %1, metadata !4110, metadata !DIExpression()), !dbg !4113
  %3 = icmp ugt i32 %0, 48, !dbg !4114
  br i1 %3, label %13, label %4, !dbg !4116

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4117
  call void @llvm.dbg.value(metadata i32 %5, metadata !4111, metadata !DIExpression()), !dbg !4113
  %6 = and i32 %0, 31, !dbg !4118
  call void @llvm.dbg.value(metadata i32 %6, metadata !4112, metadata !DIExpression()), !dbg !4113
  %7 = icmp eq i32 %1, 0, !dbg !4119
  %8 = shl nuw i32 1, %6, !dbg !4121
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4121
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !4122
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !4122
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !4122
  store volatile i32 %8, i32* %12, align 4, !dbg !4121
  br label %13, !dbg !4123

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4113
  ret i32 %14, !dbg !4123
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4129, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.value(metadata i32* %1, metadata !4130, metadata !DIExpression()), !dbg !4134
  %3 = icmp ugt i32 %0, 48, !dbg !4135
  br i1 %3, label %15, label %4, !dbg !4137

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4138
  br i1 %5, label %15, label %6, !dbg !4140

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4141
  call void @llvm.dbg.value(metadata i32 %7, metadata !4131, metadata !DIExpression()), !dbg !4134
  %8 = and i32 %0, 31, !dbg !4142
  call void @llvm.dbg.value(metadata i32 %8, metadata !4132, metadata !DIExpression()), !dbg !4134
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4143
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !4144
  %11 = load volatile i32, i32* %10, align 4, !dbg !4144
  call void @llvm.dbg.value(metadata i32 %11, metadata !4133, metadata !DIExpression()), !dbg !4134
  %12 = shl nuw i32 1, %8, !dbg !4145
  %13 = and i32 %11, %12, !dbg !4146
  call void @llvm.dbg.value(metadata i32 %13, metadata !4133, metadata !DIExpression()), !dbg !4134
  %14 = lshr i32 %13, %8, !dbg !4147
  store i32 %14, i32* %1, align 4, !dbg !4148
  br label %15, !dbg !4149

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4134
  ret i32 %16, !dbg !4150
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !4151 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4156, metadata !DIExpression()), !dbg !4161
  call void @llvm.dbg.value(metadata i8 %1, metadata !4157, metadata !DIExpression()), !dbg !4161
  %3 = icmp ugt i32 %0, 48, !dbg !4162
  br i1 %3, label %18, label %4, !dbg !4164

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !4165
  br i1 %5, label %18, label %6, !dbg !4167

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !4168
  %8 = lshr i32 %0, 3, !dbg !4169
  call void @llvm.dbg.value(metadata i32 %8, metadata !4158, metadata !DIExpression()), !dbg !4161
  call void @llvm.dbg.value(metadata i32 %0, metadata !4159, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4161
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4170
  call void @llvm.dbg.value(metadata i32 %9, metadata !4160, metadata !DIExpression()), !dbg !4161
  %10 = shl nuw nsw i32 %0, 2, !dbg !4171
  %11 = and i32 %10, 28, !dbg !4171
  %12 = shl nuw i32 15, %11, !dbg !4172
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4173
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !4174
  store volatile i32 %12, i32* %14, align 4, !dbg !4175
  %15 = shl nuw i32 %7, %11, !dbg !4176
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4177
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !4178
  store volatile i32 %15, i32* %17, align 4, !dbg !4179
  tail call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !4180
  br label %18, !dbg !4181

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4161
  ret i32 %19, !dbg !4182
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4188, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.value(metadata i32* %1, metadata !4189, metadata !DIExpression()), !dbg !4193
  %3 = icmp ugt i32 %0, 48, !dbg !4194
  br i1 %3, label %15, label %4, !dbg !4196

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4197
  br i1 %5, label %15, label %6, !dbg !4199

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4200
  call void @llvm.dbg.value(metadata i32 %7, metadata !4190, metadata !DIExpression()), !dbg !4193
  %8 = and i32 %0, 31, !dbg !4201
  call void @llvm.dbg.value(metadata i32 %8, metadata !4191, metadata !DIExpression()), !dbg !4193
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4202
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !4203
  %11 = load volatile i32, i32* %10, align 4, !dbg !4203
  call void @llvm.dbg.value(metadata i32 %11, metadata !4192, metadata !DIExpression()), !dbg !4193
  %12 = shl nuw i32 1, %8, !dbg !4204
  %13 = and i32 %11, %12, !dbg !4205
  call void @llvm.dbg.value(metadata i32 %13, metadata !4192, metadata !DIExpression()), !dbg !4193
  %14 = lshr i32 %13, %8, !dbg !4206
  store i32 %14, i32* %1, align 4, !dbg !4207
  br label %15, !dbg !4208

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4193
  ret i32 %16, !dbg !4209
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4214, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.value(metadata i32 %1, metadata !4215, metadata !DIExpression()), !dbg !4218
  %3 = icmp ugt i32 %0, 48, !dbg !4219
  br i1 %3, label %13, label %4, !dbg !4221

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4222
  call void @llvm.dbg.value(metadata i32 %5, metadata !4216, metadata !DIExpression()), !dbg !4218
  %6 = and i32 %0, 31, !dbg !4223
  call void @llvm.dbg.value(metadata i32 %6, metadata !4217, metadata !DIExpression()), !dbg !4218
  %7 = icmp eq i32 %1, 0, !dbg !4224
  %8 = shl nuw i32 1, %6, !dbg !4226
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4226
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !4227
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !4227
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !4227
  store volatile i32 %8, i32* %12, align 4, !dbg !4226
  br label %13, !dbg !4228

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4218
  ret i32 %14, !dbg !4228
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4231, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.value(metadata i32* %1, metadata !4232, metadata !DIExpression()), !dbg !4236
  %3 = icmp ugt i32 %0, 48, !dbg !4237
  br i1 %3, label %15, label %4, !dbg !4239

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4240
  br i1 %5, label %15, label %6, !dbg !4242

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4243
  call void @llvm.dbg.value(metadata i32 %7, metadata !4233, metadata !DIExpression()), !dbg !4236
  %8 = and i32 %0, 31, !dbg !4244
  call void @llvm.dbg.value(metadata i32 %8, metadata !4234, metadata !DIExpression()), !dbg !4236
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4245
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !4246
  %11 = load volatile i32, i32* %10, align 4, !dbg !4246
  call void @llvm.dbg.value(metadata i32 %11, metadata !4235, metadata !DIExpression()), !dbg !4236
  %12 = shl nuw i32 1, %8, !dbg !4247
  %13 = and i32 %11, %12, !dbg !4248
  call void @llvm.dbg.value(metadata i32 %13, metadata !4235, metadata !DIExpression()), !dbg !4236
  %14 = lshr i32 %13, %8, !dbg !4249
  store i32 %14, i32* %1, align 4, !dbg !4250
  br label %15, !dbg !4251

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4236
  ret i32 %16, !dbg !4252
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #2 !dbg !4253 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4255, metadata !DIExpression()), !dbg !4259
  %2 = icmp ugt i32 %0, 48, !dbg !4260
  br i1 %2, label %16, label %3, !dbg !4262

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4263
  call void @llvm.dbg.value(metadata i32 %4, metadata !4256, metadata !DIExpression()), !dbg !4259
  %5 = and i32 %0, 31, !dbg !4264
  call void @llvm.dbg.value(metadata i32 %5, metadata !4257, metadata !DIExpression()), !dbg !4259
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4265
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !4266
  %8 = load volatile i32, i32* %7, align 4, !dbg !4266
  call void @llvm.dbg.value(metadata i32 %8, metadata !4258, metadata !DIExpression()), !dbg !4259
  %9 = shl nuw i32 1, %5, !dbg !4267
  %10 = and i32 %8, %9, !dbg !4268
  call void @llvm.dbg.value(metadata i32 %10, metadata !4258, metadata !DIExpression()), !dbg !4259
  %11 = lshr i32 %10, %5, !dbg !4269
  %12 = icmp eq i32 %11, 0, !dbg !4269
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !4271
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !4271
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !4271
  store volatile i32 %9, i32* %15, align 4, !dbg !4272
  br label %16, !dbg !4273

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !4259
  ret i32 %17, !dbg !4273
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4274 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4276, metadata !DIExpression()), !dbg !4279
  %2 = icmp ugt i32 %0, 48, !dbg !4280
  br i1 %2, label %9, label %3, !dbg !4282

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4283
  call void @llvm.dbg.value(metadata i32 %4, metadata !4277, metadata !DIExpression()), !dbg !4279
  %5 = and i32 %0, 31, !dbg !4284
  call void @llvm.dbg.value(metadata i32 %5, metadata !4278, metadata !DIExpression()), !dbg !4279
  %6 = shl nuw i32 1, %5, !dbg !4285
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4286
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !4287
  store volatile i32 %6, i32* %8, align 4, !dbg !4288
  br label %9, !dbg !4289

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4279
  ret i32 %10, !dbg !4290
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4291 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4293, metadata !DIExpression()), !dbg !4296
  %2 = icmp ugt i32 %0, 48, !dbg !4297
  br i1 %2, label %9, label %3, !dbg !4299

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4300
  call void @llvm.dbg.value(metadata i32 %4, metadata !4294, metadata !DIExpression()), !dbg !4296
  %5 = and i32 %0, 31, !dbg !4301
  call void @llvm.dbg.value(metadata i32 %5, metadata !4295, metadata !DIExpression()), !dbg !4296
  %6 = shl nuw i32 1, %5, !dbg !4302
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4303
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !4304
  store volatile i32 %6, i32* %8, align 4, !dbg !4305
  br label %9, !dbg !4306

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4296
  ret i32 %10, !dbg !4307
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #2 !dbg !4308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4310, metadata !DIExpression()), !dbg !4313
  %2 = icmp ugt i32 %0, 48, !dbg !4314
  br i1 %2, label %14, label %3, !dbg !4316

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4317
  %5 = icmp eq i32 %4, 0, !dbg !4317
  br i1 %5, label %14, label %6, !dbg !4318

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4319
  call void @llvm.dbg.value(metadata i32 %7, metadata !4311, metadata !DIExpression()), !dbg !4313
  %8 = and i32 %0, 31, !dbg !4320
  call void @llvm.dbg.value(metadata i32 %8, metadata !4312, metadata !DIExpression()), !dbg !4313
  %9 = shl nuw i32 1, %8, !dbg !4321
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4322
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4323
  store volatile i32 %9, i32* %11, align 4, !dbg !4324
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4325
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !4326
  store volatile i32 %9, i32* %13, align 4, !dbg !4327
  br label %14, !dbg !4328

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4313
  ret i32 %15, !dbg !4329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #2 !dbg !4330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4332, metadata !DIExpression()), !dbg !4335
  %2 = icmp ugt i32 %0, 48, !dbg !4336
  br i1 %2, label %14, label %3, !dbg !4338

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4339
  %5 = icmp eq i32 %4, 0, !dbg !4339
  br i1 %5, label %14, label %6, !dbg !4340

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4341
  call void @llvm.dbg.value(metadata i32 %7, metadata !4333, metadata !DIExpression()), !dbg !4335
  %8 = and i32 %0, 31, !dbg !4342
  call void @llvm.dbg.value(metadata i32 %8, metadata !4334, metadata !DIExpression()), !dbg !4335
  %9 = shl nuw i32 1, %8, !dbg !4343
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4344
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4345
  store volatile i32 %9, i32* %11, align 4, !dbg !4346
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4347
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !4348
  store volatile i32 %9, i32* %13, align 4, !dbg !4349
  br label %14, !dbg !4350

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4335
  ret i32 %15, !dbg !4351
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #2 !dbg !4352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4354, metadata !DIExpression()), !dbg !4357
  %2 = icmp ugt i32 %0, 48, !dbg !4358
  br i1 %2, label %12, label %3, !dbg !4360

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4361
  %5 = icmp eq i32 %4, 0, !dbg !4361
  br i1 %5, label %12, label %6, !dbg !4362

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4363
  call void @llvm.dbg.value(metadata i32 %7, metadata !4355, metadata !DIExpression()), !dbg !4357
  %8 = and i32 %0, 31, !dbg !4364
  call void @llvm.dbg.value(metadata i32 %8, metadata !4356, metadata !DIExpression()), !dbg !4357
  %9 = shl nuw i32 1, %8, !dbg !4365
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4366
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !4367
  store volatile i32 %9, i32* %11, align 4, !dbg !4368
  br label %12, !dbg !4369

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4357
  ret i32 %13, !dbg !4370
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4371 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4377, metadata !DIExpression()), !dbg !4379
  call void @llvm.dbg.value(metadata i32 %1, metadata !4378, metadata !DIExpression()), !dbg !4379
  %3 = icmp ugt i32 %0, 5, !dbg !4380
  br i1 %3, label %7, label %4, !dbg !4382

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4383
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !4384
  store volatile i32 %1, i32* %6, align 4, !dbg !4385
  br label %7, !dbg !4386

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !4379
  ret i32 %8, !dbg !4387
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !4388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4392, metadata !DIExpression()), !dbg !4398
  call void @llvm.dbg.value(metadata i8 %1, metadata !4393, metadata !DIExpression()), !dbg !4398
  call void @llvm.dbg.value(metadata i8 %2, metadata !4394, metadata !DIExpression()), !dbg !4398
  call void @llvm.dbg.value(metadata i8 %3, metadata !4395, metadata !DIExpression()), !dbg !4398
  %5 = icmp ugt i32 %0, 48, !dbg !4399
  br i1 %5, label %30, label %6, !dbg !4401

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4402
  %8 = icmp eq i32 %7, 0, !dbg !4402
  br i1 %8, label %9, label %30, !dbg !4403

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !4404
  call void @llvm.dbg.value(metadata i32 %10, metadata !4396, metadata !DIExpression()), !dbg !4398
  %11 = and i32 %0, 31, !dbg !4405
  call void @llvm.dbg.value(metadata i32 %11, metadata !4397, metadata !DIExpression()), !dbg !4398
  %12 = icmp eq i8 %1, 0, !dbg !4406
  %13 = shl nuw i32 1, %11, !dbg !4408
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4408
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !4409
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !4409
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !4409
  store volatile i32 %13, i32* %17, align 4, !dbg !4408
  %18 = icmp eq i8 %2, 0, !dbg !4410
  %19 = shl nuw i32 1, %11, !dbg !4412
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4412
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !4413
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !4413
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !4413
  store volatile i32 %19, i32* %23, align 4, !dbg !4412
  %24 = icmp eq i8 %3, 0, !dbg !4414
  %25 = shl nuw i32 1, %11, !dbg !4416
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4416
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !4417
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !4417
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !4417
  store volatile i32 %25, i32* %29, align 4, !dbg !4416
  br label %30, !dbg !4418

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !4398
  ret i32 %31, !dbg !4418
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !4419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4421, metadata !DIExpression()), !dbg !4428
  %2 = icmp ugt i32 %0, 48, !dbg !4429
  br i1 %2, label %40, label %3, !dbg !4431

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4432
  call void @llvm.dbg.value(metadata i32 %4, metadata !4422, metadata !DIExpression()), !dbg !4428
  %5 = and i32 %0, 31, !dbg !4433
  call void @llvm.dbg.value(metadata i32 %5, metadata !4425, metadata !DIExpression()), !dbg !4428
  %6 = lshr i32 %0, 4, !dbg !4434
  call void @llvm.dbg.value(metadata i32 %6, metadata !4423, metadata !DIExpression()), !dbg !4428
  call void @llvm.dbg.value(metadata i32 %0, metadata !4426, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4428
  %7 = lshr i32 %0, 3, !dbg !4435
  call void @llvm.dbg.value(metadata i32 %7, metadata !4424, metadata !DIExpression()), !dbg !4428
  call void @llvm.dbg.value(metadata i32 %0, metadata !4427, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4428
  %8 = shl nuw nsw i32 %0, 2, !dbg !4436
  %9 = and i32 %8, 28, !dbg !4436
  %10 = shl nuw i32 15, %9, !dbg !4437
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4438
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !4439
  store volatile i32 %10, i32* %12, align 4, !dbg !4440
  %13 = shl nuw i32 1, %5, !dbg !4441
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4442
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !4443
  store volatile i32 %13, i32* %15, align 4, !dbg !4444
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4445
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !4446
  store volatile i32 %13, i32* %17, align 4, !dbg !4447
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4448
  %19 = icmp eq i32 %18, 0, !dbg !4448
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4450
  br i1 %19, label %23, label %21, !dbg !4451

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !4452
  br label %29, !dbg !4454

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !4455
  store volatile i32 %13, i32* %24, align 4, !dbg !4457
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4458
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !4459
  store volatile i32 %13, i32* %26, align 4, !dbg !4460
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4461
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !4462
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !4450
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4463
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !4464
  store volatile i32 %13, i32* %32, align 4, !dbg !4465
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4466
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !4467
  store volatile i32 %13, i32* %34, align 4, !dbg !4468
  %35 = shl nuw nsw i32 %0, 1, !dbg !4469
  %36 = and i32 %35, 30, !dbg !4469
  %37 = shl nuw i32 3, %36, !dbg !4470
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4471
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !4472
  store volatile i32 %37, i32* %39, align 4, !dbg !4473
  br label %40, !dbg !4474

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !4428
  ret i32 %41, !dbg !4475
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !4476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4478, metadata !DIExpression()), !dbg !4483
  %2 = icmp ugt i32 %0, 48, !dbg !4484
  br i1 %2, label %34, label %3, !dbg !4486

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4487
  call void @llvm.dbg.value(metadata i32 %4, metadata !4479, metadata !DIExpression()), !dbg !4483
  %5 = and i32 %0, 31, !dbg !4488
  call void @llvm.dbg.value(metadata i32 %5, metadata !4481, metadata !DIExpression()), !dbg !4483
  %6 = lshr i32 %0, 3, !dbg !4489
  call void @llvm.dbg.value(metadata i32 %6, metadata !4480, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.value(metadata i32 %0, metadata !4482, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4483
  %7 = shl nuw nsw i32 %0, 2, !dbg !4490
  %8 = and i32 %7, 28, !dbg !4490
  %9 = shl nuw i32 15, %8, !dbg !4491
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4492
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !4493
  store volatile i32 %9, i32* %11, align 4, !dbg !4494
  %12 = shl nuw i32 1, %5, !dbg !4495
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4496
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !4497
  store volatile i32 %12, i32* %14, align 4, !dbg !4498
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4499
  %16 = icmp eq i32 %15, 0, !dbg !4499
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4501
  br i1 %16, label %22, label %18, !dbg !4502

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !4503
  store volatile i32 %12, i32* %19, align 4, !dbg !4505
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4506
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !4507
  br label %28, !dbg !4508

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !4509
  store volatile i32 %12, i32* %23, align 4, !dbg !4511
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4512
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !4513
  store volatile i32 %12, i32* %25, align 4, !dbg !4514
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4515
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !4516
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !4501
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4517
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !4518
  store volatile i32 %12, i32* %31, align 4, !dbg !4519
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4520
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !4521
  store volatile i32 %12, i32* %33, align 4, !dbg !4522
  br label %34, !dbg !4523

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !4483
  ret i32 %35, !dbg !4524
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4529, metadata !DIExpression()), !dbg !4533
  call void @llvm.dbg.value(metadata i32 %1, metadata !4530, metadata !DIExpression()), !dbg !4533
  %3 = icmp ugt i32 %0, 48, !dbg !4534
  br i1 %3, label %14, label %4, !dbg !4536

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !4537
  call void @llvm.dbg.value(metadata i32 %5, metadata !4531, metadata !DIExpression()), !dbg !4533
  call void @llvm.dbg.value(metadata i32 %0, metadata !4532, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4533
  %6 = shl nuw nsw i32 %0, 1, !dbg !4538
  %7 = and i32 %6, 30, !dbg !4538
  %8 = shl nuw i32 3, %7, !dbg !4539
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4540
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !4541
  store volatile i32 %8, i32* %10, align 4, !dbg !4542
  %11 = shl i32 %1, %7, !dbg !4543
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4544
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !4545
  store volatile i32 %11, i32* %13, align 4, !dbg !4546
  br label %14, !dbg !4547

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !4533
  ret i32 %15, !dbg !4548
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4554, metadata !DIExpression()), !dbg !4559
  call void @llvm.dbg.value(metadata i32* %1, metadata !4555, metadata !DIExpression()), !dbg !4559
  %3 = icmp ugt i32 %0, 48, !dbg !4560
  br i1 %3, label %18, label %4, !dbg !4562

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4563
  br i1 %5, label %18, label %6, !dbg !4565

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !4566
  call void @llvm.dbg.value(metadata i32 %7, metadata !4556, metadata !DIExpression()), !dbg !4559
  call void @llvm.dbg.value(metadata i32 %0, metadata !4557, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4559
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4567
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !4568
  %10 = load volatile i32, i32* %9, align 4, !dbg !4568
  call void @llvm.dbg.value(metadata i32 %10, metadata !4558, metadata !DIExpression()), !dbg !4559
  %11 = shl nuw nsw i32 %0, 1, !dbg !4569
  %12 = and i32 %11, 30, !dbg !4569
  %13 = shl nuw i32 3, %12, !dbg !4570
  %14 = and i32 %10, %13, !dbg !4571
  call void @llvm.dbg.value(metadata i32 %14, metadata !4558, metadata !DIExpression()), !dbg !4559
  %15 = lshr i32 %14, %12, !dbg !4572
  call void @llvm.dbg.value(metadata i32 %15, metadata !4558, metadata !DIExpression()), !dbg !4559
  %16 = shl i32 %15, 2, !dbg !4573
  %17 = add i32 %16, 4, !dbg !4573
  store i32 %17, i32* %1, align 4, !dbg !4574
  br label %18, !dbg !4575

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4559
  ret i32 %19, !dbg !4576
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4577 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4581, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.value(metadata i1 %1, metadata !4582, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4646
  %4 = bitcast i32* %3 to i8*, !dbg !4647
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4647
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4648
  %6 = load volatile i32, i32* %5, align 4, !dbg !4648
  %7 = icmp eq i32 %6, 2, !dbg !4650
  br i1 %7, label %9, label %8, !dbg !4651

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4652
  unreachable, !dbg !4652

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4654
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !4654
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !4588, metadata !DIExpression()), !dbg !4646
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !4655
  call void @llvm.dbg.value(metadata i32 %12, metadata !4583, metadata !DIExpression()), !dbg !4646
  br i1 %1, label %13, label %14, !dbg !4656

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #20, !dbg !4657
  br label %14, !dbg !4660

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !4585, metadata !DIExpression(DW_OP_deref)), !dbg !4646
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !4661
  call void @llvm.dbg.value(metadata i32 %15, metadata !4644, metadata !DIExpression()), !dbg !4646
  %16 = icmp eq i32 %15, 0, !dbg !4662
  br i1 %16, label %18, label %17, !dbg !4664

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4665
  unreachable, !dbg !4665

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !4667
  call void @llvm.dbg.value(metadata i32 %19, metadata !4585, metadata !DIExpression()), !dbg !4646
  %20 = icmp eq i32 %19, 0, !dbg !4669
  br i1 %20, label %43, label %21, !dbg !4670

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4671
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !4671
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !4586, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.value(metadata i8* undef, metadata !4587, metadata !DIExpression()), !dbg !4646
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !4672
  br i1 %24, label %25, label %26, !dbg !4674

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4675
  unreachable, !dbg !4675

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4677
  %28 = load i8*, i8** %27, align 4, !dbg !4677
  call void @llvm.dbg.value(metadata i8* %28, metadata !4587, metadata !DIExpression()), !dbg !4646
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !4678
  call void %23(i32 noundef 1, i8* noundef %28) #20, !dbg !4679
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #20, !dbg !4680
  call void @llvm.dbg.value(metadata i32* %3, metadata !4585, metadata !DIExpression(DW_OP_deref)), !dbg !4646
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !4681
  call void @llvm.dbg.value(metadata i32 %31, metadata !4644, metadata !DIExpression()), !dbg !4646
  %32 = icmp eq i32 %31, 0, !dbg !4682
  br i1 %32, label %34, label %33, !dbg !4684

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4685
  unreachable, !dbg !4685

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !4687
  call void @llvm.dbg.value(metadata i32 %35, metadata !4585, metadata !DIExpression()), !dbg !4646
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !4689
  %37 = load i32, i32* %36, align 4, !dbg !4689
  %38 = icmp ult i32 %35, %37, !dbg !4690
  br i1 %38, label %43, label %39, !dbg !4691

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !4692
  call void @llvm.dbg.value(metadata i32 %40, metadata !4644, metadata !DIExpression()), !dbg !4646
  %41 = icmp eq i32 %40, 0, !dbg !4694
  br i1 %41, label %43, label %42, !dbg !4696

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4697
  unreachable, !dbg !4697

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4699
  ret void, !dbg !4699
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_receive_bytes(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_disable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_enable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4700 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4702, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i1 %1, metadata !4703, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4710
  %4 = bitcast i32* %3 to i8*, !dbg !4711
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4711
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4712
  %6 = load volatile i32, i32* %5, align 4, !dbg !4712
  %7 = icmp eq i32 %6, 2, !dbg !4714
  br i1 %7, label %9, label %8, !dbg !4715

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4716
  unreachable, !dbg !4716

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !4718
  call void @llvm.dbg.value(metadata i32 %10, metadata !4704, metadata !DIExpression()), !dbg !4710
  br i1 %1, label %36, label %11, !dbg !4719

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4720
  %13 = load void (i32, i8*)*, void (i32, i8*)** %12, align 4, !dbg !4720
  call void @llvm.dbg.value(metadata void (i32, i8*)* %13, metadata !4708, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.value(metadata i8* undef, metadata !4709, metadata !DIExpression()), !dbg !4710
  %14 = icmp eq void (i32, i8*)* %13, null, !dbg !4723
  br i1 %14, label %15, label %16, !dbg !4725

15:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4726
  unreachable, !dbg !4726

16:                                               ; preds = %11
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4728
  %18 = load i8*, i8** %17, align 4, !dbg !4728
  call void @llvm.dbg.value(metadata i8* %18, metadata !4709, metadata !DIExpression()), !dbg !4710
  %19 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !4729
  tail call void %13(i32 noundef 2, i8* noundef %18) #20, !dbg !4730
  %20 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #20, !dbg !4731
  call void @llvm.dbg.value(metadata i32* %3, metadata !4707, metadata !DIExpression(DW_OP_deref)), !dbg !4710
  %21 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #20, !dbg !4732
  call void @llvm.dbg.value(metadata i32 %21, metadata !4705, metadata !DIExpression()), !dbg !4710
  %22 = icmp eq i32 %21, 0, !dbg !4733
  br i1 %22, label %24, label %23, !dbg !4735

23:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4736
  unreachable, !dbg !4736

24:                                               ; preds = %16
  %25 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !4738
  %26 = load i32, i32* %25, align 4, !dbg !4738
  %27 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !4739
  %28 = load i32, i32* %27, align 4, !dbg !4739
  %29 = sub i32 %26, %28, !dbg !4740
  call void @llvm.dbg.value(metadata i32 %29, metadata !4706, metadata !DIExpression()), !dbg !4710
  %30 = load i32, i32* %3, align 4, !dbg !4741
  call void @llvm.dbg.value(metadata i32 %30, metadata !4707, metadata !DIExpression()), !dbg !4710
  %31 = icmp ult i32 %30, %29, !dbg !4743
  br i1 %31, label %36, label %32, !dbg !4744

32:                                               ; preds = %24
  %33 = call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !4745
  call void @llvm.dbg.value(metadata i32 %33, metadata !4705, metadata !DIExpression()), !dbg !4710
  %34 = icmp eq i32 %33, 0, !dbg !4747
  br i1 %34, label %36, label %35, !dbg !4749

35:                                               ; preds = %32
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4750
  unreachable, !dbg !4750

36:                                               ; preds = %24, %32, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4752
  ret void, !dbg !4752
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_send_space(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !4753 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4757, metadata !DIExpression()), !dbg !4761
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4762
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !4762
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !4758, metadata !DIExpression()), !dbg !4761
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !4763
  %5 = icmp eq i32 %4, 0, !dbg !4763
  br i1 %5, label %6, label %14, !dbg !4765

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #20, !dbg !4766
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #20, !dbg !4768
  %7 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4769
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !4769
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !4759, metadata !DIExpression()), !dbg !4761
  call void @llvm.dbg.value(metadata i8* undef, metadata !4760, metadata !DIExpression()), !dbg !4761
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !4770
  br i1 %9, label %10, label %11, !dbg !4772

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4773
  unreachable, !dbg !4773

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4775
  %13 = load i8*, i8** %12, align 4, !dbg !4775
  call void @llvm.dbg.value(metadata i8* %13, metadata !4760, metadata !DIExpression()), !dbg !4761
  tail call void %8(i32 noundef -1, i8* noundef %13) #20, !dbg !4776
  br label %14, !dbg !4777

14:                                               ; preds = %11, %1
  ret void, !dbg !4778
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4785, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i32 %1, metadata !4786, metadata !DIExpression()), !dbg !4790
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4791
  br i1 %3, label %4, label %16, !dbg !4793

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #21, !dbg !4794
  br i1 %5, label %6, label %16, !dbg !4795

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4796
  %8 = load volatile i32, i32* %7, align 4, !dbg !4796
  %9 = icmp eq i32 %8, 0, !dbg !4798
  br i1 %9, label %16, label %10, !dbg !4799

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4800
  call void @llvm.dbg.value(metadata i32 %11, metadata !4788, metadata !DIExpression()), !dbg !4790
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !4801
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4802
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4802
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4789, metadata !DIExpression()), !dbg !4790
  %14 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !4803
  %15 = load i32, i32* %14, align 4, !dbg !4803
  call void @llvm.dbg.value(metadata i32 %15, metadata !4787, metadata !DIExpression()), !dbg !4790
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %13, i32 noundef %15) #20, !dbg !4804
  br label %16, !dbg !4805

16:                                               ; preds = %6, %2, %4, %10
  %17 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4790
  ret i32 %17, !dbg !4806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !4807 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4811, metadata !DIExpression()), !dbg !4812
  %2 = icmp ult i32 %0, 4, !dbg !4813
  ret i1 %2, !dbg !4814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !4815 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4819, metadata !DIExpression()), !dbg !4820
  %2 = icmp ult i32 %0, 13, !dbg !4821
  ret i1 %2, !dbg !4822
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4839, metadata !DIExpression()), !dbg !4843
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4840, metadata !DIExpression()), !dbg !4843
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4844
  br i1 %3, label %4, label %23, !dbg !4846

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !4847
  br i1 %5, label %6, label %23, !dbg !4848

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4849
  %8 = load volatile i32, i32* %7, align 4, !dbg !4849
  %9 = icmp eq i32 %8, 0, !dbg !4851
  br i1 %9, label %23, label %10, !dbg !4852

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4853
  call void @llvm.dbg.value(metadata i32 %11, metadata !4841, metadata !DIExpression()), !dbg !4843
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !4854
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4855
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4855
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4842, metadata !DIExpression()), !dbg !4843
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4856
  %15 = load i32, i32* %14, align 4, !dbg !4856
  %16 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %15) #21, !dbg !4857
  %17 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4858
  %18 = load i32, i32* %17, align 4, !dbg !4858
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4859
  %20 = load i32, i32* %19, align 4, !dbg !4859
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4860
  %22 = load i32, i32* %21, align 4, !dbg !4860
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %13, i32 noundef %18, i32 noundef %20, i32 noundef %22) #20, !dbg !4861
  br label %23, !dbg !4862

23:                                               ; preds = %6, %2, %4, %10
  %24 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4843
  ret i32 %24, !dbg !4863
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !4864 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !4868, metadata !DIExpression()), !dbg !4869
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !4870
  %3 = load i32, i32* %2, align 4, !dbg !4870
  %4 = icmp ult i32 %3, 13, !dbg !4871
  br i1 %4, label %5, label %17, !dbg !4872

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !4873
  %7 = load i32, i32* %6, align 4, !dbg !4873
  %8 = icmp ult i32 %7, 4, !dbg !4874
  br i1 %8, label %9, label %17, !dbg !4875

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !4876
  %11 = load i32, i32* %10, align 4, !dbg !4876
  %12 = icmp ult i32 %11, 2, !dbg !4877
  br i1 %12, label %13, label %17, !dbg !4878

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !4879
  %15 = load i32, i32* %14, align 4, !dbg !4879
  %16 = icmp ult i32 %15, 3, !dbg !4880
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !4869
  ret i1 %18, !dbg !4881
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4882 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4887, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4888, metadata !DIExpression()), !dbg !4895
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4896
  br i1 %3, label %4, label %41, !dbg !4898

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !4899
  br i1 %5, label %6, label %41, !dbg !4900

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4901
  call void @llvm.dbg.value(metadata i32 %7, metadata !4892, metadata !DIExpression()), !dbg !4895
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4902
  %9 = load volatile i32, i32* %8, align 4, !dbg !4902
  %10 = icmp eq i32 %9, 0, !dbg !4904
  br i1 %10, label %12, label %11, !dbg !4905

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4906
  br label %41, !dbg !4908

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !4909
  br i1 %13, label %22, label %14, !dbg !4911

14:                                               ; preds = %12, %14
  %15 = phi i32 [ %19, %14 ], [ 0, %12 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !4890, metadata !DIExpression()), !dbg !4895
  %16 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %15, !dbg !4912
  store volatile i32 0, i32* %16, align 4, !dbg !4917
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 1, !dbg !4918
  store i8* null, i8** %17, align 4, !dbg !4919
  %18 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 0, !dbg !4920
  store void (i32, i8*)* null, void (i32, i8*)** %18, align 4, !dbg !4921
  %19 = add nuw nsw i32 %15, 1, !dbg !4922
  call void @llvm.dbg.value(metadata i32 %19, metadata !4890, metadata !DIExpression()), !dbg !4895
  %20 = icmp eq i32 %19, 4, !dbg !4923
  br i1 %20, label %21, label %14, !dbg !4924, !llvm.loop !4925

21:                                               ; preds = %14
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !4927
  br label %22, !dbg !4928

22:                                               ; preds = %21, %12
  store volatile i32 1, i32* %8, align 4, !dbg !4929
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4930
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !4931
  %24 = load i32, i32* %23, align 4, !dbg !4931
  %25 = tail call i32 @hal_clock_enable(i32 noundef %24) #20, !dbg !4932
  call void @llvm.dbg.value(metadata i32 %25, metadata !4893, metadata !DIExpression()), !dbg !4895
  %26 = icmp eq i32 %25, 0, !dbg !4933
  br i1 %26, label %28, label %27, !dbg !4935

27:                                               ; preds = %22
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4936
  unreachable, !dbg !4936

28:                                               ; preds = %22
  %29 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4938
  %30 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %29, align 4, !dbg !4938
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %30, metadata !4889, metadata !DIExpression()), !dbg !4895
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !4939
  %31 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4940
  %32 = load i32, i32* %31, align 4, !dbg !4940
  %33 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %32, !dbg !4941
  %34 = load i32, i32* %33, align 4, !dbg !4941
  call void @llvm.dbg.value(metadata i32 %34, metadata !4891, metadata !DIExpression()), !dbg !4895
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %30, i32 noundef %34) #20, !dbg !4942
  %35 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4943
  %36 = load i32, i32* %35, align 4, !dbg !4943
  %37 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4944
  %38 = load i32, i32* %37, align 4, !dbg !4944
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4945
  %40 = load i32, i32* %39, align 4, !dbg !4945
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %30, i32 noundef %36, i32 noundef %38, i32 noundef %40) #20, !dbg !4946
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !4947
  br label %41, !dbg !4948

41:                                               ; preds = %2, %4, %28, %11
  %42 = phi i32 [ -3, %11 ], [ 0, %28 ], [ -4, %4 ], [ -4, %2 ], !dbg !4895
  ret i32 %42, !dbg !4949
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !4950 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4954, metadata !DIExpression()), !dbg !4961
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4962
  br i1 %2, label %3, label %54, !dbg !4964

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4965
  call void @llvm.dbg.value(metadata i32 %4, metadata !4958, metadata !DIExpression()), !dbg !4961
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4966
  %6 = load volatile i32, i32* %5, align 4, !dbg !4966
  %7 = icmp eq i32 %6, 0, !dbg !4968
  br i1 %7, label %52, label %8, !dbg !4969

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4970
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !4970
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !4955, metadata !DIExpression()), !dbg !4961
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !4971
  %11 = load volatile i32, i32* %5, align 4, !dbg !4972
  %12 = icmp eq i32 %11, 2, !dbg !4974
  br i1 %12, label %13, label %43, !dbg !4975

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !4976
  call void @llvm.dbg.value(metadata i32 %14, metadata !4956, metadata !DIExpression()), !dbg !4961
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !4978
  call void @llvm.dbg.value(metadata i32 %15, metadata !4957, metadata !DIExpression()), !dbg !4961
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #20, !dbg !4979
  call void @llvm.dbg.value(metadata i32 %16, metadata !4959, metadata !DIExpression()), !dbg !4961
  %17 = icmp eq i32 %16, 0, !dbg !4980
  br i1 %17, label %19, label %18, !dbg !4982

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4983
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4985
  unreachable, !dbg !4985

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #20, !dbg !4986
  call void @llvm.dbg.value(metadata i32 %20, metadata !4959, metadata !DIExpression()), !dbg !4961
  %21 = icmp eq i32 %20, 0, !dbg !4987
  br i1 %21, label %23, label %22, !dbg !4989

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4990
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4992
  unreachable, !dbg !4992

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #20, !dbg !4993
  call void @llvm.dbg.value(metadata i32 %24, metadata !4959, metadata !DIExpression()), !dbg !4961
  %25 = icmp eq i32 %24, 0, !dbg !4994
  br i1 %25, label %27, label %26, !dbg !4996

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4997
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4999
  unreachable, !dbg !4999

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #20, !dbg !5000
  call void @llvm.dbg.value(metadata i32 %28, metadata !4959, metadata !DIExpression()), !dbg !4961
  %29 = icmp eq i32 %28, 0, !dbg !5001
  br i1 %29, label %31, label %30, !dbg !5003

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5004
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5006
  unreachable, !dbg !5006

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #20, !dbg !5007
  call void @llvm.dbg.value(metadata i32 %32, metadata !4959, metadata !DIExpression()), !dbg !4961
  %33 = icmp eq i32 %32, 0, !dbg !5008
  br i1 %33, label %35, label %34, !dbg !5010

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5011
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5013
  unreachable, !dbg !5013

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #20, !dbg !5014
  call void @llvm.dbg.value(metadata i32 %36, metadata !4959, metadata !DIExpression()), !dbg !4961
  %37 = icmp eq i32 %36, 0, !dbg !5015
  br i1 %37, label %39, label %38, !dbg !5017

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5018
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5020
  unreachable, !dbg !5020

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5021
  %41 = load i32, i32* %40, align 4, !dbg !5021
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #20, !dbg !5022
  br label %43, !dbg !5023

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !5024
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !5025
  %45 = load i32, i32* %44, align 4, !dbg !5025
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #20, !dbg !5026
  call void @llvm.dbg.value(metadata i32 %46, metadata !4960, metadata !DIExpression()), !dbg !4961
  %47 = icmp eq i32 %46, 0, !dbg !5027
  br i1 %47, label %49, label %48, !dbg !5029

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5030
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5032
  unreachable, !dbg !5032

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5033
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !5034
  %51 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5035
  store i8* null, i8** %51, align 4, !dbg !5036
  store volatile i32 0, i32* %5, align 4, !dbg !5037
  br label %52, !dbg !5038

52:                                               ; preds = %3, %49
  %53 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4961
  br label %54, !dbg !5039

54:                                               ; preds = %52, %1
  %55 = phi i32 [ -4, %1 ], [ %53, %52 ], !dbg !4961
  ret i32 %55, !dbg !5039
}

; Function Attrs: optsize
declare dso_local i32 @vdma_stop(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_deinit(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !5040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5044, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i8 %1, metadata !5045, metadata !DIExpression()), !dbg !5047
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5048
  br i1 %3, label %4, label %11, !dbg !5050

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5051
  %6 = load volatile i32, i32* %5, align 4, !dbg !5051
  %7 = icmp eq i32 %6, 1, !dbg !5053
  br i1 %7, label %8, label %11, !dbg !5054

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5055
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !5055
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !5046, metadata !DIExpression()), !dbg !5047
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #20, !dbg !5056
  br label %11, !dbg !5057

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !5057
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5064, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i8* %1, metadata !5065, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i32 %2, metadata !5066, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i32 0, metadata !5067, metadata !DIExpression()), !dbg !5068
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5069
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !5071
  br i1 %6, label %7, label %20, !dbg !5071

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5072
  %9 = load volatile i32, i32* %8, align 4, !dbg !5072
  %10 = icmp ne i32 %9, 1, !dbg !5074
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !5075
  call void @llvm.dbg.value(metadata i32 0, metadata !5067, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i8* %1, metadata !5065, metadata !DIExpression()), !dbg !5068
  br i1 %12, label %20, label %13, !dbg !5075

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5067, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i8* %15, metadata !5065, metadata !DIExpression()), !dbg !5068
  %16 = load i8, i8* %15, align 1, !dbg !5076
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #21, !dbg !5080
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !5081
  call void @llvm.dbg.value(metadata i8* %17, metadata !5065, metadata !DIExpression()), !dbg !5068
  %18 = add nuw i32 %14, 1, !dbg !5082
  call void @llvm.dbg.value(metadata i32 %18, metadata !5067, metadata !DIExpression()), !dbg !5068
  %19 = icmp eq i32 %18, %2, !dbg !5083
  br i1 %19, label %20, label %13, !dbg !5084, !llvm.loop !5085

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !5068
  ret i32 %21, !dbg !5087
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5088 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5090, metadata !DIExpression()), !dbg !5098
  call void @llvm.dbg.value(metadata i8* %1, metadata !5091, metadata !DIExpression()), !dbg !5098
  call void @llvm.dbg.value(metadata i32 %2, metadata !5092, metadata !DIExpression()), !dbg !5098
  %5 = bitcast i32* %4 to i8*, !dbg !5099
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5099
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5100
  %7 = xor i1 %6, true, !dbg !5102
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5102
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5102
  br i1 %11, label %45, label %12, !dbg !5102

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5103
  %14 = load volatile i32, i32* %13, align 4, !dbg !5103
  %15 = icmp eq i32 %14, 2, !dbg !5105
  br i1 %15, label %16, label %45, !dbg !5106

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5107
  call void @llvm.dbg.value(metadata i32 %17, metadata !5093, metadata !DIExpression()), !dbg !5098
  call void @llvm.dbg.value(metadata i32* %4, metadata !5096, metadata !DIExpression(DW_OP_deref)), !dbg !5098
  %18 = call i32 @vdma_get_available_send_space(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !5108
  call void @llvm.dbg.value(metadata i32 %18, metadata !5097, metadata !DIExpression()), !dbg !5098
  %19 = icmp eq i32 %18, 0, !dbg !5109
  br i1 %19, label %21, label %20, !dbg !5111

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5112
  unreachable, !dbg !5112

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !5114
  call void @llvm.dbg.value(metadata i32 %22, metadata !5096, metadata !DIExpression()), !dbg !5098
  %23 = icmp ult i32 %22, %2, !dbg !5116
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !5095, metadata !DIExpression()), !dbg !5098
  call void @llvm.dbg.value(metadata i32 0, metadata !5094, metadata !DIExpression()), !dbg !5098
  %25 = icmp eq i32 %24, 0, !dbg !5117
  br i1 %25, label %38, label %28, !dbg !5120

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !5094, metadata !DIExpression()), !dbg !5098
  %27 = icmp eq i32 %34, %24, !dbg !5117
  br i1 %27, label %36, label %28, !dbg !5120, !llvm.loop !5121

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %34, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !5094, metadata !DIExpression()), !dbg !5098
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5123
  %31 = load i8, i8* %30, align 1, !dbg !5123
  %32 = call i32 @vdma_push_data(i32 noundef %17, i8 noundef zeroext %31) #20, !dbg !5125
  call void @llvm.dbg.value(metadata i32 %32, metadata !5097, metadata !DIExpression()), !dbg !5098
  %33 = icmp eq i32 %32, 0, !dbg !5126
  %34 = add nuw i32 %29, 1, !dbg !5128
  call void @llvm.dbg.value(metadata i32 %34, metadata !5094, metadata !DIExpression()), !dbg !5098
  br i1 %33, label %26, label %35, !dbg !5129

35:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5130
  unreachable, !dbg !5130

36:                                               ; preds = %26
  %37 = load i32, i32* %4, align 4, !dbg !5132
  br label %38, !dbg !5132

38:                                               ; preds = %36, %21
  %39 = phi i32 [ %37, %36 ], [ %22, %21 ], !dbg !5132
  call void @llvm.dbg.value(metadata i32 %39, metadata !5096, metadata !DIExpression()), !dbg !5098
  %40 = icmp eq i32 %24, %39, !dbg !5134
  br i1 %40, label %41, label %45, !dbg !5135

41:                                               ; preds = %38
  %42 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !5136
  call void @llvm.dbg.value(metadata i32 %42, metadata !5097, metadata !DIExpression()), !dbg !5098
  %43 = icmp eq i32 %42, 0, !dbg !5138
  br i1 %43, label %45, label %44, !dbg !5140

44:                                               ; preds = %41
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5141
  unreachable, !dbg !5141

45:                                               ; preds = %38, %41, %12, %3
  %46 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %41 ], [ %24, %38 ], !dbg !5098
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5143
  ret i32 %46, !dbg !5143
}

; Function Attrs: optsize
declare dso_local i32 @vdma_push_data(i32 noundef, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !5144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5148, metadata !DIExpression()), !dbg !5151
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5152
  br i1 %2, label %3, label %11, !dbg !5154

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5155
  %5 = load volatile i32, i32* %4, align 4, !dbg !5155
  %6 = icmp eq i32 %5, 1, !dbg !5157
  br i1 %6, label %7, label %11, !dbg !5158

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5159
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5159
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5150, metadata !DIExpression()), !dbg !5151
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5160
  call void @llvm.dbg.value(metadata i8 %10, metadata !5149, metadata !DIExpression()), !dbg !5151
  br label %11, !dbg !5161

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5151
  ret i8 %12, !dbg !5162
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !5163 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5167, metadata !DIExpression()), !dbg !5170
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5171
  br i1 %2, label %3, label %11, !dbg !5173

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5174
  %5 = load volatile i32, i32* %4, align 4, !dbg !5174
  %6 = icmp eq i32 %5, 1, !dbg !5176
  br i1 %6, label %7, label %11, !dbg !5177

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5178
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5178
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5169, metadata !DIExpression()), !dbg !5170
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5179
  call void @llvm.dbg.value(metadata i32 %10, metadata !5168, metadata !DIExpression()), !dbg !5170
  br label %11, !dbg !5180

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5170
  ret i32 %12, !dbg !5181
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5186, metadata !DIExpression()), !dbg !5191
  call void @llvm.dbg.value(metadata i8* %1, metadata !5187, metadata !DIExpression()), !dbg !5191
  call void @llvm.dbg.value(metadata i32 %2, metadata !5188, metadata !DIExpression()), !dbg !5191
  call void @llvm.dbg.value(metadata i8* %1, metadata !5190, metadata !DIExpression()), !dbg !5191
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5192
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !5194
  br i1 %6, label %7, label %19, !dbg !5194

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5195
  %9 = load volatile i32, i32* %8, align 4, !dbg !5195
  %10 = icmp ne i32 %9, 1, !dbg !5197
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !5198
  call void @llvm.dbg.value(metadata i32 0, metadata !5189, metadata !DIExpression()), !dbg !5191
  br i1 %12, label %19, label %13, !dbg !5198

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5189, metadata !DIExpression()), !dbg !5191
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #21, !dbg !5199
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !5203
  store i8 %15, i8* %16, align 1, !dbg !5204
  %17 = add nuw i32 %14, 1, !dbg !5205
  call void @llvm.dbg.value(metadata i32 %17, metadata !5189, metadata !DIExpression()), !dbg !5191
  %18 = icmp eq i32 %17, %2, !dbg !5206
  br i1 %18, label %19, label %13, !dbg !5207, !llvm.loop !5208

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !5191
  ret i32 %20, !dbg !5210
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5211 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5213, metadata !DIExpression()), !dbg !5221
  call void @llvm.dbg.value(metadata i8* %1, metadata !5214, metadata !DIExpression()), !dbg !5221
  call void @llvm.dbg.value(metadata i32 %2, metadata !5215, metadata !DIExpression()), !dbg !5221
  %5 = bitcast i32* %4 to i8*, !dbg !5222
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5222
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5223
  %7 = xor i1 %6, true, !dbg !5225
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5225
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5225
  br i1 %11, label %44, label %12, !dbg !5225

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5226
  %14 = load volatile i32, i32* %13, align 4, !dbg !5226
  %15 = icmp eq i32 %14, 2, !dbg !5228
  br i1 %15, label %16, label %44, !dbg !5229

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5230
  call void @llvm.dbg.value(metadata i32 %17, metadata !5216, metadata !DIExpression()), !dbg !5221
  call void @llvm.dbg.value(metadata i32* %4, metadata !5218, metadata !DIExpression(DW_OP_deref)), !dbg !5221
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !5231
  call void @llvm.dbg.value(metadata i32 %18, metadata !5220, metadata !DIExpression()), !dbg !5221
  %19 = icmp eq i32 %18, 0, !dbg !5232
  br i1 %19, label %21, label %20, !dbg !5234

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5235
  unreachable, !dbg !5235

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !5237
  call void @llvm.dbg.value(metadata i32 %22, metadata !5218, metadata !DIExpression()), !dbg !5221
  %23 = icmp ult i32 %22, %2, !dbg !5239
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !5217, metadata !DIExpression()), !dbg !5221
  call void @llvm.dbg.value(metadata i32 0, metadata !5219, metadata !DIExpression()), !dbg !5221
  %25 = icmp eq i32 %24, 0, !dbg !5240
  br i1 %25, label %37, label %28, !dbg !5243

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !5219, metadata !DIExpression()), !dbg !5221
  %27 = icmp eq i32 %33, %24, !dbg !5240
  br i1 %27, label %35, label %28, !dbg !5243, !llvm.loop !5244

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !5219, metadata !DIExpression()), !dbg !5221
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5246
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #20, !dbg !5248
  call void @llvm.dbg.value(metadata i32 %31, metadata !5220, metadata !DIExpression()), !dbg !5221
  %32 = icmp eq i32 %31, 0, !dbg !5249
  %33 = add nuw i32 %29, 1, !dbg !5251
  call void @llvm.dbg.value(metadata i32 %33, metadata !5219, metadata !DIExpression()), !dbg !5221
  br i1 %32, label %26, label %34, !dbg !5252

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5253
  unreachable, !dbg !5253

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !5255
  br label %37, !dbg !5255

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !5255
  call void @llvm.dbg.value(metadata i32 %38, metadata !5218, metadata !DIExpression()), !dbg !5221
  %39 = icmp eq i32 %24, %38, !dbg !5257
  br i1 %39, label %40, label %44, !dbg !5258

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !5259
  call void @llvm.dbg.value(metadata i32 %41, metadata !5220, metadata !DIExpression()), !dbg !5221
  %42 = icmp eq i32 %41, 0, !dbg !5261
  br i1 %42, label %44, label %43, !dbg !5263

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5264
  unreachable, !dbg !5264

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !5221
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5266
  ret i32 %45, !dbg !5266
}

; Function Attrs: optsize
declare dso_local i32 @vdma_pop_data(i32 noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !5267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5271, metadata !DIExpression()), !dbg !5279
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !5272, metadata !DIExpression()), !dbg !5279
  call void @llvm.dbg.value(metadata i8* %2, metadata !5273, metadata !DIExpression()), !dbg !5279
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5280
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !5282
  br i1 %6, label %7, label %39, !dbg !5282

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5283
  call void @llvm.dbg.value(metadata i32 %8, metadata !5276, metadata !DIExpression()), !dbg !5279
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5284
  %10 = load volatile i32, i32* %9, align 4, !dbg !5284
  %11 = icmp eq i32 %10, 1, !dbg !5286
  br i1 %11, label %12, label %37, !dbg !5287

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5288
  call void @llvm.dbg.value(metadata i32 %13, metadata !5274, metadata !DIExpression()), !dbg !5279
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5289
  call void @llvm.dbg.value(metadata i32 %14, metadata !5275, metadata !DIExpression()), !dbg !5279
  %15 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5290
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !5291
  %16 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5292
  store i8* %2, i8** %16, align 4, !dbg !5293
  %17 = shl i32 %0, 1, !dbg !5294
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !5295
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #20, !dbg !5296
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !5297
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #20, !dbg !5298
  call void @llvm.dbg.value(metadata i32 %20, metadata !5277, metadata !DIExpression()), !dbg !5279
  %21 = icmp eq i32 %20, 0, !dbg !5299
  br i1 %21, label %23, label %22, !dbg !5301

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5302
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5304
  unreachable, !dbg !5304

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !5305
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !5306
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #20, !dbg !5307
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !5308
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #20, !dbg !5309
  call void @llvm.dbg.value(metadata i32 %27, metadata !5277, metadata !DIExpression()), !dbg !5279
  %28 = icmp eq i32 %27, 0, !dbg !5310
  br i1 %28, label %30, label %29, !dbg !5312

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5313
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5315
  unreachable, !dbg !5315

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5316
  %32 = load i32, i32* %31, align 4, !dbg !5316
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #20, !dbg !5317
  call void @llvm.dbg.value(metadata i32 %33, metadata !5278, metadata !DIExpression()), !dbg !5279
  %34 = icmp eq i32 %33, 0, !dbg !5318
  br i1 %34, label %36, label %35, !dbg !5320

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5321
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5323
  unreachable, !dbg !5323

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #21, !dbg !5324
  store volatile i32 2, i32* %9, align 4, !dbg !5325
  br label %37, !dbg !5326

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5279
  br label %39, !dbg !5327

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !5279
  ret i32 %40, !dbg !5327
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !5328 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5333, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i8* %1, metadata !5334, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i8* %1, metadata !5335, metadata !DIExpression()), !dbg !5336
  %3 = load i8, i8* %1, align 4, !dbg !5337, !range !2756
  %4 = icmp eq i8 %3, 0, !dbg !5337
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !5339
  %6 = bitcast i8* %5 to i32*, !dbg !5339
  %7 = load i32, i32* %6, align 4, !dbg !5339
  br i1 %4, label %9, label %8, !dbg !5340

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5335, metadata !DIExpression()), !dbg !5336
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !5341
  br label %10, !dbg !5343

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !5344
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !5346
}

; Function Attrs: optsize
declare dso_local i32 @vdma_register_callback(i32 noundef, void (i32, i8*)* noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !5347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5349, metadata !DIExpression()), !dbg !5354
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5355
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !5355
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !5350, metadata !DIExpression()), !dbg !5354
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5356
  call void @llvm.dbg.value(metadata i32 %4, metadata !5351, metadata !DIExpression()), !dbg !5354
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5357
  call void @llvm.dbg.value(metadata i32 %5, metadata !5352, metadata !DIExpression()), !dbg !5354
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5358
  %6 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5359
  %7 = load i32, i32* %6, align 4, !dbg !5359
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef %7) #20, !dbg !5360
  %9 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #20, !dbg !5361
  call void @llvm.dbg.value(metadata i32 %9, metadata !5353, metadata !DIExpression()), !dbg !5354
  %10 = icmp eq i32 %9, 0, !dbg !5362
  br i1 %10, label %12, label %11, !dbg !5364

11:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5365
  unreachable, !dbg !5365

12:                                               ; preds = %1
  %13 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #20, !dbg !5367
  call void @llvm.dbg.value(metadata i32 %13, metadata !5353, metadata !DIExpression()), !dbg !5354
  %14 = icmp eq i32 %13, 0, !dbg !5368
  br i1 %14, label %16, label %15, !dbg !5370

15:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5371
  unreachable, !dbg !5371

16:                                               ; preds = %12
  %17 = tail call i32 @vdma_start(i32 noundef %4) #20, !dbg !5373
  call void @llvm.dbg.value(metadata i32 %17, metadata !5353, metadata !DIExpression()), !dbg !5354
  %18 = icmp eq i32 %17, 0, !dbg !5374
  br i1 %18, label %20, label %19, !dbg !5376

19:                                               ; preds = %16
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5377
  unreachable, !dbg !5377

20:                                               ; preds = %16
  %21 = tail call i32 @vdma_start(i32 noundef %5) #20, !dbg !5379
  call void @llvm.dbg.value(metadata i32 %21, metadata !5353, metadata !DIExpression()), !dbg !5354
  %22 = icmp eq i32 %21, 0, !dbg !5380
  br i1 %22, label %24, label %23, !dbg !5382

23:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5383
  unreachable, !dbg !5383

24:                                               ; preds = %20
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5385
  ret void, !dbg !5386
}

; Function Attrs: optsize
declare dso_local i32 @vdma_start(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !5387 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5389, metadata !DIExpression()), !dbg !5393
  %3 = bitcast i32* %2 to i8*, !dbg !5394
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5394
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5395
  br i1 %4, label %5, label %16, !dbg !5397

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5398
  %7 = load volatile i32, i32* %6, align 4, !dbg !5398
  %8 = icmp eq i32 %7, 2, !dbg !5400
  br i1 %8, label %9, label %16, !dbg !5401

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5402
  call void @llvm.dbg.value(metadata i32 %10, metadata !5390, metadata !DIExpression()), !dbg !5393
  call void @llvm.dbg.value(metadata i32* %2, metadata !5391, metadata !DIExpression(DW_OP_deref)), !dbg !5393
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !5403
  call void @llvm.dbg.value(metadata i32 %11, metadata !5392, metadata !DIExpression()), !dbg !5393
  %12 = icmp eq i32 %11, 0, !dbg !5404
  br i1 %12, label %14, label %13, !dbg !5406

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5407
  unreachable, !dbg !5407

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5409
  call void @llvm.dbg.value(metadata i32 %15, metadata !5391, metadata !DIExpression()), !dbg !5393
  br label %16, !dbg !5410

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5393
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5411
  ret i32 %17, !dbg !5411
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !5412 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5414, metadata !DIExpression()), !dbg !5418
  %3 = bitcast i32* %2 to i8*, !dbg !5419
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5419
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5420
  br i1 %4, label %5, label %16, !dbg !5422

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5423
  %7 = load volatile i32, i32* %6, align 4, !dbg !5423
  %8 = icmp eq i32 %7, 2, !dbg !5425
  br i1 %8, label %9, label %16, !dbg !5426

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5427
  call void @llvm.dbg.value(metadata i32 %10, metadata !5415, metadata !DIExpression()), !dbg !5418
  call void @llvm.dbg.value(metadata i32* %2, metadata !5416, metadata !DIExpression(DW_OP_deref)), !dbg !5418
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !5428
  call void @llvm.dbg.value(metadata i32 %11, metadata !5417, metadata !DIExpression()), !dbg !5418
  %12 = icmp eq i32 %11, 0, !dbg !5429
  br i1 %12, label %14, label %13, !dbg !5431

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5432
  unreachable, !dbg !5432

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5434
  call void @llvm.dbg.value(metadata i32 %15, metadata !5416, metadata !DIExpression()), !dbg !5418
  br label %16, !dbg !5435

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5418
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5436
  ret i32 %17, !dbg !5436
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5439, metadata !DIExpression()), !dbg !5441
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5442
  br i1 %2, label %3, label %10, !dbg !5444

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5445
  %5 = load volatile i32, i32* %4, align 4, !dbg !5445
  %6 = icmp eq i32 %5, 0, !dbg !5447
  br i1 %6, label %10, label %7, !dbg !5448

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5449
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5449
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5440, metadata !DIExpression()), !dbg !5441
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5450
  br label %10, !dbg !5451

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5441
  ret i32 %11, !dbg !5452
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !5453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5457, metadata !DIExpression()), !dbg !5462
  call void @llvm.dbg.value(metadata i8 %1, metadata !5458, metadata !DIExpression()), !dbg !5462
  call void @llvm.dbg.value(metadata i8 %2, metadata !5459, metadata !DIExpression()), !dbg !5462
  call void @llvm.dbg.value(metadata i8 %3, metadata !5460, metadata !DIExpression()), !dbg !5462
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5463
  br i1 %5, label %6, label %13, !dbg !5465

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5466
  %8 = load volatile i32, i32* %7, align 4, !dbg !5466
  %9 = icmp eq i32 %8, 0, !dbg !5468
  br i1 %9, label %13, label %10, !dbg !5469

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5470
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !5470
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !5461, metadata !DIExpression()), !dbg !5462
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #20, !dbg !5471
  br label %13, !dbg !5472

13:                                               ; preds = %6, %4, %10
  %14 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !5462
  ret i32 %14, !dbg !5473
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5474 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5476, metadata !DIExpression()), !dbg !5478
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5479
  br i1 %2, label %3, label %10, !dbg !5481

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5482
  %5 = load volatile i32, i32* %4, align 4, !dbg !5482
  %6 = icmp eq i32 %5, 0, !dbg !5484
  br i1 %6, label %10, label %7, !dbg !5485

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5486
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5486
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5477, metadata !DIExpression()), !dbg !5478
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5487
  br label %10, !dbg !5488

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5478
  ret i32 %11, !dbg !5489
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5490 {
  %3 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5496, metadata !DIExpression()), !dbg !5508
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !5497, metadata !DIExpression()), !dbg !5508
  %4 = bitcast %struct.hal_cache_region_config_t* %3 to i8*, !dbg !5509
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5509
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %3, metadata !5499, metadata !DIExpression()), !dbg !5510
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5511
  br i1 %5, label %6, label %101, !dbg !5513

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !5514
  %8 = load i8*, i8** %7, align 4, !dbg !5514
  %9 = icmp eq i8* %8, null, !dbg !5516
  br i1 %9, label %101, label %10, !dbg !5517

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !5518
  %12 = load i8*, i8** %11, align 4, !dbg !5518
  %13 = icmp eq i8* %12, null, !dbg !5519
  br i1 %13, label %101, label %14, !dbg !5520

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !5521
  %16 = load i32, i32* %15, align 4, !dbg !5521
  %17 = icmp ugt i32 %16, 131071, !dbg !5523
  br i1 %17, label %101, label %18, !dbg !5524

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !5525
  %20 = load i32, i32* %19, align 4, !dbg !5525
  %21 = icmp ugt i32 %20, 131071, !dbg !5526
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !5527
  br i1 %23, label %101, label %24, !dbg !5527

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !5528
  %26 = load i32, i32* %25, align 4, !dbg !5528
  %27 = icmp ugt i32 %26, 131071, !dbg !5530
  br i1 %27, label %101, label %28, !dbg !5531

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !5532
  %30 = load i32, i32* %29, align 4, !dbg !5532
  %31 = icmp ugt i32 %30, 131071, !dbg !5533
  br i1 %31, label %101, label %32, !dbg !5534

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !5535
  %34 = load i32, i32* %33, align 4, !dbg !5535
  %35 = icmp ugt i32 %34, 131071, !dbg !5536
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !5537
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !5537
  br i1 %39, label %101, label %40, !dbg !5537

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5538
  %42 = load volatile i32, i32* %41, align 4, !dbg !5538
  %43 = icmp eq i32 %42, 1, !dbg !5540
  br i1 %43, label %44, label %101, !dbg !5541

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5542
  call void @llvm.dbg.value(metadata i32 %45, metadata !5505, metadata !DIExpression()), !dbg !5508
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5543
  call void @llvm.dbg.value(metadata i32 %46, metadata !5506, metadata !DIExpression()), !dbg !5508
  %47 = tail call i32 @vdma_init(i32 noundef %45) #20, !dbg !5544
  call void @llvm.dbg.value(metadata i32 %47, metadata !5507, metadata !DIExpression()), !dbg !5508
  %48 = icmp eq i32 %47, 0, !dbg !5545
  br i1 %48, label %50, label %49, !dbg !5547

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5548
  unreachable, !dbg !5548

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !5550
  %52 = ptrtoint i8* %51 to i32, !dbg !5551
  %53 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 0, !dbg !5552
  store i32 %52, i32* %53, align 4, !dbg !5553
  %54 = load i32, i32* %15, align 4, !dbg !5554
  %55 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 1, !dbg !5555
  store i32 %54, i32* %55, align 4, !dbg !5556
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !5557
  call void @llvm.dbg.value(metadata i32 %56, metadata !5507, metadata !DIExpression()), !dbg !5508
  %57 = icmp eq i32 %56, 0, !dbg !5558
  br i1 %57, label %59, label %58, !dbg !5560

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5561
  unreachable, !dbg !5561

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !5563
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #20, !dbg !5564
  call void @llvm.dbg.value(metadata i32 %61, metadata !5507, metadata !DIExpression()), !dbg !5508
  %62 = icmp eq i32 %61, 0, !dbg !5565
  br i1 %62, label %64, label %63, !dbg !5567

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5568
  unreachable, !dbg !5568

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #20, !dbg !5570
  call void @llvm.dbg.value(metadata i32 %65, metadata !5507, metadata !DIExpression()), !dbg !5508
  %66 = icmp eq i32 %65, 0, !dbg !5571
  br i1 %66, label %68, label %67, !dbg !5573

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5574
  unreachable, !dbg !5574

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !5576
  %70 = ptrtoint i8* %69 to i32, !dbg !5577
  store i32 %70, i32* %53, align 4, !dbg !5578
  %71 = load i32, i32* %25, align 4, !dbg !5579
  store i32 %71, i32* %55, align 4, !dbg !5580
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !5581
  call void @llvm.dbg.value(metadata i32 %72, metadata !5507, metadata !DIExpression()), !dbg !5508
  %73 = icmp eq i32 %72, 0, !dbg !5582
  br i1 %73, label %75, label %74, !dbg !5584

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5585
  unreachable, !dbg !5585

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !5587
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #20, !dbg !5588
  call void @llvm.dbg.value(metadata i32 %77, metadata !5507, metadata !DIExpression()), !dbg !5508
  %78 = icmp eq i32 %77, 0, !dbg !5589
  br i1 %78, label %80, label %79, !dbg !5591

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5592
  unreachable, !dbg !5592

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !5594
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #20, !dbg !5595
  call void @llvm.dbg.value(metadata i32 %82, metadata !5507, metadata !DIExpression()), !dbg !5508
  %83 = icmp eq i32 %82, 0, !dbg !5596
  br i1 %83, label %85, label %84, !dbg !5598

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5599
  unreachable, !dbg !5599

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #20, !dbg !5601
  call void @llvm.dbg.value(metadata i32 %86, metadata !5498, metadata !DIExpression()), !dbg !5508
  %87 = load i8*, i8** %7, align 4, !dbg !5602
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !5603
  store i8* %87, i8** %88, align 4, !dbg !5604
  %89 = load i32, i32* %15, align 4, !dbg !5605
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5606
  store i32 %89, i32* %90, align 4, !dbg !5607
  %91 = load i32, i32* %19, align 4, !dbg !5608
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !5609
  store i32 %91, i32* %92, align 4, !dbg !5610
  %93 = load i32, i32* %33, align 4, !dbg !5611
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !5612
  store i32 %93, i32* %94, align 4, !dbg !5613
  %95 = load i8*, i8** %11, align 4, !dbg !5614
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !5615
  store i8* %95, i8** %96, align 4, !dbg !5616
  %97 = load i32, i32* %25, align 4, !dbg !5617
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !5618
  store i32 %97, i32* %98, align 4, !dbg !5619
  %99 = load i32, i32* %29, align 4, !dbg !5620
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !5621
  store i32 %99, i32* %100, align 4, !dbg !5622
  call void @restore_interrupt_mask(i32 noundef %86) #20, !dbg !5623
  br label %101, !dbg !5624

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !5508
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5625
  ret i32 %102, !dbg !5625
}

; Function Attrs: optsize
declare dso_local i32 @vdma_init(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_configure(i32 noundef, %struct.hal_cache_region_config_t* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_threshold(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_alert_length(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5626 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5685, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i32 %1, metadata !5686, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !5695, metadata !DIExpression()), !dbg !5701
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !5702
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5702
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !5699, metadata !DIExpression()), !dbg !5703
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !5703
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !5703
  store i32 1, i32* %5, align 4, !dbg !5703
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !5703
  store i32 1, i32* %6, align 4, !dbg !5703
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !5703
  store i32 1, i32* %7, align 4, !dbg !5703
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !5703
  store i32 1, i32* %8, align 4, !dbg !5703
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !5703
  store i32 1, i32* %9, align 4, !dbg !5703
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !5704
  store volatile i32 0, i32* %10, align 4, !dbg !5705
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !5706
  store volatile i32 0, i32* %11, align 4, !dbg !5707
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !5708
  store volatile i32 0, i32* %12, align 4, !dbg !5709
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !5710
  br i1 %13, label %14, label %17, !dbg !5712

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !5713
  %16 = mul i32 %15, 1000, !dbg !5715
  call void @llvm.dbg.value(metadata i32 %16, metadata !5687, metadata !DIExpression()), !dbg !5700
  br label %17, !dbg !5716

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !5717
  call void @llvm.dbg.value(metadata i32 %18, metadata !5687, metadata !DIExpression()), !dbg !5700
  %19 = shl i32 %1, 8, !dbg !5718
  %20 = udiv i32 %18, %19, !dbg !5719
  call void @llvm.dbg.value(metadata i32 %20, metadata !5688, metadata !DIExpression()), !dbg !5700
  %21 = mul i32 %18, 10, !dbg !5720
  %22 = udiv i32 %21, %19, !dbg !5721
  %23 = urem i32 %22, 10, !dbg !5722
  call void @llvm.dbg.value(metadata i32 %23, metadata !5689, metadata !DIExpression()), !dbg !5700
  %24 = icmp ne i32 %23, 0, !dbg !5723
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !5725
  %27 = zext i1 %26 to i32, !dbg !5725
  %28 = add i32 %20, %27, !dbg !5725
  call void @llvm.dbg.value(metadata i32 %28, metadata !5688, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i32 %28, metadata !5691, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i32 undef, metadata !5692, metadata !DIExpression()), !dbg !5700
  br label %29, !dbg !5726

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !5700
  %31 = mul i32 %30, %1, !dbg !5700
  %32 = udiv i32 %18, %31, !dbg !5700
  call void @llvm.dbg.value(metadata i32 %32, metadata !5692, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i32 %30, metadata !5691, metadata !DIExpression()), !dbg !5700
  %33 = icmp ugt i32 %32, 256, !dbg !5727
  %34 = add i32 %30, 1, !dbg !5728
  call void @llvm.dbg.value(metadata i32 %34, metadata !5691, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i32 undef, metadata !5692, metadata !DIExpression()), !dbg !5700
  br i1 %33, label %29, label %35, !dbg !5726, !llvm.loop !5730

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !5732
  %37 = urem i32 %36, 10, !dbg !5733
  call void @llvm.dbg.value(metadata i32 %37, metadata !5690, metadata !DIExpression()), !dbg !5700
  %38 = add nsw i32 %32, -1, !dbg !5734
  call void @llvm.dbg.value(metadata i32 %38, metadata !5692, metadata !DIExpression()), !dbg !5700
  %39 = add nsw i32 %32, -2, !dbg !5735
  %40 = lshr i32 %39, 1, !dbg !5736
  call void @llvm.dbg.value(metadata i32 %40, metadata !5693, metadata !DIExpression()), !dbg !5700
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !5737
  store volatile i32 3, i32* %41, align 4, !dbg !5738
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5739
  %43 = load volatile i32, i32* %42, align 4, !dbg !5739
  call void @llvm.dbg.value(metadata i32 %43, metadata !5694, metadata !DIExpression()), !dbg !5700
  %44 = or i32 %43, 128, !dbg !5740
  store volatile i32 %44, i32* %42, align 4, !dbg !5741
  %45 = and i32 %30, 255, !dbg !5742
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5743
  store volatile i32 %45, i32* %46, align 4, !dbg !5744
  %47 = lshr i32 %30, 8, !dbg !5745
  %48 = and i32 %47, 255, !dbg !5746
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5747
  store volatile i32 %48, i32* %49, align 4, !dbg !5748
  store volatile i32 %43, i32* %42, align 4, !dbg !5749
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !5750
  store volatile i32 %38, i32* %50, align 4, !dbg !5751
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !5752
  store volatile i32 %40, i32* %51, align 4, !dbg !5753
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !5754
  %53 = load i32, i32* %52, align 4, !dbg !5754
  store volatile i32 %53, i32* %11, align 4, !dbg !5755
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !5756
  %55 = load i32, i32* %54, align 4, !dbg !5756
  store volatile i32 %55, i32* %12, align 4, !dbg !5757
  %56 = icmp ugt i32 %1, 2999999, !dbg !5758
  br i1 %56, label %57, label %59, !dbg !5760

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !5761
  store volatile i32 18, i32* %58, align 4, !dbg !5763
  br label %59, !dbg !5764

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5765
  ret void, !dbg !5765
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !5766 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5770, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata i32 %1, metadata !5771, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata i32 %2, metadata !5772, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata i32 %3, metadata !5773, metadata !DIExpression()), !dbg !5775
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5776
  %6 = load volatile i32, i32* %5, align 4, !dbg !5776
  call void @llvm.dbg.value(metadata i32 %6, metadata !5774, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5775
  store volatile i32 128, i32* %5, align 4, !dbg !5777
  %7 = trunc i32 %6 to i16, !dbg !5778
  %8 = and i16 %7, -4, !dbg !5778
  call void @llvm.dbg.value(metadata i16 %7, metadata !5774, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !5775
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !5779

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !5780
  call void @llvm.dbg.value(metadata i16 %10, metadata !5774, metadata !DIExpression()), !dbg !5775
  br label %15, !dbg !5782

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !5783
  call void @llvm.dbg.value(metadata i16 %12, metadata !5774, metadata !DIExpression()), !dbg !5775
  br label %15, !dbg !5784

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !5785
  call void @llvm.dbg.value(metadata i16 %14, metadata !5774, metadata !DIExpression()), !dbg !5775
  br label %15, !dbg !5786

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !5775
  call void @llvm.dbg.value(metadata i16 %16, metadata !5774, metadata !DIExpression()), !dbg !5775
  %17 = and i16 %16, -61, !dbg !5787
  call void @llvm.dbg.value(metadata i16 %16, metadata !5774, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !5775
  %18 = icmp eq i32 %2, 1, !dbg !5788
  %19 = select i1 %18, i16 4, i16 0, !dbg !5788
  %20 = or i16 %17, %19, !dbg !5788
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !5774, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !5775
  call void @llvm.dbg.value(metadata i16 %20, metadata !5774, metadata !DIExpression()), !dbg !5775
  %21 = icmp eq i32 %3, 2, !dbg !5789
  %22 = or i16 %20, 16, !dbg !5789
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !5789
  call void @llvm.dbg.value(metadata i16 %23, metadata !5774, metadata !DIExpression()), !dbg !5775
  %24 = zext i16 %23 to i32, !dbg !5790
  store volatile i32 %24, i32* %5, align 4, !dbg !5791
  ret void, !dbg !5792
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !5793 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5797, metadata !DIExpression()), !dbg !5800
  call void @llvm.dbg.value(metadata i8 %1, metadata !5798, metadata !DIExpression()), !dbg !5800
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !5801

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !5802
  call void @llvm.dbg.value(metadata i32 %5, metadata !5799, metadata !DIExpression()), !dbg !5800
  %6 = and i32 %5, 32, !dbg !5804
  %7 = icmp eq i32 %6, 0, !dbg !5804
  br i1 %7, label %4, label %8, !dbg !5806, !llvm.loop !5807

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !5809
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5811
  store volatile i32 %9, i32* %10, align 4, !dbg !5812
  ret void, !dbg !5813
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5814 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5818, metadata !DIExpression()), !dbg !5821
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !5822

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !5823
  call void @llvm.dbg.value(metadata i32 %4, metadata !5819, metadata !DIExpression()), !dbg !5821
  %5 = and i32 %4, 1, !dbg !5825
  %6 = icmp eq i32 %5, 0, !dbg !5825
  br i1 %6, label %3, label %7, !dbg !5827, !llvm.loop !5828

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5830
  %9 = load volatile i32, i32* %8, align 4, !dbg !5830
  %10 = trunc i32 %9 to i8, !dbg !5832
  call void @llvm.dbg.value(metadata i8 %10, metadata !5820, metadata !DIExpression()), !dbg !5821
  ret i8 %10, !dbg !5833
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5834 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5838, metadata !DIExpression()), !dbg !5841
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5842
  %3 = load volatile i32, i32* %2, align 4, !dbg !5842
  call void @llvm.dbg.value(metadata i32 %3, metadata !5839, metadata !DIExpression()), !dbg !5841
  %4 = and i32 %3, 1, !dbg !5843
  %5 = icmp eq i32 %4, 0, !dbg !5843
  br i1 %5, label %9, label %6, !dbg !5845

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5846
  %8 = load volatile i32, i32* %7, align 4, !dbg !5846
  call void @llvm.dbg.value(metadata i32 %8, metadata !5840, metadata !DIExpression()), !dbg !5841
  br label %9, !dbg !5848

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !5849
  call void @llvm.dbg.value(metadata i32 %10, metadata !5840, metadata !DIExpression()), !dbg !5841
  ret i32 %10, !dbg !5850
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5851 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5855, metadata !DIExpression()), !dbg !5858
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5859
  %3 = load volatile i32, i32* %2, align 4, !dbg !5859
  call void @llvm.dbg.value(metadata i32 %3, metadata !5857, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5858
  store volatile i32 191, i32* %2, align 4, !dbg !5860
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5861
  %5 = load volatile i32, i32* %4, align 4, !dbg !5861
  call void @llvm.dbg.value(metadata i32 %5, metadata !5856, metadata !DIExpression()), !dbg !5858
  %6 = and i32 %5, 65343, !dbg !5862
  %7 = or i32 %6, 192, !dbg !5862
  call void @llvm.dbg.value(metadata i32 %5, metadata !5856, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !5858
  store volatile i32 %7, i32* %4, align 4, !dbg !5863
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5864
  store volatile i32 0, i32* %8, align 4, !dbg !5865
  store volatile i32 0, i32* %2, align 4, !dbg !5866
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5867
  store volatile i32 2, i32* %9, align 4, !dbg !5868
  %10 = and i32 %3, 65535, !dbg !5869
  store volatile i32 %10, i32* %2, align 4, !dbg !5870
  ret void, !dbg !5871
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !5872 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5876, metadata !DIExpression()), !dbg !5882
  call void @llvm.dbg.value(metadata i8 %1, metadata !5877, metadata !DIExpression()), !dbg !5882
  call void @llvm.dbg.value(metadata i8 %2, metadata !5878, metadata !DIExpression()), !dbg !5882
  call void @llvm.dbg.value(metadata i8 %3, metadata !5879, metadata !DIExpression()), !dbg !5882
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5883
  %6 = load volatile i32, i32* %5, align 4, !dbg !5883
  call void @llvm.dbg.value(metadata i32 %6, metadata !5881, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5882
  store volatile i32 191, i32* %5, align 4, !dbg !5884
  %7 = zext i8 %1 to i32, !dbg !5885
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5886
  store volatile i32 %7, i32* %8, align 4, !dbg !5887
  %9 = zext i8 %2 to i32, !dbg !5888
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !5889
  store volatile i32 %9, i32* %10, align 4, !dbg !5890
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5891
  %12 = load volatile i32, i32* %11, align 4, !dbg !5891
  call void @llvm.dbg.value(metadata i32 %12, metadata !5880, metadata !DIExpression()), !dbg !5882
  %13 = and i32 %12, 65509, !dbg !5892
  %14 = or i32 %13, 26, !dbg !5892
  call void @llvm.dbg.value(metadata i32 %12, metadata !5880, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !5882
  store volatile i32 %14, i32* %11, align 4, !dbg !5893
  %15 = zext i8 %3 to i32, !dbg !5894
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !5895
  store volatile i32 %15, i32* %16, align 4, !dbg !5896
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5897
  store volatile i32 1, i32* %17, align 4, !dbg !5898
  %18 = and i32 %6, 65535, !dbg !5899
  store volatile i32 %18, i32* %5, align 4, !dbg !5900
  ret void, !dbg !5901
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5902 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5904, metadata !DIExpression()), !dbg !5906
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5907
  %3 = load volatile i32, i32* %2, align 4, !dbg !5907
  call void @llvm.dbg.value(metadata i32 %3, metadata !5905, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5906
  store volatile i32 191, i32* %2, align 4, !dbg !5908
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5909
  store volatile i32 0, i32* %4, align 4, !dbg !5910
  store volatile i32 0, i32* %2, align 4, !dbg !5911
  %5 = and i32 %3, 65535, !dbg !5912
  store volatile i32 %5, i32* %2, align 4, !dbg !5913
  ret void, !dbg !5914
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5915 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5917, metadata !DIExpression()), !dbg !5920
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5921
  %3 = load volatile i32, i32* %2, align 4, !dbg !5921
  call void @llvm.dbg.value(metadata i32 %3, metadata !5919, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5920
  store volatile i32 191, i32* %2, align 4, !dbg !5922
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5923
  %5 = load volatile i32, i32* %4, align 4, !dbg !5923
  call void @llvm.dbg.value(metadata i32 %5, metadata !5918, metadata !DIExpression()), !dbg !5920
  %6 = and i32 %5, 65519, !dbg !5924
  %7 = or i32 %6, 16, !dbg !5924
  call void @llvm.dbg.value(metadata i32 %5, metadata !5918, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !5920
  store volatile i32 %7, i32* %4, align 4, !dbg !5925
  store volatile i32 0, i32* %2, align 4, !dbg !5926
  store volatile i32 135, i32* %4, align 4, !dbg !5927
  %8 = and i32 %3, 65535, !dbg !5928
  store volatile i32 %8, i32* %2, align 4, !dbg !5929
  ret void, !dbg !5930
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5931 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5933, metadata !DIExpression()), !dbg !5936
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5937
  %3 = load volatile i32, i32* %2, align 4, !dbg !5937
  call void @llvm.dbg.value(metadata i32 %3, metadata !5935, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5936
  %4 = load volatile i32, i32* %2, align 4, !dbg !5938
  %5 = and i32 %4, -129, !dbg !5938
  store volatile i32 %5, i32* %2, align 4, !dbg !5938
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5939
  %7 = load volatile i32, i32* %6, align 4, !dbg !5939
  call void @llvm.dbg.value(metadata i32 %7, metadata !5934, metadata !DIExpression()), !dbg !5936
  %8 = and i32 %7, 65530, !dbg !5940
  %9 = or i32 %8, 5, !dbg !5940
  call void @llvm.dbg.value(metadata i32 %7, metadata !5934, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !5936
  store volatile i32 %9, i32* %6, align 4, !dbg !5941
  %10 = and i32 %3, 65535, !dbg !5942
  %11 = load volatile i32, i32* %2, align 4, !dbg !5943
  %12 = and i32 %10, %11, !dbg !5943
  store volatile i32 %12, i32* %2, align 4, !dbg !5943
  ret void, !dbg !5944
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5945 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5949, metadata !DIExpression()), !dbg !5952
  call void @llvm.dbg.value(metadata i32 %1, metadata !5950, metadata !DIExpression()), !dbg !5952
  call void @llvm.dbg.value(metadata i16 145, metadata !5951, metadata !DIExpression()), !dbg !5952
  %3 = icmp eq i32 %1, 0, !dbg !5953
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !5951, metadata !DIExpression()), !dbg !5952
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5955
  store volatile i32 %4, i32* %5, align 4, !dbg !5956
  ret void, !dbg !5957
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5958 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5963, metadata !DIExpression()), !dbg !5967
  call void @llvm.dbg.value(metadata i32 0, metadata !5966, metadata !DIExpression()), !dbg !5967
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5968
  %3 = load volatile i32, i32* %2, align 4, !dbg !5968
  call void @llvm.dbg.value(metadata i32 %3, metadata !5964, metadata !DIExpression()), !dbg !5967
  %4 = and i32 %3, 1, !dbg !5969
  %5 = icmp eq i32 %4, 0, !dbg !5969
  br i1 %5, label %6, label %16, !dbg !5971

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !5972
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !5973

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !5966, metadata !DIExpression()), !dbg !5967
  br label %16, !dbg !5974

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5976
  %11 = load volatile i32, i32* %10, align 4, !dbg !5976
  call void @llvm.dbg.value(metadata i32 %11, metadata !5965, metadata !DIExpression()), !dbg !5967
  %12 = and i32 %11, 16, !dbg !5977
  %13 = icmp eq i32 %12, 0, !dbg !5977
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !5966, metadata !DIExpression()), !dbg !5967
  br label %16, !dbg !5979

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !5967
  ret i32 %17, !dbg !5980
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5981 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5985, metadata !DIExpression()), !dbg !5988
  call void @llvm.dbg.value(metadata i32 0, metadata !5987, metadata !DIExpression()), !dbg !5988
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5989
  %3 = load volatile i32, i32* %2, align 4, !dbg !5989
  call void @llvm.dbg.value(metadata i32 %3, metadata !5986, metadata !DIExpression()), !dbg !5988
  %4 = and i32 %3, 14, !dbg !5990
  %5 = icmp eq i32 %4, 0, !dbg !5990
  %6 = sext i1 %5 to i32, !dbg !5992
  call void @llvm.dbg.value(metadata i32 %6, metadata !5987, metadata !DIExpression()), !dbg !5988
  ret i32 %6, !dbg !5993
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5994 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5996, metadata !DIExpression()), !dbg !5998
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !5999
  %3 = load volatile i32, i32* %2, align 4, !dbg !5999
  call void @llvm.dbg.value(metadata i32 %3, metadata !5997, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5998
  call void @llvm.dbg.value(metadata i32 %3, metadata !5997, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5998
  ret void, !dbg !6000
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6001 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6003, metadata !DIExpression()), !dbg !6004
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6005
  store volatile i32 191, i32* %2, align 4, !dbg !6006
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6007
  store volatile i32 16, i32* %3, align 4, !dbg !6008
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !6009
  store volatile i32 0, i32* %4, align 4, !dbg !6010
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !6011
  store volatile i32 0, i32* %5, align 4, !dbg !6012
  store volatile i32 128, i32* %2, align 4, !dbg !6013
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6014
  store volatile i32 0, i32* %6, align 4, !dbg !6015
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6016
  store volatile i32 0, i32* %7, align 4, !dbg !6017
  store volatile i32 0, i32* %2, align 4, !dbg !6018
  store volatile i32 0, i32* %7, align 4, !dbg !6019
  store volatile i32 0, i32* %3, align 4, !dbg !6020
  store volatile i32 191, i32* %2, align 4, !dbg !6021
  store volatile i32 0, i32* %3, align 4, !dbg !6022
  store volatile i32 0, i32* %2, align 4, !dbg !6023
  store volatile i32 0, i32* %4, align 4, !dbg !6024
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !6025
  store volatile i32 0, i32* %8, align 4, !dbg !6026
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !6027
  store volatile i32 0, i32* %9, align 4, !dbg !6028
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !6029
  store volatile i32 0, i32* %10, align 4, !dbg !6030
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !6031
  store volatile i32 0, i32* %11, align 4, !dbg !6032
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !6033
  store volatile i32 0, i32* %12, align 4, !dbg !6034
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !6035
  store volatile i32 0, i32* %13, align 4, !dbg !6036
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !6037
  store volatile i32 0, i32* %14, align 4, !dbg !6038
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !6039
  store volatile i32 0, i32* %15, align 4, !dbg !6040
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !6041
  store volatile i32 0, i32* %16, align 4, !dbg !6042
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6043
  store volatile i32 0, i32* %17, align 4, !dbg !6044
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !6045
  store volatile i32 0, i32* %18, align 4, !dbg !6046
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6047
  store volatile i32 0, i32* %19, align 4, !dbg !6048
  store volatile i32 0, i32* %13, align 4, !dbg !6049
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !6050
  store volatile i32 0, i32* %20, align 4, !dbg !6051
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !6052
  store volatile i32 0, i32* %21, align 4, !dbg !6053
  ret void, !dbg !6054
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6055 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6057, metadata !DIExpression()), !dbg !6058
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !6059

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !6060
  %5 = and i32 %4, 64, !dbg !6061
  %6 = icmp eq i32 %5, 0, !dbg !6062
  br i1 %6, label %3, label %7, !dbg !6059, !llvm.loop !6063

7:                                                ; preds = %3
  ret void, !dbg !6065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !6066 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6070, metadata !DIExpression()), !dbg !6073
  call void @llvm.dbg.value(metadata i32 %1, metadata !6071, metadata !DIExpression()), !dbg !6073
  call void @llvm.dbg.value(metadata i32 15, metadata !6072, metadata !DIExpression()), !dbg !6073
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !6074

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !6075
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !6078
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !6080
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !6082
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !6073
  call void @llvm.dbg.value(metadata i32 %16, metadata !6072, metadata !DIExpression()), !dbg !6073
  ret i32 %16, !dbg !6084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #6 !dbg !6085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6095, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !6096, metadata !DIExpression()), !dbg !6097
  %3 = add i32 %0, -8, !dbg !6098
  %4 = icmp ult i32 %3, 8, !dbg !6098
  br i1 %4, label %5, label %12, !dbg !6098

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !6098
  %7 = load i8, i8* %6, align 1, !dbg !6098
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.2, i32 0, i32 %3, !dbg !6098
  %9 = load i32, i32* %8, align 4, !dbg !6098
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !6099
  store i8 %7, i8* %10, align 4, !dbg !6099
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !6099
  store i32 %9, i32* %11, align 4, !dbg !6099
  br label %12, !dbg !6101

12:                                               ; preds = %2, %5
  ret void, !dbg !6101
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6102 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6106, metadata !DIExpression()), !dbg !6107
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6108
  store volatile i32 3, i32* %2, align 4, !dbg !6109
  ret void, !dbg !6110
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !6111 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6113, metadata !DIExpression()), !dbg !6117
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !6116, metadata !DIExpression()), !dbg !6117
  %2 = add i32 %0, -30, !dbg !6118
  %3 = icmp ult i32 %2, 3, !dbg !6118
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !6118
  call void @llvm.dbg.value(metadata i32 %5, metadata !6114, metadata !DIExpression()), !dbg !6117
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !6119
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !6119
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !6116, metadata !DIExpression()), !dbg !6117
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #20, !dbg !6120
  call void @llvm.dbg.value(metadata i32 %8, metadata !6115, metadata !DIExpression()), !dbg !6117
  switch i32 %8, label %12 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %13
    i32 0, label %13
    i32 3, label %11
  ], !dbg !6121

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #20, !dbg !6122
  br label %13, !dbg !6124

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #20, !dbg !6125
  br label %13, !dbg !6126

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #20, !dbg !6127
  br label %13, !dbg !6128

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.81, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.82, i32 0, i32 0)) #23, !dbg !6129
  unreachable, !dbg !6129

13:                                               ; preds = %11, %1, %1, %10, %9
  ret void, !dbg !6130
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_init(i32 noundef %0, %struct.hal_spi_master_config_t* noundef %1) local_unnamed_addr #0 !dbg !6131 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6149, metadata !DIExpression()), !dbg !6154
  call void @llvm.dbg.value(metadata %struct.hal_spi_master_config_t* %1, metadata !6150, metadata !DIExpression()), !dbg !6154
  %3 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6155
  br i1 %3, label %4, label %21, !dbg !6157

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @is_master_config(%struct.hal_spi_master_config_t* noundef %1) #21, !dbg !6158
  br i1 %5, label %6, label %21, !dbg !6160

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6161
  call void @llvm.dbg.value(metadata i32 %7, metadata !6152, metadata !DIExpression()), !dbg !6162
  %8 = getelementptr inbounds [4 x i8], [4 x i8]* @g_spi_master_status, i32 0, i32 %0, !dbg !6163
  %9 = load volatile i8, i8* %8, align 1, !dbg !6163
  %10 = icmp eq i8 %9, 1, !dbg !6163
  br i1 %10, label %15, label %11, !dbg !6161

11:                                               ; preds = %6
  store volatile i8 1, i8* %8, align 1, !dbg !6165
  call void @llvm.dbg.value(metadata i32 0, metadata !6151, metadata !DIExpression()), !dbg !6154
  call void @llvm.dbg.value(metadata i32 undef, metadata !6151, metadata !DIExpression()), !dbg !6154
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !6161
  %12 = getelementptr inbounds [4 x i32], [4 x i32]* @g_spix_cg_code, i32 0, i32 %0, !dbg !6167
  %13 = load i32, i32* %12, align 4, !dbg !6167
  %14 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef %13) #20, !dbg !6169
  br i1 %14, label %20, label %16, !dbg !6170

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !6151, metadata !DIExpression()), !dbg !6154
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !6161
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_spi_master_init, i32 0, i32 0), i32 noundef 199, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.83, i32 0, i32 0), i32 noundef %0) #20, !dbg !6171
  br label %21, !dbg !6174

16:                                               ; preds = %11
  %17 = tail call i32 @hal_clock_enable(i32 noundef %13) #20, !dbg !6175
  %18 = icmp eq i32 %17, 0, !dbg !6178
  br i1 %18, label %20, label %19, !dbg !6179

19:                                               ; preds = %16
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_spi_master_init, i32 0, i32 0), i32 noundef 205, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.84, i32 0, i32 0), i32 noundef %0) #20, !dbg !6180
  br label %21, !dbg !6182

20:                                               ; preds = %16, %11
  tail call void @spi_master_init(i32 noundef %0, %struct.hal_spi_master_config_t* noundef %1) #20, !dbg !6183
  br label %21, !dbg !6184

21:                                               ; preds = %4, %2, %20, %19, %15
  %22 = phi i32 [ -3, %15 ], [ -4, %19 ], [ 0, %20 ], [ -2, %2 ], [ -1, %4 ], !dbg !6154
  ret i32 %22, !dbg !6185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_master_port(i32 noundef %0) unnamed_addr #10 !dbg !6186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6190, metadata !DIExpression()), !dbg !6191
  %2 = icmp ult i32 %0, 4, !dbg !6192
  ret i1 %2, !dbg !6193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_master_config(%struct.hal_spi_master_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !6194 {
  call void @llvm.dbg.value(metadata %struct.hal_spi_master_config_t* %0, metadata !6200, metadata !DIExpression()), !dbg !6202
  call void @llvm.dbg.value(metadata i8 1, metadata !6201, metadata !DIExpression()), !dbg !6202
  %2 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %0, i32 0, i32 0, !dbg !6203
  %3 = load i32, i32* %2, align 4, !dbg !6203
  %4 = add i32 %3, -30000, !dbg !6204
  %5 = icmp ult i32 %4, 12970001, !dbg !6204
  call void @llvm.dbg.value(metadata i1 undef, metadata !6201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6202
  %6 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %0, i32 0, i32 2, !dbg !6205
  %7 = load i32, i32* %6, align 4, !dbg !6205
  call void @llvm.dbg.value(metadata i1 undef, metadata !6201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6202
  %8 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %0, i32 0, i32 3, !dbg !6206
  %9 = load i32, i32* %8, align 4, !dbg !6206
  call void @llvm.dbg.value(metadata i1 undef, metadata !6201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6202
  %10 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %0, i32 0, i32 4, !dbg !6207
  %11 = load i32, i32* %10, align 4, !dbg !6207
  call void @llvm.dbg.value(metadata i1 undef, metadata !6201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6202
  %12 = or i32 %9, %7, !dbg !6208
  %13 = or i32 %12, %11, !dbg !6209
  call void @llvm.dbg.value(metadata i1 undef, metadata !6201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6202
  call void @llvm.dbg.value(metadata i1 undef, metadata !6201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6202
  %14 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %0, i32 0, i32 1, !dbg !6210
  %15 = load i32, i32* %14, align 4, !dbg !6210
  %16 = or i32 %13, %15, !dbg !6211
  %17 = icmp ult i32 %16, 2, !dbg !6211
  %18 = and i1 %5, %17, !dbg !6211
  call void @llvm.dbg.value(metadata i1 %18, metadata !6201, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6202
  ret i1 %18, !dbg !6212
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_set_advanced_config(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) local_unnamed_addr #0 !dbg !6213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6229, metadata !DIExpression()), !dbg !6231
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6230, metadata !DIExpression()), !dbg !6231
  %3 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6232
  br i1 %3, label %4, label %10, !dbg !6234

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @is_master_advanced_config(%struct.hal_uart_config_t* noundef %1) #21, !dbg !6235
  br i1 %5, label %6, label %10, !dbg !6237

6:                                                ; preds = %4
  %7 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6238
  %8 = icmp eq i32 %7, 0, !dbg !6240
  br i1 %8, label %10, label %9, !dbg !6241

9:                                                ; preds = %6
  tail call void @spi_master_set_advanced_config(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #20, !dbg !6242
  br label %10, !dbg !6243

10:                                               ; preds = %6, %4, %2, %9
  %11 = phi i32 [ 0, %9 ], [ -2, %2 ], [ -1, %4 ], [ -3, %6 ], !dbg !6231
  ret i32 %11, !dbg !6244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_master_advanced_config(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !6245 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !6251, metadata !DIExpression()), !dbg !6253
  call void @llvm.dbg.value(metadata i8 1, metadata !6252, metadata !DIExpression()), !dbg !6253
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !6254
  %3 = load i32, i32* %2, align 4, !dbg !6254
  call void @llvm.dbg.value(metadata i1 undef, metadata !6252, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6253
  %4 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !6255
  %5 = load i32, i32* %4, align 4, !dbg !6255
  call void @llvm.dbg.value(metadata i1 undef, metadata !6252, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6253
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !6256
  %7 = load i32, i32* %6, align 4, !dbg !6256
  call void @llvm.dbg.value(metadata i1 undef, metadata !6252, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6253
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !6257
  %9 = load i32, i32* %8, align 4, !dbg !6257
  %10 = or i32 %5, %3, !dbg !6258
  %11 = icmp ult i32 %7, 8, !dbg !6259
  call void @llvm.dbg.value(metadata i1 undef, metadata !6252, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6253
  %12 = or i32 %10, %9, !dbg !6260
  %13 = icmp ult i32 %12, 2, !dbg !6260
  %14 = and i1 %11, %13, !dbg !6260
  call void @llvm.dbg.value(metadata i1 %14, metadata !6252, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6253
  ret i1 %14, !dbg !6261
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !6262 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6266, metadata !DIExpression()), !dbg !6267
  %2 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6268
  br i1 %2, label %3, label %12, !dbg !6270

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_spix_irq_code, i32 0, i32 %0, !dbg !6271
  %5 = load i32, i32* %4, align 4, !dbg !6271
  %6 = tail call i32 @hal_nvic_disable_irq(i32 noundef %5) #20, !dbg !6272
  %7 = getelementptr inbounds [4 x i8], [4 x i8]* @g_spi_master_status, i32 0, i32 %0, !dbg !6273
  store volatile i8 0, i8* %7, align 1, !dbg !6273
  %8 = getelementptr inbounds [4 x void (i32, i8*)*], [4 x void (i32, i8*)*]* @g_spix_callback, i32 0, i32 %0, !dbg !6275
  store void (i32, i8*)* null, void (i32, i8*)** %8, align 4, !dbg !6276
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_spix_cg_code, i32 0, i32 %0, !dbg !6277
  %10 = load i32, i32* %9, align 4, !dbg !6277
  %11 = tail call i32 @hal_clock_disable(i32 noundef %10) #20, !dbg !6278
  br label %12, !dbg !6279

12:                                               ; preds = %1, %3
  %13 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !6267
  ret i32 %13, !dbg !6280
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6285, metadata !DIExpression()), !dbg !6288
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6286, metadata !DIExpression()), !dbg !6288
  call void @llvm.dbg.value(metadata i8* %2, metadata !6287, metadata !DIExpression()), !dbg !6288
  %4 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6289
  br i1 %4, label %5, label %18, !dbg !6291

5:                                                ; preds = %3
  %6 = icmp eq void (i32, i8*)* %1, null, !dbg !6292
  br i1 %6, label %18, label %7, !dbg !6294

7:                                                ; preds = %5
  %8 = getelementptr inbounds [4 x void (i32, i8*)*], [4 x void (i32, i8*)*]* @g_spix_callback, i32 0, i32 %0, !dbg !6295
  store void (i32, i8*)* %1, void (i32, i8*)** %8, align 4, !dbg !6296
  %9 = getelementptr inbounds [4 x i8*], [4 x i8*]* @g_spix_user_data, i32 0, i32 %0, !dbg !6297
  store i8* %2, i8** %9, align 4, !dbg !6298
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @g_spix_irq_code, i32 0, i32 %0, !dbg !6299
  %11 = load i32, i32* %10, align 4, !dbg !6299
  %12 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %11, void (i32)* noundef nonnull @hal_spi_master_isr) #20, !dbg !6300
  %13 = getelementptr inbounds [4 x i16], [4 x i16]* @g_spix_pri_code, i32 0, i32 %0, !dbg !6301
  %14 = load i16, i16* %13, align 2, !dbg !6301
  %15 = zext i16 %14 to i32, !dbg !6301
  %16 = tail call i32 @hal_nvic_set_priority(i32 noundef %11, i32 noundef %15) #20, !dbg !6302
  %17 = tail call i32 @hal_nvic_enable_irq(i32 noundef %11) #20, !dbg !6303
  br label %18, !dbg !6304

18:                                               ; preds = %5, %3, %7
  %19 = phi i32 [ 0, %7 ], [ -2, %3 ], [ -1, %5 ], !dbg !6288
  ret i32 %19, !dbg !6305
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_spi_master_isr(i32 noundef %0) #0 !dbg !6306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6308, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i32 0, metadata !6309, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i32 0, metadata !6310, metadata !DIExpression()), !dbg !6311
  br label %2, !dbg !6312

2:                                                ; preds = %1, %7
  %3 = phi i32 [ 0, %1 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6310, metadata !DIExpression()), !dbg !6311
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_spix_irq_code, i32 0, i32 %3, !dbg !6314
  %5 = load i32, i32* %4, align 4, !dbg !6314
  %6 = icmp eq i32 %5, %0, !dbg !6318
  br i1 %6, label %10, label %7, !dbg !6319

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %3, 1, !dbg !6320
  call void @llvm.dbg.value(metadata i32 %8, metadata !6310, metadata !DIExpression()), !dbg !6311
  %9 = icmp eq i32 %8, 4, !dbg !6321
  br i1 %9, label %10, label %2, !dbg !6312, !llvm.loop !6322

10:                                               ; preds = %2, %7
  %11 = phi i32 [ 0, %7 ], [ %3, %2 ], !dbg !6311
  call void @llvm.dbg.value(metadata i32 %11, metadata !6309, metadata !DIExpression()), !dbg !6311
  %12 = getelementptr inbounds [4 x void (i32, i8*)*], [4 x void (i32, i8*)*]* @g_spix_callback, i32 0, i32 %11, !dbg !6324
  %13 = load void (i32, i8*)*, void (i32, i8*)** %12, align 4, !dbg !6324
  %14 = getelementptr inbounds [4 x i8*], [4 x i8*]* @g_spix_user_data, i32 0, i32 %11, !dbg !6325
  %15 = load i8*, i8** %14, align 4, !dbg !6325
  tail call void @spi_isr_handler(i32 noundef %11, void (i32, i8*)* noundef %13, i8* noundef %15) #20, !dbg !6326
  ret void, !dbg !6327
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_send_polling(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6328 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6332, metadata !DIExpression()), !dbg !6336
  call void @llvm.dbg.value(metadata i8* %1, metadata !6333, metadata !DIExpression()), !dbg !6336
  call void @llvm.dbg.value(metadata i32 %2, metadata !6334, metadata !DIExpression()), !dbg !6336
  call void @llvm.dbg.value(metadata i32 0, metadata !6335, metadata !DIExpression()), !dbg !6336
  %4 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6337
  br i1 %4, label %5, label %21, !dbg !6339

5:                                                ; preds = %3
  %6 = icmp eq i8* %1, null, !dbg !6340
  %7 = add i32 %2, -33
  %8 = icmp ult i32 %7, -32
  %9 = or i1 %6, %8, !dbg !6342
  br i1 %9, label %21, label %10, !dbg !6342

10:                                               ; preds = %5
  %11 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6343
  %12 = icmp eq i32 %11, 0, !dbg !6345
  br i1 %12, label %13, label %14, !dbg !6346

13:                                               ; preds = %10
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.hal_spi_master_send_polling, i32 0, i32 0), i32 noundef 308, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i32 0, i32 0), i32 noundef %0) #20, !dbg !6347
  br label %21, !dbg !6349

14:                                               ; preds = %10
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 0, i32 noundef 0) #20, !dbg !6350
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 1, i32 noundef 0) #20, !dbg !6351
  tail call void @spi_set_interrupt(i32 noundef %0, i1 noundef zeroext false) #20, !dbg !6352
  tail call void @spi_clear_fifo(i32 noundef %0) #20, !dbg !6353
  %15 = tail call i32 @spi_analyse_transfer_size(i32 noundef %0, i32 noundef %2) #20, !dbg !6354
  call void @llvm.dbg.value(metadata i32 %15, metadata !6335, metadata !DIExpression()), !dbg !6336
  %16 = icmp eq i32 %15, 0, !dbg !6355
  br i1 %16, label %17, label %21, !dbg !6357

17:                                               ; preds = %14
  %18 = tail call i32 @spi_push_data(i32 noundef %0, i8* noundef nonnull %1, i32 noundef %2) #20, !dbg !6358
  call void @llvm.dbg.value(metadata i32 %18, metadata !6335, metadata !DIExpression()), !dbg !6336
  %19 = icmp eq i32 %18, 0, !dbg !6359
  br i1 %19, label %20, label %21, !dbg !6361

20:                                               ; preds = %17
  tail call void @spi_start_transfer(i32 noundef %0, i32 noundef 0) #20, !dbg !6362
  br label %21, !dbg !6363

21:                                               ; preds = %17, %14, %5, %3, %20, %13
  %22 = phi i32 [ -3, %13 ], [ 0, %20 ], [ -2, %3 ], [ -1, %5 ], [ %15, %14 ], [ %18, %17 ], !dbg !6336
  ret i32 %22, !dbg !6364
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_send_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6367, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i8* %1, metadata !6368, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i32 %2, metadata !6369, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.value(metadata i32 0, metadata !6370, metadata !DIExpression()), !dbg !6371
  %4 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6372
  br i1 %4, label %5, label %24, !dbg !6374

5:                                                ; preds = %3
  %6 = icmp eq i8* %1, null, !dbg !6375
  br i1 %6, label %24, label %7, !dbg !6377

7:                                                ; preds = %5
  %8 = ptrtoint i8* %1 to i32, !dbg !6378
  %9 = and i32 %8, 3, !dbg !6380
  %10 = icmp ne i32 %9, 0, !dbg !6381
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %11, %10, !dbg !6382
  br i1 %12, label %24, label %13, !dbg !6382

13:                                               ; preds = %7
  %14 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %8) #20, !dbg !6383
  br i1 %14, label %24, label %15, !dbg !6385

15:                                               ; preds = %13
  %16 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6386
  %17 = icmp eq i32 %16, 0, !dbg !6388
  br i1 %17, label %18, label %19, !dbg !6389

18:                                               ; preds = %15
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.hal_spi_master_send_dma, i32 0, i32 0), i32 noundef 373, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i32 0, i32 0), i32 noundef %0) #20, !dbg !6390
  br label %24, !dbg !6392

19:                                               ; preds = %15
  tail call void @spi_set_rwaddr(i32 noundef %0, i32 noundef 0, i8* noundef nonnull %1) #20, !dbg !6393
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 0, i32 noundef 1) #20, !dbg !6394
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 1, i32 noundef 0) #20, !dbg !6395
  tail call void @spi_set_interrupt(i32 noundef %0, i1 noundef zeroext true) #20, !dbg !6396
  %20 = tail call i32 @spi_analyse_transfer_size(i32 noundef %0, i32 noundef %2) #20, !dbg !6397
  call void @llvm.dbg.value(metadata i32 %20, metadata !6370, metadata !DIExpression()), !dbg !6371
  %21 = icmp eq i32 %20, 0, !dbg !6398
  br i1 %21, label %22, label %24, !dbg !6400

22:                                               ; preds = %19
  tail call void @spi_start_transfer(i32 noundef %0, i32 noundef 1) #20, !dbg !6401
  %23 = getelementptr inbounds [4 x i32], [4 x i32]* @g_spi_direction, i32 0, i32 %0, !dbg !6403
  store i32 0, i32* %23, align 4, !dbg !6404
  br label %24, !dbg !6405

24:                                               ; preds = %19, %13, %7, %5, %3, %22, %18
  %25 = phi i32 [ -3, %18 ], [ 0, %22 ], [ -2, %3 ], [ -1, %5 ], [ -1, %7 ], [ -1, %13 ], [ %20, %19 ], !dbg !6371
  ret i32 %25, !dbg !6406
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_send_dma_blocking(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6409, metadata !DIExpression()), !dbg !6413
  call void @llvm.dbg.value(metadata i8* %1, metadata !6410, metadata !DIExpression()), !dbg !6413
  call void @llvm.dbg.value(metadata i32 %2, metadata !6411, metadata !DIExpression()), !dbg !6413
  call void @llvm.dbg.value(metadata i32 0, metadata !6412, metadata !DIExpression()), !dbg !6413
  %4 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6414
  br i1 %4, label %5, label %23, !dbg !6416

5:                                                ; preds = %3
  %6 = icmp eq i8* %1, null, !dbg !6417
  br i1 %6, label %23, label %7, !dbg !6419

7:                                                ; preds = %5
  %8 = ptrtoint i8* %1 to i32, !dbg !6420
  %9 = and i32 %8, 3, !dbg !6422
  %10 = icmp ne i32 %9, 0, !dbg !6423
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %11, %10, !dbg !6424
  br i1 %12, label %23, label %13, !dbg !6424

13:                                               ; preds = %7
  %14 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %8) #20, !dbg !6425
  br i1 %14, label %23, label %15, !dbg !6427

15:                                               ; preds = %13
  %16 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6428
  %17 = icmp eq i32 %16, 0, !dbg !6430
  br i1 %17, label %18, label %19, !dbg !6431

18:                                               ; preds = %15
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @__FUNCTION__.hal_spi_master_send_dma_blocking, i32 0, i32 0), i32 noundef 426, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i32 0, i32 0), i32 noundef %0) #20, !dbg !6432
  br label %23, !dbg !6434

19:                                               ; preds = %15
  tail call void @spi_set_rwaddr(i32 noundef %0, i32 noundef 0, i8* noundef nonnull %1) #20, !dbg !6435
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 0, i32 noundef 1) #20, !dbg !6436
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 1, i32 noundef 0) #20, !dbg !6437
  tail call void @spi_set_interrupt(i32 noundef %0, i1 noundef zeroext false) #20, !dbg !6438
  %20 = tail call i32 @spi_analyse_transfer_size(i32 noundef %0, i32 noundef %2) #20, !dbg !6439
  call void @llvm.dbg.value(metadata i32 %20, metadata !6412, metadata !DIExpression()), !dbg !6413
  %21 = icmp eq i32 %20, 0, !dbg !6440
  br i1 %21, label %22, label %23, !dbg !6442

22:                                               ; preds = %19
  tail call void @spi_start_transfer_dma_blocking(i32 noundef %0) #20, !dbg !6443
  br label %23, !dbg !6445

23:                                               ; preds = %19, %13, %7, %5, %3, %22, %18
  %24 = phi i32 [ -3, %18 ], [ 0, %22 ], [ -2, %3 ], [ -1, %5 ], [ -1, %7 ], [ -1, %13 ], [ %20, %19 ], !dbg !6413
  ret i32 %24, !dbg !6446
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_send_and_receive_polling(i32 noundef %0, %struct.hal_spi_master_send_and_receive_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6447 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6459, metadata !DIExpression()), !dbg !6462
  call void @llvm.dbg.value(metadata %struct.hal_spi_master_send_and_receive_config_t* %1, metadata !6460, metadata !DIExpression()), !dbg !6462
  call void @llvm.dbg.value(metadata i32 0, metadata !6461, metadata !DIExpression()), !dbg !6462
  %3 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6463
  br i1 %3, label %4, label %39, !dbg !6465

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 2, !dbg !6466
  %6 = load i8*, i8** %5, align 4, !dbg !6466
  %7 = icmp eq i8* %6, null, !dbg !6468
  br i1 %7, label %39, label %8, !dbg !6469

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 0, !dbg !6470
  %10 = load i8*, i8** %9, align 4, !dbg !6470
  %11 = icmp eq i8* %10, null, !dbg !6472
  br i1 %11, label %39, label %12, !dbg !6473

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 3, !dbg !6474
  %14 = load i32, i32* %13, align 4, !dbg !6474
  %15 = add i32 %14, -33, !dbg !6476
  %16 = icmp ult i32 %15, -32, !dbg !6476
  br i1 %16, label %39, label %17, !dbg !6476

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 1, !dbg !6477
  %19 = load i32, i32* %18, align 4, !dbg !6477
  %20 = add i32 %19, -33, !dbg !6479
  %21 = icmp ult i32 %20, -32, !dbg !6479
  br i1 %21, label %39, label %22, !dbg !6479

22:                                               ; preds = %17
  %23 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6480
  %24 = icmp eq i32 %23, 0, !dbg !6482
  br i1 %24, label %25, label %26, !dbg !6483

25:                                               ; preds = %22
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @__FUNCTION__.hal_spi_master_send_and_receive_polling, i32 0, i32 0), i32 noundef 470, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i32 0, i32 0), i32 noundef %0) #20, !dbg !6484
  br label %39, !dbg !6486

26:                                               ; preds = %22
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 0, i32 noundef 0) #20, !dbg !6487
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 1, i32 noundef 0) #20, !dbg !6488
  tail call void @spi_set_interrupt(i32 noundef %0, i1 noundef zeroext false) #20, !dbg !6489
  tail call void @spi_clear_fifo(i32 noundef %0) #20, !dbg !6490
  %27 = load i32, i32* %13, align 4, !dbg !6491
  %28 = tail call i32 @spi_analyse_transfer_size(i32 noundef %0, i32 noundef %27) #20, !dbg !6492
  call void @llvm.dbg.value(metadata i32 %28, metadata !6461, metadata !DIExpression()), !dbg !6462
  %29 = icmp eq i32 %28, 0, !dbg !6493
  br i1 %29, label %30, label %39, !dbg !6495

30:                                               ; preds = %26
  %31 = load i8*, i8** %9, align 4, !dbg !6496
  %32 = load i32, i32* %18, align 4, !dbg !6497
  %33 = tail call i32 @spi_push_data(i32 noundef %0, i8* noundef %31, i32 noundef %32) #20, !dbg !6498
  call void @llvm.dbg.value(metadata i32 %33, metadata !6461, metadata !DIExpression()), !dbg !6462
  %34 = icmp eq i32 %33, 0, !dbg !6499
  br i1 %34, label %35, label %39, !dbg !6501

35:                                               ; preds = %30
  tail call void @spi_start_transfer(i32 noundef %0, i32 noundef 0) #20, !dbg !6502
  %36 = load i8*, i8** %5, align 4, !dbg !6503
  %37 = load i32, i32* %13, align 4, !dbg !6504
  %38 = tail call i32 @spi_pop_data(i32 noundef %0, i8* noundef %36, i32 noundef %37) #20, !dbg !6505
  call void @llvm.dbg.value(metadata i32 %38, metadata !6461, metadata !DIExpression()), !dbg !6462
  br label %39, !dbg !6506

39:                                               ; preds = %30, %26, %17, %12, %8, %4, %2, %35, %25
  %40 = phi i32 [ -3, %25 ], [ %38, %35 ], [ -2, %2 ], [ -1, %4 ], [ -1, %8 ], [ -1, %12 ], [ -1, %17 ], [ %28, %26 ], [ %33, %30 ], !dbg !6462
  ret i32 %40, !dbg !6507
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_send_and_receive_dma(i32 noundef %0, %struct.hal_spi_master_send_and_receive_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6508 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6510, metadata !DIExpression()), !dbg !6513
  call void @llvm.dbg.value(metadata %struct.hal_spi_master_send_and_receive_config_t* %1, metadata !6511, metadata !DIExpression()), !dbg !6513
  call void @llvm.dbg.value(metadata i32 0, metadata !6512, metadata !DIExpression()), !dbg !6513
  %3 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6514
  br i1 %3, label %4, label %46, !dbg !6516

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 2, !dbg !6517
  %6 = load i8*, i8** %5, align 4, !dbg !6517
  %7 = icmp eq i8* %6, null, !dbg !6519
  br i1 %7, label %46, label %8, !dbg !6520

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 0, !dbg !6521
  %10 = load i8*, i8** %9, align 4, !dbg !6521
  %11 = icmp eq i8* %10, null, !dbg !6523
  br i1 %11, label %46, label %12, !dbg !6524

12:                                               ; preds = %8
  %13 = ptrtoint i8* %6 to i32, !dbg !6525
  %14 = and i32 %13, 3, !dbg !6527
  %15 = icmp eq i32 %14, 0, !dbg !6528
  %16 = ptrtoint i8* %10 to i32
  %17 = and i32 %16, 3
  %18 = icmp eq i32 %17, 0
  %19 = select i1 %15, i1 %18, i1 false, !dbg !6529
  br i1 %19, label %20, label %46, !dbg !6529

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 3, !dbg !6530
  %22 = load i32, i32* %21, align 4, !dbg !6530
  %23 = icmp eq i32 %22, 0, !dbg !6532
  br i1 %23, label %46, label %24, !dbg !6533

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 1, !dbg !6534
  %26 = load i32, i32* %25, align 4, !dbg !6534
  %27 = icmp eq i32 %26, 0, !dbg !6536
  br i1 %27, label %46, label %28, !dbg !6537

28:                                               ; preds = %24
  %29 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %13) #20, !dbg !6538
  br i1 %29, label %46, label %30, !dbg !6540

30:                                               ; preds = %28
  %31 = load i8*, i8** %9, align 4, !dbg !6541
  %32 = ptrtoint i8* %31 to i32, !dbg !6542
  %33 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %32) #20, !dbg !6543
  br i1 %33, label %46, label %34, !dbg !6544

34:                                               ; preds = %30
  %35 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6545
  %36 = icmp eq i32 %35, 0, !dbg !6547
  br i1 %36, label %37, label %38, !dbg !6548

37:                                               ; preds = %34
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @__FUNCTION__.hal_spi_master_send_and_receive_dma, i32 0, i32 0), i32 noundef 545, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i32 0, i32 0), i32 noundef %0) #20, !dbg !6549
  br label %46, !dbg !6551

38:                                               ; preds = %34
  %39 = load i8*, i8** %9, align 4, !dbg !6552
  tail call void @spi_set_rwaddr(i32 noundef %0, i32 noundef 0, i8* noundef %39) #20, !dbg !6553
  %40 = load i8*, i8** %5, align 4, !dbg !6554
  tail call void @spi_set_rwaddr(i32 noundef %0, i32 noundef 1, i8* noundef %40) #20, !dbg !6555
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 1, i32 noundef 1) #20, !dbg !6556
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 0, i32 noundef 1) #20, !dbg !6557
  tail call void @spi_set_interrupt(i32 noundef %0, i1 noundef zeroext true) #20, !dbg !6558
  %41 = load i32, i32* %21, align 4, !dbg !6559
  %42 = tail call i32 @spi_analyse_transfer_size(i32 noundef %0, i32 noundef %41) #20, !dbg !6560
  call void @llvm.dbg.value(metadata i32 %42, metadata !6512, metadata !DIExpression()), !dbg !6513
  %43 = icmp eq i32 %42, 0, !dbg !6561
  br i1 %43, label %44, label %46, !dbg !6563

44:                                               ; preds = %38
  tail call void @spi_start_transfer(i32 noundef %0, i32 noundef 1) #20, !dbg !6564
  %45 = getelementptr inbounds [4 x i32], [4 x i32]* @g_spi_direction, i32 0, i32 %0, !dbg !6566
  store i32 1, i32* %45, align 4, !dbg !6567
  br label %46, !dbg !6568

46:                                               ; preds = %38, %28, %30, %24, %20, %12, %8, %4, %2, %44, %37
  %47 = phi i32 [ -3, %37 ], [ 0, %44 ], [ -2, %2 ], [ -1, %4 ], [ -1, %8 ], [ -1, %12 ], [ -1, %20 ], [ -1, %24 ], [ -1, %30 ], [ -1, %28 ], [ %42, %38 ], !dbg !6513
  ret i32 %47, !dbg !6569
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_send_and_receive_dma_blocking(i32 noundef %0, %struct.hal_spi_master_send_and_receive_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6572, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.value(metadata %struct.hal_spi_master_send_and_receive_config_t* %1, metadata !6573, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.value(metadata i32 0, metadata !6574, metadata !DIExpression()), !dbg !6575
  %3 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6576
  br i1 %3, label %4, label %45, !dbg !6578

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 2, !dbg !6579
  %6 = load i8*, i8** %5, align 4, !dbg !6579
  %7 = icmp eq i8* %6, null, !dbg !6581
  br i1 %7, label %45, label %8, !dbg !6582

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 0, !dbg !6583
  %10 = load i8*, i8** %9, align 4, !dbg !6583
  %11 = icmp eq i8* %10, null, !dbg !6585
  br i1 %11, label %45, label %12, !dbg !6586

12:                                               ; preds = %8
  %13 = ptrtoint i8* %6 to i32, !dbg !6587
  %14 = and i32 %13, 3, !dbg !6589
  %15 = icmp eq i32 %14, 0, !dbg !6590
  %16 = ptrtoint i8* %10 to i32
  %17 = and i32 %16, 3
  %18 = icmp eq i32 %17, 0
  %19 = select i1 %15, i1 %18, i1 false, !dbg !6591
  br i1 %19, label %20, label %45, !dbg !6591

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 3, !dbg !6592
  %22 = load i32, i32* %21, align 4, !dbg !6592
  %23 = icmp eq i32 %22, 0, !dbg !6594
  br i1 %23, label %45, label %24, !dbg !6595

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %1, i32 0, i32 1, !dbg !6596
  %26 = load i32, i32* %25, align 4, !dbg !6596
  %27 = icmp eq i32 %26, 0, !dbg !6598
  br i1 %27, label %45, label %28, !dbg !6599

28:                                               ; preds = %24
  %29 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %13) #20, !dbg !6600
  br i1 %29, label %45, label %30, !dbg !6602

30:                                               ; preds = %28
  %31 = load i8*, i8** %9, align 4, !dbg !6603
  %32 = ptrtoint i8* %31 to i32, !dbg !6604
  %33 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %32) #20, !dbg !6605
  br i1 %33, label %45, label %34, !dbg !6606

34:                                               ; preds = %30
  %35 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6607
  %36 = icmp eq i32 %35, 0, !dbg !6609
  br i1 %36, label %37, label %38, !dbg !6610

37:                                               ; preds = %34
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @__FUNCTION__.hal_spi_master_send_and_receive_dma_blocking, i32 0, i32 0), i32 noundef 607, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i32 0, i32 0), i32 noundef %0) #20, !dbg !6611
  br label %45, !dbg !6613

38:                                               ; preds = %34
  %39 = load i8*, i8** %9, align 4, !dbg !6614
  tail call void @spi_set_rwaddr(i32 noundef %0, i32 noundef 0, i8* noundef %39) #20, !dbg !6615
  %40 = load i8*, i8** %5, align 4, !dbg !6616
  tail call void @spi_set_rwaddr(i32 noundef %0, i32 noundef 1, i8* noundef %40) #20, !dbg !6617
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 1, i32 noundef 1) #20, !dbg !6618
  tail call void @spi_set_mode(i32 noundef %0, i32 noundef 0, i32 noundef 1) #20, !dbg !6619
  tail call void @spi_set_interrupt(i32 noundef %0, i1 noundef zeroext false) #20, !dbg !6620
  %41 = load i32, i32* %21, align 4, !dbg !6621
  %42 = tail call i32 @spi_analyse_transfer_size(i32 noundef %0, i32 noundef %41) #20, !dbg !6622
  call void @llvm.dbg.value(metadata i32 %42, metadata !6574, metadata !DIExpression()), !dbg !6575
  %43 = icmp eq i32 %42, 0, !dbg !6623
  br i1 %43, label %44, label %45, !dbg !6625

44:                                               ; preds = %38
  tail call void @spi_start_transfer_dma_blocking(i32 noundef %0) #20, !dbg !6626
  br label %45, !dbg !6628

45:                                               ; preds = %38, %28, %30, %24, %20, %12, %8, %4, %2, %44, %37
  %46 = phi i32 [ -3, %37 ], [ 0, %44 ], [ -2, %2 ], [ -1, %4 ], [ -1, %8 ], [ -1, %12 ], [ -1, %20 ], [ -1, %24 ], [ -1, %30 ], [ -1, %28 ], [ %42, %38 ], !dbg !6575
  ret i32 %46, !dbg !6629
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_get_running_status(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !6630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6636, metadata !DIExpression()), !dbg !6639
  call void @llvm.dbg.value(metadata i32* %1, metadata !6637, metadata !DIExpression()), !dbg !6639
  call void @llvm.dbg.value(metadata i32 0, metadata !6638, metadata !DIExpression()), !dbg !6639
  %3 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6640
  br i1 %3, label %4, label %14, !dbg !6642

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !6643
  br i1 %5, label %14, label %6, !dbg !6645

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_spix_cg_code, i32 0, i32 %0, !dbg !6646
  %8 = load i32, i32* %7, align 4, !dbg !6646
  %9 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef %8) #20, !dbg !6648
  br i1 %9, label %10, label %14, !dbg !6649

10:                                               ; preds = %6
  %11 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6650
  call void @llvm.dbg.value(metadata i32 %11, metadata !6638, metadata !DIExpression()), !dbg !6639
  %12 = icmp ne i32 %11, 0, !dbg !6651
  %13 = zext i1 %12 to i32
  store i32 %13, i32* %1, align 4, !dbg !6653
  br label %14, !dbg !6654

14:                                               ; preds = %6, %4, %2, %10
  %15 = phi i32 [ 0, %10 ], [ -2, %2 ], [ -1, %4 ], [ -4, %6 ], !dbg !6639
  ret i32 %15, !dbg !6655
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_set_chip_select_timing(i32 noundef %0, [3 x i32] %1) local_unnamed_addr #0 !dbg !6656 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6667, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6668
  call void @llvm.dbg.value(metadata i32 undef, metadata !6667, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6668
  call void @llvm.dbg.value(metadata i32 undef, metadata !6667, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !6668
  call void @llvm.dbg.value(metadata i32 %0, metadata !6666, metadata !DIExpression()), !dbg !6668
  %3 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6669
  br i1 %3, label %4, label %11, !dbg !6671

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @is_master_chip_select_timing([3 x i32] %1) #21, !dbg !6672
  br i1 %5, label %6, label %11, !dbg !6674

6:                                                ; preds = %4
  %7 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6675
  %8 = icmp eq i32 %7, 0, !dbg !6677
  br i1 %8, label %9, label %10, !dbg !6678

9:                                                ; preds = %6
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @__FUNCTION__.hal_spi_master_set_chip_select_timing, i32 0, i32 0), i32 noundef 664, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef %0) #20, !dbg !6679
  br label %11, !dbg !6681

10:                                               ; preds = %6
  tail call void @spi_master_set_chip_select_timing(i32 noundef %0, [3 x i32] %1) #20, !dbg !6682
  br label %11, !dbg !6683

11:                                               ; preds = %4, %2, %10, %9
  %12 = phi i32 [ -3, %9 ], [ 0, %10 ], [ -2, %2 ], [ -1, %4 ], !dbg !6668
  ret i32 %12, !dbg !6684
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_master_chip_select_timing([3 x i32] %0) unnamed_addr #10 !dbg !6685 {
  %2 = extractvalue [3 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %2, metadata !6689, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6691
  %3 = extractvalue [3 x i32] %0, 1
  call void @llvm.dbg.value(metadata i32 %3, metadata !6689, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6691
  %4 = extractvalue [3 x i32] %0, 2
  call void @llvm.dbg.value(metadata i32 %4, metadata !6689, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !6691
  call void @llvm.dbg.value(metadata i8 1, metadata !6690, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata i1 undef, metadata !6690, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6691
  %5 = or i32 %3, %2, !dbg !6692
  %6 = icmp ult i32 %5, 65536, !dbg !6692
  call void @llvm.dbg.value(metadata i1 %6, metadata !6690, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6691
  %7 = icmp ult i32 %4, 256, !dbg !6693
  %8 = and i1 %7, %6, !dbg !6694
  call void @llvm.dbg.value(metadata i1 %8, metadata !6690, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6691
  ret i1 %8, !dbg !6695
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_master_set_deassert(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6701, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.value(metadata i32 %1, metadata !6702, metadata !DIExpression()), !dbg !6703
  %3 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6704
  br i1 %3, label %4, label %11, !dbg !6706

4:                                                ; preds = %2
  %5 = icmp ult i32 %1, 2, !dbg !6707
  br i1 %5, label %6, label %11, !dbg !6707

6:                                                ; preds = %4
  %7 = tail call i32 @spi_get_status(i32 noundef %0) #20, !dbg !6709
  %8 = icmp eq i32 %7, 0, !dbg !6711
  br i1 %8, label %9, label %10, !dbg !6712

9:                                                ; preds = %6
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__FUNCTION__.hal_spi_master_set_deassert, i32 0, i32 0), i32 noundef 687, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i32 0, i32 0), i32 noundef %0) #20, !dbg !6713
  br label %11, !dbg !6715

10:                                               ; preds = %6
  tail call void @spi_master_set_deassert(i32 noundef %0, i32 noundef %1) #20, !dbg !6716
  br label %11, !dbg !6717

11:                                               ; preds = %4, %2, %10, %9
  %12 = phi i32 [ -3, %9 ], [ 0, %10 ], [ -2, %2 ], [ -1, %4 ], !dbg !6703
  ret i32 %12, !dbg !6718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_spi_master_set_macro_selection(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !6719 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6724, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.value(metadata i32 %1, metadata !6725, metadata !DIExpression()), !dbg !6726
  %3 = tail call fastcc zeroext i1 @is_master_port(i32 noundef %0) #21, !dbg !6727
  %4 = icmp ugt i32 %1, 2, !dbg !6729
  %5 = sext i1 %4 to i32, !dbg !6729
  %6 = select i1 %3, i32 %5, i32 -2, !dbg !6729
  ret i32 %6, !dbg !6730
}

; Function Attrs: noinline nounwind optsize
define dso_local void @spi_isr_handler(i32 noundef %0, void (i32, i8*)* noundef readonly %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6731 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6735, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6736, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata i8* %2, metadata !6737, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata i32 0, metadata !6739, metadata !DIExpression()), !dbg !6740
  %4 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !6741
  %5 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %4, align 4, !dbg !6741
  %6 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 7, !dbg !6742
  %7 = load volatile i32, i32* %6, align 4, !dbg !6742
  call void @llvm.dbg.value(metadata i32 %7, metadata !6739, metadata !DIExpression()), !dbg !6740
  %8 = and i32 %7, 1, !dbg !6743
  %9 = icmp eq i32 %8, 0, !dbg !6743
  br i1 %9, label %17, label %10, !dbg !6745

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !6738, metadata !DIExpression()), !dbg !6740
  %11 = icmp eq void (i32, i8*)* %1, null, !dbg !6746
  br i1 %11, label %21, label %12, !dbg !6749

12:                                               ; preds = %10
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_spi_direction, i32 0, i32 %0, !dbg !6750
  %14 = load i32, i32* %13, align 4, !dbg !6750
  %15 = icmp ne i32 %14, 0, !dbg !6751
  %16 = zext i1 %15 to i32, !dbg !6751
  call void @llvm.dbg.value(metadata i32 %16, metadata !6738, metadata !DIExpression()), !dbg !6740
  tail call void %1(i32 noundef %16, i8* noundef %2) #20, !dbg !6752
  br label %21, !dbg !6754

17:                                               ; preds = %3
  %18 = and i32 %7, 2, !dbg !6755
  %19 = icmp eq i32 %18, 0, !dbg !6755
  br i1 %19, label %21, label %20, !dbg !6757

20:                                               ; preds = %17
  tail call void @spi_start_transfer(i32 noundef %0, i32 noundef 1) #21, !dbg !6758
  br label %21, !dbg !6760

21:                                               ; preds = %17, %20, %10, %12
  ret void, !dbg !6761
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @spi_start_transfer(i32 noundef %0, i32 noundef %1) local_unnamed_addr #9 !dbg !6762 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6767, metadata !DIExpression()), !dbg !6771
  call void @llvm.dbg.value(metadata i32 %1, metadata !6768, metadata !DIExpression()), !dbg !6771
  %4 = bitcast i32* %3 to i8*, !dbg !6772
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !6772
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6769, metadata !DIExpression()), !dbg !6773
  %5 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !6774
  %6 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %5, align 4, !dbg !6774
  %7 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %6, i32 0, i32 6, !dbg !6776
  %8 = load volatile i32, i32* %7, align 4, !dbg !6776
  %9 = and i32 %8, 16, !dbg !6777
  %10 = icmp eq i32 %9, 0, !dbg !6777
  call void @llvm.dbg.value(metadata i8 poison, metadata !6770, metadata !DIExpression()), !dbg !6771
  switch i32 %1, label %135 [
    i32 1, label %11
    i32 0, label %123
  ], !dbg !6778

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %6, i32 0, i32 1, !dbg !6779
  %13 = load volatile i32, i32* %12, align 4, !dbg !6781
  %14 = and i32 %13, -67108609, !dbg !6781
  store volatile i32 %14, i32* %12, align 4, !dbg !6781
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @g_pause_count, i32 0, i32 %0, !dbg !6782
  %16 = load i32, i32* %15, align 4, !dbg !6782
  %17 = icmp eq i32 %16, 0, !dbg !6784
  %18 = select i1 %17, i1 true, i1 %10, !dbg !6785
  br i1 %18, label %38, label %19, !dbg !6785

19:                                               ; preds = %11
  %20 = add i32 %16, -1, !dbg !6786
  store i32 %20, i32* %15, align 4, !dbg !6786
  %21 = load volatile i32, i32* %12, align 4, !dbg !6788
  %22 = or i32 %21, 67108608, !dbg !6788
  store volatile i32 %22, i32* %12, align 4, !dbg !6788
  %23 = icmp eq i32 %20, 0, !dbg !6789
  br i1 %23, label %24, label %35, !dbg !6791

24:                                               ; preds = %19
  %25 = getelementptr inbounds [4 x i32], [4 x i32]* @g_small_size_pause_count, i32 0, i32 %0, !dbg !6792
  %26 = load i32, i32* %25, align 4, !dbg !6792
  %27 = icmp eq i32 %26, 0, !dbg !6793
  br i1 %27, label %28, label %35, !dbg !6794

28:                                               ; preds = %24
  %29 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_length, i32 0, i32 %0, !dbg !6795
  %30 = load i16, i16* %29, align 2, !dbg !6795
  %31 = icmp eq i16 %30, 0, !dbg !6796
  br i1 %31, label %32, label %35, !dbg !6797

32:                                               ; preds = %28
  %33 = load volatile i32, i32* %7, align 4, !dbg !6798
  %34 = and i32 %33, -17, !dbg !6798
  store volatile i32 %34, i32* %7, align 4, !dbg !6798
  br label %35, !dbg !6800

35:                                               ; preds = %32, %28, %24, %19
  %36 = load volatile i32, i32* %7, align 4, !dbg !6801
  %37 = or i32 %36, 2, !dbg !6801
  store volatile i32 %37, i32* %7, align 4, !dbg !6801
  br label %135, !dbg !6802

38:                                               ; preds = %11
  %39 = getelementptr inbounds [4 x i32], [4 x i32]* @g_small_size_pause_count, i32 0, i32 %0, !dbg !6803
  %40 = load i32, i32* %39, align 4, !dbg !6803
  %41 = icmp eq i32 %40, 0, !dbg !6805
  %42 = select i1 %41, i1 true, i1 %10, !dbg !6806
  br i1 %42, label %58, label %43, !dbg !6806

43:                                               ; preds = %38
  %44 = shl i32 %40, 8, !dbg !6807
  %45 = add i32 %44, -256, !dbg !6807
  %46 = load volatile i32, i32* %12, align 4, !dbg !6809
  %47 = or i32 %45, %46, !dbg !6809
  %48 = or i32 %47, 67043328, !dbg !6809
  store volatile i32 %48, i32* %12, align 4, !dbg !6809
  store i32 0, i32* %39, align 4, !dbg !6810
  %49 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_length, i32 0, i32 %0, !dbg !6811
  %50 = load i16, i16* %49, align 2, !dbg !6811
  %51 = icmp eq i16 %50, 0, !dbg !6813
  br i1 %51, label %52, label %55, !dbg !6814

52:                                               ; preds = %43
  %53 = load volatile i32, i32* %7, align 4, !dbg !6815
  %54 = and i32 %53, -17, !dbg !6815
  store volatile i32 %54, i32* %7, align 4, !dbg !6815
  br label %55, !dbg !6817

55:                                               ; preds = %52, %43
  %56 = load volatile i32, i32* %7, align 4, !dbg !6818
  %57 = or i32 %56, 2, !dbg !6818
  store volatile i32 %57, i32* %7, align 4, !dbg !6818
  br label %135, !dbg !6819

58:                                               ; preds = %38
  %59 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_length, i32 0, i32 %0, !dbg !6820
  %60 = load i16, i16* %59, align 2, !dbg !6820
  %61 = and i16 %60, 3, !dbg !6822
  %62 = icmp eq i16 %61, 0, !dbg !6823
  br i1 %62, label %86, label %63, !dbg !6824

63:                                               ; preds = %58
  br i1 %17, label %77, label %64, !dbg !6825

64:                                               ; preds = %63
  %65 = add i32 %16, -1, !dbg !6826
  store i32 %65, i32* %15, align 4, !dbg !6826
  %66 = load volatile i32, i32* %12, align 4, !dbg !6828
  %67 = or i32 %66, 67108608, !dbg !6828
  store volatile i32 %67, i32* %12, align 4, !dbg !6828
  %68 = icmp ne i32 %65, 0, !dbg !6829
  %69 = xor i1 %41, true, !dbg !6831
  %70 = select i1 %68, i1 true, i1 %69, !dbg !6831
  br i1 %70, label %74, label %71, !dbg !6831

71:                                               ; preds = %64
  %72 = load volatile i32, i32* %7, align 4, !dbg !6832
  %73 = and i32 %72, -17, !dbg !6832
  store volatile i32 %73, i32* %7, align 4, !dbg !6832
  br label %74, !dbg !6834

74:                                               ; preds = %64, %71
  %75 = load volatile i32, i32* %7, align 4, !dbg !6835
  %76 = or i32 %75, 17, !dbg !6835
  store volatile i32 %76, i32* %7, align 4, !dbg !6835
  br label %135, !dbg !6836

77:                                               ; preds = %63
  br i1 %41, label %104, label %78, !dbg !6837

78:                                               ; preds = %77
  %79 = shl i32 %40, 8, !dbg !6838
  %80 = add i32 %79, -256, !dbg !6838
  %81 = load volatile i32, i32* %12, align 4, !dbg !6841
  %82 = or i32 %80, %81, !dbg !6841
  %83 = or i32 %82, 67043328, !dbg !6841
  store volatile i32 %83, i32* %12, align 4, !dbg !6841
  store i32 0, i32* %39, align 4, !dbg !6842
  %84 = load volatile i32, i32* %7, align 4, !dbg !6843
  %85 = or i32 %84, 17, !dbg !6843
  store volatile i32 %85, i32* %7, align 4, !dbg !6843
  br label %135, !dbg !6844

86:                                               ; preds = %58
  %87 = select i1 %17, i1 %41, i1 false, !dbg !6845
  br i1 %87, label %104, label %88, !dbg !6845

88:                                               ; preds = %86
  %89 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_count, i32 0, i32 %0, !dbg !6847
  %90 = load i16, i16* %89, align 2, !dbg !6847
  %91 = zext i16 %90 to i32, !dbg !6847
  %92 = shl nuw nsw i32 %91, 8, !dbg !6849
  %93 = load volatile i32, i32* %12, align 4, !dbg !6850
  %94 = or i32 %92, %93, !dbg !6850
  store volatile i32 %94, i32* %12, align 4, !dbg !6850
  %95 = zext i16 %60 to i32, !dbg !6851
  %96 = shl nuw i32 %95, 16, !dbg !6852
  %97 = add i32 %96, -65536, !dbg !6852
  %98 = load volatile i32, i32* %12, align 4, !dbg !6853
  %99 = or i32 %98, %97, !dbg !6853
  store volatile i32 %99, i32* %12, align 4, !dbg !6853
  store i16 0, i16* %59, align 2, !dbg !6854
  %100 = load volatile i32, i32* %7, align 4, !dbg !6855
  %101 = or i32 %100, 16, !dbg !6855
  store volatile i32 %101, i32* %7, align 4, !dbg !6855
  %102 = load volatile i32, i32* %7, align 4, !dbg !6856
  %103 = or i32 %102, 1, !dbg !6856
  store volatile i32 %103, i32* %7, align 4, !dbg !6856
  br label %135, !dbg !6857

104:                                              ; preds = %86, %77
  %105 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_count, i32 0, i32 %0, !dbg !6858
  %106 = load i16, i16* %105, align 2, !dbg !6858
  %107 = zext i16 %106 to i32, !dbg !6858
  %108 = shl nuw nsw i32 %107, 8, !dbg !6860
  %109 = load volatile i32, i32* %12, align 4, !dbg !6861
  %110 = or i32 %108, %109, !dbg !6861
  store volatile i32 %110, i32* %12, align 4, !dbg !6861
  %111 = zext i16 %60 to i32, !dbg !6862
  %112 = shl nuw i32 %111, 16, !dbg !6863
  %113 = add i32 %112, -65536, !dbg !6863
  %114 = load volatile i32, i32* %12, align 4, !dbg !6864
  %115 = or i32 %114, %113, !dbg !6864
  store volatile i32 %115, i32* %12, align 4, !dbg !6864
  %116 = load volatile i32, i32* %7, align 4, !dbg !6865
  br i1 %10, label %121, label %117, !dbg !6867

117:                                              ; preds = %104
  %118 = and i32 %116, -17, !dbg !6868
  store volatile i32 %118, i32* %7, align 4, !dbg !6868
  %119 = load volatile i32, i32* %7, align 4, !dbg !6870
  %120 = or i32 %119, 2, !dbg !6870
  store volatile i32 %120, i32* %7, align 4, !dbg !6870
  br label %135, !dbg !6871

121:                                              ; preds = %104
  %122 = or i32 %116, 1, !dbg !6872
  store volatile i32 %122, i32* %7, align 4, !dbg !6872
  br label %135

123:                                              ; preds = %2
  %124 = load volatile i32, i32* %7, align 4, !dbg !6874
  %125 = or i32 %124, 1, !dbg !6874
  store volatile i32 %125, i32* %7, align 4, !dbg !6874
  %126 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %6, i32 0, i32 8
  br label %127, !dbg !6875

127:                                              ; preds = %127, %123
  %128 = load volatile i32, i32* %126, align 4, !dbg !6876
  store volatile i32 %128, i32* %3, align 4, !dbg !6878
  %129 = load volatile i32, i32* %3, align 4, !dbg !6879
  %130 = icmp eq i32 %129, 1, !dbg !6880
  br i1 %130, label %131, label %127, !dbg !6881, !llvm.loop !6882

131:                                              ; preds = %127
  %132 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %6, i32 0, i32 7, !dbg !6884
  %133 = load volatile i32, i32* %132, align 4, !dbg !6884
  store volatile i32 %133, i32* %3, align 4, !dbg !6885
  %134 = load volatile i32, i32* %3, align 4, !dbg !6886
  store volatile i32 %134, i32* %3, align 4, !dbg !6887
  br label %135, !dbg !6888

135:                                              ; preds = %35, %74, %88, %121, %117, %78, %55, %2, %131
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !6889
  ret void, !dbg !6889
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_master_init(i32 noundef %0, %struct.hal_spi_master_config_t* nocapture noundef readonly %1) local_unnamed_addr #2 !dbg !6890 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6904, metadata !DIExpression()), !dbg !6907
  call void @llvm.dbg.value(metadata %struct.hal_spi_master_config_t* %1, metadata !6905, metadata !DIExpression()), !dbg !6907
  %3 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !6908
  %4 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %3, align 4, !dbg !6908
  %5 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %4, i32 0, i32 0, !dbg !6909
  store volatile i32 0, i32* %5, align 4, !dbg !6910
  %6 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %4, i32 0, i32 1, !dbg !6911
  store volatile i32 0, i32* %6, align 4, !dbg !6912
  %7 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %4, i32 0, i32 6, !dbg !6913
  store volatile i32 0, i32* %7, align 4, !dbg !6914
  %8 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %1, i32 0, i32 0, !dbg !6915
  %9 = load i32, i32* %8, align 4, !dbg !6915
  %10 = udiv i32 13000000, %9, !dbg !6916
  %11 = add nsw i32 %10, -1, !dbg !6917
  call void @llvm.dbg.value(metadata i32 %11, metadata !6906, metadata !DIExpression()), !dbg !6907
  %12 = shl i32 %11, 16, !dbg !6918
  %13 = or i32 %12, %11, !dbg !6919
  %14 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %4, i32 0, i32 10, !dbg !6920
  store volatile i32 %13, i32* %14, align 4, !dbg !6921
  %15 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %1, i32 0, i32 1, !dbg !6922
  %16 = load i32, i32* %15, align 4, !dbg !6922
  switch i32 %16, label %25 [
    i32 0, label %17
    i32 1, label %20
  ], !dbg !6923

17:                                               ; preds = %2
  %18 = load volatile i32, i32* %6, align 4, !dbg !6924
  %19 = and i32 %18, -67108865, !dbg !6924
  br label %23, !dbg !6926

20:                                               ; preds = %2
  %21 = load volatile i32, i32* %6, align 4, !dbg !6927
  %22 = or i32 %21, 67108864, !dbg !6927
  br label %23, !dbg !6928

23:                                               ; preds = %17, %20
  %24 = phi i32 [ %22, %20 ], [ %19, %17 ]
  store volatile i32 %24, i32* %6, align 4, !dbg !6929
  br label %25, !dbg !6930

25:                                               ; preds = %23, %2
  %26 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %1, i32 0, i32 2, !dbg !6930
  %27 = load i32, i32* %26, align 4, !dbg !6930
  switch i32 %27, label %36 [
    i32 0, label %28
    i32 1, label %31
  ], !dbg !6931

28:                                               ; preds = %25
  %29 = load volatile i32, i32* %7, align 4, !dbg !6932
  %30 = and i32 %29, -12289, !dbg !6932
  br label %34, !dbg !6934

31:                                               ; preds = %25
  %32 = load volatile i32, i32* %7, align 4, !dbg !6935
  %33 = or i32 %32, 12288, !dbg !6935
  br label %34, !dbg !6936

34:                                               ; preds = %28, %31
  %35 = phi i32 [ %33, %31 ], [ %30, %28 ]
  store volatile i32 %35, i32* %7, align 4, !dbg !6937
  br label %36, !dbg !6938

36:                                               ; preds = %34, %25
  %37 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %1, i32 0, i32 3, !dbg !6938
  %38 = load i32, i32* %37, align 4, !dbg !6938
  switch i32 %38, label %47 [
    i32 0, label %39
    i32 1, label %42
  ], !dbg !6939

39:                                               ; preds = %36
  %40 = load volatile i32, i32* %7, align 4, !dbg !6940
  %41 = and i32 %40, -513, !dbg !6940
  br label %45, !dbg !6942

42:                                               ; preds = %36
  %43 = load volatile i32, i32* %7, align 4, !dbg !6943
  %44 = or i32 %43, 512, !dbg !6943
  br label %45, !dbg !6944

45:                                               ; preds = %39, %42
  %46 = phi i32 [ %44, %42 ], [ %41, %39 ]
  store volatile i32 %46, i32* %7, align 4, !dbg !6945
  br label %47, !dbg !6946

47:                                               ; preds = %45, %36
  %48 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %1, i32 0, i32 4, !dbg !6946
  %49 = load i32, i32* %48, align 4, !dbg !6946
  switch i32 %49, label %58 [
    i32 0, label %50
    i32 1, label %53
  ], !dbg !6947

50:                                               ; preds = %47
  %51 = load volatile i32, i32* %7, align 4, !dbg !6948
  %52 = and i32 %51, -257, !dbg !6948
  br label %56, !dbg !6950

53:                                               ; preds = %47
  %54 = load volatile i32, i32* %7, align 4, !dbg !6951
  %55 = or i32 %54, 256, !dbg !6951
  br label %56, !dbg !6952

56:                                               ; preds = %50, %53
  %57 = phi i32 [ %55, %53 ], [ %52, %50 ]
  store volatile i32 %57, i32* %7, align 4, !dbg !6953
  br label %58, !dbg !6954

58:                                               ; preds = %56, %47
  %59 = load volatile i32, i32* %7, align 4, !dbg !6954
  %60 = and i32 %59, -17, !dbg !6954
  store volatile i32 %60, i32* %7, align 4, !dbg !6954
  tail call fastcc void @spi_master_pad_macro_select(i32 noundef %0) #21, !dbg !6955
  ret void, !dbg !6956
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @spi_master_pad_macro_select(i32 noundef %0) unnamed_addr #2 !dbg !6957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6961, metadata !DIExpression()), !dbg !6962
  switch i32 %0, label %22 [
    i32 0, label %2
    i32 1, label %7
    i32 2, label %12
    i32 3, label %17
  ], !dbg !6963

2:                                                ; preds = %1
  %3 = load volatile i32, i32* inttoptr (i32 -1576924160 to i32*), align 1024, !dbg !6964
  %4 = and i32 %3, 7340032, !dbg !6967
  %5 = icmp eq i32 %4, 7340032, !dbg !6967
  br i1 %5, label %6, label %22, !dbg !6968

6:                                                ; preds = %2
  store volatile i32 1, i32* inttoptr (i32 -1609498588 to i32*), align 4, !dbg !6969
  br label %22, !dbg !6971

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 -1576924144 to i32*), align 16, !dbg !6972
  %9 = and i32 %8, 458752, !dbg !6974
  %10 = icmp eq i32 %9, 262144, !dbg !6974
  br i1 %10, label %11, label %22, !dbg !6975

11:                                               ; preds = %7
  store volatile i32 2, i32* inttoptr (i32 -1609433052 to i32*), align 4, !dbg !6976
  br label %22, !dbg !6978

12:                                               ; preds = %1
  %13 = load volatile i32, i32* inttoptr (i32 -1576924080 to i32*), align 16, !dbg !6979
  %14 = and i32 %13, 15, !dbg !6981
  %15 = icmp eq i32 %14, 9, !dbg !6982
  br i1 %15, label %16, label %22, !dbg !6983

16:                                               ; preds = %12
  store volatile i32 2, i32* inttoptr (i32 -1609367516 to i32*), align 4, !dbg !6984
  br label %22, !dbg !6986

17:                                               ; preds = %1
  %18 = load volatile i32, i32* inttoptr (i32 -1576924096 to i32*), align 64, !dbg !6987
  %19 = and i32 %18, 240, !dbg !6989
  %20 = icmp eq i32 %19, 144, !dbg !6989
  br i1 %20, label %21, label %22, !dbg !6990

21:                                               ; preds = %17
  store volatile i32 1, i32* inttoptr (i32 -1609301980 to i32*), align 4, !dbg !6991
  br label %22, !dbg !6993

22:                                               ; preds = %1, %17, %21, %12, %16, %7, %11, %2, %6
  ret void, !dbg !6994
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_master_set_advanced_config(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #2 !dbg !6995 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7008, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !7009, metadata !DIExpression()), !dbg !7010
  %3 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !7011
  %4 = load i32, i32* %3, align 4, !dbg !7011
  switch i32 %4, label %17 [
    i32 0, label %5
    i32 1, label %11
  ], !dbg !7012

5:                                                ; preds = %2
  %6 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7013
  %7 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %6, align 4, !dbg !7013
  %8 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %7, i32 0, i32 6, !dbg !7015
  %9 = load volatile i32, i32* %8, align 4, !dbg !7016
  %10 = and i32 %9, -49153, !dbg !7016
  store volatile i32 %10, i32* %8, align 4, !dbg !7016
  br label %17, !dbg !7017

11:                                               ; preds = %2
  %12 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7018
  %13 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %12, align 4, !dbg !7018
  %14 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %13, i32 0, i32 6, !dbg !7019
  %15 = load volatile i32, i32* %14, align 4, !dbg !7020
  %16 = or i32 %15, 49152, !dbg !7020
  store volatile i32 %16, i32* %14, align 4, !dbg !7020
  br label %17, !dbg !7021

17:                                               ; preds = %2, %11, %5
  %18 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !7022
  %19 = load i32, i32* %18, align 4, !dbg !7022
  switch i32 %19, label %20 [
    i32 0, label %23
    i32 1, label %29
  ], !dbg !7023

20:                                               ; preds = %17
  %21 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0
  %22 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %21, align 4, !dbg !7024
  br label %35, !dbg !7023

23:                                               ; preds = %17
  %24 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7025
  %25 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %24, align 4, !dbg !7025
  %26 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %25, i32 0, i32 6, !dbg !7027
  %27 = load volatile i32, i32* %26, align 4, !dbg !7028
  %28 = and i32 %27, -129, !dbg !7028
  store volatile i32 %28, i32* %26, align 4, !dbg !7028
  br label %35, !dbg !7029

29:                                               ; preds = %17
  %30 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7030
  %31 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %30, align 4, !dbg !7030
  %32 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %31, i32 0, i32 6, !dbg !7031
  %33 = load volatile i32, i32* %32, align 4, !dbg !7032
  %34 = or i32 %33, 128, !dbg !7032
  store volatile i32 %34, i32* %32, align 4, !dbg !7032
  br label %35, !dbg !7033

35:                                               ; preds = %20, %29, %23
  %36 = phi %struct.SPI_MASTER_REGISTER_T* [ %22, %20 ], [ %31, %29 ], [ %25, %23 ], !dbg !7024
  %37 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %36, i32 0, i32 1, !dbg !7034
  %38 = load volatile i32, i32* %37, align 4, !dbg !7035
  %39 = and i32 %38, 536870911, !dbg !7035
  store volatile i32 %39, i32* %37, align 4, !dbg !7035
  %40 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !7036
  %41 = load i32, i32* %40, align 4, !dbg !7036
  %42 = shl i32 %41, 29, !dbg !7037
  %43 = load volatile i32, i32* %37, align 4, !dbg !7038
  %44 = or i32 %43, %42, !dbg !7038
  store volatile i32 %44, i32* %37, align 4, !dbg !7038
  %45 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !7039
  %46 = load i32, i32* %45, align 4, !dbg !7039
  switch i32 %46, label %55 [
    i32 0, label %47
    i32 1, label %51
  ], !dbg !7040

47:                                               ; preds = %35
  %48 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %36, i32 0, i32 6, !dbg !7041
  %49 = load volatile i32, i32* %48, align 4, !dbg !7043
  %50 = and i32 %49, -65, !dbg !7043
  store volatile i32 %50, i32* %48, align 4, !dbg !7043
  br label %55, !dbg !7044

51:                                               ; preds = %35
  %52 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %36, i32 0, i32 6, !dbg !7045
  %53 = load volatile i32, i32* %52, align 4, !dbg !7046
  %54 = or i32 %53, 64, !dbg !7046
  store volatile i32 %54, i32* %52, align 4, !dbg !7046
  br label %55, !dbg !7047

55:                                               ; preds = %35, %51, %47
  ret void, !dbg !7048
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @spi_get_status(i32 noundef %0) local_unnamed_addr #9 !dbg !7049 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7053, metadata !DIExpression()), !dbg !7055
  %3 = bitcast i32* %2 to i8*, !dbg !7056
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !7056
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7054, metadata !DIExpression()), !dbg !7057
  %4 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7058
  %5 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %4, align 4, !dbg !7058
  %6 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 8, !dbg !7059
  %7 = load volatile i32, i32* %6, align 4, !dbg !7059
  store volatile i32 %7, i32* %2, align 4, !dbg !7060
  %8 = load volatile i32, i32* %2, align 4, !dbg !7061
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !7062
  ret i32 %8, !dbg !7063
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_set_rwaddr(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #2 !dbg !7064 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7068, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.value(metadata i32 %1, metadata !7069, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.value(metadata i8* %2, metadata !7070, metadata !DIExpression()), !dbg !7071
  switch i32 %1, label %14 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !7072

4:                                                ; preds = %3
  %5 = ptrtoint i8* %2 to i32, !dbg !7073
  %6 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7075
  %7 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %6, align 4, !dbg !7075
  %8 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %7, i32 0, i32 2, !dbg !7076
  store volatile i32 %5, i32* %8, align 4, !dbg !7077
  br label %14, !dbg !7078

9:                                                ; preds = %3
  %10 = ptrtoint i8* %2 to i32, !dbg !7079
  %11 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7080
  %12 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %11, align 4, !dbg !7080
  %13 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %12, i32 0, i32 3, !dbg !7081
  store volatile i32 %10, i32* %13, align 4, !dbg !7082
  br label %14, !dbg !7083

14:                                               ; preds = %3, %9, %4
  ret void, !dbg !7084
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @spi_push_data(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !7085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7089, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i8* %1, metadata !7090, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 %2, metadata !7091, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 0, metadata !7092, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 0, metadata !7093, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 0, metadata !7094, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i8* %1, metadata !7095, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i8 0, metadata !7096, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 0, metadata !7097, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 0, metadata !7098, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 0, metadata !7099, metadata !DIExpression()), !dbg !7100
  %4 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7101
  %5 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %4, align 4, !dbg !7101
  %6 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 6, !dbg !7103
  %7 = load volatile i32, i32* %6, align 4, !dbg !7103
  %8 = and i32 %7, 32768, !dbg !7104
  %9 = icmp eq i32 %8, 0, !dbg !7104
  br i1 %9, label %11, label %10, !dbg !7105

10:                                               ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.spi_push_data, i32 0, i32 0), i32 noundef 254, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.101, i32 0, i32 0), i32 noundef %0) #20, !dbg !7106
  br label %77, !dbg !7108

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 1, !dbg !7109
  %13 = load volatile i32, i32* %12, align 4, !dbg !7110
  %14 = and i32 %13, -67108609, !dbg !7110
  store volatile i32 %14, i32* %12, align 4, !dbg !7110
  %15 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_count, i32 0, i32 %0, !dbg !7111
  %16 = load i16, i16* %15, align 2, !dbg !7111
  %17 = zext i16 %16 to i32, !dbg !7111
  %18 = shl nuw nsw i32 %17, 8, !dbg !7112
  %19 = load volatile i32, i32* %12, align 4, !dbg !7113
  %20 = or i32 %18, %19, !dbg !7113
  store volatile i32 %20, i32* %12, align 4, !dbg !7113
  %21 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_length, i32 0, i32 %0, !dbg !7114
  %22 = load i16, i16* %21, align 2, !dbg !7114
  %23 = zext i16 %22 to i32, !dbg !7114
  %24 = shl nuw i32 %23, 16, !dbg !7115
  %25 = add i32 %24, -65536, !dbg !7115
  %26 = load volatile i32, i32* %12, align 4, !dbg !7116
  %27 = or i32 %25, %26, !dbg !7116
  store volatile i32 %27, i32* %12, align 4, !dbg !7116
  call void @llvm.dbg.value(metadata i32 %2, metadata !7097, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !7100
  %28 = and i32 %2, 3, !dbg !7117
  call void @llvm.dbg.value(metadata i32 %28, metadata !7098, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 0, metadata !7093, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i8* %1, metadata !7095, metadata !DIExpression()), !dbg !7100
  %29 = icmp ult i32 %2, 4, !dbg !7118
  br i1 %29, label %52, label %30, !dbg !7121

30:                                               ; preds = %11
  %31 = lshr i32 %2, 2, !dbg !7122
  call void @llvm.dbg.value(metadata i32 %31, metadata !7097, metadata !DIExpression()), !dbg !7100
  %32 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 4
  br label %33, !dbg !7121

33:                                               ; preds = %30, %48
  %34 = phi i8* [ %1, %30 ], [ %49, %48 ]
  %35 = phi i32 [ 0, %30 ], [ %50, %48 ]
  call void @llvm.dbg.value(metadata i8* %34, metadata !7095, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 %35, metadata !7093, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i8* %34, metadata !7095, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 0, metadata !7094, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 0, metadata !7092, metadata !DIExpression()), !dbg !7100
  br label %36, !dbg !7123

36:                                               ; preds = %33, %36
  %37 = phi i8* [ %34, %33 ], [ %45, %36 ]
  %38 = phi i32 [ 0, %33 ], [ %46, %36 ]
  %39 = phi i32 [ 0, %33 ], [ %44, %36 ]
  call void @llvm.dbg.value(metadata i8* %37, metadata !7095, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 %38, metadata !7094, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 %39, metadata !7092, metadata !DIExpression()), !dbg !7100
  %40 = load i8, i8* %37, align 1, !dbg !7126
  call void @llvm.dbg.value(metadata i8 %40, metadata !7096, metadata !DIExpression()), !dbg !7100
  %41 = zext i8 %40 to i32, !dbg !7129
  %42 = shl nuw nsw i32 %38, 3, !dbg !7130
  %43 = shl nuw i32 %41, %42, !dbg !7131
  %44 = or i32 %43, %39, !dbg !7132
  call void @llvm.dbg.value(metadata i32 %44, metadata !7092, metadata !DIExpression()), !dbg !7100
  %45 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !7133
  call void @llvm.dbg.value(metadata i8* %45, metadata !7095, metadata !DIExpression()), !dbg !7100
  %46 = add nuw nsw i32 %38, 1, !dbg !7134
  call void @llvm.dbg.value(metadata i32 %46, metadata !7094, metadata !DIExpression()), !dbg !7100
  %47 = icmp eq i32 %46, 4, !dbg !7135
  br i1 %47, label %48, label %36, !dbg !7123, !llvm.loop !7136

48:                                               ; preds = %36
  %49 = getelementptr i8, i8* %34, i32 4, !dbg !7123
  store volatile i32 %44, i32* %32, align 4, !dbg !7138
  %50 = add nuw nsw i32 %35, 1, !dbg !7139
  call void @llvm.dbg.value(metadata i8* %49, metadata !7095, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 %50, metadata !7093, metadata !DIExpression()), !dbg !7100
  %51 = icmp eq i32 %50, %31, !dbg !7118
  br i1 %51, label %52, label %33, !dbg !7121, !llvm.loop !7140

52:                                               ; preds = %48, %11
  %53 = phi i8* [ %1, %11 ], [ %49, %48 ], !dbg !7142
  %54 = icmp eq i32 %28, 0, !dbg !7143
  br i1 %54, label %77, label %55, !dbg !7145

55:                                               ; preds = %52, %55
  %56 = phi i8* [ %64, %55 ], [ %53, %52 ]
  %57 = phi i32 [ %65, %55 ], [ 0, %52 ]
  %58 = phi i32 [ %63, %55 ], [ 0, %52 ]
  call void @llvm.dbg.value(metadata i8* %56, metadata !7095, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 %57, metadata !7094, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.value(metadata i32 %58, metadata !7092, metadata !DIExpression()), !dbg !7100
  %59 = load i8, i8* %56, align 1, !dbg !7146
  call void @llvm.dbg.value(metadata i8 %59, metadata !7096, metadata !DIExpression()), !dbg !7100
  %60 = zext i8 %59 to i32, !dbg !7151
  %61 = shl nuw nsw i32 %57, 3, !dbg !7152
  %62 = shl nuw i32 %60, %61, !dbg !7153
  %63 = or i32 %62, %58, !dbg !7154
  call void @llvm.dbg.value(metadata i32 %63, metadata !7092, metadata !DIExpression()), !dbg !7100
  %64 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !7155
  call void @llvm.dbg.value(metadata i8* %64, metadata !7095, metadata !DIExpression()), !dbg !7100
  %65 = add nuw nsw i32 %57, 1, !dbg !7156
  call void @llvm.dbg.value(metadata i32 %65, metadata !7094, metadata !DIExpression()), !dbg !7100
  %66 = icmp eq i32 %65, 4, !dbg !7157
  br i1 %66, label %67, label %55, !dbg !7158, !llvm.loop !7159

67:                                               ; preds = %55
  switch i32 %28, label %77 [
    i32 3, label %68
    i32 2, label %71
    i32 1, label %74
  ], !dbg !7161

68:                                               ; preds = %67
  %69 = and i32 %63, 16777215, !dbg !7162
  %70 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 4, !dbg !7164
  store volatile i32 %69, i32* %70, align 4, !dbg !7165
  br label %77, !dbg !7166

71:                                               ; preds = %67
  %72 = and i32 %63, 65535, !dbg !7167
  %73 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 4, !dbg !7168
  store volatile i32 %72, i32* %73, align 4, !dbg !7169
  br label %77, !dbg !7170

74:                                               ; preds = %67
  %75 = and i32 %63, 255, !dbg !7171
  %76 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 4, !dbg !7172
  store volatile i32 %75, i32* %76, align 4, !dbg !7173
  br label %77, !dbg !7174

77:                                               ; preds = %52, %67, %74, %71, %68, %10
  %78 = phi i32 [ -4, %10 ], [ 0, %68 ], [ 0, %71 ], [ 0, %74 ], [ 0, %67 ], [ 0, %52 ], !dbg !7100
  ret i32 %78, !dbg !7175
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @spi_pop_data(i32 noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !7176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7178, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i8* %1, metadata !7179, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 %2, metadata !7180, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 0, metadata !7181, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 0, metadata !7182, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 0, metadata !7183, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i8* %1, metadata !7184, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i8 0, metadata !7185, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 0, metadata !7186, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 0, metadata !7187, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 0, metadata !7188, metadata !DIExpression()), !dbg !7189
  %4 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7190
  %5 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %4, align 4, !dbg !7190
  %6 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 6, !dbg !7192
  %7 = load volatile i32, i32* %6, align 4, !dbg !7192
  %8 = and i32 %7, 16384, !dbg !7193
  %9 = icmp eq i32 %8, 0, !dbg !7193
  br i1 %9, label %11, label %10, !dbg !7194

10:                                               ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.spi_pop_data, i32 0, i32 0), i32 noundef 311, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1.104, i32 0, i32 0), i32 noundef %0) #20, !dbg !7195
  br label %58, !dbg !7197

11:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %2, metadata !7186, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !7189
  %12 = and i32 %2, 3, !dbg !7198
  call void @llvm.dbg.value(metadata i32 %12, metadata !7187, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 0, metadata !7182, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i8* %1, metadata !7184, metadata !DIExpression()), !dbg !7189
  %13 = icmp ult i32 %2, 4, !dbg !7199
  br i1 %13, label %35, label %14, !dbg !7202

14:                                               ; preds = %11
  %15 = lshr i32 %2, 2, !dbg !7203
  call void @llvm.dbg.value(metadata i32 %15, metadata !7186, metadata !DIExpression()), !dbg !7189
  %16 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 5
  br label %17, !dbg !7202

17:                                               ; preds = %14, %32
  %18 = phi i8* [ %1, %14 ], [ %29, %32 ]
  %19 = phi i32 [ 0, %14 ], [ %33, %32 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7184, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 %19, metadata !7182, metadata !DIExpression()), !dbg !7189
  %20 = load volatile i32, i32* %16, align 4, !dbg !7204
  call void @llvm.dbg.value(metadata i32 %20, metadata !7181, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 0, metadata !7183, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i8* %18, metadata !7184, metadata !DIExpression()), !dbg !7189
  br label %21, !dbg !7206

21:                                               ; preds = %17, %21
  %22 = phi i8* [ %18, %17 ], [ %29, %21 ]
  %23 = phi i32 [ 0, %17 ], [ %30, %21 ]
  call void @llvm.dbg.value(metadata i8* %22, metadata !7184, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 %23, metadata !7183, metadata !DIExpression()), !dbg !7189
  %24 = shl nuw nsw i32 %23, 3, !dbg !7208
  %25 = shl nuw i32 255, %24, !dbg !7211
  %26 = and i32 %25, %20, !dbg !7212
  %27 = lshr i32 %26, %24, !dbg !7213
  %28 = trunc i32 %27 to i8, !dbg !7214
  call void @llvm.dbg.value(metadata i8 %28, metadata !7185, metadata !DIExpression()), !dbg !7189
  store i8 %28, i8* %22, align 1, !dbg !7215
  %29 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !7216
  call void @llvm.dbg.value(metadata i8* %29, metadata !7184, metadata !DIExpression()), !dbg !7189
  %30 = add nuw nsw i32 %23, 1, !dbg !7217
  call void @llvm.dbg.value(metadata i32 %30, metadata !7183, metadata !DIExpression()), !dbg !7189
  %31 = icmp eq i32 %30, 4, !dbg !7218
  br i1 %31, label %32, label %21, !dbg !7206, !llvm.loop !7219

32:                                               ; preds = %21
  %33 = add nuw nsw i32 %19, 1, !dbg !7221
  call void @llvm.dbg.value(metadata i8* %29, metadata !7184, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 %33, metadata !7182, metadata !DIExpression()), !dbg !7189
  %34 = icmp eq i32 %33, %15, !dbg !7199
  br i1 %34, label %35, label %17, !dbg !7202, !llvm.loop !7222

35:                                               ; preds = %32, %11
  %36 = phi i8* [ %1, %11 ], [ %29, %32 ], !dbg !7224
  %37 = icmp eq i32 %12, 0, !dbg !7225
  br i1 %37, label %58, label %38, !dbg !7227

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 5, !dbg !7228
  %40 = load volatile i32, i32* %39, align 4, !dbg !7228
  call void @llvm.dbg.value(metadata i32 %40, metadata !7181, metadata !DIExpression()), !dbg !7189
  switch i32 %12, label %47 [
    i32 3, label %41
    i32 2, label %43
    i32 1, label %45
  ], !dbg !7230

41:                                               ; preds = %38
  %42 = and i32 %40, 16777215, !dbg !7231
  call void @llvm.dbg.value(metadata i32 %42, metadata !7181, metadata !DIExpression()), !dbg !7189
  br label %47, !dbg !7233

43:                                               ; preds = %38
  %44 = and i32 %40, 65535, !dbg !7234
  call void @llvm.dbg.value(metadata i32 %44, metadata !7181, metadata !DIExpression()), !dbg !7189
  br label %47, !dbg !7235

45:                                               ; preds = %38
  %46 = and i32 %40, 255, !dbg !7236
  call void @llvm.dbg.value(metadata i32 %46, metadata !7181, metadata !DIExpression()), !dbg !7189
  br label %47, !dbg !7237

47:                                               ; preds = %41, %43, %45, %38
  %48 = phi i32 [ %40, %38 ], [ %46, %45 ], [ %44, %43 ], [ %42, %41 ], !dbg !7238
  call void @llvm.dbg.value(metadata i32 %48, metadata !7181, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 0, metadata !7183, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i8* %36, metadata !7184, metadata !DIExpression()), !dbg !7189
  br label %49, !dbg !7239

49:                                               ; preds = %47, %49
  %50 = phi i8* [ %55, %49 ], [ %36, %47 ]
  %51 = phi i32 [ %56, %49 ], [ 0, %47 ]
  call void @llvm.dbg.value(metadata i8* %50, metadata !7184, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.value(metadata i32 %51, metadata !7183, metadata !DIExpression()), !dbg !7189
  %52 = shl i32 %51, 3, !dbg !7241
  %53 = lshr i32 %48, %52, !dbg !7244
  %54 = trunc i32 %53 to i8, !dbg !7245
  store i8 %54, i8* %50, align 1, !dbg !7246
  %55 = getelementptr inbounds i8, i8* %50, i32 1, !dbg !7247
  call void @llvm.dbg.value(metadata i8* %55, metadata !7184, metadata !DIExpression()), !dbg !7189
  %56 = add nuw nsw i32 %51, 1, !dbg !7248
  call void @llvm.dbg.value(metadata i32 %56, metadata !7183, metadata !DIExpression()), !dbg !7189
  %57 = icmp eq i32 %56, %12, !dbg !7249
  br i1 %57, label %58, label %49, !dbg !7239, !llvm.loop !7250

58:                                               ; preds = %49, %35, %10
  %59 = phi i32 [ -4, %10 ], [ 0, %35 ], [ 0, %49 ], !dbg !7189
  ret i32 %59, !dbg !7252
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_set_interrupt(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #2 !dbg !7253 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7257, metadata !DIExpression()), !dbg !7259
  call void @llvm.dbg.value(metadata i1 %1, metadata !7258, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7259
  %3 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7260
  %4 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %3, align 4, !dbg !7260
  %5 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %4, i32 0, i32 6, !dbg !7260
  %6 = load volatile i32, i32* %5, align 4, !dbg !7260
  %7 = and i32 %6, -196609, !dbg !7262
  %8 = select i1 %1, i32 196608, i32 0, !dbg !7262
  %9 = or i32 %7, %8, !dbg !7262
  store volatile i32 %9, i32* %5, align 4, !dbg !7260
  ret void, !dbg !7263
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_clear_fifo(i32 noundef %0) local_unnamed_addr #2 !dbg !7264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7266, metadata !DIExpression()), !dbg !7267
  %2 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7268
  %3 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %2, align 4, !dbg !7268
  %4 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %3, i32 0, i32 6, !dbg !7269
  %5 = load volatile i32, i32* %4, align 4, !dbg !7270
  %6 = or i32 %5, 4, !dbg !7270
  store volatile i32 %6, i32* %4, align 4, !dbg !7270
  %7 = load volatile i32, i32* %4, align 4, !dbg !7271
  %8 = and i32 %7, -5, !dbg !7271
  store volatile i32 %8, i32* %4, align 4, !dbg !7271
  ret void, !dbg !7272
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_set_mode(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !7273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7277, metadata !DIExpression()), !dbg !7280
  call void @llvm.dbg.value(metadata i32 %1, metadata !7278, metadata !DIExpression()), !dbg !7280
  call void @llvm.dbg.value(metadata i32 %2, metadata !7279, metadata !DIExpression()), !dbg !7280
  %4 = icmp eq i32 %1, 0, !dbg !7281
  br i1 %4, label %5, label %18, !dbg !7283

5:                                                ; preds = %3
  switch i32 %2, label %31 [
    i32 1, label %6
    i32 0, label %12
  ], !dbg !7284

6:                                                ; preds = %5
  %7 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7286
  %8 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %7, align 4, !dbg !7286
  %9 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %8, i32 0, i32 6, !dbg !7288
  %10 = load volatile i32, i32* %9, align 4, !dbg !7289
  %11 = or i32 %10, 2048, !dbg !7289
  store volatile i32 %11, i32* %9, align 4, !dbg !7289
  br label %31, !dbg !7290

12:                                               ; preds = %5
  %13 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7291
  %14 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %13, align 4, !dbg !7291
  %15 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %14, i32 0, i32 6, !dbg !7292
  %16 = load volatile i32, i32* %15, align 4, !dbg !7293
  %17 = and i32 %16, -2049, !dbg !7293
  store volatile i32 %17, i32* %15, align 4, !dbg !7293
  br label %31, !dbg !7294

18:                                               ; preds = %3
  switch i32 %2, label %31 [
    i32 1, label %19
    i32 0, label %25
  ], !dbg !7295

19:                                               ; preds = %18
  %20 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7297
  %21 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %20, align 4, !dbg !7297
  %22 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %21, i32 0, i32 6, !dbg !7299
  %23 = load volatile i32, i32* %22, align 4, !dbg !7300
  %24 = or i32 %23, 1024, !dbg !7300
  store volatile i32 %24, i32* %22, align 4, !dbg !7300
  br label %31, !dbg !7301

25:                                               ; preds = %18
  %26 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7302
  %27 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %26, align 4, !dbg !7302
  %28 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %27, i32 0, i32 6, !dbg !7303
  %29 = load volatile i32, i32* %28, align 4, !dbg !7304
  %30 = and i32 %29, -1025, !dbg !7304
  store volatile i32 %30, i32* %28, align 4, !dbg !7304
  br label %31, !dbg !7305

31:                                               ; preds = %19, %18, %25, %6, %5, %12
  ret void, !dbg !7306
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_start_transfer_dma_blocking(i32 noundef %0) local_unnamed_addr #2 !dbg !7307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7309, metadata !DIExpression()), !dbg !7312
  %2 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_length, i32 0, i32 %0, !dbg !7313
  %3 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0
  %4 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %3, align 4
  %5 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %4, i32 0, i32 6
  %6 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %4, i32 0, i32 1
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_pause_count, i32 0, i32 %0
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_small_size_pause_count, i32 0, i32 %0
  %9 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_count, i32 0, i32 %0
  %10 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %4, i32 0, i32 8
  %11 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %4, i32 0, i32 7
  br label %12, !dbg !7314

12:                                               ; preds = %137, %1
  %13 = load volatile i32, i32* %5, align 4, !dbg !7315
  %14 = and i32 %13, 16, !dbg !7318
  %15 = icmp eq i32 %14, 0, !dbg !7318
  call void @llvm.dbg.value(metadata i8 poison, metadata !7310, metadata !DIExpression()), !dbg !7312
  %16 = load volatile i32, i32* %6, align 4, !dbg !7319
  %17 = and i32 %16, -67108609, !dbg !7319
  store volatile i32 %17, i32* %6, align 4, !dbg !7319
  %18 = load i32, i32* %7, align 4, !dbg !7320
  %19 = icmp eq i32 %18, 0, !dbg !7322
  %20 = select i1 %19, i1 true, i1 %15, !dbg !7323
  br i1 %20, label %38, label %21, !dbg !7323

21:                                               ; preds = %12
  %22 = add i32 %18, -1, !dbg !7324
  store i32 %22, i32* %7, align 4, !dbg !7324
  %23 = load volatile i32, i32* %6, align 4, !dbg !7326
  %24 = or i32 %23, 67108608, !dbg !7326
  store volatile i32 %24, i32* %6, align 4, !dbg !7326
  %25 = icmp eq i32 %22, 0, !dbg !7327
  br i1 %25, label %26, label %35, !dbg !7329

26:                                               ; preds = %21
  %27 = load i32, i32* %8, align 4, !dbg !7330
  %28 = icmp eq i32 %27, 0, !dbg !7331
  br i1 %28, label %29, label %35, !dbg !7332

29:                                               ; preds = %26
  %30 = load i16, i16* %2, align 2, !dbg !7333
  %31 = icmp eq i16 %30, 0, !dbg !7334
  br i1 %31, label %32, label %35, !dbg !7335

32:                                               ; preds = %29
  %33 = load volatile i32, i32* %5, align 4, !dbg !7336
  %34 = and i32 %33, -17, !dbg !7336
  store volatile i32 %34, i32* %5, align 4, !dbg !7336
  br label %35, !dbg !7338

35:                                               ; preds = %32, %29, %26, %21
  %36 = load volatile i32, i32* %5, align 4, !dbg !7339
  %37 = or i32 %36, 2, !dbg !7339
  store volatile i32 %37, i32* %5, align 4, !dbg !7339
  br label %120, !dbg !7340

38:                                               ; preds = %12
  %39 = load i32, i32* %8, align 4, !dbg !7341
  %40 = icmp eq i32 %39, 0, !dbg !7343
  %41 = select i1 %40, i1 true, i1 %15, !dbg !7344
  br i1 %41, label %56, label %42, !dbg !7344

42:                                               ; preds = %38
  %43 = shl i32 %39, 8, !dbg !7345
  %44 = add i32 %43, -256, !dbg !7345
  %45 = load volatile i32, i32* %6, align 4, !dbg !7347
  %46 = or i32 %44, %45, !dbg !7347
  %47 = or i32 %46, 67043328, !dbg !7347
  store volatile i32 %47, i32* %6, align 4, !dbg !7347
  store i32 0, i32* %8, align 4, !dbg !7348
  %48 = load i16, i16* %2, align 2, !dbg !7349
  %49 = icmp eq i16 %48, 0, !dbg !7351
  br i1 %49, label %50, label %53, !dbg !7352

50:                                               ; preds = %42
  %51 = load volatile i32, i32* %5, align 4, !dbg !7353
  %52 = and i32 %51, -17, !dbg !7353
  store volatile i32 %52, i32* %5, align 4, !dbg !7353
  br label %53, !dbg !7355

53:                                               ; preds = %50, %42
  %54 = load volatile i32, i32* %5, align 4, !dbg !7356
  %55 = or i32 %54, 2, !dbg !7356
  store volatile i32 %55, i32* %5, align 4, !dbg !7356
  br label %120, !dbg !7357

56:                                               ; preds = %38
  %57 = load i16, i16* %2, align 2, !dbg !7358
  %58 = and i16 %57, 3, !dbg !7360
  %59 = icmp eq i16 %58, 0, !dbg !7361
  br i1 %59, label %83, label %60, !dbg !7362

60:                                               ; preds = %56
  br i1 %19, label %74, label %61, !dbg !7363

61:                                               ; preds = %60
  %62 = add i32 %18, -1, !dbg !7364
  store i32 %62, i32* %7, align 4, !dbg !7364
  %63 = load volatile i32, i32* %6, align 4, !dbg !7366
  %64 = or i32 %63, 67108608, !dbg !7366
  store volatile i32 %64, i32* %6, align 4, !dbg !7366
  %65 = icmp ne i32 %62, 0, !dbg !7367
  %66 = xor i1 %40, true, !dbg !7369
  %67 = select i1 %65, i1 true, i1 %66, !dbg !7369
  br i1 %67, label %71, label %68, !dbg !7369

68:                                               ; preds = %61
  %69 = load volatile i32, i32* %5, align 4, !dbg !7370
  %70 = and i32 %69, -17, !dbg !7370
  store volatile i32 %70, i32* %5, align 4, !dbg !7370
  br label %71, !dbg !7372

71:                                               ; preds = %61, %68
  %72 = load volatile i32, i32* %5, align 4, !dbg !7373
  %73 = or i32 %72, 17, !dbg !7373
  store volatile i32 %73, i32* %5, align 4, !dbg !7373
  br label %120, !dbg !7374

74:                                               ; preds = %60
  br i1 %40, label %100, label %75, !dbg !7375

75:                                               ; preds = %74
  %76 = shl i32 %39, 8, !dbg !7376
  %77 = add i32 %76, -256, !dbg !7376
  %78 = load volatile i32, i32* %6, align 4, !dbg !7379
  %79 = or i32 %77, %78, !dbg !7379
  %80 = or i32 %79, 67043328, !dbg !7379
  store volatile i32 %80, i32* %6, align 4, !dbg !7379
  store i32 0, i32* %8, align 4, !dbg !7380
  %81 = load volatile i32, i32* %5, align 4, !dbg !7381
  %82 = or i32 %81, 17, !dbg !7381
  store volatile i32 %82, i32* %5, align 4, !dbg !7381
  br label %120, !dbg !7382

83:                                               ; preds = %56
  %84 = select i1 %19, i1 %40, i1 false, !dbg !7383
  br i1 %84, label %100, label %85, !dbg !7383

85:                                               ; preds = %83
  %86 = load i16, i16* %9, align 2, !dbg !7385
  %87 = zext i16 %86 to i32, !dbg !7385
  %88 = shl nuw nsw i32 %87, 8, !dbg !7387
  %89 = load volatile i32, i32* %6, align 4, !dbg !7388
  %90 = or i32 %88, %89, !dbg !7388
  store volatile i32 %90, i32* %6, align 4, !dbg !7388
  %91 = zext i16 %57 to i32, !dbg !7389
  %92 = shl nuw i32 %91, 16, !dbg !7390
  %93 = add i32 %92, -65536, !dbg !7390
  %94 = load volatile i32, i32* %6, align 4, !dbg !7391
  %95 = or i32 %94, %93, !dbg !7391
  store volatile i32 %95, i32* %6, align 4, !dbg !7391
  store i16 0, i16* %2, align 2, !dbg !7392
  %96 = load volatile i32, i32* %5, align 4, !dbg !7393
  %97 = or i32 %96, 16, !dbg !7393
  store volatile i32 %97, i32* %5, align 4, !dbg !7393
  %98 = load volatile i32, i32* %5, align 4, !dbg !7394
  %99 = or i32 %98, 1, !dbg !7394
  store volatile i32 %99, i32* %5, align 4, !dbg !7394
  br label %120, !dbg !7395

100:                                              ; preds = %83, %74
  %101 = load i16, i16* %9, align 2, !dbg !7396
  %102 = zext i16 %101 to i32, !dbg !7396
  %103 = shl nuw nsw i32 %102, 8, !dbg !7398
  %104 = load volatile i32, i32* %6, align 4, !dbg !7399
  %105 = or i32 %103, %104, !dbg !7399
  store volatile i32 %105, i32* %6, align 4, !dbg !7399
  %106 = zext i16 %57 to i32, !dbg !7400
  %107 = shl nuw i32 %106, 16, !dbg !7401
  %108 = add i32 %107, -65536, !dbg !7401
  %109 = load volatile i32, i32* %6, align 4, !dbg !7402
  %110 = or i32 %109, %108, !dbg !7402
  store volatile i32 %110, i32* %6, align 4, !dbg !7402
  %111 = load volatile i32, i32* %5, align 4, !dbg !7403
  br i1 %15, label %116, label %112, !dbg !7405

112:                                              ; preds = %100
  %113 = and i32 %111, -17, !dbg !7406
  store volatile i32 %113, i32* %5, align 4, !dbg !7406
  %114 = load volatile i32, i32* %5, align 4, !dbg !7408
  %115 = or i32 %114, 2, !dbg !7408
  br label %118, !dbg !7409

116:                                              ; preds = %100
  %117 = or i32 %111, 1, !dbg !7410
  br label %118

118:                                              ; preds = %116, %112
  %119 = phi i32 [ %117, %116 ], [ %115, %112 ]
  store volatile i32 %119, i32* %5, align 4, !dbg !7403
  store i16 0, i16* %2, align 2, !dbg !7412
  br label %120

120:                                              ; preds = %53, %75, %118, %85, %71, %35
  %121 = phi i32 [ %18, %53 ], [ 0, %75 ], [ 0, %118 ], [ %18, %85 ], [ %62, %71 ], [ %22, %35 ]
  br label %122, !dbg !7413

122:                                              ; preds = %122, %120
  %123 = load volatile i32, i32* %10, align 4, !dbg !7414
  %124 = icmp eq i32 %123, 1, !dbg !7415
  br i1 %124, label %125, label %122, !dbg !7413, !llvm.loop !7416

125:                                              ; preds = %122, %125
  %126 = load volatile i32, i32* %11, align 4, !dbg !7418
  call void @llvm.dbg.value(metadata i32 %126, metadata !7311, metadata !DIExpression()), !dbg !7312
  %127 = add i32 %126, -3, !dbg !7420
  %128 = icmp ult i32 %127, -2, !dbg !7420
  br i1 %128, label %125, label %129, !dbg !7421, !llvm.loop !7422

129:                                              ; preds = %125
  %130 = icmp eq i32 %121, 0, !dbg !7425
  br i1 %130, label %131, label %137, !dbg !7426

131:                                              ; preds = %129
  %132 = load i32, i32* %8, align 4, !dbg !7427
  %133 = icmp eq i32 %132, 0, !dbg !7428
  br i1 %133, label %134, label %137, !dbg !7429

134:                                              ; preds = %131
  %135 = load i16, i16* %2, align 2, !dbg !7313
  %136 = icmp eq i16 %135, 0, !dbg !7430
  br i1 %136, label %138, label %137, !dbg !7431

137:                                              ; preds = %134, %131, %129
  br label %12, !dbg !7315, !llvm.loop !7432

138:                                              ; preds = %134
  ret void, !dbg !7434
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @spi_analyse_transfer_size(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7435 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7439, metadata !DIExpression()), !dbg !7443
  call void @llvm.dbg.value(metadata i32 %1, metadata !7440, metadata !DIExpression()), !dbg !7443
  call void @llvm.dbg.value(metadata i32 0, metadata !7441, metadata !DIExpression()), !dbg !7443
  call void @llvm.dbg.value(metadata i32 %1, metadata !7442, metadata !DIExpression()), !dbg !7443
  %3 = icmp ugt i32 %1, 262144, !dbg !7444
  br i1 %3, label %4, label %19, !dbg !7446

4:                                                ; preds = %2
  %5 = lshr i32 %1, 18, !dbg !7447
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_pause_count, i32 0, i32 %0, !dbg !7449
  store i32 %5, i32* %6, align 4, !dbg !7450
  %7 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7451
  %8 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %7, align 4, !dbg !7451
  %9 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %8, i32 0, i32 6, !dbg !7453
  %10 = load volatile i32, i32* %9, align 4, !dbg !7453
  %11 = and i32 %10, 32, !dbg !7454
  %12 = icmp eq i32 %11, 0, !dbg !7455
  br i1 %12, label %14, label %13, !dbg !7456

13:                                               ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.spi_analyse_transfer_size, i32 0, i32 0), i32 noundef 546, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef %0) #20, !dbg !7457
  br label %44, !dbg !7459

14:                                               ; preds = %4
  %15 = and i32 %1, 262143, !dbg !7460
  call void @llvm.dbg.value(metadata i32 %15, metadata !7442, metadata !DIExpression()), !dbg !7443
  %16 = icmp eq i32 %15, 0, !dbg !7461
  br i1 %16, label %17, label %19, !dbg !7463

17:                                               ; preds = %14
  %18 = add nsw i32 %5, -1, !dbg !7464
  store i32 %18, i32* %6, align 4, !dbg !7464
  call void @llvm.dbg.value(metadata i32 %20, metadata !7442, metadata !DIExpression()), !dbg !7443
  br label %31, !dbg !7466

19:                                               ; preds = %14, %2
  %20 = phi i32 [ %15, %14 ], [ %1, %2 ], !dbg !7443
  call void @llvm.dbg.value(metadata i32 %20, metadata !7442, metadata !DIExpression()), !dbg !7443
  %21 = icmp ugt i32 %20, 1024, !dbg !7469
  br i1 %21, label %22, label %38, !dbg !7470

22:                                               ; preds = %19
  %23 = and i32 %20, 1023, !dbg !7471
  %24 = icmp eq i32 %23, 0, !dbg !7473
  br i1 %24, label %31, label %25, !dbg !7466

25:                                               ; preds = %22
  %26 = lshr i32 %20, 10, !dbg !7474
  %27 = getelementptr inbounds [4 x i32], [4 x i32]* @g_small_size_pause_count, i32 0, i32 %0, !dbg !7476
  store i32 %26, i32* %27, align 4, !dbg !7477
  %28 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_count, i32 0, i32 %0, !dbg !7478
  store i16 0, i16* %28, align 2, !dbg !7479
  %29 = trunc i32 %23 to i16, !dbg !7480
  %30 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_length, i32 0, i32 %0, !dbg !7481
  store i16 %29, i16* %30, align 2, !dbg !7482
  br label %44, !dbg !7483

31:                                               ; preds = %17, %22
  %32 = phi i32 [ 262144, %17 ], [ %20, %22 ]
  %33 = lshr i32 %32, 10, !dbg !7484
  %34 = trunc i32 %33 to i16, !dbg !7486
  %35 = add nsw i16 %34, -1, !dbg !7486
  %36 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_count, i32 0, i32 %0, !dbg !7487
  store i16 %35, i16* %36, align 2, !dbg !7488
  %37 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_length, i32 0, i32 %0, !dbg !7489
  store i16 1024, i16* %37, align 2, !dbg !7490
  br label %44

38:                                               ; preds = %19
  %39 = icmp eq i32 %20, 0, !dbg !7491
  br i1 %39, label %44, label %40, !dbg !7493

40:                                               ; preds = %38
  %41 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_count, i32 0, i32 %0, !dbg !7494
  store i16 0, i16* %41, align 2, !dbg !7496
  %42 = trunc i32 %20 to i16, !dbg !7497
  %43 = getelementptr inbounds [4 x i16], [4 x i16]* @g_packet_length, i32 0, i32 %0, !dbg !7498
  store i16 %42, i16* %43, align 2, !dbg !7499
  br label %44

44:                                               ; preds = %40, %31, %25, %38, %13
  %45 = phi i32 [ -4, %13 ], [ -1, %38 ], [ 0, %25 ], [ 0, %31 ], [ 0, %40 ], !dbg !7443
  ret i32 %45, !dbg !7500
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_master_set_chip_select_timing(i32 noundef %0, [3 x i32] %1) local_unnamed_addr #2 !dbg !7501 {
  %3 = extractvalue [3 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !7512, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !7513
  %4 = extractvalue [3 x i32] %1, 1
  call void @llvm.dbg.value(metadata i32 %4, metadata !7512, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !7513
  %5 = extractvalue [3 x i32] %1, 2
  call void @llvm.dbg.value(metadata i32 %5, metadata !7512, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !7513
  call void @llvm.dbg.value(metadata i32 %0, metadata !7511, metadata !DIExpression()), !dbg !7513
  %6 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7514
  %7 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %6, align 4, !dbg !7514
  %8 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %7, i32 0, i32 0, !dbg !7515
  %9 = load volatile i32, i32* %8, align 4, !dbg !7516
  store volatile i32 0, i32* %8, align 4, !dbg !7516
  %10 = shl i32 %3, 16, !dbg !7517
  %11 = load volatile i32, i32* %8, align 4, !dbg !7518
  %12 = or i32 %11, %10, !dbg !7518
  store volatile i32 %12, i32* %8, align 4, !dbg !7518
  %13 = load volatile i32, i32* %8, align 4, !dbg !7519
  %14 = or i32 %13, %4, !dbg !7519
  store volatile i32 %14, i32* %8, align 4, !dbg !7519
  %15 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %7, i32 0, i32 1, !dbg !7520
  %16 = load volatile i32, i32* %15, align 4, !dbg !7521
  %17 = and i32 %16, -256, !dbg !7521
  store volatile i32 %17, i32* %15, align 4, !dbg !7521
  %18 = load volatile i32, i32* %15, align 4, !dbg !7522
  %19 = or i32 %18, %5, !dbg !7522
  store volatile i32 %19, i32* %15, align 4, !dbg !7522
  ret void, !dbg !7523
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_master_set_deassert(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !7524 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7528, metadata !DIExpression()), !dbg !7530
  call void @llvm.dbg.value(metadata i32 %1, metadata !7529, metadata !DIExpression()), !dbg !7530
  switch i32 %1, label %15 [
    i32 0, label %3
    i32 1, label %9
  ], !dbg !7531

3:                                                ; preds = %2
  %4 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7532
  %5 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %4, align 4, !dbg !7532
  %6 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %5, i32 0, i32 6, !dbg !7534
  %7 = load volatile i32, i32* %6, align 4, !dbg !7535
  %8 = and i32 %7, -33, !dbg !7535
  store volatile i32 %8, i32* %6, align 4, !dbg !7535
  br label %15, !dbg !7536

9:                                                ; preds = %2
  %10 = getelementptr inbounds [4 x %struct.SPI_MASTER_REGISTER_T*], [4 x %struct.SPI_MASTER_REGISTER_T*]* @spi_master_register, i32 0, i32 %0, !dbg !7537
  %11 = load %struct.SPI_MASTER_REGISTER_T*, %struct.SPI_MASTER_REGISTER_T** %10, align 4, !dbg !7537
  %12 = getelementptr inbounds %struct.SPI_MASTER_REGISTER_T, %struct.SPI_MASTER_REGISTER_T* %11, i32 0, i32 6, !dbg !7538
  %13 = load volatile i32, i32* %12, align 4, !dbg !7539
  %14 = or i32 %13, 32, !dbg !7539
  store volatile i32 %14, i32* %12, align 4, !dbg !7539
  br label %15, !dbg !7540

15:                                               ; preds = %2, %9, %3
  ret void, !dbg !7541
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #2 !dbg !1021 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !7542
  br i1 %1, label %9, label %2, !dbg !7544

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !1113, metadata !DIExpression()), !dbg !7545
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !7546
  %5 = load i32, i32* %4, align 4, !dbg !7546
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #21, !dbg !7551
  %6 = add nuw nsw i32 %3, 1, !dbg !7552
  call void @llvm.dbg.value(metadata i32 %6, metadata !1113, metadata !DIExpression()), !dbg !7545
  %7 = icmp eq i32 %6, 64, !dbg !7553
  br i1 %7, label %8, label %2, !dbg !7554, !llvm.loop !7555

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !7557
  br label %9, !dbg !7558

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !7559
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !7560 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7564, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.value(metadata i32 %1, metadata !7565, metadata !DIExpression()), !dbg !7566
  %3 = trunc i32 %1 to i8, !dbg !7567
  %4 = shl i8 %3, 2, !dbg !7567
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7570
  store volatile i8 %4, i8* %5, align 1, !dbg !7571
  ret void, !dbg !7572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7577, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.value(metadata i32 -1, metadata !7578, metadata !DIExpression()), !dbg !7579
  %2 = icmp ugt i32 %0, 63, !dbg !7580
  br i1 %2, label %4, label %3, !dbg !7580

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #21, !dbg !7582
  call void @llvm.dbg.value(metadata i32 0, metadata !7578, metadata !DIExpression()), !dbg !7579
  br label %4, !dbg !7584

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7579
  ret i32 %5, !dbg !7585
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7586 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7590, metadata !DIExpression()), !dbg !7591
  %2 = and i32 %0, 31, !dbg !7592
  %3 = shl nuw i32 1, %2, !dbg !7593
  %4 = lshr i32 %0, 5, !dbg !7594
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !7595
  store volatile i32 %3, i32* %5, align 4, !dbg !7596
  ret void, !dbg !7597
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7598 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7600, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.value(metadata i32 -1, metadata !7601, metadata !DIExpression()), !dbg !7602
  %2 = icmp ugt i32 %0, 63, !dbg !7603
  br i1 %2, label %4, label %3, !dbg !7603

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #21, !dbg !7605
  call void @llvm.dbg.value(metadata i32 0, metadata !7601, metadata !DIExpression()), !dbg !7602
  br label %4, !dbg !7607

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7602
  ret i32 %5, !dbg !7608
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7611, metadata !DIExpression()), !dbg !7612
  %2 = and i32 %0, 31, !dbg !7613
  %3 = shl nuw i32 1, %2, !dbg !7614
  %4 = lshr i32 %0, 5, !dbg !7615
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !7616
  store volatile i32 %3, i32* %5, align 4, !dbg !7617
  ret void, !dbg !7618
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #11 !dbg !7619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7623, metadata !DIExpression()), !dbg !7625
  call void @llvm.dbg.value(metadata i32 255, metadata !7624, metadata !DIExpression()), !dbg !7625
  %2 = icmp ugt i32 %0, 63, !dbg !7626
  br i1 %2, label %5, label %3, !dbg !7626

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #21, !dbg !7628
  call void @llvm.dbg.value(metadata i32 %4, metadata !7624, metadata !DIExpression()), !dbg !7625
  br label %5, !dbg !7630

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !7625
  ret i32 %6, !dbg !7631
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #11 !dbg !7632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7636, metadata !DIExpression()), !dbg !7637
  %2 = lshr i32 %0, 5, !dbg !7638
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !7639
  %4 = load volatile i32, i32* %3, align 4, !dbg !7639
  %5 = and i32 %0, 31, !dbg !7640
  %6 = lshr i32 %4, %5, !dbg !7641
  %7 = and i32 %6, 1, !dbg !7641
  ret i32 %7, !dbg !7642
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7643 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7645, metadata !DIExpression()), !dbg !7647
  call void @llvm.dbg.value(metadata i32 -1, metadata !7646, metadata !DIExpression()), !dbg !7647
  %2 = icmp ugt i32 %0, 63, !dbg !7648
  br i1 %2, label %4, label %3, !dbg !7648

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #21, !dbg !7650
  call void @llvm.dbg.value(metadata i32 0, metadata !7646, metadata !DIExpression()), !dbg !7647
  br label %4, !dbg !7652

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7647
  ret i32 %5, !dbg !7653
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7654 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7656, metadata !DIExpression()), !dbg !7657
  %2 = and i32 %0, 31, !dbg !7658
  %3 = shl nuw i32 1, %2, !dbg !7659
  %4 = lshr i32 %0, 5, !dbg !7660
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !7661
  store volatile i32 %3, i32* %5, align 4, !dbg !7662
  ret void, !dbg !7663
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7664 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7666, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata i32 -1, metadata !7667, metadata !DIExpression()), !dbg !7668
  %2 = icmp ugt i32 %0, 63, !dbg !7669
  br i1 %2, label %4, label %3, !dbg !7669

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !7671
  call void @llvm.dbg.value(metadata i32 0, metadata !7667, metadata !DIExpression()), !dbg !7668
  br label %4, !dbg !7673

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7668
  ret i32 %5, !dbg !7674
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7675 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7677, metadata !DIExpression()), !dbg !7678
  %2 = and i32 %0, 31, !dbg !7679
  %3 = shl nuw i32 1, %2, !dbg !7680
  %4 = lshr i32 %0, 5, !dbg !7681
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !7682
  store volatile i32 %3, i32* %5, align 4, !dbg !7683
  ret void, !dbg !7684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !7685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7689, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.value(metadata i32 %1, metadata !7690, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.value(metadata i32 -1, metadata !7691, metadata !DIExpression()), !dbg !7692
  %3 = icmp ugt i32 %0, 63, !dbg !7693
  br i1 %3, label %5, label %4, !dbg !7693

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #21, !dbg !7695
  call void @llvm.dbg.value(metadata i32 0, metadata !7691, metadata !DIExpression()), !dbg !7692
  br label %5, !dbg !7697

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !7692
  ret i32 %6, !dbg !7698
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #11 !dbg !7699 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7701, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.value(metadata i32 68, metadata !7702, metadata !DIExpression()), !dbg !7703
  %2 = icmp ugt i32 %0, 63, !dbg !7704
  br i1 %2, label %5, label %3, !dbg !7704

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #21, !dbg !7706
  call void @llvm.dbg.value(metadata i32 %4, metadata !7702, metadata !DIExpression()), !dbg !7703
  br label %5, !dbg !7708

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !7703
  ret i32 %6, !dbg !7709
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #11 !dbg !7710 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7712, metadata !DIExpression()), !dbg !7713
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7714
  %3 = load volatile i8, i8* %2, align 1, !dbg !7714
  %4 = lshr i8 %3, 2, !dbg !7717
  %5 = zext i8 %4 to i32, !dbg !7717
  ret i32 %5, !dbg !7718
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !7719 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !7721, metadata !DIExpression()), !dbg !7723
  tail call void @Flash_ReturnReady() #20, !dbg !7724
  %1 = tail call fastcc i32 @get_current_irq() #21, !dbg !7725
  call void @llvm.dbg.value(metadata i32 %1, metadata !7722, metadata !DIExpression()), !dbg !7723
  %2 = icmp ugt i32 %1, 63, !dbg !7726
  br i1 %2, label %12, label %3, !dbg !7726

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !7728
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !7728
  %6 = icmp eq void (i32)* %5, null, !dbg !7730
  br i1 %6, label %7, label %8, !dbg !7731

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !7721, metadata !DIExpression()), !dbg !7723
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.126, i32 0, i32 0)) #20, !dbg !7732
  br label %12, !dbg !7734

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #21, !dbg !7735
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !7737
  store i32 %9, i32* %10, align 4, !dbg !7738
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !7739
  tail call void %11(i32 noundef %1) #20, !dbg !7740
  call void @llvm.dbg.value(metadata i32 0, metadata !7721, metadata !DIExpression()), !dbg !7723
  br label %12, !dbg !7741

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !7723
  ret i32 %13, !dbg !7742
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #11 !dbg !7743 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7746
  %2 = and i32 %1, 511, !dbg !7747
  call void @llvm.dbg.value(metadata i32 %2, metadata !7745, metadata !DIExpression()), !dbg !7748
  %3 = add nsw i32 %2, -16, !dbg !7749
  ret i32 %3, !dbg !7750
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #11 !dbg !7751 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7752
  %2 = lshr i32 %1, 22, !dbg !7753
  %3 = and i32 %2, 1, !dbg !7753
  ret i32 %3, !dbg !7754
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !7755 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7760, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !7761, metadata !DIExpression()), !dbg !7763
  %3 = icmp ugt i32 %0, 63, !dbg !7764
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !7764
  br i1 %5, label %10, label %6, !dbg !7764

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7766
  call void @llvm.dbg.value(metadata i32 %7, metadata !7762, metadata !DIExpression()), !dbg !7763
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !7767
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !7768
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !7769
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !7770
  store i32 0, i32* %9, align 4, !dbg !7771
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !7772
  br label %10, !dbg !7773

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !7763
  ret i32 %11, !dbg !7774
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !7775 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !7779, metadata !DIExpression()), !dbg !7780
  %2 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7781
  store i32 %2, i32* %0, align 4, !dbg !7782
  ret i32 0, !dbg !7783
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !7784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7788, metadata !DIExpression()), !dbg !7789
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !7790
  ret i32 0, !dbg !7791
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !7792 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #22, !dbg !7796, !srcloc !7802
  call void @llvm.dbg.value(metadata i32 %1, metadata !7800, metadata !DIExpression()) #22, !dbg !7803
  call void @llvm.dbg.value(metadata i32 %1, metadata !7794, metadata !DIExpression()), !dbg !7804
  call void @llvm.dbg.value(metadata i32 1, metadata !7795, metadata !DIExpression()), !dbg !7804
  call void @llvm.dbg.value(metadata i32 4, metadata !7805, metadata !DIExpression()) #22, !dbg !7810
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #22, !dbg !7812, !srcloc !7813
  tail call void asm sideeffect "dmb", ""() #22, !dbg !7814, !srcloc !7817
  tail call void asm sideeffect "isb", ""() #22, !dbg !7818, !srcloc !7821
  ret i32 %1, !dbg !7822
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !7823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7825, metadata !DIExpression()), !dbg !7826
  call void @llvm.dbg.value(metadata i32 %0, metadata !7805, metadata !DIExpression()) #22, !dbg !7827
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #22, !dbg !7829, !srcloc !7813
  tail call void asm sideeffect "dmb", ""() #22, !dbg !7830, !srcloc !7817
  tail call void asm sideeffect "isb", ""() #22, !dbg !7832, !srcloc !7821
  ret void, !dbg !7834
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !7835 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !7839
  call void @llvm.dbg.value(metadata i32 %1, metadata !7838, metadata !DIExpression()), !dbg !7840
  call void @llvm.dbg.value(metadata i32 0, metadata !7837, metadata !DIExpression()), !dbg !7840
  br label %2, !dbg !7841

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7837, metadata !DIExpression()), !dbg !7840
  tail call fastcc void @NVIC_DisableIRQ.133(i32 noundef %3) #21, !dbg !7843
  %4 = add nuw nsw i32 %3, 1, !dbg !7846
  call void @llvm.dbg.value(metadata i32 %4, metadata !7837, metadata !DIExpression()), !dbg !7840
  %5 = icmp eq i32 %4, 64, !dbg !7847
  br i1 %5, label %6, label %2, !dbg !7841, !llvm.loop !7848

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !7850
  ret void, !dbg !7851
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.133(i32 noundef %0) unnamed_addr #2 !dbg !7852 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7854, metadata !DIExpression()), !dbg !7855
  %2 = and i32 %0, 31, !dbg !7856
  %3 = shl nuw i32 1, %2, !dbg !7857
  %4 = lshr i32 %0, 5, !dbg !7858
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !7859
  store volatile i32 %3, i32* %5, align 4, !dbg !7860
  ret void, !dbg !7861
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !7862 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !7866
  call void @llvm.dbg.value(metadata i32 %1, metadata !7865, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.value(metadata i32 0, metadata !7864, metadata !DIExpression()), !dbg !7867
  br label %2, !dbg !7868

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7864, metadata !DIExpression()), !dbg !7867
  tail call fastcc void @NVIC_EnableIRQ.134(i32 noundef %3) #21, !dbg !7870
  %4 = add nuw nsw i32 %3, 1, !dbg !7873
  call void @llvm.dbg.value(metadata i32 %4, metadata !7864, metadata !DIExpression()), !dbg !7867
  %5 = icmp eq i32 %4, 64, !dbg !7874
  br i1 %5, label %6, label %2, !dbg !7868, !llvm.loop !7875

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !7877
  ret void, !dbg !7878
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.134(i32 noundef %0) unnamed_addr #2 !dbg !7879 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7881, metadata !DIExpression()), !dbg !7882
  %2 = and i32 %0, 31, !dbg !7883
  %3 = shl nuw i32 1, %2, !dbg !7884
  %4 = lshr i32 %0, 5, !dbg !7885
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !7886
  store volatile i32 %3, i32* %5, align 4, !dbg !7887
  ret void, !dbg !7888
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #2 !dbg !7889 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7891, metadata !DIExpression()), !dbg !7892
  br label %1, !dbg !7893

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7891, metadata !DIExpression()), !dbg !7892
  tail call fastcc void @NVIC_ClearPendingIRQ.135(i32 noundef %2) #21, !dbg !7895
  %3 = add nuw nsw i32 %2, 1, !dbg !7898
  call void @llvm.dbg.value(metadata i32 %3, metadata !7891, metadata !DIExpression()), !dbg !7892
  %4 = icmp eq i32 %3, 64, !dbg !7899
  br i1 %4, label %5, label %1, !dbg !7893, !llvm.loop !7900

5:                                                ; preds = %1
  ret void, !dbg !7902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.135(i32 noundef %0) unnamed_addr #2 !dbg !7903 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7905, metadata !DIExpression()), !dbg !7906
  %2 = and i32 %0, 31, !dbg !7907
  %3 = shl nuw i32 1, %2, !dbg !7908
  %4 = lshr i32 %0, 5, !dbg !7909
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !7910
  store volatile i32 %3, i32* %5, align 4, !dbg !7911
  ret void, !dbg !7912
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !7913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7915, metadata !DIExpression()), !dbg !7916
  %2 = icmp ugt i32 %0, 63, !dbg !7917
  br i1 %2, label %4, label %3, !dbg !7917

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #21, !dbg !7919
  br label %4, !dbg !7920

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !7916
  ret i32 %5, !dbg !7921
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !7922 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7924, metadata !DIExpression()), !dbg !7925
  %2 = and i32 %0, 511, !dbg !7926
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !7927
  tail call void asm sideeffect "dsb", ""() #22, !dbg !7928, !srcloc !7931
  ret void, !dbg !7932
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #11 !dbg !7933 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7934
  %2 = and i32 %1, 511, !dbg !7935
  ret i32 %2, !dbg !7936
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !7937 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7941, metadata !DIExpression()), !dbg !8040
  call void @llvm.dbg.value(metadata i32 %1, metadata !7942, metadata !DIExpression()), !dbg !8040
  call void @llvm.dbg.value(metadata i8* %0, metadata !7943, metadata !DIExpression()), !dbg !8040
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #20, !dbg !8041
  call void @llvm.dbg.value(metadata i32 %3, metadata !8038, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !8040
  call void @llvm.dbg.value(metadata i32 0, metadata !8037, metadata !DIExpression()), !dbg !8040
  call void @llvm.dbg.value(metadata i32* undef, metadata !8039, metadata !DIExpression()), !dbg !8040
  call void @llvm.dbg.value(metadata i32 0, metadata !8037, metadata !DIExpression()), !dbg !8040
  %4 = icmp ult i32 %3, 4, !dbg !8042
  br i1 %4, label %20, label %5, !dbg !8045

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8046
  %7 = bitcast i8* %6 to i32**, !dbg !8046
  %8 = load i32*, i32** %7, align 4, !dbg !8046
  call void @llvm.dbg.value(metadata i32* %8, metadata !8039, metadata !DIExpression()), !dbg !8040
  %9 = lshr i32 %3, 2, !dbg !8047
  call void @llvm.dbg.value(metadata i32 %9, metadata !8038, metadata !DIExpression()), !dbg !8040
  br label %10, !dbg !8045

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !8039, metadata !DIExpression()), !dbg !8040
  call void @llvm.dbg.value(metadata i32 %12, metadata !8037, metadata !DIExpression()), !dbg !8040
  %13 = load i32, i32* %11, align 4, !dbg !8048
  %14 = icmp eq i32 %13, -1, !dbg !8051
  br i1 %14, label %16, label %15, !dbg !8052

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #20, !dbg !8053
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.136, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.137, i32 0, i32 0)) #23, !dbg !8053
  unreachable, !dbg !8053

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !8058
  call void @llvm.dbg.value(metadata i32 %17, metadata !8037, metadata !DIExpression()), !dbg !8040
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !8059
  call void @llvm.dbg.value(metadata i32* %18, metadata !8039, metadata !DIExpression()), !dbg !8040
  %19 = icmp eq i32 %17, %9, !dbg !8042
  br i1 %19, label %20, label %10, !dbg !8045, !llvm.loop !8060

20:                                               ; preds = %16, %2
  ret void, !dbg !8062
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #16 section ".ram_code" !dbg !8063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8065, metadata !DIExpression()), !dbg !8067
  call void @llvm.dbg.value(metadata i32 0, metadata !8066, metadata !DIExpression()), !dbg !8067
  call void @llvm.dbg.value(metadata i32 %0, metadata !8066, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !8067
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !8066, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8067
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !8066, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8067
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !8068
  call void @llvm.dbg.value(metadata i32 %2, metadata !8066, metadata !DIExpression()), !dbg !8067
  ret i32 %2, !dbg !8069
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !8070 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8074, metadata !DIExpression()), !dbg !8076
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8077
  %3 = or i32 %2, 512, !dbg !8077
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8077
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8080
  call void @llvm.dbg.value(metadata i32 %4, metadata !8075, metadata !DIExpression()), !dbg !8076
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !8081

5:                                                ; preds = %1
  br label %7, !dbg !8082

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !8086
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.136, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.137, i32 0, i32 0)) #23, !dbg !8086
  unreachable, !dbg !8086

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !8091
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !8075, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !8076
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !8075, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !8076
  br label %10, !dbg !8092

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8093
  %12 = and i32 %11, 8192, !dbg !8094
  %13 = icmp eq i32 %12, 0, !dbg !8095
  br i1 %13, label %10, label %14, !dbg !8092, !llvm.loop !8096

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8098
  %16 = and i32 %15, 256, !dbg !8099
  %17 = icmp eq i32 %16, 0, !dbg !8100
  br i1 %17, label %14, label %18, !dbg !8101, !llvm.loop !8102

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !8091
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !8075, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !8076
  %20 = and i32 %19, 16, !dbg !8091
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !8075, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !8076
  call void @llvm.dbg.value(metadata i32 undef, metadata !8075, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !8076
  %21 = or i32 %4, %20, !dbg !8104
  %22 = or i32 %21, 8, !dbg !8104
  call void @llvm.dbg.value(metadata i32 %22, metadata !8075, metadata !DIExpression()), !dbg !8076
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8105
  ret void, !dbg !8106
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !8107 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !8109, metadata !DIExpression()), !dbg !8111
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8112
  call void @llvm.dbg.value(metadata i32 %2, metadata !8110, metadata !DIExpression()), !dbg !8111
  %3 = and i32 %2, -268435477, !dbg !8113
  call void @llvm.dbg.value(metadata i32 %3, metadata !8110, metadata !DIExpression()), !dbg !8111
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8114
  br label %4, !dbg !8115

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8116
  %6 = and i32 %5, 2, !dbg !8117
  %7 = icmp eq i32 %6, 0, !dbg !8115
  br i1 %7, label %8, label %4, !dbg !8115, !llvm.loop !8118

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8120
  call void @llvm.dbg.value(metadata i32 %9, metadata !8110, metadata !DIExpression()), !dbg !8111
  %10 = and i32 %9, -9, !dbg !8121
  call void @llvm.dbg.value(metadata i32 %10, metadata !8110, metadata !DIExpression()), !dbg !8111
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8122
  br label %11, !dbg !8123

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8124
  %13 = and i32 %12, 8, !dbg !8125
  %14 = icmp eq i32 %13, 0, !dbg !8123
  br i1 %14, label %15, label %11, !dbg !8123, !llvm.loop !8126

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8128, !range !2756
  %17 = icmp eq i8 %16, 0, !dbg !8130
  br i1 %17, label %18, label %21, !dbg !8131

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8132
  %20 = and i32 %19, -513, !dbg !8132
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8132
  br label %21, !dbg !8136

21:                                               ; preds = %18, %15
  ret void, !dbg !8137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !8138 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8142, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 0, metadata !8143, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 0, metadata !8144, metadata !DIExpression()), !dbg !8145
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8146
  call void @llvm.dbg.value(metadata i32 %2, metadata !8143, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %2, metadata !8143, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !8145
  %3 = icmp eq i16 %0, 1, !dbg !8147
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !8149
  %5 = or i32 %2, %4, !dbg !8149
  call void @llvm.dbg.value(metadata i32 %5, metadata !8143, metadata !DIExpression()), !dbg !8145
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8150
  br label %6, !dbg !8151

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8152
  %8 = and i32 %7, 2, !dbg !8153
  %9 = icmp eq i32 %8, 0, !dbg !8154
  br i1 %9, label %6, label %10, !dbg !8151, !llvm.loop !8155

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8157
  %12 = and i32 %11, 1, !dbg !8158
  %13 = icmp eq i32 %12, 0, !dbg !8159
  br i1 %13, label %14, label %10, !dbg !8159, !llvm.loop !8160

14:                                               ; preds = %10
  ret i32 0, !dbg !8162
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !8163 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8165, metadata !DIExpression()), !dbg !8166
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #21, !dbg !8167
  tail call void @SFI_MacLeave(i16 zeroext undef) #21, !dbg !8168
  ret void, !dbg !8169
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !8170 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8174, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i32 %1, metadata !8175, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i32 %1, metadata !8176, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i8 0, metadata !8178, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i32 0, metadata !8177, metadata !DIExpression()), !dbg !8179
  %3 = icmp eq i32 %1, 0, !dbg !8180
  br i1 %3, label %16, label %4, !dbg !8183

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !8178, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i32 %6, metadata !8177, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i32 %7, metadata !8176, metadata !DIExpression()), !dbg !8179
  %8 = shl i32 %6, 8, !dbg !8184
  %9 = and i32 %7, 255, !dbg !8186
  %10 = or i32 %8, %9, !dbg !8187
  call void @llvm.dbg.value(metadata i32 %10, metadata !8177, metadata !DIExpression()), !dbg !8179
  %11 = lshr i32 %7, 8, !dbg !8188
  call void @llvm.dbg.value(metadata i32 %11, metadata !8176, metadata !DIExpression()), !dbg !8179
  %12 = add nuw nsw i8 %5, 1, !dbg !8189
  call void @llvm.dbg.value(metadata i8 %12, metadata !8178, metadata !DIExpression()), !dbg !8179
  %13 = icmp ult i32 %7, 256, !dbg !8180
  br i1 %13, label %14, label %4, !dbg !8183, !llvm.loop !8190

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !8192
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !8194
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8195
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8196
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8197
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !8198
  br label %16, !dbg !8199

16:                                               ; preds = %2, %14
  ret void, !dbg !8200
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !8201 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8205, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i8 %1, metadata !8206, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i32 %2, metadata !8207, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i32 %3, metadata !8208, metadata !DIExpression()), !dbg !8211
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #21, !dbg !8212
  call void @llvm.dbg.value(metadata i32 %5, metadata !8210, metadata !DIExpression()), !dbg !8211
  %6 = icmp eq i32 %3, 3, !dbg !8213
  br i1 %6, label %7, label %11, !dbg !8215

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !8216
  %9 = zext i8 %1 to i32, !dbg !8218
  %10 = or i32 %8, %9, !dbg !8219
  call void @llvm.dbg.value(metadata i32 %10, metadata !8209, metadata !DIExpression()), !dbg !8211
  br label %16, !dbg !8220

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !8221
  %13 = zext i8 %1 to i32, !dbg !8223
  %14 = or i32 %12, %13, !dbg !8224
  call void @llvm.dbg.value(metadata i32 %14, metadata !8209, metadata !DIExpression()), !dbg !8211
  %15 = lshr i32 %5, 24, !dbg !8225
  call void @llvm.dbg.value(metadata i32 %15, metadata !8210, metadata !DIExpression()), !dbg !8211
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !8226
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !8211
  call void @llvm.dbg.value(metadata i32 %18, metadata !8210, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i32 %17, metadata !8209, metadata !DIExpression()), !dbg !8211
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8227
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !8228
  %19 = add i32 %3, 1, !dbg !8229
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8230
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8231
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !8232
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !8233
  ret void, !dbg !8234
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 section ".ram_code" !dbg !8235 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8239, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 %1, metadata !8240, metadata !DIExpression()), !dbg !8241
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !8242
  %4 = and i32 %3, -256, !dbg !8243
  %5 = and i32 %0, 255, !dbg !8244
  %6 = or i32 %4, %5, !dbg !8245
  ret i32 %6, !dbg !8246
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #9 section ".ram_code" !dbg !8247 {
  %5 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8252, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32 %1, metadata !8253, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i8** %2, metadata !8254, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata i32* %3, metadata !8255, metadata !DIExpression()), !dbg !8267
  %6 = bitcast %struct.anon* %5 to i8*, !dbg !8268
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !8268
  call void @llvm.dbg.declare(metadata %struct.anon* %5, metadata !8256, metadata !DIExpression()), !dbg !8269
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !8270
  call void @llvm.dbg.value(metadata i32 %7, metadata !8265, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !8264, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8267
  %8 = lshr i32 %7, 24, !dbg !8271
  call void @llvm.dbg.value(metadata i32 %8, metadata !8265, metadata !DIExpression()), !dbg !8267
  %9 = trunc i32 %8 to i8, !dbg !8272
  %10 = bitcast %struct.anon* %5 to [4 x i8]*, !dbg !8273
  store i8 %9, i8* %6, align 4, !dbg !8274
  call void @llvm.dbg.value(metadata i32 1, metadata !8266, metadata !DIExpression()), !dbg !8267
  %11 = load i8*, i8** %2, align 4, !dbg !8275
  br label %12, !dbg !8279

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !8275
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8266, metadata !DIExpression()), !dbg !8267
  %15 = load i8, i8* %13, align 1, !dbg !8280
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !8281
  store i8 %15, i8* %16, align 1, !dbg !8282
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8283
  store i8* %17, i8** %2, align 4, !dbg !8283
  %18 = add nuw nsw i32 %14, 1, !dbg !8284
  call void @llvm.dbg.value(metadata i32 %18, metadata !8266, metadata !DIExpression()), !dbg !8267
  %19 = icmp eq i32 %18, 4, !dbg !8285
  br i1 %19, label %20, label %12, !dbg !8279, !llvm.loop !8286

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %5, i32 0, i32 0, !dbg !8288
  %22 = load i32, i32* %21, align 4, !dbg !8288
  call void @llvm.dbg.value(metadata i32 %22, metadata !8265, metadata !DIExpression()), !dbg !8267
  %23 = load i32, i32* %3, align 4, !dbg !8289
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !8290
  %25 = shl i32 %7, 8, !dbg !8291
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !8264, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8267
  %26 = and i32 %0, 255, !dbg !8292
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !8264, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !8267
  %27 = or i32 %25, %26, !dbg !8293
  call void @llvm.dbg.value(metadata i32 %27, metadata !8264, metadata !DIExpression()), !dbg !8267
  store i32 %24, i32* %3, align 4, !dbg !8294
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !8295
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !8296
  ret i32 %27, !dbg !8297
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #9 section ".ram_code" !dbg !8298 {
  %4 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8302, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i8* %1, metadata !8303, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32 %2, metadata !8304, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i8* %1, metadata !8306, metadata !DIExpression()), !dbg !8308
  %5 = bitcast %struct.anon* %4 to i8*, !dbg !8309
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !8309
  call void @llvm.dbg.declare(metadata %struct.anon* %4, metadata !8307, metadata !DIExpression()), !dbg !8310
  %6 = add i32 %0, -1610348544, !dbg !8311
  call void @llvm.dbg.value(metadata i32 %6, metadata !8302, metadata !DIExpression()), !dbg !8308
  %7 = ptrtoint i8* %1 to i32, !dbg !8312
  %8 = and i32 %7, 3, !dbg !8314
  %9 = icmp eq i32 %8, 0, !dbg !8315
  br i1 %9, label %10, label %23, !dbg !8316

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8306, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32 %2, metadata !8304, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32 %6, metadata !8302, metadata !DIExpression()), !dbg !8308
  %11 = icmp sgt i32 %2, 0, !dbg !8317
  br i1 %11, label %12, label %72, !dbg !8321

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8306, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32 %14, metadata !8304, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32 %15, metadata !8302, metadata !DIExpression()), !dbg !8308
  %16 = bitcast i8* %13 to i32*, !dbg !8322
  %17 = load i32, i32* %16, align 4, !dbg !8322
  %18 = inttoptr i32 %15 to i32*, !dbg !8322
  store volatile i32 %17, i32* %18, align 4, !dbg !8322
  %19 = add i32 %15, 4, !dbg !8324
  call void @llvm.dbg.value(metadata i32 %19, metadata !8302, metadata !DIExpression()), !dbg !8308
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !8325
  call void @llvm.dbg.value(metadata i8* %20, metadata !8306, metadata !DIExpression()), !dbg !8308
  %21 = add nsw i32 %14, -4, !dbg !8326
  call void @llvm.dbg.value(metadata i32 %21, metadata !8304, metadata !DIExpression()), !dbg !8308
  %22 = icmp ugt i32 %14, 4, !dbg !8317
  br i1 %22, label %12, label %72, !dbg !8321, !llvm.loop !8327

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !8329
  %25 = icmp eq i32 %24, 0, !dbg !8331
  call void @llvm.dbg.value(metadata i8* %1, metadata !8306, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i8* %1, metadata !8306, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32 %2, metadata !8304, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32 %2, metadata !8304, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32 %6, metadata !8302, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32 %6, metadata !8302, metadata !DIExpression()), !dbg !8308
  %26 = icmp sgt i32 %2, 0, !dbg !8332
  br i1 %25, label %31, label %27, !dbg !8333

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !8334

28:                                               ; preds = %27
  %29 = bitcast %struct.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %52, !dbg !8334

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !8337

32:                                               ; preds = %31
  %33 = bitcast %struct.anon* %4 to [2 x i16]*
  %34 = bitcast %struct.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %37, !dbg !8337

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !8306, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32 %39, metadata !8304, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32 %40, metadata !8302, metadata !DIExpression()), !dbg !8308
  %41 = bitcast i8* %38 to i16*, !dbg !8340
  %42 = load i16, i16* %41, align 2, !dbg !8340
  store i16 %42, i16* %34, align 4, !dbg !8343
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !8344
  %44 = bitcast i8* %43 to i16*, !dbg !8344
  %45 = load i16, i16* %44, align 2, !dbg !8345
  store i16 %45, i16* %35, align 2, !dbg !8346
  %46 = load i32, i32* %36, align 4, !dbg !8347
  %47 = inttoptr i32 %40 to i32*, !dbg !8347
  store volatile i32 %46, i32* %47, align 4, !dbg !8347
  %48 = add i32 %40, 4, !dbg !8348
  call void @llvm.dbg.value(metadata i32 %48, metadata !8302, metadata !DIExpression()), !dbg !8308
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !8349
  call void @llvm.dbg.value(metadata i8* %49, metadata !8306, metadata !DIExpression()), !dbg !8308
  %50 = add nsw i32 %39, -4, !dbg !8350
  call void @llvm.dbg.value(metadata i32 %50, metadata !8304, metadata !DIExpression()), !dbg !8308
  %51 = icmp ugt i32 %39, 4, !dbg !8351
  br i1 %51, label %37, label %72, !dbg !8337, !llvm.loop !8352

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !8306, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32 %54, metadata !8304, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32 %55, metadata !8302, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i8* %53, metadata !8306, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32 0, metadata !8305, metadata !DIExpression()), !dbg !8308
  br label %56, !dbg !8354

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !8306, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32 %58, metadata !8305, metadata !DIExpression()), !dbg !8308
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !8358
  call void @llvm.dbg.value(metadata i8* %59, metadata !8306, metadata !DIExpression()), !dbg !8308
  %60 = load i8, i8* %57, align 1, !dbg !8361
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !8362
  store i8 %60, i8* %61, align 1, !dbg !8363
  %62 = add nuw nsw i32 %58, 1, !dbg !8364
  call void @llvm.dbg.value(metadata i32 %62, metadata !8305, metadata !DIExpression()), !dbg !8308
  %63 = icmp ult i32 %58, 3, !dbg !8365
  %64 = icmp ult i32 %62, %54, !dbg !8366
  %65 = select i1 %63, i1 %64, i1 false, !dbg !8366
  br i1 %65, label %56, label %66, !dbg !8354, !llvm.loop !8367

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !8369
  %68 = inttoptr i32 %55 to i32*, !dbg !8369
  store volatile i32 %67, i32* %68, align 4, !dbg !8369
  %69 = add i32 %55, 4, !dbg !8370
  call void @llvm.dbg.value(metadata i32 %69, metadata !8302, metadata !DIExpression()), !dbg !8308
  %70 = add nsw i32 %54, -4, !dbg !8371
  call void @llvm.dbg.value(metadata i8* %59, metadata !8306, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32 %70, metadata !8304, metadata !DIExpression()), !dbg !8308
  %71 = icmp sgt i32 %54, 4, !dbg !8372
  br i1 %71, label %52, label %72, !dbg !8334, !llvm.loop !8373

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !8375
  ret void, !dbg !8375
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !8376 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !8380, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata i8* %1, metadata !8381, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata i8* %2, metadata !8382, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata i16 %3, metadata !8383, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata i16 %4, metadata !8384, metadata !DIExpression()), !dbg !8390
  %7 = bitcast i32* %6 to i8*, !dbg !8391
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8391
  call void @llvm.dbg.value(metadata i8* %7, metadata !8389, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata i32 0, metadata !8386, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !8388, metadata !DIExpression()), !dbg !8390
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !8388, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata i32 0, metadata !8386, metadata !DIExpression()), !dbg !8390
  %9 = icmp eq i16 %3, 0, !dbg !8392
  br i1 %9, label %33, label %10, !dbg !8395

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !8388, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata i32 %12, metadata !8386, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata i32 0, metadata !8387, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata i32 0, metadata !8385, metadata !DIExpression()), !dbg !8390
  store i32 0, i32* %6, align 4, !dbg !8396
  call void @llvm.dbg.value(metadata i32 0, metadata !8387, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata i32 %12, metadata !8386, metadata !DIExpression()), !dbg !8390
  %13 = icmp ult i32 %12, %8, !dbg !8399
  br i1 %13, label %14, label %27, !dbg !8401

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !8387, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata i32 %16, metadata !8386, metadata !DIExpression()), !dbg !8390
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !8402
  %18 = load i8, i8* %17, align 1, !dbg !8402
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !8404
  store i8 %18, i8* %19, align 1, !dbg !8405
  %20 = add nuw nsw i32 %16, 1, !dbg !8406
  call void @llvm.dbg.value(metadata i32 %20, metadata !8386, metadata !DIExpression()), !dbg !8390
  %21 = add nuw nsw i32 %15, 1, !dbg !8407
  call void @llvm.dbg.value(metadata i32 %21, metadata !8387, metadata !DIExpression()), !dbg !8390
  %22 = icmp ult i32 %20, %8, !dbg !8399
  %23 = icmp ult i32 %15, 3, !dbg !8408
  %24 = select i1 %22, i1 %23, i1 false, !dbg !8408
  br i1 %24, label %14, label %25, !dbg !8401, !llvm.loop !8409

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !8411
  br label %27, !dbg !8411

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !8411
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !8412
  call void @llvm.dbg.value(metadata i32 %28, metadata !8385, metadata !DIExpression()), !dbg !8390
  %30 = bitcast i8* %11 to i32*, !dbg !8411
  store volatile i32 %28, i32* %30, align 4, !dbg !8411
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !8413
  call void @llvm.dbg.value(metadata i8* %31, metadata !8388, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata i32 %29, metadata !8386, metadata !DIExpression()), !dbg !8390
  %32 = icmp ult i32 %29, %8, !dbg !8392
  br i1 %32, label %10, label %33, !dbg !8395, !llvm.loop !8414

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8416
  %34 = zext i16 %4 to i32, !dbg !8417
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8418
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !8419
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !8420
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !8388, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !8390
  call void @llvm.dbg.value(metadata i8* %2, metadata !8382, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata i32 0, metadata !8386, metadata !DIExpression()), !dbg !8390
  %35 = icmp eq i16 %4, 0, !dbg !8421
  br i1 %35, label %47, label %36, !dbg !8424

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !8425
  call void @llvm.dbg.value(metadata i8* %37, metadata !8388, metadata !DIExpression()), !dbg !8390
  br label %38, !dbg !8424

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !8382, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata i8* %40, metadata !8388, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata i32 %41, metadata !8386, metadata !DIExpression()), !dbg !8390
  %42 = load volatile i8, i8* %40, align 1, !dbg !8426
  store i8 %42, i8* %39, align 1, !dbg !8428
  %43 = add nuw nsw i32 %41, 1, !dbg !8429
  call void @llvm.dbg.value(metadata i32 %43, metadata !8386, metadata !DIExpression()), !dbg !8390
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !8430
  call void @llvm.dbg.value(metadata i8* %44, metadata !8382, metadata !DIExpression()), !dbg !8390
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !8431
  call void @llvm.dbg.value(metadata i8* %45, metadata !8388, metadata !DIExpression()), !dbg !8390
  %46 = icmp eq i32 %43, %34, !dbg !8421
  br i1 %46, label %47, label %38, !dbg !8424, !llvm.loop !8432

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8434
  ret void, !dbg !8434
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !8435 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8439, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.value(metadata i8* %1, metadata !8440, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.value(metadata i32 0, metadata !8441, metadata !DIExpression()), !dbg !8447
  %4 = icmp eq i8* %1, null, !dbg !8448
  br i1 %4, label %67, label %5, !dbg !8450

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8451
  call void @llvm.dbg.value(metadata i32 %27, metadata !8442, metadata !DIExpression()), !dbg !8447
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !8452

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !8447
  call void @llvm.dbg.value(metadata i32 %9, metadata !8441, metadata !DIExpression()), !dbg !8447
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !8453
  %11 = load i8, i8* %10, align 1, !dbg !8453
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !8454

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !8455

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8458
  %15 = and i32 %14, -2, !dbg !8458
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8458
  br label %41, !dbg !8462

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8463
  %18 = and i32 %17, -2, !dbg !8463
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8463
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !8466

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8468
  %22 = or i32 %21, 1, !dbg !8468
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8468
  br label %41, !dbg !8472

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8473
  %25 = or i32 %24, 1, !dbg !8473
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8473
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !8451
  %28 = icmp eq i32 %27, 0, !dbg !8476
  br i1 %7, label %29, label %35, !dbg !8479

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8480
  br i1 %28, label %33, label %31, !dbg !8483

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !8480
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8480
  br label %67, !dbg !8480

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !8480
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8480
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8484
  br i1 %28, label %39, label %37, !dbg !8487

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !8484
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8484
  br label %67, !dbg !8484

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !8484
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8484
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !8488
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !8489
  %44 = load i8, i8* %43, align 1, !dbg !8489
  %45 = icmp eq i8 %44, 5, !dbg !8490
  br i1 %45, label %46, label %56, !dbg !8491

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !8492
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !8493

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !8443, metadata !DIExpression(DW_OP_deref)), !dbg !8494
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !8495
  %50 = load i8, i8* %3, align 1, !dbg !8497
  call void @llvm.dbg.value(metadata i8 %50, metadata !8443, metadata !DIExpression()), !dbg !8494
  %51 = load i8, i8* %48, align 1, !dbg !8498
  %52 = and i8 %51, %50, !dbg !8499
  %53 = icmp eq i8 %52, 0, !dbg !8500
  br i1 %53, label %54, label %49, !dbg !8500, !llvm.loop !8501

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !8503
  %55 = add i32 %9, 1, !dbg !8504
  br label %61, !dbg !8505

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !8506
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !8508
  %59 = load i8, i8* %58, align 1, !dbg !8508
  %60 = zext i8 %59 to i16, !dbg !8508
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #21, !dbg !8509
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !8504
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !8510
  %64 = load i8, i8* %63, align 1, !dbg !8510
  %65 = zext i8 %64 to i32, !dbg !8510
  %66 = add i32 %42, %65, !dbg !8511
  call void @llvm.dbg.value(metadata i32 %66, metadata !8441, metadata !DIExpression()), !dbg !8447
  br label %8, !dbg !8452, !llvm.loop !8512

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !8514
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !8515 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8519, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata i8* %1, metadata !8520, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata i8 %2, metadata !8521, metadata !DIExpression()), !dbg !8522
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !8521, metadata !DIExpression(DW_OP_deref)), !dbg !8522
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8523
  ret void, !dbg !8524
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !8525 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8529, metadata !DIExpression()), !dbg !8531
  call void @llvm.dbg.value(metadata i8* %1, metadata !8530, metadata !DIExpression()), !dbg !8531
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #21, !dbg !8532
  ret void, !dbg !8533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #10 section ".ram_code" !dbg !8534 {
  ret i32 78, !dbg !8538
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #11 section ".ram_code" !dbg !8539 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8543
  %2 = and i32 %1, 7340032, !dbg !8545
  %3 = icmp ult i32 %2, 2097153, !dbg !8546
  %4 = select i1 %3, i32 30, i32 18, !dbg !8547
  ret i32 %4, !dbg !8548
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #17 section ".ram_code" !dbg !8549 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8553, metadata !DIExpression()), !dbg !8555
  call void @llvm.dbg.value(metadata i32 0, metadata !8554, metadata !DIExpression()), !dbg !8555
  call void @llvm.dbg.value(metadata i32 0, metadata !8554, metadata !DIExpression()), !dbg !8555
  br label %2, !dbg !8556

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !8554, metadata !DIExpression()), !dbg !8555
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8558
  store i8 -1, i8* %4, align 1, !dbg !8561
  %5 = add nuw nsw i32 %3, 1, !dbg !8562
  call void @llvm.dbg.value(metadata i32 %5, metadata !8554, metadata !DIExpression()), !dbg !8555
  %6 = icmp eq i32 %5, 8, !dbg !8563
  br i1 %6, label %7, label %2, !dbg !8556, !llvm.loop !8564

7:                                                ; preds = %2
  ret i1 true, !dbg !8566
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !8567 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !8569, metadata !DIExpression()), !dbg !8570
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !8571
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !8572
  %3 = load i8, i8* %2, align 1, !dbg !8572
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !8573
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !8574
  %5 = ptrtoint i8* %4 to i32, !dbg !8575
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !8576
  %6 = bitcast i8* %4 to i32*, !dbg !8577
  %7 = load volatile i32, i32* %6, align 4, !dbg !8578
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !8579
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8580
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !8581
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8582
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !8583
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8584
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !8585
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !8586
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !8587
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8588
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !8589
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8590
  %14 = or i32 %13, 986880, !dbg !8591
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8592
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8593
  %16 = or i32 %15, 252645135, !dbg !8594
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8595
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !8596
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !8597
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !8598
  %20 = load i8, i8* %19, align 1, !dbg !8598
  %21 = zext i8 %20 to i32, !dbg !8599
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #21, !dbg !8600
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !8601
  ret void, !dbg !8602
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !8603 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !8604
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8605
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !8606
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8607
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !8608
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8609
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !8610
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !8611
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !8612
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8613
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8614
  %7 = and i32 %6, -252645136, !dbg !8615
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8616
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !8617
  %9 = zext i8 %8 to i32, !dbg !8617
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #21, !dbg !8618
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !8619
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !8620
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !8622
  %13 = inttoptr i32 %12 to i32*, !dbg !8623
  %14 = load volatile i32, i32* %13, align 4, !dbg !8624
  %15 = icmp eq i32 %11, %14, !dbg !8625
  br i1 %15, label %17, label %16, !dbg !8626

16:                                               ; preds = %0, %16
  br label %16, !dbg !8627, !llvm.loop !8628

17:                                               ; preds = %0
  ret void, !dbg !8630
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !8631 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !8632
  %2 = icmp eq i32 %1, 0, !dbg !8634
  br i1 %2, label %3, label %5, !dbg !8635

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8636
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !8638
  br label %5, !dbg !8639

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !8640
  %7 = icmp eq i32 %6, 0, !dbg !8642
  br i1 %7, label %8, label %10, !dbg !8643

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8644
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !8646
  br label %10, !dbg !8647

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8648
  %12 = and i32 %11, -256, !dbg !8649
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8650
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8651
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #20, !dbg !8652
  ret void, !dbg !8653
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !8654 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !8655
  %2 = icmp eq i32 %1, 0, !dbg !8657
  br i1 %2, label %4, label %3, !dbg !8658

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8659
  br label %4, !dbg !8661

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !8662
  %6 = icmp eq i32 %5, 0, !dbg !8664
  br i1 %6, label %8, label %7, !dbg !8665

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8666
  br label %8, !dbg !8668

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #20, !dbg !8669
  ret void, !dbg !8670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #10 section ".tcm_code" !dbg !8671 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8673, metadata !DIExpression()), !dbg !8674
  ret i32 0, !dbg !8675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #10 section ".ram_code" !dbg !8676 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8678, metadata !DIExpression()), !dbg !8679
  ret i32 0, !dbg !8680
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !8681 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8683, metadata !DIExpression()), !dbg !8684
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !8685
  ret void, !dbg !8686
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !8687 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !8690
  call void @llvm.dbg.value(metadata i32 %1, metadata !8689, metadata !DIExpression()), !dbg !8691
  ret i32 %1, !dbg !8692
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !8693 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8695, metadata !DIExpression()), !dbg !8696
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !8697
  ret void, !dbg !8698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #10 section ".ram_code" !dbg !8699 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8701, metadata !DIExpression()), !dbg !8702
  ret i32 0, !dbg !8703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #10 section ".ram_code" !dbg !8704 {
  ret i32 0, !dbg !8707
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 section ".ram_code" !dbg !8708 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8712, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i8* %1, metadata !8713, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i32 %2, metadata !8714, metadata !DIExpression()), !dbg !8727
  %4 = ptrtoint i8* %0 to i32, !dbg !8728
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !8729
  %7 = and i32 %6, 3, !dbg !8729
  %8 = icmp eq i32 %7, 0, !dbg !8729
  br i1 %8, label %9, label %26, !dbg !8729

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !8730
  call void @llvm.dbg.value(metadata i32* %10, metadata !8716, metadata !DIExpression()), !dbg !8731
  %11 = bitcast i8* %1 to i32*, !dbg !8732
  call void @llvm.dbg.value(metadata i32* %11, metadata !8719, metadata !DIExpression()), !dbg !8731
  call void @llvm.dbg.value(metadata i32 0, metadata !8715, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i32 0, metadata !8715, metadata !DIExpression()), !dbg !8727
  %12 = icmp ult i32 %2, 4, !dbg !8733
  br i1 %12, label %65, label %13, !dbg !8736

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !8736

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8715, metadata !DIExpression()), !dbg !8727
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !8737
  %18 = load i32, i32* %17, align 4, !dbg !8737
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !8740
  %20 = load i32, i32* %19, align 4, !dbg !8740
  %21 = icmp eq i32 %18, %20, !dbg !8741
  %22 = add nuw nsw i32 %16, 1, !dbg !8742
  call void @llvm.dbg.value(metadata i32 %22, metadata !8715, metadata !DIExpression()), !dbg !8727
  %23 = xor i1 %21, true, !dbg !8743
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !8743
  call void @llvm.dbg.value(metadata i32 %22, metadata !8715, metadata !DIExpression()), !dbg !8727
  br i1 %25, label %59, label %15, !dbg !8743, !llvm.loop !8744

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !8746
  %28 = icmp eq i32 %27, 0, !dbg !8746
  br i1 %28, label %31, label %29, !dbg !8746

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !8715, metadata !DIExpression()), !dbg !8727
  %30 = icmp eq i32 %2, 0, !dbg !8747
  br i1 %30, label %65, label %48, !dbg !8750

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !8751
  call void @llvm.dbg.value(metadata i16* %32, metadata !8720, metadata !DIExpression()), !dbg !8752
  %33 = bitcast i8* %1 to i16*, !dbg !8753
  call void @llvm.dbg.value(metadata i16* %33, metadata !8723, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i32 0, metadata !8715, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i32 0, metadata !8715, metadata !DIExpression()), !dbg !8727
  %34 = icmp ult i32 %2, 2, !dbg !8754
  br i1 %34, label %65, label %35, !dbg !8757

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !8757

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !8715, metadata !DIExpression()), !dbg !8727
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !8758
  %40 = load i16, i16* %39, align 2, !dbg !8758
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !8761
  %42 = load i16, i16* %41, align 2, !dbg !8761
  %43 = icmp eq i16 %40, %42, !dbg !8762
  %44 = add nuw nsw i32 %38, 1, !dbg !8763
  call void @llvm.dbg.value(metadata i32 %44, metadata !8715, metadata !DIExpression()), !dbg !8727
  %45 = xor i1 %43, true, !dbg !8764
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !8764
  call void @llvm.dbg.value(metadata i32 %44, metadata !8715, metadata !DIExpression()), !dbg !8727
  br i1 %47, label %61, label %37, !dbg !8764, !llvm.loop !8765

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !8715, metadata !DIExpression()), !dbg !8727
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !8767
  %51 = load i8, i8* %50, align 1, !dbg !8767
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !8770
  %53 = load i8, i8* %52, align 1, !dbg !8770
  %54 = icmp eq i8 %51, %53, !dbg !8771
  %55 = add nuw i32 %49, 1, !dbg !8772
  call void @llvm.dbg.value(metadata i32 %55, metadata !8715, metadata !DIExpression()), !dbg !8727
  %56 = xor i1 %54, true, !dbg !8773
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !8773
  call void @llvm.dbg.value(metadata i32 %55, metadata !8715, metadata !DIExpression()), !dbg !8727
  br i1 %58, label %63, label %48, !dbg !8773, !llvm.loop !8774

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !8776
  br label %65, !dbg !8776

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !8776
  br label %65, !dbg !8776

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !8776
  br label %65, !dbg !8776

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !8727
  ret i1 %66, !dbg !8776
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !8777 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8781, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i8* %1, metadata !8782, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i32 %2, metadata !8783, metadata !DIExpression()), !dbg !8792
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8793
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !8784, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i8* %0, metadata !8785, metadata !DIExpression()), !dbg !8792
  %7 = bitcast i8** %4 to i8*, !dbg !8794
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8794
  call void @llvm.dbg.value(metadata i8* %1, metadata !8786, metadata !DIExpression()), !dbg !8792
  store i8* %1, i8** %4, align 4, !dbg !8795
  call void @llvm.dbg.value(metadata i32 0, metadata !8787, metadata !DIExpression()), !dbg !8792
  %8 = bitcast i32* %5 to i8*, !dbg !8796
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22, !dbg !8796
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8797
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !8798
  store i8 1, i8* %9, align 4, !dbg !8799
  call void @llvm.dbg.value(metadata i32 %2, metadata !8783, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i8* %0, metadata !8785, metadata !DIExpression()), !dbg !8792
  %10 = icmp eq i32 %2, 0, !dbg !8800
  br i1 %10, label %73, label %11, !dbg !8801

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !8802
  call void @llvm.dbg.value(metadata i32 %12, metadata !8785, metadata !DIExpression()), !dbg !8792
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !8801

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !8783, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i32 %20, metadata !8785, metadata !DIExpression()), !dbg !8792
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8803
  %22 = shl i32 %21, 1, !dbg !8805
  %23 = add i32 %22, -1, !dbg !8806
  %24 = and i32 %23, %20, !dbg !8807
  %25 = sub i32 %22, %24, !dbg !8808
  %26 = icmp ugt i32 %19, %25, !dbg !8809
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !8810
  call void @llvm.dbg.value(metadata i32 %27, metadata !8789, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i32 %27, metadata !8788, metadata !DIExpression()), !dbg !8792
  store i32 %27, i32* %5, align 4, !dbg !8811
  %28 = load i32, i32* %13, align 4, !dbg !8812
  %29 = and i32 %28, 16, !dbg !8814
  %30 = icmp eq i32 %29, 0, !dbg !8814
  br i1 %30, label %31, label %32, !dbg !8815

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #21, !dbg !8816
  br label %32, !dbg !8818

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !8819
  %34 = icmp eq i8 %33, 4, !dbg !8821
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8822
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !8822
  %37 = load i8, i8* %36, align 1, !dbg !8822
  %38 = zext i8 %37 to i32, !dbg !8822
  br i1 %34, label %39, label %43, !dbg !8823

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !8786, metadata !DIExpression(DW_OP_deref)), !dbg !8792
  call void @llvm.dbg.value(metadata i32* %5, metadata !8788, metadata !DIExpression(DW_OP_deref)), !dbg !8792
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #20, !dbg !8824
  call void @llvm.dbg.value(metadata i32 %40, metadata !8787, metadata !DIExpression()), !dbg !8792
  %41 = load i8*, i8** %4, align 4, !dbg !8826
  call void @llvm.dbg.value(metadata i8* %41, metadata !8786, metadata !DIExpression()), !dbg !8792
  %42 = load i32, i32* %5, align 4, !dbg !8827
  call void @llvm.dbg.value(metadata i32 %42, metadata !8788, metadata !DIExpression()), !dbg !8792
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #20, !dbg !8828
  br label %47, !dbg !8829

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #20, !dbg !8830
  call void @llvm.dbg.value(metadata i32 %44, metadata !8787, metadata !DIExpression()), !dbg !8792
  %45 = load i8*, i8** %4, align 4, !dbg !8832
  call void @llvm.dbg.value(metadata i8* %45, metadata !8786, metadata !DIExpression()), !dbg !8792
  %46 = load i32, i32* %5, align 4, !dbg !8833
  call void @llvm.dbg.value(metadata i32 %46, metadata !8788, metadata !DIExpression()), !dbg !8792
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #20, !dbg !8834
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !8822
  call void @llvm.dbg.value(metadata i32 %48, metadata !8787, metadata !DIExpression()), !dbg !8792
  %49 = call i32 @SaveAndSetIRQMask() #21, !dbg !8835
  call void @llvm.dbg.value(metadata i32 %49, metadata !8791, metadata !DIExpression()), !dbg !8792
  %50 = load i8, i8* %14, align 1, !dbg !8836
  %51 = zext i8 %50 to i32, !dbg !8837
  %52 = add i32 %27, 1, !dbg !8838
  %53 = add i32 %52, %51, !dbg !8839
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8840
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8841
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8842
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !8843
  %54 = load i16, i16* %16, align 2, !dbg !8844
  call void @SFI_MacEnable(i16 noundef zeroext %54) #20, !dbg !8845
  %55 = load i16, i16* %16, align 2, !dbg !8846
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #20, !dbg !8847
  call void @RestoreIRQMask(i32 noundef %49) #21, !dbg !8848
  br label %56, !dbg !8849

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8850
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !8852
  %59 = load i8, i8* %58, align 1, !dbg !8852
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #21, !dbg !8853
  call void @llvm.dbg.value(metadata i32 %60, metadata !8790, metadata !DIExpression()), !dbg !8792
  %61 = load i8*, i8** %17, align 4, !dbg !8854
  %62 = load i8, i8* %61, align 1, !dbg !8856
  %63 = zext i8 %62 to i32, !dbg !8856
  %64 = and i32 %60, %63, !dbg !8857
  %65 = icmp eq i32 %64, 0, !dbg !8858
  br i1 %65, label %66, label %56, !dbg !8859, !llvm.loop !8860

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8862
  %67 = load i32, i32* %5, align 4, !dbg !8863
  call void @llvm.dbg.value(metadata i32 %67, metadata !8788, metadata !DIExpression()), !dbg !8792
  %68 = load i8*, i8** %4, align 4, !dbg !8864
  call void @llvm.dbg.value(metadata i8* %68, metadata !8786, metadata !DIExpression()), !dbg !8792
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !8864
  call void @llvm.dbg.value(metadata i8* %69, metadata !8786, metadata !DIExpression()), !dbg !8792
  store i8* %69, i8** %4, align 4, !dbg !8864
  %70 = sub i32 %19, %27, !dbg !8865
  call void @llvm.dbg.value(metadata i32 %70, metadata !8783, metadata !DIExpression()), !dbg !8792
  %71 = add i32 %27, %20, !dbg !8866
  call void @llvm.dbg.value(metadata i32 %71, metadata !8785, metadata !DIExpression()), !dbg !8792
  %72 = icmp eq i32 %70, 0, !dbg !8800
  br i1 %72, label %73, label %18, !dbg !8801, !llvm.loop !8867

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !8869
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8870
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22, !dbg !8871
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8871
  ret void, !dbg !8871
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !8872 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8876, metadata !DIExpression()), !dbg !8878
  br label %2, !dbg !8879

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #21, !dbg !8880
  call void @llvm.dbg.value(metadata i32 %3, metadata !8877, metadata !DIExpression()), !dbg !8878
  %4 = icmp eq i32 %3, 0, !dbg !8882
  br i1 %4, label %5, label %2, !dbg !8883, !llvm.loop !8884

5:                                                ; preds = %2
  ret void, !dbg !8886
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8887 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8889, metadata !DIExpression()), !dbg !8890
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8891
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !8891
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !8892
  %5 = load i8, i8* %4, align 1, !dbg !8892
  %6 = zext i8 %5 to i32, !dbg !8893
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #21, !dbg !8894
  ret void, !dbg !8895
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !8896 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8899
  call void @llvm.dbg.value(metadata i32 %1, metadata !8898, metadata !DIExpression()), !dbg !8900
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !8901
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8902
  ret void, !dbg !8903
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !8904 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8908, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata i8 %1, metadata !8909, metadata !DIExpression()), !dbg !8912
  %3 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8913
  call void @llvm.dbg.value(metadata i32 %3, metadata !8910, metadata !DIExpression()), !dbg !8912
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8914
  %5 = load i16, i16* %4, align 2, !dbg !8914
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #20, !dbg !8915
  %6 = zext i8 %1 to i32, !dbg !8916
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8917
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8918
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8919
  %7 = load i16, i16* %4, align 2, !dbg !8920
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #20, !dbg !8921
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8922
  %9 = lshr i32 %8, 8, !dbg !8923
  %10 = and i32 %9, 255, !dbg !8924
  call void @llvm.dbg.value(metadata i32 %10, metadata !8911, metadata !DIExpression()), !dbg !8912
  tail call void @RestoreIRQMask(i32 noundef %3) #21, !dbg !8925
  ret i32 %10, !dbg !8926
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !8927 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8930
  call void @llvm.dbg.value(metadata i32 %1, metadata !8929, metadata !DIExpression()), !dbg !8931
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !8932
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8933
  %3 = and i32 %2, -513, !dbg !8933
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8933
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8936
  ret void, !dbg !8937
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !8938 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8940, metadata !DIExpression()), !dbg !8942
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8943
  call void @llvm.dbg.value(metadata i32 %2, metadata !8941, metadata !DIExpression()), !dbg !8942
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !8944
  br i1 %3, label %4, label %5, !dbg !8946

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !8947
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !8949
  ret void, !dbg !8950

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !8951
  tail call void @Flash_ReturnReady() #21, !dbg !8953
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !8953
  unreachable, !dbg !8953
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !8957 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !8959, metadata !DIExpression()), !dbg !8964
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8965
  call void @llvm.dbg.value(metadata i32 %1, metadata !8961, metadata !DIExpression()), !dbg !8964
  %2 = tail call i32 @get_NOR_init_status() #20, !dbg !8966
  %3 = icmp eq i32 %2, 0, !dbg !8968
  br i1 %3, label %4, label %125, !dbg !8969

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !8970
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8971
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !8959, metadata !DIExpression()), !dbg !8964
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !8973
  %7 = load i32, i32* %6, align 4, !dbg !8973
  %8 = xor i32 %7, -1, !dbg !8973
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !8973
  %10 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %9, align 4, !dbg !8973
  %11 = ptrtoint %struct.hal_cache_region_config_t* %10 to i32, !dbg !8973
  %12 = icmp eq i32 %8, %11, !dbg !8973
  br i1 %12, label %14, label %13, !dbg !8976

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !8977
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !8977
  unreachable, !dbg !8977

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8979
  %16 = icmp ult i32 %15, 16, !dbg !8981
  br i1 %16, label %17, label %34, !dbg !8982

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !8983
  %19 = load i8, i8* %18, align 4, !dbg !8983
  %20 = icmp eq i8 %19, 1, !dbg !8984
  br i1 %20, label %21, label %34, !dbg !8985

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !8986

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8988
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !8990
  %27 = load i8, i8* %26, align 1, !dbg !8990
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #21, !dbg !8991
  call void @llvm.dbg.value(metadata i32 %28, metadata !8960, metadata !DIExpression()), !dbg !8964
  %29 = load i8*, i8** %23, align 4, !dbg !8992
  %30 = load i8, i8* %29, align 1, !dbg !8994
  %31 = zext i8 %30 to i32, !dbg !8994
  %32 = and i32 %28, %31, !dbg !8995
  %33 = icmp eq i32 %32, 0, !dbg !8996
  br i1 %33, label %34, label %24, !dbg !8997, !llvm.loop !8998

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9000, !range !2756
  %36 = icmp ne i8 %35, 0, !dbg !9000
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !9002
  br i1 %39, label %116, label %40, !dbg !9002

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !9003
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !9003
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !9005
  %44 = load i8, i8* %43, align 1, !dbg !9005
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #21, !dbg !9006
  call void @llvm.dbg.value(metadata i32 %45, metadata !8960, metadata !DIExpression()), !dbg !8964
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !9007
  %47 = load i8*, i8** %46, align 4, !dbg !9007
  %48 = load i8, i8* %47, align 1, !dbg !9009
  %49 = zext i8 %48 to i32, !dbg !9009
  %50 = and i32 %45, %49, !dbg !9010
  %51 = icmp eq i32 %50, 0, !dbg !9011
  br i1 %51, label %85, label %52, !dbg !9012

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #21, !dbg !9013
  br label %53, !dbg !9015

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !9016
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !9018
  %56 = load i8, i8* %55, align 1, !dbg !9018
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #21, !dbg !9019
  call void @llvm.dbg.value(metadata i32 %57, metadata !8960, metadata !DIExpression()), !dbg !8964
  %58 = load i8*, i8** %46, align 4, !dbg !9020
  %59 = load i8, i8* %58, align 1, !dbg !9022
  %60 = zext i8 %59 to i32, !dbg !9022
  %61 = and i32 %57, %60, !dbg !9023
  %62 = icmp eq i32 %61, 0, !dbg !9024
  br i1 %62, label %63, label %53, !dbg !9025, !llvm.loop !9026

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !9028
  %65 = load i32, i32* %64, align 4, !dbg !9028
  %66 = and i32 %65, 4, !dbg !9030
  %67 = icmp eq i32 %66, 0, !dbg !9030
  br i1 %67, label %84, label %68, !dbg !9031

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !9032
  %70 = load i8, i8* %69, align 4, !dbg !9032
  %71 = icmp eq i8 %70, 2, !dbg !9033
  br i1 %71, label %72, label %84, !dbg !9034

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9035
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9037
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9038
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !9039
  %74 = load i16, i16* %73, align 2, !dbg !9039
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #20, !dbg !9040
  %75 = load i16, i16* %73, align 2, !dbg !9041
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #20, !dbg !9042
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !9043
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9044
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9045
  %76 = load i16, i16* %73, align 2, !dbg !9046
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #20, !dbg !9047
  %77 = load i16, i16* %73, align 2, !dbg !9048
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #20, !dbg !9049
  br label %78, !dbg !9050

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9051
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9053
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9054
  %79 = load i16, i16* %73, align 2, !dbg !9055
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #20, !dbg !9056
  %80 = load i16, i16* %73, align 2, !dbg !9057
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #20, !dbg !9058
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9059
  call void @llvm.dbg.value(metadata i32 %81, metadata !8960, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !8964
  %82 = and i32 %81, 256, !dbg !9060
  %83 = icmp eq i32 %82, 0, !dbg !9060
  br i1 %83, label %84, label %78, !dbg !9060, !llvm.loop !9061

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !9063
  br label %116, !dbg !9064

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !9065
  %87 = load i32, i32* %86, align 4, !dbg !9065
  %88 = and i32 %87, 2, !dbg !9068
  %89 = icmp eq i32 %88, 0, !dbg !9068
  br i1 %89, label %115, label %90, !dbg !9069

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !9070
  %92 = load %struct.anon.10*, %struct.anon.10** %91, align 4, !dbg !9070
  %93 = icmp eq %struct.anon.10* %92, null, !dbg !9071
  br i1 %93, label %94, label %115, !dbg !9072

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !9073
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !9075
  %97 = load i8, i8* %96, align 1, !dbg !9075
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #21, !dbg !9076
  call void @llvm.dbg.value(metadata i32 %98, metadata !8960, metadata !DIExpression()), !dbg !8964
  %99 = load i8*, i8** %46, align 4, !dbg !9077
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !9079
  %101 = load i8, i8* %100, align 1, !dbg !9079
  %102 = zext i8 %101 to i32, !dbg !9079
  %103 = and i32 %98, %102, !dbg !9080
  %104 = icmp eq i32 %103, 0, !dbg !9081
  br i1 %104, label %105, label %115, !dbg !9082

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !9083
  %107 = load i8, i8* %106, align 1, !dbg !9083
  %108 = zext i8 %107 to i32, !dbg !9083
  %109 = and i32 %98, %108, !dbg !9084
  %110 = icmp eq i32 %109, 0, !dbg !9085
  br i1 %110, label %111, label %115, !dbg !9086

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !9087
  %113 = load i16, i16* %112, align 2, !dbg !9087
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #20, !dbg !9089
  %114 = load i16, i16* %112, align 2, !dbg !9090
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #20, !dbg !9091
  br label %115, !dbg !9092

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9093
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9094
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !9095
  %118 = sub i32 0, %117, !dbg !9095
  call void @llvm.dbg.value(metadata i32 %118, metadata !8962, metadata !DIExpression()), !dbg !9096
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !9097
  %120 = icmp ult i32 %119, %118, !dbg !9099
  br i1 %120, label %121, label %122, !dbg !9100

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !9101
  br label %122, !dbg !9103

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9104
  %124 = and i32 %123, -513, !dbg !9104
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9104
  br label %125, !dbg !9107

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8964
  ret void, !dbg !9108
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9109 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9111, metadata !DIExpression()), !dbg !9115
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !9116
  %3 = icmp eq i32 %2, -1, !dbg !9118
  br i1 %3, label %12, label %4, !dbg !9119

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !9113, metadata !DIExpression()), !dbg !9115
  %5 = sub i32 0, %2, !dbg !9120
  call void @llvm.dbg.value(metadata i32 %5, metadata !9114, metadata !DIExpression()), !dbg !9115
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !9122
  %7 = load i8, i8* %6, align 4, !dbg !9122
  %8 = zext i8 %7 to i32, !dbg !9124
  %9 = icmp ugt i32 %8, %5, !dbg !9125
  br i1 %9, label %10, label %12, !dbg !9126

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !9127
  tail call void @DelayAWhile_UST(i32 noundef %11) #20, !dbg !9129
  br label %12, !dbg !9130

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9131
  call void @llvm.dbg.value(metadata i32 %13, metadata !9112, metadata !DIExpression()), !dbg !9115
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9132
  %15 = load i16, i16* %14, align 2, !dbg !9132
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9133
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !9133
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !9134
  %19 = load i8, i8* %18, align 1, !dbg !9134
  %20 = zext i8 %19 to i32, !dbg !9135
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #20, !dbg !9136
  tail call void @RestoreIRQMask(i32 noundef %13) #21, !dbg !9137
  ret void, !dbg !9138
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !9139 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9142
  call void @llvm.dbg.value(metadata i32 %1, metadata !9141, metadata !DIExpression()), !dbg !9143
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9144
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9145
  %3 = and i32 %2, -513, !dbg !9145
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9145
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9148
  ret void, !dbg !9149
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !9150 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9154, metadata !DIExpression()), !dbg !9158
  call void @llvm.dbg.value(metadata i32 %1, metadata !9155, metadata !DIExpression()), !dbg !9158
  call void @llvm.dbg.value(metadata i8 %2, metadata !9156, metadata !DIExpression()), !dbg !9158
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9159
  call void @llvm.dbg.value(metadata i32 %4, metadata !9157, metadata !DIExpression()), !dbg !9158
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9160
  %6 = load i16, i16* %5, align 2, !dbg !9160
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #20, !dbg !9161
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9162
  %7 = zext i8 %2 to i32, !dbg !9163
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9164
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9165
  %8 = load i16, i16* %5, align 2, !dbg !9166
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #20, !dbg !9167
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !9168
  ret void, !dbg !9169
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !9170 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9175
  call void @llvm.dbg.value(metadata i32 %1, metadata !9174, metadata !DIExpression()), !dbg !9176
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !9177
  br i1 %2, label %4, label %3, !dbg !9179

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !9180
  br label %4, !dbg !9182

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !9183
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9183
  ret i32 %5, !dbg !9184
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !9185 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !9192
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9189, metadata !DIExpression()), !dbg !9193
  call void @llvm.dbg.value(metadata i8 0, metadata !9191, metadata !DIExpression()), !dbg !9193
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !9194
  %3 = load i32, i32* %2, align 4, !dbg !9194
  %4 = xor i32 %3, -1, !dbg !9194
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !9194
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %5, align 4, !dbg !9194
  %7 = ptrtoint %struct.hal_cache_region_config_t* %6 to i32, !dbg !9194
  %8 = icmp eq i32 %4, %7, !dbg !9194
  br i1 %8, label %10, label %9, !dbg !9197

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !9198
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !9198
  unreachable, !dbg !9198

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9200
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9201
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9201
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !9202
  %14 = load i8, i8* %13, align 1, !dbg !9202
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #21, !dbg !9203
  call void @llvm.dbg.value(metadata i32 %15, metadata !9190, metadata !DIExpression()), !dbg !9193
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9204
  %17 = load i8*, i8** %16, align 4, !dbg !9204
  %18 = load i8, i8* %17, align 1, !dbg !9206
  %19 = zext i8 %18 to i32, !dbg !9206
  %20 = and i32 %15, %19, !dbg !9207
  %21 = icmp eq i32 %20, 0, !dbg !9208
  br i1 %21, label %22, label %23, !dbg !9209

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9210
  call void @llvm.dbg.value(metadata i8 1, metadata !9191, metadata !DIExpression()), !dbg !9193
  br label %23, !dbg !9212

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !9191, metadata !DIExpression()), !dbg !9193
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9213
  ret i1 %21, !dbg !9214
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !9215 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9217, metadata !DIExpression()), !dbg !9218
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9219, !range !2756
  %2 = icmp eq i8 %1, 0, !dbg !9219
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9219
  %4 = icmp eq i8 %3, 0, !dbg !9219
  %5 = select i1 %2, i1 true, i1 %4, !dbg !9219
  br i1 %5, label %6, label %7, !dbg !9219

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !9222
  tail call void @Flash_ReturnReady() #21, !dbg !9224
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !9224
  unreachable, !dbg !9224

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !9228
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !9217, metadata !DIExpression()), !dbg !9218
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #21, !dbg !9229
  ret void, !dbg !9230
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9231 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9233, metadata !DIExpression()), !dbg !9235
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9236
  call void @llvm.dbg.value(metadata i32 %2, metadata !9234, metadata !DIExpression()), !dbg !9235
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9237
  %4 = load i16, i16* %3, align 2, !dbg !9237
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9238
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !9238
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !9239
  %8 = load i8, i8* %7, align 1, !dbg !9239
  %9 = zext i8 %8 to i32, !dbg !9240
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #20, !dbg !9241
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !9242
  %11 = load i8, i8* %10, align 4, !dbg !9242
  %12 = icmp eq i8 %11, 0, !dbg !9244
  br i1 %12, label %14, label %13, !dbg !9245

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !9246
  br label %14, !dbg !9248

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !9249
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !9250
  ret void, !dbg !9251
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !9252 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9255
  call void @llvm.dbg.value(metadata i32 %1, metadata !9254, metadata !DIExpression()), !dbg !9256
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9257
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9258
  ret void, !dbg !9259
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !9260 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !9264
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9262, metadata !DIExpression()), !dbg !9265
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9266, !range !2756
  %3 = icmp ne i8 %2, 0, !dbg !9266
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9266
  %5 = icmp eq i8 %4, 0, !dbg !9266
  %6 = select i1 %3, i1 %5, i1 false, !dbg !9266
  br i1 %6, label %8, label %7, !dbg !9266

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !9269
  tail call void @Flash_ReturnReady() #21, !dbg !9271
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !9271
  unreachable, !dbg !9271

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !9275
  %10 = load i32, i32* %9, align 4, !dbg !9275
  %11 = xor i32 %10, -1, !dbg !9275
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !9275
  %13 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %12, align 4, !dbg !9275
  %14 = ptrtoint %struct.hal_cache_region_config_t* %13 to i32, !dbg !9275
  %15 = icmp eq i32 %11, %14, !dbg !9275
  br i1 %15, label %17, label %16, !dbg !9278

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #21, !dbg !9279
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !9279
  unreachable, !dbg !9279

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !9281
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !9282

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !9283
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !9285
  %23 = load i8, i8* %22, align 1, !dbg !9285
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #21, !dbg !9286
  call void @llvm.dbg.value(metadata i32 %24, metadata !9263, metadata !DIExpression()), !dbg !9265
  %25 = load i8*, i8** %19, align 4, !dbg !9287
  %26 = load i8, i8* %25, align 1, !dbg !9289
  %27 = zext i8 %26 to i32, !dbg !9289
  %28 = and i32 %24, %27, !dbg !9290
  %29 = icmp eq i32 %28, 0, !dbg !9291
  br i1 %29, label %30, label %20, !dbg !9292, !llvm.loop !9293

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !9295
  ret void, !dbg !9296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #10 section ".ram_code" !dbg !9297 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9299, metadata !DIExpression()), !dbg !9300
  ret void, !dbg !9301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !9302 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9325, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9326, metadata !DIExpression()), !dbg !9328
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9329
  %4 = load i8*, i8** %3, align 4, !dbg !9329
  call void @llvm.dbg.value(metadata i8* %4, metadata !9327, metadata !DIExpression()), !dbg !9328
  store i8 1, i8* %4, align 1, !dbg !9330
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !9331
  store i8 2, i8* %5, align 1, !dbg !9332
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !9333
  store i8 8, i8* %6, align 1, !dbg !9334
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !9335
  store i8 4, i8* %7, align 1, !dbg !9336
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9337
  store i8 60, i8* %8, align 1, !dbg !9338
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !9339
  store i8 -128, i8* %9, align 1, !dbg !9340
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !9341
  store i8 96, i8* %10, align 1, !dbg !9342
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9343
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9343
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !9344
  store i8 43, i8* %13, align 1, !dbg !9345
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9346
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !9347
  store i8 43, i8* %15, align 1, !dbg !9348
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9349
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !9350
  store i8 47, i8* %17, align 1, !dbg !9351
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9352
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !9353
  store i8 5, i8* %19, align 1, !dbg !9354
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9355
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !9356
  store i8 1, i8* %21, align 1, !dbg !9357
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9358
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !9359
  store i8 43, i8* %23, align 1, !dbg !9360
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !9361
  store i8 22, i8* %24, align 4, !dbg !9362
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !9363
  %26 = load i8, i8* %25, align 1, !dbg !9363
  %27 = icmp eq i8 %26, 32, !dbg !9365
  br i1 %27, label %28, label %49, !dbg !9366

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !9367
  %30 = load i8, i8* %29, align 1, !dbg !9367
  %31 = icmp eq i8 %30, 24, !dbg !9368
  br i1 %31, label %32, label %41, !dbg !9369

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9370
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !9372
  store i8 117, i8* %34, align 1, !dbg !9373
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9374
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !9375
  store i8 122, i8* %36, align 1, !dbg !9376
  %37 = load i8, i8* %25, align 1, !dbg !9377
  %38 = icmp eq i8 %37, 32, !dbg !9379
  br i1 %38, label %39, label %49, !dbg !9380

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !9382
  br label %41, !dbg !9382

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !9382
  %43 = icmp eq i8 %42, 22, !dbg !9383
  br i1 %43, label %44, label %49, !dbg !9384

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9385
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !9387
  store i8 117, i8* %46, align 1, !dbg !9388
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9389
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !9390
  store i8 122, i8* %48, align 1, !dbg !9391
  br label %49, !dbg !9392

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !9393
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !9394
  ret i32 0, !dbg !9395
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !9396 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !9398, metadata !DIExpression()), !dbg !9402
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9403
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9399, metadata !DIExpression()), !dbg !9402
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9404
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !9405
  %5 = load i8, i8* %4, align 1, !dbg !9407
  %6 = icmp eq i8 %5, -62, !dbg !9408
  br i1 %6, label %7, label %15, !dbg !9409

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !9410
  %9 = load i8, i8* %8, align 1, !dbg !9410
  %10 = icmp eq i8 %9, 32, !dbg !9411
  br i1 %10, label %11, label %15, !dbg !9412

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !9413
  %13 = load i8, i8* %12, align 1, !dbg !9413
  %14 = icmp eq i8 %13, 22, !dbg !9414
  br i1 %14, label %48, label %15, !dbg !9415

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !9416
  %17 = bitcast i8* %16 to i16*, !dbg !9416
  %18 = load i16, i16* %17, align 2, !dbg !9416
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9417
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !9417
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !9417
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !9418
  %23 = load i8, i8* %22, align 1, !dbg !9418
  %24 = zext i8 %23 to i32, !dbg !9419
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #20, !dbg !9420
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9421
  %25 = load i16, i16* %17, align 2, !dbg !9422
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !9423
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !9424
  call void @llvm.dbg.value(metadata i8* %2, metadata !9401, metadata !DIExpression(DW_OP_deref)), !dbg !9402
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !9425
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !9426
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !9427
  %30 = load i8, i8* %29, align 1, !dbg !9427
  %31 = zext i8 %30 to i32, !dbg !9428
  call void @llvm.dbg.value(metadata i32 %31, metadata !9400, metadata !DIExpression()), !dbg !9402
  %32 = shl nuw nsw i32 %31, 8, !dbg !9429
  %33 = load i8, i8* %2, align 1, !dbg !9430
  call void @llvm.dbg.value(metadata i8 %33, metadata !9401, metadata !DIExpression()), !dbg !9402
  %34 = zext i8 %33 to i32, !dbg !9430
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9431
  %36 = bitcast i8* %35 to i8**, !dbg !9431
  %37 = load i8*, i8** %36, align 4, !dbg !9431
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !9432
  %39 = load i8, i8* %38, align 1, !dbg !9432
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !9433
  %41 = load i8, i8* %40, align 1, !dbg !9433
  %42 = or i8 %41, %39, !dbg !9434
  %43 = zext i8 %42 to i32, !dbg !9434
  %44 = xor i32 %43, -1, !dbg !9435
  %45 = and i32 %44, %34, !dbg !9436
  %46 = or i32 %45, %32, !dbg !9437
  call void @llvm.dbg.value(metadata i32 %46, metadata !9400, metadata !DIExpression()), !dbg !9402
  %47 = load i16, i16* %17, align 2, !dbg !9438
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #20, !dbg !9439
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9440
  br label %48, !dbg !9441

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9442
  ret i32 0, !dbg !9442
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9443 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9445, metadata !DIExpression()), !dbg !9447
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9448
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !9449

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !9450
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !9452
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !9453
  call void @llvm.dbg.value(metadata i8* %2, metadata !9446, metadata !DIExpression(DW_OP_deref)), !dbg !9447
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !9454
  %10 = load i8, i8* %2, align 1, !dbg !9455
  call void @llvm.dbg.value(metadata i8 %10, metadata !9446, metadata !DIExpression()), !dbg !9447
  %11 = load i8*, i8** %5, align 4, !dbg !9456
  %12 = load i8, i8* %11, align 1, !dbg !9457
  %13 = and i8 %12, %10, !dbg !9458
  %14 = icmp eq i8 %13, 0, !dbg !9459
  br i1 %14, label %15, label %6, !dbg !9460, !llvm.loop !9461

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9463
  ret void, !dbg !9463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !9464 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9466, metadata !DIExpression()), !dbg !9469
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9467, metadata !DIExpression()), !dbg !9469
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9470
  %4 = load i8*, i8** %3, align 4, !dbg !9470
  call void @llvm.dbg.value(metadata i8* %4, metadata !9468, metadata !DIExpression()), !dbg !9469
  store i8 1, i8* %4, align 1, !dbg !9471
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !9472
  store i8 2, i8* %5, align 1, !dbg !9473
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !9474
  store i8 -128, i8* %6, align 1, !dbg !9475
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !9476
  store i8 -128, i8* %7, align 1, !dbg !9477
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9478
  store i8 60, i8* %8, align 1, !dbg !9479
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !9480
  store i8 -128, i8* %9, align 1, !dbg !9481
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9482
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9482
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !9483
  store i8 -97, i8* %12, align 1, !dbg !9484
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9485
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !9486
  store i8 53, i8* %14, align 1, !dbg !9487
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9488
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !9489
  store i8 53, i8* %16, align 1, !dbg !9490
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9491
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !9492
  store i8 5, i8* %18, align 1, !dbg !9493
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9494
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !9495
  store i8 1, i8* %20, align 1, !dbg !9496
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9497
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !9498
  store i8 117, i8* %22, align 1, !dbg !9499
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9500
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !9501
  store i8 122, i8* %24, align 1, !dbg !9502
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !9503
  store i8 22, i8* %25, align 4, !dbg !9504
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !9505
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !9506
  ret i32 0, !dbg !9507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #10 !dbg !9508 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9510, metadata !DIExpression()), !dbg !9512
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9511, metadata !DIExpression()), !dbg !9512
  ret i32 0, !dbg !9513
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !9514 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !9516, metadata !DIExpression()), !dbg !9518
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9517, metadata !DIExpression()), !dbg !9518
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !9519
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !9520
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !9521
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !9522
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !9523
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !9524
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !9525
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !9526
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !9527
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !9528
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !9529
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !9530
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !9531
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !9532
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !9533
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !9534
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !9535
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !9536
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !9537
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !9538
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !9539
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !9540
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !9541
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !9542
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !9543
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !9544
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !9545
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !9546
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !9547
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !9548
  %18 = tail call i32 @custom_get_NORFLASH_Size() #20, !dbg !9549
  %19 = icmp ugt i32 %18, 16777216, !dbg !9551
  %20 = select i1 %19, i8 4, i8 3, !dbg !9552
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !9553
  store i8 %20, i8* %21, align 1, !dbg !9555
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9556
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9556
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !9557
  store i8 0, i8* %24, align 1, !dbg !9558
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9559
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !9560
  store i8 -81, i8* %26, align 1, !dbg !9561
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9562
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !9563
  store i8 -97, i8* %28, align 1, !dbg !9564
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9565
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !9566
  store i8 2, i8* %30, align 1, !dbg !9567
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9568
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !9569
  store i8 32, i8* %32, align 1, !dbg !9570
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9571
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !9572
  store i8 82, i8* %34, align 1, !dbg !9573
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9574
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !9575
  store i8 -40, i8* %36, align 1, !dbg !9576
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9577
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !9578
  store i8 -80, i8* %38, align 1, !dbg !9579
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9580
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !9581
  store i8 48, i8* %40, align 1, !dbg !9582
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9583
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !9584
  store i8 6, i8* %42, align 1, !dbg !9585
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9586
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !9587
  store i8 -71, i8* %44, align 1, !dbg !9588
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9589
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !9590
  store i8 -85, i8* %46, align 1, !dbg !9591
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9592
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !9593
  store i8 5, i8* %48, align 1, !dbg !9594
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !9595
  store i16 0, i16* %49, align 4, !dbg !9596
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !9597
  store %struct.anon.10* null, %struct.anon.10** %50, align 4, !dbg !9598
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !9599
  store %struct.anon.10* null, %struct.anon.10** %51, align 4, !dbg !9600
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !9601
  store i8 0, i8* %52, align 4, !dbg !9602
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !9603
  store i8 5, i8* %53, align 4, !dbg !9604
  ret i32 0, !dbg !9605
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !9606 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9608, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata i8* %1, metadata !9609, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata i8* %1, metadata !9610, metadata !DIExpression()), !dbg !9626
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9627
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9623, metadata !DIExpression()), !dbg !9626
  call void @llvm.dbg.value(metadata i32 0, metadata !9624, metadata !DIExpression()), !dbg !9626
  %4 = bitcast i8* %1 to i32*, !dbg !9628
  store i32 0, i32* %4, align 4, !dbg !9629
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.hal_cache_region_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !9624, metadata !DIExpression()), !dbg !9626
  %7 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9630
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %7, i32 0, i32 0, !dbg !9631
  %9 = load i32, i32* %8, align 4, !dbg !9631
  %10 = icmp eq i32 %9, 0, !dbg !9632
  br i1 %10, label %34, label %11, !dbg !9633

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !9633

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !9624, metadata !DIExpression()), !dbg !9626
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !9634
  store i32 %17, i32* %19, align 4, !dbg !9636
  %20 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9637
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %20, i32 %18, i32 1, !dbg !9638
  %22 = load i32, i32* %21, align 4, !dbg !9638
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !9639
  store i32 %22, i32* %23, align 4, !dbg !9640
  %24 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9641
  %25 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %24, i32 %18, i32 1, !dbg !9642
  %26 = load i32, i32* %25, align 4, !dbg !9642
  %27 = load i32, i32* %4, align 4, !dbg !9643
  %28 = add i32 %27, %26, !dbg !9643
  store i32 %28, i32* %4, align 4, !dbg !9643
  %29 = add i32 %18, 1, !dbg !9644
  call void @llvm.dbg.value(metadata i32 %29, metadata !9624, metadata !DIExpression()), !dbg !9626
  %30 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9630
  %31 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %30, i32 %29, i32 0, !dbg !9631
  %32 = load i32, i32* %31, align 4, !dbg !9631
  %33 = icmp eq i32 %32, 0, !dbg !9632
  br i1 %33, label %34, label %16, !dbg !9633, !llvm.loop !9645

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !9626
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !9647
  %37 = bitcast i8* %36 to i32*, !dbg !9647
  store i32 %35, i32* %37, align 4, !dbg !9648
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !9649
  %39 = bitcast i8* %38 to i16*, !dbg !9649
  store i16 512, i16* %39, align 4, !dbg !9650
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9651
  br label %40, !dbg !9652

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9653
  call void @llvm.dbg.value(metadata i32 %41, metadata !9625, metadata !DIExpression()), !dbg !9626
  %42 = icmp eq i32 %41, -121, !dbg !9655
  br i1 %42, label %40, label %43, !dbg !9656, !llvm.loop !9657

43:                                               ; preds = %40
  ret i32 0, !dbg !9659
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !9660 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9662, metadata !DIExpression()), !dbg !9666
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9667
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !9663, metadata !DIExpression()), !dbg !9666
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9668
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !9669

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9670
  call void @llvm.dbg.value(metadata i32 %8, metadata !9665, metadata !DIExpression()), !dbg !9666
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9672, !range !2756
  %10 = icmp eq i8 %9, 0, !dbg !9672
  br i1 %10, label %12, label %11, !dbg !9674

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #21, !dbg !9675
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9677
  br label %12, !dbg !9678

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !9679
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !9680
  %15 = load i8, i8* %14, align 1, !dbg !9680
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #21, !dbg !9681
  call void @llvm.dbg.value(metadata i32 %16, metadata !9664, metadata !DIExpression()), !dbg !9666
  %17 = load i8*, i8** %6, align 4, !dbg !9682
  %18 = load i8, i8* %17, align 1, !dbg !9684
  %19 = zext i8 %18 to i32, !dbg !9684
  %20 = and i32 %16, %19, !dbg !9685
  %21 = icmp eq i32 %20, 0, !dbg !9686
  br i1 %21, label %22, label %25, !dbg !9687

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9688
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !9690
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9691
  %24 = bitcast i8* %23 to i8**, !dbg !9691
  store i8* null, i8** %24, align 4, !dbg !9692
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9693
  ret i32 0, !dbg !9694

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !9695
  br label %7, !dbg !9669, !llvm.loop !9697
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !9699 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9701, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 %1, metadata !9702, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 0, metadata !9703, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 1, metadata !9707, metadata !DIExpression()), !dbg !9715
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9716
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9708, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 0, metadata !9709, metadata !DIExpression()), !dbg !9715
  %4 = bitcast i8* %0 to i32*, !dbg !9717
  %5 = load i32, i32* %4, align 4, !dbg !9717
  %6 = xor i32 %5, -1, !dbg !9717
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9717
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !9717
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !9717
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !9717
  %11 = icmp eq i32 %6, %10, !dbg !9717
  br i1 %11, label %13, label %12, !dbg !9720

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !9721
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !9721
  unreachable, !dbg !9721

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9723
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !9724
  store i8 2, i8* %14, align 4, !dbg !9725
  call void @llvm.dbg.value(metadata i32 %19, metadata !9709, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 %1, metadata !9702, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !9715
  br label %15, !dbg !9726

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9727
  call void @llvm.dbg.value(metadata i32 %16, metadata !9703, metadata !DIExpression()), !dbg !9715
  %17 = icmp eq i32 %16, -121, !dbg !9729
  br i1 %17, label %15, label %18, !dbg !9730, !llvm.loop !9731

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !9733
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9734
  %21 = bitcast i8* %20 to i8**, !dbg !9734
  %22 = load i8*, i8** %21, align 4, !dbg !9734
  %23 = ptrtoint i8* %22 to i32, !dbg !9735
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #20, !dbg !9736
  call void @llvm.dbg.value(metadata i32 %24, metadata !9704, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 %24, metadata !9705, metadata !DIExpression()), !dbg !9715
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !9737
  %26 = bitcast i8* %25 to i16*, !dbg !9737
  %27 = load i16, i16* %26, align 2, !dbg !9737
  %28 = zext i16 %27 to i32, !dbg !9738
  call void @llvm.dbg.value(metadata i32 %28, metadata !9710, metadata !DIExpression()), !dbg !9739
  %29 = lshr i32 %24, 10, !dbg !9740
  call void @llvm.dbg.value(metadata i32 %29, metadata !9713, metadata !DIExpression()), !dbg !9739
  %30 = and i32 %29, %28, !dbg !9741
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !9743
  %33 = icmp eq i32 %32, 0, !dbg !9743
  call void @llvm.dbg.value(metadata i32 0, metadata !9714, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.value(metadata i32 %29, metadata !9713, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.value(metadata i32 %28, metadata !9710, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.value(metadata i32 1, metadata !9707, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 %24, metadata !9705, metadata !DIExpression()), !dbg !9715
  br i1 %33, label %34, label %51, !dbg !9743

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !9714, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.value(metadata i32 %36, metadata !9713, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.value(metadata i32 %37, metadata !9710, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.value(metadata i32 %38, metadata !9707, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 %39, metadata !9705, metadata !DIExpression()), !dbg !9715
  %40 = and i32 %37, 1, !dbg !9744
  %41 = icmp eq i32 %40, 0, !dbg !9744
  %42 = add i32 %35, 10, !dbg !9750
  %43 = shl nuw i32 1, %42, !dbg !9750
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !9750
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !9750
  call void @llvm.dbg.value(metadata i32 %45, metadata !9707, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 %44, metadata !9705, metadata !DIExpression()), !dbg !9715
  %46 = lshr i32 %37, 1, !dbg !9751
  call void @llvm.dbg.value(metadata i32 %46, metadata !9710, metadata !DIExpression()), !dbg !9739
  %47 = lshr i32 %36, 1, !dbg !9752
  call void @llvm.dbg.value(metadata i32 %47, metadata !9713, metadata !DIExpression()), !dbg !9739
  %48 = add i32 %35, 1, !dbg !9753
  call void @llvm.dbg.value(metadata i32 %48, metadata !9714, metadata !DIExpression()), !dbg !9739
  %49 = and i32 %36, 2, !dbg !9754
  %50 = icmp eq i32 %49, 0, !dbg !9754
  br i1 %50, label %34, label %51, !dbg !9755, !llvm.loop !9756

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !9758
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !9759
  call void @llvm.dbg.value(metadata i32 %53, metadata !9707, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 %52, metadata !9705, metadata !DIExpression()), !dbg !9715
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !9760

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9761
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !9761
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !9761
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !9763
  br label %70, !dbg !9764

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9765
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !9765
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !9765
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !9766
  br label %70, !dbg !9767

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9768
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !9768
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !9768
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !9769
  br label %70, !dbg !9770

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #21, !dbg !9771
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !9771
  unreachable, !dbg !9771

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !9775
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !9775
  store i8 %73, i8* %74, align 1, !dbg !9775
  call void @llvm.dbg.value(metadata i32 %53, metadata !9707, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 %52, metadata !9705, metadata !DIExpression()), !dbg !9715
  %75 = trunc i32 %19 to i8, !dbg !9776
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !9776

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9777
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !9777
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !9777
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !9779
  br label %91, !dbg !9780

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9781
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !9781
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !9781
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !9782
  br label %91, !dbg !9783

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9784
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !9784
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !9784
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !9785
  br label %91, !dbg !9786

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !9787
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !9787
  store i8 %94, i8* %95, align 1, !dbg !9787
  br label %96, !dbg !9788

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !9706, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 %53, metadata !9707, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 %16, metadata !9703, metadata !DIExpression()), !dbg !9715
  %97 = icmp eq i32 %53, 0, !dbg !9788
  br i1 %97, label %111, label %98, !dbg !9791

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !9792
  call void @llvm.dbg.value(metadata i8* %99, metadata !9706, metadata !DIExpression()), !dbg !9715
  %100 = ptrtoint i8* %99 to i32, !dbg !9793
  call void @llvm.dbg.value(metadata i32 %100, metadata !9706, metadata !DIExpression()), !dbg !9715
  br label %101, !dbg !9791

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !9707, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 %103, metadata !9706, metadata !DIExpression()), !dbg !9715
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #21, !dbg !9794
  br label %104, !dbg !9796

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9797
  call void @llvm.dbg.value(metadata i32 %105, metadata !9703, metadata !DIExpression()), !dbg !9715
  %106 = icmp eq i32 %105, -121, !dbg !9799
  br i1 %106, label %104, label %107, !dbg !9801, !llvm.loop !9802

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !9804
  call void @llvm.dbg.value(metadata i32 %108, metadata !9707, metadata !DIExpression()), !dbg !9715
  %109 = add i32 %103, %52, !dbg !9805
  call void @llvm.dbg.value(metadata i32 %109, metadata !9706, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 %105, metadata !9703, metadata !DIExpression()), !dbg !9715
  %110 = icmp eq i32 %108, 0, !dbg !9788
  br i1 %110, label %111, label %101, !dbg !9791, !llvm.loop !9806

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !9715
  store i8 0, i8* %14, align 4, !dbg !9808
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9809
  ret i32 %112, !dbg !9810
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !9811 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9813, metadata !DIExpression()), !dbg !9830
  call void @llvm.dbg.value(metadata i8* %1, metadata !9814, metadata !DIExpression()), !dbg !9830
  call void @llvm.dbg.value(metadata i8* %2, metadata !9815, metadata !DIExpression()), !dbg !9830
  call void @llvm.dbg.value(metadata i32 %3, metadata !9816, metadata !DIExpression()), !dbg !9830
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9831
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !9817, metadata !DIExpression()), !dbg !9830
  %8 = ptrtoint i8* %1 to i32, !dbg !9832
  call void @llvm.dbg.value(metadata i32 %8, metadata !9819, metadata !DIExpression()), !dbg !9830
  %9 = bitcast i8** %5 to i8*, !dbg !9833
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #22, !dbg !9833
  call void @llvm.dbg.value(metadata i8* %2, metadata !9820, metadata !DIExpression()), !dbg !9830
  store i8* %2, i8** %5, align 4, !dbg !9834
  call void @llvm.dbg.value(metadata i32 0, metadata !9822, metadata !DIExpression()), !dbg !9830
  %10 = bitcast i32* %6 to i8*, !dbg !9835
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #22, !dbg !9835
  %11 = bitcast i8* %0 to i32*, !dbg !9836
  %12 = load i32, i32* %11, align 4, !dbg !9836
  %13 = xor i32 %12, -1, !dbg !9836
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9836
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !9836
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !9836
  %17 = ptrtoint %struct.hal_cache_region_config_t* %16 to i32, !dbg !9836
  %18 = icmp eq i32 %13, %17, !dbg !9836
  br i1 %18, label %20, label %19, !dbg !9839

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !9840
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !9840
  unreachable, !dbg !9840

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9842
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !9843
  store i8 1, i8* %21, align 4, !dbg !9844
  br label %22, !dbg !9845

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9846
  call void @llvm.dbg.value(metadata i32 %23, metadata !9822, metadata !DIExpression()), !dbg !9830
  %24 = icmp eq i32 %23, -121, !dbg !9848
  br i1 %24, label %22, label %25, !dbg !9849, !llvm.loop !9850

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !9852
  br i1 %26, label %104, label %27, !dbg !9853

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !9853

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !9854
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !9830
  call void @llvm.dbg.value(metadata i32 %38, metadata !9819, metadata !DIExpression()), !dbg !9830
  call void @llvm.dbg.value(metadata i32 %37, metadata !9816, metadata !DIExpression()), !dbg !9830
  call void @llvm.dbg.value(metadata i8* %36, metadata !9820, metadata !DIExpression()), !dbg !9830
  call void @llvm.dbg.value(metadata i8* %36, metadata !9821, metadata !DIExpression()), !dbg !9830
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9855
  %40 = shl i32 %39, 1, !dbg !9856
  %41 = add i32 %40, -1, !dbg !9857
  %42 = and i32 %41, %38, !dbg !9858
  %43 = sub i32 %40, %42, !dbg !9859
  %44 = icmp ugt i32 %37, %43, !dbg !9860
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !9861
  call void @llvm.dbg.value(metadata i32 %45, metadata !9823, metadata !DIExpression()), !dbg !9830
  call void @llvm.dbg.value(metadata i32 %45, metadata !9824, metadata !DIExpression()), !dbg !9830
  store i32 %45, i32* %6, align 4, !dbg !9862
  call void @llvm.dbg.value(metadata i8* %36, metadata !9820, metadata !DIExpression()), !dbg !9830
  %46 = ptrtoint i8* %36 to i32, !dbg !9863
  %47 = and i32 %46, 134217728, !dbg !9864
  %48 = icmp eq i32 %47, 0, !dbg !9864
  br i1 %48, label %58, label %49, !dbg !9865

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !9826, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata i32 %45, metadata !9824, metadata !DIExpression()), !dbg !9830
  %50 = icmp eq i32 %45, 0, !dbg !9867
  br i1 %50, label %58, label %51, !dbg !9870

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !9826, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata i8* %36, metadata !9820, metadata !DIExpression()), !dbg !9830
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !9871
  %54 = load i8, i8* %53, align 1, !dbg !9871
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !9873
  store i8 %54, i8* %55, align 1, !dbg !9874
  %56 = add nuw i32 %52, 1, !dbg !9875
  call void @llvm.dbg.value(metadata i32 %56, metadata !9826, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata i32 %45, metadata !9824, metadata !DIExpression()), !dbg !9830
  %57 = icmp eq i32 %56, %45, !dbg !9867
  br i1 %57, label %58, label %51, !dbg !9870, !llvm.loop !9876

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !9878
  call void @llvm.dbg.value(metadata i8* %59, metadata !9821, metadata !DIExpression()), !dbg !9830
  %60 = load i32, i32* %29, align 4, !dbg !9879
  %61 = and i32 %60, 16, !dbg !9881
  %62 = icmp eq i32 %61, 0, !dbg !9881
  br i1 %62, label %63, label %64, !dbg !9882

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #21, !dbg !9883
  br label %64, !dbg !9885

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !9886
  %66 = icmp eq i8 %65, 4, !dbg !9888
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !9889
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !9889
  %69 = load i8, i8* %68, align 1, !dbg !9889
  %70 = zext i8 %69 to i32, !dbg !9889
  br i1 %66, label %71, label %75, !dbg !9890

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !9820, metadata !DIExpression(DW_OP_deref)), !dbg !9830
  call void @llvm.dbg.value(metadata i32* %6, metadata !9824, metadata !DIExpression(DW_OP_deref)), !dbg !9830
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #20, !dbg !9891
  call void @llvm.dbg.value(metadata i32 %72, metadata !9825, metadata !DIExpression()), !dbg !9830
  %73 = load i8*, i8** %5, align 4, !dbg !9893
  call void @llvm.dbg.value(metadata i8* %73, metadata !9820, metadata !DIExpression()), !dbg !9830
  %74 = load i32, i32* %6, align 4, !dbg !9894
  call void @llvm.dbg.value(metadata i32 %74, metadata !9824, metadata !DIExpression()), !dbg !9830
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #20, !dbg !9895
  br label %79, !dbg !9896

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #20, !dbg !9897
  call void @llvm.dbg.value(metadata i32 %76, metadata !9825, metadata !DIExpression()), !dbg !9830
  %77 = load i8*, i8** %5, align 4, !dbg !9899
  call void @llvm.dbg.value(metadata i8* %77, metadata !9820, metadata !DIExpression()), !dbg !9830
  %78 = load i32, i32* %6, align 4, !dbg !9900
  call void @llvm.dbg.value(metadata i32 %78, metadata !9824, metadata !DIExpression()), !dbg !9830
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #20, !dbg !9901
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !9889
  call void @llvm.dbg.value(metadata i32 %80, metadata !9825, metadata !DIExpression()), !dbg !9830
  %81 = call i32 @SaveAndSetIRQMask() #21, !dbg !9902
  call void @llvm.dbg.value(metadata i32 %81, metadata !9818, metadata !DIExpression()), !dbg !9830
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9903
  %82 = load i8, i8* %30, align 1, !dbg !9904
  %83 = zext i8 %82 to i32, !dbg !9905
  %84 = add i32 %45, 1, !dbg !9906
  %85 = add i32 %84, %83, !dbg !9907
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9908
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9909
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !9910
  %86 = load i16, i16* %34, align 2, !dbg !9911
  call void @SFI_MacEnable(i16 noundef zeroext %86) #20, !dbg !9912
  %87 = load i16, i16* %34, align 2, !dbg !9913
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #20, !dbg !9914
  call void @RestoreIRQMask(i32 noundef %81) #21, !dbg !9915
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !9916

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !9917
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #21, !dbg !9919
  call void @llvm.dbg.value(metadata i32 %94, metadata !9822, metadata !DIExpression()), !dbg !9830
  %95 = icmp eq i32 %94, 0, !dbg !9920
  br i1 %95, label %92, label %96, !dbg !9921, !llvm.loop !9922

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !9924
  call void @llvm.dbg.value(metadata i32 %97, metadata !9824, metadata !DIExpression()), !dbg !9830
  %98 = load i8*, i8** %5, align 4, !dbg !9925
  call void @llvm.dbg.value(metadata i8* %98, metadata !9820, metadata !DIExpression()), !dbg !9830
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !9925
  call void @llvm.dbg.value(metadata i8* %99, metadata !9820, metadata !DIExpression()), !dbg !9830
  store i8* %99, i8** %5, align 4, !dbg !9925
  %100 = sub i32 %37, %45, !dbg !9926
  call void @llvm.dbg.value(metadata i32 %100, metadata !9816, metadata !DIExpression()), !dbg !9830
  call void @llvm.dbg.value(metadata i32 undef, metadata !9819, metadata !DIExpression()), !dbg !9830
  %101 = icmp eq i32 %94, 1, !dbg !9927
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !9929
  br i1 %103, label %35, label %104, !dbg !9929, !llvm.loop !9930

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !9830
  call void @llvm.dbg.value(metadata i32 %105, metadata !9822, metadata !DIExpression()), !dbg !9830
  store i8 0, i8* %21, align 4, !dbg !9932
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9933
  %106 = icmp eq i32 %105, 1, !dbg !9934
  %107 = select i1 %106, i32 0, i32 %105, !dbg !9830
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #22, !dbg !9936
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #22, !dbg !9936
  ret i32 %107, !dbg !9936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #10 section ".ram_code" !dbg !9937 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9939, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.value(metadata i32 undef, metadata !9940, metadata !DIExpression()), !dbg !9941
  ret i32 -12, !dbg !9942
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !9943 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9945, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i32 undef, metadata !9946, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i32 0, metadata !9948, metadata !DIExpression()), !dbg !9955
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9956
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9949, metadata !DIExpression()), !dbg !9955
  %4 = bitcast i8* %0 to i32*, !dbg !9957
  %5 = load i32, i32* %4, align 4, !dbg !9957
  %6 = xor i32 %5, -1, !dbg !9957
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9957
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !9957
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !9957
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !9957
  %11 = icmp eq i32 %6, %10, !dbg !9957
  br i1 %11, label %13, label %12, !dbg !9960

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !9961
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !9961
  unreachable, !dbg !9961

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9963
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !9963
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9963
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !9964
  %18 = load i8, i8* %17, align 1, !dbg !9964
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #21, !dbg !9965
  call void @llvm.dbg.value(metadata i32 %19, metadata !9950, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9955
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9966
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !9967
  %22 = load i8, i8* %21, align 1, !dbg !9967
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #21, !dbg !9968
  call void @llvm.dbg.value(metadata i32 %23, metadata !9951, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9955
  %24 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9969
  call void @llvm.dbg.value(metadata i32 %24, metadata !9948, metadata !DIExpression()), !dbg !9955
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9970
  %26 = bitcast i8* %25 to i8**, !dbg !9970
  %27 = load i8*, i8** %26, align 4, !dbg !9970
  %28 = load i8, i8* %27, align 1, !dbg !9971
  %29 = zext i8 %28 to i32, !dbg !9971
  %30 = and i32 %19, %29, !dbg !9972
  %31 = icmp eq i32 %30, 0, !dbg !9973
  br i1 %31, label %32, label %62, !dbg !9974

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !9951, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9955
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !9975
  %34 = load i8, i8* %33, align 1, !dbg !9975
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !9976
  %36 = load i8, i8* %35, align 1, !dbg !9976
  %37 = or i8 %36, %34, !dbg !9977
  call void @llvm.dbg.value(metadata i8 %37, metadata !9952, metadata !DIExpression()), !dbg !9978
  %38 = zext i8 %37 to i32, !dbg !9979
  %39 = and i32 %23, %38, !dbg !9981
  %40 = icmp eq i32 %39, 0, !dbg !9982
  br i1 %40, label %41, label %46, !dbg !9983

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !9984
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !9985
  br i1 %45, label %51, label %46, !dbg !9985

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9986, !range !2756
  %48 = icmp eq i8 %47, 0, !dbg !9986
  br i1 %48, label %49, label %50, !dbg !9990

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #21, !dbg !9991
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !9991
  unreachable, !dbg !9991

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9993
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9994
  call void @llvm.dbg.value(metadata i32 -121, metadata !9947, metadata !DIExpression()), !dbg !9955
  br label %62, !dbg !9995

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !9996
  %53 = bitcast i8* %52 to i32*, !dbg !9996
  %54 = load i32, i32* %53, align 4, !dbg !9996
  %55 = and i32 %54, 2, !dbg !9999
  %56 = icmp eq i32 %55, 0, !dbg !9999
  br i1 %56, label %63, label %57, !dbg !10000

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !10001
  %59 = bitcast i8* %58 to i16*, !dbg !10001
  %60 = load i16, i16* %59, align 2, !dbg !10001
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #20, !dbg !10003
  %61 = load i16, i16* %59, align 2, !dbg !10004
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #20, !dbg !10005
  br label %63, !dbg !10006

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !9947, metadata !DIExpression()), !dbg !9955
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !10007
  br label %65, !dbg !10008

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !10009
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !10010
  call void @llvm.dbg.value(metadata i32 0, metadata !9947, metadata !DIExpression()), !dbg !9955
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !10007
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !10011
  call void @llvm.dbg.value(metadata i32 %64, metadata !9947, metadata !DIExpression()), !dbg !9955
  br label %65, !dbg !10014

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !9955
  call void @llvm.dbg.value(metadata i32 %66, metadata !9947, metadata !DIExpression()), !dbg !9955
  ret i32 %66, !dbg !10015
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !10016 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10018, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata i32 undef, metadata !10019, metadata !DIExpression()), !dbg !10023
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10024
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !10020, metadata !DIExpression()), !dbg !10023
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10025
  call void @llvm.dbg.value(metadata i32 %4, metadata !10022, metadata !DIExpression()), !dbg !10023
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #21, !dbg !10026
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !10027

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !10028
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !10030
  %12 = load i8, i8* %11, align 1, !dbg !10030
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #21, !dbg !10031
  call void @llvm.dbg.value(metadata i32 %13, metadata !10021, metadata !DIExpression()), !dbg !10023
  %14 = load i8*, i8** %8, align 4, !dbg !10032
  %15 = load i8, i8* %14, align 1, !dbg !10034
  %16 = zext i8 %15 to i32, !dbg !10034
  %17 = and i32 %13, %16, !dbg !10035
  %18 = icmp eq i32 %17, 0, !dbg !10036
  br i1 %18, label %19, label %9, !dbg !10037, !llvm.loop !10038

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !10040
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !10041
  ret i32 0, !dbg !10042
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !10043 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10045, metadata !DIExpression()), !dbg !10048
  call void @llvm.dbg.value(metadata i32 undef, metadata !10046, metadata !DIExpression()), !dbg !10048
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10049
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !10047, metadata !DIExpression()), !dbg !10048
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !10050
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #21, !dbg !10051
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !10052
  ret i32 0, !dbg !10053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #10 section ".ram_code" !dbg !10054 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !10056, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.value(metadata i8* undef, metadata !10057, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.value(metadata i32 undef, metadata !10058, metadata !DIExpression()), !dbg !10059
  ret i32 0, !dbg !10060
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !10061 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10063, metadata !DIExpression()), !dbg !10067
  call void @llvm.dbg.value(metadata i32 %1, metadata !10064, metadata !DIExpression()), !dbg !10067
  call void @llvm.dbg.value(metadata i8* undef, metadata !10065, metadata !DIExpression()), !dbg !10067
  call void @llvm.dbg.value(metadata i8* %0, metadata !10066, metadata !DIExpression()), !dbg !10067
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !10068

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !10066, metadata !DIExpression()), !dbg !10067
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !10069
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !10069
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !10069
  %8 = tail call i32 %7(i8* noundef %0) #20, !dbg !10072
  br label %21, !dbg !10073

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !10074
  %11 = load i8, i8* %10, align 1, !dbg !10078
  %12 = icmp eq i8 %11, -62, !dbg !10079
  br i1 %12, label %13, label %21, !dbg !10080

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10081
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !10081
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !10081
  %17 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %16, i32 0, i32 0, !dbg !10082
  %18 = load i32, i32* %17, align 4, !dbg !10082
  %19 = icmp eq i32 %18, 262144, !dbg !10083
  br i1 %19, label %22, label %21, !dbg !10084

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !10085
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !10085
  unreachable, !dbg !10085

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !10090

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !10067
  ret i32 %23, !dbg !10091
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !10092 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10094, metadata !DIExpression()), !dbg !10097
  call void @llvm.dbg.value(metadata i8* %0, metadata !10095, metadata !DIExpression()), !dbg !10097
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10098
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !10098
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !10098
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !10100
  %6 = load i8, i8* %5, align 1, !dbg !10100
  %7 = icmp eq i8 %6, 0, !dbg !10101
  br i1 %7, label %19, label %8, !dbg !10102

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10103
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !10095, metadata !DIExpression()), !dbg !10097
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #21, !dbg !10104
  call void @llvm.dbg.value(metadata i32 %10, metadata !10096, metadata !DIExpression()), !dbg !10097
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !10106
  %12 = bitcast i8* %11 to i8**, !dbg !10106
  %13 = load i8*, i8** %12, align 4, !dbg !10106
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !10108
  %15 = load i8, i8* %14, align 1, !dbg !10108
  %16 = zext i8 %15 to i32, !dbg !10108
  %17 = and i32 %10, %16, !dbg !10109
  %18 = icmp eq i32 %17, 0, !dbg !10109
  br i1 %18, label %19, label %20, !dbg !10110

19:                                               ; preds = %8, %1
  br label %20, !dbg !10111

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !10097
  ret i32 %21, !dbg !10112
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !10113 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10117, metadata !DIExpression()), !dbg !10125
  call void @llvm.dbg.value(metadata i32 %1, metadata !10118, metadata !DIExpression()), !dbg !10125
  call void @llvm.dbg.value(metadata i8 %2, metadata !10119, metadata !DIExpression()), !dbg !10125
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10126
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !10121, metadata !DIExpression()), !dbg !10125
  call void @llvm.dbg.value(metadata i32 0, metadata !10122, metadata !DIExpression()), !dbg !10125
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10127
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !10127
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !10127
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !10128
  %9 = load i8, i8* %8, align 1, !dbg !10128
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #21, !dbg !10129
  call void @llvm.dbg.value(metadata i32 %10, metadata !10124, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10125
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !10130, !range !2756
  %12 = icmp eq i8 %11, 0, !dbg !10130
  br i1 %12, label %18, label %13, !dbg !10132

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !10133, !range !2756
  %15 = icmp eq i8 %14, 0, !dbg !10133
  br i1 %15, label %16, label %17, !dbg !10137

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #21, !dbg !10138
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !10138
  unreachable, !dbg !10138

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #21, !dbg !10140
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !10141
  br label %42, !dbg !10142

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !10124, metadata !DIExpression()), !dbg !10125
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !10143
  %20 = bitcast i8* %19 to i8**, !dbg !10143
  %21 = load i8*, i8** %20, align 4, !dbg !10143
  %22 = load i8, i8* %21, align 1, !dbg !10145
  %23 = zext i8 %22 to i32, !dbg !10145
  %24 = and i32 %10, %23, !dbg !10146
  %25 = icmp eq i32 %24, 0, !dbg !10147
  br i1 %25, label %26, label %42, !dbg !10148

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10149
  call void @llvm.dbg.value(metadata i32 %27, metadata !10120, metadata !DIExpression()), !dbg !10125
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !10151
  %28 = inttoptr i32 %1 to i8*, !dbg !10152
  %29 = load volatile i8, i8* %28, align 1, !dbg !10153
  call void @llvm.dbg.value(metadata i8 %29, metadata !10123, metadata !DIExpression()), !dbg !10125
  %30 = icmp eq i8 %29, %2, !dbg !10154
  br i1 %30, label %39, label %31, !dbg !10156

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !10122, metadata !DIExpression()), !dbg !10125
  %32 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !10157
  br i1 %32, label %33, label %38, !dbg !10160

33:                                               ; preds = %31
  %34 = and i32 %1, -32, !dbg !10161
  %35 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %34) #20, !dbg !10163
  %36 = load volatile i8, i8* %28, align 1, !dbg !10164
  %37 = icmp eq i8 %36, %2, !dbg !10166
  br i1 %37, label %39, label %38, !dbg !10167

38:                                               ; preds = %33, %31
  call void @llvm.dbg.value(metadata i32 -1, metadata !10122, metadata !DIExpression()), !dbg !10125
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !10168
  br label %42, !dbg !10169

39:                                               ; preds = %33, %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !10122, metadata !DIExpression()), !dbg !10125
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !10168
  %40 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !10170
  %41 = icmp eq i32 %40, 0, !dbg !10173
  br i1 %41, label %42, label %44, !dbg !10174

42:                                               ; preds = %18, %17, %38, %39
  %43 = phi i32 [ 1, %39 ], [ -1, %38 ], [ 0, %17 ], [ 0, %18 ]
  br label %44, !dbg !10175

44:                                               ; preds = %39, %42
  %45 = phi i32 [ %43, %42 ], [ -1, %39 ], !dbg !10125
  ret i32 %45, !dbg !10176
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !10177 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10181, metadata !DIExpression()), !dbg !10184
  call void @llvm.dbg.value(metadata i32 %1, metadata !10182, metadata !DIExpression()), !dbg !10184
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !10185
  %4 = load i32, i32* %3, align 4, !dbg !10185
  %5 = and i32 %4, 16, !dbg !10187
  %6 = icmp eq i32 %5, 0, !dbg !10187
  br i1 %6, label %7, label %8, !dbg !10188

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #21, !dbg !10189
  br label %8, !dbg !10191

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10192
  call void @llvm.dbg.value(metadata i32 %9, metadata !10183, metadata !DIExpression()), !dbg !10184
  tail call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !10193
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !10194
  %11 = load i16, i16* %10, align 2, !dbg !10194
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !10195
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !10195
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !10196
  %15 = load i8, i8* %14, align 1, !dbg !10196
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !10197
  %17 = load i8, i8* %16, align 1, !dbg !10197
  %18 = zext i8 %17 to i32, !dbg !10198
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #20, !dbg !10199
  tail call void @RestoreIRQMask(i32 noundef %9) #21, !dbg !10200
  ret void, !dbg !10201
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !10202 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !10204, metadata !DIExpression()), !dbg !10207
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10205, metadata !DIExpression()), !dbg !10207
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !10208
  %4 = load i8, i8* %3, align 1, !dbg !10208
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !10209

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !10210
  %7 = load i32, i32* %6, align 4, !dbg !10212
  %8 = or i32 %7, 4, !dbg !10212
  store i32 %8, i32* %6, align 4, !dbg !10212
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10213
  call void @llvm.dbg.value(metadata i32 0, metadata !10206, metadata !DIExpression()), !dbg !10207
  br label %18, !dbg !10214

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !10215
  %12 = load i32, i32* %11, align 4, !dbg !10216
  %13 = or i32 %12, 2, !dbg !10216
  store i32 %13, i32* %11, align 4, !dbg !10216
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10217
  call void @llvm.dbg.value(metadata i32 0, metadata !10206, metadata !DIExpression()), !dbg !10207
  call void @llvm.dbg.value(metadata i32 0, metadata !10206, metadata !DIExpression()), !dbg !10207
  br label %18, !dbg !10218

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10219
  call void @llvm.dbg.value(metadata i32 0, metadata !10206, metadata !DIExpression()), !dbg !10207
  br label %18, !dbg !10220

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !10206, metadata !DIExpression()), !dbg !10207
  tail call void @Flash_ReturnReady() #21, !dbg !10221
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.140, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.141, i32 0, i32 0)) #23, !dbg !10221
  unreachable, !dbg !10221

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !10206, metadata !DIExpression()), !dbg !10207
  ret i32 0, !dbg !10225
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10226 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !10230, metadata !DIExpression()), !dbg !10235
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10231, metadata !DIExpression()), !dbg !10235
  call void @llvm.dbg.value(metadata i32 %2, metadata !10232, metadata !DIExpression()), !dbg !10235
  call void @llvm.dbg.value(metadata i32 %3, metadata !10233, metadata !DIExpression()), !dbg !10235
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !10236
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !10238
  br i1 %7, label %33, label %8, !dbg !10238

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !10239
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !10239
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !10241
  br i1 %11, label %33, label %12, !dbg !10242

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !10243
  %14 = load i8*, i8** %13, align 4, !dbg !10243
  %15 = icmp eq i8* %14, null, !dbg !10244
  br i1 %15, label %33, label %16, !dbg !10245

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !10246
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !10247
  store i8* %17, i8** %18, align 4, !dbg !10248
  %19 = trunc i32 %3 to i16, !dbg !10249
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !10250
  store i16 %19, i16* %20, align 2, !dbg !10251
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10252
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !10253
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !10254
  store i8 -81, i8* %23, align 1, !dbg !10255
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !10256
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !10257
  %25 = load i8, i8* %24, align 1, !dbg !10258
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !10260

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #20, !dbg !10261
  br i1 %27, label %31, label %28, !dbg !10262

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !10263
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !10265
  store i8 -97, i8* %30, align 1, !dbg !10266
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !10267
  br label %31, !dbg !10268

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10269
  call void @llvm.dbg.value(metadata i32 0, metadata !10234, metadata !DIExpression()), !dbg !10235
  br label %33, !dbg !10270

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !10235
  ret i32 %34, !dbg !10271
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !10272 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10276, metadata !DIExpression()), !dbg !10279
  call void @llvm.dbg.value(metadata i8* %1, metadata !10277, metadata !DIExpression()), !dbg !10279
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !10280
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !10281
  %5 = and i32 %4, 1, !dbg !10281
  %6 = icmp eq i32 %5, 0, !dbg !10283
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !10284
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !10284
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !10285
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !10285
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !10285
  %12 = load i8, i8* %11, align 1, !dbg !10284
  store i8 %12, i8* %3, align 1, !dbg !10284
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !10286
  %14 = load i16, i16* %13, align 2, !dbg !10286
  call void @llvm.dbg.value(metadata i8* %3, metadata !10278, metadata !DIExpression(DW_OP_deref)), !dbg !10279
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !10287
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !10288
  ret void, !dbg !10288
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !10289 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10293, metadata !DIExpression()), !dbg !10299
  call void @llvm.dbg.value(metadata i8* %1, metadata !10294, metadata !DIExpression()), !dbg !10299
  call void @llvm.dbg.value(metadata i8* %2, metadata !10295, metadata !DIExpression()), !dbg !10299
  call void @llvm.dbg.value(metadata i16 %3, metadata !10296, metadata !DIExpression()), !dbg !10299
  call void @llvm.dbg.value(metadata i16 %4, metadata !10297, metadata !DIExpression()), !dbg !10299
  %6 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10300
  call void @llvm.dbg.value(metadata i32 %6, metadata !10298, metadata !DIExpression()), !dbg !10299
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #20, !dbg !10301
  tail call void @RestoreIRQMask(i32 noundef %6) #21, !dbg !10302
  ret void, !dbg !10303
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !10304 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10306, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10309, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.value(metadata i32 0, metadata !10307, metadata !DIExpression()), !dbg !10312
  br label %6, !dbg !10313

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !10315
  call void @llvm.dbg.value(metadata i32 %3, metadata !10307, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.value(metadata i32 %8, metadata !10307, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10312
  %4 = icmp ult i32 %8, 4, !dbg !10317
  %5 = icmp eq i32 %3, 5, !dbg !10317
  br i1 %5, label %26, label %6, !dbg !10313, !llvm.loop !10318

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10307, metadata !DIExpression()), !dbg !10312
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10308, metadata !DIExpression()), !dbg !10312
  %12 = icmp eq i8 %10, 0, !dbg !10320
  br i1 %12, label %23, label %13, !dbg !10324

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10308, metadata !DIExpression()), !dbg !10312
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10325
  %16 = load i8, i8* %15, align 1, !dbg !10325
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !10328
  %18 = load i8, i8* %17, align 1, !dbg !10328
  %19 = icmp eq i8 %16, %18, !dbg !10329
  br i1 %19, label %20, label %23, !dbg !10330

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !10331
  call void @llvm.dbg.value(metadata i32 %21, metadata !10308, metadata !DIExpression()), !dbg !10312
  %22 = icmp eq i32 %21, %11, !dbg !10320
  br i1 %22, label %26, label %13, !dbg !10324, !llvm.loop !10332

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !10334
  %25 = icmp eq i32 %24, %11, !dbg !10335
  call void @llvm.dbg.value(metadata i32 %8, metadata !10307, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10312
  br i1 %25, label %26, label %2, !dbg !10337

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !10317
  ret i1 %27, !dbg !10338
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !10339 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !10350
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10350
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !10343, metadata !DIExpression()), !dbg !10351
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10349, metadata !DIExpression()), !dbg !10352
  %3 = load i16, i16* @cmem_index, align 2, !dbg !10353
  %4 = icmp sgt i16 %3, -1, !dbg !10355
  br i1 %4, label %34, label %5, !dbg !10356

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !10357
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #20, !dbg !10358
  call void @llvm.dbg.value(metadata i32 0, metadata !10341, metadata !DIExpression()), !dbg !10352
  br label %7, !dbg !10359

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10341, metadata !DIExpression()), !dbg !10352
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10342, metadata !DIExpression()), !dbg !10352
  %12 = icmp eq i8 %10, 0, !dbg !10361
  br i1 %12, label %24, label %13, !dbg !10366

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10342, metadata !DIExpression()), !dbg !10352
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10367
  %16 = load i8, i8* %15, align 1, !dbg !10367
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !10370
  %18 = load i16, i16* %17, align 2, !dbg !10370
  %19 = zext i8 %16 to i16, !dbg !10371
  %20 = icmp eq i16 %18, %19, !dbg !10371
  br i1 %20, label %21, label %24, !dbg !10372

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !10373
  call void @llvm.dbg.value(metadata i32 %22, metadata !10342, metadata !DIExpression()), !dbg !10352
  %23 = icmp eq i32 %22, %11, !dbg !10361
  br i1 %23, label %27, label %13, !dbg !10366, !llvm.loop !10374

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !10376
  %26 = icmp eq i32 %25, %11, !dbg !10377
  br i1 %26, label %27, label %29, !dbg !10379

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !10380
  store i16 %28, i16* @cmem_index, align 2, !dbg !10382
  br label %34, !dbg !10383

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !10384
  call void @llvm.dbg.value(metadata i32 %30, metadata !10341, metadata !DIExpression()), !dbg !10352
  %31 = icmp eq i32 %30, 5, !dbg !10385
  br i1 %31, label %32, label %7, !dbg !10359, !llvm.loop !10386

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !10388
  br label %34, !dbg !10388

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !10352
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10389
  ret i32 %36, !dbg !10389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #10 !dbg !10390 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10394, metadata !DIExpression()), !dbg !10395
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !10396
  ret %struct.CMEMEntryID* %2, !dbg !10397
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !10398 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !10402, metadata !DIExpression()), !dbg !10409
  call void @llvm.dbg.value(metadata i8* undef, metadata !10403, metadata !DIExpression()), !dbg !10409
  call void @llvm.dbg.value(metadata i16* %2, metadata !10404, metadata !DIExpression()), !dbg !10409
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10410
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !10410
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10410
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !10407, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.value(metadata i8 -81, metadata !10405, metadata !DIExpression()), !dbg !10412
  store i8 -81, i8* %4, align 1, !dbg !10413
  call void @llvm.dbg.value(metadata i8* %4, metadata !10405, metadata !DIExpression(DW_OP_deref)), !dbg !10412
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10414
  %7 = load i8, i8* %6, align 1, !dbg !10415
  %8 = add i8 %7, 1, !dbg !10417
  %9 = icmp ult i8 %8, 2, !dbg !10417
  br i1 %9, label %12, label %10, !dbg !10417

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #21, !dbg !10418
  br i1 %11, label %13, label %12, !dbg !10419

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !10405, metadata !DIExpression()), !dbg !10412
  store i8 -97, i8* %4, align 1, !dbg !10420
  call void @llvm.dbg.value(metadata i8* %4, metadata !10405, metadata !DIExpression(DW_OP_deref)), !dbg !10412
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10422
  br label %13, !dbg !10423

13:                                               ; preds = %12, %10
  br label %14, !dbg !10424

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !10408, metadata !DIExpression()), !dbg !10412
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !10426
  %17 = load i8, i8* %16, align 1, !dbg !10426
  %18 = zext i8 %17 to i16, !dbg !10426
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !10429
  store i16 %18, i16* %19, align 2, !dbg !10430
  %20 = add nuw nsw i32 %15, 1, !dbg !10431
  call void @llvm.dbg.value(metadata i32 %20, metadata !10408, metadata !DIExpression()), !dbg !10412
  %21 = icmp eq i32 %20, 3, !dbg !10432
  br i1 %21, label %22, label %14, !dbg !10424, !llvm.loop !10433

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10435
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10435
  ret void, !dbg !10436
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 section ".ram_code" !dbg !10437 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10439, metadata !DIExpression()), !dbg !10443
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10442, metadata !DIExpression()), !dbg !10443
  call void @llvm.dbg.value(metadata i32 0, metadata !10440, metadata !DIExpression()), !dbg !10443
  br label %6, !dbg !10444

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !10446
  call void @llvm.dbg.value(metadata i32 %3, metadata !10440, metadata !DIExpression()), !dbg !10443
  call void @llvm.dbg.value(metadata i32 %8, metadata !10440, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10443
  %4 = icmp ult i32 %8, 4, !dbg !10448
  %5 = icmp eq i32 %3, 5, !dbg !10448
  br i1 %5, label %26, label %6, !dbg !10444, !llvm.loop !10449

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10440, metadata !DIExpression()), !dbg !10443
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10441, metadata !DIExpression()), !dbg !10443
  %12 = icmp eq i8 %10, 0, !dbg !10451
  br i1 %12, label %23, label %13, !dbg !10455

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10441, metadata !DIExpression()), !dbg !10443
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10456
  %16 = load i8, i8* %15, align 1, !dbg !10456
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !10459
  %18 = load i8, i8* %17, align 1, !dbg !10459
  %19 = icmp eq i8 %16, %18, !dbg !10460
  br i1 %19, label %20, label %23, !dbg !10461

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !10462
  call void @llvm.dbg.value(metadata i32 %21, metadata !10441, metadata !DIExpression()), !dbg !10443
  %22 = icmp eq i32 %21, %11, !dbg !10451
  br i1 %22, label %26, label %13, !dbg !10455, !llvm.loop !10463

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !10465
  %25 = icmp eq i32 %24, %11, !dbg !10466
  call void @llvm.dbg.value(metadata i32 %8, metadata !10440, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10443
  br i1 %25, label %26, label %2, !dbg !10468

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !10448
  ret i1 %27, !dbg !10469
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !10470 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !10476
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10476
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !10474, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10475, metadata !DIExpression()), !dbg !10478
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !10479
  %4 = icmp sgt i16 %3, -1, !dbg !10481
  br i1 %4, label %34, label %5, !dbg !10482

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !10483
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #21, !dbg !10484
  call void @llvm.dbg.value(metadata i32 0, metadata !10472, metadata !DIExpression()), !dbg !10478
  br label %7, !dbg !10485

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10472, metadata !DIExpression()), !dbg !10478
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10473, metadata !DIExpression()), !dbg !10478
  %12 = icmp eq i8 %10, 0, !dbg !10487
  br i1 %12, label %24, label %13, !dbg !10492

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10473, metadata !DIExpression()), !dbg !10478
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10493
  %16 = load i8, i8* %15, align 1, !dbg !10493
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !10496
  %18 = load i16, i16* %17, align 2, !dbg !10496
  %19 = zext i8 %16 to i16, !dbg !10497
  %20 = icmp eq i16 %18, %19, !dbg !10497
  br i1 %20, label %21, label %24, !dbg !10498

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !10499
  call void @llvm.dbg.value(metadata i32 %22, metadata !10473, metadata !DIExpression()), !dbg !10478
  %23 = icmp eq i32 %22, %11, !dbg !10487
  br i1 %23, label %27, label %13, !dbg !10492, !llvm.loop !10500

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !10502
  %26 = icmp eq i32 %25, %11, !dbg !10503
  br i1 %26, label %27, label %29, !dbg !10505

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !10506
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !10508
  br label %34, !dbg !10509

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !10510
  call void @llvm.dbg.value(metadata i32 %30, metadata !10472, metadata !DIExpression()), !dbg !10478
  %31 = icmp eq i32 %30, 5, !dbg !10511
  br i1 %31, label %32, label %7, !dbg !10485, !llvm.loop !10512

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !10514
  br label %34, !dbg !10514

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !10478
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10515
  ret i32 %36, !dbg !10515
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !10516 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !10524, metadata !DIExpression()), !dbg !10532
  call void @llvm.dbg.value(metadata i16* %1, metadata !10525, metadata !DIExpression()), !dbg !10532
  call void @llvm.dbg.value(metadata i16* %2, metadata !10526, metadata !DIExpression()), !dbg !10532
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10533
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !10533
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10533
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !10530, metadata !DIExpression()), !dbg !10534
  call void @llvm.dbg.value(metadata i8 -81, metadata !10528, metadata !DIExpression()), !dbg !10535
  store i8 -81, i8* %4, align 1, !dbg !10536
  %7 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !10537
  call void @llvm.dbg.value(metadata i32 %7, metadata !10527, metadata !DIExpression()), !dbg !10532
  call void @llvm.dbg.value(metadata i8* %4, metadata !10528, metadata !DIExpression(DW_OP_deref)), !dbg !10535
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10538
  call void @RestoreIRQMask(i32 noundef %7) #20, !dbg !10539
  %8 = load i8, i8* %6, align 1, !dbg !10540
  %9 = add i8 %8, 1, !dbg !10542
  %10 = icmp ult i8 %9, 2, !dbg !10542
  br i1 %10, label %13, label %11, !dbg !10542

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #20, !dbg !10543
  br i1 %12, label %15, label %13, !dbg !10544

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !10528, metadata !DIExpression()), !dbg !10535
  store i8 -97, i8* %4, align 1, !dbg !10545
  %14 = call i32 @SaveAndSetIRQMask() #20, !dbg !10547
  call void @llvm.dbg.value(metadata i32 %14, metadata !10527, metadata !DIExpression()), !dbg !10532
  call void @llvm.dbg.value(metadata i8* %4, metadata !10528, metadata !DIExpression(DW_OP_deref)), !dbg !10535
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10548
  call void @RestoreIRQMask(i32 noundef %14) #20, !dbg !10549
  br label %15, !dbg !10550

15:                                               ; preds = %13, %11
  br label %16, !dbg !10551

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !10531, metadata !DIExpression()), !dbg !10535
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !10553
  %19 = load i8, i8* %18, align 1, !dbg !10553
  %20 = zext i8 %19 to i16, !dbg !10553
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !10556
  store i16 %20, i16* %21, align 2, !dbg !10557
  %22 = add nuw nsw i32 %17, 1, !dbg !10558
  call void @llvm.dbg.value(metadata i32 %22, metadata !10531, metadata !DIExpression()), !dbg !10535
  %23 = icmp eq i32 %22, 3, !dbg !10559
  br i1 %23, label %24, label %16, !dbg !10551, !llvm.loop !10560

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10562
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10562
  ret void, !dbg !10563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #10 !dbg !10564 {
  ret i32 3932160, !dbg !10565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #10 !dbg !10566 {
  ret i32 4194304, !dbg !10567
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !10568 {
  %1 = tail call i32 @ComboMem_Initialize() #20, !dbg !10569
  ret void, !dbg !10570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #10 !dbg !10571 {
  ret void, !dbg !10572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #10 !dbg !10573 {
  ret void, !dbg !10574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #10 !dbg !10575 {
  ret i32 3932160, !dbg !10576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #10 !dbg !10577 {
  ret i32 262144, !dbg !10578
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !10579 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #20, !dbg !10580
  ret void, !dbg !10581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #10 !dbg !10582 {
  ret i32 134217728, !dbg !10583
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #10 !dbg !10584 {
  ret i32 4194304, !dbg !10585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #6 !dbg !10586 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !10587
  ret i32 134217728, !dbg !10588
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !10589 {
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !10590
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10591
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10592
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !10593
  %4 = load i16, i16* %3, align 2, !dbg !10593
  %5 = zext i16 %4 to i32, !dbg !10591
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !10594
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.hal_cache_region_config_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #20, !dbg !10595
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !10596
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !10597
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !10598
  ret i32 0, !dbg !10599
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !10600 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !10603
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !10604
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !10605
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !10606
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !10607
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10608
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !10609
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !10610
  %5 = load i32, i32* %4, align 4, !dbg !10610
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #20, !dbg !10611
  call void @llvm.dbg.value(metadata i32 %6, metadata !10602, metadata !DIExpression()), !dbg !10612
  %7 = icmp eq i32 %6, -120, !dbg !10613
  %8 = select i1 %7, i32 5, i32 0, !dbg !10612
  ret i32 %8, !dbg !10615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #10 !dbg !10616 {
  ret i8 1, !dbg !10618
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !10619 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !10623, metadata !DIExpression()), !dbg !10626
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10625, metadata !DIExpression()), !dbg !10626
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10627
  call void @llvm.dbg.value(metadata i32 %2, metadata !10624, metadata !DIExpression()), !dbg !10626
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10625, metadata !DIExpression()), !dbg !10626
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !10628
  %4 = load i32, i32* %3, align 4, !dbg !10628
  ret i32 %4, !dbg !10629
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !10630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10634, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !10635, metadata !DIExpression()), !dbg !10637
  %3 = and i32 %0, 134217727, !dbg !10638
  call void @llvm.dbg.value(metadata i32 %3, metadata !10634, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata i16 0, metadata !10636, metadata !DIExpression()), !dbg !10637
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 1, i32 1, !dbg !10639
  %5 = load i32, i32* %4, align 4, !dbg !10639
  %6 = icmp eq i32 %5, 0, !dbg !10642
  br i1 %6, label %25, label %7, !dbg !10643

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !10636, metadata !DIExpression()), !dbg !10637
  %11 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %9, i32 0, !dbg !10644
  %12 = load i32, i32* %11, align 4, !dbg !10644
  %13 = icmp ult i32 %3, %12, !dbg !10647
  br i1 %13, label %18, label %14, !dbg !10648

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %8, i32 0, !dbg !10649
  %16 = load i32, i32* %15, align 4, !dbg !10649
  %17 = icmp ult i32 %3, %16, !dbg !10650
  br i1 %17, label %25, label %18, !dbg !10651

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !10652
  call void @llvm.dbg.value(metadata i16 %19, metadata !10636, metadata !DIExpression()), !dbg !10637
  %20 = zext i16 %19 to i32, !dbg !10653
  %21 = add nuw nsw i32 %20, 1, !dbg !10654
  %22 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %21, i32 1, !dbg !10639
  %23 = load i32, i32* %22, align 4, !dbg !10639
  %24 = icmp eq i32 %23, 0, !dbg !10642
  br i1 %24, label %25, label %7, !dbg !10643, !llvm.loop !10655

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !10653
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %26, i32 1, !dbg !10657
  %28 = load i32, i32* %27, align 4, !dbg !10657
  ret i32 %28, !dbg !10658
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #12 !dbg !10659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10661, metadata !DIExpression()), !dbg !10662
  %2 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10663
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef %2) #21, !dbg !10664
  ret i32 %3, !dbg !10665
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !10666 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10668, metadata !DIExpression()), !dbg !10671
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10672
  call void @llvm.dbg.value(metadata i32 %2, metadata !10669, metadata !DIExpression()), !dbg !10671
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10670, metadata !DIExpression()), !dbg !10671
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10670, metadata !DIExpression()), !dbg !10671
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !10673
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef nonnull %3) #21, !dbg !10674
  ret i32 %4, !dbg !10675
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !10676 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !10682, metadata !DIExpression()), !dbg !10685
  call void @llvm.dbg.value(metadata i32 0, metadata !10683, metadata !DIExpression()), !dbg !10685
  call void @llvm.dbg.value(metadata i32 0, metadata !10684, metadata !DIExpression()), !dbg !10685
  %2 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !10686
  %3 = load i32, i32* %2, align 4, !dbg !10686
  %4 = icmp eq i32 %3, 0, !dbg !10689
  br i1 %4, label %17, label %5, !dbg !10690

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10684, metadata !DIExpression()), !dbg !10685
  call void @llvm.dbg.value(metadata i32 %8, metadata !10683, metadata !DIExpression()), !dbg !10685
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %7, i32 1, !dbg !10691
  %10 = load i32, i32* %9, align 4, !dbg !10691
  %11 = mul i32 %10, %6, !dbg !10693
  %12 = add i32 %11, %8, !dbg !10694
  call void @llvm.dbg.value(metadata i32 %12, metadata !10683, metadata !DIExpression()), !dbg !10685
  %13 = add i32 %7, 1, !dbg !10695
  call void @llvm.dbg.value(metadata i32 %13, metadata !10684, metadata !DIExpression()), !dbg !10685
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 0, !dbg !10686
  %15 = load i32, i32* %14, align 4, !dbg !10686
  %16 = icmp eq i32 %15, 0, !dbg !10689
  br i1 %16, label %17, label %5, !dbg !10690, !llvm.loop !10696

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !10685
  ret i32 %18, !dbg !10698
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !10699 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10703, metadata !DIExpression()), !dbg !10712
  call void @llvm.dbg.value(metadata i32 %1, metadata !10704, metadata !DIExpression()), !dbg !10712
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10705, metadata !DIExpression()), !dbg !10712
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !10706, metadata !DIExpression()), !dbg !10712
  %5 = add i32 %1, %0, !dbg !10713
  call void @llvm.dbg.value(metadata i32 %5, metadata !10711, metadata !DIExpression()), !dbg !10712
  call void @llvm.dbg.value(metadata i32 %0, metadata !10707, metadata !DIExpression()), !dbg !10712
  call void @llvm.dbg.value(metadata i32 0, metadata !10708, metadata !DIExpression()), !dbg !10712
  call void @llvm.dbg.value(metadata i32 0, metadata !10710, metadata !DIExpression()), !dbg !10712
  %6 = icmp ugt i32 %5, %0, !dbg !10714
  br i1 %6, label %7, label %34, !dbg !10717

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10710, metadata !DIExpression()), !dbg !10712
  call void @llvm.dbg.value(metadata i32 %9, metadata !10707, metadata !DIExpression()), !dbg !10712
  call void @llvm.dbg.value(metadata i32 %10, metadata !10708, metadata !DIExpression()), !dbg !10712
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.hal_cache_region_config_t* noundef %3) #21, !dbg !10718
  call void @llvm.dbg.value(metadata i32 %11, metadata !10709, metadata !DIExpression()), !dbg !10712
  %12 = icmp eq i32 %8, 0, !dbg !10720
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 0, !dbg !10722
  br i1 %12, label %14, label %16, !dbg !10723

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !10724
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !10726
  store i32 1, i32* %15, align 4, !dbg !10727
  br label %29, !dbg !10728

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !10729
  %18 = icmp eq i32 %11, %17, !dbg !10731
  br i1 %18, label %19, label %23, !dbg !10732

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !10733
  %21 = load i32, i32* %20, align 4, !dbg !10735
  %22 = add i32 %21, 1, !dbg !10735
  store i32 %22, i32* %20, align 4, !dbg !10735
  br label %29, !dbg !10736

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !10737
  call void @llvm.dbg.value(metadata i32 %24, metadata !10708, metadata !DIExpression()), !dbg !10712
  %25 = icmp eq i32 %24, 9, !dbg !10739
  br i1 %25, label %34, label %26, !dbg !10741

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 0, !dbg !10742
  store i32 %11, i32* %27, align 4, !dbg !10743
  %28 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 1, !dbg !10744
  store i32 1, i32* %28, align 4, !dbg !10745
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !10746
  call void @llvm.dbg.value(metadata i32 %30, metadata !10708, metadata !DIExpression()), !dbg !10712
  %31 = add i32 %11, %9, !dbg !10747
  call void @llvm.dbg.value(metadata i32 %31, metadata !10707, metadata !DIExpression()), !dbg !10712
  %32 = add i32 %8, 1, !dbg !10748
  call void @llvm.dbg.value(metadata i32 %32, metadata !10710, metadata !DIExpression()), !dbg !10712
  %33 = icmp ult i32 %31, %5, !dbg !10714
  br i1 %33, label %7, label %34, !dbg !10717, !llvm.loop !10749

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !10712
  ret i32 %35, !dbg !10751
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2) local_unnamed_addr #0 !dbg !10752 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10756, metadata !DIExpression()), !dbg !10759
  call void @llvm.dbg.value(metadata i32 %1, metadata !10757, metadata !DIExpression()), !dbg !10759
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10758, metadata !DIExpression()), !dbg !10759
  %4 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !10760
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #20, !dbg !10761
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10762
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef %6) #21, !dbg !10763
  ret i32 %7, !dbg !10764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !10765 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10767, metadata !DIExpression()), !dbg !10770
  call void @llvm.dbg.value(metadata i32 %1, metadata !10768, metadata !DIExpression()), !dbg !10770
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10769, metadata !DIExpression()), !dbg !10770
  ret i32 0, !dbg !10771
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !10772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10774, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.value(metadata i32 %1, metadata !10775, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10776, metadata !DIExpression()), !dbg !10779
  %4 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10780
  call void @llvm.dbg.value(metadata i32 %4, metadata !10777, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10778, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10778, metadata !DIExpression()), !dbg !10779
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !10781
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef nonnull %5) #21, !dbg !10782
  ret i32 %6, !dbg !10783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !10784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10786, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata i32 %1, metadata !10787, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10788, metadata !DIExpression()), !dbg !10789
  ret i32 0, !dbg !10790
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !10791 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10793, metadata !DIExpression()), !dbg !10796
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10797
  call void @llvm.dbg.value(metadata i32 %2, metadata !10794, metadata !DIExpression()), !dbg !10796
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10795, metadata !DIExpression()), !dbg !10796
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10795, metadata !DIExpression()), !dbg !10796
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !10798
  %4 = load i32, i32* %3, align 4, !dbg !10798
  ret i32 %4, !dbg !10799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.hal_cache_region_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !10800 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !10804, metadata !DIExpression()), !dbg !10807
  call void @llvm.dbg.value(metadata i32* %1, metadata !10805, metadata !DIExpression()), !dbg !10807
  call void @llvm.dbg.value(metadata i32 %2, metadata !10806, metadata !DIExpression()), !dbg !10807
  %4 = load i32, i32* %1, align 4, !dbg !10808
  %5 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 0, !dbg !10810
  %6 = load i32, i32* %5, align 4, !dbg !10810
  %7 = icmp eq i32 %6, %2, !dbg !10811
  br i1 %7, label %8, label %12, !dbg !10812

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 1, !dbg !10813
  %10 = load i32, i32* %9, align 4, !dbg !10815
  %11 = add i32 %10, 1, !dbg !10815
  store i32 %11, i32* %9, align 4, !dbg !10815
  br label %17, !dbg !10816

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !10817
  store i32 %13, i32* %1, align 4, !dbg !10817
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 1, !dbg !10819
  store i32 1, i32* %14, align 4, !dbg !10820
  %15 = load i32, i32* %1, align 4, !dbg !10821
  %16 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %15, i32 0, !dbg !10822
  store i32 %2, i32* %16, align 4, !dbg !10823
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !10824
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !10825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10829, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 %1, metadata !10830, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10831, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !10832, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 0, metadata !10833, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 0, metadata !10834, metadata !DIExpression()), !dbg !10838
  %5 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !10839
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #20, !dbg !10840
  call void @llvm.dbg.value(metadata i32 0, metadata !10837, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 0, metadata !10836, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 0, metadata !10834, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 0, metadata !10833, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 %0, metadata !10829, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 %1, metadata !10830, metadata !DIExpression()), !dbg !10838
  %7 = icmp eq i32 %1, 0, !dbg !10841
  br i1 %7, label %53, label %8, !dbg !10844

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10837, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 %10, metadata !10836, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 %11, metadata !10834, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 %12, metadata !10833, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 %13, metadata !10829, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 %14, metadata !10830, metadata !DIExpression()), !dbg !10838
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %12, i32 1, !dbg !10845
  %16 = load i32, i32* %15, align 4, !dbg !10845
  %17 = icmp ult i32 %9, %16, !dbg !10848
  %18 = xor i1 %17, true, !dbg !10849
  %19 = zext i1 %18 to i32, !dbg !10849
  %20 = add i32 %12, %19, !dbg !10849
  call void @llvm.dbg.value(metadata i32 undef, metadata !10837, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 %20, metadata !10833, metadata !DIExpression()), !dbg !10838
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %20, i32 0, !dbg !10850
  %22 = load i32, i32* %21, align 4, !dbg !10850
  %23 = add i32 %22, %10, !dbg !10851
  call void @llvm.dbg.value(metadata i32 %23, metadata !10836, metadata !DIExpression()), !dbg !10838
  %24 = icmp ult i32 %23, %13, !dbg !10852
  br i1 %24, label %46, label %25, !dbg !10854

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !10855
  call void @llvm.dbg.value(metadata i32 %26, metadata !10835, metadata !DIExpression()), !dbg !10838
  %27 = icmp ult i32 %14, %26, !dbg !10857
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !10859
  call void @llvm.dbg.value(metadata i32 %28, metadata !10835, metadata !DIExpression()), !dbg !10838
  %29 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 0, !dbg !10860
  %30 = load i32, i32* %29, align 4, !dbg !10860
  %31 = icmp eq i32 %30, %28, !dbg !10862
  br i1 %31, label %32, label %36, !dbg !10863

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 1, !dbg !10864
  %34 = load i32, i32* %33, align 4, !dbg !10866
  %35 = add i32 %34, 1, !dbg !10866
  store i32 %35, i32* %33, align 4, !dbg !10866
  br label %42, !dbg !10867

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !10868
  %38 = zext i1 %37 to i32, !dbg !10871
  %39 = add nsw i32 %11, %38, !dbg !10871
  call void @llvm.dbg.value(metadata i32 %39, metadata !10834, metadata !DIExpression()), !dbg !10838
  %40 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 1, !dbg !10872
  store i32 1, i32* %40, align 4, !dbg !10873
  %41 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 0, !dbg !10874
  store i32 %28, i32* %41, align 4, !dbg !10875
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !10838
  call void @llvm.dbg.value(metadata i32 %43, metadata !10834, metadata !DIExpression()), !dbg !10838
  %44 = add i32 %28, %13, !dbg !10876
  call void @llvm.dbg.value(metadata i32 %44, metadata !10829, metadata !DIExpression()), !dbg !10838
  %45 = sub i32 %14, %28, !dbg !10877
  call void @llvm.dbg.value(metadata i32 %45, metadata !10830, metadata !DIExpression()), !dbg !10838
  br label %46, !dbg !10878

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !10879
  call void @llvm.dbg.value(metadata i32 %49, metadata !10834, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 %48, metadata !10829, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 %47, metadata !10830, metadata !DIExpression()), !dbg !10838
  %50 = add nuw i32 %9, 1, !dbg !10880
  %51 = select i1 %17, i32 %50, i32 1, !dbg !10880
  call void @llvm.dbg.value(metadata i32 %51, metadata !10837, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 %23, metadata !10836, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.value(metadata i32 %20, metadata !10833, metadata !DIExpression()), !dbg !10838
  %52 = icmp eq i32 %47, 0, !dbg !10841
  br i1 %52, label %53, label %8, !dbg !10844, !llvm.loop !10881

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !10883
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !10884 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10888
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10889
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !10888
  store %struct.hal_cache_region_config_t* %3, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10890
  %4 = tail call i32 @custom_get_fat_addr() #20, !dbg !10891
  %5 = tail call i32 @custom_get_fat_len() #20, !dbg !10892
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10893
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !10894
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !10893
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0), %struct.hal_cache_region_config_t* noundef nonnull %8) #21, !dbg !10895
  %10 = tail call i32 @custom_get_fat_addr() #20, !dbg !10896
  %11 = tail call i32 @custom_get_fat_len() #20, !dbg !10897
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0)) #21, !dbg !10898
  call void @llvm.dbg.value(metadata i32 %12, metadata !10886, metadata !DIExpression()), !dbg !10899
  %13 = icmp eq i32 %12, 0, !dbg !10900
  br i1 %13, label %14, label %46, !dbg !10902

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !10887, metadata !DIExpression()), !dbg !10899
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !10903
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !10905
  call void @llvm.dbg.value(metadata i32 0, metadata !10887, metadata !DIExpression()), !dbg !10899
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !10906
  %16 = icmp eq i32 %15, 0, !dbg !10908
  br i1 %16, label %34, label %17, !dbg !10909

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !10887, metadata !DIExpression()), !dbg !10899
  %22 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !10910
  %23 = load i32, i32* %22, align 4, !dbg !10910
  %24 = add i32 %20, %23, !dbg !10912
  %25 = icmp ugt i32 %18, %21, !dbg !10913
  br i1 %25, label %26, label %27, !dbg !10915

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !10916
  br label %27, !dbg !10918

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !10919
  call void @llvm.dbg.value(metadata i32 %29, metadata !10887, metadata !DIExpression()), !dbg !10899
  %30 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !10906
  %31 = load i32, i32* %30, align 4, !dbg !10906
  %32 = icmp eq i32 %31, 0, !dbg !10908
  br i1 %32, label %33, label %17, !dbg !10909, !llvm.loop !10920

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !10912
  br label %34, !dbg !10909

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !10922
  %36 = mul i32 %35, -5, !dbg !10923
  %37 = add i32 %36, 262144, !dbg !10924
  %38 = lshr i32 %37, 9, !dbg !10925
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !10926
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #21, !dbg !10927
  call void @llvm.dbg.value(metadata i32 0, metadata !10886, metadata !DIExpression()), !dbg !10899
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !10928
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !10929
  %42 = load i8, i8* %41, align 1, !dbg !10929
  %43 = icmp eq i8 %42, 3, !dbg !10930
  br i1 %43, label %44, label %46, !dbg !10930

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #21, !dbg !10931
  call void @llvm.dbg.value(metadata i32 %45, metadata !10886, metadata !DIExpression()), !dbg !10899
  br label %46, !dbg !10933

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !10899
  ret i32 %47, !dbg !10934
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !10935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10939, metadata !DIExpression()), !dbg !10940
  %2 = icmp eq i32 %0, 0, !dbg !10941
  br i1 %2, label %3, label %9, !dbg !10943

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #20, !dbg !10944
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !10946
  %5 = icmp slt i32 %4, 0, !dbg !10947
  br i1 %5, label %6, label %7, !dbg !10949

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !10950
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.156, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.157, i32 0, i32 0)) #23, !dbg !10950
  unreachable, !dbg !10950

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #20, !dbg !10955
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !10956
  br label %9, !dbg !10957

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10958
  ret void, !dbg !10959
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !10960 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !10961
  %1 = tail call i32 @CMEM_Init_NOR() #21, !dbg !10962
  ret i32 %1, !dbg !10963
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !10964 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !10967
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10968
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10969
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !10970
  %4 = load i16, i16* %3, align 2, !dbg !10970
  %5 = zext i16 %4 to i32, !dbg !10968
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !10971
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !10972
  store %struct.hal_cache_region_config_t* %6, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10973
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !10974
  %8 = bitcast %struct.hal_cache_region_config_t* %7 to i8*, !dbg !10974
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.hal_cache_region_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #20, !dbg !10975
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !10976
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !10977
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !10978
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !10979
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !10980
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10981
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !10982
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !10983
  %13 = load i32, i32* %12, align 4, !dbg !10983
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #20, !dbg !10984
  call void @llvm.dbg.value(metadata i32 %14, metadata !10966, metadata !DIExpression()), !dbg !10985
  %15 = icmp eq i32 %14, -120, !dbg !10986
  br i1 %15, label %16, label %17, !dbg !10989

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !10990
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.156, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.157, i32 0, i32 0)) #23, !dbg !10990
  unreachable, !dbg !10990

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0)) #21, !dbg !10992
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !10993
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #21, !dbg !10994
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !10995
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !10996
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10997
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !10998
  ret i32 0, !dbg !10999
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #10 !dbg !11000 {
  ret void, !dbg !11001
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !11002 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !11005
  call void @llvm.dbg.value(metadata i32 %1, metadata !11004, metadata !DIExpression()), !dbg !11006
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !11007
  br i1 %2, label %4, label %3, !dbg !11009

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !11010
  br label %4, !dbg !11012

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !11013
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !11013
  ret i32 %5, !dbg !11014
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !11015 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !11018
  call void @llvm.dbg.value(metadata i32 %1, metadata !11017, metadata !DIExpression()), !dbg !11019
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !11020
  br i1 %2, label %3, label %4, !dbg !11022

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !11023
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !11025
  ret void, !dbg !11026

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !11027
  tail call void @Flash_ReturnReady() #20, !dbg !11029
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.162, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.163, i32 0, i32 0)) #23, !dbg !11029
  unreachable, !dbg !11029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #10 !dbg !11033 {
  ret void, !dbg !11034
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !11035 {
  br label %1, !dbg !11038

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #21, !dbg !11039
  call void @llvm.dbg.value(metadata i32 %2, metadata !11037, metadata !DIExpression()), !dbg !11041
  %3 = icmp eq i32 %2, 0, !dbg !11042
  br i1 %3, label %4, label %1, !dbg !11043, !llvm.loop !11044

4:                                                ; preds = %1
  ret void, !dbg !11046
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !11047 {
  tail call void @FreeFDMLock() #21, !dbg !11048
  ret void, !dbg !11049
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !11050 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11093, metadata !DIExpression()), !dbg !11099
  call void @llvm.dbg.value(metadata i32 %1, metadata !11094, metadata !DIExpression()), !dbg !11099
  call void @llvm.dbg.value(metadata i8* %2, metadata !11095, metadata !DIExpression()), !dbg !11099
  call void @llvm.dbg.value(metadata i32 %3, metadata !11096, metadata !DIExpression()), !dbg !11099
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !11100
  %6 = load i32, i32* %5, align 4, !dbg !11100
  call void @llvm.dbg.value(metadata i32 %6, metadata !11098, metadata !DIExpression()), !dbg !11099
  %7 = icmp ule i32 %6, %1, !dbg !11101
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !11103
  br i1 %10, label %26, label %11, !dbg !11103

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !11104
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !11104
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !11104
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !11105
  %16 = load i8*, i8** %15, align 4, !dbg !11105
  %17 = ptrtoint i8* %16 to i32, !dbg !11106
  %18 = add i32 %17, %1, !dbg !11107
  call void @llvm.dbg.value(metadata i32 %18, metadata !11097, metadata !DIExpression()), !dbg !11099
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11108
  %20 = load i8, i8* %19, align 4, !dbg !11108, !range !2756
  %21 = icmp eq i8 %20, 0, !dbg !11108
  br i1 %21, label %22, label %23, !dbg !11110

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !11111
  br label %23, !dbg !11113

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #21, !dbg !11114
  %24 = inttoptr i32 %18 to i8*, !dbg !11115
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #20, !dbg !11116
  tail call void @release_FDM_lock() #21, !dbg !11117
  br label %26, !dbg !11118

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !11099
  ret i32 %27, !dbg !11119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !11120 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11124, metadata !DIExpression()), !dbg !11126
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11127
  %3 = load i8, i8* %2, align 4, !dbg !11127, !range !2756
  %4 = icmp eq i8 %3, 0, !dbg !11127
  br i1 %4, label %5, label %18, !dbg !11129

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #21, !dbg !11130
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !11131
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !11131
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !11132
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !11132
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !11133
  %11 = load i8*, i8** %10, align 4, !dbg !11133
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !11134
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !11135
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #20, !dbg !11136
  call void @llvm.dbg.value(metadata i32 %14, metadata !11125, metadata !DIExpression()), !dbg !11126
  tail call void @release_FDM_lock() #21, !dbg !11137
  %15 = icmp slt i32 %14, 0, !dbg !11138
  br i1 %15, label %16, label %17, !dbg !11140

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !11141
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.162, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.163, i32 0, i32 0)) #23, !dbg !11141
  unreachable, !dbg !11141

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !11146
  br label %18, !dbg !11147

18:                                               ; preds = %1, %17
  ret void, !dbg !11147
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !11148 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11150, metadata !DIExpression()), !dbg !11171
  call void @llvm.dbg.value(metadata i32 %1, metadata !11151, metadata !DIExpression()), !dbg !11171
  call void @llvm.dbg.value(metadata i8* %2, metadata !11152, metadata !DIExpression()), !dbg !11171
  call void @llvm.dbg.value(metadata i32 %3, metadata !11153, metadata !DIExpression()), !dbg !11171
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !11172
  %7 = load i32, i32* %6, align 4, !dbg !11172
  call void @llvm.dbg.value(metadata i32 %7, metadata !11156, metadata !DIExpression()), !dbg !11171
  call void @llvm.dbg.value(metadata i32 0, metadata !11157, metadata !DIExpression()), !dbg !11171
  call void @llvm.dbg.value(metadata i32 0, metadata !11158, metadata !DIExpression()), !dbg !11171
  %8 = icmp ugt i32 %7, %1, !dbg !11173
  br i1 %8, label %9, label %101, !dbg !11175

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !11176
  %11 = icmp ugt i32 %10, %7, !dbg !11178
  br i1 %11, label %101, label %12, !dbg !11179

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11180
  %14 = load i8, i8* %13, align 4, !dbg !11180, !range !2756
  %15 = icmp eq i8 %14, 0, !dbg !11180
  br i1 %15, label %16, label %17, !dbg !11182

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !11183
  br label %17, !dbg !11185

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #21, !dbg !11186
  %18 = bitcast i16* %5 to i8*, !dbg !11187
  call void @llvm.dbg.value(metadata i32 0, metadata !11157, metadata !DIExpression()), !dbg !11171
  call void @llvm.dbg.value(metadata i32 0, metadata !11158, metadata !DIExpression()), !dbg !11171
  %19 = icmp eq i32 %3, 0, !dbg !11188
  br i1 %19, label %99, label %20, !dbg !11189

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !11189

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !11158, metadata !DIExpression()), !dbg !11171
  %27 = load i8*, i8** %21, align 4, !dbg !11190
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !11191
  %29 = bitcast i8* %28 to i8**, !dbg !11191
  %30 = load i8*, i8** %29, align 4, !dbg !11191
  %31 = ptrtoint i8* %30 to i32, !dbg !11192
  %32 = add i32 %31, %1, !dbg !11193
  %33 = add i32 %32, %26, !dbg !11194
  call void @llvm.dbg.value(metadata i32 %33, metadata !11154, metadata !DIExpression()), !dbg !11171
  %34 = add i32 %26, %22, !dbg !11195
  call void @llvm.dbg.value(metadata i32 %34, metadata !11155, metadata !DIExpression()), !dbg !11171
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11196
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !11197
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !11197
  %38 = add i32 %26, %1, !dbg !11198
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #20, !dbg !11199
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #20, !dbg !11200
  %41 = and i32 %33, 1, !dbg !11201
  %42 = icmp eq i32 %41, 0, !dbg !11201
  br i1 %42, label %43, label %46, !dbg !11202

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !11203
  %45 = icmp eq i32 %44, 1, !dbg !11204
  br i1 %45, label %46, label %57, !dbg !11205

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11206
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !11208
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !11208
  %50 = load i8*, i8** %21, align 4, !dbg !11209
  %51 = inttoptr i32 %33 to i8*, !dbg !11210
  %52 = inttoptr i32 %34 to i8*, !dbg !11211
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #20, !dbg !11212
  call void @llvm.dbg.value(metadata i32 %53, metadata !11157, metadata !DIExpression()), !dbg !11171
  %54 = icmp eq i32 %53, 0, !dbg !11213
  br i1 %54, label %55, label %99, !dbg !11215

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !11216
  call void @llvm.dbg.value(metadata i32 %56, metadata !11158, metadata !DIExpression()), !dbg !11171
  br label %96, !dbg !11217

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !11218
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #20, !dbg !11219
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #20, !dbg !11220
  call void @llvm.dbg.value(metadata i32 %60, metadata !11159, metadata !DIExpression()), !dbg !11221
  call void @llvm.dbg.value(metadata i32 %44, metadata !11163, metadata !DIExpression()), !dbg !11221
  %61 = add i32 %60, %33, !dbg !11222
  %62 = sub i32 0, %60, !dbg !11223
  %63 = and i32 %61, %62, !dbg !11224
  call void @llvm.dbg.value(metadata i32 %63, metadata !11164, metadata !DIExpression()), !dbg !11221
  %64 = add i32 %32, %3, !dbg !11225
  %65 = icmp ugt i32 %64, %63, !dbg !11227
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !11228
  call void @llvm.dbg.value(metadata i32 %67, metadata !11163, metadata !DIExpression()), !dbg !11221
  %68 = and i32 %67, -2, !dbg !11229
  call void @llvm.dbg.value(metadata i32 %68, metadata !11163, metadata !DIExpression()), !dbg !11221
  %69 = icmp ne i32 %68, 2, !dbg !11230
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !11231
  br i1 %72, label %85, label %73, !dbg !11231

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #22, !dbg !11187
  call void @llvm.dbg.value(metadata i8* %18, metadata !11170, metadata !DIExpression()), !dbg !11232
  %74 = inttoptr i32 %34 to i8*, !dbg !11233
  %75 = load i8, i8* %74, align 1, !dbg !11234
  call void @llvm.dbg.value(metadata i8 undef, metadata !11165, metadata !DIExpression()), !dbg !11232
  store i8 %75, i8* %18, align 2, !dbg !11235
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !11236
  %77 = load i8, i8* %76, align 1, !dbg !11237
  store i8 %77, i8* %24, align 1, !dbg !11238
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11239
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !11240
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !11240
  %81 = load i8*, i8** %21, align 4, !dbg !11241
  %82 = inttoptr i32 %33 to i8*, !dbg !11242
  call void @llvm.dbg.value(metadata i16* %5, metadata !11165, metadata !DIExpression(DW_OP_deref)), !dbg !11232
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #20, !dbg !11243
  call void @llvm.dbg.value(metadata i32 %83, metadata !11157, metadata !DIExpression()), !dbg !11171
  %84 = icmp eq i32 %83, 0, !dbg !11244
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #22, !dbg !11246
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11247
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !11251
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !11251
  %89 = load i8*, i8** %21, align 4, !dbg !11252
  %90 = inttoptr i32 %33 to i8*, !dbg !11253
  %91 = inttoptr i32 %34 to i8*, !dbg !11254
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #20, !dbg !11255
  call void @llvm.dbg.value(metadata i32 %92, metadata !11157, metadata !DIExpression()), !dbg !11171
  %93 = icmp eq i32 %92, 0, !dbg !11256
  br i1 %93, label %94, label %99, !dbg !11258

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !11157, metadata !DIExpression()), !dbg !11171
  %95 = add i32 %68, %26, !dbg !11259
  call void @llvm.dbg.value(metadata i32 %83, metadata !11157, metadata !DIExpression()), !dbg !11171
  call void @llvm.dbg.value(metadata i32 %26, metadata !11158, metadata !DIExpression()), !dbg !11171
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !11260
  call void @llvm.dbg.value(metadata i32 0, metadata !11157, metadata !DIExpression()), !dbg !11171
  call void @llvm.dbg.value(metadata i32 %97, metadata !11158, metadata !DIExpression()), !dbg !11171
  %98 = icmp ult i32 %97, %3, !dbg !11188
  br i1 %98, label %25, label %99, !dbg !11189, !llvm.loop !11261

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #21, !dbg !11263
  br label %101, !dbg !11264

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !11171
  ret i32 %102, !dbg !11264
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11265 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11269, metadata !DIExpression()), !dbg !11273
  call void @llvm.dbg.value(metadata i32 %1, metadata !11270, metadata !DIExpression()), !dbg !11273
  %3 = and i32 %1, 16777215, !dbg !11274
  call void @llvm.dbg.value(metadata i32 %3, metadata !11272, metadata !DIExpression()), !dbg !11273
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11275
  %5 = load i8, i8* %4, align 4, !dbg !11275, !range !2756
  %6 = icmp eq i8 %5, 0, !dbg !11275
  br i1 %6, label %7, label %8, !dbg !11277

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !11278
  br label %8, !dbg !11280

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !11281
  %10 = load i32, i32* %9, align 4, !dbg !11281
  %11 = icmp ult i32 %3, %10, !dbg !11283
  br i1 %11, label %12, label %27, !dbg !11284

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #21, !dbg !11285
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !11286
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !11286
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !11287
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !11287
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !11288
  %18 = load i8*, i8** %17, align 4, !dbg !11288
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #20, !dbg !11289
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !11290
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !11291
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !11291
  %23 = load i8*, i8** %17, align 4, !dbg !11292
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #20, !dbg !11293
  call void @llvm.dbg.value(metadata i32 %24, metadata !11271, metadata !DIExpression()), !dbg !11273
  tail call void @release_FDM_lock() #21, !dbg !11294
  %25 = icmp eq i32 %24, 0, !dbg !11295
  %26 = select i1 %25, i32 0, i32 6, !dbg !11273
  br label %27, !dbg !11273

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !11273
  ret i32 %28, !dbg !11297
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !11298 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !11299
  br i1 %1, label %3, label %2, !dbg !11301

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #20, !dbg !11302
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #21, !dbg !11304
  store i1 true, i1* @flash_init_status, align 4, !dbg !11305
  br label %3, !dbg !11306

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !11307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #4 section ".ram_code" !dbg !11308 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !11309
  %2 = select i1 %1, i32 0, i32 -5, !dbg !11309
  ret i32 %2, !dbg !11310
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !11311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11315, metadata !DIExpression()), !dbg !11322
  call void @llvm.dbg.value(metadata i32 %1, metadata !11316, metadata !DIExpression()), !dbg !11322
  call void @llvm.dbg.value(metadata i8* %2, metadata !11317, metadata !DIExpression()), !dbg !11322
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11318, metadata !DIExpression()), !dbg !11322
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11323
  call void @llvm.dbg.value(metadata i8* %4, metadata !11319, metadata !DIExpression()), !dbg !11322
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !11324
  %6 = ptrtoint i8* %5 to i32, !dbg !11325
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11326
  %8 = bitcast i8* %7 to i8**, !dbg !11326
  %9 = load i8*, i8** %8, align 4, !dbg !11326
  %10 = ptrtoint i8* %9 to i32, !dbg !11327
  %11 = shl i32 %1, 9, !dbg !11328
  %12 = add i32 %11, %6, !dbg !11329
  %13 = sub i32 %12, %10, !dbg !11330
  call void @llvm.dbg.value(metadata i32 %13, metadata !11321, metadata !DIExpression()), !dbg !11322
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !11331
  call void @llvm.dbg.value(metadata i32 %14, metadata !11320, metadata !DIExpression()), !dbg !11322
  %15 = icmp eq i32 %14, 0, !dbg !11332
  %16 = select i1 %15, i32 0, i32 -13, !dbg !11322
  ret i32 %16, !dbg !11334
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !11335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11337, metadata !DIExpression()), !dbg !11344
  call void @llvm.dbg.value(metadata i32 %1, metadata !11338, metadata !DIExpression()), !dbg !11344
  call void @llvm.dbg.value(metadata i8* %2, metadata !11339, metadata !DIExpression()), !dbg !11344
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11340, metadata !DIExpression()), !dbg !11344
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11345
  call void @llvm.dbg.value(metadata i8* %4, metadata !11341, metadata !DIExpression()), !dbg !11344
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !11346
  %6 = ptrtoint i8* %5 to i32, !dbg !11347
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11348
  %8 = bitcast i8* %7 to i8**, !dbg !11348
  %9 = load i8*, i8** %8, align 4, !dbg !11348
  %10 = ptrtoint i8* %9 to i32, !dbg !11349
  %11 = shl i32 %1, 9, !dbg !11350
  %12 = add i32 %11, %6, !dbg !11351
  %13 = sub i32 %12, %10, !dbg !11352
  call void @llvm.dbg.value(metadata i32 %13, metadata !11343, metadata !DIExpression()), !dbg !11344
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !11353
  call void @llvm.dbg.value(metadata i32 %14, metadata !11342, metadata !DIExpression()), !dbg !11344
  %15 = icmp eq i32 %14, 0, !dbg !11354
  %16 = select i1 %15, i32 0, i32 -14, !dbg !11344
  ret i32 %16, !dbg !11356
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !11357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11361, metadata !DIExpression()), !dbg !11363
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #21, !dbg !11364
  call void @llvm.dbg.value(metadata i32 %2, metadata !11362, metadata !DIExpression()), !dbg !11363
  %3 = icmp eq i32 %2, 0, !dbg !11365
  %4 = select i1 %3, i32 0, i32 -15, !dbg !11363
  ret i32 %4, !dbg !11367
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !11368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11370, metadata !DIExpression()), !dbg !11373
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11371, metadata !DIExpression()), !dbg !11373
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11374
  call void @llvm.dbg.value(metadata i8* %2, metadata !11372, metadata !DIExpression()), !dbg !11373
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #20, !dbg !11375
  ret i32 %3, !dbg !11376
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !11377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11379, metadata !DIExpression()), !dbg !11382
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11380, metadata !DIExpression()), !dbg !11382
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11383
  call void @llvm.dbg.value(metadata i8* %2, metadata !11381, metadata !DIExpression()), !dbg !11382
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #20, !dbg !11384
  ret i32 %3, !dbg !11385
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !11386 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11390, metadata !DIExpression()), !dbg !11395
  call void @llvm.dbg.value(metadata i32* %1, metadata !11391, metadata !DIExpression()), !dbg !11395
  call void @llvm.dbg.value(metadata i32* %2, metadata !11392, metadata !DIExpression()), !dbg !11395
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11393, metadata !DIExpression()), !dbg !11395
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11396
  call void @llvm.dbg.value(metadata i8* %4, metadata !11394, metadata !DIExpression()), !dbg !11395
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #20, !dbg !11397
  store i32 %5, i32* %1, align 4, !dbg !11398
  %6 = icmp eq i32 %5, -1, !dbg !11399
  br i1 %6, label %10, label %7, !dbg !11401

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #20, !dbg !11402
  %9 = urem i32 %0, %8, !dbg !11403
  store i32 %9, i32* %2, align 4, !dbg !11404
  br label %10, !dbg !11405

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !11395
  ret i32 %11, !dbg !11406
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !11407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11411, metadata !DIExpression()), !dbg !11416
  call void @llvm.dbg.value(metadata i32 %1, metadata !11412, metadata !DIExpression()), !dbg !11416
  call void @llvm.dbg.value(metadata i32* %2, metadata !11413, metadata !DIExpression()), !dbg !11416
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11414, metadata !DIExpression()), !dbg !11416
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11417
  call void @llvm.dbg.value(metadata i8* %4, metadata !11415, metadata !DIExpression()), !dbg !11416
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !11418
  %6 = ptrtoint i8* %5 to i32, !dbg !11419
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11420
  %8 = bitcast i8* %7 to i8**, !dbg !11420
  %9 = load i8*, i8** %8, align 4, !dbg !11420
  %10 = ptrtoint i8* %9 to i32, !dbg !11421
  %11 = add i32 %6, %1, !dbg !11422
  %12 = sub i32 %11, %10, !dbg !11423
  store i32 %12, i32* %2, align 4, !dbg !11424
  ret i32 0, !dbg !11425
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !11426 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11430, metadata !DIExpression()), !dbg !11431
  %2 = add i32 %0, 2, !dbg !11432
  %3 = icmp ult i32 %2, 9, !dbg !11432
  br i1 %3, label %5, label %4, !dbg !11432

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #20, !dbg !11433
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.162, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.163, i32 0, i32 0)) #23, !dbg !11433
  unreachable, !dbg !11433

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !11432
  %7 = lshr i16 433, %6, !dbg !11432
  %8 = and i16 %7, 1, !dbg !11432
  %9 = icmp eq i16 %8, 0, !dbg !11432
  br i1 %9, label %4, label %10, !dbg !11432

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !11432
  %12 = load i32, i32* %11, align 4, !dbg !11432
  ret i32 %12, !dbg !11443
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !11444 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11449, metadata !DIExpression()), !dbg !11452
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !11453
  call void @llvm.dbg.value(metadata i32 %2, metadata !11451, metadata !DIExpression()), !dbg !11452
  %3 = icmp eq i32 %2, -1, !dbg !11454
  br i1 %3, label %4, label %5, !dbg !11456

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !11457
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.162, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.163, i32 0, i32 0)) #23, !dbg !11457
  unreachable, !dbg !11457

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #21, !dbg !11462
  call void @llvm.dbg.value(metadata i32 %6, metadata !11450, metadata !DIExpression()), !dbg !11452
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !11463

7:                                                ; preds = %5
  br label %10, !dbg !11464

8:                                                ; preds = %5
  br label %10, !dbg !11468

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !11471
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.162, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.163, i32 0, i32 0)) #23, !dbg !11471
  unreachable, !dbg !11471

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !11476
  ret i32 %11, !dbg !11477
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !11478 {
  %1 = tail call i32 @NOR_init() #21, !dbg !11479
  ret i32 0, !dbg !11480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #10 !dbg !11481 {
  ret i32 0, !dbg !11482
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11483 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11487, metadata !DIExpression()), !dbg !11492
  call void @llvm.dbg.value(metadata i32 %1, metadata !11488, metadata !DIExpression()), !dbg !11492
  call void @llvm.dbg.value(metadata i32 0, metadata !11491, metadata !DIExpression()), !dbg !11492
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !11493

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !11494
  %5 = icmp eq i32 %4, 0, !dbg !11498
  br i1 %5, label %12, label %22, !dbg !11499

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !11500
  %8 = icmp eq i32 %7, 0, !dbg !11504
  br i1 %8, label %12, label %22, !dbg !11505

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !11506
  %11 = icmp eq i32 %10, 0, !dbg !11510
  br i1 %11, label %12, label %22, !dbg !11511

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !11512
  call void @llvm.dbg.value(metadata i32 %13, metadata !11491, metadata !DIExpression()), !dbg !11492
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !11513
  call void @llvm.dbg.value(metadata i32 %14, metadata !11490, metadata !DIExpression()), !dbg !11492
  %15 = icmp eq i32 %14, -1, !dbg !11514
  br i1 %15, label %22, label %16, !dbg !11516

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !11517
  call void @llvm.dbg.value(metadata i32 %17, metadata !11490, metadata !DIExpression()), !dbg !11492
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #21, !dbg !11518
  call void @llvm.dbg.value(metadata i32 %18, metadata !11489, metadata !DIExpression()), !dbg !11492
  %19 = icmp eq i32 %18, 0, !dbg !11519
  br i1 %19, label %22, label %20, !dbg !11521

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #21, !dbg !11522
  br label %22, !dbg !11524

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !11492
  ret i32 %23, !dbg !11525
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !11526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11530, metadata !DIExpression()), !dbg !11535
  call void @llvm.dbg.value(metadata i8* %1, metadata !11531, metadata !DIExpression()), !dbg !11535
  call void @llvm.dbg.value(metadata i32 %2, metadata !11532, metadata !DIExpression()), !dbg !11535
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11533, metadata !DIExpression()), !dbg !11535
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !11536
  call void @llvm.dbg.value(metadata i32 %4, metadata !11534, metadata !DIExpression()), !dbg !11535
  %5 = icmp eq i32 %4, 0, !dbg !11537
  br i1 %5, label %8, label %6, !dbg !11539

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !11540
  br label %8, !dbg !11542

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !11535
  ret i32 %9, !dbg !11543
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !11544 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11548, metadata !DIExpression()), !dbg !11556
  call void @llvm.dbg.value(metadata i8* %1, metadata !11549, metadata !DIExpression()), !dbg !11556
  call void @llvm.dbg.value(metadata i32 %2, metadata !11550, metadata !DIExpression()), !dbg !11556
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11551, metadata !DIExpression()), !dbg !11556
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !11557
  call void @llvm.dbg.value(metadata i32 %4, metadata !11552, metadata !DIExpression()), !dbg !11556
  %5 = icmp eq i32 %4, 0, !dbg !11558
  br i1 %5, label %8, label %6, !dbg !11560

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !11561
  br label %21, !dbg !11563

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) #20, !dbg !11564
  br i1 %9, label %10, label %21, !dbg !11565

10:                                               ; preds = %8
  %11 = and i32 %0, -32, !dbg !11566
  call void @llvm.dbg.value(metadata i32 %11, metadata !11553, metadata !DIExpression()), !dbg !11568
  %12 = add i32 %0, 32
  %13 = add i32 %12, %2
  %14 = and i32 %13, -32
  call void @llvm.dbg.value(metadata i32 %11, metadata !11553, metadata !DIExpression()), !dbg !11568
  %15 = icmp ugt i32 %11, %14, !dbg !11569
  br i1 %15, label %21, label %16, !dbg !11571

16:                                               ; preds = %10, %16
  %17 = phi i32 [ %19, %16 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !11553, metadata !DIExpression()), !dbg !11568
  %18 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %17) #20, !dbg !11572
  %19 = add i32 %17, 32, !dbg !11574
  call void @llvm.dbg.value(metadata i32 %19, metadata !11553, metadata !DIExpression()), !dbg !11568
  %20 = icmp ugt i32 %19, %14, !dbg !11569
  br i1 %20, label %21, label %16, !dbg !11571, !llvm.loop !11575

21:                                               ; preds = %16, %10, %8, %6
  %22 = phi i32 [ %7, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %16 ], !dbg !11556
  ret i32 %22, !dbg !11577
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !11578 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11582, metadata !DIExpression()), !dbg !11588
  call void @llvm.dbg.value(metadata i32 %1, metadata !11583, metadata !DIExpression()), !dbg !11588
  call void @llvm.dbg.value(metadata i8* %0, metadata !11584, metadata !DIExpression()), !dbg !11588
  call void @llvm.dbg.value(metadata i32 0, metadata !11585, metadata !DIExpression()), !dbg !11588
  call void @llvm.dbg.value(metadata i32 0, metadata !11586, metadata !DIExpression()), !dbg !11588
  call void @llvm.dbg.value(metadata i32 0, metadata !11587, metadata !DIExpression()), !dbg !11588
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11589
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !11589
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !11589
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !11590
  %7 = load i32, i32* %6, align 4, !dbg !11590
  call void @llvm.dbg.value(metadata i32 %7, metadata !11587, metadata !DIExpression()), !dbg !11588
  call void @llvm.dbg.value(metadata i32 0, metadata !11586, metadata !DIExpression()), !dbg !11588
  call void @llvm.dbg.value(metadata i32 0, metadata !11585, metadata !DIExpression()), !dbg !11588
  %8 = icmp ugt i32 %7, %1, !dbg !11591
  br i1 %8, label %23, label %9, !dbg !11592

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !11593
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !11587, metadata !DIExpression()), !dbg !11588
  call void @llvm.dbg.value(metadata i32 %12, metadata !11586, metadata !DIExpression()), !dbg !11588
  call void @llvm.dbg.value(metadata i32 %13, metadata !11585, metadata !DIExpression()), !dbg !11588
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 0, !dbg !11595
  %15 = load i32, i32* %14, align 4, !dbg !11595
  %16 = mul i32 %15, %10, !dbg !11596
  %17 = add i32 %16, %13, !dbg !11597
  call void @llvm.dbg.value(metadata i32 %17, metadata !11585, metadata !DIExpression()), !dbg !11588
  %18 = add i32 %12, 1, !dbg !11598
  call void @llvm.dbg.value(metadata i32 %18, metadata !11586, metadata !DIExpression()), !dbg !11588
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 1, !dbg !11599
  %20 = load i32, i32* %19, align 4, !dbg !11599
  %21 = add i32 %20, %11, !dbg !11600
  call void @llvm.dbg.value(metadata i32 %21, metadata !11587, metadata !DIExpression()), !dbg !11588
  %22 = icmp ugt i32 %21, %1, !dbg !11591
  br i1 %22, label %23, label %9, !dbg !11592, !llvm.loop !11601

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !11603
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !11588
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !11588
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !11588
  call void @llvm.dbg.value(metadata i8* %0, metadata !11584, metadata !DIExpression()), !dbg !11588
  %28 = sub i32 %1, %27, !dbg !11604
  %29 = add i32 %28, %24, !dbg !11605
  %30 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %26, i32 0, !dbg !11606
  %31 = load i32, i32* %30, align 4, !dbg !11606
  %32 = mul i32 %29, %31, !dbg !11607
  %33 = add i32 %32, %25, !dbg !11608
  call void @llvm.dbg.value(metadata i32 %33, metadata !11585, metadata !DIExpression()), !dbg !11588
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !11609
  %35 = bitcast i8* %34 to i8**, !dbg !11609
  %36 = load i8*, i8** %35, align 4, !dbg !11609
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !11610
  ret i8* %37, !dbg !11611
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !11612 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11614, metadata !DIExpression()), !dbg !11618
  call void @llvm.dbg.value(metadata i32 %1, metadata !11615, metadata !DIExpression()), !dbg !11618
  call void @llvm.dbg.value(metadata i32 %2, metadata !11616, metadata !DIExpression()), !dbg !11618
  call void @llvm.dbg.value(metadata i8* %0, metadata !11617, metadata !DIExpression()), !dbg !11618
  %4 = icmp eq i32 %2, 0, !dbg !11619
  br i1 %4, label %6, label %5, !dbg !11622

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !11623
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.178, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.179, i32 0, i32 0)) #23, !dbg !11623
  unreachable, !dbg !11623

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !11617, metadata !DIExpression()), !dbg !11618
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #21, !dbg !11625
  %8 = inttoptr i32 %7 to i8*, !dbg !11626
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !11627
  %10 = bitcast i8* %9 to i8**, !dbg !11627
  store i8* %8, i8** %10, align 4, !dbg !11628
  ret i8* %8, !dbg !11629
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #13 section ".ram_code" !dbg !2076 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2080, metadata !DIExpression()), !dbg !11630
  call void @llvm.dbg.value(metadata i32 %1, metadata !2081, metadata !DIExpression()), !dbg !11630
  call void @llvm.dbg.value(metadata i8* %0, metadata !2082, metadata !DIExpression()), !dbg !11630
  call void @llvm.dbg.value(metadata i32 0, metadata !2127, metadata !DIExpression()), !dbg !11630
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !11631
  %4 = bitcast i8* %3 to [8 x [2 x %struct.hal_cache_region_config_t]]*, !dbg !11631
  %5 = and i32 %1, 7, !dbg !11633
  %6 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !11634
  %7 = load i32, i32* %6, align 4, !dbg !11634
  %8 = icmp eq i32 %7, -1, !dbg !11635
  br i1 %8, label %62, label %9, !dbg !11636

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !11637
  br i1 %10, label %54, label %11, !dbg !11640

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !11641
  %13 = load i32, i32* %12, align 4, !dbg !11641
  %14 = icmp eq i32 %13, -1, !dbg !11644
  br i1 %14, label %44, label %15, !dbg !11645

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !11646
  br i1 %16, label %35, label %17, !dbg !11649

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11650
  %19 = add i32 %18, 1, !dbg !11650
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !11650
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11652
  %21 = shl nuw nsw i32 1, %5, !dbg !11654
  %22 = and i32 %20, %21, !dbg !11655
  %23 = icmp eq i32 %22, 0, !dbg !11655
  br i1 %23, label %30, label %24, !dbg !11656

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !11657
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11659
  %26 = ptrtoint i8* %25 to i32, !dbg !11660
  %27 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11661
  store i32 %26, i32* %27, align 4, !dbg !11662
  call void @llvm.dbg.value(metadata i32 %26, metadata !2127, metadata !DIExpression()), !dbg !11630
  %28 = xor i32 %21, -1, !dbg !11663
  %29 = and i32 %20, %28, !dbg !11664
  br label %71, !dbg !11665

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !11666
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11668
  %32 = ptrtoint i8* %31 to i32, !dbg !11669
  %33 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11670
  store i32 %32, i32* %33, align 4, !dbg !11671
  call void @llvm.dbg.value(metadata i32 %32, metadata !2127, metadata !DIExpression()), !dbg !11630
  %34 = or i32 %20, %21, !dbg !11672
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !11673
  %37 = add i32 %36, 1, !dbg !11673
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !11673
  %38 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11675
  %39 = load i32, i32* %38, align 4, !dbg !11675
  call void @llvm.dbg.value(metadata i32 %39, metadata !2127, metadata !DIExpression()), !dbg !11630
  %40 = shl nuw nsw i32 1, %5, !dbg !11676
  %41 = xor i32 %40, -1, !dbg !11677
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11678
  %43 = and i32 %42, %41, !dbg !11678
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11679
  %46 = add i32 %45, 1, !dbg !11679
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !11679
  store i32 %1, i32* %12, align 4, !dbg !11681
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11682
  %48 = ptrtoint i8* %47 to i32, !dbg !11683
  %49 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11684
  store i32 %48, i32* %49, align 4, !dbg !11685
  call void @llvm.dbg.value(metadata i32 %48, metadata !2127, metadata !DIExpression()), !dbg !11630
  %50 = shl nuw nsw i32 1, %5, !dbg !11686
  %51 = xor i32 %50, -1, !dbg !11687
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11688
  %53 = and i32 %52, %51, !dbg !11688
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !11689
  %56 = add i32 %55, 1, !dbg !11689
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !11689
  %57 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11691
  %58 = load i32, i32* %57, align 4, !dbg !11691
  call void @llvm.dbg.value(metadata i32 %58, metadata !2127, metadata !DIExpression()), !dbg !11630
  %59 = shl nuw nsw i32 1, %5, !dbg !11692
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11693
  %61 = or i32 %60, %59, !dbg !11693
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11694
  %64 = add i32 %63, 1, !dbg !11694
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !11694
  store i32 %1, i32* %6, align 4, !dbg !11696
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11697
  %66 = ptrtoint i8* %65 to i32, !dbg !11698
  %67 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11699
  store i32 %66, i32* %67, align 4, !dbg !11700
  call void @llvm.dbg.value(metadata i32 %66, metadata !2127, metadata !DIExpression()), !dbg !11630
  %68 = shl nuw nsw i32 1, %5, !dbg !11701
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11702
  %70 = or i32 %69, %68, !dbg !11702
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !11703
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !11703
  call void @llvm.dbg.value(metadata i32 %73, metadata !2127, metadata !DIExpression()), !dbg !11630
  ret i32 %73, !dbg !11704
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !11705 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11707, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.value(metadata i32 %1, metadata !11708, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.value(metadata i8* %0, metadata !11709, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.value(metadata i32 0, metadata !11710, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.value(metadata i32 0, metadata !11711, metadata !DIExpression()), !dbg !11712
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11713
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !11713
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !11713
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !11714
  %7 = load i32, i32* %6, align 4, !dbg !11714
  call void @llvm.dbg.value(metadata i32 %7, metadata !11711, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.value(metadata i32 0, metadata !11710, metadata !DIExpression()), !dbg !11712
  %8 = icmp ugt i32 %7, %1, !dbg !11715
  br i1 %8, label %17, label %9, !dbg !11716

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11711, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.value(metadata i32 %11, metadata !11710, metadata !DIExpression()), !dbg !11712
  %12 = add i32 %11, 1, !dbg !11717
  call void @llvm.dbg.value(metadata i32 %12, metadata !11710, metadata !DIExpression()), !dbg !11712
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 1, !dbg !11719
  %14 = load i32, i32* %13, align 4, !dbg !11719
  %15 = add i32 %14, %10, !dbg !11720
  call void @llvm.dbg.value(metadata i32 %15, metadata !11711, metadata !DIExpression()), !dbg !11712
  %16 = icmp ugt i32 %15, %1, !dbg !11715
  br i1 %16, label %17, label %9, !dbg !11716, !llvm.loop !11721

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !11712
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 0, !dbg !11723
  %20 = load i32, i32* %19, align 4, !dbg !11723
  ret i32 %20, !dbg !11724
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !11725 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11727, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.value(metadata i32 %1, metadata !11728, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.value(metadata i8* %0, metadata !11729, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.value(metadata i32 0, metadata !11730, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.value(metadata i32 0, metadata !11731, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.value(metadata i32 0, metadata !11732, metadata !DIExpression()), !dbg !11733
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11734
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !11734
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !11734
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !11735
  %7 = load i32, i32* %6, align 4, !dbg !11735
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 0, !dbg !11736
  %9 = load i32, i32* %8, align 4, !dbg !11736
  %10 = mul i32 %9, %7, !dbg !11737
  call void @llvm.dbg.value(metadata i32 %10, metadata !11731, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.value(metadata i32 0, metadata !11732, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.value(metadata i32 0, metadata !11730, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.value(metadata i32 %1, metadata !11728, metadata !DIExpression()), !dbg !11733
  %11 = icmp ult i32 %10, %1, !dbg !11738
  br i1 %11, label %12, label %30, !dbg !11739

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !11740
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !11732, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.value(metadata i32 %16, metadata !11731, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.value(metadata i32 %17, metadata !11730, metadata !DIExpression()), !dbg !11733
  call void @llvm.dbg.value(metadata i32 %18, metadata !11728, metadata !DIExpression()), !dbg !11733
  %19 = icmp eq i32 %14, 0, !dbg !11739
  br i1 %19, label %36, label %20, !dbg !11741

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !11742
  call void @llvm.dbg.value(metadata i32 %21, metadata !11732, metadata !DIExpression()), !dbg !11733
  %22 = sub i32 %18, %16, !dbg !11744
  call void @llvm.dbg.value(metadata i32 %22, metadata !11728, metadata !DIExpression()), !dbg !11733
  %23 = add i32 %17, 1, !dbg !11745
  call void @llvm.dbg.value(metadata i32 %23, metadata !11730, metadata !DIExpression()), !dbg !11733
  %24 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 1, !dbg !11746
  %25 = load i32, i32* %24, align 4, !dbg !11746
  %26 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 0, !dbg !11747
  %27 = load i32, i32* %26, align 4, !dbg !11747
  %28 = mul i32 %27, %25, !dbg !11748
  call void @llvm.dbg.value(metadata i32 %28, metadata !11731, metadata !DIExpression()), !dbg !11733
  %29 = icmp ugt i32 %22, %28, !dbg !11738
  br i1 %29, label %12, label %30, !dbg !11739, !llvm.loop !11749

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !11751
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !11733
  %34 = udiv i32 %32, %31, !dbg !11754
  %35 = add i32 %34, %33, !dbg !11755
  call void @llvm.dbg.value(metadata i32 %35, metadata !11732, metadata !DIExpression()), !dbg !11733
  br label %36, !dbg !11756

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !11757
  call void @llvm.dbg.value(metadata i32 %37, metadata !11732, metadata !DIExpression()), !dbg !11733
  ret i32 %37, !dbg !11758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #10 !dbg !11759 {
  ret i32 134217728, !dbg !11760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #10 !dbg !11761 {
  ret i32 3932160, !dbg !11762
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #10 !dbg !11763 {
  ret i32 0, !dbg !11764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #10 !dbg !11765 {
  ret i32 262144, !dbg !11766
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !11767 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11769, metadata !DIExpression()), !dbg !11771
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !11772
  call void @llvm.dbg.value(metadata i32 %2, metadata !11770, metadata !DIExpression()), !dbg !11771
  %3 = icmp eq i32 %2, 0, !dbg !11773
  br i1 %3, label %5, label %4, !dbg !11775

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !11776
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.178, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.179, i32 0, i32 0)) #23, !dbg !11776
  unreachable, !dbg !11776

5:                                                ; preds = %1
  ret void, !dbg !11781
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !11782 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11786, metadata !DIExpression()), !dbg !11799
  call void @llvm.dbg.value(metadata i32 %1, metadata !11787, metadata !DIExpression()), !dbg !11799
  call void @llvm.dbg.value(metadata i8* %2, metadata !11788, metadata !DIExpression()), !dbg !11799
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !11800
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11800
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !11789, metadata !DIExpression()), !dbg !11801
  %7 = bitcast i32* %5 to i8*, !dbg !11802
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11802
  call void @llvm.dbg.value(metadata i32* %5, metadata !11798, metadata !DIExpression(DW_OP_deref)), !dbg !11799
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !11803
  call void @llvm.va_start(i8* nonnull %6), !dbg !11804
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !11805
  %10 = load i32, i32* %9, align 4, !dbg !11805
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !11805
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !11805
  call void @llvm.va_end(i8* nonnull %6), !dbg !11806
  %13 = load i32, i32* %5, align 4, !dbg !11807
  call void @llvm.dbg.value(metadata i32 %13, metadata !11798, metadata !DIExpression()), !dbg !11799
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !11808
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11809
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11809
  ret void, !dbg !11809
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #18

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #18

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !11810 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11812, metadata !DIExpression()), !dbg !11817
  call void @llvm.dbg.value(metadata i32 %1, metadata !11813, metadata !DIExpression()), !dbg !11817
  call void @llvm.dbg.value(metadata i8* %2, metadata !11814, metadata !DIExpression()), !dbg !11817
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !11818
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11818
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !11815, metadata !DIExpression()), !dbg !11819
  %7 = bitcast i32* %5 to i8*, !dbg !11820
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11820
  call void @llvm.dbg.value(metadata i32* %5, metadata !11816, metadata !DIExpression(DW_OP_deref)), !dbg !11817
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !11821
  call void @llvm.va_start(i8* nonnull %6), !dbg !11822
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !11823
  %10 = load i32, i32* %9, align 4, !dbg !11823
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !11823
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !11823
  call void @llvm.va_end(i8* nonnull %6), !dbg !11824
  %13 = load i32, i32* %5, align 4, !dbg !11825
  call void @llvm.dbg.value(metadata i32 %13, metadata !11816, metadata !DIExpression()), !dbg !11817
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !11826
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11827
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11827
  ret void, !dbg !11827
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !11828 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11830, metadata !DIExpression()), !dbg !11835
  call void @llvm.dbg.value(metadata i32 %1, metadata !11831, metadata !DIExpression()), !dbg !11835
  call void @llvm.dbg.value(metadata i8* %2, metadata !11832, metadata !DIExpression()), !dbg !11835
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !11836
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11836
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !11833, metadata !DIExpression()), !dbg !11837
  %7 = bitcast i32* %5 to i8*, !dbg !11838
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11838
  call void @llvm.dbg.value(metadata i32* %5, metadata !11834, metadata !DIExpression(DW_OP_deref)), !dbg !11835
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !11839
  call void @llvm.va_start(i8* nonnull %6), !dbg !11840
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !11841
  %10 = load i32, i32* %9, align 4, !dbg !11841
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !11841
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !11841
  call void @llvm.va_end(i8* nonnull %6), !dbg !11842
  %13 = load i32, i32* %5, align 4, !dbg !11843
  call void @llvm.dbg.value(metadata i32 %13, metadata !11834, metadata !DIExpression()), !dbg !11835
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !11844
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11845
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11845
  ret void, !dbg !11845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #10 !dbg !11846 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11852, metadata !DIExpression()), !dbg !11857
  call void @llvm.dbg.value(metadata i32 %1, metadata !11853, metadata !DIExpression()), !dbg !11857
  call void @llvm.dbg.value(metadata i8* %2, metadata !11854, metadata !DIExpression()), !dbg !11857
  call void @llvm.dbg.value(metadata i8* %3, metadata !11855, metadata !DIExpression()), !dbg !11857
  call void @llvm.dbg.value(metadata i32 %4, metadata !11856, metadata !DIExpression()), !dbg !11857
  ret void, !dbg !11858
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #2 section ".tcm_code" !dbg !11859 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11861, metadata !DIExpression()), !dbg !11863
  %2 = shl i32 %0, 20, !dbg !11864
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11865
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !11866
  store volatile i32 %2, i32* %4, align 4, !dbg !11867
  %5 = load volatile i32, i32* %4, align 4, !dbg !11868
  %6 = or i32 %5, 65536, !dbg !11869
  store volatile i32 %6, i32* %4, align 4, !dbg !11870
  br label %7, !dbg !11871

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !11872
  %9 = and i32 %8, 1, !dbg !11873
  %10 = icmp eq i32 %9, 0, !dbg !11874
  br i1 %10, label %7, label %11, !dbg !11871, !llvm.loop !11875

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !11877
  %13 = lshr i32 %12, 8, !dbg !11878
  %14 = and i32 %13, 255, !dbg !11878
  call void @llvm.dbg.value(metadata i32 %14, metadata !11862, metadata !DIExpression()), !dbg !11863
  ret i32 %14, !dbg !11879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !11880 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11884, metadata !DIExpression()), !dbg !11886
  call void @llvm.dbg.value(metadata i32 %1, metadata !11885, metadata !DIExpression()), !dbg !11886
  call void @llvm.dbg.value(metadata i32 %1, metadata !11885, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !11886
  %3 = shl i32 %1, 24, !dbg !11887
  %4 = shl i32 %0, 20, !dbg !11888
  %5 = or i32 %4, %3, !dbg !11889
  %6 = or i32 %5, 131072, !dbg !11889
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11890
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !11891
  store volatile i32 %6, i32* %8, align 4, !dbg !11892
  %9 = load volatile i32, i32* %8, align 4, !dbg !11893
  %10 = or i32 %9, 65536, !dbg !11894
  store volatile i32 %10, i32* %8, align 4, !dbg !11895
  br label %11, !dbg !11896

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !11897
  %13 = and i32 %12, 1, !dbg !11898
  %14 = icmp eq i32 %13, 0, !dbg !11899
  br i1 %14, label %11, label %15, !dbg !11896, !llvm.loop !11900

15:                                               ; preds = %11
  ret void, !dbg !11902
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #7 section ".tcm_code" !dbg !11903 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !11904
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !11905
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !11906
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !11907
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !11908
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !11909
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !11910
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !11911
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !11912
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !11913
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !11914
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !11915
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !11916
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !11917
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !11918
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !11919
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !11920
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !11921
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !11922
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !11923
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !11924
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !11925
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !11926
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !11927
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !11928
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !11929
  ret void, !dbg !11930
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #2 section ".tcm_code" !dbg !11931 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11934
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !11935
  store volatile i32 21553, i32* %2, align 4, !dbg !11936
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !11937
  store volatile i32 20489, i32* %3, align 4, !dbg !11938
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !11939
  store volatile i32 20550, i32* %4, align 4, !dbg !11940
  ret i32 0, !dbg !11941
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #2 section ".tcm_code" !dbg !11942 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !11946, metadata !DIExpression()), !dbg !11950
  call void @llvm.dbg.value(metadata i32 0, metadata !11944, metadata !DIExpression()), !dbg !11951
  call void @llvm.dbg.value(metadata i32 16384, metadata !11945, metadata !DIExpression()), !dbg !11951
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11952
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !11953
  store volatile i32 0, i32* %2, align 4, !dbg !11954
  call void @llvm.dbg.value(metadata i32 0, metadata !11948, metadata !DIExpression()), !dbg !11951
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !11948, metadata !DIExpression()), !dbg !11951
  br label %5, !dbg !11955

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !11948, metadata !DIExpression()), !dbg !11951
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !11947, metadata !DIExpression()), !dbg !11951
  br label %8, !dbg !11957

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11947, metadata !DIExpression()), !dbg !11951
  call void @llvm.dbg.value(metadata i32 0, metadata !11949, metadata !DIExpression()), !dbg !11951
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !11961

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !11949, metadata !DIExpression()), !dbg !11951
  %12 = icmp eq i32 %30, 2, !dbg !11965
  br i1 %12, label %31, label %13, !dbg !11961, !llvm.loop !11967

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !11949, metadata !DIExpression()), !dbg !11951
  store volatile i32 0, i32* %2, align 4, !dbg !11969
  store volatile i32 63, i32* %3, align 4, !dbg !11971
  %15 = load i32, i32* %10, align 4, !dbg !11972
  %16 = shl i32 %15, 16, !dbg !11973
  %17 = shl nuw nsw i32 %14, 13, !dbg !11974
  %18 = or i32 %17, %7, !dbg !11975
  %19 = or i32 %18, %16, !dbg !11976
  store volatile i32 %19, i32* %2, align 4, !dbg !11977
  %20 = load volatile i32, i32* %2, align 4, !dbg !11978
  %21 = or i32 %20, 805, !dbg !11978
  store volatile i32 %21, i32* %2, align 4, !dbg !11978
  br label %22, !dbg !11979

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !11980
  %24 = and i32 %23, 2, !dbg !11981
  %25 = icmp eq i32 %24, 0, !dbg !11982
  br i1 %25, label %22, label %26, !dbg !11979, !llvm.loop !11983

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !11985
  %28 = and i32 %27, 1, !dbg !11987
  %29 = icmp eq i32 %28, 0, !dbg !11988
  %30 = add nuw nsw i32 %14, 1, !dbg !11989
  call void @llvm.dbg.value(metadata i32 %30, metadata !11949, metadata !DIExpression()), !dbg !11951
  br i1 %29, label %11, label %37, !dbg !11990

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !11991
  call void @llvm.dbg.value(metadata i32 %32, metadata !11947, metadata !DIExpression()), !dbg !11951
  %33 = icmp eq i32 %32, 2, !dbg !11992
  br i1 %33, label %34, label %8, !dbg !11957, !llvm.loop !11993

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !11995
  call void @llvm.dbg.value(metadata i32 %35, metadata !11948, metadata !DIExpression()), !dbg !11951
  %36 = icmp eq i32 %35, 2, !dbg !11996
  br i1 %36, label %37, label %5, !dbg !11955, !llvm.loop !11997

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !11951
  store volatile i32 0, i32* %2, align 4, !dbg !11951
  ret i32 %38, !dbg !11999
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #2 section ".tcm_code" !dbg !12000 {
  %1 = tail call i32 @TestCase_MBIST() #21, !dbg !12001
  %2 = icmp ne i32 %1, 0, !dbg !12003
  %3 = sext i1 %2 to i32, !dbg !12004
  ret i32 %3, !dbg !12005
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #2 section ".tcm_code" !dbg !12006 {
  call void @llvm.dbg.value(metadata i32 31, metadata !12008, metadata !DIExpression()), !dbg !12010
  call void @llvm.dbg.value(metadata i32 0, metadata !12009, metadata !DIExpression()), !dbg !12010
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12011
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !12012
  store volatile i32 0, i32* %2, align 4, !dbg !12013
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !12014
  store volatile i32 0, i32* %3, align 4, !dbg !12015
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !12016
  store volatile i32 0, i32* %4, align 4, !dbg !12017
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !12018
  store volatile i32 0, i32* %5, align 4, !dbg !12019
  call void @llvm.dbg.value(metadata i32 31, metadata !12008, metadata !DIExpression()), !dbg !12010
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !12020
  store volatile i32 522133279, i32* %6, align 4, !dbg !12024
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !12025
  store volatile i32 522133279, i32* %7, align 4, !dbg !12026
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !12027
  %9 = icmp eq i32 %8, 0, !dbg !12029
  call void @llvm.dbg.value(metadata i32 31, metadata !12008, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12010
  br i1 %9, label %36, label %10, !dbg !12030

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !12008, metadata !DIExpression()), !dbg !12010
  call void @llvm.dbg.value(metadata i32 %11, metadata !12008, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12010
  call void @llvm.dbg.value(metadata i32 %11, metadata !12008, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12010
  %12 = icmp eq i32 %11, 0, !dbg !12031
  br i1 %12, label %26, label %13, !dbg !12032, !llvm.loop !12033

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !12035
  call void @llvm.dbg.value(metadata i32 %14, metadata !12008, metadata !DIExpression()), !dbg !12010
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12036
  %16 = shl i32 %14, 24, !dbg !12037
  %17 = shl i32 %14, 16, !dbg !12038
  %18 = shl i32 %14, 8, !dbg !12039
  %19 = or i32 %17, %14, !dbg !12040
  %20 = or i32 %19, %16, !dbg !12041
  %21 = or i32 %20, %18, !dbg !12042
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !12020
  store volatile i32 %21, i32* %22, align 4, !dbg !12024
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !12025
  store volatile i32 %21, i32* %23, align 4, !dbg !12026
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !12027
  %25 = icmp eq i32 %24, 0, !dbg !12029
  call void @llvm.dbg.value(metadata i32 %14, metadata !12008, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12010
  br i1 %25, label %36, label %10, !dbg !12030

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !12009, metadata !DIExpression()), !dbg !12010
  %28 = shl nuw nsw i32 %27, 16, !dbg !12043
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12049
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !12050
  store volatile i32 %28, i32* %30, align 4, !dbg !12051
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !12052
  %32 = icmp eq i32 %31, 0, !dbg !12054
  call void @llvm.dbg.value(metadata i32 %27, metadata !12009, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12010
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !12055
  call void @llvm.dbg.value(metadata i32 %33, metadata !12009, metadata !DIExpression()), !dbg !12010
  call void @llvm.dbg.value(metadata i32 %27, metadata !12009, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12010
  br i1 %35, label %36, label %26, !dbg !12055, !llvm.loop !12056

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !12059
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #2 section ".tcm_code" !dbg !12060 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !12061
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12062
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !12063
  store volatile i32 1, i32* %2, align 4, !dbg !12064
  br label %3, !dbg !12065

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !12066
  %5 = and i32 %4, 2, !dbg !12067
  %6 = icmp eq i32 %5, 0, !dbg !12067
  br i1 %6, label %3, label %7, !dbg !12065, !llvm.loop !12068

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !12070
  br label %8, !dbg !12071

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !12072
  %10 = and i32 %9, 2, !dbg !12073
  %11 = icmp eq i32 %10, 0, !dbg !12073
  br i1 %11, label %12, label %8, !dbg !12071, !llvm.loop !12074

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !12076
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !12077
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !12078

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !12079
  %17 = and i32 %16, 1, !dbg !12080
  %18 = icmp eq i32 %17, 0, !dbg !12081
  br i1 %18, label %15, label %19, !dbg !12078, !llvm.loop !12082

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #21, !dbg !12084
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #21, !dbg !12085
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !12086

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !12087
  %24 = and i32 %23, 1, !dbg !12088
  %25 = icmp eq i32 %24, 0, !dbg !12089
  br i1 %25, label %22, label %26, !dbg !12086, !llvm.loop !12090

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !12092
  %28 = icmp eq i32 %27, 9507, !dbg !12094
  br i1 %28, label %29, label %37, !dbg !12095

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !12096
  %31 = and i32 %30, 15, !dbg !12099
  %32 = icmp eq i32 %31, 2, !dbg !12100
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !12101
  %34 = and i32 %33, -128, !dbg !12101
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !12101
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !12101
  br label %37, !dbg !12102

37:                                               ; preds = %29, %26
  ret void, !dbg !12102
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !12103 {
  tail call void @EMI_PowerOn_Init() #21, !dbg !12106
  tail call void @__EMI_SetRegValfromCMCP() #21, !dbg !12107
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #21, !dbg !12108
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !12109
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #21, !dbg !12110
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !12111
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #21, !dbg !12112
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !12113
  ret i8 0, !dbg !12114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !12115 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !12116
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12117
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !12118
  store volatile i32 %1, i32* %3, align 4, !dbg !12119
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !12120
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !12121
  store volatile i32 %4, i32* %5, align 4, !dbg !12122
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !12123
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !12124
  store volatile i32 %6, i32* %7, align 4, !dbg !12125
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !12126
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !12127
  store volatile i32 %8, i32* %9, align 4, !dbg !12128
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !12129
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !12130
  store volatile i32 %10, i32* %11, align 4, !dbg !12131
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !12132
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !12133
  store volatile i32 %12, i32* %13, align 4, !dbg !12134
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !12135
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !12136
  store volatile i32 %14, i32* %15, align 4, !dbg !12137
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !12138
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !12139
  store volatile i32 %16, i32* %17, align 4, !dbg !12140
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !12141
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !12142
  store volatile i32 %18, i32* %19, align 4, !dbg !12143
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !12144
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !12145
  store volatile i32 %20, i32* %21, align 4, !dbg !12146
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !12147
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !12148
  store volatile i32 %22, i32* %23, align 4, !dbg !12149
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !12150
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !12151
  store volatile i32 %24, i32* %25, align 4, !dbg !12152
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !12153
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !12154
  store volatile i32 %26, i32* %27, align 4, !dbg !12155
  tail call void @__EMI_EnableDataAutoTracking() #21, !dbg !12156
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12157
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !12158
  store volatile i32 806289408, i32* %29, align 4, !dbg !12159
  br label %30, !dbg !12160

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !12161
  %32 = and i32 %31, 128, !dbg !12162
  %33 = icmp eq i32 %32, 0, !dbg !12162
  br i1 %33, label %30, label %34, !dbg !12160, !llvm.loop !12163

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !12165
  br label %35, !dbg !12166

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !12167
  %37 = and i32 %36, 128, !dbg !12168
  %38 = icmp eq i32 %37, 0, !dbg !12168
  br i1 %38, label %39, label %35, !dbg !12166, !llvm.loop !12169

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !12171
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #21, !dbg !12172
  ret i8 0, !dbg !12173
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #2 section ".tcm_code" !dbg !12174 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12175
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !12176
  %3 = load volatile i32, i32* %2, align 4, !dbg !12176
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !12177
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !12178
  %5 = load volatile i32, i32* %4, align 4, !dbg !12178
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !12179
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !12180
  %7 = load volatile i32, i32* %6, align 4, !dbg !12180
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !12181
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !12182
  %9 = load volatile i32, i32* %8, align 4, !dbg !12182
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !12183
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !12184
  %11 = load volatile i32, i32* %10, align 4, !dbg !12184
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !12185
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !12186
  %13 = load volatile i32, i32* %12, align 4, !dbg !12186
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !12187
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !12188
  %15 = load volatile i32, i32* %14, align 4, !dbg !12188
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !12189
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !12190
  %17 = load volatile i32, i32* %16, align 4, !dbg !12190
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !12191
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !12192
  %19 = load volatile i32, i32* %18, align 4, !dbg !12192
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !12193
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !12194
  %21 = load volatile i32, i32* %20, align 4, !dbg !12194
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !12195
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !12196
  %23 = load volatile i32, i32* %22, align 4, !dbg !12196
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !12197
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !12198
  %25 = load volatile i32, i32* %24, align 4, !dbg !12198
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !12199
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !12200
  %27 = load volatile i32, i32* %26, align 4, !dbg !12200
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !12201
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !12202
  %29 = load volatile i32, i32* %28, align 4, !dbg !12202
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !12203
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !12204
  %31 = load volatile i32, i32* %30, align 4, !dbg !12204
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !12205
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !12206
  %33 = load volatile i32, i32* %32, align 4, !dbg !12206
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !12207
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !12208
  %35 = load volatile i32, i32* %34, align 4, !dbg !12208
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !12209
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !12210
  %37 = load volatile i32, i32* %36, align 4, !dbg !12210
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !12211
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !12212
  %39 = load volatile i32, i32* %38, align 4, !dbg !12212
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !12213
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !12214
  %41 = load volatile i32, i32* %40, align 4, !dbg !12214
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !12215
  ret void, !dbg !12216
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #2 section ".tcm_code" !dbg !12217 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !12218

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !12219
  %5 = and i32 %4, 17, !dbg !12220
  %6 = icmp eq i32 %5, 17, !dbg !12221
  br i1 %6, label %7, label %3, !dbg !12218, !llvm.loop !12222

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !12224
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !12225
  store volatile i32 %8, i32* %9, align 4, !dbg !12226
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !12227
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !12228
  store volatile i32 %10, i32* %11, align 4, !dbg !12229
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !12230
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !12231
  store volatile i32 %12, i32* %13, align 4, !dbg !12232
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !12233
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !12234
  store volatile i32 %14, i32* %15, align 4, !dbg !12235
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !12236
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !12237
  store volatile i32 %16, i32* %17, align 4, !dbg !12238
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !12239
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !12240
  store volatile i32 %18, i32* %19, align 4, !dbg !12241
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !12242
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !12243
  store volatile i32 %20, i32* %21, align 4, !dbg !12244
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !12245
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !12246
  store volatile i32 %22, i32* %23, align 4, !dbg !12247
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !12248
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !12249
  store volatile i32 %24, i32* %25, align 4, !dbg !12250
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !12251
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !12252
  store volatile i32 %26, i32* %27, align 4, !dbg !12253
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !12254
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !12255
  store volatile i32 %28, i32* %29, align 4, !dbg !12256
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !12257
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !12258
  store volatile i32 %30, i32* %31, align 4, !dbg !12259
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !12260
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !12261
  store volatile i32 %32, i32* %33, align 4, !dbg !12262
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !12263
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !12264
  store volatile i32 %34, i32* %35, align 4, !dbg !12265
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !12266
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !12267
  store volatile i32 %36, i32* %37, align 4, !dbg !12268
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !12269
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !12270
  store volatile i32 %38, i32* %39, align 4, !dbg !12271
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !12272
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !12273
  store volatile i32 %40, i32* %41, align 4, !dbg !12274
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !12275
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !12276
  store volatile i32 %42, i32* %43, align 4, !dbg !12277
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !12278
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !12279
  store volatile i32 %44, i32* %45, align 4, !dbg !12280
  ret void, !dbg !12281
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #2 section ".tcm_code" !dbg !12282 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12283
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !12284
  %3 = load volatile i32, i32* %2, align 4, !dbg !12284
  %4 = and i32 %3, -2097185, !dbg !12285
  store volatile i32 %4, i32* %2, align 4, !dbg !12286
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !12287
  store volatile i32 1, i32* %5, align 4, !dbg !12288
  br label %6, !dbg !12289

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !12290
  %8 = and i32 %7, 2, !dbg !12291
  %9 = icmp eq i32 %8, 0, !dbg !12291
  br i1 %9, label %6, label %10, !dbg !12289, !llvm.loop !12292

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !12294
  br label %11, !dbg !12295

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !12296
  %13 = and i32 %12, 2, !dbg !12297
  %14 = icmp eq i32 %13, 0, !dbg !12297
  br i1 %14, label %15, label %11, !dbg !12295, !llvm.loop !12298

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #21, !dbg !12300
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12301
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !12302
  store volatile i32 806289408, i32* %17, align 4, !dbg !12303
  br label %18, !dbg !12304

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !12305
  %20 = and i32 %19, 128, !dbg !12306
  %21 = icmp eq i32 %20, 0, !dbg !12306
  br i1 %21, label %18, label %22, !dbg !12304, !llvm.loop !12307

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !12309
  br label %23, !dbg !12310

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !12311
  %25 = and i32 %24, 128, !dbg !12312
  %26 = icmp eq i32 %25, 0, !dbg !12312
  br i1 %26, label %27, label %23, !dbg !12310, !llvm.loop !12313

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !12315
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !12316
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !12317
  store volatile i32 %28, i32* %29, align 4, !dbg !12318
  ret void, !dbg !12319
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #2 section ".tcm_code" !dbg !12320 {
  tail call void @EMI_Setting_Save() #21, !dbg !12321
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !12322

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !12323
  %5 = and i32 %4, 17, !dbg !12324
  %6 = icmp eq i32 %5, 17, !dbg !12325
  br i1 %6, label %7, label %3, !dbg !12322, !llvm.loop !12326

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !12328
  %9 = or i32 %8, 1792, !dbg !12329
  store volatile i32 %9, i32* %2, align 4, !dbg !12330
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !12331
  store volatile i32 -261685248, i32* %10, align 4, !dbg !12332
  br label %11, !dbg !12333

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !12334
  %13 = and i32 %12, 1, !dbg !12335
  %14 = icmp eq i32 %13, 0, !dbg !12336
  br i1 %14, label %11, label %15, !dbg !12333, !llvm.loop !12337

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !12339
  store volatile i32 0, i32* %16, align 4, !dbg !12340
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !12341

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !12342
  %20 = and i32 %19, 16, !dbg !12343
  %21 = icmp eq i32 %20, 0, !dbg !12343
  br i1 %21, label %18, label %22, !dbg !12341, !llvm.loop !12344

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !12346
  %24 = load volatile i32, i32* %23, align 4, !dbg !12346
  %25 = or i32 %24, 2097184, !dbg !12347
  store volatile i32 %25, i32* %23, align 4, !dbg !12348
  ret void, !dbg !12349
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !12350 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12355, metadata !DIExpression()), !dbg !12357
  %3 = bitcast i32* %2 to i8*, !dbg !12358
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12358
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12356, metadata !DIExpression()), !dbg !12359
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !12360

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12361
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !12364
  store volatile i32 0, i32* %6, align 4, !dbg !12365
  store volatile i32 806289408, i32* %6, align 4, !dbg !12366
  br label %7, !dbg !12367

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !12368
  %9 = and i32 %8, 128, !dbg !12369
  %10 = icmp eq i32 %9, 0, !dbg !12369
  br i1 %10, label %7, label %11, !dbg !12367, !llvm.loop !12370

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !12372
  br label %12, !dbg !12373

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !12374
  %14 = and i32 %13, 128, !dbg !12375
  %15 = icmp eq i32 %14, 0, !dbg !12375
  br i1 %15, label %16, label %12, !dbg !12373, !llvm.loop !12376

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !12378
  store volatile i32 0, i32* %2, align 4, !dbg !12379
  %17 = load volatile i32, i32* %2, align 4, !dbg !12381
  %18 = icmp ult i32 %17, 255, !dbg !12383
  br i1 %18, label %19, label %25, !dbg !12384

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !12385
  %21 = add i32 %20, 1, !dbg !12385
  store volatile i32 %21, i32* %2, align 4, !dbg !12385
  %22 = load volatile i32, i32* %2, align 4, !dbg !12381
  %23 = icmp ult i32 %22, 255, !dbg !12383
  br i1 %23, label %19, label %25, !dbg !12384, !llvm.loop !12386

24:                                               ; preds = %1
  br label %25, !dbg !12388

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !12357
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12391
  ret i32 %26, !dbg !12391
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !12392 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12393
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !12394
  %3 = load volatile i32, i32* %2, align 4, !dbg !12394
  %4 = or i32 %3, 1792, !dbg !12395
  store volatile i32 %4, i32* %2, align 4, !dbg !12396
  ret void, !dbg !12397
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !12398 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12399
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !12400
  %3 = load volatile i32, i32* %2, align 4, !dbg !12400
  %4 = and i32 %3, -1793, !dbg !12401
  store volatile i32 %4, i32* %2, align 4, !dbg !12402
  ret void, !dbg !12403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #10 section ".tcm_code" !dbg !12404 {
  ret i1 false, !dbg !12405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #10 section ".tcm_code" !dbg !12406 {
  ret i1 false, !dbg !12407
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !12408 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #20, !dbg !12409
  ret void, !dbg !12412
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !12413 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #20, !dbg !12414
  ret void, !dbg !12417
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !12418 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #20, !dbg !12419
  ret void, !dbg !12422
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !12423 {
  tail call void @peri_26m_dcxo() #20, !dbg !12424
  ret void, !dbg !12427
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !12428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12432, metadata !DIExpression()), !dbg !12433
  %2 = trunc i32 %0 to i8, !dbg !12434
  tail call void @hal_uart_put_char(i32 noundef 2, i8 noundef zeroext %2) #20, !dbg !12435
  ret i32 %0, !dbg !12436
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #19 !dbg !12437 {
  tail call fastcc void @SystemClock_Config() #21, !dbg !12438
  tail call void @SystemCoreClockUpdate() #20, !dbg !12439
  tail call fastcc void @prvSetupHardware() #21, !dbg !12440
  tail call void asm sideeffect "cpsie i", "~{memory}"() #22, !dbg !12441, !srcloc !12444
  tail call void asm sideeffect "cpsie f", "~{memory}"() #22, !dbg !12445, !srcloc !12448
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.190, i32 0, i32 0)) #20, !dbg !12449
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.191, i32 0, i32 0)) #20, !dbg !12450
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.190, i32 0, i32 0)) #20, !dbg !12451
  tail call fastcc void @spi_master_transfer_data_two_boards_example() #21, !dbg !12452
  br label %4, !dbg !12453

4:                                                ; preds = %0, %4
  br label %4, !dbg !12453, !llvm.loop !12454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !12456 {
  %1 = tail call i32 @hal_clock_init() #20, !dbg !12457
  ret void, !dbg !12458
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !12459 {
  tail call fastcc void @plain_log_uart_init() #21, !dbg !12460
  %1 = tail call i32 @hal_flash_init() #20, !dbg !12461
  %2 = tail call i32 @hal_nvic_init() #20, !dbg !12462
  ret void, !dbg !12463
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @spi_master_transfer_data_two_boards_example() unnamed_addr #0 !dbg !12464 {
  %1 = alloca i8, align 1
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  %4 = alloca [9 x i8], align 1
  %5 = alloca [9 x i8], align 1
  %6 = alloca %struct.hal_spi_master_config_t, align 4
  %7 = alloca %struct.hal_uart_config_t, align 4
  %8 = alloca %struct.hal_spi_master_send_and_receive_config_t, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !12466, metadata !DIExpression()), !dbg !12500
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #22, !dbg !12501
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !12502
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !12503
  %9 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i32 0, i32 0, !dbg !12504
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %9) #22, !dbg !12504
  call void @llvm.dbg.declare(metadata [9 x i8]* %4, metadata !12470, metadata !DIExpression()), !dbg !12505
  %10 = getelementptr inbounds [9 x i8], [9 x i8]* %5, i32 0, i32 0, !dbg !12506
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %10) #22, !dbg !12506
  call void @llvm.dbg.declare(metadata [9 x i8]* %5, metadata !12474, metadata !DIExpression()), !dbg !12507
  %11 = bitcast %struct.hal_spi_master_config_t* %6 to i8*, !dbg !12508
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %11) #22, !dbg !12508
  call void @llvm.dbg.declare(metadata %struct.hal_spi_master_config_t* %6, metadata !12475, metadata !DIExpression()), !dbg !12509
  %12 = bitcast %struct.hal_uart_config_t* %7 to i8*, !dbg !12510
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #22, !dbg !12510
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %7, metadata !12484, metadata !DIExpression()), !dbg !12511
  %13 = bitcast %struct.hal_spi_master_send_and_receive_config_t* %8 to i8*, !dbg !12512
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #22, !dbg !12512
  call void @llvm.dbg.declare(metadata %struct.hal_spi_master_send_and_receive_config_t* %8, metadata !12492, metadata !DIExpression()), !dbg !12513
  %14 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.2.192, i32 0, i32 0)) #20, !dbg !12514
  %15 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.193, i32 0, i32 0)) #20, !dbg !12515
  %16 = tail call i32 @hal_gpt_delay_ms(i32 noundef 10000) #20, !dbg !12516
  %17 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.194, i32 0, i32 0)) #20, !dbg !12517
  %18 = tail call i32 @hal_gpio_init(i32 noundef 25) #20, !dbg !12518
  %19 = tail call i32 @hal_gpio_init(i32 noundef 26) #20, !dbg !12519
  %20 = tail call i32 @hal_gpio_init(i32 noundef 27) #20, !dbg !12520
  %21 = tail call i32 @hal_gpio_init(i32 noundef 28) #20, !dbg !12521
  %22 = tail call i32 @hal_pinmux_set_function(i32 noundef 25, i8 noundef zeroext 5) #20, !dbg !12522
  %23 = tail call i32 @hal_pinmux_set_function(i32 noundef 26, i8 noundef zeroext 5) #20, !dbg !12523
  %24 = tail call i32 @hal_pinmux_set_function(i32 noundef 27, i8 noundef zeroext 5) #20, !dbg !12524
  %25 = tail call i32 @hal_pinmux_set_function(i32 noundef 28, i8 noundef zeroext 5) #20, !dbg !12525
  %26 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.195, i32 0, i32 0)) #20, !dbg !12526
  %27 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %6, i32 0, i32 2, !dbg !12527
  store i32 0, i32* %27, align 4, !dbg !12528
  %28 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %6, i32 0, i32 1, !dbg !12529
  store i32 0, i32* %28, align 4, !dbg !12530
  %29 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %6, i32 0, i32 0, !dbg !12531
  store i32 6000000, i32* %29, align 4, !dbg !12532
  %30 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %6, i32 0, i32 4, !dbg !12533
  store i32 0, i32* %30, align 4, !dbg !12534
  %31 = getelementptr inbounds %struct.hal_spi_master_config_t, %struct.hal_spi_master_config_t* %6, i32 0, i32 3, !dbg !12535
  store i32 0, i32* %31, align 4, !dbg !12536
  %32 = call i32 @hal_spi_master_init(i32 noundef 3, %struct.hal_spi_master_config_t* noundef nonnull %6) #20, !dbg !12537
  %33 = icmp eq i32 %32, 0, !dbg !12539
  br i1 %33, label %34, label %168, !dbg !12540

34:                                               ; preds = %0
  %35 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %7, i32 0, i32 0, !dbg !12541
  store i32 0, i32* %35, align 4, !dbg !12542
  %36 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %7, i32 0, i32 1, !dbg !12543
  store i32 0, i32* %36, align 4, !dbg !12544
  %37 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %7, i32 0, i32 2, !dbg !12545
  store i32 1, i32* %37, align 4, !dbg !12546
  %38 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %7, i32 0, i32 3, !dbg !12547
  store i32 0, i32* %38, align 4, !dbg !12548
  %39 = call i32 @hal_spi_master_set_advanced_config(i32 noundef 3, %struct.hal_uart_config_t* noundef nonnull %7) #20, !dbg !12549
  %40 = icmp eq i32 %39, 0, !dbg !12551
  br i1 %40, label %41, label %168, !dbg !12552

41:                                               ; preds = %34
  %42 = call i32 @hal_spi_master_register_callback(i32 noundef 3, void (i32, i8*)* noundef nonnull @spi_master_dma_callback, i8* noundef null) #20, !dbg !12553
  %43 = icmp eq i32 %42, 0, !dbg !12555
  br i1 %43, label %44, label %168, !dbg !12556

44:                                               ; preds = %41
  %45 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9, i32 0, i32 0)) #20, !dbg !12557
  call void @llvm.dbg.value(metadata i8 14, metadata !12468, metadata !DIExpression()), !dbg !12500
  store i8 14, i8* %2, align 1, !dbg !12558
  call void @llvm.dbg.value(metadata i8* %2, metadata !12468, metadata !DIExpression(DW_OP_deref)), !dbg !12500
  %46 = call i32 @hal_spi_master_send_polling(i32 noundef 3, i8* noundef nonnull %2, i32 noundef 1) #20, !dbg !12559
  %47 = icmp eq i32 %46, 0, !dbg !12561
  br i1 %47, label %48, label %168, !dbg !12562

48:                                               ; preds = %44, %48
  call void @llvm.dbg.value(metadata i8* %1, metadata !12467, metadata !DIExpression(DW_OP_deref)), !dbg !12500
  call fastcc void @spi_query_slave_status(i8* noundef nonnull %1) #21, !dbg !12563
  %49 = load i8, i8* %1, align 1, !dbg !12565
  call void @llvm.dbg.value(metadata i8 %49, metadata !12467, metadata !DIExpression()), !dbg !12500
  %50 = and i8 %49, 1, !dbg !12566
  %51 = icmp eq i8 %50, 0, !dbg !12567
  br i1 %51, label %48, label %52, !dbg !12568, !llvm.loop !12569

52:                                               ; preds = %48
  %53 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.11, i32 0, i32 0)) #20, !dbg !12572
  store i8 4, i8* %9, align 1, !dbg !12573
  %54 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i32 0, i32 1, !dbg !12574
  store i8 0, i8* %54, align 1, !dbg !12575
  %55 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i32 0, i32 2, !dbg !12576
  store i8 0, i8* %55, align 1, !dbg !12577
  %56 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i32 0, i32 3, !dbg !12578
  store i8 -86, i8* %56, align 1, !dbg !12579
  %57 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i32 0, i32 4, !dbg !12580
  store i8 85, i8* %57, align 1, !dbg !12581
  %58 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i32 0, i32 5, !dbg !12582
  store i8 -1, i8* %58, align 1, !dbg !12583
  %59 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i32 0, i32 6, !dbg !12584
  store i8 3, i8* %59, align 1, !dbg !12585
  %60 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i32 0, i32 7, !dbg !12586
  store i8 0, i8* %60, align 1, !dbg !12587
  %61 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i32 0, i32 8, !dbg !12588
  store i8 0, i8* %61, align 1, !dbg !12589
  %62 = call i32 @hal_spi_master_send_polling(i32 noundef 3, i8* noundef nonnull %9, i32 noundef 9) #20, !dbg !12590
  %63 = icmp eq i32 %62, 0, !dbg !12592
  br i1 %63, label %64, label %168, !dbg !12593

64:                                               ; preds = %52, %64
  call void @llvm.dbg.value(metadata i8* %1, metadata !12467, metadata !DIExpression(DW_OP_deref)), !dbg !12500
  call fastcc void @spi_query_slave_status(i8* noundef nonnull %1) #21, !dbg !12594
  %65 = load i8, i8* %1, align 1, !dbg !12596
  call void @llvm.dbg.value(metadata i8 %65, metadata !12467, metadata !DIExpression()), !dbg !12500
  %66 = and i8 %65, 4, !dbg !12597
  %67 = icmp eq i8 %66, 0, !dbg !12598
  br i1 %67, label %64, label %68, !dbg !12599, !llvm.loop !12600

68:                                               ; preds = %64
  %69 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i32 0, i32 0)) #20, !dbg !12603
  store volatile i8 0, i8* @g_spi_transaction_finish, align 1, !dbg !12604
  store i8 6, i8* getelementptr inbounds ([1025 x i8], [1025 x i8]* @g_transfer_tx_big_buffer, i32 0, i32 0), align 4, !dbg !12605
  call void @llvm.dbg.value(metadata i32 1, metadata !12466, metadata !DIExpression()), !dbg !12500
  br label %70, !dbg !12606

70:                                               ; preds = %68, %70
  %71 = phi i32 [ 1, %68 ], [ %76, %70 ]
  call void @llvm.dbg.value(metadata i32 %71, metadata !12466, metadata !DIExpression()), !dbg !12500
  %72 = trunc i32 %71 to i16, !dbg !12608
  %73 = urem i16 %72, 115, !dbg !12608
  %74 = trunc i16 %73 to i8, !dbg !12611
  %75 = getelementptr inbounds [1025 x i8], [1025 x i8]* @g_transfer_tx_big_buffer, i32 0, i32 %71, !dbg !12612
  store i8 %74, i8* %75, align 1, !dbg !12613
  %76 = add nuw nsw i32 %71, 1, !dbg !12614
  call void @llvm.dbg.value(metadata i32 %76, metadata !12466, metadata !DIExpression()), !dbg !12500
  %77 = icmp eq i32 %76, 1025, !dbg !12615
  br i1 %77, label %78, label %70, !dbg !12606, !llvm.loop !12616

78:                                               ; preds = %70
  %79 = call i32 @hal_spi_master_send_dma(i32 noundef 3, i8* noundef getelementptr inbounds ([1025 x i8], [1025 x i8]* @g_transfer_tx_big_buffer, i32 0, i32 0), i32 noundef 1025) #20, !dbg !12618
  %80 = icmp eq i32 %79, 0, !dbg !12620
  br i1 %80, label %83, label %81, !dbg !12621

81:                                               ; preds = %78
  %82 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i32 0, i32 0)) #20, !dbg !12622
  br label %83, !dbg !12624

83:                                               ; preds = %81, %78
  br label %84, !dbg !12625

84:                                               ; preds = %83, %84
  %85 = load volatile i8, i8* @g_spi_transaction_finish, align 1, !dbg !12626, !range !2756
  %86 = icmp eq i8 %85, 0, !dbg !12627
  br i1 %86, label %84, label %87, !dbg !12625, !llvm.loop !12628

87:                                               ; preds = %84, %87
  call void @llvm.dbg.value(metadata i8* %1, metadata !12467, metadata !DIExpression(DW_OP_deref)), !dbg !12500
  call fastcc void @spi_query_slave_status(i8* noundef nonnull %1) #21, !dbg !12630
  %88 = load i8, i8* %1, align 1, !dbg !12632
  call void @llvm.dbg.value(metadata i8 %88, metadata !12467, metadata !DIExpression()), !dbg !12500
  %89 = and i8 %88, 32, !dbg !12633
  %90 = icmp eq i8 %89, 0, !dbg !12634
  br i1 %90, label %87, label %91, !dbg !12635, !llvm.loop !12636

91:                                               ; preds = %87
  %92 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.15, i32 0, i32 0)) #20, !dbg !12639
  call void @llvm.dbg.value(metadata i32 0, metadata !12466, metadata !DIExpression()), !dbg !12500
  br label %93, !dbg !12640

93:                                               ; preds = %91, %93
  %94 = phi i32 [ 0, %91 ], [ %96, %93 ]
  call void @llvm.dbg.value(metadata i32 %94, metadata !12466, metadata !DIExpression()), !dbg !12500
  %95 = getelementptr inbounds [1025 x i8], [1025 x i8]* @g_transfer_rx_big_buffer, i32 0, i32 %94, !dbg !12642
  store i8 0, i8* %95, align 1, !dbg !12645
  %96 = add nuw nsw i32 %94, 1, !dbg !12646
  call void @llvm.dbg.value(metadata i32 %96, metadata !12466, metadata !DIExpression()), !dbg !12500
  %97 = icmp eq i32 %96, 1025, !dbg !12647
  br i1 %97, label %98, label %93, !dbg !12640, !llvm.loop !12648

98:                                               ; preds = %93
  %99 = call i32 @hal_gpt_delay_ms(i32 noundef 500) #20, !dbg !12650
  %100 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.16, i32 0, i32 0)) #20, !dbg !12651
  store i8 2, i8* %10, align 1, !dbg !12652
  %101 = getelementptr inbounds [9 x i8], [9 x i8]* %5, i32 0, i32 1, !dbg !12653
  store i8 0, i8* %101, align 1, !dbg !12654
  %102 = getelementptr inbounds [9 x i8], [9 x i8]* %5, i32 0, i32 2, !dbg !12655
  store i8 0, i8* %102, align 1, !dbg !12656
  %103 = getelementptr inbounds [9 x i8], [9 x i8]* %5, i32 0, i32 3, !dbg !12657
  store i8 -86, i8* %103, align 1, !dbg !12658
  %104 = getelementptr inbounds [9 x i8], [9 x i8]* %5, i32 0, i32 4, !dbg !12659
  store i8 85, i8* %104, align 1, !dbg !12660
  %105 = getelementptr inbounds [9 x i8], [9 x i8]* %5, i32 0, i32 5, !dbg !12661
  store i8 -1, i8* %105, align 1, !dbg !12662
  %106 = getelementptr inbounds [9 x i8], [9 x i8]* %5, i32 0, i32 6, !dbg !12663
  store i8 3, i8* %106, align 1, !dbg !12664
  %107 = getelementptr inbounds [9 x i8], [9 x i8]* %5, i32 0, i32 7, !dbg !12665
  store i8 0, i8* %107, align 1, !dbg !12666
  %108 = getelementptr inbounds [9 x i8], [9 x i8]* %5, i32 0, i32 8, !dbg !12667
  store i8 0, i8* %108, align 1, !dbg !12668
  %109 = call i32 @hal_spi_master_send_polling(i32 noundef 3, i8* noundef nonnull %10, i32 noundef 9) #20, !dbg !12669
  %110 = icmp eq i32 %109, 0, !dbg !12671
  br i1 %110, label %111, label %168, !dbg !12672

111:                                              ; preds = %98, %111
  call void @llvm.dbg.value(metadata i8* %1, metadata !12467, metadata !DIExpression(DW_OP_deref)), !dbg !12500
  call fastcc void @spi_query_slave_status(i8* noundef nonnull %1) #21, !dbg !12673
  %112 = load i8, i8* %1, align 1, !dbg !12675
  call void @llvm.dbg.value(metadata i8 %112, metadata !12467, metadata !DIExpression()), !dbg !12500
  %113 = and i8 %112, 4, !dbg !12676
  %114 = icmp eq i8 %113, 0, !dbg !12677
  br i1 %114, label %111, label %115, !dbg !12678, !llvm.loop !12679

115:                                              ; preds = %111
  %116 = call i32 @hal_gpt_delay_ms(i32 noundef 0) #20, !dbg !12682
  %117 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.18, i32 0, i32 0)) #20, !dbg !12683
  store volatile i8 0, i8* @g_spi_transaction_finish, align 1, !dbg !12684
  store i8 -127, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @g_transfer_small_buffer, i32 0, i32 0), align 4, !dbg !12685
  %118 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %8, i32 0, i32 0, !dbg !12686
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @g_transfer_small_buffer, i32 0, i32 0), i8** %118, align 4, !dbg !12687
  %119 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %8, i32 0, i32 1, !dbg !12688
  store i32 1, i32* %119, align 4, !dbg !12689
  %120 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %8, i32 0, i32 2, !dbg !12690
  store i8* getelementptr inbounds ([1025 x i8], [1025 x i8]* @g_transfer_rx_big_buffer, i32 0, i32 0), i8** %120, align 4, !dbg !12691
  %121 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %8, i32 0, i32 3, !dbg !12692
  store i32 1025, i32* %121, align 4, !dbg !12693
  %122 = call i32 @hal_spi_master_send_and_receive_dma(i32 noundef 3, %struct.hal_spi_master_send_and_receive_config_t* noundef nonnull %8) #20, !dbg !12694
  %123 = icmp eq i32 %122, 0, !dbg !12696
  br i1 %123, label %126, label %124, !dbg !12697

124:                                              ; preds = %115
  %125 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.19, i32 0, i32 0)) #20, !dbg !12698
  br label %126, !dbg !12700

126:                                              ; preds = %124, %115
  br label %127, !dbg !12701

127:                                              ; preds = %126, %127
  %128 = load volatile i8, i8* @g_spi_transaction_finish, align 1, !dbg !12702, !range !2756
  %129 = icmp eq i8 %128, 0, !dbg !12703
  br i1 %129, label %127, label %130, !dbg !12701, !llvm.loop !12704

130:                                              ; preds = %127
  %131 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.20, i32 0, i32 0)) #20, !dbg !12706
  br label %132, !dbg !12707

132:                                              ; preds = %132, %130
  call void @llvm.dbg.value(metadata i8* %1, metadata !12467, metadata !DIExpression(DW_OP_deref)), !dbg !12500
  call fastcc void @spi_query_slave_status(i8* noundef nonnull %1) #21, !dbg !12708
  %133 = load i8, i8* %1, align 1, !dbg !12710
  call void @llvm.dbg.value(metadata i8 %133, metadata !12467, metadata !DIExpression()), !dbg !12500
  %134 = and i8 %133, 32, !dbg !12711
  %135 = icmp eq i8 %134, 0, !dbg !12712
  br i1 %135, label %132, label %136, !dbg !12713, !llvm.loop !12714

136:                                              ; preds = %132
  %137 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i32 0, i32 0)) #20, !dbg !12716
  call void @llvm.dbg.value(metadata i32 1, metadata !12466, metadata !DIExpression()), !dbg !12500
  br label %141, !dbg !12717

138:                                              ; preds = %141
  %139 = add nuw nsw i32 %142, 1, !dbg !12719
  call void @llvm.dbg.value(metadata i32 %139, metadata !12466, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.value(metadata i32 %142, metadata !12466, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12500
  %140 = icmp eq i32 %139, 1025, !dbg !12721
  br i1 %140, label %149, label %141, !dbg !12717, !llvm.loop !12722

141:                                              ; preds = %136, %138
  %142 = phi i32 [ 1, %136 ], [ %139, %138 ]
  call void @llvm.dbg.value(metadata i32 %142, metadata !12466, metadata !DIExpression()), !dbg !12500
  %143 = getelementptr inbounds [1025 x i8], [1025 x i8]* @g_transfer_rx_big_buffer, i32 0, i32 %142, !dbg !12724
  %144 = load i8, i8* %143, align 1, !dbg !12724
  %145 = trunc i32 %142 to i16, !dbg !12727
  %146 = urem i16 %145, 115, !dbg !12727
  %147 = zext i8 %144 to i16, !dbg !12728
  %148 = icmp eq i16 %146, %147, !dbg !12728
  call void @llvm.dbg.value(metadata i32 %142, metadata !12466, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12500
  br i1 %148, label %138, label %168, !dbg !12729

149:                                              ; preds = %138
  %150 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i32 0, i32 0)) #20, !dbg !12730
  %151 = call i32 @hal_gpt_delay_ms(i32 noundef 0) #20, !dbg !12731
  %152 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i32 0, i32 0)) #20, !dbg !12732
  call void @llvm.dbg.value(metadata i8 12, metadata !12469, metadata !DIExpression()), !dbg !12500
  store i8 12, i8* %3, align 1, !dbg !12733
  call void @llvm.dbg.value(metadata i8* %3, metadata !12469, metadata !DIExpression(DW_OP_deref)), !dbg !12500
  %153 = call i32 @hal_spi_master_send_polling(i32 noundef 3, i8* noundef nonnull %3, i32 noundef 1) #20, !dbg !12734
  %154 = icmp eq i32 %153, 0, !dbg !12736
  br i1 %154, label %155, label %168, !dbg !12737

155:                                              ; preds = %149, %155
  call void @llvm.dbg.value(metadata i8* %1, metadata !12467, metadata !DIExpression(DW_OP_deref)), !dbg !12500
  call fastcc void @spi_query_slave_status(i8* noundef nonnull %1) #21, !dbg !12738
  %156 = load i8, i8* %1, align 1, !dbg !12740
  call void @llvm.dbg.value(metadata i8 %156, metadata !12467, metadata !DIExpression()), !dbg !12500
  %157 = and i8 %156, 1, !dbg !12741
  %158 = icmp eq i8 %157, 0, !dbg !12742
  br i1 %158, label %159, label %155, !dbg !12743, !llvm.loop !12744

159:                                              ; preds = %155
  %160 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i32 0, i32 0)) #20, !dbg !12747
  %161 = call i32 @hal_spi_master_deinit(i32 noundef 3) #20, !dbg !12748
  %162 = icmp eq i32 %161, 0, !dbg !12750
  br i1 %162, label %163, label %168, !dbg !12751

163:                                              ; preds = %159
  %164 = call i32 @hal_gpio_deinit(i32 noundef 25) #20, !dbg !12752
  %165 = call i32 @hal_gpio_deinit(i32 noundef 26) #20, !dbg !12753
  %166 = call i32 @hal_gpio_deinit(i32 noundef 27) #20, !dbg !12754
  %167 = call i32 @hal_gpio_deinit(i32 noundef 28) #20, !dbg !12755
  br label %168, !dbg !12756

168:                                              ; preds = %141, %159, %149, %98, %52, %44, %41, %34, %0, %163
  %169 = phi i8* [ getelementptr inbounds ([57 x i8], [57 x i8]* @.str.28, i32 0, i32 0), %163 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6.196, i32 0, i32 0), %0 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.197, i32 0, i32 0), %34 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i32 0, i32 0), %41 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10, i32 0, i32 0), %44 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i32 0, i32 0), %52 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i32 0, i32 0), %98 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.25, i32 0, i32 0), %149 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %159 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i32 0, i32 0), %141 ]
  %170 = call i32 (i8*, ...) @printf(i8* noundef %169) #20, !dbg !12500
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #22, !dbg !12756
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #22, !dbg !12756
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %11) #22, !dbg !12756
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %10) #22, !dbg !12756
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %9) #22, !dbg !12756
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !12756
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !12756
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #22, !dbg !12756
  ret void, !dbg !12756
}

; Function Attrs: noinline nounwind optsize
define internal void @spi_master_dma_callback(i32 noundef %0, i8* nocapture noundef readnone %1) #0 !dbg !12757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12759, metadata !DIExpression()), !dbg !12761
  call void @llvm.dbg.value(metadata i8* %1, metadata !12760, metadata !DIExpression()), !dbg !12761
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.29, i32 0, i32 0), i32 noundef %0) #20, !dbg !12762
  store volatile i8 1, i8* @g_spi_transaction_finish, align 1, !dbg !12763
  ret void, !dbg !12764
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @spi_query_slave_status(i8* nocapture noundef writeonly %0) unnamed_addr #0 !dbg !12765 {
  %2 = alloca i8, align 1
  %3 = alloca [2 x i8], align 1
  %4 = alloca %struct.hal_spi_master_send_and_receive_config_t, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !12769, metadata !DIExpression()), !dbg !12774
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !12775
  call void @llvm.dbg.value(metadata i8 10, metadata !12770, metadata !DIExpression()), !dbg !12774
  store i8 10, i8* %2, align 1, !dbg !12776
  %5 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i32 0, i32 0, !dbg !12777
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %5) #22, !dbg !12777
  call void @llvm.dbg.declare(metadata [2 x i8]* %3, metadata !12771, metadata !DIExpression()), !dbg !12778
  %6 = bitcast %struct.hal_spi_master_send_and_receive_config_t* %4 to i8*, !dbg !12779
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #22, !dbg !12779
  call void @llvm.dbg.declare(metadata %struct.hal_spi_master_send_and_receive_config_t* %4, metadata !12773, metadata !DIExpression()), !dbg !12780
  %7 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i32 0, i32 1, !dbg !12781
  store i8 0, i8* %7, align 1, !dbg !12782
  %8 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %4, i32 0, i32 3, !dbg !12783
  store i32 2, i32* %8, align 4, !dbg !12784
  %9 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %4, i32 0, i32 1, !dbg !12785
  store i32 1, i32* %9, align 4, !dbg !12786
  %10 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %4, i32 0, i32 0, !dbg !12787
  store i8* %2, i8** %10, align 4, !dbg !12788
  %11 = getelementptr inbounds %struct.hal_spi_master_send_and_receive_config_t, %struct.hal_spi_master_send_and_receive_config_t* %4, i32 0, i32 2, !dbg !12789
  store i8* %5, i8** %11, align 4, !dbg !12790
  %12 = call i32 @hal_spi_master_send_and_receive_polling(i32 noundef 3, %struct.hal_spi_master_send_and_receive_config_t* noundef nonnull %4) #20, !dbg !12791
  %13 = icmp eq i32 %12, 0, !dbg !12793
  br i1 %13, label %16, label %14, !dbg !12794

14:                                               ; preds = %1
  %15 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.30, i32 0, i32 0)) #20, !dbg !12795
  br label %21, !dbg !12797

16:                                               ; preds = %1
  %17 = load i8, i8* %7, align 1, !dbg !12798
  %18 = zext i8 %17 to i32, !dbg !12798
  %19 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.31, i32 0, i32 0), i32 noundef %18) #20, !dbg !12799
  %20 = load i8, i8* %7, align 1, !dbg !12800
  store i8 %20, i8* %0, align 1, !dbg !12801
  br label %21, !dbg !12802

21:                                               ; preds = %16, %14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #22, !dbg !12802
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %5) #22, !dbg !12802
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !12802
  ret void, !dbg !12802
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @plain_log_uart_init() unnamed_addr #0 !dbg !12803 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !12813
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #22, !dbg !12813
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !12805, metadata !DIExpression()), !dbg !12814
  %3 = tail call i32 @hal_gpio_init(i32 noundef 0) #20, !dbg !12815
  %4 = tail call i32 @hal_gpio_init(i32 noundef 1) #20, !dbg !12816
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #20, !dbg !12817
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #20, !dbg !12818
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !12819
  store i32 9, i32* %7, align 4, !dbg !12820
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !12821
  store i32 3, i32* %8, align 4, !dbg !12822
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !12823
  store i32 0, i32* %9, align 4, !dbg !12824
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !12825
  store i32 0, i32* %10, align 4, !dbg !12826
  %11 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #20, !dbg !12827
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #22, !dbg !12828
  ret void, !dbg !12828
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #10 !dbg !12829 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12831, metadata !DIExpression()), !dbg !12832
  ret i32 0, !dbg !12833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #10 !dbg !12834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12884, metadata !DIExpression()), !dbg !12886
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !12885, metadata !DIExpression()), !dbg !12886
  ret i32 0, !dbg !12887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #10 !dbg !12888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12890, metadata !DIExpression()), !dbg !12891
  ret i32 1, !dbg !12892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !12893 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12897, metadata !DIExpression()), !dbg !12900
  call void @llvm.dbg.value(metadata i32 %1, metadata !12898, metadata !DIExpression()), !dbg !12900
  call void @llvm.dbg.value(metadata i32 %2, metadata !12899, metadata !DIExpression()), !dbg !12900
  ret i32 0, !dbg !12901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !12902 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12906, metadata !DIExpression()), !dbg !12909
  call void @llvm.dbg.value(metadata i32 %1, metadata !12907, metadata !DIExpression()), !dbg !12909
  call void @llvm.dbg.value(metadata i32 %2, metadata !12908, metadata !DIExpression()), !dbg !12909
  ret i32 -1, !dbg !12910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #10 !dbg !12911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12915, metadata !DIExpression()), !dbg !12918
  call void @llvm.dbg.value(metadata i8* %1, metadata !12916, metadata !DIExpression()), !dbg !12918
  call void @llvm.dbg.value(metadata i32 %2, metadata !12917, metadata !DIExpression()), !dbg !12918
  ret i32 0, !dbg !12919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_getpid() local_unnamed_addr #10 !dbg !12920 {
  ret i32 1, !dbg !12921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !12922 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12926, metadata !DIExpression()), !dbg !12928
  call void @llvm.dbg.value(metadata i32 %1, metadata !12927, metadata !DIExpression()), !dbg !12928
  ret i32 -1, !dbg !12929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #10 !dbg !12930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12932, metadata !DIExpression()), !dbg !12933
  ret i32 -1, !dbg !12934
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2328 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !2526, metadata !DIExpression()), !dbg !12935
  call void @llvm.dbg.value(metadata i32 %1, metadata !2527, metadata !DIExpression()), !dbg !12935
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #22, !dbg !12936, !srcloc !12937
  call void @llvm.dbg.value(metadata i8* %3, metadata !2529, metadata !DIExpression()), !dbg !12935
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !12938
  %5 = icmp eq i8* %4, null, !dbg !12940
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !12941
  call void @llvm.dbg.value(metadata i8* %6, metadata !2528, metadata !DIExpression()), !dbg !12935
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !12942
  %8 = icmp ult i8* %3, %7, !dbg !12944
  %9 = xor i1 %8, true, !dbg !12945
  %10 = or i1 %5, %9, !dbg !12945
  br i1 %10, label %11, label %13, !dbg !12945

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !12946
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !12945
  br label %13, !dbg !12945

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !12946
  ret i8* %14, !dbg !12945
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !12947 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12949, metadata !DIExpression()), !dbg !12953
  call void @llvm.dbg.value(metadata i8* %1, metadata !12950, metadata !DIExpression()), !dbg !12953
  call void @llvm.dbg.value(metadata i32 %2, metadata !12951, metadata !DIExpression()), !dbg !12953
  call void @llvm.dbg.value(metadata i32 0, metadata !12952, metadata !DIExpression()), !dbg !12953
  %4 = icmp sgt i32 %2, 0, !dbg !12954
  br i1 %4, label %5, label %14, !dbg !12957

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !12952, metadata !DIExpression()), !dbg !12953
  call void @llvm.dbg.value(metadata i8* %7, metadata !12950, metadata !DIExpression()), !dbg !12953
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !12958
  call void @llvm.dbg.value(metadata i8* %8, metadata !12950, metadata !DIExpression()), !dbg !12953
  %9 = load i8, i8* %7, align 1, !dbg !12960
  %10 = zext i8 %9 to i32, !dbg !12960
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #20, !dbg !12961
  %12 = add nuw nsw i32 %6, 1, !dbg !12962
  call void @llvm.dbg.value(metadata i32 %12, metadata !12952, metadata !DIExpression()), !dbg !12953
  %13 = icmp eq i32 %12, %2, !dbg !12954
  br i1 %13, label %14, label %5, !dbg !12957, !llvm.loop !12963

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !12965
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #2 !dbg !12966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12968, metadata !DIExpression()), !dbg !12970
  %2 = add i32 %0, -1, !dbg !12971
  %3 = icmp ugt i32 %2, 16777215, !dbg !12973
  br i1 %3, label %8, label %4, !dbg !12974

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12975
  call void @llvm.dbg.value(metadata i32 %5, metadata !12969, metadata !DIExpression()), !dbg !12970
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12976
  %7 = and i32 %6, -4, !dbg !12976
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12976
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12977
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12978
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12979
  br label %8, !dbg !12980

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !12970
  ret i32 %9, !dbg !12981
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #2 !dbg !12982 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !12983
  ret void, !dbg !12984
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #11 !dbg !12985 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !12986
  ret i32 %1, !dbg !12987
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #11 !dbg !12988 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !12991
  %2 = lshr i32 %1, 3, !dbg !12992
  %3 = and i32 %2, 15, !dbg !12992
  call void @llvm.dbg.value(metadata i32 %3, metadata !12990, metadata !DIExpression()), !dbg !12993
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !12994

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !12995

5:                                                ; preds = %0, %0
  br label %9, !dbg !12997

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !12998
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !12999
  br label %15, !dbg !13001

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !12998
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !12999
  %12 = and i32 %11, 1024, !dbg !13002
  %13 = icmp eq i32 %12, 0, !dbg !13002
  br i1 %13, label %15, label %14, !dbg !13001

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !13003
  br label %15, !dbg !13005

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !13006
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !13007 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !13008
  %2 = or i32 %1, 15728640, !dbg !13008
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !13008
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !13009
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13010
  %4 = or i32 %3, 458752, !dbg !13010
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13010
  ret void, !dbg !13011
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #2 !dbg !13012 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !13013
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !13014
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !13015
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !13016
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !13017
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !13018
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !13019
  ret void, !dbg !13020
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { argmemonly nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { nofree nosync nounwind willreturn }
attributes #19 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { nobuiltin nounwind optsize "no-builtins" }
attributes #21 = { nobuiltin optsize "no-builtins" }
attributes #22 = { nounwind }
attributes #23 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !2654, !94, !345, !628, !2680, !783, !868, !982, !1026, !2684, !1116, !1211, !1536, !2730, !1624, !1635, !1993, !2054, !2732, !2134, !2299, !2311, !2521, !2532, !2642}
!llvm.ident = !{!2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734, !2734}
!llvm.module.flags = !{!2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !2, file: !3, line: 51, type: !90, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !53, globals: !89, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!4 = !{!5, !17, !37, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 163, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!10 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!11 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!12 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!13 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!14 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!15 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!16 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 186, baseType: !18, size: 32, elements: !19)
!18 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36}
!20 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!21 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!22 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!23 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!24 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!25 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!26 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!27 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!28 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!29 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!30 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!31 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!32 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!33 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!34 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!35 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!36 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 176, baseType: !18, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!40 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!41 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!42 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!43 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 98, baseType: !18, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!46 = !{!47, !48, !49, !50, !51, !52}
!47 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!48 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!49 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!50 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!51 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!52 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!53 = !{!54, !88}
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 32)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !57)
!56 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!57 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !58)
!58 = !{!59, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !78, !79, !83, !87}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !57, file: !56, line: 261, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !62, line: 48, baseType: !63)
!62 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !64, line: 79, baseType: !18)
!64 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!65 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !57, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !57, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !57, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !57, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !57, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !57, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !57, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !57, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !57, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !57, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !76)
!76 = !{!77}
!77 = !DISubrange(count: 1)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !57, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !57, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 16372)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !57, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !85)
!85 = !{!86}
!86 = !DISubrange(count: 16)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !57, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!89 = !{!0}
!90 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !91)
!91 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!92 = !DIGlobalVariableExpression(var: !93, expr: !DIExpression())
!93 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !94, file: !95, line: 48, type: !341, isLocal: false, isDefinition: true)
!94 = distinct !DICompileUnit(language: DW_LANG_C99, file: !95, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !96, retainedTypes: !263, globals: !278, splitDebugInlining: false, nameTableKind: None)
!95 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!96 = !{!97, !157, !162, !168, !245, !254, !259}
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 1170, baseType: !18, size: 32, elements: !99)
!98 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!99 = !{!100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156}
!100 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!101 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!102 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!103 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!104 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!105 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!106 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!107 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!108 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!109 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!110 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!111 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!112 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!113 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!114 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!115 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!116 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!117 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!118 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!119 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!120 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!121 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!122 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!123 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!124 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!125 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!126 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!127 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!128 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!129 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!130 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!131 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!132 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!133 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!134 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!135 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!136 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!137 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!138 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!139 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!140 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!141 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!142 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!143 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!144 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!145 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!146 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!147 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!148 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!149 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!150 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!151 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!152 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!153 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!154 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!155 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!156 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 82, baseType: !18, size: 32, elements: !159)
!158 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!159 = !{!160, !161}
!160 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!161 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!162 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 75, baseType: !18, size: 32, elements: !163)
!163 = !{!164, !165, !166, !167}
!164 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!165 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!166 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!167 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !56, line: 44, baseType: !7, size: 32, elements: !169)
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244}
!170 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!171 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!172 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!173 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!174 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!175 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!176 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!177 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!178 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!179 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!180 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!181 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!182 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!183 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!184 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!185 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!186 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!187 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!188 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!189 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!190 = !DIEnumerator(name: "KP_IRQn", value: 10)
!191 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!192 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!193 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!194 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!195 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!196 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!197 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!198 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!199 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!200 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!201 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!202 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!203 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!204 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!205 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!206 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!207 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!208 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!209 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!210 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!211 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!212 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!213 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!214 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!215 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!216 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!217 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!218 = !DIEnumerator(name: "SF_IRQn", value: 38)
!219 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!220 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!221 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!222 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!223 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!224 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!225 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!226 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!227 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!228 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!229 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!230 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!231 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!232 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!233 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!234 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!235 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!236 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!237 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!238 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!239 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!240 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!241 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!242 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!243 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!244 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!245 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 846, baseType: !18, size: 32, elements: !246)
!246 = !{!247, !248, !249, !250, !251, !252, !253}
!247 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!248 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!249 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!250 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!251 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!252 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!253 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 380, baseType: !18, size: 32, elements: !256)
!255 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!256 = !{!257, !258}
!257 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!258 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 397, baseType: !18, size: 32, elements: !260)
!260 = !{!261, !262}
!261 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!262 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!263 = !{!61, !264, !88}
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !56, line: 1272, baseType: !266)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1262, size: 288, elements: !267)
!267 = !{!268, !269, !270, !271, !273, !274, !275, !276, !277}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !266, file: !56, line: 1263, baseType: !60, size: 32)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !266, file: !56, line: 1264, baseType: !60, size: 32, offset: 32)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !266, file: !56, line: 1265, baseType: !60, size: 32, offset: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !266, file: !56, line: 1266, baseType: !272, size: 32, offset: 96)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !266, file: !56, line: 1267, baseType: !60, size: 32, offset: 128)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !266, file: !56, line: 1268, baseType: !60, size: 32, offset: 160)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !266, file: !56, line: 1269, baseType: !60, size: 32, offset: 192)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !266, file: !56, line: 1270, baseType: !60, size: 32, offset: 224)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !266, file: !56, line: 1271, baseType: !60, size: 32, offset: 256)
!278 = !{!92, !279, !288, !294, !316, !339}
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !94, file: !95, line: 49, type: !281, isLocal: false, isDefinition: true)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !56, line: 1260, baseType: !283)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1256, size: 96, elements: !284)
!284 = !{!285, !286, !287}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !283, file: !56, line: 1257, baseType: !272, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !283, file: !56, line: 1258, baseType: !60, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !283, file: !56, line: 1259, baseType: !60, size: 32, offset: 64)
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "flag", scope: !290, file: !95, line: 88, type: !91, isLocal: true, isDefinition: true)
!290 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !95, file: !95, line: 86, type: !291, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!291 = !DISubroutineType(types: !292)
!292 = !{null}
!293 = !{}
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !94, file: !95, line: 51, type: !296, isLocal: false, isDefinition: true)
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 768, elements: !314)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !158, line: 116, baseType: !298)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 111, size: 128, elements: !299)
!299 = !{!300, !302, !312, !313}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !298, file: !158, line: 112, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !255, line: 400, baseType: !259)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !298, file: !158, line: 113, baseType: !303, size: 64, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !158, line: 109, baseType: !304)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 106, size: 64, elements: !305)
!305 = !{!306, !311}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !304, file: !158, line: 107, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !255, line: 371, baseType: !308)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DISubroutineType(types: !310)
!310 = !{null, !88}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !304, file: !158, line: 108, baseType: !88, size: 32, offset: 32)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !298, file: !158, line: 114, baseType: !91, size: 8, offset: 96)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !298, file: !158, line: 115, baseType: !91, size: 8, offset: 104)
!314 = !{!315}
!315 = !DISubrange(count: 6)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !94, file: !95, line: 52, type: !318, isLocal: false, isDefinition: true)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !158, line: 134, baseType: !319)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 125, size: 4256, elements: !320)
!320 = !{!321, !332, !333, !334, !335, !336, !337, !338}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !319, file: !158, line: 126, baseType: !322, size: 4096)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 4096, elements: !330)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !158, line: 123, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 118, size: 128, elements: !325)
!325 = !{!326, !327, !328, !329}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !324, file: !158, line: 119, baseType: !303, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !324, file: !158, line: 120, baseType: !61, size: 32, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !324, file: !158, line: 121, baseType: !91, size: 8, offset: 96)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !324, file: !158, line: 122, baseType: !91, size: 8, offset: 104)
!330 = !{!331}
!331 = !DISubrange(count: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !319, file: !158, line: 127, baseType: !61, size: 32, offset: 4096)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !319, file: !158, line: 128, baseType: !61, size: 32, offset: 4128)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !319, file: !158, line: 129, baseType: !61, size: 32, offset: 4160)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !319, file: !158, line: 130, baseType: !61, size: 32, offset: 4192)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !319, file: !158, line: 131, baseType: !91, size: 8, offset: 4224)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !319, file: !158, line: 132, baseType: !91, size: 8, offset: 4232)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !319, file: !158, line: 133, baseType: !91, size: 8, offset: 4240)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !94, file: !95, line: 53, type: !61, isLocal: false, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 192, elements: !314)
!342 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !345, file: !346, line: 64, type: !446, isLocal: false, isDefinition: true)
!345 = distinct !DICompileUnit(language: DW_LANG_C99, file: !346, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !347, retainedTypes: !441, globals: !445, splitDebugInlining: false, nameTableKind: None)
!346 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!347 = !{!348, !400, !407, !411, !417, !421, !430, !435}
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 339, baseType: !18, size: 32, elements: !349)
!349 = !{!350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399}
!350 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!351 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!352 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!353 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!354 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!355 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!356 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!357 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!358 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!359 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!360 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!361 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!362 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!363 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!364 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!365 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!366 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!367 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!368 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!369 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!370 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!371 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!372 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!373 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!374 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!375 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!376 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!377 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!378 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!379 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!380 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!381 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!382 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!383 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!384 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!385 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!386 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!387 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!388 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!389 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!390 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!391 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!392 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!393 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!394 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!395 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!396 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!397 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!398 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!399 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!400 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 224, baseType: !7, size: 32, elements: !402)
!401 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!402 = !{!403, !404, !405, !406}
!403 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!404 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!405 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!406 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!407 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 210, baseType: !18, size: 32, elements: !408)
!408 = !{!409, !410}
!409 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!410 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!411 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 233, baseType: !7, size: 32, elements: !412)
!412 = !{!413, !414, !415, !416}
!413 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!414 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!415 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!416 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!417 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 217, baseType: !18, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!420 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!421 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 415, baseType: !18, size: 32, elements: !422)
!422 = !{!423, !424, !425, !426, !427, !428, !429}
!423 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!424 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!425 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!426 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!427 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!428 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!429 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!430 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 427, baseType: !18, size: 32, elements: !431)
!431 = !{!432, !433, !434}
!432 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!433 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!434 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!435 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 242, baseType: !18, size: 32, elements: !436)
!436 = !{!437, !438, !439, !440}
!437 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!438 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!439 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!440 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!441 = !{!88, !442, !443, !444}
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !401, line: 213, baseType: !407)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !401, line: 220, baseType: !417)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !401, line: 247, baseType: !435)
!445 = !{!343}
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !56, line: 1554, baseType: !448)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1522, size: 29440, elements: !449)
!449 = !{!450, !467, !471, !480, !481, !490, !491, !500, !501, !511, !512, !521, !522, !531, !532, !541, !542, !551, !555, !564, !565, !574, !575, !584, !593, !594, !605, !609, !618, !619}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !448, file: !56, line: 1523, baseType: !451, size: 256)
!451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 256, elements: !465)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !56, line: 1400, baseType: !453)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1395, size: 128, elements: !454)
!454 = !{!455, !456, !457, !458}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !453, file: !56, line: 1396, baseType: !60, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !453, file: !56, line: 1397, baseType: !60, size: 32, offset: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !453, file: !56, line: 1398, baseType: !60, size: 32, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !453, file: !56, line: 1399, baseType: !459, size: 32, offset: 96)
!459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 32, elements: !463)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !62, line: 24, baseType: !461)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !64, line: 43, baseType: !462)
!462 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!463 = !{!464}
!464 = !DISubrange(count: 4)
!465 = !{!466}
!466 = !DISubrange(count: 2)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !448, file: !56, line: 1524, baseType: !468, size: 1792, offset: 256)
!468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1792, elements: !469)
!469 = !{!470}
!470 = !DISubrange(count: 224)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !448, file: !56, line: 1525, baseType: !472, size: 256, offset: 2048)
!472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 256, elements: !465)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !56, line: 1409, baseType: !474)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1404, size: 128, elements: !475)
!475 = !{!476, !477, !478, !479}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !474, file: !56, line: 1405, baseType: !60, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !474, file: !56, line: 1406, baseType: !60, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !474, file: !56, line: 1407, baseType: !60, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !474, file: !56, line: 1408, baseType: !459, size: 32, offset: 96)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !448, file: !56, line: 1526, baseType: !468, size: 1792, offset: 2304)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !448, file: !56, line: 1527, baseType: !482, size: 256, offset: 4096)
!482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 256, elements: !465)
!483 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !56, line: 1417, baseType: !484)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1412, size: 128, elements: !485)
!485 = !{!486, !487, !488, !489}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !484, file: !56, line: 1413, baseType: !60, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !484, file: !56, line: 1414, baseType: !60, size: 32, offset: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !484, file: !56, line: 1415, baseType: !60, size: 32, offset: 64)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !484, file: !56, line: 1416, baseType: !459, size: 32, offset: 96)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !448, file: !56, line: 1528, baseType: !468, size: 1792, offset: 4352)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !448, file: !56, line: 1529, baseType: !492, size: 256, offset: 6144)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 256, elements: !465)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !56, line: 1426, baseType: !494)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1421, size: 128, elements: !495)
!495 = !{!496, !497, !498, !499}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !494, file: !56, line: 1422, baseType: !60, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !494, file: !56, line: 1423, baseType: !60, size: 32, offset: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !494, file: !56, line: 1424, baseType: !60, size: 32, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !494, file: !56, line: 1425, baseType: !459, size: 32, offset: 96)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !448, file: !56, line: 1530, baseType: !468, size: 1792, offset: 6400)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !448, file: !56, line: 1531, baseType: !502, size: 256, offset: 8192)
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !503, size: 256, elements: !465)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !56, line: 1432, baseType: !504)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1429, size: 128, elements: !505)
!505 = !{!506, !507}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !504, file: !56, line: 1430, baseType: !60, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !504, file: !56, line: 1431, baseType: !508, size: 96, offset: 32)
!508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 96, elements: !509)
!509 = !{!510}
!510 = !DISubrange(count: 12)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !448, file: !56, line: 1532, baseType: !468, size: 1792, offset: 8448)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !448, file: !56, line: 1533, baseType: !513, size: 256, offset: 10240)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 256, elements: !465)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !56, line: 1440, baseType: !515)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1435, size: 128, elements: !516)
!516 = !{!517, !518, !519, !520}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !515, file: !56, line: 1436, baseType: !60, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !515, file: !56, line: 1437, baseType: !60, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !515, file: !56, line: 1438, baseType: !60, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !515, file: !56, line: 1439, baseType: !459, size: 32, offset: 96)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !448, file: !56, line: 1534, baseType: !468, size: 1792, offset: 10496)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !448, file: !56, line: 1535, baseType: !523, size: 256, offset: 12288)
!523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !524, size: 256, elements: !465)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !56, line: 1448, baseType: !525)
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1443, size: 128, elements: !526)
!526 = !{!527, !528, !529, !530}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !525, file: !56, line: 1444, baseType: !60, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !525, file: !56, line: 1445, baseType: !60, size: 32, offset: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !525, file: !56, line: 1446, baseType: !60, size: 32, offset: 64)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !525, file: !56, line: 1447, baseType: !459, size: 32, offset: 96)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !448, file: !56, line: 1536, baseType: !468, size: 1792, offset: 12544)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !448, file: !56, line: 1537, baseType: !533, size: 256, offset: 14336)
!533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !534, size: 256, elements: !465)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !56, line: 1455, baseType: !535)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1450, size: 128, elements: !536)
!536 = !{!537, !538, !539, !540}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !535, file: !56, line: 1451, baseType: !60, size: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !535, file: !56, line: 1452, baseType: !60, size: 32, offset: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !535, file: !56, line: 1453, baseType: !60, size: 32, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !535, file: !56, line: 1454, baseType: !459, size: 32, offset: 96)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !448, file: !56, line: 1538, baseType: !468, size: 1792, offset: 14592)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !448, file: !56, line: 1539, baseType: !543, size: 512, offset: 16384)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !544, size: 512, elements: !463)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !56, line: 1463, baseType: !545)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1458, size: 128, elements: !546)
!546 = !{!547, !548, !549, !550}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !545, file: !56, line: 1459, baseType: !60, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !545, file: !56, line: 1460, baseType: !60, size: 32, offset: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !545, file: !56, line: 1461, baseType: !60, size: 32, offset: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !545, file: !56, line: 1462, baseType: !459, size: 32, offset: 96)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !448, file: !56, line: 1540, baseType: !552, size: 1536, offset: 16896)
!552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1536, elements: !553)
!553 = !{!554}
!554 = !DISubrange(count: 192)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !448, file: !56, line: 1541, baseType: !556, size: 256, offset: 18432)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !557, size: 256, elements: !465)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !56, line: 1471, baseType: !558)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1466, size: 128, elements: !559)
!559 = !{!560, !561, !562, !563}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !558, file: !56, line: 1467, baseType: !60, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !558, file: !56, line: 1468, baseType: !60, size: 32, offset: 32)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !558, file: !56, line: 1469, baseType: !60, size: 32, offset: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !558, file: !56, line: 1470, baseType: !459, size: 32, offset: 96)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !448, file: !56, line: 1542, baseType: !468, size: 1792, offset: 18688)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !448, file: !56, line: 1543, baseType: !566, size: 256, offset: 20480)
!566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !567, size: 256, elements: !465)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !56, line: 1480, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1475, size: 128, elements: !569)
!569 = !{!570, !571, !572, !573}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !568, file: !56, line: 1476, baseType: !60, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !568, file: !56, line: 1477, baseType: !60, size: 32, offset: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !568, file: !56, line: 1478, baseType: !60, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !568, file: !56, line: 1479, baseType: !459, size: 32, offset: 96)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !448, file: !56, line: 1544, baseType: !468, size: 1792, offset: 20736)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !448, file: !56, line: 1545, baseType: !576, size: 256, offset: 22528)
!576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 256, elements: !465)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !56, line: 1489, baseType: !578)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1484, size: 128, elements: !579)
!579 = !{!580, !581, !582, !583}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !578, file: !56, line: 1485, baseType: !60, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !578, file: !56, line: 1486, baseType: !60, size: 32, offset: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !578, file: !56, line: 1487, baseType: !60, size: 32, offset: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !578, file: !56, line: 1488, baseType: !459, size: 32, offset: 96)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !448, file: !56, line: 1546, baseType: !585, size: 256, offset: 22784)
!585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 256, elements: !465)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !56, line: 1497, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1492, size: 128, elements: !588)
!588 = !{!589, !590, !591, !592}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !587, file: !56, line: 1493, baseType: !60, size: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !587, file: !56, line: 1494, baseType: !60, size: 32, offset: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !587, file: !56, line: 1495, baseType: !60, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !587, file: !56, line: 1496, baseType: !459, size: 32, offset: 96)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !448, file: !56, line: 1547, baseType: !552, size: 1536, offset: 23040)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !448, file: !56, line: 1548, baseType: !595, size: 896, offset: 24576)
!595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !596, size: 896, elements: !603)
!596 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !56, line: 1505, baseType: !597)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1500, size: 128, elements: !598)
!598 = !{!599, !600, !601, !602}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !597, file: !56, line: 1501, baseType: !60, size: 32)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !597, file: !56, line: 1502, baseType: !60, size: 32, offset: 32)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !597, file: !56, line: 1503, baseType: !60, size: 32, offset: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !597, file: !56, line: 1504, baseType: !459, size: 32, offset: 96)
!603 = !{!604}
!604 = !DISubrange(count: 7)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !448, file: !56, line: 1549, baseType: !606, size: 1152, offset: 25472)
!606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1152, elements: !607)
!607 = !{!608}
!608 = !DISubrange(count: 144)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !448, file: !56, line: 1550, baseType: !610, size: 512, offset: 26624)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 512, elements: !463)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !56, line: 1513, baseType: !612)
!612 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1508, size: 128, elements: !613)
!613 = !{!614, !615, !616, !617}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !612, file: !56, line: 1509, baseType: !60, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !612, file: !56, line: 1510, baseType: !60, size: 32, offset: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !612, file: !56, line: 1511, baseType: !60, size: 32, offset: 64)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !612, file: !56, line: 1512, baseType: !459, size: 32, offset: 96)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !448, file: !56, line: 1551, baseType: !552, size: 1536, offset: 27136)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !448, file: !56, line: 1552, baseType: !620, size: 768, offset: 28672)
!620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !621, size: 768, elements: !314)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !56, line: 1519, baseType: !622)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1516, size: 128, elements: !623)
!623 = !{!624, !625}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !622, file: !56, line: 1517, baseType: !60, size: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !622, file: !56, line: 1518, baseType: !508, size: 96, offset: 32)
!626 = !DIGlobalVariableExpression(var: !627, expr: !DIExpression())
!627 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !628, file: !629, line: 101, type: !777, isLocal: true, isDefinition: true)
!628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !629, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !630, retainedTypes: !727, globals: !736, splitDebugInlining: false, nameTableKind: None)
!629 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!630 = !{!631, !638, !653, !659, !665, !670, !677, !693, !699, !703, !708, !715, !723}
!631 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 180, baseType: !18, size: 32, elements: !632)
!632 = !{!633, !634, !635, !636, !637}
!633 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!634 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!635 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!636 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!637 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!638 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 189, baseType: !18, size: 32, elements: !640)
!639 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!640 = !{!641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652}
!641 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!642 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!643 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!644 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!645 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!646 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!647 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!648 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!649 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!650 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!651 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!652 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!653 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 355, baseType: !7, size: 32, elements: !655)
!654 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!655 = !{!656, !657, !658}
!656 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!657 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!658 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!659 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 206, baseType: !7, size: 32, elements: !660)
!660 = !{!661, !662, !663, !664}
!661 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!662 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!663 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!664 = !DIEnumerator(name: "VDMA_OK", value: 0)
!665 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !629, line: 65, baseType: !18, size: 32, elements: !666)
!666 = !{!667, !668, !669}
!667 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!668 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!669 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!670 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 345, baseType: !7, size: 32, elements: !671)
!671 = !{!672, !673, !674, !675, !676}
!672 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!673 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!674 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!675 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!676 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!677 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 302, baseType: !18, size: 32, elements: !678)
!678 = !{!679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692}
!679 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!680 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!681 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!682 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!683 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!684 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!685 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!686 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!687 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!688 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!689 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!690 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!691 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!692 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!693 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 321, baseType: !18, size: 32, elements: !694)
!694 = !{!695, !696, !697, !698}
!695 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!696 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!697 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!698 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!699 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 330, baseType: !18, size: 32, elements: !700)
!700 = !{!701, !702}
!701 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!702 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!703 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 337, baseType: !18, size: 32, elements: !704)
!704 = !{!705, !706, !707}
!705 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!706 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!707 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!708 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !709, line: 101, baseType: !7, size: 32, elements: !710)
!709 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!710 = !{!711, !712, !713, !714}
!711 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!712 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!713 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!714 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!715 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !716, line: 152, baseType: !7, size: 32, elements: !717)
!716 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!717 = !{!718, !719, !720, !721, !722}
!718 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!719 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!720 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!721 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!722 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!723 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 222, baseType: !7, size: 32, elements: !724)
!724 = !{!725, !726}
!725 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!726 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!727 = !{!88, !61, !728}
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !730, line: 96, baseType: !731)
!730 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !730, line: 93, size: 64, elements: !732)
!732 = !{!733, !734}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !731, file: !730, line: 94, baseType: !91, size: 8)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !731, file: !730, line: 95, baseType: !735, size: 32, offset: 32)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !98, line: 186, baseType: !631)
!736 = !{!626, !737, !750, !755, !769, !775}
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !628, file: !629, line: 102, type: !739, isLocal: true, isDefinition: true)
!739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !740, size: 256, elements: !463)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !629, line: 74, baseType: !741)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !629, line: 71, size: 64, elements: !742)
!742 = !{!743, !749}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !741, file: !629, line: 72, baseType: !744, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !654, line: 410, baseType: !745)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32)
!746 = !DISubroutineType(types: !747)
!747 = !{null, !748, !88}
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !654, line: 359, baseType: !653)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !741, file: !629, line: 73, baseType: !88, size: 32, offset: 32)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !628, file: !629, line: 103, type: !752, isLocal: true, isDefinition: true)
!752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !729, size: 512, elements: !753)
!753 = !{!754}
!754 = !DISubrange(count: 8)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !628, file: !629, line: 104, type: !757, isLocal: true, isDefinition: true)
!757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !758, size: 896, elements: !463)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !654, line: 390, baseType: !759)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 382, size: 224, elements: !760)
!760 = !{!761, !763, !764, !765, !766, !767, !768}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !759, file: !654, line: 383, baseType: !762, size: 32)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !759, file: !654, line: 384, baseType: !61, size: 32, offset: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !759, file: !654, line: 385, baseType: !61, size: 32, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !759, file: !654, line: 386, baseType: !762, size: 32, offset: 96)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !759, file: !654, line: 387, baseType: !61, size: 32, offset: 128)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !759, file: !654, line: 388, baseType: !61, size: 32, offset: 160)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !759, file: !654, line: 389, baseType: !61, size: 32, offset: 192)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !628, file: !629, line: 105, type: !771, isLocal: true, isDefinition: true)
!771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !772, size: 416, elements: !773)
!772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !61)
!773 = !{!774}
!774 = !DISubrange(count: 13)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !628, file: !629, line: 90, type: !91, isLocal: true, isDefinition: true)
!777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !778, size: 128, elements: !463)
!778 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !779)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !629, line: 69, baseType: !665)
!780 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !783, file: !784, line: 53, type: !864, isLocal: false, isDefinition: true)
!783 = distinct !DICompileUnit(language: DW_LANG_C99, file: !784, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !785, retainedTypes: !796, globals: !852, splitDebugInlining: false, nameTableKind: None)
!784 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!785 = !{!97, !168, !638, !631, !786}
!786 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !730, line: 46, baseType: !18, size: 32, elements: !787)
!787 = !{!788, !789, !790, !791, !792, !793, !794, !795}
!788 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!789 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!790 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!791 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!792 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!793 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!794 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!795 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!796 = !{!797}
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !799)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !800)
!800 = !{!801, !807, !812, !818, !819, !824, !829, !830, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !799, file: !56, line: 547, baseType: !802, size: 32)
!802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 543, size: 32, elements: !803)
!803 = !{!804, !805, !806}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !802, file: !56, line: 544, baseType: !272, size: 32)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !802, file: !56, line: 545, baseType: !60, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !802, file: !56, line: 546, baseType: !60, size: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !799, file: !56, line: 551, baseType: !808, size: 32, offset: 32)
!808 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 548, size: 32, elements: !809)
!809 = !{!810, !811}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !808, file: !56, line: 549, baseType: !60, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !808, file: !56, line: 550, baseType: !60, size: 32)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !799, file: !56, line: 556, baseType: !813, size: 32, offset: 64)
!813 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 552, size: 32, elements: !814)
!814 = !{!815, !816, !817}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !813, file: !56, line: 553, baseType: !272, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !813, file: !56, line: 554, baseType: !60, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !813, file: !56, line: 555, baseType: !60, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !799, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !799, file: !56, line: 561, baseType: !820, size: 32, offset: 128)
!820 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 558, size: 32, elements: !821)
!821 = !{!822, !823}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !820, file: !56, line: 559, baseType: !60, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !820, file: !56, line: 560, baseType: !60, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !799, file: !56, line: 565, baseType: !825, size: 32, offset: 160)
!825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 562, size: 32, elements: !826)
!826 = !{!827, !828}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !825, file: !56, line: 563, baseType: !272, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !825, file: !56, line: 564, baseType: !60, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !799, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !799, file: !56, line: 570, baseType: !831, size: 32, offset: 224)
!831 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 567, size: 32, elements: !832)
!832 = !{!833, !834}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !831, file: !56, line: 568, baseType: !60, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !831, file: !56, line: 569, baseType: !60, size: 32)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !799, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !799, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !799, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !799, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !799, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !799, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !799, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !799, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !799, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !799, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !799, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !799, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !799, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !799, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !799, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !799, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !799, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!852 = !{!781, !853, !858}
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !783, file: !784, line: 54, type: !855, isLocal: false, isDefinition: true)
!855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !856, size: 128, elements: !463)
!856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !98, line: 1237, baseType: !97)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !783, file: !784, line: 55, type: !860, isLocal: false, isDefinition: true)
!860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !861, size: 128, elements: !463)
!861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !862)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !56, line: 125, baseType: !863)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !56, line: 123, baseType: !168)
!864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !865, size: 128, elements: !463)
!865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !797)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "g_spi_master_status", scope: !868, file: !869, line: 55, type: !978, isLocal: true, isDefinition: true)
!868 = distinct !DICompileUnit(language: DW_LANG_C99, file: !869, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !870, retainedTypes: !951, globals: !953, splitDebugInlining: false, nameTableKind: None)
!869 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_spi_master.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!870 = !{!871, !879, !886, !891, !895, !899, !708, !903, !907, !911, !921, !925, !929, !933, !938, !942, !946, !97, !168}
!871 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 550, baseType: !7, size: 32, elements: !873)
!872 = !DIFile(filename: "../../../../../driver/chip/inc/hal_spi_master.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!873 = !{!874, !875, !876, !877, !878}
!874 = !DIEnumerator(name: "HAL_SPI_MASTER_STATUS_ERROR", value: -4)
!875 = !DIEnumerator(name: "HAL_SPI_MASTER_STATUS_ERROR_BUSY", value: -3)
!876 = !DIEnumerator(name: "HAL_SPI_MASTER_STATUS_ERROR_PORT", value: -2)
!877 = !DIEnumerator(name: "HAL_SPI_MASTER_STATUS_INVALID_PARAMETER", value: -1)
!878 = !DIEnumerator(name: "HAL_SPI_MASTER_STATUS_OK", value: 0)
!879 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 580, baseType: !18, size: 32, elements: !880)
!880 = !{!881, !882, !883, !884, !885}
!881 = !DIEnumerator(name: "HAL_SPI_MASTER_0", value: 0)
!882 = !DIEnumerator(name: "HAL_SPI_MASTER_1", value: 1)
!883 = !DIEnumerator(name: "HAL_SPI_MASTER_2", value: 2)
!884 = !DIEnumerator(name: "HAL_SPI_MASTER_3", value: 3)
!885 = !DIEnumerator(name: "HAL_SPI_MASTER_MAX", value: 4)
!886 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 590, baseType: !18, size: 32, elements: !887)
!887 = !{!888, !889, !890}
!888 = !DIEnumerator(name: "HAL_SPI_MASTER_SLAVE_0", value: 0)
!889 = !DIEnumerator(name: "HAL_SPI_MASTER_SLAVE_1", value: 1)
!890 = !DIEnumerator(name: "HAL_SPI_MASTER_SLAVE_MAX", value: 2)
!891 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 611, baseType: !18, size: 32, elements: !892)
!892 = !{!893, !894}
!893 = !DIEnumerator(name: "HAL_SPI_MASTER_LSB_FIRST", value: 0)
!894 = !DIEnumerator(name: "HAL_SPI_MASTER_MSB_FIRST", value: 1)
!895 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 597, baseType: !18, size: 32, elements: !896)
!896 = !{!897, !898}
!897 = !DIEnumerator(name: "HAL_SPI_MASTER_CLOCK_POLARITY0", value: 0)
!898 = !DIEnumerator(name: "HAL_SPI_MASTER_CLOCK_POLARITY1", value: 1)
!899 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 604, baseType: !18, size: 32, elements: !900)
!900 = !{!901, !902}
!901 = !DIEnumerator(name: "HAL_SPI_MASTER_CLOCK_PHASE0", value: 0)
!902 = !DIEnumerator(name: "HAL_SPI_MASTER_CLOCK_PHASE1", value: 1)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 489, baseType: !18, size: 32, elements: !904)
!904 = !{!905, !906}
!905 = !DIEnumerator(name: "HAL_SPI_MASTER_LITTLE_ENDIAN", value: 0)
!906 = !DIEnumerator(name: "HAL_SPI_MASTER_BIG_ENDIAN", value: 1)
!907 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 496, baseType: !18, size: 32, elements: !908)
!908 = !{!909, !910}
!909 = !DIEnumerator(name: "HAL_SPI_MASTER_CHIP_SELECT_LOW", value: 0)
!910 = !DIEnumerator(name: "HAL_SPI_MASTER_CHIP_SELECT_HIGH", value: 1)
!911 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 503, baseType: !18, size: 32, elements: !912)
!912 = !{!913, !914, !915, !916, !917, !918, !919, !920}
!913 = !DIEnumerator(name: "HAL_SPI_MASTER_NO_GET_TICK_MODE", value: 0)
!914 = !DIEnumerator(name: "HAL_SPI_MASTER_GET_TICK_DELAY1", value: 1)
!915 = !DIEnumerator(name: "HAL_SPI_MASTER_GET_TICK_DELAY2", value: 2)
!916 = !DIEnumerator(name: "HAL_SPI_MASTER_GET_TICK_DELAY3", value: 3)
!917 = !DIEnumerator(name: "HAL_SPI_MASTER_GET_TICK_DELAY4", value: 4)
!918 = !DIEnumerator(name: "HAL_SPI_MASTER_GET_TICK_DELAY5", value: 5)
!919 = !DIEnumerator(name: "HAL_SPI_MASTER_GET_TICK_DELAY6", value: 6)
!920 = !DIEnumerator(name: "HAL_SPI_MASTER_GET_TICK_DELAY7", value: 7)
!921 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 516, baseType: !18, size: 32, elements: !922)
!922 = !{!923, !924}
!923 = !DIEnumerator(name: "HAL_SPI_MASTER_SAMPLE_POSITIVE", value: 0)
!924 = !DIEnumerator(name: "HAL_SPI_MASTER_SAMPLE_NEGATIVE", value: 1)
!925 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 560, baseType: !18, size: 32, elements: !926)
!926 = !{!927, !928}
!927 = !DIEnumerator(name: "HAL_SPI_MASTER_BUSY", value: 0)
!928 = !DIEnumerator(name: "HAL_SPI_MASTER_IDLE", value: 1)
!929 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 543, baseType: !18, size: 32, elements: !930)
!930 = !{!931, !932}
!931 = !DIEnumerator(name: "HAL_SPI_MASTER_EVENT_SEND_FINISHED", value: 0)
!932 = !DIEnumerator(name: "HAL_SPI_MASTER_EVENT_RECEIVE_FINISHED", value: 1)
!933 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !934, line: 42, baseType: !18, size: 32, elements: !935)
!934 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_spi_master_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!935 = !{!936, !937}
!936 = !DIEnumerator(name: "SPI_TX", value: 0)
!937 = !DIEnumerator(name: "SPI_RX", value: 1)
!938 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !934, line: 47, baseType: !18, size: 32, elements: !939)
!939 = !{!940, !941}
!940 = !DIEnumerator(name: "SPI_MODE_FIFO", value: 0)
!941 = !DIEnumerator(name: "SPI_MODE_DMA", value: 1)
!942 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 525, baseType: !18, size: 32, elements: !943)
!943 = !{!944, !945}
!944 = !DIEnumerator(name: "HAL_SPI_MASTER_DEASSERT_DISABLE", value: 0)
!945 = !DIEnumerator(name: "HAL_SPI_MASTER_DEASSERT_ENABLE", value: 1)
!946 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 534, baseType: !18, size: 32, elements: !947)
!947 = !{!948, !949, !950}
!948 = !DIEnumerator(name: "HAL_SPI_MASTER_MACRO_GROUP_A", value: 0)
!949 = !DIEnumerator(name: "HAL_SPI_MASTER_MACRO_GROUP_B", value: 1)
!950 = !DIEnumerator(name: "HAL_SPI_MASTER_MACRO_GROUP_C", value: 2)
!951 = !{!88, !61, !952}
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_port_t", file: !98, line: 586, baseType: !879)
!953 = !{!866, !954, !956, !960, !968, !971}
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "g_spix_cg_code", scope: !868, file: !869, line: 51, type: !855, isLocal: true, isDefinition: true)
!956 = !DIGlobalVariableExpression(var: !957, expr: !DIExpression())
!957 = distinct !DIGlobalVariable(name: "g_spix_irq_code", scope: !868, file: !869, line: 50, type: !958, isLocal: true, isDefinition: true)
!958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !959, size: 128, elements: !463)
!959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !863)
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "g_spix_callback", scope: !868, file: !869, line: 53, type: !962, isLocal: true, isDefinition: true)
!962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !963, size: 128, elements: !463)
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_callback_t", file: !872, line: 636, baseType: !964)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!965 = !DISubroutineType(types: !966)
!966 = !{null, !967, !88}
!967 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_callback_event_t", file: !872, line: 546, baseType: !929)
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(name: "g_spix_user_data", scope: !868, file: !869, line: 54, type: !970, isLocal: true, isDefinition: true)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 128, elements: !463)
!971 = !DIGlobalVariableExpression(var: !972, expr: !DIExpression())
!972 = distinct !DIGlobalVariable(name: "g_spix_pri_code", scope: !868, file: !869, line: 52, type: !973, isLocal: true, isDefinition: true)
!973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !974, size: 64, elements: !463)
!974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !62, line: 36, baseType: !976)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !64, line: 57, baseType: !977)
!977 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 32, elements: !463)
!979 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !460)
!980 = !DIGlobalVariableExpression(var: !981, expr: !DIExpression())
!981 = distinct !DIGlobalVariable(name: "spi_master_register", scope: !982, file: !983, line: 44, type: !1002, isLocal: false, isDefinition: true)
!982 = distinct !DICompileUnit(language: DW_LANG_C99, file: !983, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !984, retainedTypes: !985, globals: !987, splitDebugInlining: false, nameTableKind: None)
!983 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_spi_master_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!984 = !{!933, !879, !929, !938, !886, !891, !895, !899, !903, !907, !911, !921, !871, !942}
!985 = !{!88, !61, !975, !986}
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!987 = !{!980, !988, !992, !995, !997, !1000}
!988 = !DIGlobalVariableExpression(var: !989, expr: !DIExpression())
!989 = distinct !DIGlobalVariable(name: "g_spi_direction", scope: !982, file: !983, line: 45, type: !990, isLocal: false, isDefinition: true)
!990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 128, elements: !463)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "spi_direction_t", file: !934, line: 45, baseType: !933)
!992 = !DIGlobalVariableExpression(var: !993, expr: !DIExpression())
!993 = distinct !DIGlobalVariable(name: "g_packet_count", scope: !982, file: !983, line: 49, type: !994, isLocal: true, isDefinition: true)
!994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !975, size: 64, elements: !463)
!995 = !DIGlobalVariableExpression(var: !996, expr: !DIExpression())
!996 = distinct !DIGlobalVariable(name: "g_packet_length", scope: !982, file: !983, line: 48, type: !994, isLocal: true, isDefinition: true)
!997 = !DIGlobalVariableExpression(var: !998, expr: !DIExpression())
!998 = distinct !DIGlobalVariable(name: "g_pause_count", scope: !982, file: !983, line: 47, type: !999, isLocal: true, isDefinition: true)
!999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 128, elements: !463)
!1000 = !DIGlobalVariableExpression(var: !1001, expr: !DIExpression())
!1001 = distinct !DIGlobalVariable(name: "g_small_size_pause_count", scope: !982, file: !983, line: 51, type: !999, isLocal: true, isDefinition: true)
!1002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1003, size: 128, elements: !463)
!1003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1004)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "SPI_MASTER_REGISTER_T", file: !56, line: 1573, baseType: !1006)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1561, size: 352, elements: !1007)
!1007 = !{!1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_CFG0", scope: !1006, file: !56, line: 1562, baseType: !60, size: 32)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_CFG1", scope: !1006, file: !56, line: 1563, baseType: !60, size: 32, offset: 32)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_TX_SRC", scope: !1006, file: !56, line: 1564, baseType: !60, size: 32, offset: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_RX_DST", scope: !1006, file: !56, line: 1565, baseType: !60, size: 32, offset: 96)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_TX_DATA", scope: !1006, file: !56, line: 1566, baseType: !60, size: 32, offset: 128)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_RX_DATA", scope: !1006, file: !56, line: 1567, baseType: !272, size: 32, offset: 160)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_CMD", scope: !1006, file: !56, line: 1568, baseType: !60, size: 32, offset: 192)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_STATUS0", scope: !1006, file: !56, line: 1569, baseType: !272, size: 32, offset: 224)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_STATUS1", scope: !1006, file: !56, line: 1570, baseType: !272, size: 32, offset: 256)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_PAD_MACRO_SEL", scope: !1006, file: !56, line: 1571, baseType: !60, size: 32, offset: 288)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "SPI_CFG2", scope: !1006, file: !56, line: 1572, baseType: !60, size: 32, offset: 320)
!1019 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1020 = distinct !DIGlobalVariable(name: "priority_set", scope: !1021, file: !1022, line: 128, type: !61, isLocal: true, isDefinition: true)
!1021 = distinct !DISubprogram(name: "hal_nvic_init", scope: !1022, file: !1022, line: 126, type: !1023, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !1112)
!1022 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1023 = !DISubroutineType(types: !1024)
!1024 = !{!1025}
!1025 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !716, line: 158, baseType: !715)
!1026 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1022, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1027, retainedTypes: !1028, globals: !1094, splitDebugInlining: false, nameTableKind: None)
!1027 = !{!715, !168}
!1028 = !{!862, !1029, !61, !1062, !1092}
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1031, line: 418, baseType: !1032)
!1031 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1031, line: 395, size: 1120, elements: !1033)
!1033 = !{!1034, !1035, !1036, !1037, !1038, !1039, !1040, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1051, !1052, !1053, !1055, !1059, !1061}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1032, file: !1031, line: 397, baseType: !272, size: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1032, file: !1031, line: 398, baseType: !60, size: 32, offset: 32)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1032, file: !1031, line: 399, baseType: !60, size: 32, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1032, file: !1031, line: 400, baseType: !60, size: 32, offset: 96)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1032, file: !1031, line: 401, baseType: !60, size: 32, offset: 128)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1032, file: !1031, line: 402, baseType: !60, size: 32, offset: 160)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1032, file: !1031, line: 403, baseType: !1041, size: 96, offset: 192)
!1041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 96, elements: !509)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1032, file: !1031, line: 404, baseType: !60, size: 32, offset: 288)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1032, file: !1031, line: 405, baseType: !60, size: 32, offset: 320)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1032, file: !1031, line: 406, baseType: !60, size: 32, offset: 352)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1032, file: !1031, line: 407, baseType: !60, size: 32, offset: 384)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1032, file: !1031, line: 408, baseType: !60, size: 32, offset: 416)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1032, file: !1031, line: 409, baseType: !60, size: 32, offset: 448)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1032, file: !1031, line: 410, baseType: !60, size: 32, offset: 480)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1032, file: !1031, line: 411, baseType: !1050, size: 64, offset: 512)
!1050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 64, elements: !465)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1032, file: !1031, line: 412, baseType: !272, size: 32, offset: 576)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1032, file: !1031, line: 413, baseType: !272, size: 32, offset: 608)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1032, file: !1031, line: 414, baseType: !1054, size: 128, offset: 640)
!1054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 128, elements: !463)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1032, file: !1031, line: 415, baseType: !1056, size: 160, offset: 768)
!1056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 160, elements: !1057)
!1057 = !{!1058}
!1058 = !DISubrange(count: 5)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1032, file: !1031, line: 416, baseType: !1060, size: 160, offset: 928)
!1060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !1057)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1032, file: !1031, line: 417, baseType: !60, size: 32, offset: 1088)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1031, line: 378, baseType: !1064)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1031, line: 363, size: 28704, elements: !1065)
!1065 = !{!1066, !1068, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1083, !1087, !1091}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1064, file: !1031, line: 365, baseType: !1067, size: 256)
!1067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !753)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1064, file: !1031, line: 366, baseType: !1069, size: 768, offset: 256)
!1069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !1070)
!1070 = !{!1071}
!1071 = !DISubrange(count: 24)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1064, file: !1031, line: 367, baseType: !1067, size: 256, offset: 1024)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1064, file: !1031, line: 368, baseType: !1069, size: 768, offset: 1280)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1064, file: !1031, line: 369, baseType: !1067, size: 256, offset: 2048)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1064, file: !1031, line: 370, baseType: !1069, size: 768, offset: 2304)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1064, file: !1031, line: 371, baseType: !1067, size: 256, offset: 3072)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1064, file: !1031, line: 372, baseType: !1069, size: 768, offset: 3328)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1064, file: !1031, line: 373, baseType: !1067, size: 256, offset: 4096)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1064, file: !1031, line: 374, baseType: !1080, size: 1792, offset: 4352)
!1080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !1081)
!1081 = !{!1082}
!1082 = !DISubrange(count: 56)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1064, file: !1031, line: 375, baseType: !1084, size: 1920, offset: 6144)
!1084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 1920, elements: !1085)
!1085 = !{!1086}
!1086 = !DISubrange(count: 240)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1064, file: !1031, line: 376, baseType: !1088, size: 20608, offset: 8064)
!1088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !1089)
!1089 = !{!1090}
!1090 = !DISubrange(count: 644)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1064, file: !1031, line: 377, baseType: !60, size: 32, offset: 28672)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !62, line: 44, baseType: !1093)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !64, line: 77, baseType: !7)
!1094 = !{!1095, !1096, !1109}
!1095 = !DIGlobalVariableExpression(var: !1020, expr: !DIExpression())
!1096 = !DIGlobalVariableExpression(var: !1097, expr: !DIExpression())
!1097 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !1026, file: !1022, line: 119, type: !1098, isLocal: false, isDefinition: true)
!1098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1099, size: 4096, elements: !1107)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !1022, line: 50, baseType: !1100)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1022, line: 47, size: 64, elements: !1101)
!1101 = !{!1102, !1106}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !1100, file: !1022, line: 48, baseType: !1103, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 32)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{null, !862}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !1100, file: !1022, line: 49, baseType: !61, size: 32, offset: 32)
!1107 = !{!1108}
!1108 = !DISubrange(count: 64)
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !1026, file: !1022, line: 52, type: !1111, isLocal: true, isDefinition: true)
!1111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !772, size: 2048, elements: !1107)
!1112 = !{!1113}
!1113 = !DILocalVariable(name: "i", scope: !1021, file: !1022, line: 129, type: !61)
!1114 = !DIGlobalVariableExpression(var: !1115, expr: !DIExpression())
!1115 = distinct !DIGlobalVariable(name: "DelayResume", scope: !1116, file: !1117, line: 55, type: !91, isLocal: false, isDefinition: true)
!1116 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1117, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1118, retainedTypes: !1153, globals: !1188, splitDebugInlining: false, nameTableKind: None)
!1117 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1118 = !{!1119, !1127, !1132}
!1119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !1120, line: 51, baseType: !18, size: 32, elements: !1121)
!1120 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1121 = !{!1122, !1123, !1124, !1125, !1126}
!1122 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!1123 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!1124 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!1125 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!1126 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!1127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !1120, line: 62, baseType: !18, size: 32, elements: !1128)
!1128 = !{!1129, !1130, !1131}
!1129 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!1130 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!1131 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!1132 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1133, line: 228, baseType: !18, size: 32, elements: !1134)
!1133 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1134 = !{!1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152}
!1135 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!1136 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!1137 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!1138 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!1139 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!1140 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!1141 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!1142 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!1143 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!1144 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!1145 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!1146 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!1147 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!1148 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!1149 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!1150 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!1151 = !DIEnumerator(name: "NR_MUXS", value: 16)
!1152 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!1153 = !{!1154, !1155, !1177, !762, !61, !18, !1183, !1185, !1186, !986}
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1157)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1158)
!1158 = !{!1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1157, file: !56, line: 2759, baseType: !60, size: 32)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1157, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1157, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1157, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1157, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1157, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1157, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1157, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1157, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1157, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1157, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1157, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1157, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1157, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1157, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1157, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1157, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1157, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 32)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1179)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1180)
!1180 = !{!1181, !1182}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1179, file: !56, line: 2799, baseType: !60, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1179, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !18)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 32)
!1187 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !462)
!1188 = !{!1114, !1189, !1191, !1193, !1195, !1197, !1199, !1201, !1203, !1205, !1207}
!1189 = !DIGlobalVariableExpression(var: !1190, expr: !DIExpression())
!1190 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !1116, file: !1117, line: 604, type: !460, isLocal: false, isDefinition: true)
!1191 = !DIGlobalVariableExpression(var: !1192, expr: !DIExpression())
!1192 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !1116, file: !1117, line: 605, type: !61, isLocal: false, isDefinition: true)
!1193 = !DIGlobalVariableExpression(var: !1194, expr: !DIExpression())
!1194 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !1116, file: !1117, line: 606, type: !61, isLocal: false, isDefinition: true)
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !1116, file: !1117, line: 607, type: !61, isLocal: false, isDefinition: true)
!1197 = !DIGlobalVariableExpression(var: !1198, expr: !DIExpression())
!1198 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !1116, file: !1117, line: 608, type: !61, isLocal: false, isDefinition: true)
!1199 = !DIGlobalVariableExpression(var: !1200, expr: !DIExpression())
!1200 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !1116, file: !1117, line: 609, type: !61, isLocal: false, isDefinition: true)
!1201 = !DIGlobalVariableExpression(var: !1202, expr: !DIExpression())
!1202 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !1116, file: !1117, line: 610, type: !61, isLocal: false, isDefinition: true)
!1203 = !DIGlobalVariableExpression(var: !1204, expr: !DIExpression())
!1204 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !1116, file: !1117, line: 611, type: !61, isLocal: false, isDefinition: true)
!1205 = !DIGlobalVariableExpression(var: !1206, expr: !DIExpression())
!1206 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !1116, file: !1117, line: 665, type: !61, isLocal: false, isDefinition: true)
!1207 = !DIGlobalVariableExpression(var: !1208, expr: !DIExpression())
!1208 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !1116, file: !1117, line: 666, type: !61, isLocal: false, isDefinition: true)
!1209 = !DIGlobalVariableExpression(var: !1210, expr: !DIExpression())
!1210 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !1211, file: !1212, line: 334, type: !91, isLocal: false, isDefinition: true)
!1211 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1212, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1213, retainedTypes: !1381, globals: !1521, splitDebugInlining: false, nameTableKind: None)
!1212 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1213 = !{!1214, !1305, !1311, !1318, !1330, !1341, !1350, !1359, !1363, !1367}
!1214 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1215, line: 58, baseType: !7, size: 32, elements: !1216)
!1215 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1216 = !{!1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304}
!1217 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!1218 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!1219 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!1220 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!1221 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!1222 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!1223 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!1224 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!1225 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!1226 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!1227 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!1228 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!1229 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!1230 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!1231 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!1232 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!1233 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!1234 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!1235 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!1236 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!1237 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!1238 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!1239 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!1240 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!1241 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!1242 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!1243 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!1244 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!1245 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!1246 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!1247 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!1248 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!1249 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!1250 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!1251 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!1252 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!1253 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!1254 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!1255 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!1256 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!1257 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!1258 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!1259 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!1260 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!1261 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!1262 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!1263 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!1264 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!1265 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!1266 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!1267 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!1268 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!1269 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!1270 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!1271 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!1272 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!1273 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!1274 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!1275 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!1276 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!1277 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!1278 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!1279 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!1280 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!1281 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!1282 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!1283 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!1284 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!1285 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!1286 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!1287 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!1288 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!1289 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!1290 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!1291 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!1292 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!1293 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!1294 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!1295 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!1296 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!1297 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!1298 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!1299 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!1300 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!1301 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!1302 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!1303 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!1304 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!1305 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1306, line: 81, baseType: !18, size: 32, elements: !1307)
!1306 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1307 = !{!1308, !1309, !1310}
!1308 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!1309 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!1310 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!1311 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1212, line: 298, baseType: !18, size: 32, elements: !1312)
!1312 = !{!1313, !1314, !1315, !1316, !1317}
!1313 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!1314 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!1315 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!1316 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!1317 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!1318 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1319, line: 51, baseType: !18, size: 32, elements: !1320)
!1319 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1320 = !{!1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329}
!1321 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!1322 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!1323 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!1324 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!1325 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!1326 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!1327 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!1328 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!1329 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!1330 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1331, line: 110, baseType: !7, size: 32, elements: !1332)
!1331 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1332 = !{!1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340}
!1333 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1334 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1335 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1336 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1337 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1338 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1339 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1340 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1341 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1319, line: 73, baseType: !18, size: 32, elements: !1342)
!1342 = !{!1343, !1344, !1345, !1346, !1347, !1348, !1349}
!1343 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!1344 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!1345 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!1346 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!1347 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!1348 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!1349 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!1350 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1319, line: 83, baseType: !18, size: 32, elements: !1351)
!1351 = !{!1352, !1353, !1354, !1355, !1356, !1357, !1358}
!1352 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!1353 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!1354 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!1355 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!1356 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!1357 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!1358 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!1359 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1319, line: 98, baseType: !18, size: 32, elements: !1360)
!1360 = !{!1361, !1362}
!1361 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!1362 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!1363 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1306, line: 76, baseType: !18, size: 32, elements: !1364)
!1364 = !{!1365, !1366}
!1365 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!1366 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!1367 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1306, line: 208, baseType: !18, size: 32, elements: !1368)
!1368 = !{!1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380}
!1369 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!1370 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!1371 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!1372 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!1373 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!1374 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!1375 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!1376 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!1377 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!1378 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!1379 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!1380 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!1381 = !{!61, !1154, !1185, !762, !1382, !1492, !1514, !88, !1520, !462}
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1306, line: 193, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1306, line: 134, size: 1824, elements: !1385)
!1385 = !{!1386, !1387, !1388, !1395, !1401, !1405, !1413, !1414, !1421, !1422, !1423, !1424, !1432, !1435, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1486, !1487, !1491}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1384, file: !1306, line: 136, baseType: !61, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1384, file: !1306, line: 137, baseType: !762, size: 32, offset: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1384, file: !1306, line: 138, baseType: !1389, size: 32, offset: 64)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1390, line: 56, baseType: !1391)
!1390 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 32)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 54, size: 8, elements: !1393)
!1393 = !{!1394}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1392, file: !1390, line: 55, baseType: !460, size: 8)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1384, file: !1306, line: 139, baseType: !1396, size: 32, offset: 96)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1390, line: 46, baseType: !1397)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 44, size: 8, elements: !1399)
!1399 = !{!1400}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1398, file: !1390, line: 45, baseType: !460, size: 8)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1384, file: !1306, line: 140, baseType: !1402, size: 8, offset: 128)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !62, line: 20, baseType: !1403)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !64, line: 41, baseType: !1404)
!1404 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1384, file: !1306, line: 143, baseType: !1406, size: 32, offset: 160)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1408, line: 146, baseType: !1409)
!1408 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 143, size: 64, elements: !1410)
!1410 = !{!1411, !1412}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1409, file: !1408, line: 144, baseType: !61, size: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1409, file: !1408, line: 145, baseType: !61, size: 32, offset: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1384, file: !1306, line: 144, baseType: !762, size: 32, offset: 192)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1384, file: !1306, line: 145, baseType: !1415, size: 32, offset: 224)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 32)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1408, line: 152, baseType: !1417)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 149, size: 64, elements: !1418)
!1418 = !{!1419, !1420}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1417, file: !1408, line: 150, baseType: !61, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1417, file: !1408, line: 151, baseType: !61, size: 32, offset: 32)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1384, file: !1306, line: 146, baseType: !762, size: 32, offset: 256)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1384, file: !1306, line: 147, baseType: !61, size: 32, offset: 288)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1384, file: !1306, line: 148, baseType: !762, size: 32, offset: 320)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1384, file: !1306, line: 151, baseType: !1425, size: 1024, offset: 352)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1426, size: 1024, elements: !1431)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1408, line: 170, baseType: !1427)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 167, size: 64, elements: !1428)
!1428 = !{!1429, !1430}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1427, file: !1408, line: 168, baseType: !61, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1427, file: !1408, line: 169, baseType: !61, size: 32, offset: 32)
!1431 = !{!754, !466}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1384, file: !1306, line: 155, baseType: !1433, size: 32, offset: 1376)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !1319, line: 120, baseType: !460)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1384, file: !1306, line: 156, baseType: !1436, size: 32, offset: 1408)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1306, line: 124, baseType: !1438)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1306, line: 90, size: 200, elements: !1439)
!1439 = !{!1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1438, file: !1306, line: 91, baseType: !460, size: 8)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1438, file: !1306, line: 92, baseType: !460, size: 8, offset: 8)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1438, file: !1306, line: 94, baseType: !460, size: 8, offset: 16)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1438, file: !1306, line: 95, baseType: !460, size: 8, offset: 24)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1438, file: !1306, line: 96, baseType: !460, size: 8, offset: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1438, file: !1306, line: 98, baseType: !460, size: 8, offset: 40)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1438, file: !1306, line: 99, baseType: !460, size: 8, offset: 48)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1438, file: !1306, line: 100, baseType: !460, size: 8, offset: 56)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1438, file: !1306, line: 101, baseType: !460, size: 8, offset: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1438, file: !1306, line: 103, baseType: !460, size: 8, offset: 72)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1438, file: !1306, line: 104, baseType: !460, size: 8, offset: 80)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1438, file: !1306, line: 106, baseType: !460, size: 8, offset: 88)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1438, file: !1306, line: 107, baseType: !460, size: 8, offset: 96)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1438, file: !1306, line: 108, baseType: !460, size: 8, offset: 104)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1438, file: !1306, line: 109, baseType: !460, size: 8, offset: 112)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1438, file: !1306, line: 110, baseType: !460, size: 8, offset: 120)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1438, file: !1306, line: 111, baseType: !460, size: 8, offset: 128)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1438, file: !1306, line: 112, baseType: !460, size: 8, offset: 136)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1438, file: !1306, line: 114, baseType: !460, size: 8, offset: 144)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1438, file: !1306, line: 115, baseType: !460, size: 8, offset: 152)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1438, file: !1306, line: 118, baseType: !460, size: 8, offset: 160)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1438, file: !1306, line: 119, baseType: !460, size: 8, offset: 168)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1438, file: !1306, line: 120, baseType: !460, size: 8, offset: 176)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1438, file: !1306, line: 121, baseType: !460, size: 8, offset: 184)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1438, file: !1306, line: 122, baseType: !460, size: 8, offset: 192)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1384, file: !1306, line: 157, baseType: !61, size: 32, offset: 1440)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1384, file: !1306, line: 158, baseType: !975, size: 16, offset: 1472)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1384, file: !1306, line: 159, baseType: !975, size: 16, offset: 1488)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1384, file: !1306, line: 163, baseType: !975, size: 16, offset: 1504)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1384, file: !1306, line: 164, baseType: !975, size: 16, offset: 1520)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1384, file: !1306, line: 167, baseType: !460, size: 8, offset: 1536)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1384, file: !1306, line: 168, baseType: !1472, size: 24, offset: 1544)
!1472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 24, elements: !1473)
!1473 = !{!1474}
!1474 = !DISubrange(count: 3)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1384, file: !1306, line: 169, baseType: !460, size: 8, offset: 1568)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1384, file: !1306, line: 170, baseType: !460, size: 8, offset: 1576)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1384, file: !1306, line: 173, baseType: !975, size: 16, offset: 1584)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1384, file: !1306, line: 174, baseType: !61, size: 32, offset: 1600)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1384, file: !1306, line: 175, baseType: !61, size: 32, offset: 1632)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1384, file: !1306, line: 178, baseType: !91, size: 8, offset: 1664)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1384, file: !1306, line: 179, baseType: !91, size: 8, offset: 1672)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1384, file: !1306, line: 182, baseType: !1483, size: 32, offset: 1696)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 32)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{!7, !88}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1384, file: !1306, line: 186, baseType: !1483, size: 32, offset: 1728)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1384, file: !1306, line: 187, baseType: !1488, size: 32, offset: 1760)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!7, !88, !61, !88, !61}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1384, file: !1306, line: 188, baseType: !1488, size: 32, offset: 1792)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1494)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1495)
!1495 = !{!1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1494, file: !56, line: 2759, baseType: !60, size: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1494, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1494, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1494, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1494, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1494, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1494, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1494, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1494, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1494, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1494, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1494, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1494, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1494, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1494, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1494, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1494, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1494, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1516)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1517)
!1517 = !{!1518, !1519}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1516, file: !56, line: 2799, baseType: !60, size: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1516, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 32)
!1521 = !{!1209, !1522, !1524, !1526, !1531}
!1522 = !DIGlobalVariableExpression(var: !1523, expr: !DIExpression())
!1523 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !1211, file: !1212, line: 382, type: !61, isLocal: false, isDefinition: true)
!1524 = !DIGlobalVariableExpression(var: !1525, expr: !DIExpression())
!1525 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !1211, file: !1212, line: 383, type: !61, isLocal: false, isDefinition: true)
!1526 = !DIGlobalVariableExpression(var: !1527, expr: !DIExpression())
!1527 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !1211, file: !1212, line: 369, type: !1528, isLocal: true, isDefinition: true)
!1528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1024, elements: !1529)
!1529 = !{!1530}
!1530 = !DISubrange(count: 128)
!1531 = !DIGlobalVariableExpression(var: !1532, expr: !DIExpression())
!1532 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !1211, file: !1212, line: 1409, type: !7, isLocal: true, isDefinition: true)
!1533 = !DIGlobalVariableExpression(var: !1532, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1534 = !DIGlobalVariableExpression(var: !1535, expr: !DIExpression())
!1535 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !1536, file: !1591, line: 35, type: !1592, isLocal: false, isDefinition: true)
!1536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1537, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1538, retainedTypes: !1584, globals: !1585, splitDebugInlining: false, nameTableKind: None)
!1537 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1538 = !{!1539}
!1539 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1540, line: 77, baseType: !18, size: 32, elements: !1541)
!1540 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1541 = !{!1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583}
!1542 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!1543 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!1544 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!1545 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!1546 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!1547 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!1548 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!1549 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!1550 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!1551 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!1552 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1553 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1554 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1555 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1556 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1557 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1558 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1559 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1560 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1561 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1562 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1563 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1564 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1565 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1566 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1567 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1568 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1569 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1570 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1571 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1572 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1573 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1574 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1575 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1576 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1577 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1578 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1579 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1580 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1581 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1582 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1583 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1584 = !{!88}
!1585 = !{!1534, !1586, !1589}
!1586 = !DIGlobalVariableExpression(var: !1587, expr: !DIExpression())
!1587 = distinct !DIGlobalVariable(name: "cmem_index", scope: !1536, file: !1537, line: 96, type: !1588, isLocal: true, isDefinition: true)
!1588 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !1536, file: !1537, line: 94, type: !1588, isLocal: true, isDefinition: true)
!1591 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1593)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !1537, line: 54, baseType: !1594)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1537, line: 51, size: 576, elements: !1595)
!1595 = !{!1596, !1606}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1594, file: !1537, line: 52, baseType: !1597, size: 96)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1540, line: 152, baseType: !1598)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1540, line: 144, size: 96, elements: !1599)
!1599 = !{!1600, !1602, !1604}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1598, file: !1540, line: 145, baseType: !1601, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !1540, line: 61, baseType: !18)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1598, file: !1540, line: 146, baseType: !1603, size: 16, offset: 32)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !1540, line: 62, baseType: !977)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1598, file: !1540, line: 150, baseType: !1605, size: 32, offset: 64)
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !1540, line: 127, baseType: !1539)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1594, file: !1537, line: 53, baseType: !1607, size: 480, offset: 96)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1608, line: 107, baseType: !1609)
!1608 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1608, line: 103, size: 480, elements: !1610)
!1610 = !{!1611, !1612, !1613}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1609, file: !1608, line: 104, baseType: !18, size: 32)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1609, file: !1608, line: 105, baseType: !18, size: 32, offset: 32)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1609, file: !1608, line: 106, baseType: !1614, size: 400, offset: 64)
!1614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1615, size: 400, elements: !1057)
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1608, line: 100, baseType: !1616)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1608, line: 92, size: 80, elements: !1617)
!1617 = !{!1618, !1619, !1620}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1616, file: !1608, line: 93, baseType: !460, size: 8)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1616, file: !1608, line: 94, baseType: !460, size: 8, offset: 8)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1616, file: !1608, line: 96, baseType: !1621, size: 64, offset: 16)
!1621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 64, elements: !753)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !1624, file: !1627, line: 96, type: !1628, isLocal: false, isDefinition: true)
!1624 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1625, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1626, splitDebugInlining: false, nameTableKind: None)
!1625 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1626 = !{!1622}
!1627 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1629, size: 152, elements: !1631)
!1629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1630)
!1630 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1631 = !{!1632}
!1632 = !DISubrange(count: 19)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "nor_egid", scope: !1635, file: !1636, line: 168, type: !1986, isLocal: false, isDefinition: true)
!1635 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1636, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1637, retainedTypes: !1648, globals: !1657, splitDebugInlining: false, nameTableKind: None)
!1636 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1637 = !{!1638, !1214, !1539}
!1638 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1639, line: 49, baseType: !18, size: 32, elements: !1640)
!1639 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1640 = !{!1641, !1642, !1643, !1644, !1645, !1646, !1647}
!1641 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!1642 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!1643 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!1644 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!1645 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!1646 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!1647 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!1648 = !{!1649, !61, !1651}
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !1215, line: 47, baseType: !462)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 32)
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1408, line: 146, baseType: !1653)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 143, size: 64, elements: !1654)
!1654 = !{!1655, !1656}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1653, file: !1408, line: 144, baseType: !61, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1653, file: !1408, line: 145, baseType: !61, size: 32, offset: 32)
!1657 = !{!1633, !1658, !1660, !1670, !1807, !1809, !1811, !1813, !1815, !1820, !1823, !1832, !1834, !1836, !1844, !1846, !1848, !1931, !1934, !1936, !1938, !1949, !1951, !1964}
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !1635, file: !1636, line: 94, type: !1092, isLocal: true, isDefinition: true)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "cmem_id", scope: !1635, file: !1636, line: 95, type: !1662, isLocal: false, isDefinition: true)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1664)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1608, line: 100, baseType: !1665)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1608, line: 92, size: 80, elements: !1666)
!1666 = !{!1667, !1668, !1669}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1665, file: !1608, line: 93, baseType: !460, size: 8)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1665, file: !1608, line: 94, baseType: !460, size: 8, offset: 8)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1665, file: !1608, line: 96, baseType: !1621, size: 64, offset: 16)
!1670 = !DIGlobalVariableExpression(var: !1671, expr: !DIExpression())
!1671 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !1635, file: !1636, line: 127, type: !1672, isLocal: false, isDefinition: true)
!1672 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !1408, line: 317, baseType: !1673)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !1408, line: 237, size: 2720, elements: !1674)
!1674 = !{!1675, !1676, !1728, !1729, !1732, !1733, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1774, !1775, !1776, !1781, !1782, !1783, !1784, !1785, !1789, !1793, !1800, !1801, !1802, !1803, !1804, !1805, !1806}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !1673, file: !1408, line: 238, baseType: !61, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1673, file: !1408, line: 239, baseType: !1677, size: 32, offset: 32)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1408, line: 121, baseType: !1679)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 105, size: 480, elements: !1680)
!1680 = !{!1681, !1685, !1686, !1690, !1694, !1698, !1699, !1703, !1704, !1705, !1706, !1711, !1716, !1720, !1724}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !1679, file: !1408, line: 106, baseType: !1682, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = !DISubroutineType(types: !1684)
!1684 = !{!7, !88, !88}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !1679, file: !1408, line: 107, baseType: !1483, size: 32, offset: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !1679, file: !1408, line: 108, baseType: !1687, size: 32, offset: 64)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{!88, !88, !61, !61}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !1679, file: !1408, line: 109, baseType: !1691, size: 32, offset: 96)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!7, !88, !61}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !1679, file: !1408, line: 110, baseType: !1695, size: 32, offset: 128)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 32)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{!7, !88, !88, !88, !61}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !1679, file: !1408, line: 111, baseType: !1691, size: 32, offset: 160)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !1679, file: !1408, line: 112, baseType: !1700, size: 32, offset: 192)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 32)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!1092, !88, !61}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !1679, file: !1408, line: 113, baseType: !1691, size: 32, offset: 224)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !1679, file: !1408, line: 114, baseType: !1691, size: 32, offset: 256)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !1679, file: !1408, line: 115, baseType: !1691, size: 32, offset: 288)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !1679, file: !1408, line: 116, baseType: !1707, size: 32, offset: 320)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 32)
!1708 = !DISubroutineType(types: !1709)
!1709 = !{!7, !88, !7, !1710, !88, !1710}
!1710 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !1215, line: 50, baseType: !18)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !1679, file: !1408, line: 117, baseType: !1712, size: 32, offset: 352)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 32)
!1713 = !DISubroutineType(types: !1714)
!1714 = !{!7, !88, !1715}
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !1679, file: !1408, line: 118, baseType: !1717, size: 32, offset: 384)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{!7, !88, !88, !61}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1679, file: !1408, line: 119, baseType: !1721, size: 32, offset: 416)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 32)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{!91, !88, !61}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !1679, file: !1408, line: 120, baseType: !1725, size: 32, offset: 448)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 32)
!1726 = !DISubroutineType(types: !1727)
!1727 = !{!7, !88, !61, !88}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1673, file: !1408, line: 240, baseType: !88, size: 32, offset: 64)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !1673, file: !1408, line: 241, baseType: !1730, size: 32, offset: 96)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !1215, line: 46, baseType: !977)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !1673, file: !1408, line: 242, baseType: !1730, size: 32, offset: 128)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1673, file: !1408, line: 243, baseType: !1734, size: 928, offset: 160)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1408, line: 99, baseType: !1735)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 90, size: 928, elements: !1736)
!1736 = !{!1737, !1738, !1740, !1741, !1742, !1743, !1744, !1745}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !1735, file: !1408, line: 91, baseType: !61, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1735, file: !1408, line: 92, baseType: !1739, size: 256, offset: 32)
!1739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 256, elements: !753)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !1735, file: !1408, line: 93, baseType: !1739, size: 256, offset: 288)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1735, file: !1408, line: 94, baseType: !1739, size: 256, offset: 544)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !1735, file: !1408, line: 95, baseType: !61, size: 32, offset: 800)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !1735, file: !1408, line: 96, baseType: !1731, size: 16, offset: 832)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !1735, file: !1408, line: 97, baseType: !61, size: 32, offset: 864)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !1735, file: !1408, line: 98, baseType: !61, size: 32, offset: 896)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1673, file: !1408, line: 244, baseType: !1739, size: 256, offset: 1088)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !1673, file: !1408, line: 245, baseType: !1739, size: 256, offset: 1344)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !1673, file: !1408, line: 246, baseType: !61, size: 32, offset: 1600)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !1673, file: !1408, line: 247, baseType: !61, size: 32, offset: 1632)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !1673, file: !1408, line: 248, baseType: !61, size: 32, offset: 1664)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !1673, file: !1408, line: 249, baseType: !61, size: 32, offset: 1696)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !1673, file: !1408, line: 250, baseType: !61, size: 32, offset: 1728)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !1673, file: !1408, line: 252, baseType: !61, size: 32, offset: 1760)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !1673, file: !1408, line: 255, baseType: !61, size: 32, offset: 1792)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !1673, file: !1408, line: 256, baseType: !61, size: 32, offset: 1824)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !1673, file: !1408, line: 257, baseType: !61, size: 32, offset: 1856)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !1673, file: !1408, line: 261, baseType: !61, size: 32, offset: 1888)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !1673, file: !1408, line: 262, baseType: !61, size: 32, offset: 1920)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !1673, file: !1408, line: 263, baseType: !61, size: 32, offset: 1952)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !1673, file: !1408, line: 264, baseType: !61, size: 32, offset: 1984)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !1673, file: !1408, line: 265, baseType: !61, size: 32, offset: 2016)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !1673, file: !1408, line: 266, baseType: !61, size: 32, offset: 2048)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !1673, file: !1408, line: 267, baseType: !61, size: 32, offset: 2080)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !1673, file: !1408, line: 268, baseType: !61, size: 32, offset: 2112)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !1673, file: !1408, line: 270, baseType: !61, size: 32, offset: 2144)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !1673, file: !1408, line: 271, baseType: !61, size: 32, offset: 2176)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !1673, file: !1408, line: 272, baseType: !1768, size: 32, offset: 2208)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !1408, line: 229, baseType: !1770)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 226, size: 64, elements: !1771)
!1771 = !{!1772, !1773}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !1770, file: !1408, line: 227, baseType: !61, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !1770, file: !1408, line: 228, baseType: !61, size: 32, offset: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !1673, file: !1408, line: 273, baseType: !1649, size: 32, offset: 2240)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !1673, file: !1408, line: 274, baseType: !1649, size: 32, offset: 2272)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !1673, file: !1408, line: 276, baseType: !1777, size: 32, offset: 2304)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 32)
!1778 = !DISubroutineType(types: !1779)
!1779 = !{null, !1780}
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 32)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !1673, file: !1408, line: 278, baseType: !61, size: 32, offset: 2336)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !1673, file: !1408, line: 280, baseType: !1777, size: 32, offset: 2368)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !1673, file: !1408, line: 281, baseType: !1777, size: 32, offset: 2400)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !1673, file: !1408, line: 283, baseType: !61, size: 32, offset: 2432)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !1673, file: !1408, line: 284, baseType: !1786, size: 32, offset: 2464)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = !DISubroutineType(types: !1788)
!1788 = !{!61, !1780}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !1673, file: !1408, line: 285, baseType: !1790, size: 32, offset: 2496)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1791 = !DISubroutineType(types: !1792)
!1792 = !{!61, !1780, !61, !61}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !1673, file: !1408, line: 293, baseType: !1794, size: 32, offset: 2528)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !1408, line: 162, baseType: !1796)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 159, size: 64, elements: !1797)
!1797 = !{!1798, !1799}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1796, file: !1408, line: 160, baseType: !61, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !1796, file: !1408, line: 161, baseType: !61, size: 32, offset: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !1673, file: !1408, line: 295, baseType: !61, size: 32, offset: 2560)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !1673, file: !1408, line: 296, baseType: !61, size: 32, offset: 2592)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !1673, file: !1408, line: 297, baseType: !61, size: 32, offset: 2624)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !1673, file: !1408, line: 298, baseType: !1731, size: 16, offset: 2656)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !1673, file: !1408, line: 302, baseType: !1731, size: 16, offset: 2672)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !1673, file: !1408, line: 310, baseType: !91, size: 8, offset: 2688)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1673, file: !1408, line: 313, baseType: !91, size: 8, offset: 2696)
!1807 = !DIGlobalVariableExpression(var: !1808, expr: !DIExpression())
!1808 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !1635, file: !1636, line: 129, type: !61, isLocal: false, isDefinition: true)
!1809 = !DIGlobalVariableExpression(var: !1810, expr: !DIExpression())
!1810 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !1635, file: !1636, line: 130, type: !61, isLocal: false, isDefinition: true)
!1811 = !DIGlobalVariableExpression(var: !1812, expr: !DIExpression())
!1812 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !1635, file: !1636, line: 131, type: !61, isLocal: false, isDefinition: true)
!1813 = !DIGlobalVariableExpression(var: !1814, expr: !DIExpression())
!1814 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !1635, file: !1636, line: 132, type: !975, isLocal: true, isDefinition: true)
!1815 = !DIGlobalVariableExpression(var: !1816, expr: !DIExpression())
!1816 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !1635, file: !1636, line: 136, type: !1817, isLocal: false, isDefinition: true)
!1817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 4096, elements: !1818)
!1818 = !{!1819}
!1819 = !DISubrange(count: 512)
!1820 = !DIGlobalVariableExpression(var: !1821, expr: !DIExpression())
!1821 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !1635, file: !1636, line: 146, type: !1822, isLocal: true, isDefinition: true)
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1652, size: 512, elements: !753)
!1823 = !DIGlobalVariableExpression(var: !1824, expr: !DIExpression())
!1824 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !1635, file: !1636, line: 152, type: !1825, isLocal: true, isDefinition: true)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1827)
!1827 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1608, line: 116, baseType: !1828)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1608, line: 113, size: 64, elements: !1829)
!1829 = !{!1830, !1831}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !1828, file: !1608, line: 114, baseType: !61, size: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !1828, file: !1608, line: 115, baseType: !61, size: 32, offset: 32)
!1832 = !DIGlobalVariableExpression(var: !1833, expr: !DIExpression())
!1833 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !1635, file: !1636, line: 156, type: !61, isLocal: false, isDefinition: true)
!1834 = !DIGlobalVariableExpression(var: !1835, expr: !DIExpression())
!1835 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !1635, file: !1636, line: 157, type: !61, isLocal: false, isDefinition: true)
!1836 = !DIGlobalVariableExpression(var: !1837, expr: !DIExpression())
!1837 = distinct !DIGlobalVariable(name: "BankInfo", scope: !1635, file: !1636, line: 160, type: !1838, isLocal: true, isDefinition: true)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1839, size: 512, elements: !753)
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1408, line: 152, baseType: !1840)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 149, size: 64, elements: !1841)
!1841 = !{!1842, !1843}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1840, file: !1408, line: 150, baseType: !61, size: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1840, file: !1408, line: 151, baseType: !61, size: 32, offset: 32)
!1844 = !DIGlobalVariableExpression(var: !1845, expr: !DIExpression())
!1845 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !1635, file: !1636, line: 173, type: !61, isLocal: false, isDefinition: true)
!1846 = !DIGlobalVariableExpression(var: !1847, expr: !DIExpression())
!1847 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !1635, file: !1636, line: 176, type: !1678, isLocal: false, isDefinition: true)
!1848 = !DIGlobalVariableExpression(var: !1849, expr: !DIExpression())
!1849 = distinct !DIGlobalVariable(name: "mtdflash", scope: !1635, file: !1636, line: 177, type: !1850, isLocal: false, isDefinition: true)
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1306, line: 193, baseType: !1851)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1306, line: 134, size: 1824, elements: !1852)
!1852 = !{!1853, !1854, !1855, !1861, !1867, !1868, !1869, !1870, !1872, !1873, !1874, !1875, !1882, !1883, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1851, file: !1306, line: 136, baseType: !61, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1851, file: !1306, line: 137, baseType: !762, size: 32, offset: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1851, file: !1306, line: 138, baseType: !1856, size: 32, offset: 64)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1390, line: 56, baseType: !1857)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 54, size: 8, elements: !1859)
!1859 = !{!1860}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1858, file: !1390, line: 55, baseType: !460, size: 8)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1851, file: !1306, line: 139, baseType: !1862, size: 32, offset: 96)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1390, line: 46, baseType: !1863)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 44, size: 8, elements: !1865)
!1865 = !{!1866}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1864, file: !1390, line: 45, baseType: !460, size: 8)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1851, file: !1306, line: 140, baseType: !1402, size: 8, offset: 128)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1851, file: !1306, line: 143, baseType: !1651, size: 32, offset: 160)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1851, file: !1306, line: 144, baseType: !762, size: 32, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1851, file: !1306, line: 145, baseType: !1871, size: 32, offset: 224)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1851, file: !1306, line: 146, baseType: !762, size: 32, offset: 256)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1851, file: !1306, line: 147, baseType: !61, size: 32, offset: 288)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1851, file: !1306, line: 148, baseType: !762, size: 32, offset: 320)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1851, file: !1306, line: 151, baseType: !1876, size: 1024, offset: 352)
!1876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1877, size: 1024, elements: !1431)
!1877 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1408, line: 170, baseType: !1878)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 167, size: 64, elements: !1879)
!1879 = !{!1880, !1881}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1878, file: !1408, line: 168, baseType: !61, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1878, file: !1408, line: 169, baseType: !61, size: 32, offset: 32)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1851, file: !1306, line: 155, baseType: !1433, size: 32, offset: 1376)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1851, file: !1306, line: 156, baseType: !1884, size: 32, offset: 1408)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1306, line: 124, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1306, line: 90, size: 200, elements: !1887)
!1887 = !{!1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1886, file: !1306, line: 91, baseType: !460, size: 8)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1886, file: !1306, line: 92, baseType: !460, size: 8, offset: 8)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1886, file: !1306, line: 94, baseType: !460, size: 8, offset: 16)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1886, file: !1306, line: 95, baseType: !460, size: 8, offset: 24)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1886, file: !1306, line: 96, baseType: !460, size: 8, offset: 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1886, file: !1306, line: 98, baseType: !460, size: 8, offset: 40)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1886, file: !1306, line: 99, baseType: !460, size: 8, offset: 48)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1886, file: !1306, line: 100, baseType: !460, size: 8, offset: 56)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1886, file: !1306, line: 101, baseType: !460, size: 8, offset: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1886, file: !1306, line: 103, baseType: !460, size: 8, offset: 72)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1886, file: !1306, line: 104, baseType: !460, size: 8, offset: 80)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1886, file: !1306, line: 106, baseType: !460, size: 8, offset: 88)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1886, file: !1306, line: 107, baseType: !460, size: 8, offset: 96)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1886, file: !1306, line: 108, baseType: !460, size: 8, offset: 104)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1886, file: !1306, line: 109, baseType: !460, size: 8, offset: 112)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1886, file: !1306, line: 110, baseType: !460, size: 8, offset: 120)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1886, file: !1306, line: 111, baseType: !460, size: 8, offset: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1886, file: !1306, line: 112, baseType: !460, size: 8, offset: 136)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1886, file: !1306, line: 114, baseType: !460, size: 8, offset: 144)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1886, file: !1306, line: 115, baseType: !460, size: 8, offset: 152)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1886, file: !1306, line: 118, baseType: !460, size: 8, offset: 160)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1886, file: !1306, line: 119, baseType: !460, size: 8, offset: 168)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1886, file: !1306, line: 120, baseType: !460, size: 8, offset: 176)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1886, file: !1306, line: 121, baseType: !460, size: 8, offset: 184)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1886, file: !1306, line: 122, baseType: !460, size: 8, offset: 192)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1851, file: !1306, line: 157, baseType: !61, size: 32, offset: 1440)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1851, file: !1306, line: 158, baseType: !975, size: 16, offset: 1472)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1851, file: !1306, line: 159, baseType: !975, size: 16, offset: 1488)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1851, file: !1306, line: 163, baseType: !975, size: 16, offset: 1504)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1851, file: !1306, line: 164, baseType: !975, size: 16, offset: 1520)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1851, file: !1306, line: 167, baseType: !460, size: 8, offset: 1536)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1851, file: !1306, line: 168, baseType: !1472, size: 24, offset: 1544)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1851, file: !1306, line: 169, baseType: !460, size: 8, offset: 1568)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1851, file: !1306, line: 170, baseType: !460, size: 8, offset: 1576)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1851, file: !1306, line: 173, baseType: !975, size: 16, offset: 1584)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1851, file: !1306, line: 174, baseType: !61, size: 32, offset: 1600)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1851, file: !1306, line: 175, baseType: !61, size: 32, offset: 1632)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1851, file: !1306, line: 178, baseType: !91, size: 8, offset: 1664)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1851, file: !1306, line: 179, baseType: !91, size: 8, offset: 1672)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1851, file: !1306, line: 182, baseType: !1483, size: 32, offset: 1696)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1851, file: !1306, line: 186, baseType: !1483, size: 32, offset: 1728)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1851, file: !1306, line: 187, baseType: !1488, size: 32, offset: 1760)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1851, file: !1306, line: 188, baseType: !1488, size: 32, offset: 1792)
!1931 = !DIGlobalVariableExpression(var: !1932, expr: !DIExpression())
!1932 = distinct !DIGlobalVariable(name: "StatusMap", scope: !1635, file: !1636, line: 178, type: !1933, isLocal: false, isDefinition: true)
!1933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1434, size: 64, elements: !753)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !1635, file: !1636, line: 179, type: !1885, isLocal: false, isDefinition: true)
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !1635, file: !1636, line: 204, type: !1822, isLocal: true, isDefinition: true)
!1938 = !DIGlobalVariableExpression(var: !1939, expr: !DIExpression())
!1939 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !1635, file: !1636, line: 205, type: !1940, isLocal: false, isDefinition: true)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1941, line: 93, baseType: !1942)
!1941 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1941, line: 83, size: 1056, elements: !1943)
!1943 = !{!1944, !1945, !1946, !1947, !1948}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !1942, file: !1941, line: 84, baseType: !61, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1942, file: !1941, line: 85, baseType: !1677, size: 32, offset: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1942, file: !1941, line: 86, baseType: !88, size: 32, offset: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1942, file: !1941, line: 87, baseType: !1734, size: 928, offset: 96)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !1942, file: !1941, line: 92, baseType: !91, size: 8, offset: 1024)
!1949 = !DIGlobalVariableExpression(var: !1950, expr: !DIExpression())
!1950 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !1635, file: !1636, line: 208, type: !1850, isLocal: false, isDefinition: true)
!1951 = !DIGlobalVariableExpression(var: !1952, expr: !DIExpression())
!1952 = distinct !DIGlobalVariable(name: "nor_list", scope: !1635, file: !1636, line: 114, type: !1953, isLocal: true, isDefinition: true)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1955)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1608, line: 125, baseType: !1956)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1608, line: 119, size: 1088, elements: !1957)
!1957 = !{!1958, !1959, !1960, !1961, !1963}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !1956, file: !1608, line: 120, baseType: !975, size: 16)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !1956, file: !1608, line: 121, baseType: !975, size: 16, offset: 16)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !1956, file: !1608, line: 122, baseType: !61, size: 32, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !1956, file: !1608, line: 123, baseType: !1962, size: 512, offset: 64)
!1962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1827, size: 512, elements: !753)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1956, file: !1608, line: 124, baseType: !1838, size: 512, offset: 576)
!1964 = !DIGlobalVariableExpression(var: !1965, expr: !DIExpression())
!1965 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !1635, file: !1966, line: 42, type: !1967, isLocal: true, isDefinition: true)
!1966 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1968)
!1968 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !1636, line: 66, baseType: !1969)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1636, line: 63, size: 5600, elements: !1970)
!1970 = !{!1971, !1978}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1969, file: !1636, line: 64, baseType: !1972, size: 96)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1540, line: 152, baseType: !1973)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1540, line: 144, size: 96, elements: !1974)
!1974 = !{!1975, !1976, !1977}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1973, file: !1540, line: 145, baseType: !1601, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1973, file: !1540, line: 146, baseType: !1603, size: 16, offset: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1973, file: !1540, line: 150, baseType: !1605, size: 32, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1969, file: !1636, line: 65, baseType: !1979, size: 5504, offset: 96)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1608, line: 132, baseType: !1980)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1608, line: 128, size: 5504, elements: !1981)
!1981 = !{!1982, !1983, !1984}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1980, file: !1608, line: 129, baseType: !18, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1980, file: !1608, line: 130, baseType: !18, size: 32, offset: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1980, file: !1608, line: 131, baseType: !1985, size: 5440, offset: 64)
!1985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 5440, elements: !1057)
!1986 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !1390, line: 79, baseType: !1987)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 32)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 77, size: 8, elements: !1989)
!1989 = !{!1990}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1988, file: !1390, line: 78, baseType: !460, size: 8)
!1991 = !DIGlobalVariableExpression(var: !1992, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1992 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !1993, file: !1994, line: 82, type: !7, isLocal: true, isDefinition: true)
!1993 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1994, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1995, retainedTypes: !2001, globals: !2046, splitDebugInlining: false, nameTableKind: None)
!1994 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!1995 = !{!1330, !1214, !1996}
!1996 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1331, line: 123, baseType: !18, size: 32, elements: !1997)
!1997 = !{!1998, !1999, !2000}
!1998 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!1999 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!2000 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!2001 = !{!61, !2002, !88, !762}
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1408, line: 190, baseType: !2004)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 173, size: 1376, elements: !2005)
!2005 = !{!2006, !2007, !2008, !2014, !2020, !2021, !2028, !2029, !2036, !2037, !2038, !2039}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2004, file: !1408, line: 174, baseType: !61, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2004, file: !1408, line: 175, baseType: !1649, size: 32, offset: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2004, file: !1408, line: 176, baseType: !2009, size: 32, offset: 64)
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1390, line: 56, baseType: !2010)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 32)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 54, size: 8, elements: !2012)
!2012 = !{!2013}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2011, file: !1390, line: 55, baseType: !460, size: 8)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2004, file: !1408, line: 177, baseType: !2015, size: 32, offset: 96)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1390, line: 46, baseType: !2016)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 32)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 44, size: 8, elements: !2018)
!2018 = !{!2019}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2017, file: !1390, line: 45, baseType: !460, size: 8)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2004, file: !1408, line: 178, baseType: !1402, size: 8, offset: 128)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2004, file: !1408, line: 180, baseType: !2022, size: 32, offset: 160)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1408, line: 146, baseType: !2024)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 143, size: 64, elements: !2025)
!2025 = !{!2026, !2027}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2024, file: !1408, line: 144, baseType: !61, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2024, file: !1408, line: 145, baseType: !61, size: 32, offset: 32)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2004, file: !1408, line: 181, baseType: !1649, size: 32, offset: 192)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2004, file: !1408, line: 182, baseType: !2030, size: 32, offset: 224)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1408, line: 152, baseType: !2032)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 149, size: 64, elements: !2033)
!2033 = !{!2034, !2035}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2032, file: !1408, line: 150, baseType: !61, size: 32)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2032, file: !1408, line: 151, baseType: !61, size: 32, offset: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2004, file: !1408, line: 183, baseType: !1649, size: 32, offset: 256)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2004, file: !1408, line: 184, baseType: !61, size: 32, offset: 288)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2004, file: !1408, line: 185, baseType: !1649, size: 32, offset: 320)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2004, file: !1408, line: 188, baseType: !2040, size: 1024, offset: 352)
!2040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2041, size: 1024, elements: !1431)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1408, line: 170, baseType: !2042)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 167, size: 64, elements: !2043)
!2043 = !{!2044, !2045}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2042, file: !1408, line: 168, baseType: !61, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2042, file: !1408, line: 169, baseType: !61, size: 32, offset: 32)
!2046 = !{!2047, !2048}
!2047 = !DIGlobalVariableExpression(var: !1992, expr: !DIExpression())
!2048 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression())
!2049 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !1993, file: !1994, line: 432, type: !2050, isLocal: true, isDefinition: true)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !1331, line: 119, baseType: !1330)
!2051 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!2052 = !DIGlobalVariableExpression(var: !2053, expr: !DIExpression())
!2053 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !2054, file: !2055, line: 60, type: !61, isLocal: false, isDefinition: true)
!2054 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2055, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2056, retainedTypes: !2064, globals: !2065, splitDebugInlining: false, nameTableKind: None)
!2055 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!2056 = !{!2057}
!2057 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 387, baseType: !7, size: 32, elements: !2058)
!2058 = !{!2059, !2060, !2061, !2062, !2063}
!2059 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!2060 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!2061 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!2062 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!2063 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!2064 = !{!88, !61}
!2065 = !{!2052, !2066, !2068, !2070, !2072, !2074, !2128, !2130}
!2066 = !DIGlobalVariableExpression(var: !2067, expr: !DIExpression())
!2067 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !2054, file: !2055, line: 61, type: !61, isLocal: false, isDefinition: true)
!2068 = !DIGlobalVariableExpression(var: !2069, expr: !DIExpression())
!2069 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !2054, file: !2055, line: 107, type: !61, isLocal: false, isDefinition: true)
!2070 = !DIGlobalVariableExpression(var: !2071, expr: !DIExpression())
!2071 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !2054, file: !2055, line: 132, type: !91, isLocal: false, isDefinition: true)
!2072 = !DIGlobalVariableExpression(var: !2073, expr: !DIExpression())
!2073 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !2054, file: !2055, line: 133, type: !91, isLocal: false, isDefinition: true)
!2074 = !DIGlobalVariableExpression(var: !2075, expr: !DIExpression())
!2075 = distinct !DIGlobalVariable(name: "replaced", scope: !2076, file: !2055, line: 139, type: !61, isLocal: true, isDefinition: true)
!2076 = distinct !DISubprogram(name: "LookupAddress", scope: !2055, file: !2055, line: 135, type: !2077, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !2079)
!2077 = !DISubroutineType(types: !2078)
!2078 = !{!61, !88, !61}
!2079 = !{!2080, !2081, !2082, !2127}
!2080 = !DILocalVariable(name: "DriveData", arg: 1, scope: !2076, file: !2055, line: 135, type: !88)
!2081 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !2076, file: !2055, line: 135, type: !61)
!2082 = !DILocalVariable(name: "D", scope: !2076, file: !2055, line: 137, type: !2083)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1408, line: 190, baseType: !2085)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 173, size: 1376, elements: !2086)
!2086 = !{!2087, !2088, !2089, !2095, !2101, !2102, !2109, !2110, !2117, !2118, !2119, !2120}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2085, file: !1408, line: 174, baseType: !61, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2085, file: !1408, line: 175, baseType: !1649, size: 32, offset: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2085, file: !1408, line: 176, baseType: !2090, size: 32, offset: 64)
!2090 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1390, line: 56, baseType: !2091)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 32)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 54, size: 8, elements: !2093)
!2093 = !{!2094}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2092, file: !1390, line: 55, baseType: !460, size: 8)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2085, file: !1408, line: 177, baseType: !2096, size: 32, offset: 96)
!2096 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1390, line: 46, baseType: !2097)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 44, size: 8, elements: !2099)
!2099 = !{!2100}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2098, file: !1390, line: 45, baseType: !460, size: 8)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2085, file: !1408, line: 178, baseType: !1402, size: 8, offset: 128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2085, file: !1408, line: 180, baseType: !2103, size: 32, offset: 160)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1408, line: 146, baseType: !2105)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 143, size: 64, elements: !2106)
!2106 = !{!2107, !2108}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2105, file: !1408, line: 144, baseType: !61, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2105, file: !1408, line: 145, baseType: !61, size: 32, offset: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2085, file: !1408, line: 181, baseType: !1649, size: 32, offset: 192)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2085, file: !1408, line: 182, baseType: !2111, size: 32, offset: 224)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1408, line: 152, baseType: !2113)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 149, size: 64, elements: !2114)
!2114 = !{!2115, !2116}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2113, file: !1408, line: 150, baseType: !61, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2113, file: !1408, line: 151, baseType: !61, size: 32, offset: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2085, file: !1408, line: 183, baseType: !1649, size: 32, offset: 256)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2085, file: !1408, line: 184, baseType: !61, size: 32, offset: 288)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2085, file: !1408, line: 185, baseType: !1649, size: 32, offset: 320)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2085, file: !1408, line: 188, baseType: !2121, size: 1024, offset: 352)
!2121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2122, size: 1024, elements: !1431)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1408, line: 170, baseType: !2123)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 167, size: 64, elements: !2124)
!2124 = !{!2125, !2126}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2123, file: !1408, line: 168, baseType: !61, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2123, file: !1408, line: 169, baseType: !61, size: 32, offset: 32)
!2127 = !DILocalVariable(name: "addr", scope: !2076, file: !2055, line: 138, type: !61)
!2128 = !DIGlobalVariableExpression(var: !2129, expr: !DIExpression())
!2129 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !2076, file: !2055, line: 140, type: !61, isLocal: true, isDefinition: true)
!2130 = !DIGlobalVariableExpression(var: !2131, expr: !DIExpression())
!2131 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !2076, file: !2055, line: 141, type: !61, isLocal: true, isDefinition: true)
!2132 = !DIGlobalVariableExpression(var: !2133, expr: !DIExpression())
!2133 = distinct !DIGlobalVariable(name: "emi_settings", scope: !2134, file: !2135, line: 44, type: !2280, isLocal: false, isDefinition: true)
!2134 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2135, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2136, retainedTypes: !2142, globals: !2143, splitDebugInlining: false, nameTableKind: None)
!2135 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!2136 = !{!2137}
!2137 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !2138, line: 40, baseType: !18, size: 32, elements: !2139)
!2138 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!2139 = !{!2140, !2141}
!2140 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!2141 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!2142 = !{!986}
!2143 = !{!2132, !2144, !2146, !2148, !2150, !2250, !2252, !2254, !2256, !2258, !2260, !2262, !2264, !2266, !2268, !2270, !2272, !2274, !2276, !2278}
!2144 = !DIGlobalVariableExpression(var: !2145, expr: !DIExpression())
!2145 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !2134, file: !2135, line: 65, type: !61, isLocal: false, isDefinition: true)
!2146 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression())
!2147 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !2134, file: !2135, line: 66, type: !61, isLocal: false, isDefinition: true)
!2148 = !DIGlobalVariableExpression(var: !2149, expr: !DIExpression())
!2149 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !2134, file: !2135, line: 67, type: !61, isLocal: false, isDefinition: true)
!2150 = !DIGlobalVariableExpression(var: !2151, expr: !DIExpression())
!2151 = distinct !DIGlobalVariable(name: "emi_register", scope: !2134, file: !2135, line: 83, type: !2152, isLocal: false, isDefinition: true)
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 32)
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !56, line: 2524, baseType: !2154)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2447, size: 6752, elements: !2155)
!2155 = !{!2156, !2160, !2161, !2162, !2163, !2167, !2168, !2169, !2170, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2154, file: !56, line: 2448, baseType: !2157, size: 768)
!2157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 768, elements: !2158)
!2158 = !{!2159}
!2159 = !DISubrange(count: 96)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !2154, file: !56, line: 2449, baseType: !60, size: 32, offset: 768)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2154, file: !56, line: 2450, baseType: !1041, size: 96, offset: 800)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !2154, file: !56, line: 2451, baseType: !60, size: 32, offset: 896)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2154, file: !56, line: 2452, baseType: !2164, size: 160, offset: 928)
!2164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 160, elements: !2165)
!2165 = !{!2166}
!2166 = !DISubrange(count: 20)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !2154, file: !56, line: 2453, baseType: !60, size: 32, offset: 1088)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2154, file: !56, line: 2454, baseType: !978, size: 32, offset: 1120)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !2154, file: !56, line: 2455, baseType: !60, size: 32, offset: 1152)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2154, file: !56, line: 2456, baseType: !2171, size: 480, offset: 1184)
!2171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 480, elements: !2172)
!2172 = !{!2173}
!2173 = !DISubrange(count: 60)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !2154, file: !56, line: 2457, baseType: !60, size: 32, offset: 1664)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2154, file: !56, line: 2458, baseType: !978, size: 32, offset: 1696)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !2154, file: !56, line: 2459, baseType: !60, size: 32, offset: 1728)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2154, file: !56, line: 2460, baseType: !978, size: 32, offset: 1760)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !2154, file: !56, line: 2461, baseType: !60, size: 32, offset: 1792)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2154, file: !56, line: 2462, baseType: !2164, size: 160, offset: 1824)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !2154, file: !56, line: 2463, baseType: !60, size: 32, offset: 1984)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2154, file: !56, line: 2464, baseType: !978, size: 32, offset: 2016)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !2154, file: !56, line: 2465, baseType: !60, size: 32, offset: 2048)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2154, file: !56, line: 2466, baseType: !978, size: 32, offset: 2080)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !2154, file: !56, line: 2467, baseType: !60, size: 32, offset: 2112)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2154, file: !56, line: 2468, baseType: !978, size: 32, offset: 2144)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !2154, file: !56, line: 2469, baseType: !60, size: 32, offset: 2176)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2154, file: !56, line: 2470, baseType: !2188, size: 224, offset: 2208)
!2188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 224, elements: !2189)
!2189 = !{!2190}
!2190 = !DISubrange(count: 28)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !2154, file: !56, line: 2471, baseType: !60, size: 32, offset: 2432)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !2154, file: !56, line: 2472, baseType: !978, size: 32, offset: 2464)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !2154, file: !56, line: 2473, baseType: !60, size: 32, offset: 2496)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !2154, file: !56, line: 2474, baseType: !1041, size: 96, offset: 2528)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !2154, file: !56, line: 2475, baseType: !60, size: 32, offset: 2624)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !2154, file: !56, line: 2476, baseType: !978, size: 32, offset: 2656)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !2154, file: !56, line: 2477, baseType: !60, size: 32, offset: 2688)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !2154, file: !56, line: 2478, baseType: !978, size: 32, offset: 2720)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !2154, file: !56, line: 2479, baseType: !60, size: 32, offset: 2752)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !2154, file: !56, line: 2480, baseType: !978, size: 32, offset: 2784)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !2154, file: !56, line: 2481, baseType: !60, size: 32, offset: 2816)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !2154, file: !56, line: 2482, baseType: !1041, size: 96, offset: 2848)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !2154, file: !56, line: 2483, baseType: !60, size: 32, offset: 2944)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !2154, file: !56, line: 2484, baseType: !978, size: 32, offset: 2976)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !2154, file: !56, line: 2485, baseType: !60, size: 32, offset: 3008)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !2154, file: !56, line: 2486, baseType: !978, size: 32, offset: 3040)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !2154, file: !56, line: 2487, baseType: !60, size: 32, offset: 3072)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !2154, file: !56, line: 2488, baseType: !2164, size: 160, offset: 3104)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !2154, file: !56, line: 2489, baseType: !60, size: 32, offset: 3264)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !2154, file: !56, line: 2490, baseType: !978, size: 32, offset: 3296)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !2154, file: !56, line: 2491, baseType: !60, size: 32, offset: 3328)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !2154, file: !56, line: 2492, baseType: !2213, size: 736, offset: 3360)
!2213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 736, elements: !2214)
!2214 = !{!2215}
!2215 = !DISubrange(count: 92)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !2154, file: !56, line: 2493, baseType: !60, size: 32, offset: 4096)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !2154, file: !56, line: 2494, baseType: !978, size: 32, offset: 4128)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !2154, file: !56, line: 2495, baseType: !60, size: 32, offset: 4160)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !2154, file: !56, line: 2496, baseType: !978, size: 32, offset: 4192)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !2154, file: !56, line: 2497, baseType: !60, size: 32, offset: 4224)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !2154, file: !56, line: 2498, baseType: !978, size: 32, offset: 4256)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !2154, file: !56, line: 2499, baseType: !60, size: 32, offset: 4288)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !2154, file: !56, line: 2500, baseType: !978, size: 32, offset: 4320)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !2154, file: !56, line: 2501, baseType: !60, size: 32, offset: 4352)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !2154, file: !56, line: 2502, baseType: !978, size: 32, offset: 4384)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !2154, file: !56, line: 2503, baseType: !60, size: 32, offset: 4416)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !2154, file: !56, line: 2504, baseType: !978, size: 32, offset: 4448)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !2154, file: !56, line: 2505, baseType: !60, size: 32, offset: 4480)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !2154, file: !56, line: 2506, baseType: !978, size: 32, offset: 4512)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !2154, file: !56, line: 2507, baseType: !60, size: 32, offset: 4544)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !2154, file: !56, line: 2508, baseType: !978, size: 32, offset: 4576)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !2154, file: !56, line: 2509, baseType: !60, size: 32, offset: 4608)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !2154, file: !56, line: 2510, baseType: !2171, size: 480, offset: 4640)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !2154, file: !56, line: 2511, baseType: !60, size: 32, offset: 5120)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !2154, file: !56, line: 2512, baseType: !2236, size: 992, offset: 5152)
!2236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !979, size: 992, elements: !2237)
!2237 = !{!2238}
!2238 = !DISubrange(count: 124)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !2154, file: !56, line: 2513, baseType: !60, size: 32, offset: 6144)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !2154, file: !56, line: 2514, baseType: !978, size: 32, offset: 6176)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !2154, file: !56, line: 2515, baseType: !60, size: 32, offset: 6208)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !2154, file: !56, line: 2516, baseType: !978, size: 32, offset: 6240)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !2154, file: !56, line: 2517, baseType: !60, size: 32, offset: 6272)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !2154, file: !56, line: 2518, baseType: !978, size: 32, offset: 6304)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !2154, file: !56, line: 2519, baseType: !60, size: 32, offset: 6336)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !2154, file: !56, line: 2520, baseType: !2164, size: 160, offset: 6368)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !2154, file: !56, line: 2521, baseType: !60, size: 32, offset: 6528)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !2154, file: !56, line: 2522, baseType: !2164, size: 160, offset: 6560)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !2154, file: !56, line: 2523, baseType: !60, size: 32, offset: 6720)
!2250 = !DIGlobalVariableExpression(var: !2251, expr: !DIExpression())
!2251 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !2134, file: !2135, line: 485, type: !60, isLocal: false, isDefinition: true)
!2252 = !DIGlobalVariableExpression(var: !2253, expr: !DIExpression())
!2253 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !2134, file: !2135, line: 68, type: !61, isLocal: false, isDefinition: true)
!2254 = !DIGlobalVariableExpression(var: !2255, expr: !DIExpression())
!2255 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !2134, file: !2135, line: 69, type: !61, isLocal: false, isDefinition: true)
!2256 = !DIGlobalVariableExpression(var: !2257, expr: !DIExpression())
!2257 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !2134, file: !2135, line: 70, type: !61, isLocal: false, isDefinition: true)
!2258 = !DIGlobalVariableExpression(var: !2259, expr: !DIExpression())
!2259 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !2134, file: !2135, line: 71, type: !61, isLocal: false, isDefinition: true)
!2260 = !DIGlobalVariableExpression(var: !2261, expr: !DIExpression())
!2261 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !2134, file: !2135, line: 72, type: !61, isLocal: false, isDefinition: true)
!2262 = !DIGlobalVariableExpression(var: !2263, expr: !DIExpression())
!2263 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !2134, file: !2135, line: 73, type: !61, isLocal: false, isDefinition: true)
!2264 = !DIGlobalVariableExpression(var: !2265, expr: !DIExpression())
!2265 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !2134, file: !2135, line: 74, type: !61, isLocal: false, isDefinition: true)
!2266 = !DIGlobalVariableExpression(var: !2267, expr: !DIExpression())
!2267 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !2134, file: !2135, line: 75, type: !61, isLocal: false, isDefinition: true)
!2268 = !DIGlobalVariableExpression(var: !2269, expr: !DIExpression())
!2269 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !2134, file: !2135, line: 76, type: !61, isLocal: false, isDefinition: true)
!2270 = !DIGlobalVariableExpression(var: !2271, expr: !DIExpression())
!2271 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !2134, file: !2135, line: 77, type: !61, isLocal: false, isDefinition: true)
!2272 = !DIGlobalVariableExpression(var: !2273, expr: !DIExpression())
!2273 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !2134, file: !2135, line: 78, type: !61, isLocal: false, isDefinition: true)
!2274 = !DIGlobalVariableExpression(var: !2275, expr: !DIExpression())
!2275 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !2134, file: !2135, line: 79, type: !61, isLocal: false, isDefinition: true)
!2276 = !DIGlobalVariableExpression(var: !2277, expr: !DIExpression())
!2277 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !2134, file: !2135, line: 80, type: !61, isLocal: false, isDefinition: true)
!2278 = !DIGlobalVariableExpression(var: !2279, expr: !DIExpression())
!2279 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !2134, file: !2135, line: 84, type: !2153, isLocal: false, isDefinition: true)
!2280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2281, size: 416, elements: !76)
!2281 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !2138, line: 60, baseType: !2282)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2138, line: 45, size: 416, elements: !2283)
!2283 = !{!2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !2282, file: !2138, line: 46, baseType: !61, size: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !2282, file: !2138, line: 47, baseType: !61, size: 32, offset: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !2282, file: !2138, line: 48, baseType: !61, size: 32, offset: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !2282, file: !2138, line: 49, baseType: !61, size: 32, offset: 96)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !2282, file: !2138, line: 50, baseType: !61, size: 32, offset: 128)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !2282, file: !2138, line: 51, baseType: !61, size: 32, offset: 160)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !2282, file: !2138, line: 52, baseType: !61, size: 32, offset: 192)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !2282, file: !2138, line: 53, baseType: !61, size: 32, offset: 224)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !2282, file: !2138, line: 54, baseType: !61, size: 32, offset: 256)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !2282, file: !2138, line: 55, baseType: !61, size: 32, offset: 288)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !2282, file: !2138, line: 56, baseType: !61, size: 32, offset: 320)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !2282, file: !2138, line: 57, baseType: !61, size: 32, offset: 352)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !2282, file: !2138, line: 58, baseType: !61, size: 32, offset: 384)
!2297 = !DIGlobalVariableExpression(var: !2298, expr: !DIExpression())
!2298 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !2299, file: !2300, line: 48, type: !2308, isLocal: false, isDefinition: true)
!2299 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2300, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2301, globals: !2307, splitDebugInlining: false, nameTableKind: None)
!2300 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!2301 = !{!2302}
!2302 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1133, line: 100, baseType: !18, size: 32, elements: !2303)
!2303 = !{!2304, !2305, !2306}
!2304 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!2305 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!2306 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!2307 = !{!2297}
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !1133, line: 104, baseType: !2302)
!2309 = !DIGlobalVariableExpression(var: !2310, expr: !DIExpression())
!2310 = distinct !DIGlobalVariable(name: "g_spi_transaction_finish", scope: !2311, file: !2312, line: 72, type: !90, isLocal: true, isDefinition: true)
!2311 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2312, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2313, retainedTypes: !2314, globals: !2315, splitDebugInlining: false, nameTableKind: None)
!2312 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/spi_master_to_slave/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!2313 = !{!631, !677, !693, !699, !703, !348, !886, !891, !895, !899, !903, !907, !911, !921, !871, !879, !929}
!2314 = !{!88, !460}
!2315 = !{!2309, !2316, !2321, !2323}
!2316 = !DIGlobalVariableExpression(var: !2317, expr: !DIExpression())
!2317 = distinct !DIGlobalVariable(name: "g_transfer_tx_big_buffer", scope: !2311, file: !2312, line: 73, type: !2318, isLocal: true, isDefinition: true, align: 32)
!2318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 8200, elements: !2319)
!2319 = !{!2320}
!2320 = !DISubrange(count: 1025)
!2321 = !DIGlobalVariableExpression(var: !2322, expr: !DIExpression())
!2322 = distinct !DIGlobalVariable(name: "g_transfer_rx_big_buffer", scope: !2311, file: !2312, line: 74, type: !2318, isLocal: true, isDefinition: true, align: 32)
!2323 = !DIGlobalVariableExpression(var: !2324, expr: !DIExpression())
!2324 = distinct !DIGlobalVariable(name: "g_transfer_small_buffer", scope: !2311, file: !2312, line: 75, type: !2325, isLocal: true, isDefinition: true, align: 32)
!2325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 512, elements: !1107)
!2326 = !DIGlobalVariableExpression(var: !2327, expr: !DIExpression())
!2327 = distinct !DIGlobalVariable(name: "heap_end", scope: !2328, file: !2329, line: 69, type: !2334, isLocal: true, isDefinition: true)
!2328 = distinct !DISubprogram(name: "_sbrk_r", scope: !2329, file: !2329, line: 66, type: !2330, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !2525)
!2329 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!2330 = !DISubroutineType(types: !2331)
!2331 = !{!2332, !2335, !2520}
!2332 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !2333, line: 123, baseType: !2334)
!2333 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 32)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !2337, line: 377, size: 1920, elements: !2338)
!2337 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!2338 = !{!2339, !2340, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2419, !2440, !2444, !2445, !2446, !2447, !2457, !2470, !2471, !2476, !2494, !2495, !2502, !2503, !2519}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !2336, file: !2337, line: 381, baseType: !7, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !2336, file: !2337, line: 386, baseType: !2341, size: 32, offset: 32)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 32)
!2342 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !2337, line: 292, baseType: !2343)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !2337, line: 186, size: 832, elements: !2344)
!2344 = !{!2345, !2347, !2348, !2349, !2350, !2351, !2356, !2357, !2358, !2359, !2363, !2368, !2375, !2379, !2380, !2381, !2382, !2384, !2386, !2387, !2388, !2390, !2396, !2409}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !2343, file: !2337, line: 187, baseType: !2346, size: 32)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !2343, file: !2337, line: 188, baseType: !7, size: 32, offset: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !2343, file: !2337, line: 189, baseType: !7, size: 32, offset: 64)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2343, file: !2337, line: 190, baseType: !1588, size: 16, offset: 96)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !2343, file: !2337, line: 191, baseType: !1588, size: 16, offset: 112)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !2343, file: !2337, line: 192, baseType: !2352, size: 64, offset: 128)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !2337, line: 122, size: 64, elements: !2353)
!2353 = !{!2354, !2355}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !2352, file: !2337, line: 123, baseType: !2346, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !2352, file: !2337, line: 124, baseType: !7, size: 32, offset: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !2343, file: !2337, line: 193, baseType: !7, size: 32, offset: 192)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !2343, file: !2337, line: 196, baseType: !2335, size: 32, offset: 224)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !2343, file: !2337, line: 200, baseType: !88, size: 32, offset: 256)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !2343, file: !2337, line: 202, baseType: !2360, size: 32, offset: 288)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 32)
!2361 = !DISubroutineType(types: !2362)
!2362 = !{!7, !2335, !88, !2334, !7}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !2343, file: !2337, line: 204, baseType: !2364, size: 32, offset: 320)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 32)
!2365 = !DISubroutineType(types: !2366)
!2366 = !{!7, !2335, !88, !2367, !7}
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !2343, file: !2337, line: 207, baseType: !2369, size: 32, offset: 352)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 32)
!2370 = !DISubroutineType(types: !2371)
!2371 = !{!2372, !2335, !88, !2372, !7}
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !2373, line: 116, baseType: !2374)
!2373 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!2374 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !2343, file: !2337, line: 208, baseType: !2376, size: 32, offset: 384)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 32)
!2377 = !DISubroutineType(types: !2378)
!2378 = !{!7, !2335, !88}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !2343, file: !2337, line: 211, baseType: !2352, size: 64, offset: 416)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !2343, file: !2337, line: 212, baseType: !2346, size: 32, offset: 480)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !2343, file: !2337, line: 213, baseType: !7, size: 32, offset: 512)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !2343, file: !2337, line: 216, baseType: !2383, size: 24, offset: 544)
!2383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 24, elements: !1473)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !2343, file: !2337, line: 217, baseType: !2385, size: 8, offset: 568)
!2385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 8, elements: !76)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !2343, file: !2337, line: 220, baseType: !2352, size: 64, offset: 576)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !2343, file: !2337, line: 223, baseType: !7, size: 32, offset: 640)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2343, file: !2337, line: 224, baseType: !2389, size: 32, offset: 672)
!2389 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !2373, line: 46, baseType: !2374)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2343, file: !2337, line: 231, baseType: !2391, size: 32, offset: 704)
!2391 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !2337, line: 35, baseType: !2392)
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !2393, line: 34, baseType: !2394)
!2393 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 32)
!2395 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !2393, line: 33, flags: DIFlagFwdDecl)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !2343, file: !2337, line: 233, baseType: !2397, size: 64, offset: 736)
!2397 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !2373, line: 170, baseType: !2398)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2373, line: 162, size: 64, elements: !2399)
!2399 = !{!2400, !2401}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2398, file: !2373, line: 164, baseType: !7, size: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2398, file: !2373, line: 169, baseType: !2402, size: 32, offset: 32)
!2402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2398, file: !2373, line: 165, size: 32, elements: !2403)
!2403 = !{!2404, !2407}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2402, file: !2373, line: 167, baseType: !2405, size: 32)
!2405 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2406, line: 116, baseType: !7)
!2406 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2402, file: !2373, line: 168, baseType: !2408, size: 32)
!2408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 32, elements: !463)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2343, file: !2337, line: 234, baseType: !7, size: 32, offset: 800)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !2336, file: !2337, line: 386, baseType: !2341, size: 32, offset: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !2336, file: !2337, line: 386, baseType: !2341, size: 32, offset: 96)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !2336, file: !2337, line: 388, baseType: !7, size: 32, offset: 128)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !2336, file: !2337, line: 390, baseType: !2334, size: 32, offset: 160)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !2336, file: !2337, line: 392, baseType: !7, size: 32, offset: 192)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !2336, file: !2337, line: 394, baseType: !7, size: 32, offset: 224)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !2336, file: !2337, line: 395, baseType: !2417, size: 32, offset: 256)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 32)
!2418 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !2337, line: 45, flags: DIFlagFwdDecl)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !2336, file: !2337, line: 397, baseType: !2420, size: 32, offset: 288)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !2337, line: 349, size: 128, elements: !2422)
!2422 = !{!2423, !2436, !2437, !2438}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !2421, file: !2337, line: 352, baseType: !2424, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 32)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !2337, line: 52, size: 192, elements: !2426)
!2426 = !{!2427, !2428, !2429, !2430, !2431, !2432}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2425, file: !2337, line: 54, baseType: !2424, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !2425, file: !2337, line: 55, baseType: !7, size: 32, offset: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !2425, file: !2337, line: 55, baseType: !7, size: 32, offset: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !2425, file: !2337, line: 55, baseType: !7, size: 32, offset: 96)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !2425, file: !2337, line: 55, baseType: !7, size: 32, offset: 128)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !2425, file: !2337, line: 56, baseType: !2433, size: 32, offset: 160)
!2433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2434, size: 32, elements: !76)
!2434 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !2337, line: 22, baseType: !2435)
!2435 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !2421, file: !2337, line: 353, baseType: !7, size: 32, offset: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !2421, file: !2337, line: 354, baseType: !2424, size: 32, offset: 64)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !2421, file: !2337, line: 355, baseType: !2439, size: 32, offset: 96)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !2336, file: !2337, line: 399, baseType: !2441, size: 32, offset: 320)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 32)
!2442 = !DISubroutineType(types: !2443)
!2443 = !{null, !2335}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !2336, file: !2337, line: 401, baseType: !7, size: 32, offset: 352)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !2336, file: !2337, line: 404, baseType: !7, size: 32, offset: 384)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !2336, file: !2337, line: 405, baseType: !2334, size: 32, offset: 416)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !2336, file: !2337, line: 407, baseType: !2448, size: 32, offset: 448)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 32)
!2449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !2337, line: 324, size: 192, elements: !2450)
!2450 = !{!2451, !2453, !2454, !2455}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !2449, file: !2337, line: 325, baseType: !2452, size: 48)
!2452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !977, size: 48, elements: !1473)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !2449, file: !2337, line: 326, baseType: !2452, size: 48, offset: 48)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !2449, file: !2337, line: 327, baseType: !977, size: 16, offset: 96)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !2449, file: !2337, line: 330, baseType: !2456, size: 64, offset: 128)
!2456 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !2336, file: !2337, line: 408, baseType: !2458, size: 32, offset: 480)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 32)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !2337, line: 60, size: 288, elements: !2460)
!2460 = !{!2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !2459, file: !2337, line: 62, baseType: !7, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !2459, file: !2337, line: 63, baseType: !7, size: 32, offset: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !2459, file: !2337, line: 64, baseType: !7, size: 32, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !2459, file: !2337, line: 65, baseType: !7, size: 32, offset: 96)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !2459, file: !2337, line: 66, baseType: !7, size: 32, offset: 128)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !2459, file: !2337, line: 67, baseType: !7, size: 32, offset: 160)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !2459, file: !2337, line: 68, baseType: !7, size: 32, offset: 192)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !2459, file: !2337, line: 69, baseType: !7, size: 32, offset: 224)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !2459, file: !2337, line: 70, baseType: !7, size: 32, offset: 256)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !2336, file: !2337, line: 409, baseType: !2334, size: 32, offset: 512)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !2336, file: !2337, line: 412, baseType: !2472, size: 32, offset: 544)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 32)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{null, !7}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !2336, file: !2337, line: 416, baseType: !2477, size: 32, offset: 576)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 32)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !2337, line: 90, size: 1120, elements: !2479)
!2479 = !{!2480, !2481, !2482, !2485}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2478, file: !2337, line: 91, baseType: !2477, size: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !2478, file: !2337, line: 92, baseType: !7, size: 32, offset: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !2478, file: !2337, line: 93, baseType: !2483, size: 1024, offset: 64)
!2483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2484, size: 1024, elements: !330)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !2478, file: !2337, line: 94, baseType: !2486, size: 32, offset: 1088)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 32)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !2337, line: 79, size: 2112, elements: !2488)
!2488 = !{!2489, !2491, !2492, !2493}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !2487, file: !2337, line: 80, baseType: !2490, size: 1024)
!2490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 1024, elements: !330)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !2487, file: !2337, line: 81, baseType: !2490, size: 1024, offset: 1024)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !2487, file: !2337, line: 83, baseType: !2434, size: 32, offset: 2048)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !2487, file: !2337, line: 86, baseType: !2434, size: 32, offset: 2080)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !2336, file: !2337, line: 417, baseType: !2478, size: 1120, offset: 608)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !2336, file: !2337, line: 420, baseType: !2496, size: 96, offset: 1728)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !2337, line: 296, size: 96, elements: !2497)
!2497 = !{!2498, !2500, !2501}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2496, file: !2337, line: 298, baseType: !2499, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !2496, file: !2337, line: 299, baseType: !7, size: 32, offset: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !2496, file: !2337, line: 300, baseType: !2341, size: 32, offset: 64)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !2336, file: !2337, line: 421, baseType: !2341, size: 32, offset: 1824)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !2336, file: !2337, line: 422, baseType: !2504, size: 32, offset: 1856)
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 32)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !2337, line: 359, size: 640, elements: !2506)
!2506 = !{!2507, !2508, !2509, !2510, !2511, !2513, !2514, !2515, !2516, !2517, !2518}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !2505, file: !2337, line: 362, baseType: !2334, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !2505, file: !2337, line: 363, baseType: !2397, size: 64, offset: 32)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !2505, file: !2337, line: 364, baseType: !2397, size: 64, offset: 96)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !2505, file: !2337, line: 365, baseType: !2397, size: 64, offset: 160)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !2505, file: !2337, line: 366, baseType: !2512, size: 64, offset: 224)
!2512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1630, size: 64, elements: !753)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !2505, file: !2337, line: 367, baseType: !7, size: 32, offset: 288)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !2505, file: !2337, line: 368, baseType: !2397, size: 64, offset: 320)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !2505, file: !2337, line: 369, baseType: !2397, size: 64, offset: 384)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !2505, file: !2337, line: 370, baseType: !2397, size: 64, offset: 448)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !2505, file: !2337, line: 371, baseType: !2397, size: 64, offset: 512)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !2505, file: !2337, line: 372, baseType: !2397, size: 64, offset: 576)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !2336, file: !2337, line: 423, baseType: !2334, size: 32, offset: 1888)
!2520 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2406, line: 46, baseType: !18)
!2521 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2522, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2523, globals: !2524, splitDebugInlining: false, nameTableKind: None)
!2522 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!2523 = !{!2334, !2332}
!2524 = !{!2326}
!2525 = !{!2526, !2527, !2528, !2529}
!2526 = !DILocalVariable(name: "r", arg: 1, scope: !2328, file: !2329, line: 66, type: !2335)
!2527 = !DILocalVariable(name: "nbytes", arg: 2, scope: !2328, file: !2329, line: 66, type: !2520)
!2528 = !DILocalVariable(name: "prev_heap_end", scope: !2328, file: !2329, line: 70, type: !2334)
!2529 = !DILocalVariable(name: "stack", scope: !2328, file: !2329, line: 71, type: !2334)
!2530 = !DIGlobalVariableExpression(var: !2531, expr: !DIExpression())
!2531 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !2532, file: !2533, line: 52, type: !60, isLocal: true, isDefinition: true)
!2532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2533, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2534, globals: !2637, splitDebugInlining: false, nameTableKind: None)
!2533 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/spi_master_to_slave/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!2534 = !{!2535, !2543, !61, !2588, !2593, !2618}
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1031, line: 656, baseType: !2537)
!2537 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1031, line: 650, size: 128, elements: !2538)
!2538 = !{!2539, !2540, !2541, !2542}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2537, file: !1031, line: 652, baseType: !60, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2537, file: !1031, line: 653, baseType: !60, size: 32, offset: 32)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2537, file: !1031, line: 654, baseType: !60, size: 32, offset: 64)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2537, file: !1031, line: 655, baseType: !272, size: 32, offset: 96)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !56, line: 1952, baseType: !2545)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1921, size: 8288, elements: !2546)
!2546 = !{!2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2557, !2558, !2562, !2563, !2565, !2566, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2585, !2586, !2587}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !2545, file: !56, line: 1922, baseType: !60, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !2545, file: !56, line: 1923, baseType: !60, size: 32, offset: 32)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !2545, file: !56, line: 1924, baseType: !60, size: 32, offset: 64)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !2545, file: !56, line: 1925, baseType: !60, size: 32, offset: 96)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !2545, file: !56, line: 1926, baseType: !60, size: 32, offset: 128)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !2545, file: !56, line: 1927, baseType: !60, size: 32, offset: 160)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !2545, file: !56, line: 1928, baseType: !60, size: 32, offset: 192)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !2545, file: !56, line: 1929, baseType: !60, size: 32, offset: 224)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !2545, file: !56, line: 1930, baseType: !2556, size: 768, offset: 256)
!2556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 768, elements: !1070)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !2545, file: !56, line: 1931, baseType: !60, size: 32, offset: 1024)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !2545, file: !56, line: 1932, baseType: !2559, size: 992, offset: 1056)
!2559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 992, elements: !2560)
!2560 = !{!2561}
!2561 = !DISubrange(count: 31)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !2545, file: !56, line: 1933, baseType: !60, size: 32, offset: 2048)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !2545, file: !56, line: 1934, baseType: !2564, size: 416, offset: 2080)
!2564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 416, elements: !773)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !2545, file: !56, line: 1935, baseType: !60, size: 32, offset: 2496)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !2545, file: !56, line: 1936, baseType: !2567, size: 1568, offset: 2528)
!2567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 1568, elements: !2568)
!2568 = !{!2569}
!2569 = !DISubrange(count: 49)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !2545, file: !56, line: 1937, baseType: !272, size: 32, offset: 4096)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !2545, file: !56, line: 1938, baseType: !272, size: 32, offset: 4128)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !2545, file: !56, line: 1939, baseType: !272, size: 32, offset: 4160)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !2545, file: !56, line: 1940, baseType: !60, size: 32, offset: 4192)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !2545, file: !56, line: 1941, baseType: !60, size: 32, offset: 4224)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !2545, file: !56, line: 1942, baseType: !60, size: 32, offset: 4256)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !2545, file: !56, line: 1943, baseType: !60, size: 32, offset: 4288)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !2545, file: !56, line: 1944, baseType: !60, size: 32, offset: 4320)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !2545, file: !56, line: 1945, baseType: !60, size: 32, offset: 4352)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !2545, file: !56, line: 1946, baseType: !60, size: 32, offset: 4384)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !2545, file: !56, line: 1947, baseType: !60, size: 32, offset: 4416)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !2545, file: !56, line: 1948, baseType: !2582, size: 3744, offset: 4448)
!2582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 3744, elements: !2583)
!2583 = !{!2584}
!2584 = !DISubrange(count: 117)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !2545, file: !56, line: 1949, baseType: !60, size: 32, offset: 8192)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !2545, file: !56, line: 1950, baseType: !60, size: 32, offset: 8224)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !2545, file: !56, line: 1951, baseType: !272, size: 32, offset: 8256)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !56, line: 2158, baseType: !2590)
!2590 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2156, size: 32, elements: !2591)
!2591 = !{!2592}
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !2590, file: !56, line: 2157, baseType: !60, size: 32)
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1031, line: 418, baseType: !2595)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1031, line: 395, size: 1120, elements: !2596)
!2596 = !{!2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2595, file: !1031, line: 397, baseType: !272, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2595, file: !1031, line: 398, baseType: !60, size: 32, offset: 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2595, file: !1031, line: 399, baseType: !60, size: 32, offset: 64)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2595, file: !1031, line: 400, baseType: !60, size: 32, offset: 96)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2595, file: !1031, line: 401, baseType: !60, size: 32, offset: 128)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2595, file: !1031, line: 402, baseType: !60, size: 32, offset: 160)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2595, file: !1031, line: 403, baseType: !1041, size: 96, offset: 192)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2595, file: !1031, line: 404, baseType: !60, size: 32, offset: 288)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2595, file: !1031, line: 405, baseType: !60, size: 32, offset: 320)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2595, file: !1031, line: 406, baseType: !60, size: 32, offset: 352)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2595, file: !1031, line: 407, baseType: !60, size: 32, offset: 384)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2595, file: !1031, line: 408, baseType: !60, size: 32, offset: 416)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2595, file: !1031, line: 409, baseType: !60, size: 32, offset: 448)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2595, file: !1031, line: 410, baseType: !60, size: 32, offset: 480)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2595, file: !1031, line: 411, baseType: !1050, size: 64, offset: 512)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2595, file: !1031, line: 412, baseType: !272, size: 32, offset: 576)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2595, file: !1031, line: 413, baseType: !272, size: 32, offset: 608)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2595, file: !1031, line: 414, baseType: !1054, size: 128, offset: 640)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2595, file: !1031, line: 415, baseType: !1056, size: 160, offset: 768)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2595, file: !1031, line: 416, baseType: !1060, size: 160, offset: 928)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2595, file: !1031, line: 417, baseType: !60, size: 32, offset: 1088)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !2620)
!2620 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !2621)
!2621 = !{!2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !2620, file: !56, line: 261, baseType: !60, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !2620, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !2620, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !2620, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !2620, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !2620, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !2620, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !2620, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !2620, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !2620, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2620, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !2620, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2620, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !2620, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !2620, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!2637 = !{!2638, !2530}
!2638 = !DIGlobalVariableExpression(var: !2639, expr: !DIExpression())
!2639 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2532, file: !2533, line: 50, type: !61, isLocal: false, isDefinition: true)
!2640 = !DIGlobalVariableExpression(var: !2641, expr: !DIExpression())
!2641 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2642, file: !2647, line: 4, type: !2653, isLocal: false, isDefinition: true)
!2642 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2643, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2644, splitDebugInlining: false, nameTableKind: None)
!2643 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!2644 = !{!2640, !2645, !2651}
!2645 = !DIGlobalVariableExpression(var: !2646, expr: !DIExpression())
!2646 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2642, file: !2647, line: 5, type: !2648, isLocal: false, isDefinition: true)
!2647 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!2648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1630, size: 88, elements: !2649)
!2649 = !{!2650}
!2650 = !DISubrange(count: 11)
!2651 = !DIGlobalVariableExpression(var: !2652, expr: !DIExpression())
!2652 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2642, file: !2647, line: 6, type: !2648, isLocal: false, isDefinition: true)
!2653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1630, size: 248, elements: !2560)
!2654 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2655, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2656, retainedTypes: !2679, splitDebugInlining: false, nameTableKind: None)
!2655 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!2656 = !{!2057, !245, !259, !2657, !2661, !254, !157}
!2657 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 857, baseType: !18, size: 32, elements: !2658)
!2658 = !{!2659, !2660}
!2659 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!2660 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!2661 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 87, baseType: !18, size: 32, elements: !2662)
!2662 = !{!2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678}
!2663 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!2664 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!2665 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!2666 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!2667 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!2668 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!2669 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!2670 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!2671 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!2672 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!2673 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!2674 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!2675 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!2676 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!2677 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!2678 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!2679 = !{!61, !88, !307}
!2680 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2681, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2682, retainedTypes: !2683, splitDebugInlining: false, nameTableKind: None)
!2681 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!2682 = !{!693, !699, !703, !786}
!2683 = !{!460}
!2684 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2685, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2686, retainedTypes: !2687, splitDebugInlining: false, nameTableKind: None)
!2685 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!2686 = !{!168, !715}
!2687 = !{!862, !2688, !61, !2713, !1092}
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 32)
!2689 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1031, line: 418, baseType: !2690)
!2690 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1031, line: 395, size: 1120, elements: !2691)
!2691 = !{!2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2690, file: !1031, line: 397, baseType: !272, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2690, file: !1031, line: 398, baseType: !60, size: 32, offset: 32)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2690, file: !1031, line: 399, baseType: !60, size: 32, offset: 64)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2690, file: !1031, line: 400, baseType: !60, size: 32, offset: 96)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2690, file: !1031, line: 401, baseType: !60, size: 32, offset: 128)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2690, file: !1031, line: 402, baseType: !60, size: 32, offset: 160)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2690, file: !1031, line: 403, baseType: !1041, size: 96, offset: 192)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2690, file: !1031, line: 404, baseType: !60, size: 32, offset: 288)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2690, file: !1031, line: 405, baseType: !60, size: 32, offset: 320)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2690, file: !1031, line: 406, baseType: !60, size: 32, offset: 352)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2690, file: !1031, line: 407, baseType: !60, size: 32, offset: 384)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2690, file: !1031, line: 408, baseType: !60, size: 32, offset: 416)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2690, file: !1031, line: 409, baseType: !60, size: 32, offset: 448)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2690, file: !1031, line: 410, baseType: !60, size: 32, offset: 480)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2690, file: !1031, line: 411, baseType: !1050, size: 64, offset: 512)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2690, file: !1031, line: 412, baseType: !272, size: 32, offset: 576)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2690, file: !1031, line: 413, baseType: !272, size: 32, offset: 608)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2690, file: !1031, line: 414, baseType: !1054, size: 128, offset: 640)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2690, file: !1031, line: 415, baseType: !1056, size: 160, offset: 768)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2690, file: !1031, line: 416, baseType: !1060, size: 160, offset: 928)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2690, file: !1031, line: 417, baseType: !60, size: 32, offset: 1088)
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 32)
!2714 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1031, line: 378, baseType: !2715)
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1031, line: 363, size: 28704, elements: !2716)
!2716 = !{!2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2715, file: !1031, line: 365, baseType: !1067, size: 256)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2715, file: !1031, line: 366, baseType: !1069, size: 768, offset: 256)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2715, file: !1031, line: 367, baseType: !1067, size: 256, offset: 1024)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !2715, file: !1031, line: 368, baseType: !1069, size: 768, offset: 1280)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2715, file: !1031, line: 369, baseType: !1067, size: 256, offset: 2048)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2715, file: !1031, line: 370, baseType: !1069, size: 768, offset: 2304)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2715, file: !1031, line: 371, baseType: !1067, size: 256, offset: 3072)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2715, file: !1031, line: 372, baseType: !1069, size: 768, offset: 3328)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2715, file: !1031, line: 373, baseType: !1067, size: 256, offset: 4096)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2715, file: !1031, line: 374, baseType: !1080, size: 1792, offset: 4352)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2715, file: !1031, line: 375, baseType: !1084, size: 1920, offset: 6144)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2715, file: !1031, line: 376, baseType: !1088, size: 20608, offset: 8064)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2715, file: !1031, line: 377, baseType: !60, size: 32, offset: 28672)
!2730 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2731, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2731 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!2732 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2733, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2733 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!2734 = !{!"Ubuntu clang version 14.0.6"}
!2735 = !{i32 7, !"Dwarf Version", i32 2}
!2736 = !{i32 2, !"Debug Info Version", i32 3}
!2737 = !{i32 1, !"wchar_size", i32 4}
!2738 = !{i32 1, !"min_enum_size", i32 4}
!2739 = !{i32 1, !"branch-target-enforcement", i32 0}
!2740 = !{i32 1, !"sign-return-address", i32 0}
!2741 = !{i32 1, !"sign-return-address-all", i32 0}
!2742 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2743 = !{i32 7, !"frame-pointer", i32 2}
!2744 = distinct !DISubprogram(name: "hal_cache_init", scope: !3, file: !3, line: 53, type: !2745, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2748)
!2745 = !DISubroutineType(types: !2746)
!2746 = !{!2747}
!2747 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !6, line: 172, baseType: !5)
!2748 = !{!2749, !2751}
!2749 = !DILocalVariable(name: "region", scope: !2744, file: !3, line: 55, type: !2750)
!2750 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !6, line: 204, baseType: !17)
!2751 = !DILocalVariable(name: "irq_flag", scope: !2744, file: !3, line: 56, type: !61)
!2752 = !DILocation(line: 59, column: 16, scope: !2744)
!2753 = !DILocation(line: 0, scope: !2744)
!2754 = !DILocation(line: 62, column: 9, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2744, file: !3, line: 62, column: 9)
!2756 = !{i8 0, i8 2}
!2757 = !DILocation(line: 62, column: 9, scope: !2744)
!2758 = !DILocation(line: 64, column: 9, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 62, column: 39)
!2760 = !DILocation(line: 66, column: 9, scope: !2759)
!2761 = !DILocation(line: 69, column: 24, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 67, column: 12)
!2763 = !DILocation(line: 72, column: 9, scope: !2762)
!2764 = !DILocation(line: 77, column: 5, scope: !2744)
!2765 = !DILocation(line: 80, column: 22, scope: !2744)
!2766 = !DILocation(line: 81, column: 28, scope: !2744)
!2767 = !DILocation(line: 84, column: 19, scope: !2744)
!2768 = !DILocation(line: 85, column: 23, scope: !2744)
!2769 = !DILocation(line: 88, column: 5, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2744, file: !3, line: 88, column: 5)
!2771 = !DILocation(line: 90, column: 9, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2773, file: !3, line: 88, column: 81)
!2773 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 88, column: 5)
!2774 = !DILocation(line: 90, column: 38, scope: !2772)
!2775 = !DILocation(line: 91, column: 9, scope: !2772)
!2776 = !DILocation(line: 91, column: 42, scope: !2772)
!2777 = !DILocation(line: 94, column: 45, scope: !2772)
!2778 = !DILocation(line: 94, column: 47, scope: !2772)
!2779 = !DILocation(line: 95, column: 49, scope: !2772)
!2780 = !DILocation(line: 95, column: 51, scope: !2772)
!2781 = !DILocation(line: 88, column: 77, scope: !2773)
!2782 = !DILocation(line: 88, column: 46, scope: !2773)
!2783 = distinct !{!2783, !2769, !2784}
!2784 = !DILocation(line: 96, column: 5, scope: !2770)
!2785 = !DILocation(line: 99, column: 1, scope: !2744)
!2786 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !3, file: !3, line: 327, type: !2745, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2787)
!2787 = !{!2788}
!2788 = !DILocalVariable(name: "irq_flag", scope: !2786, file: !3, line: 329, type: !61)
!2789 = !DILocation(line: 332, column: 16, scope: !2786)
!2790 = !DILocation(line: 0, scope: !2786)
!2791 = !DILocation(line: 335, column: 21, scope: !2786)
!2792 = !DILocation(line: 336, column: 21, scope: !2786)
!2793 = !DILocation(line: 339, column: 21, scope: !2786)
!2794 = !DILocation(line: 340, column: 21, scope: !2786)
!2795 = !DILocation(line: 434, column: 3, scope: !2796, inlinedAt: !2798)
!2796 = distinct !DISubprogram(name: "__ISB", scope: !2797, file: !2797, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2797 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!2798 = distinct !DILocation(line: 343, column: 5, scope: !2786)
!2799 = !{i64 442812}
!2800 = !DILocation(line: 346, column: 5, scope: !2786)
!2801 = !DILocation(line: 348, column: 5, scope: !2786)
!2802 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !3, file: !3, line: 101, type: !2745, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2803)
!2803 = !{!2804}
!2804 = !DILocalVariable(name: "region", scope: !2802, file: !3, line: 103, type: !2750)
!2805 = !DILocation(line: 107, column: 5, scope: !2802)
!2806 = !DILocation(line: 110, column: 22, scope: !2802)
!2807 = !DILocation(line: 111, column: 28, scope: !2802)
!2808 = !DILocation(line: 114, column: 19, scope: !2802)
!2809 = !DILocation(line: 115, column: 23, scope: !2802)
!2810 = !DILocation(line: 0, scope: !2802)
!2811 = !DILocation(line: 118, column: 5, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2802, file: !3, line: 118, column: 5)
!2813 = !DILocation(line: 120, column: 9, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2815, file: !3, line: 118, column: 81)
!2815 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 118, column: 5)
!2816 = !DILocation(line: 120, column: 38, scope: !2814)
!2817 = !DILocation(line: 121, column: 9, scope: !2814)
!2818 = !DILocation(line: 121, column: 42, scope: !2814)
!2819 = !DILocation(line: 124, column: 45, scope: !2814)
!2820 = !DILocation(line: 124, column: 47, scope: !2814)
!2821 = !DILocation(line: 125, column: 49, scope: !2814)
!2822 = !DILocation(line: 125, column: 51, scope: !2814)
!2823 = !DILocation(line: 118, column: 77, scope: !2815)
!2824 = !DILocation(line: 118, column: 46, scope: !2815)
!2825 = distinct !{!2825, !2811, !2826}
!2826 = !DILocation(line: 126, column: 5, scope: !2812)
!2827 = !DILocation(line: 129, column: 20, scope: !2802)
!2828 = !DILocation(line: 131, column: 5, scope: !2802)
!2829 = distinct !DISubprogram(name: "hal_cache_enable", scope: !3, file: !3, line: 134, type: !2745, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2830 = !DILocation(line: 137, column: 45, scope: !2831)
!2831 = distinct !DILexicalBlock(scope: !2829, file: !3, line: 137, column: 9)
!2832 = !DILocation(line: 137, column: 28, scope: !2831)
!2833 = !DILocation(line: 137, column: 9, scope: !2829)
!2834 = !DILocation(line: 142, column: 22, scope: !2829)
!2835 = !DILocation(line: 145, column: 28, scope: !2829)
!2836 = !DILocation(line: 145, column: 19, scope: !2829)
!2837 = !DILocation(line: 147, column: 5, scope: !2829)
!2838 = !DILocation(line: 0, scope: !2829)
!2839 = !DILocation(line: 148, column: 1, scope: !2829)
!2840 = distinct !DISubprogram(name: "hal_cache_disable", scope: !3, file: !3, line: 150, type: !2745, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2841)
!2841 = !{!2842}
!2842 = !DILocalVariable(name: "irq_flag", scope: !2840, file: !3, line: 152, type: !61)
!2843 = !DILocation(line: 155, column: 16, scope: !2840)
!2844 = !DILocation(line: 0, scope: !2840)
!2845 = !DILocation(line: 158, column: 16, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2840, file: !3, line: 158, column: 9)
!2847 = !DILocation(line: 158, column: 26, scope: !2846)
!2848 = !DILocation(line: 158, column: 9, scope: !2840)
!2849 = !DILocation(line: 160, column: 9, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2846, file: !3, line: 158, column: 49)
!2851 = !DILocation(line: 161, column: 5, scope: !2850)
!2852 = !DILocation(line: 164, column: 22, scope: !2840)
!2853 = !DILocation(line: 167, column: 28, scope: !2840)
!2854 = !DILocation(line: 167, column: 19, scope: !2840)
!2855 = !DILocation(line: 170, column: 5, scope: !2840)
!2856 = !DILocation(line: 172, column: 5, scope: !2840)
!2857 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !3, file: !3, line: 175, type: !2858, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2860)
!2858 = !DISubroutineType(types: !2859)
!2859 = !{!2747, !2750}
!2860 = !{!2861}
!2861 = !DILocalVariable(name: "region", arg: 1, scope: !2857, file: !3, line: 175, type: !2750)
!2862 = !DILocation(line: 0, scope: !2857)
!2863 = !DILocation(line: 178, column: 16, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 178, column: 9)
!2865 = !DILocation(line: 178, column: 9, scope: !2857)
!2866 = !DILocation(line: 183, column: 9, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 183, column: 9)
!2868 = !DILocation(line: 183, column: 38, scope: !2867)
!2869 = !DILocation(line: 183, column: 9, scope: !2857)
!2870 = !DILocation(line: 184, column: 38, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2867, file: !3, line: 183, column: 62)
!2872 = !DILocation(line: 184, column: 32, scope: !2871)
!2873 = !DILocation(line: 190, column: 32, scope: !2857)
!2874 = !DILocation(line: 190, column: 23, scope: !2857)
!2875 = !DILocation(line: 192, column: 5, scope: !2857)
!2876 = !DILocation(line: 193, column: 1, scope: !2857)
!2877 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !3, file: !3, line: 195, type: !2858, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2878)
!2878 = !{!2879}
!2879 = !DILocalVariable(name: "region", arg: 1, scope: !2877, file: !3, line: 195, type: !2750)
!2880 = !DILocation(line: 0, scope: !2877)
!2881 = !DILocation(line: 198, column: 16, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2877, file: !3, line: 198, column: 9)
!2883 = !DILocation(line: 198, column: 9, scope: !2877)
!2884 = !DILocation(line: 203, column: 35, scope: !2877)
!2885 = !DILocation(line: 203, column: 31, scope: !2877)
!2886 = !DILocation(line: 203, column: 28, scope: !2877)
!2887 = !DILocation(line: 206, column: 32, scope: !2877)
!2888 = !DILocation(line: 206, column: 23, scope: !2877)
!2889 = !DILocation(line: 209, column: 41, scope: !2877)
!2890 = !DILocation(line: 209, column: 43, scope: !2877)
!2891 = !DILocation(line: 210, column: 45, scope: !2877)
!2892 = !DILocation(line: 210, column: 47, scope: !2877)
!2893 = !DILocation(line: 212, column: 5, scope: !2877)
!2894 = !DILocation(line: 213, column: 1, scope: !2877)
!2895 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !3, file: !3, line: 215, type: !2896, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2899)
!2896 = !DISubroutineType(types: !2897)
!2897 = !{!2747, !2898}
!2898 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !6, line: 182, baseType: !37)
!2899 = !{!2900}
!2900 = !DILocalVariable(name: "cache_size", arg: 1, scope: !2895, file: !3, line: 215, type: !2898)
!2901 = !DILocation(line: 0, scope: !2895)
!2902 = !DILocation(line: 218, column: 20, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 218, column: 9)
!2904 = !DILocation(line: 218, column: 9, scope: !2895)
!2905 = !DILocation(line: 223, column: 22, scope: !2895)
!2906 = !DILocation(line: 224, column: 37, scope: !2895)
!2907 = !DILocation(line: 224, column: 22, scope: !2895)
!2908 = !DILocation(line: 227, column: 20, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 227, column: 9)
!2910 = !DILocation(line: 227, column: 9, scope: !2895)
!2911 = !DILocation(line: 228, column: 26, scope: !2912)
!2912 = distinct !DILexicalBlock(scope: !2909, file: !3, line: 227, column: 43)
!2913 = !DILocation(line: 229, column: 5, scope: !2912)
!2914 = !DILocation(line: 232, column: 28, scope: !2895)
!2915 = !DILocation(line: 232, column: 19, scope: !2895)
!2916 = !DILocation(line: 234, column: 5, scope: !2895)
!2917 = !DILocation(line: 235, column: 1, scope: !2895)
!2918 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !3, file: !3, line: 237, type: !2919, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2928)
!2919 = !DISubroutineType(types: !2920)
!2920 = !{!2747, !2750, !2921}
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2922, size: 32)
!2922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2923)
!2923 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !6, line: 222, baseType: !2924)
!2924 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 219, size: 64, elements: !2925)
!2925 = !{!2926, !2927}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !2924, file: !6, line: 220, baseType: !61, size: 32)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !2924, file: !6, line: 221, baseType: !61, size: 32, offset: 32)
!2928 = !{!2929, !2930}
!2929 = !DILocalVariable(name: "region", arg: 1, scope: !2918, file: !3, line: 237, type: !2750)
!2930 = !DILocalVariable(name: "region_config", arg: 2, scope: !2918, file: !3, line: 237, type: !2921)
!2931 = !DILocation(line: 0, scope: !2918)
!2932 = !DILocation(line: 240, column: 16, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2918, file: !3, line: 240, column: 9)
!2934 = !DILocation(line: 240, column: 9, scope: !2918)
!2935 = !DILocation(line: 245, column: 23, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2918, file: !3, line: 245, column: 9)
!2937 = !DILocation(line: 245, column: 9, scope: !2918)
!2938 = !DILocation(line: 250, column: 24, scope: !2939)
!2939 = distinct !DILexicalBlock(scope: !2918, file: !3, line: 250, column: 9)
!2940 = !DILocation(line: 250, column: 45, scope: !2939)
!2941 = !DILocation(line: 250, column: 9, scope: !2918)
!2942 = !DILocation(line: 251, column: 9, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2939, file: !3, line: 250, column: 81)
!2944 = !DILocation(line: 256, column: 24, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !2918, file: !3, line: 256, column: 9)
!2946 = !DILocation(line: 256, column: 42, scope: !2945)
!2947 = !DILocation(line: 256, column: 9, scope: !2918)
!2948 = !DILocation(line: 257, column: 9, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2945, file: !3, line: 256, column: 78)
!2950 = !DILocation(line: 262, column: 5, scope: !2918)
!2951 = !DILocation(line: 262, column: 34, scope: !2918)
!2952 = !DILocation(line: 263, column: 55, scope: !2918)
!2953 = !DILocation(line: 263, column: 93, scope: !2918)
!2954 = !DILocation(line: 263, column: 76, scope: !2918)
!2955 = !DILocation(line: 263, column: 5, scope: !2918)
!2956 = !DILocation(line: 263, column: 38, scope: !2918)
!2957 = !DILocation(line: 266, column: 34, scope: !2918)
!2958 = !DILocation(line: 269, column: 45, scope: !2918)
!2959 = !DILocation(line: 269, column: 41, scope: !2918)
!2960 = !DILocation(line: 269, column: 43, scope: !2918)
!2961 = !DILocation(line: 270, column: 49, scope: !2918)
!2962 = !DILocation(line: 270, column: 45, scope: !2918)
!2963 = !DILocation(line: 270, column: 47, scope: !2918)
!2964 = !DILocation(line: 272, column: 5, scope: !2918)
!2965 = !DILocation(line: 273, column: 1, scope: !2918)
!2966 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !3, file: !3, line: 275, type: !2967, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2969)
!2967 = !DISubroutineType(types: !2968)
!2968 = !{!2747, !61}
!2969 = !{!2970, !2971}
!2970 = !DILocalVariable(name: "address", arg: 1, scope: !2966, file: !3, line: 275, type: !61)
!2971 = !DILocalVariable(name: "irq_flag", scope: !2966, file: !3, line: 277, type: !61)
!2972 = !DILocation(line: 0, scope: !2966)
!2973 = !DILocation(line: 280, column: 17, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 280, column: 9)
!2975 = !DILocation(line: 280, column: 9, scope: !2966)
!2976 = !DILocation(line: 284, column: 16, scope: !2966)
!2977 = !DILocation(line: 287, column: 32, scope: !2966)
!2978 = !DILocation(line: 287, column: 21, scope: !2966)
!2979 = !DILocation(line: 288, column: 21, scope: !2966)
!2980 = !DILocation(line: 434, column: 3, scope: !2796, inlinedAt: !2981)
!2981 = distinct !DILocation(line: 291, column: 5, scope: !2966)
!2982 = !DILocation(line: 294, column: 5, scope: !2966)
!2983 = !DILocation(line: 296, column: 5, scope: !2966)
!2984 = !DILocation(line: 297, column: 1, scope: !2966)
!2985 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !3, file: !3, line: 299, type: !2986, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2988)
!2986 = !DISubroutineType(types: !2987)
!2987 = !{!2747, !61, !61}
!2988 = !{!2989, !2990, !2991, !2992}
!2989 = !DILocalVariable(name: "address", arg: 1, scope: !2985, file: !3, line: 299, type: !61)
!2990 = !DILocalVariable(name: "length", arg: 2, scope: !2985, file: !3, line: 299, type: !61)
!2991 = !DILocalVariable(name: "irq_flag", scope: !2985, file: !3, line: 301, type: !61)
!2992 = !DILocalVariable(name: "end_address", scope: !2985, file: !3, line: 302, type: !61)
!2993 = !DILocation(line: 0, scope: !2985)
!2994 = !DILocation(line: 302, column: 36, scope: !2985)
!2995 = !DILocation(line: 305, column: 47, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2985, file: !3, line: 305, column: 9)
!2997 = !DILocation(line: 310, column: 16, scope: !2985)
!2998 = !DILocation(line: 313, column: 20, scope: !2985)
!2999 = !DILocation(line: 313, column: 5, scope: !2985)
!3000 = !DILocation(line: 314, column: 9, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !2985, file: !3, line: 313, column: 35)
!3002 = !DILocation(line: 315, column: 17, scope: !3001)
!3003 = distinct !{!3003, !2999, !3004}
!3004 = !DILocation(line: 316, column: 5, scope: !2985)
!3005 = !DILocation(line: 434, column: 3, scope: !2796, inlinedAt: !3006)
!3006 = distinct !DILocation(line: 319, column: 5, scope: !2985)
!3007 = !DILocation(line: 322, column: 5, scope: !2985)
!3008 = !DILocation(line: 324, column: 5, scope: !2985)
!3009 = !DILocation(line: 325, column: 1, scope: !2985)
!3010 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !3, file: !3, line: 351, type: !2967, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3011)
!3011 = !{!3012, !3013}
!3012 = !DILocalVariable(name: "address", arg: 1, scope: !3010, file: !3, line: 351, type: !61)
!3013 = !DILocalVariable(name: "irq_flag", scope: !3010, file: !3, line: 353, type: !61)
!3014 = !DILocation(line: 0, scope: !3010)
!3015 = !DILocation(line: 356, column: 17, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !3010, file: !3, line: 356, column: 9)
!3017 = !DILocation(line: 356, column: 9, scope: !3010)
!3018 = !DILocation(line: 361, column: 16, scope: !3010)
!3019 = !DILocation(line: 364, column: 32, scope: !3010)
!3020 = !DILocation(line: 364, column: 21, scope: !3010)
!3021 = !DILocation(line: 365, column: 21, scope: !3010)
!3022 = !DILocation(line: 434, column: 3, scope: !2796, inlinedAt: !3023)
!3023 = distinct !DILocation(line: 368, column: 5, scope: !3010)
!3024 = !DILocation(line: 371, column: 5, scope: !3010)
!3025 = !DILocation(line: 373, column: 5, scope: !3010)
!3026 = !DILocation(line: 374, column: 1, scope: !3010)
!3027 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !3, file: !3, line: 376, type: !2986, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3028)
!3028 = !{!3029, !3030, !3031, !3032}
!3029 = !DILocalVariable(name: "address", arg: 1, scope: !3027, file: !3, line: 376, type: !61)
!3030 = !DILocalVariable(name: "length", arg: 2, scope: !3027, file: !3, line: 376, type: !61)
!3031 = !DILocalVariable(name: "irq_flag", scope: !3027, file: !3, line: 378, type: !61)
!3032 = !DILocalVariable(name: "end_address", scope: !3027, file: !3, line: 379, type: !61)
!3033 = !DILocation(line: 0, scope: !3027)
!3034 = !DILocation(line: 379, column: 36, scope: !3027)
!3035 = !DILocation(line: 382, column: 47, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 382, column: 9)
!3037 = !DILocation(line: 387, column: 16, scope: !3027)
!3038 = !DILocation(line: 390, column: 20, scope: !3027)
!3039 = !DILocation(line: 390, column: 5, scope: !3027)
!3040 = !DILocation(line: 391, column: 9, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 390, column: 35)
!3042 = !DILocation(line: 392, column: 17, scope: !3041)
!3043 = distinct !{!3043, !3039, !3044}
!3044 = !DILocation(line: 393, column: 5, scope: !3027)
!3045 = !DILocation(line: 434, column: 3, scope: !2796, inlinedAt: !3046)
!3046 = distinct !DILocation(line: 396, column: 5, scope: !3027)
!3047 = !DILocation(line: 399, column: 5, scope: !3027)
!3048 = !DILocation(line: 401, column: 5, scope: !3027)
!3049 = !DILocation(line: 402, column: 1, scope: !3027)
!3050 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !3, file: !3, line: 404, type: !2745, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3051)
!3051 = !{!3052}
!3052 = !DILocalVariable(name: "irq_flag", scope: !3050, file: !3, line: 406, type: !61)
!3053 = !DILocation(line: 409, column: 16, scope: !3050)
!3054 = !DILocation(line: 0, scope: !3050)
!3055 = !DILocation(line: 412, column: 21, scope: !3050)
!3056 = !DILocation(line: 413, column: 21, scope: !3050)
!3057 = !DILocation(line: 434, column: 3, scope: !2796, inlinedAt: !3058)
!3058 = distinct !DILocation(line: 416, column: 5, scope: !3050)
!3059 = !DILocation(line: 419, column: 5, scope: !3050)
!3060 = !DILocation(line: 421, column: 5, scope: !3050)
!3061 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !3, file: !3, line: 424, type: !3062, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3064)
!3062 = !DISubroutineType(types: !3063)
!3063 = !{!91, !61}
!3064 = !{!3065, !3066}
!3065 = !DILocalVariable(name: "address", arg: 1, scope: !3061, file: !3, line: 424, type: !61)
!3066 = !DILocalVariable(name: "region", scope: !3061, file: !3, line: 426, type: !2750)
!3067 = !DILocation(line: 0, scope: !3061)
!3068 = !DILocation(line: 429, column: 18, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3061, file: !3, line: 429, column: 9)
!3070 = !DILocation(line: 429, column: 28, scope: !3069)
!3071 = !DILocation(line: 429, column: 9, scope: !3061)
!3072 = !DILocation(line: 435, column: 20, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !3074, file: !3, line: 435, column: 13)
!3074 = distinct !DILexicalBlock(scope: !3075, file: !3, line: 433, column: 81)
!3075 = distinct !DILexicalBlock(scope: !3076, file: !3, line: 433, column: 5)
!3076 = distinct !DILexicalBlock(scope: !3061, file: !3, line: 433, column: 5)
!3077 = !DILocation(line: 435, column: 41, scope: !3073)
!3078 = !DILocation(line: 435, column: 36, scope: !3073)
!3079 = !DILocation(line: 435, column: 13, scope: !3074)
!3080 = !DILocation(line: 436, column: 30, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3082, file: !3, line: 436, column: 17)
!3082 = distinct !DILexicalBlock(scope: !3073, file: !3, line: 435, column: 53)
!3083 = !DILocation(line: 436, column: 59, scope: !3081)
!3084 = !DILocation(line: 436, column: 26, scope: !3081)
!3085 = !DILocation(line: 436, column: 85, scope: !3081)
!3086 = !DILocation(line: 436, column: 99, scope: !3081)
!3087 = !DILocation(line: 436, column: 97, scope: !3081)
!3088 = !DILocation(line: 436, column: 17, scope: !3082)
!3089 = !DILocation(line: 433, column: 77, scope: !3075)
!3090 = !DILocation(line: 433, column: 46, scope: !3075)
!3091 = !DILocation(line: 433, column: 5, scope: !3076)
!3092 = distinct !{!3092, !3091, !3093}
!3093 = !DILocation(line: 440, column: 5, scope: !3076)
!3094 = !DILocation(line: 442, column: 1, scope: !3061)
!3095 = distinct !DISubprogram(name: "hal_gpt_init", scope: !2655, file: !2655, line: 95, type: !3096, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3100)
!3096 = !DISubroutineType(types: !3097)
!3097 = !{!3098, !3099}
!3098 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !255, line: 393, baseType: !2057)
!3099 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !98, line: 854, baseType: !245)
!3100 = !{!3101}
!3101 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3095, file: !2655, line: 95, type: !3099)
!3102 = !DILocation(line: 0, scope: !3095)
!3103 = !DILocation(line: 98, column: 9, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3095, file: !2655, line: 98, column: 9)
!3105 = !DILocation(line: 98, column: 9, scope: !3095)
!3106 = !DILocation(line: 102, column: 10, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3095, file: !2655, line: 102, column: 9)
!3108 = !DILocation(line: 102, column: 34, scope: !3107)
!3109 = !DILocation(line: 102, column: 49, scope: !3107)
!3110 = !DILocation(line: 102, column: 69, scope: !3107)
!3111 = !DILocation(line: 103, column: 38, scope: !3107)
!3112 = !DILocation(line: 102, column: 9, scope: !3095)
!3113 = !DILocation(line: 109, column: 12, scope: !3095)
!3114 = !DILocation(line: 109, column: 5, scope: !3095)
!3115 = !DILocation(line: 112, column: 5, scope: !3095)
!3116 = !DILocation(line: 115, column: 44, scope: !3095)
!3117 = !DILocation(line: 118, column: 5, scope: !3095)
!3118 = !DILocation(line: 118, column: 23, scope: !3095)
!3119 = !DILocation(line: 118, column: 35, scope: !3095)
!3120 = !DILocation(line: 121, column: 42, scope: !3095)
!3121 = !DILocation(line: 121, column: 38, scope: !3095)
!3122 = !DILocation(line: 121, column: 5, scope: !3095)
!3123 = !DILocation(line: 121, column: 17, scope: !3095)
!3124 = !DILocation(line: 121, column: 35, scope: !3095)
!3125 = !DILocation(line: 129, column: 5, scope: !3095)
!3126 = !DILocation(line: 131, column: 1, scope: !3095)
!3127 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !2655, file: !2655, line: 81, type: !3128, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3130)
!3128 = !DISubroutineType(types: !3129)
!3129 = !{!91, !3099}
!3130 = !{!3131}
!3131 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3127, file: !2655, line: 81, type: !3099)
!3132 = !DILocation(line: 0, scope: !3127)
!3133 = !DILocation(line: 84, column: 25, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3127, file: !2655, line: 84, column: 9)
!3135 = !DILocation(line: 84, column: 35, scope: !3134)
!3136 = !DILocation(line: 84, column: 45, scope: !3134)
!3137 = !DILocation(line: 93, column: 1, scope: !3127)
!3138 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !2655, file: !2655, line: 133, type: !3096, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3139)
!3139 = !{!3140}
!3140 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3138, file: !2655, line: 133, type: !3099)
!3141 = !DILocation(line: 0, scope: !3138)
!3142 = !DILocation(line: 136, column: 9, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !3138, file: !2655, line: 136, column: 9)
!3144 = !DILocation(line: 136, column: 9, scope: !3138)
!3145 = !DILocation(line: 140, column: 9, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3138, file: !2655, line: 140, column: 9)
!3147 = !DILocation(line: 140, column: 33, scope: !3146)
!3148 = !DILocation(line: 140, column: 48, scope: !3146)
!3149 = !DILocation(line: 140, column: 9, scope: !3138)
!3150 = !DILocation(line: 146, column: 12, scope: !3138)
!3151 = !DILocation(line: 146, column: 5, scope: !3138)
!3152 = !DILocation(line: 149, column: 29, scope: !3138)
!3153 = !DILocation(line: 149, column: 44, scope: !3138)
!3154 = !DILocation(line: 151, column: 29, scope: !3138)
!3155 = !DILocation(line: 151, column: 5, scope: !3138)
!3156 = !DILocation(line: 159, column: 5, scope: !3138)
!3157 = !DILocation(line: 160, column: 1, scope: !3138)
!3158 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !2655, file: !2655, line: 163, type: !3159, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3162)
!3159 = !DISubroutineType(types: !3160)
!3160 = !{!3098, !3161, !1154}
!3161 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !98, line: 860, baseType: !2657)
!3162 = !{!3163, !3164}
!3163 = !DILocalVariable(name: "clock_source", arg: 1, scope: !3158, file: !2655, line: 163, type: !3161)
!3164 = !DILocalVariable(name: "count", arg: 2, scope: !3158, file: !2655, line: 163, type: !1154)
!3165 = !DILocation(line: 0, scope: !3158)
!3166 = !DILocation(line: 166, column: 9, scope: !3158)
!3167 = !DILocation(line: 167, column: 44, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3169, file: !2655, line: 167, column: 13)
!3169 = distinct !DILexicalBlock(scope: !3170, file: !2655, line: 166, column: 51)
!3170 = distinct !DILexicalBlock(scope: !3158, file: !2655, line: 166, column: 9)
!3171 = !DILocation(line: 167, column: 59, scope: !3168)
!3172 = !DILocation(line: 167, column: 13, scope: !3169)
!3173 = !DILocation(line: 170, column: 38, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3168, file: !2655, line: 167, column: 79)
!3175 = !DILocation(line: 170, column: 13, scope: !3174)
!3176 = !DILocation(line: 172, column: 59, scope: !3174)
!3177 = !DILocation(line: 173, column: 9, scope: !3174)
!3178 = !DILocation(line: 175, column: 36, scope: !3169)
!3179 = !DILocation(line: 175, column: 18, scope: !3169)
!3180 = !DILocation(line: 177, column: 5, scope: !3169)
!3181 = !DILocation(line: 179, column: 44, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3183, file: !2655, line: 179, column: 13)
!3183 = distinct !DILexicalBlock(scope: !3184, file: !2655, line: 178, column: 55)
!3184 = distinct !DILexicalBlock(scope: !3170, file: !2655, line: 178, column: 14)
!3185 = !DILocation(line: 179, column: 59, scope: !3182)
!3186 = !DILocation(line: 179, column: 13, scope: !3183)
!3187 = !DILocation(line: 182, column: 38, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3182, file: !2655, line: 179, column: 79)
!3189 = !DILocation(line: 182, column: 13, scope: !3188)
!3190 = !DILocation(line: 184, column: 59, scope: !3188)
!3191 = !DILocation(line: 186, column: 9, scope: !3188)
!3192 = !DILocation(line: 188, column: 68, scope: !3183)
!3193 = !DILocation(line: 188, column: 50, scope: !3183)
!3194 = !DILocation(line: 188, column: 18, scope: !3183)
!3195 = !DILocation(line: 0, scope: !3170)
!3196 = !DILocation(line: 193, column: 5, scope: !3158)
!3197 = !DILocation(line: 194, column: 1, scope: !3158)
!3198 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !2655, file: !2655, line: 196, type: !3199, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3201)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{!3098, !61, !61, !1154}
!3201 = !{!3202, !3203, !3204}
!3202 = !DILocalVariable(name: "start_count", arg: 1, scope: !3198, file: !2655, line: 196, type: !61)
!3203 = !DILocalVariable(name: "end_count", arg: 2, scope: !3198, file: !2655, line: 196, type: !61)
!3204 = !DILocalVariable(name: "duration_count", arg: 3, scope: !3198, file: !2655, line: 196, type: !1154)
!3205 = !DILocation(line: 0, scope: !3198)
!3206 = !DILocation(line: 198, column: 24, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3198, file: !2655, line: 198, column: 9)
!3208 = !DILocation(line: 198, column: 9, scope: !3198)
!3209 = !DILocation(line: 0, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3198, file: !2655, line: 202, column: 9)
!3211 = !DILocation(line: 208, column: 5, scope: !3198)
!3212 = !DILocation(line: 209, column: 1, scope: !3198)
!3213 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !2655, file: !2655, line: 211, type: !3214, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3217)
!3214 = !DISubroutineType(types: !3215)
!3215 = !{!3098, !3099, !3216}
!3216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!3217 = !{!3218, !3219}
!3218 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3213, file: !2655, line: 211, type: !3099)
!3219 = !DILocalVariable(name: "running_status", arg: 2, scope: !3213, file: !2655, line: 211, type: !3216)
!3220 = !DILocation(line: 0, scope: !3213)
!3221 = !DILocation(line: 213, column: 18, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3213, file: !2655, line: 213, column: 9)
!3223 = !DILocation(line: 213, column: 9, scope: !3213)
!3224 = !DILocation(line: 217, column: 47, scope: !3213)
!3225 = !DILocation(line: 217, column: 21, scope: !3213)
!3226 = !DILocation(line: 219, column: 5, scope: !3213)
!3227 = !DILocation(line: 220, column: 1, scope: !3213)
!3228 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !2655, file: !2655, line: 222, type: !3229, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3231)
!3229 = !DISubroutineType(types: !3230)
!3230 = !{!3098, !3099, !307, !88}
!3231 = !{!3232, !3233, !3234}
!3232 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3228, file: !2655, line: 222, type: !3099)
!3233 = !DILocalVariable(name: "callback", arg: 2, scope: !3228, file: !2655, line: 223, type: !307)
!3234 = !DILocalVariable(name: "user_data", arg: 3, scope: !3228, file: !2655, line: 224, type: !88)
!3235 = !DILocation(line: 0, scope: !3228)
!3236 = !DILocation(line: 227, column: 9, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3228, file: !2655, line: 227, column: 9)
!3238 = !DILocation(line: 227, column: 9, scope: !3228)
!3239 = !DILocation(line: 231, column: 34, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3228, file: !2655, line: 231, column: 9)
!3241 = !DILocation(line: 231, column: 49, scope: !3240)
!3242 = !DILocation(line: 231, column: 69, scope: !3240)
!3243 = !DILocation(line: 232, column: 38, scope: !3240)
!3244 = !DILocation(line: 232, column: 53, scope: !3240)
!3245 = !DILocation(line: 231, column: 9, scope: !3228)
!3246 = !DILocation(line: 237, column: 18, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3228, file: !2655, line: 237, column: 9)
!3248 = !DILocation(line: 237, column: 9, scope: !3228)
!3249 = !DILocation(line: 245, column: 46, scope: !3228)
!3250 = !DILocation(line: 245, column: 56, scope: !3228)
!3251 = !DILocation(line: 246, column: 46, scope: !3228)
!3252 = !DILocation(line: 246, column: 56, scope: !3228)
!3253 = !DILocation(line: 248, column: 5, scope: !3228)
!3254 = !DILocation(line: 250, column: 5, scope: !3228)
!3255 = !DILocation(line: 252, column: 1, scope: !3228)
!3256 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !2655, file: !2655, line: 256, type: !3257, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3260)
!3257 = !DISubroutineType(types: !3258)
!3258 = !{!3098, !3099, !61, !3259}
!3259 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !255, line: 383, baseType: !254)
!3260 = !{!3261, !3262, !3263, !3264}
!3261 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3256, file: !2655, line: 256, type: !3099)
!3262 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3256, file: !2655, line: 256, type: !61)
!3263 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3256, file: !2655, line: 256, type: !3259)
!3264 = !DILocalVariable(name: "mask", scope: !3256, file: !2655, line: 259, type: !60)
!3265 = !DILocation(line: 0, scope: !3256)
!3266 = !DILocation(line: 259, column: 5, scope: !3256)
!3267 = !DILocation(line: 259, column: 23, scope: !3256)
!3268 = !DILocation(line: 261, column: 9, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3256, file: !2655, line: 261, column: 9)
!3270 = !DILocation(line: 261, column: 9, scope: !3256)
!3271 = !DILocation(line: 265, column: 34, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3256, file: !2655, line: 265, column: 9)
!3273 = !DILocation(line: 265, column: 49, scope: !3272)
!3274 = !DILocation(line: 266, column: 13, scope: !3272)
!3275 = !DILocation(line: 266, column: 41, scope: !3272)
!3276 = !DILocation(line: 266, column: 56, scope: !3272)
!3277 = !DILocation(line: 265, column: 9, scope: !3256)
!3278 = !DILocation(line: 271, column: 25, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3256, file: !2655, line: 271, column: 9)
!3280 = !DILocation(line: 271, column: 9, scope: !3256)
!3281 = !DILocation(line: 282, column: 12, scope: !3256)
!3282 = !DILocation(line: 282, column: 10, scope: !3256)
!3283 = !DILocation(line: 284, column: 5, scope: !3256)
!3284 = !DILocation(line: 286, column: 5, scope: !3256)
!3285 = !DILocation(line: 286, column: 23, scope: !3256)
!3286 = !DILocation(line: 286, column: 34, scope: !3256)
!3287 = !DILocation(line: 287, column: 5, scope: !3256)
!3288 = !DILocation(line: 287, column: 23, scope: !3256)
!3289 = !DILocation(line: 287, column: 34, scope: !3256)
!3290 = !DILocation(line: 290, column: 5, scope: !3256)
!3291 = !DILocation(line: 290, column: 23, scope: !3256)
!3292 = !DILocation(line: 290, column: 37, scope: !3256)
!3293 = !DILocation(line: 291, column: 39, scope: !3256)
!3294 = !DILocation(line: 291, column: 5, scope: !3256)
!3295 = !DILocation(line: 291, column: 23, scope: !3256)
!3296 = !DILocation(line: 291, column: 37, scope: !3256)
!3297 = !DILocation(line: 292, column: 5, scope: !3256)
!3298 = !DILocation(line: 292, column: 23, scope: !3256)
!3299 = !DILocation(line: 292, column: 37, scope: !3256)
!3300 = !DILocation(line: 297, column: 47, scope: !3256)
!3301 = !DILocation(line: 298, column: 33, scope: !3256)
!3302 = !DILocation(line: 296, column: 5, scope: !3256)
!3303 = !DILocation(line: 296, column: 23, scope: !3256)
!3304 = !DILocation(line: 296, column: 31, scope: !3256)
!3305 = !DILocation(line: 300, column: 5, scope: !3256)
!3306 = !DILocation(line: 300, column: 29, scope: !3256)
!3307 = distinct !{!3307, !3305, !3308}
!3308 = !DILocation(line: 300, column: 39, scope: !3256)
!3309 = !DILocation(line: 301, column: 23, scope: !3256)
!3310 = !DILocation(line: 301, column: 33, scope: !3256)
!3311 = !DILocation(line: 302, column: 5, scope: !3256)
!3312 = !DILocation(line: 302, column: 23, scope: !3256)
!3313 = !DILocation(line: 302, column: 34, scope: !3256)
!3314 = !DILocation(line: 303, column: 44, scope: !3256)
!3315 = !DILocation(line: 305, column: 28, scope: !3256)
!3316 = !DILocation(line: 305, column: 5, scope: !3256)
!3317 = !DILocation(line: 306, column: 5, scope: !3256)
!3318 = !DILocation(line: 307, column: 1, scope: !3256)
!3319 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !2655, file: !2655, line: 310, type: !3320, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3322)
!3320 = !DISubroutineType(types: !3321)
!3321 = !{!3098, !61}
!3322 = !{!3323}
!3323 = !DILocalVariable(name: "ms", arg: 1, scope: !3319, file: !2655, line: 310, type: !61)
!3324 = !DILocation(line: 0, scope: !3319)
!3325 = !DILocation(line: 313, column: 40, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3319, file: !2655, line: 313, column: 9)
!3327 = !DILocation(line: 313, column: 55, scope: !3326)
!3328 = !DILocation(line: 313, column: 9, scope: !3319)
!3329 = !DILocation(line: 316, column: 34, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3326, file: !2655, line: 313, column: 75)
!3331 = !DILocation(line: 316, column: 9, scope: !3330)
!3332 = !DILocation(line: 317, column: 55, scope: !3330)
!3333 = !DILocation(line: 318, column: 5, scope: !3330)
!3334 = !DILocation(line: 320, column: 20, scope: !3319)
!3335 = !DILocation(line: 320, column: 45, scope: !3319)
!3336 = !DILocation(line: 320, column: 5, scope: !3319)
!3337 = !DILocation(line: 322, column: 5, scope: !3319)
!3338 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !2655, file: !2655, line: 327, type: !3257, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3339)
!3339 = !{!3340, !3341, !3342, !3343}
!3340 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3338, file: !2655, line: 327, type: !3099)
!3341 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !3338, file: !2655, line: 327, type: !61)
!3342 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3338, file: !2655, line: 327, type: !3259)
!3343 = !DILocalVariable(name: "mask", scope: !3338, file: !2655, line: 329, type: !60)
!3344 = !DILocation(line: 0, scope: !3338)
!3345 = !DILocation(line: 329, column: 5, scope: !3338)
!3346 = !DILocation(line: 329, column: 23, scope: !3338)
!3347 = !DILocation(line: 331, column: 9, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3338, file: !2655, line: 331, column: 9)
!3349 = !DILocation(line: 331, column: 9, scope: !3338)
!3350 = !DILocation(line: 336, column: 34, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3338, file: !2655, line: 336, column: 9)
!3352 = !DILocation(line: 336, column: 49, scope: !3351)
!3353 = !DILocation(line: 337, column: 13, scope: !3351)
!3354 = !DILocation(line: 337, column: 41, scope: !3351)
!3355 = !DILocation(line: 337, column: 56, scope: !3351)
!3356 = !DILocation(line: 336, column: 9, scope: !3338)
!3357 = !DILocation(line: 349, column: 29, scope: !3338)
!3358 = !DILocation(line: 349, column: 49, scope: !3338)
!3359 = !DILocation(line: 351, column: 12, scope: !3338)
!3360 = !DILocation(line: 351, column: 10, scope: !3338)
!3361 = !DILocation(line: 353, column: 5, scope: !3338)
!3362 = !DILocation(line: 355, column: 5, scope: !3338)
!3363 = !DILocation(line: 355, column: 23, scope: !3338)
!3364 = !DILocation(line: 355, column: 34, scope: !3338)
!3365 = !DILocation(line: 356, column: 5, scope: !3338)
!3366 = !DILocation(line: 356, column: 23, scope: !3338)
!3367 = !DILocation(line: 356, column: 34, scope: !3338)
!3368 = !DILocation(line: 359, column: 5, scope: !3338)
!3369 = !DILocation(line: 359, column: 23, scope: !3338)
!3370 = !DILocation(line: 359, column: 37, scope: !3338)
!3371 = !DILocation(line: 360, column: 39, scope: !3338)
!3372 = !DILocation(line: 360, column: 5, scope: !3338)
!3373 = !DILocation(line: 360, column: 23, scope: !3338)
!3374 = !DILocation(line: 360, column: 37, scope: !3338)
!3375 = !DILocation(line: 361, column: 5, scope: !3338)
!3376 = !DILocation(line: 361, column: 23, scope: !3338)
!3377 = !DILocation(line: 361, column: 37, scope: !3338)
!3378 = !DILocation(line: 366, column: 47, scope: !3338)
!3379 = !DILocation(line: 367, column: 33, scope: !3338)
!3380 = !DILocation(line: 365, column: 5, scope: !3338)
!3381 = !DILocation(line: 365, column: 23, scope: !3338)
!3382 = !DILocation(line: 365, column: 31, scope: !3338)
!3383 = !DILocation(line: 369, column: 5, scope: !3338)
!3384 = !DILocation(line: 369, column: 29, scope: !3338)
!3385 = distinct !{!3385, !3383, !3386}
!3386 = !DILocation(line: 369, column: 39, scope: !3338)
!3387 = !DILocation(line: 370, column: 23, scope: !3338)
!3388 = !DILocation(line: 370, column: 33, scope: !3338)
!3389 = !DILocation(line: 371, column: 5, scope: !3338)
!3390 = !DILocation(line: 371, column: 23, scope: !3338)
!3391 = !DILocation(line: 371, column: 34, scope: !3338)
!3392 = !DILocation(line: 373, column: 28, scope: !3338)
!3393 = !DILocation(line: 373, column: 5, scope: !3338)
!3394 = !DILocation(line: 375, column: 44, scope: !3338)
!3395 = !DILocation(line: 377, column: 5, scope: !3338)
!3396 = !DILocation(line: 378, column: 1, scope: !3338)
!3397 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !2655, file: !2655, line: 382, type: !3320, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3398)
!3398 = !{!3399}
!3399 = !DILocalVariable(name: "us", arg: 1, scope: !3397, file: !2655, line: 382, type: !61)
!3400 = !DILocation(line: 0, scope: !3397)
!3401 = !DILocation(line: 385, column: 40, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3397, file: !2655, line: 385, column: 9)
!3403 = !DILocation(line: 385, column: 55, scope: !3402)
!3404 = !DILocation(line: 385, column: 9, scope: !3397)
!3405 = !DILocation(line: 388, column: 34, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3402, file: !2655, line: 385, column: 75)
!3407 = !DILocation(line: 388, column: 9, scope: !3406)
!3408 = !DILocation(line: 390, column: 55, scope: !3406)
!3409 = !DILocation(line: 391, column: 5, scope: !3406)
!3410 = !DILocation(line: 392, column: 20, scope: !3397)
!3411 = !DILocation(line: 392, column: 45, scope: !3397)
!3412 = !DILocation(line: 392, column: 5, scope: !3397)
!3413 = !DILocation(line: 394, column: 5, scope: !3397)
!3414 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !2655, file: !2655, line: 398, type: !3096, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3415)
!3415 = !{!3416, !3417}
!3416 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3414, file: !2655, line: 398, type: !3099)
!3417 = !DILocalVariable(name: "mask", scope: !3414, file: !2655, line: 400, type: !60)
!3418 = !DILocation(line: 0, scope: !3414)
!3419 = !DILocation(line: 400, column: 5, scope: !3414)
!3420 = !DILocation(line: 400, column: 23, scope: !3414)
!3421 = !DILocation(line: 402, column: 9, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3414, file: !2655, line: 402, column: 9)
!3423 = !DILocation(line: 402, column: 9, scope: !3414)
!3424 = !DILocation(line: 413, column: 12, scope: !3414)
!3425 = !DILocation(line: 413, column: 10, scope: !3414)
!3426 = !DILocation(line: 415, column: 5, scope: !3414)
!3427 = !DILocation(line: 415, column: 23, scope: !3414)
!3428 = !DILocation(line: 415, column: 34, scope: !3414)
!3429 = !DILocation(line: 418, column: 5, scope: !3414)
!3430 = !DILocation(line: 418, column: 23, scope: !3414)
!3431 = !DILocation(line: 418, column: 34, scope: !3414)
!3432 = !DILocation(line: 420, column: 5, scope: !3414)
!3433 = !DILocation(line: 420, column: 23, scope: !3414)
!3434 = !DILocation(line: 420, column: 35, scope: !3414)
!3435 = !DILocation(line: 422, column: 29, scope: !3414)
!3436 = !DILocation(line: 422, column: 44, scope: !3414)
!3437 = !DILocation(line: 423, column: 28, scope: !3414)
!3438 = !DILocation(line: 423, column: 5, scope: !3414)
!3439 = !DILocation(line: 425, column: 33, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3414, file: !2655, line: 425, column: 9)
!3441 = !DILocation(line: 425, column: 9, scope: !3414)
!3442 = !DILocation(line: 427, column: 53, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3440, file: !2655, line: 425, column: 62)
!3444 = !DILocation(line: 428, column: 5, scope: !3443)
!3445 = !DILocation(line: 430, column: 1, scope: !3414)
!3446 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !2655, file: !2655, line: 434, type: !3447, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3449)
!3447 = !DISubroutineType(types: !3448)
!3448 = !{!3098, !1154}
!3449 = !{!3450, !3451, !3452}
!3450 = !DILocalVariable(name: "handle", arg: 1, scope: !3446, file: !2655, line: 434, type: !1154)
!3451 = !DILocalVariable(name: "timer", scope: !3446, file: !2655, line: 436, type: !61)
!3452 = !DILocalVariable(name: "mask", scope: !3446, file: !2655, line: 437, type: !61)
!3453 = !DILocation(line: 0, scope: !3446)
!3454 = !DILocation(line: 439, column: 24, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3446, file: !2655, line: 439, column: 9)
!3456 = !DILocation(line: 439, column: 41, scope: !3455)
!3457 = !DILocation(line: 439, column: 9, scope: !3446)
!3458 = !DILocation(line: 443, column: 16, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3446, file: !2655, line: 443, column: 9)
!3460 = !DILocation(line: 443, column: 9, scope: !3446)
!3461 = !DILocation(line: 448, column: 12, scope: !3446)
!3462 = !DILocation(line: 450, column: 15, scope: !3446)
!3463 = !DILocation(line: 451, column: 21, scope: !3446)
!3464 = !DILocation(line: 451, column: 13, scope: !3446)
!3465 = !DILocation(line: 452, column: 33, scope: !3446)
!3466 = !DILocation(line: 452, column: 41, scope: !3446)
!3467 = !DILocation(line: 453, column: 36, scope: !3446)
!3468 = !DILocation(line: 455, column: 5, scope: !3446)
!3469 = !DILocation(line: 456, column: 5, scope: !3446)
!3470 = !DILocation(line: 457, column: 1, scope: !3446)
!3471 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !2655, file: !2655, line: 459, type: !3320, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3472)
!3472 = !{!3473, !3474}
!3473 = !DILocalVariable(name: "handle", arg: 1, scope: !3471, file: !2655, line: 459, type: !61)
!3474 = !DILocalVariable(name: "timer", scope: !3471, file: !2655, line: 461, type: !60)
!3475 = !DILocation(line: 0, scope: !3471)
!3476 = !DILocation(line: 461, column: 5, scope: !3471)
!3477 = !DILocation(line: 461, column: 23, scope: !3471)
!3478 = !DILocation(line: 463, column: 17, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3471, file: !2655, line: 463, column: 9)
!3480 = !DILocation(line: 463, column: 37, scope: !3479)
!3481 = !DILocation(line: 463, column: 9, scope: !3471)
!3482 = !DILocation(line: 467, column: 20, scope: !3471)
!3483 = !DILocation(line: 467, column: 11, scope: !3471)
!3484 = !DILocation(line: 469, column: 24, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3471, file: !2655, line: 469, column: 9)
!3486 = !DILocation(line: 469, column: 41, scope: !3485)
!3487 = !DILocation(line: 469, column: 9, scope: !3471)
!3488 = !DILocation(line: 473, column: 30, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3471, file: !2655, line: 473, column: 9)
!3490 = !DILocation(line: 473, column: 37, scope: !3489)
!3491 = !DILocation(line: 473, column: 9, scope: !3471)
!3492 = !DILocation(line: 477, column: 30, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3471, file: !2655, line: 477, column: 9)
!3494 = !DILocation(line: 477, column: 37, scope: !3493)
!3495 = !DILocation(line: 477, column: 45, scope: !3493)
!3496 = !DILocation(line: 477, column: 9, scope: !3471)
!3497 = !DILocation(line: 481, column: 26, scope: !3471)
!3498 = !DILocation(line: 481, column: 33, scope: !3471)
!3499 = !DILocation(line: 481, column: 41, scope: !3471)
!3500 = !DILocation(line: 482, column: 36, scope: !3471)
!3501 = !DILocation(line: 484, column: 5, scope: !3471)
!3502 = !DILocation(line: 485, column: 1, scope: !3471)
!3503 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !2655, file: !2655, line: 487, type: !3504, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3506)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{!3098, !61, !61, !307, !88}
!3506 = !{!3507, !3508, !3509, !3510, !3511, !3512, !3513}
!3507 = !DILocalVariable(name: "handle", arg: 1, scope: !3503, file: !2655, line: 487, type: !61)
!3508 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3503, file: !2655, line: 487, type: !61)
!3509 = !DILocalVariable(name: "callback", arg: 3, scope: !3503, file: !2655, line: 487, type: !307)
!3510 = !DILocalVariable(name: "user_data", arg: 4, scope: !3503, file: !2655, line: 487, type: !88)
!3511 = !DILocalVariable(name: "current_time", scope: !3503, file: !2655, line: 489, type: !61)
!3512 = !DILocalVariable(name: "mask", scope: !3503, file: !2655, line: 490, type: !61)
!3513 = !DILocalVariable(name: "timer", scope: !3503, file: !2655, line: 491, type: !61)
!3514 = !DILocation(line: 0, scope: !3503)
!3515 = !DILocation(line: 493, column: 17, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3503, file: !2655, line: 493, column: 9)
!3517 = !DILocation(line: 493, column: 37, scope: !3516)
!3518 = !DILocation(line: 493, column: 9, scope: !3503)
!3519 = !DILocation(line: 497, column: 20, scope: !3503)
!3520 = !DILocation(line: 503, column: 37, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3503, file: !2655, line: 503, column: 9)
!3522 = !DILocation(line: 503, column: 9, scope: !3503)
!3523 = !DILocation(line: 507, column: 37, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3503, file: !2655, line: 507, column: 9)
!3525 = !DILocation(line: 507, column: 45, scope: !3524)
!3526 = !DILocation(line: 507, column: 9, scope: !3503)
!3527 = !DILocation(line: 511, column: 25, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3503, file: !2655, line: 511, column: 9)
!3529 = !DILocation(line: 511, column: 9, scope: !3503)
!3530 = !DILocation(line: 516, column: 12, scope: !3503)
!3531 = !DILocation(line: 519, column: 30, scope: !3503)
!3532 = !DILocation(line: 521, column: 24, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3503, file: !2655, line: 521, column: 9)
!3534 = !DILocation(line: 521, column: 38, scope: !3533)
!3535 = !DILocation(line: 521, column: 9, scope: !3503)
!3536 = !DILocation(line: 522, column: 9, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3533, file: !2655, line: 521, column: 48)
!3538 = !DILocation(line: 523, column: 9, scope: !3537)
!3539 = !DILocation(line: 524, column: 38, scope: !3537)
!3540 = !DILocation(line: 525, column: 5, scope: !3537)
!3541 = !DILocation(line: 526, column: 5, scope: !3503)
!3542 = !DILocation(line: 528, column: 23, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3503, file: !2655, line: 528, column: 8)
!3544 = !DILocation(line: 528, column: 41, scope: !3543)
!3545 = !DILocation(line: 528, column: 8, scope: !3503)
!3546 = !DILocation(line: 529, column: 51, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3543, file: !2655, line: 528, column: 51)
!3548 = !DILocation(line: 529, column: 24, scope: !3547)
!3549 = !DILocation(line: 530, column: 5, scope: !3547)
!3550 = !DILocation(line: 0, scope: !3543)
!3551 = !DILocation(line: 534, column: 34, scope: !3503)
!3552 = !DILocation(line: 535, column: 39, scope: !3503)
!3553 = !DILocation(line: 537, column: 49, scope: !3503)
!3554 = !DILocation(line: 538, column: 80, scope: !3503)
!3555 = !DILocation(line: 538, column: 33, scope: !3503)
!3556 = !DILocation(line: 538, column: 49, scope: !3503)
!3557 = !DILocation(line: 539, column: 50, scope: !3503)
!3558 = !DILocation(line: 539, column: 61, scope: !3503)
!3559 = !DILocation(line: 540, column: 50, scope: !3503)
!3560 = !DILocation(line: 540, column: 61, scope: !3503)
!3561 = !DILocation(line: 542, column: 5, scope: !3503)
!3562 = !DILocation(line: 546, column: 30, scope: !3503)
!3563 = !DILocation(line: 548, column: 5, scope: !3503)
!3564 = !DILocation(line: 550, column: 5, scope: !3503)
!3565 = !DILocation(line: 551, column: 1, scope: !3503)
!3566 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !2655, file: !2655, line: 553, type: !3320, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3567)
!3567 = !{!3568, !3569, !3570, !3571}
!3568 = !DILocalVariable(name: "handle", arg: 1, scope: !3566, file: !2655, line: 553, type: !61)
!3569 = !DILocalVariable(name: "current_time", scope: !3566, file: !2655, line: 555, type: !61)
!3570 = !DILocalVariable(name: "mask", scope: !3566, file: !2655, line: 556, type: !61)
!3571 = !DILocalVariable(name: "timer", scope: !3566, file: !2655, line: 557, type: !61)
!3572 = !DILocation(line: 0, scope: !3566)
!3573 = !DILocation(line: 559, column: 17, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3566, file: !2655, line: 559, column: 9)
!3575 = !DILocation(line: 559, column: 37, scope: !3574)
!3576 = !DILocation(line: 559, column: 9, scope: !3566)
!3577 = !DILocation(line: 563, column: 20, scope: !3566)
!3578 = !DILocation(line: 565, column: 37, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3566, file: !2655, line: 565, column: 9)
!3580 = !DILocation(line: 565, column: 48, scope: !3579)
!3581 = !DILocation(line: 565, column: 9, scope: !3566)
!3582 = !DILocation(line: 569, column: 37, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3566, file: !2655, line: 569, column: 9)
!3584 = !DILocation(line: 569, column: 45, scope: !3583)
!3585 = !DILocation(line: 569, column: 9, scope: !3566)
!3586 = !DILocation(line: 574, column: 12, scope: !3566)
!3587 = !DILocation(line: 577, column: 30, scope: !3566)
!3588 = !DILocation(line: 578, column: 5, scope: !3566)
!3589 = !DILocation(line: 579, column: 30, scope: !3566)
!3590 = !DILocation(line: 581, column: 23, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3566, file: !2655, line: 581, column: 8)
!3592 = !DILocation(line: 581, column: 41, scope: !3591)
!3593 = !DILocation(line: 581, column: 8, scope: !3566)
!3594 = !DILocation(line: 582, column: 51, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3591, file: !2655, line: 581, column: 51)
!3596 = !DILocation(line: 582, column: 24, scope: !3595)
!3597 = !DILocation(line: 583, column: 5, scope: !3595)
!3598 = !DILocation(line: 0, scope: !3591)
!3599 = !DILocation(line: 587, column: 34, scope: !3566)
!3600 = !DILocation(line: 588, column: 39, scope: !3566)
!3601 = !DILocation(line: 590, column: 44, scope: !3566)
!3602 = !DILocation(line: 592, column: 24, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3566, file: !2655, line: 592, column: 9)
!3604 = !DILocation(line: 592, column: 44, scope: !3603)
!3605 = !DILocation(line: 592, column: 9, scope: !3566)
!3606 = !DILocation(line: 593, column: 9, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3603, file: !2655, line: 592, column: 50)
!3608 = !DILocation(line: 594, column: 5, scope: !3607)
!3609 = !DILocation(line: 598, column: 30, scope: !3566)
!3610 = !DILocation(line: 599, column: 5, scope: !3566)
!3611 = !DILocation(line: 601, column: 5, scope: !3566)
!3612 = !DILocation(line: 603, column: 1, scope: !3566)
!3613 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !2655, file: !2655, line: 605, type: !3614, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !3616)
!3614 = !DISubroutineType(types: !3615)
!3615 = !{!3098, !61, !1154}
!3616 = !{!3617, !3618, !3619, !3620, !3621}
!3617 = !DILocalVariable(name: "handle", arg: 1, scope: !3613, file: !2655, line: 605, type: !61)
!3618 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !3613, file: !2655, line: 605, type: !1154)
!3619 = !DILocalVariable(name: "current_time", scope: !3613, file: !2655, line: 607, type: !61)
!3620 = !DILocalVariable(name: "mask", scope: !3613, file: !2655, line: 608, type: !61)
!3621 = !DILocalVariable(name: "timer", scope: !3613, file: !2655, line: 609, type: !61)
!3622 = !DILocation(line: 0, scope: !3613)
!3623 = !DILocation(line: 611, column: 17, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3613, file: !2655, line: 611, column: 9)
!3625 = !DILocation(line: 611, column: 37, scope: !3624)
!3626 = !DILocation(line: 611, column: 9, scope: !3613)
!3627 = !DILocation(line: 615, column: 20, scope: !3613)
!3628 = !DILocation(line: 617, column: 37, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3613, file: !2655, line: 617, column: 9)
!3630 = !DILocation(line: 617, column: 45, scope: !3629)
!3631 = !DILocation(line: 617, column: 9, scope: !3613)
!3632 = !DILocation(line: 622, column: 12, scope: !3613)
!3633 = !DILocation(line: 624, column: 35, scope: !3613)
!3634 = !DILocation(line: 624, column: 51, scope: !3613)
!3635 = !DILocation(line: 624, column: 76, scope: !3613)
!3636 = !DILocation(line: 624, column: 49, scope: !3613)
!3637 = !DILocation(line: 626, column: 37, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3613, file: !2655, line: 626, column: 9)
!3639 = !DILocation(line: 626, column: 9, scope: !3613)
!3640 = !DILocation(line: 0, scope: !3638)
!3641 = !DILocation(line: 632, column: 5, scope: !3613)
!3642 = !DILocation(line: 634, column: 5, scope: !3613)
!3643 = !DILocation(line: 636, column: 1, scope: !3613)
!3644 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !95, file: !95, line: 56, type: !3645, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3647)
!3645 = !DISubroutineType(types: !3646)
!3646 = !{!61, !61, !61, !61}
!3647 = !{!3648, !3649, !3650, !3651, !3653, !3654}
!3648 = !DILocalVariable(name: "mul1", arg: 1, scope: !3644, file: !95, line: 56, type: !61)
!3649 = !DILocalVariable(name: "mul2", arg: 2, scope: !3644, file: !95, line: 56, type: !61)
!3650 = !DILocalVariable(name: "div", arg: 3, scope: !3644, file: !95, line: 56, type: !61)
!3651 = !DILocalVariable(name: "data1", scope: !3644, file: !95, line: 58, type: !3652)
!3652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 64, elements: !465)
!3653 = !DILocalVariable(name: "data2", scope: !3644, file: !95, line: 59, type: !3652)
!3654 = !DILocalVariable(name: "result", scope: !3644, file: !95, line: 60, type: !3652)
!3655 = !DILocation(line: 0, scope: !3644)
!3656 = !DILocation(line: 63, column: 22, scope: !3644)
!3657 = !DILocation(line: 63, column: 32, scope: !3644)
!3658 = !DILocation(line: 64, column: 23, scope: !3644)
!3659 = !DILocation(line: 64, column: 40, scope: !3644)
!3660 = !DILocation(line: 66, column: 27, scope: !3644)
!3661 = !DILocation(line: 67, column: 27, scope: !3644)
!3662 = !DILocation(line: 67, column: 44, scope: !3644)
!3663 = !DILocation(line: 69, column: 26, scope: !3644)
!3664 = !DILocation(line: 70, column: 36, scope: !3644)
!3665 = !DILocation(line: 70, column: 43, scope: !3644)
!3666 = !DILocation(line: 70, column: 55, scope: !3644)
!3667 = !DILocation(line: 72, column: 34, scope: !3644)
!3668 = !DILocation(line: 72, column: 41, scope: !3644)
!3669 = !DILocation(line: 72, column: 5, scope: !3644)
!3670 = distinct !DISubprogram(name: "gpt_current_count", scope: !95, file: !95, line: 75, type: !3671, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3673)
!3671 = !DISubroutineType(types: !3672)
!3672 = !{!61, !264}
!3673 = !{!3674}
!3674 = !DILocalVariable(name: "gpt", arg: 1, scope: !3670, file: !95, line: 75, type: !264)
!3675 = !DILocation(line: 0, scope: !3670)
!3676 = !DILocation(line: 77, column: 17, scope: !3670)
!3677 = !DILocation(line: 77, column: 5, scope: !3670)
!3678 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !95, file: !95, line: 81, type: !3679, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3681)
!3679 = !DISubroutineType(types: !3680)
!3680 = !{!61, !61}
!3681 = !{!3682}
!3682 = !DILocalVariable(name: "ms", arg: 1, scope: !3678, file: !95, line: 81, type: !61)
!3683 = !DILocation(line: 0, scope: !3678)
!3684 = !DILocation(line: 83, column: 27, scope: !3678)
!3685 = !DILocation(line: 83, column: 37, scope: !3678)
!3686 = !DILocation(line: 83, column: 43, scope: !3678)
!3687 = !DILocation(line: 83, column: 32, scope: !3678)
!3688 = !DILocation(line: 83, column: 53, scope: !3678)
!3689 = !DILocation(line: 83, column: 59, scope: !3678)
!3690 = !DILocation(line: 83, column: 48, scope: !3678)
!3691 = !DILocation(line: 83, column: 70, scope: !3678)
!3692 = !DILocation(line: 83, column: 76, scope: !3678)
!3693 = !DILocation(line: 83, column: 65, scope: !3678)
!3694 = !DILocation(line: 83, column: 5, scope: !3678)
!3695 = !DILocation(line: 90, column: 9, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !290, file: !95, line: 90, column: 9)
!3697 = !DILocation(line: 90, column: 9, scope: !290)
!3698 = !DILocation(line: 91, column: 13, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !95, line: 91, column: 13)
!3700 = distinct !DILexicalBlock(scope: !3696, file: !95, line: 90, column: 24)
!3701 = !DILocation(line: 91, column: 13, scope: !3700)
!3702 = !DILocation(line: 92, column: 32, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3699, file: !95, line: 91, column: 41)
!3704 = !DILocation(line: 92, column: 30, scope: !3703)
!3705 = !DILocation(line: 93, column: 41, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3703, file: !95, line: 93, column: 17)
!3707 = !DILocation(line: 0, scope: !3699)
!3708 = !DILocation(line: 105, column: 1, scope: !290)
!3709 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !95, file: !95, line: 107, type: !291, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3710 = !DILocation(line: 109, column: 9, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3709, file: !95, line: 109, column: 9)
!3712 = !DILocation(line: 109, column: 9, scope: !3709)
!3713 = !DILocation(line: 110, column: 9, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3711, file: !95, line: 109, column: 61)
!3715 = !DILocation(line: 111, column: 5, scope: !3714)
!3716 = !DILocation(line: 112, column: 1, scope: !3709)
!3717 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !95, file: !95, line: 114, type: !3679, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3718)
!3718 = !{!3719}
!3719 = !DILocalVariable(name: "time_us", arg: 1, scope: !3717, file: !95, line: 114, type: !61)
!3720 = !DILocation(line: 0, scope: !3717)
!3721 = !DILocation(line: 116, column: 5, scope: !3717)
!3722 = !DILocation(line: 118, column: 9, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3717, file: !95, line: 118, column: 9)
!3724 = !DILocation(line: 118, column: 9, scope: !3717)
!3725 = !DILocation(line: 120, column: 49, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3723, file: !95, line: 118, column: 37)
!3727 = !DILocation(line: 120, column: 16, scope: !3726)
!3728 = !DILocation(line: 120, column: 9, scope: !3726)
!3729 = !DILocation(line: 0, scope: !3723)
!3730 = !DILocation(line: 125, column: 1, scope: !3717)
!3731 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !95, file: !95, line: 127, type: !3679, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3732)
!3732 = !{!3733}
!3733 = !DILocalVariable(name: "count", arg: 1, scope: !3731, file: !95, line: 127, type: !61)
!3734 = !DILocation(line: 0, scope: !3731)
!3735 = !DILocation(line: 129, column: 5, scope: !3731)
!3736 = !DILocation(line: 131, column: 9, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3731, file: !95, line: 131, column: 9)
!3738 = !DILocation(line: 131, column: 9, scope: !3731)
!3739 = !DILocation(line: 133, column: 69, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3737, file: !95, line: 131, column: 37)
!3741 = !DILocation(line: 133, column: 16, scope: !3740)
!3742 = !DILocation(line: 133, column: 9, scope: !3740)
!3743 = !DILocation(line: 0, scope: !3737)
!3744 = !DILocation(line: 138, column: 1, scope: !3731)
!3745 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !95, file: !95, line: 141, type: !3746, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3748)
!3746 = !DISubroutineType(types: !3747)
!3747 = !{null, !264, !61, !61}
!3748 = !{!3749, !3750, !3751}
!3749 = !DILocalVariable(name: "gpt", arg: 1, scope: !3745, file: !95, line: 141, type: !264)
!3750 = !DILocalVariable(name: "clock_source", arg: 2, scope: !3745, file: !95, line: 141, type: !61)
!3751 = !DILocalVariable(name: "divide", arg: 3, scope: !3745, file: !95, line: 141, type: !61)
!3752 = !DILocation(line: 0, scope: !3745)
!3753 = !DILocation(line: 143, column: 5, scope: !3745)
!3754 = !DILocation(line: 145, column: 33, scope: !3745)
!3755 = !DILocation(line: 145, column: 10, scope: !3745)
!3756 = !DILocation(line: 145, column: 18, scope: !3745)
!3757 = !DILocation(line: 148, column: 10, scope: !3745)
!3758 = !DILocation(line: 148, column: 18, scope: !3745)
!3759 = !DILocation(line: 149, column: 1, scope: !3745)
!3760 = distinct !DISubprogram(name: "gpt_delay_time", scope: !95, file: !95, line: 151, type: !3761, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3763)
!3761 = !DISubroutineType(types: !3762)
!3762 = !{null, !264, !772}
!3763 = !{!3764, !3765, !3766, !3767}
!3764 = !DILocalVariable(name: "gpt", arg: 1, scope: !3760, file: !95, line: 151, type: !264)
!3765 = !DILocalVariable(name: "count", arg: 2, scope: !3760, file: !95, line: 151, type: !772)
!3766 = !DILocalVariable(name: "end_count", scope: !3760, file: !95, line: 153, type: !61)
!3767 = !DILocalVariable(name: "current", scope: !3760, file: !95, line: 153, type: !61)
!3768 = !DILocation(line: 0, scope: !3760)
!3769 = !DILocation(line: 155, column: 17, scope: !3760)
!3770 = !DILocation(line: 156, column: 25, scope: !3760)
!3771 = !DILocation(line: 156, column: 33, scope: !3760)
!3772 = !DILocation(line: 159, column: 19, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3760, file: !95, line: 159, column: 9)
!3774 = !DILocation(line: 159, column: 9, scope: !3760)
!3775 = !DILocation(line: 160, column: 16, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3773, file: !95, line: 159, column: 30)
!3777 = !DILocation(line: 160, column: 39, scope: !3776)
!3778 = !DILocation(line: 160, column: 9, scope: !3776)
!3779 = distinct !{!3779, !3778, !3780}
!3780 = !DILocation(line: 160, column: 51, scope: !3776)
!3781 = !DILocation(line: 162, column: 16, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3773, file: !95, line: 161, column: 12)
!3783 = !DILocation(line: 162, column: 39, scope: !3782)
!3784 = !DILocation(line: 162, column: 9, scope: !3782)
!3785 = distinct !{!3785, !3784, !3786}
!3786 = !DILocation(line: 162, column: 50, scope: !3782)
!3787 = !DILocation(line: 163, column: 16, scope: !3782)
!3788 = !DILocation(line: 163, column: 39, scope: !3782)
!3789 = !DILocation(line: 163, column: 9, scope: !3782)
!3790 = distinct !{!3790, !3789, !3791}
!3791 = !DILocation(line: 163, column: 51, scope: !3782)
!3792 = !DILocation(line: 165, column: 1, scope: !3760)
!3793 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !95, file: !95, line: 166, type: !3794, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3796)
!3794 = !DISubroutineType(types: !3795)
!3795 = !{null, !264}
!3796 = !{!3797}
!3797 = !DILocalVariable(name: "gpt", arg: 1, scope: !3793, file: !95, line: 166, type: !264)
!3798 = !DILocation(line: 0, scope: !3793)
!3799 = !DILocation(line: 168, column: 10, scope: !3793)
!3800 = !DILocation(line: 168, column: 22, scope: !3793)
!3801 = !DILocation(line: 169, column: 10, scope: !3793)
!3802 = !DILocation(line: 169, column: 22, scope: !3793)
!3803 = !DILocation(line: 170, column: 21, scope: !3793)
!3804 = !DILocation(line: 171, column: 5, scope: !3793)
!3805 = !DILocation(line: 171, column: 16, scope: !3793)
!3806 = distinct !{!3806, !3804, !3807}
!3807 = !DILocation(line: 171, column: 26, scope: !3793)
!3808 = !DILocation(line: 172, column: 10, scope: !3793)
!3809 = !DILocation(line: 172, column: 22, scope: !3793)
!3810 = !DILocation(line: 173, column: 10, scope: !3793)
!3811 = !DILocation(line: 173, column: 22, scope: !3793)
!3812 = !DILocation(line: 174, column: 10, scope: !3793)
!3813 = !DILocation(line: 174, column: 22, scope: !3793)
!3814 = !DILocation(line: 176, column: 13, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3793, file: !95, line: 176, column: 9)
!3816 = !DILocation(line: 176, column: 9, scope: !3793)
!3817 = !DILocation(line: 177, column: 27, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3815, file: !95, line: 176, column: 22)
!3819 = !DILocation(line: 178, column: 5, scope: !3818)
!3820 = !DILocation(line: 179, column: 1, scope: !3793)
!3821 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !95, file: !95, line: 181, type: !3671, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3822)
!3822 = !{!3823, !3824}
!3823 = !DILocalVariable(name: "gpt", arg: 1, scope: !3821, file: !95, line: 181, type: !264)
!3824 = !DILocalVariable(name: "mask", scope: !3821, file: !95, line: 183, type: !60)
!3825 = !DILocation(line: 0, scope: !3821)
!3826 = !DILocation(line: 183, column: 5, scope: !3821)
!3827 = !DILocation(line: 183, column: 23, scope: !3821)
!3828 = !DILocation(line: 185, column: 17, scope: !3821)
!3829 = !DILocation(line: 185, column: 10, scope: !3821)
!3830 = !DILocation(line: 187, column: 22, scope: !3821)
!3831 = !DILocation(line: 189, column: 12, scope: !3821)
!3832 = !DILocation(line: 190, column: 1, scope: !3821)
!3833 = !DILocation(line: 189, column: 5, scope: !3821)
!3834 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !95, file: !95, line: 192, type: !3835, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3837)
!3835 = !DISubroutineType(types: !3836)
!3836 = !{null, !264, !61}
!3837 = !{!3838, !3839}
!3838 = !DILocalVariable(name: "gpt", arg: 1, scope: !3834, file: !95, line: 192, type: !264)
!3839 = !DILocalVariable(name: "mask", arg: 2, scope: !3834, file: !95, line: 192, type: !61)
!3840 = !DILocation(line: 0, scope: !3834)
!3841 = !DILocation(line: 194, column: 10, scope: !3834)
!3842 = !DILocation(line: 194, column: 21, scope: !3834)
!3843 = !DILocation(line: 195, column: 1, scope: !3834)
!3844 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !95, file: !95, line: 197, type: !1104, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3845)
!3845 = !{!3846, !3847, !3848, !3849, !3850}
!3846 = !DILocalVariable(name: "irq_number", arg: 1, scope: !3844, file: !95, line: 197, type: !862)
!3847 = !DILocalVariable(name: "i", scope: !3844, file: !95, line: 199, type: !61)
!3848 = !DILocalVariable(name: "mask", scope: !3844, file: !95, line: 200, type: !60)
!3849 = !DILocalVariable(name: "state", scope: !3844, file: !95, line: 201, type: !60)
!3850 = !DILocalVariable(name: "enable", scope: !3844, file: !95, line: 202, type: !60)
!3851 = !DILocation(line: 0, scope: !3844)
!3852 = !DILocation(line: 200, column: 5, scope: !3844)
!3853 = !DILocation(line: 200, column: 23, scope: !3844)
!3854 = !DILocation(line: 201, column: 5, scope: !3844)
!3855 = !DILocation(line: 201, column: 23, scope: !3844)
!3856 = !DILocation(line: 202, column: 5, scope: !3844)
!3857 = !DILocation(line: 202, column: 23, scope: !3844)
!3858 = !DILocation(line: 207, column: 5, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3844, file: !95, line: 207, column: 5)
!3860 = !DILocation(line: 209, column: 18, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !95, line: 207, column: 44)
!3862 = distinct !DILexicalBlock(scope: !3859, file: !95, line: 207, column: 5)
!3863 = !DILocation(line: 209, column: 29, scope: !3861)
!3864 = !DILocation(line: 209, column: 16, scope: !3861)
!3865 = !DILocation(line: 210, column: 29, scope: !3861)
!3866 = !DILocation(line: 210, column: 16, scope: !3861)
!3867 = !DILocation(line: 212, column: 16, scope: !3861)
!3868 = !DILocation(line: 212, column: 14, scope: !3861)
!3869 = !DILocation(line: 214, column: 9, scope: !3861)
!3870 = !DILocation(line: 214, column: 20, scope: !3861)
!3871 = !DILocation(line: 214, column: 32, scope: !3861)
!3872 = !DILocation(line: 216, column: 14, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3861, file: !95, line: 216, column: 13)
!3874 = !DILocation(line: 216, column: 20, scope: !3873)
!3875 = !DILocation(line: 216, column: 40, scope: !3873)
!3876 = !DILocation(line: 216, column: 44, scope: !3873)
!3877 = !DILocation(line: 216, column: 51, scope: !3873)
!3878 = !DILocation(line: 216, column: 13, scope: !3861)
!3879 = !DILocation(line: 224, column: 51, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3881, file: !95, line: 224, column: 17)
!3881 = distinct !DILexicalBlock(scope: !3873, file: !95, line: 216, column: 70)
!3882 = !DILocation(line: 224, column: 60, scope: !3880)
!3883 = !DILocation(line: 224, column: 17, scope: !3881)
!3884 = !DILocation(line: 225, column: 94, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3880, file: !95, line: 224, column: 69)
!3886 = !DILocation(line: 225, column: 17, scope: !3885)
!3887 = !DILocation(line: 226, column: 13, scope: !3885)
!3888 = !DILocation(line: 229, column: 31, scope: !3861)
!3889 = !DILocation(line: 229, column: 42, scope: !3861)
!3890 = !DILocation(line: 229, column: 9, scope: !3861)
!3891 = !DILocation(line: 207, column: 40, scope: !3862)
!3892 = !DILocation(line: 207, column: 19, scope: !3862)
!3893 = distinct !{!3893, !3858, !3894}
!3894 = !DILocation(line: 231, column: 5, scope: !3859)
!3895 = !DILocation(line: 233, column: 1, scope: !3844)
!3896 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !95, file: !95, line: 236, type: !291, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3897 = !DILocation(line: 238, column: 5, scope: !3896)
!3898 = !DILocation(line: 239, column: 5, scope: !3896)
!3899 = !DILocation(line: 240, column: 5, scope: !3896)
!3900 = !DILocation(line: 241, column: 1, scope: !3896)
!3901 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !95, file: !95, line: 242, type: !3671, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3902)
!3902 = !{!3903, !3904, !3905, !3906, !3907}
!3903 = !DILocalVariable(name: "gpt", arg: 1, scope: !3901, file: !95, line: 242, type: !264)
!3904 = !DILocalVariable(name: "time", scope: !3901, file: !95, line: 244, type: !60)
!3905 = !DILocalVariable(name: "count", scope: !3901, file: !95, line: 245, type: !61)
!3906 = !DILocalVariable(name: "time_s", scope: !3901, file: !95, line: 245, type: !61)
!3907 = !DILocalVariable(name: "time_ms", scope: !3901, file: !95, line: 245, type: !61)
!3908 = !DILocation(line: 0, scope: !3901)
!3909 = !DILocation(line: 244, column: 5, scope: !3901)
!3910 = !DILocation(line: 244, column: 23, scope: !3901)
!3911 = !DILocation(line: 247, column: 13, scope: !3901)
!3912 = !DILocation(line: 248, column: 20, scope: !3901)
!3913 = !DILocation(line: 249, column: 23, scope: !3901)
!3914 = !DILocation(line: 249, column: 32, scope: !3901)
!3915 = !DILocation(line: 249, column: 39, scope: !3901)
!3916 = !DILocation(line: 249, column: 48, scope: !3901)
!3917 = !DILocation(line: 250, column: 19, scope: !3901)
!3918 = !DILocation(line: 250, column: 26, scope: !3901)
!3919 = !DILocation(line: 250, column: 10, scope: !3901)
!3920 = !DILocation(line: 253, column: 5, scope: !3901)
!3921 = !DILocation(line: 253, column: 30, scope: !3901)
!3922 = !DILocation(line: 253, column: 38, scope: !3901)
!3923 = !DILocation(line: 254, column: 5, scope: !3901)
!3924 = !DILocation(line: 254, column: 36, scope: !3901)
!3925 = distinct !{!3925, !3923, !3926}
!3926 = !DILocation(line: 254, column: 46, scope: !3901)
!3927 = !DILocation(line: 255, column: 12, scope: !3901)
!3928 = !DILocation(line: 256, column: 1, scope: !3901)
!3929 = !DILocation(line: 255, column: 5, scope: !3901)
!3930 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !95, file: !95, line: 258, type: !3931, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3933)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{!61}
!3933 = !{!3934}
!3934 = !DILocalVariable(name: "i", scope: !3930, file: !95, line: 260, type: !61)
!3935 = !DILocation(line: 0, scope: !3930)
!3936 = !DILocation(line: 262, column: 5, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3930, file: !95, line: 262, column: 5)
!3938 = !DILocation(line: 263, column: 37, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3940, file: !95, line: 263, column: 13)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !95, line: 262, column: 45)
!3941 = distinct !DILexicalBlock(scope: !3937, file: !95, line: 262, column: 5)
!3942 = !DILocation(line: 263, column: 45, scope: !3939)
!3943 = !DILocation(line: 263, column: 13, scope: !3940)
!3944 = !DILocation(line: 262, column: 41, scope: !3941)
!3945 = !DILocation(line: 262, column: 19, scope: !3941)
!3946 = distinct !{!3946, !3936, !3947}
!3947 = !DILocation(line: 266, column: 5, scope: !3937)
!3948 = !DILocation(line: 269, column: 1, scope: !3930)
!3949 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !95, file: !95, line: 271, type: !291, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3950)
!3950 = !{!3951, !3952}
!3951 = !DILocalVariable(name: "minimum_time", scope: !3949, file: !95, line: 273, type: !61)
!3952 = !DILocalVariable(name: "current_timer", scope: !3949, file: !95, line: 273, type: !61)
!3953 = !DILocation(line: 273, column: 5, scope: !3949)
!3954 = !DILocation(line: 275, column: 24, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3949, file: !95, line: 275, column: 9)
!3956 = !DILocation(line: 275, column: 9, scope: !3949)
!3957 = !DILocation(line: 0, scope: !3949)
!3958 = !DILocation(line: 279, column: 5, scope: !3949)
!3959 = !DILocation(line: 282, column: 56, scope: !3949)
!3960 = !DILocation(line: 282, column: 39, scope: !3949)
!3961 = !DILocation(line: 284, column: 30, scope: !3949)
!3962 = !DILocation(line: 285, column: 45, scope: !3949)
!3963 = !DILocation(line: 285, column: 5, scope: !3949)
!3964 = !DILocation(line: 286, column: 30, scope: !3949)
!3965 = !DILocation(line: 287, column: 1, scope: !3949)
!3966 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !95, file: !95, line: 308, type: !3967, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3969)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{null, !1154, !1154}
!3969 = !{!3970, !3971, !3972, !3973, !3974}
!3970 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !3966, file: !95, line: 308, type: !1154)
!3971 = !DILocalVariable(name: "number", arg: 2, scope: !3966, file: !95, line: 308, type: !1154)
!3972 = !DILocalVariable(name: "i", scope: !3966, file: !95, line: 310, type: !61)
!3973 = !DILocalVariable(name: "minimum", scope: !3966, file: !95, line: 311, type: !61)
!3974 = !DILocalVariable(name: "data", scope: !3966, file: !95, line: 312, type: !61)
!3975 = !DILocation(line: 0, scope: !3966)
!3976 = !DILocation(line: 314, column: 5, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3966, file: !95, line: 314, column: 5)
!3978 = !DILocation(line: 315, column: 37, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !95, line: 315, column: 13)
!3980 = distinct !DILexicalBlock(scope: !3981, file: !95, line: 314, column: 45)
!3981 = distinct !DILexicalBlock(scope: !3977, file: !95, line: 314, column: 5)
!3982 = !DILocation(line: 315, column: 13, scope: !3980)
!3983 = !DILocation(line: 316, column: 20, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3979, file: !95, line: 315, column: 57)
!3985 = !DILocation(line: 318, column: 22, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3984, file: !95, line: 318, column: 17)
!3987 = !DILocation(line: 318, column: 17, scope: !3984)
!3988 = !DILocation(line: 320, column: 25, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3986, file: !95, line: 318, column: 33)
!3990 = !DILocation(line: 321, column: 13, scope: !3989)
!3991 = !DILocation(line: 314, column: 41, scope: !3981)
!3992 = !DILocation(line: 314, column: 19, scope: !3981)
!3993 = distinct !{!3993, !3976, !3994}
!3994 = !DILocation(line: 323, column: 5, scope: !3977)
!3995 = !DILocation(line: 325, column: 19, scope: !3966)
!3996 = !DILocation(line: 326, column: 1, scope: !3966)
!3997 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !95, file: !95, line: 289, type: !3679, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3998)
!3998 = !{!3999, !4000, !4001, !4002}
!3999 = !DILocalVariable(name: "timer_number", arg: 1, scope: !3997, file: !95, line: 289, type: !61)
!4000 = !DILocalVariable(name: "time_out_delta", scope: !3997, file: !95, line: 291, type: !61)
!4001 = !DILocalVariable(name: "current_delta", scope: !3997, file: !95, line: 292, type: !61)
!4002 = !DILocalVariable(name: "ret_value", scope: !3997, file: !95, line: 293, type: !61)
!4003 = !DILocation(line: 0, scope: !3997)
!4004 = !DILocation(line: 295, column: 22, scope: !3997)
!4005 = !DILocation(line: 296, column: 22, scope: !3997)
!4006 = !DILocation(line: 298, column: 24, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !3997, file: !95, line: 298, column: 9)
!4008 = !DILocation(line: 298, column: 9, scope: !3997)
!4009 = !DILocation(line: 306, column: 5, scope: !3997)
!4010 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !95, file: !95, line: 329, type: !309, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4011)
!4011 = !{!4012, !4013, !4014, !4015}
!4012 = !DILocalVariable(name: "parameter", arg: 1, scope: !4010, file: !95, line: 329, type: !88)
!4013 = !DILocalVariable(name: "i", scope: !4010, file: !95, line: 331, type: !61)
!4014 = !DILocalVariable(name: "time_ms", scope: !4010, file: !95, line: 332, type: !60)
!4015 = !DILocalVariable(name: "data", scope: !4010, file: !95, line: 333, type: !60)
!4016 = !DILocation(line: 0, scope: !4010)
!4017 = !DILocation(line: 332, column: 5, scope: !4010)
!4018 = !DILocation(line: 332, column: 23, scope: !4010)
!4019 = !DILocation(line: 333, column: 5, scope: !4010)
!4020 = !DILocation(line: 333, column: 23, scope: !4010)
!4021 = !DILocation(line: 336, column: 24, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4010, file: !95, line: 336, column: 9)
!4023 = !DILocation(line: 336, column: 41, scope: !4022)
!4024 = !DILocation(line: 336, column: 9, scope: !4010)
!4025 = !DILocation(line: 338, column: 34, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4022, file: !95, line: 336, column: 47)
!4027 = !DILocation(line: 339, column: 9, scope: !4026)
!4028 = !DILocation(line: 340, column: 34, scope: !4026)
!4029 = !DILocation(line: 342, column: 46, scope: !4026)
!4030 = !DILocation(line: 342, column: 19, scope: !4026)
!4031 = !DILocation(line: 342, column: 17, scope: !4026)
!4032 = !DILocation(line: 344, column: 41, scope: !4026)
!4033 = !DILocation(line: 344, column: 38, scope: !4026)
!4034 = !DILocation(line: 345, column: 42, scope: !4026)
!4035 = !DILocation(line: 347, column: 9, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4026, file: !95, line: 347, column: 9)
!4037 = !DILocation(line: 348, column: 41, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4039, file: !95, line: 348, column: 17)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !95, line: 347, column: 49)
!4040 = distinct !DILexicalBlock(scope: !4036, file: !95, line: 347, column: 9)
!4041 = !DILocation(line: 348, column: 17, scope: !4039)
!4042 = !DILocation(line: 350, column: 24, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4038, file: !95, line: 348, column: 61)
!4044 = !DILocation(line: 350, column: 22, scope: !4043)
!4045 = !DILocation(line: 352, column: 21, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4043, file: !95, line: 352, column: 21)
!4047 = !DILocation(line: 352, column: 26, scope: !4046)
!4048 = !DILocation(line: 352, column: 21, scope: !4043)
!4049 = !DILocation(line: 353, column: 56, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4046, file: !95, line: 352, column: 32)
!4051 = !DILocation(line: 354, column: 55, scope: !4050)
!4052 = !DILocation(line: 356, column: 62, scope: !4050)
!4053 = !DILocation(line: 356, column: 112, scope: !4050)
!4054 = !DILocation(line: 356, column: 21, scope: !4050)
!4055 = !DILocation(line: 357, column: 17, scope: !4050)
!4056 = !DILocation(line: 347, column: 45, scope: !4040)
!4057 = !DILocation(line: 347, column: 23, scope: !4040)
!4058 = distinct !{!4058, !4035, !4059}
!4059 = !DILocation(line: 360, column: 9, scope: !4036)
!4060 = !DILocation(line: 362, column: 42, scope: !4026)
!4061 = !DILocation(line: 364, column: 28, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4026, file: !95, line: 364, column: 13)
!4063 = !DILocation(line: 364, column: 48, scope: !4062)
!4064 = !DILocation(line: 364, column: 13, scope: !4026)
!4065 = !DILocation(line: 365, column: 13, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4062, file: !95, line: 364, column: 54)
!4067 = !DILocation(line: 366, column: 9, scope: !4066)
!4068 = !DILocation(line: 369, column: 1, scope: !4010)
!4069 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !346, file: !346, line: 50, type: !4070, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4073)
!4070 = !DISubroutineType(types: !4071)
!4071 = !{!61, !4072}
!4072 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !98, line: 390, baseType: !348)
!4073 = !{!4074, !4075, !4076}
!4074 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4069, file: !346, line: 50, type: !4072)
!4075 = !DILocalVariable(name: "i", scope: !4069, file: !346, line: 52, type: !61)
!4076 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !4069, file: !346, line: 53, type: !1060)
!4077 = !DILocation(line: 0, scope: !4069)
!4078 = !DILocation(line: 53, column: 14, scope: !4069)
!4079 = !DILocation(line: 55, column: 5, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4069, file: !346, line: 55, column: 5)
!4081 = !DILocation(line: 55, column: 25, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4080, file: !346, line: 55, column: 5)
!4083 = !DILocation(line: 55, column: 19, scope: !4082)
!4084 = distinct !{!4084, !4079, !4085}
!4085 = !DILocation(line: 59, column: 5, scope: !4080)
!4086 = !DILocation(line: 56, column: 13, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4088, file: !346, line: 56, column: 13)
!4088 = distinct !DILexicalBlock(scope: !4082, file: !346, line: 55, column: 29)
!4089 = !DILocation(line: 56, column: 40, scope: !4087)
!4090 = !DILocation(line: 56, column: 13, scope: !4088)
!4091 = !DILocation(line: 61, column: 1, scope: !4069)
!4092 = distinct !DISubprogram(name: "hal_gpio_init", scope: !346, file: !346, line: 66, type: !4093, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4096)
!4093 = !DISubroutineType(types: !4094)
!4094 = !{!4095, !4072}
!4095 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !401, line: 229, baseType: !400)
!4096 = !{!4097}
!4097 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4092, file: !346, line: 66, type: !4072)
!4098 = !DILocation(line: 0, scope: !4092)
!4099 = !DILocation(line: 68, column: 5, scope: !4092)
!4100 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !346, file: !346, line: 72, type: !4093, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4101)
!4101 = !{!4102}
!4102 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4100, file: !346, line: 72, type: !4072)
!4103 = !DILocation(line: 0, scope: !4100)
!4104 = !DILocation(line: 74, column: 5, scope: !4100)
!4105 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !346, file: !346, line: 79, type: !4106, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4108)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{!4095, !4072, !442}
!4108 = !{!4109, !4110, !4111, !4112}
!4109 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4105, file: !346, line: 79, type: !4072)
!4110 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4105, file: !346, line: 79, type: !442)
!4111 = !DILocalVariable(name: "no", scope: !4105, file: !346, line: 81, type: !61)
!4112 = !DILocalVariable(name: "remainder", scope: !4105, file: !346, line: 82, type: !61)
!4113 = !DILocation(line: 0, scope: !4105)
!4114 = !DILocation(line: 84, column: 18, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4105, file: !346, line: 84, column: 9)
!4116 = !DILocation(line: 84, column: 9, scope: !4105)
!4117 = !DILocation(line: 89, column: 19, scope: !4105)
!4118 = !DILocation(line: 92, column: 26, scope: !4105)
!4119 = !DILocation(line: 94, column: 24, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4105, file: !346, line: 94, column: 9)
!4121 = !DILocation(line: 0, scope: !4120)
!4122 = !DILocation(line: 94, column: 9, scope: !4105)
!4123 = !DILocation(line: 101, column: 1, scope: !4105)
!4124 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !346, file: !346, line: 105, type: !4125, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4128)
!4125 = !DISubroutineType(types: !4126)
!4126 = !{!4095, !4072, !4127}
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 32)
!4128 = !{!4129, !4130, !4131, !4132, !4133}
!4129 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4124, file: !346, line: 105, type: !4072)
!4130 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4124, file: !346, line: 105, type: !4127)
!4131 = !DILocalVariable(name: "no", scope: !4124, file: !346, line: 107, type: !61)
!4132 = !DILocalVariable(name: "remainder", scope: !4124, file: !346, line: 108, type: !61)
!4133 = !DILocalVariable(name: "temp", scope: !4124, file: !346, line: 109, type: !61)
!4134 = !DILocation(line: 0, scope: !4124)
!4135 = !DILocation(line: 111, column: 18, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4124, file: !346, line: 111, column: 9)
!4137 = !DILocation(line: 111, column: 9, scope: !4124)
!4138 = !DILocation(line: 115, column: 14, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4124, file: !346, line: 115, column: 9)
!4140 = !DILocation(line: 115, column: 9, scope: !4124)
!4141 = !DILocation(line: 120, column: 19, scope: !4124)
!4142 = !DILocation(line: 123, column: 26, scope: !4124)
!4143 = !DILocation(line: 125, column: 12, scope: !4124)
!4144 = !DILocation(line: 125, column: 54, scope: !4124)
!4145 = !DILocation(line: 126, column: 45, scope: !4124)
!4146 = !DILocation(line: 126, column: 17, scope: !4124)
!4147 = !DILocation(line: 127, column: 51, scope: !4124)
!4148 = !DILocation(line: 127, column: 21, scope: !4124)
!4149 = !DILocation(line: 128, column: 5, scope: !4124)
!4150 = !DILocation(line: 130, column: 1, scope: !4124)
!4151 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !346, file: !346, line: 134, type: !4152, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4155)
!4152 = !DISubroutineType(types: !4153)
!4153 = !{!4154, !4072, !460}
!4154 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !401, line: 238, baseType: !411)
!4155 = !{!4156, !4157, !4158, !4159, !4160}
!4156 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4151, file: !346, line: 134, type: !4072)
!4157 = !DILocalVariable(name: "function_index", arg: 2, scope: !4151, file: !346, line: 134, type: !460)
!4158 = !DILocalVariable(name: "no", scope: !4151, file: !346, line: 136, type: !61)
!4159 = !DILocalVariable(name: "remainder", scope: !4151, file: !346, line: 137, type: !61)
!4160 = !DILocalVariable(name: "irq_status", scope: !4151, file: !346, line: 138, type: !61)
!4161 = !DILocation(line: 0, scope: !4151)
!4162 = !DILocation(line: 140, column: 18, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4151, file: !346, line: 140, column: 9)
!4164 = !DILocation(line: 140, column: 9, scope: !4151)
!4165 = !DILocation(line: 145, column: 24, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4151, file: !346, line: 145, column: 9)
!4167 = !DILocation(line: 145, column: 9, scope: !4151)
!4168 = !DILocation(line: 145, column: 9, scope: !4166)
!4169 = !DILocation(line: 150, column: 19, scope: !4151)
!4170 = !DILocation(line: 156, column: 18, scope: !4151)
!4171 = !DILocation(line: 157, column: 105, scope: !4151)
!4172 = !DILocation(line: 157, column: 91, scope: !4151)
!4173 = !DILocation(line: 157, column: 5, scope: !4151)
!4174 = !DILocation(line: 157, column: 48, scope: !4151)
!4175 = !DILocation(line: 157, column: 62, scope: !4151)
!4176 = !DILocation(line: 158, column: 80, scope: !4151)
!4177 = !DILocation(line: 158, column: 5, scope: !4151)
!4178 = !DILocation(line: 158, column: 48, scope: !4151)
!4179 = !DILocation(line: 158, column: 62, scope: !4151)
!4180 = !DILocation(line: 159, column: 5, scope: !4151)
!4181 = !DILocation(line: 160, column: 5, scope: !4151)
!4182 = !DILocation(line: 162, column: 1, scope: !4151)
!4183 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !346, file: !346, line: 166, type: !4184, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4187)
!4184 = !DISubroutineType(types: !4185)
!4185 = !{!4095, !4072, !4186}
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 32)
!4187 = !{!4188, !4189, !4190, !4191, !4192}
!4188 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4183, file: !346, line: 166, type: !4072)
!4189 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4183, file: !346, line: 166, type: !4186)
!4190 = !DILocalVariable(name: "no", scope: !4183, file: !346, line: 168, type: !61)
!4191 = !DILocalVariable(name: "remainder", scope: !4183, file: !346, line: 169, type: !61)
!4192 = !DILocalVariable(name: "temp", scope: !4183, file: !346, line: 170, type: !61)
!4193 = !DILocation(line: 0, scope: !4183)
!4194 = !DILocation(line: 172, column: 18, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4183, file: !346, line: 172, column: 9)
!4196 = !DILocation(line: 172, column: 9, scope: !4183)
!4197 = !DILocation(line: 176, column: 14, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4183, file: !346, line: 176, column: 9)
!4199 = !DILocation(line: 176, column: 9, scope: !4183)
!4200 = !DILocation(line: 181, column: 19, scope: !4183)
!4201 = !DILocation(line: 184, column: 26, scope: !4183)
!4202 = !DILocation(line: 186, column: 12, scope: !4183)
!4203 = !DILocation(line: 186, column: 54, scope: !4183)
!4204 = !DILocation(line: 187, column: 45, scope: !4183)
!4205 = !DILocation(line: 187, column: 17, scope: !4183)
!4206 = !DILocation(line: 188, column: 41, scope: !4183)
!4207 = !DILocation(line: 188, column: 16, scope: !4183)
!4208 = !DILocation(line: 189, column: 5, scope: !4183)
!4209 = !DILocation(line: 191, column: 1, scope: !4183)
!4210 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !346, file: !346, line: 195, type: !4211, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4213)
!4211 = !DISubroutineType(types: !4212)
!4212 = !{!4095, !4072, !443}
!4213 = !{!4214, !4215, !4216, !4217}
!4214 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4210, file: !346, line: 195, type: !4072)
!4215 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4210, file: !346, line: 195, type: !443)
!4216 = !DILocalVariable(name: "no", scope: !4210, file: !346, line: 197, type: !61)
!4217 = !DILocalVariable(name: "remainder", scope: !4210, file: !346, line: 198, type: !61)
!4218 = !DILocation(line: 0, scope: !4210)
!4219 = !DILocation(line: 200, column: 18, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4210, file: !346, line: 200, column: 9)
!4221 = !DILocation(line: 200, column: 9, scope: !4210)
!4222 = !DILocation(line: 205, column: 19, scope: !4210)
!4223 = !DILocation(line: 208, column: 26, scope: !4210)
!4224 = !DILocation(line: 210, column: 9, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4210, file: !346, line: 210, column: 9)
!4226 = !DILocation(line: 0, scope: !4225)
!4227 = !DILocation(line: 210, column: 9, scope: !4210)
!4228 = !DILocation(line: 216, column: 1, scope: !4210)
!4229 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !346, file: !346, line: 220, type: !4184, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4230)
!4230 = !{!4231, !4232, !4233, !4234, !4235}
!4231 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4229, file: !346, line: 220, type: !4072)
!4232 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4229, file: !346, line: 220, type: !4186)
!4233 = !DILocalVariable(name: "no", scope: !4229, file: !346, line: 222, type: !61)
!4234 = !DILocalVariable(name: "remainder", scope: !4229, file: !346, line: 223, type: !61)
!4235 = !DILocalVariable(name: "temp", scope: !4229, file: !346, line: 224, type: !61)
!4236 = !DILocation(line: 0, scope: !4229)
!4237 = !DILocation(line: 226, column: 18, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4229, file: !346, line: 226, column: 9)
!4239 = !DILocation(line: 226, column: 9, scope: !4229)
!4240 = !DILocation(line: 230, column: 14, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4229, file: !346, line: 230, column: 9)
!4242 = !DILocation(line: 230, column: 9, scope: !4229)
!4243 = !DILocation(line: 235, column: 19, scope: !4229)
!4244 = !DILocation(line: 238, column: 26, scope: !4229)
!4245 = !DILocation(line: 240, column: 12, scope: !4229)
!4246 = !DILocation(line: 240, column: 55, scope: !4229)
!4247 = !DILocation(line: 241, column: 45, scope: !4229)
!4248 = !DILocation(line: 241, column: 17, scope: !4229)
!4249 = !DILocation(line: 242, column: 41, scope: !4229)
!4250 = !DILocation(line: 242, column: 16, scope: !4229)
!4251 = !DILocation(line: 243, column: 5, scope: !4229)
!4252 = !DILocation(line: 245, column: 1, scope: !4229)
!4253 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !346, file: !346, line: 249, type: !4093, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4254)
!4254 = !{!4255, !4256, !4257, !4258}
!4255 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4253, file: !346, line: 249, type: !4072)
!4256 = !DILocalVariable(name: "no", scope: !4253, file: !346, line: 251, type: !61)
!4257 = !DILocalVariable(name: "remainder", scope: !4253, file: !346, line: 252, type: !61)
!4258 = !DILocalVariable(name: "temp", scope: !4253, file: !346, line: 253, type: !61)
!4259 = !DILocation(line: 0, scope: !4253)
!4260 = !DILocation(line: 255, column: 18, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4253, file: !346, line: 255, column: 9)
!4262 = !DILocation(line: 255, column: 9, scope: !4253)
!4263 = !DILocation(line: 260, column: 19, scope: !4253)
!4264 = !DILocation(line: 263, column: 26, scope: !4253)
!4265 = !DILocation(line: 265, column: 12, scope: !4253)
!4266 = !DILocation(line: 265, column: 55, scope: !4253)
!4267 = !DILocation(line: 266, column: 45, scope: !4253)
!4268 = !DILocation(line: 266, column: 17, scope: !4253)
!4269 = !DILocation(line: 267, column: 15, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4253, file: !346, line: 267, column: 9)
!4271 = !DILocation(line: 267, column: 9, scope: !4253)
!4272 = !DILocation(line: 0, scope: !4270)
!4273 = !DILocation(line: 273, column: 1, scope: !4253)
!4274 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !346, file: !346, line: 278, type: !4093, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4275)
!4275 = !{!4276, !4277, !4278}
!4276 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4274, file: !346, line: 278, type: !4072)
!4277 = !DILocalVariable(name: "no", scope: !4274, file: !346, line: 280, type: !61)
!4278 = !DILocalVariable(name: "remainder", scope: !4274, file: !346, line: 281, type: !61)
!4279 = !DILocation(line: 0, scope: !4274)
!4280 = !DILocation(line: 283, column: 18, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4274, file: !346, line: 283, column: 9)
!4282 = !DILocation(line: 283, column: 9, scope: !4274)
!4283 = !DILocation(line: 288, column: 19, scope: !4274)
!4284 = !DILocation(line: 291, column: 26, scope: !4274)
!4285 = !DILocation(line: 293, column: 90, scope: !4274)
!4286 = !DILocation(line: 293, column: 5, scope: !4274)
!4287 = !DILocation(line: 293, column: 48, scope: !4274)
!4288 = !DILocation(line: 293, column: 62, scope: !4274)
!4289 = !DILocation(line: 294, column: 5, scope: !4274)
!4290 = !DILocation(line: 295, column: 1, scope: !4274)
!4291 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !346, file: !346, line: 299, type: !4093, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4292)
!4292 = !{!4293, !4294, !4295}
!4293 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4291, file: !346, line: 299, type: !4072)
!4294 = !DILocalVariable(name: "no", scope: !4291, file: !346, line: 301, type: !61)
!4295 = !DILocalVariable(name: "remainder", scope: !4291, file: !346, line: 302, type: !61)
!4296 = !DILocation(line: 0, scope: !4291)
!4297 = !DILocation(line: 304, column: 18, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4291, file: !346, line: 304, column: 9)
!4299 = !DILocation(line: 304, column: 9, scope: !4291)
!4300 = !DILocation(line: 309, column: 19, scope: !4291)
!4301 = !DILocation(line: 312, column: 26, scope: !4291)
!4302 = !DILocation(line: 314, column: 90, scope: !4291)
!4303 = !DILocation(line: 314, column: 5, scope: !4291)
!4304 = !DILocation(line: 314, column: 48, scope: !4291)
!4305 = !DILocation(line: 314, column: 62, scope: !4291)
!4306 = !DILocation(line: 315, column: 5, scope: !4291)
!4307 = !DILocation(line: 316, column: 1, scope: !4291)
!4308 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !346, file: !346, line: 321, type: !4093, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4309)
!4309 = !{!4310, !4311, !4312}
!4310 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4308, file: !346, line: 321, type: !4072)
!4311 = !DILocalVariable(name: "no", scope: !4308, file: !346, line: 323, type: !61)
!4312 = !DILocalVariable(name: "remainder", scope: !4308, file: !346, line: 324, type: !61)
!4313 = !DILocation(line: 0, scope: !4308)
!4314 = !DILocation(line: 326, column: 19, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4308, file: !346, line: 326, column: 9)
!4316 = !DILocation(line: 326, column: 36, scope: !4315)
!4317 = !DILocation(line: 326, column: 41, scope: !4315)
!4318 = !DILocation(line: 326, column: 9, scope: !4308)
!4319 = !DILocation(line: 331, column: 19, scope: !4308)
!4320 = !DILocation(line: 334, column: 26, scope: !4308)
!4321 = !DILocation(line: 336, column: 94, scope: !4308)
!4322 = !DILocation(line: 336, column: 5, scope: !4308)
!4323 = !DILocation(line: 336, column: 50, scope: !4308)
!4324 = !DILocation(line: 336, column: 66, scope: !4308)
!4325 = !DILocation(line: 337, column: 5, scope: !4308)
!4326 = !DILocation(line: 337, column: 51, scope: !4308)
!4327 = !DILocation(line: 337, column: 68, scope: !4308)
!4328 = !DILocation(line: 338, column: 5, scope: !4308)
!4329 = !DILocation(line: 339, column: 1, scope: !4308)
!4330 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !346, file: !346, line: 343, type: !4093, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4331)
!4331 = !{!4332, !4333, !4334}
!4332 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4330, file: !346, line: 343, type: !4072)
!4333 = !DILocalVariable(name: "no", scope: !4330, file: !346, line: 345, type: !61)
!4334 = !DILocalVariable(name: "remainder", scope: !4330, file: !346, line: 346, type: !61)
!4335 = !DILocation(line: 0, scope: !4330)
!4336 = !DILocation(line: 348, column: 19, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4330, file: !346, line: 348, column: 9)
!4338 = !DILocation(line: 348, column: 36, scope: !4337)
!4339 = !DILocation(line: 348, column: 41, scope: !4337)
!4340 = !DILocation(line: 348, column: 9, scope: !4330)
!4341 = !DILocation(line: 353, column: 19, scope: !4330)
!4342 = !DILocation(line: 356, column: 26, scope: !4330)
!4343 = !DILocation(line: 358, column: 94, scope: !4330)
!4344 = !DILocation(line: 358, column: 5, scope: !4330)
!4345 = !DILocation(line: 358, column: 50, scope: !4330)
!4346 = !DILocation(line: 358, column: 66, scope: !4330)
!4347 = !DILocation(line: 359, column: 5, scope: !4330)
!4348 = !DILocation(line: 359, column: 51, scope: !4330)
!4349 = !DILocation(line: 359, column: 68, scope: !4330)
!4350 = !DILocation(line: 360, column: 5, scope: !4330)
!4351 = !DILocation(line: 361, column: 1, scope: !4330)
!4352 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !346, file: !346, line: 365, type: !4093, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4353)
!4353 = !{!4354, !4355, !4356}
!4354 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4352, file: !346, line: 365, type: !4072)
!4355 = !DILocalVariable(name: "no", scope: !4352, file: !346, line: 367, type: !61)
!4356 = !DILocalVariable(name: "remainder", scope: !4352, file: !346, line: 368, type: !61)
!4357 = !DILocation(line: 0, scope: !4352)
!4358 = !DILocation(line: 370, column: 19, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4352, file: !346, line: 370, column: 9)
!4360 = !DILocation(line: 370, column: 36, scope: !4359)
!4361 = !DILocation(line: 370, column: 41, scope: !4359)
!4362 = !DILocation(line: 370, column: 9, scope: !4352)
!4363 = !DILocation(line: 375, column: 19, scope: !4352)
!4364 = !DILocation(line: 378, column: 26, scope: !4352)
!4365 = !DILocation(line: 380, column: 94, scope: !4352)
!4366 = !DILocation(line: 380, column: 5, scope: !4352)
!4367 = !DILocation(line: 380, column: 50, scope: !4352)
!4368 = !DILocation(line: 380, column: 66, scope: !4352)
!4369 = !DILocation(line: 381, column: 5, scope: !4352)
!4370 = !DILocation(line: 382, column: 1, scope: !4352)
!4371 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !346, file: !346, line: 387, type: !4372, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4376)
!4372 = !DISubroutineType(types: !4373)
!4373 = !{!4095, !4374, !4375}
!4374 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !98, line: 423, baseType: !421)
!4375 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !98, line: 431, baseType: !430)
!4376 = !{!4377, !4378}
!4377 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !4371, file: !346, line: 387, type: !4374)
!4378 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !4371, file: !346, line: 387, type: !4375)
!4379 = !DILocation(line: 0, scope: !4371)
!4380 = !DILocation(line: 390, column: 24, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4371, file: !346, line: 390, column: 9)
!4382 = !DILocation(line: 390, column: 9, scope: !4371)
!4383 = !DILocation(line: 394, column: 5, scope: !4371)
!4384 = !DILocation(line: 394, column: 62, scope: !4371)
!4385 = !DILocation(line: 394, column: 74, scope: !4371)
!4386 = !DILocation(line: 395, column: 5, scope: !4371)
!4387 = !DILocation(line: 396, column: 1, scope: !4371)
!4388 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !346, file: !346, line: 403, type: !4389, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4391)
!4389 = !DISubroutineType(types: !4390)
!4390 = !{!4095, !4072, !460, !460, !460}
!4391 = !{!4392, !4393, !4394, !4395, !4396, !4397}
!4392 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4388, file: !346, line: 403, type: !4072)
!4393 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !4388, file: !346, line: 403, type: !460)
!4394 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !4388, file: !346, line: 403, type: !460)
!4395 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !4388, file: !346, line: 403, type: !460)
!4396 = !DILocalVariable(name: "no", scope: !4388, file: !346, line: 405, type: !61)
!4397 = !DILocalVariable(name: "remainder", scope: !4388, file: !346, line: 406, type: !61)
!4398 = !DILocation(line: 0, scope: !4388)
!4399 = !DILocation(line: 408, column: 19, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4388, file: !346, line: 408, column: 9)
!4401 = !DILocation(line: 408, column: 36, scope: !4400)
!4402 = !DILocation(line: 408, column: 40, scope: !4400)
!4403 = !DILocation(line: 408, column: 9, scope: !4388)
!4404 = !DILocation(line: 413, column: 19, scope: !4388)
!4405 = !DILocation(line: 416, column: 26, scope: !4388)
!4406 = !DILocation(line: 418, column: 9, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4388, file: !346, line: 418, column: 9)
!4408 = !DILocation(line: 0, scope: !4407)
!4409 = !DILocation(line: 418, column: 9, scope: !4388)
!4410 = !DILocation(line: 424, column: 9, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4388, file: !346, line: 424, column: 9)
!4412 = !DILocation(line: 0, scope: !4411)
!4413 = !DILocation(line: 424, column: 9, scope: !4388)
!4414 = !DILocation(line: 430, column: 9, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4388, file: !346, line: 430, column: 9)
!4416 = !DILocation(line: 0, scope: !4415)
!4417 = !DILocation(line: 430, column: 9, scope: !4388)
!4418 = !DILocation(line: 436, column: 1, scope: !4388)
!4419 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !346, file: !346, line: 441, type: !4093, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4420)
!4420 = !{!4421, !4422, !4423, !4424, !4425, !4426, !4427}
!4421 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4419, file: !346, line: 441, type: !4072)
!4422 = !DILocalVariable(name: "no1", scope: !4419, file: !346, line: 443, type: !61)
!4423 = !DILocalVariable(name: "no2", scope: !4419, file: !346, line: 443, type: !61)
!4424 = !DILocalVariable(name: "no3", scope: !4419, file: !346, line: 443, type: !61)
!4425 = !DILocalVariable(name: "remainder1", scope: !4419, file: !346, line: 444, type: !61)
!4426 = !DILocalVariable(name: "remainder2", scope: !4419, file: !346, line: 444, type: !61)
!4427 = !DILocalVariable(name: "remainder3", scope: !4419, file: !346, line: 444, type: !61)
!4428 = !DILocation(line: 0, scope: !4419)
!4429 = !DILocation(line: 446, column: 18, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4419, file: !346, line: 446, column: 9)
!4431 = !DILocation(line: 446, column: 9, scope: !4419)
!4432 = !DILocation(line: 451, column: 20, scope: !4419)
!4433 = !DILocation(line: 454, column: 27, scope: !4419)
!4434 = !DILocation(line: 457, column: 20, scope: !4419)
!4435 = !DILocation(line: 463, column: 20, scope: !4419)
!4436 = !DILocation(line: 469, column: 107, scope: !4419)
!4437 = !DILocation(line: 469, column: 92, scope: !4419)
!4438 = !DILocation(line: 469, column: 5, scope: !4419)
!4439 = !DILocation(line: 469, column: 49, scope: !4419)
!4440 = !DILocation(line: 469, column: 63, scope: !4419)
!4441 = !DILocation(line: 472, column: 89, scope: !4419)
!4442 = !DILocation(line: 472, column: 5, scope: !4419)
!4443 = !DILocation(line: 472, column: 48, scope: !4419)
!4444 = !DILocation(line: 472, column: 61, scope: !4419)
!4445 = !DILocation(line: 475, column: 5, scope: !4419)
!4446 = !DILocation(line: 475, column: 48, scope: !4419)
!4447 = !DILocation(line: 475, column: 61, scope: !4419)
!4448 = !DILocation(line: 478, column: 9, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4419, file: !346, line: 478, column: 9)
!4450 = !DILocation(line: 0, scope: !4449)
!4451 = !DILocation(line: 478, column: 9, scope: !4419)
!4452 = !DILocation(line: 479, column: 55, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4449, file: !346, line: 478, column: 40)
!4454 = !DILocation(line: 480, column: 5, scope: !4453)
!4455 = !DILocation(line: 483, column: 53, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4449, file: !346, line: 482, column: 10)
!4457 = !DILocation(line: 483, column: 67, scope: !4456)
!4458 = !DILocation(line: 484, column: 9, scope: !4456)
!4459 = !DILocation(line: 484, column: 55, scope: !4456)
!4460 = !DILocation(line: 484, column: 71, scope: !4456)
!4461 = !DILocation(line: 485, column: 9, scope: !4456)
!4462 = !DILocation(line: 485, column: 55, scope: !4456)
!4463 = !DILocation(line: 490, column: 5, scope: !4419)
!4464 = !DILocation(line: 490, column: 48, scope: !4419)
!4465 = !DILocation(line: 490, column: 61, scope: !4419)
!4466 = !DILocation(line: 493, column: 5, scope: !4419)
!4467 = !DILocation(line: 493, column: 47, scope: !4419)
!4468 = !DILocation(line: 493, column: 59, scope: !4419)
!4469 = !DILocation(line: 496, column: 108, scope: !4419)
!4470 = !DILocation(line: 496, column: 93, scope: !4419)
!4471 = !DILocation(line: 496, column: 5, scope: !4419)
!4472 = !DILocation(line: 496, column: 50, scope: !4419)
!4473 = !DILocation(line: 496, column: 65, scope: !4419)
!4474 = !DILocation(line: 498, column: 5, scope: !4419)
!4475 = !DILocation(line: 499, column: 1, scope: !4419)
!4476 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !346, file: !346, line: 502, type: !4093, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4477)
!4477 = !{!4478, !4479, !4480, !4481, !4482}
!4478 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4476, file: !346, line: 502, type: !4072)
!4479 = !DILocalVariable(name: "no1", scope: !4476, file: !346, line: 504, type: !61)
!4480 = !DILocalVariable(name: "no2", scope: !4476, file: !346, line: 504, type: !61)
!4481 = !DILocalVariable(name: "remainder1", scope: !4476, file: !346, line: 505, type: !61)
!4482 = !DILocalVariable(name: "remainder2", scope: !4476, file: !346, line: 505, type: !61)
!4483 = !DILocation(line: 0, scope: !4476)
!4484 = !DILocation(line: 507, column: 18, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4476, file: !346, line: 507, column: 9)
!4486 = !DILocation(line: 507, column: 9, scope: !4476)
!4487 = !DILocation(line: 512, column: 20, scope: !4476)
!4488 = !DILocation(line: 515, column: 27, scope: !4476)
!4489 = !DILocation(line: 518, column: 20, scope: !4476)
!4490 = !DILocation(line: 524, column: 107, scope: !4476)
!4491 = !DILocation(line: 524, column: 92, scope: !4476)
!4492 = !DILocation(line: 524, column: 5, scope: !4476)
!4493 = !DILocation(line: 524, column: 49, scope: !4476)
!4494 = !DILocation(line: 524, column: 63, scope: !4476)
!4495 = !DILocation(line: 527, column: 89, scope: !4476)
!4496 = !DILocation(line: 527, column: 5, scope: !4476)
!4497 = !DILocation(line: 527, column: 48, scope: !4476)
!4498 = !DILocation(line: 527, column: 61, scope: !4476)
!4499 = !DILocation(line: 530, column: 9, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4476, file: !346, line: 530, column: 9)
!4501 = !DILocation(line: 0, scope: !4500)
!4502 = !DILocation(line: 530, column: 9, scope: !4476)
!4503 = !DILocation(line: 531, column: 55, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4500, file: !346, line: 530, column: 40)
!4505 = !DILocation(line: 531, column: 71, scope: !4504)
!4506 = !DILocation(line: 532, column: 9, scope: !4504)
!4507 = !DILocation(line: 532, column: 56, scope: !4504)
!4508 = !DILocation(line: 533, column: 5, scope: !4504)
!4509 = !DILocation(line: 536, column: 53, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4500, file: !346, line: 535, column: 10)
!4511 = !DILocation(line: 536, column: 67, scope: !4510)
!4512 = !DILocation(line: 537, column: 9, scope: !4510)
!4513 = !DILocation(line: 537, column: 55, scope: !4510)
!4514 = !DILocation(line: 537, column: 71, scope: !4510)
!4515 = !DILocation(line: 538, column: 9, scope: !4510)
!4516 = !DILocation(line: 538, column: 55, scope: !4510)
!4517 = !DILocation(line: 543, column: 5, scope: !4476)
!4518 = !DILocation(line: 543, column: 48, scope: !4476)
!4519 = !DILocation(line: 543, column: 61, scope: !4476)
!4520 = !DILocation(line: 546, column: 5, scope: !4476)
!4521 = !DILocation(line: 546, column: 47, scope: !4476)
!4522 = !DILocation(line: 546, column: 59, scope: !4476)
!4523 = !DILocation(line: 549, column: 5, scope: !4476)
!4524 = !DILocation(line: 550, column: 1, scope: !4476)
!4525 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !346, file: !346, line: 554, type: !4526, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4528)
!4526 = !DISubroutineType(types: !4527)
!4527 = !{!4095, !4072, !444}
!4528 = !{!4529, !4530, !4531, !4532}
!4529 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4525, file: !346, line: 554, type: !4072)
!4530 = !DILocalVariable(name: "driving", arg: 2, scope: !4525, file: !346, line: 554, type: !444)
!4531 = !DILocalVariable(name: "no", scope: !4525, file: !346, line: 556, type: !61)
!4532 = !DILocalVariable(name: "remainder", scope: !4525, file: !346, line: 557, type: !61)
!4533 = !DILocation(line: 0, scope: !4525)
!4534 = !DILocation(line: 559, column: 19, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4525, file: !346, line: 559, column: 9)
!4536 = !DILocation(line: 559, column: 9, scope: !4525)
!4537 = !DILocation(line: 564, column: 19, scope: !4525)
!4538 = !DILocation(line: 569, column: 102, scope: !4525)
!4539 = !DILocation(line: 569, column: 88, scope: !4525)
!4540 = !DILocation(line: 569, column: 5, scope: !4525)
!4541 = !DILocation(line: 569, column: 47, scope: !4525)
!4542 = !DILocation(line: 569, column: 60, scope: !4525)
!4543 = !DILocation(line: 570, column: 71, scope: !4525)
!4544 = !DILocation(line: 570, column: 5, scope: !4525)
!4545 = !DILocation(line: 570, column: 47, scope: !4525)
!4546 = !DILocation(line: 570, column: 60, scope: !4525)
!4547 = !DILocation(line: 571, column: 5, scope: !4525)
!4548 = !DILocation(line: 572, column: 1, scope: !4525)
!4549 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !346, file: !346, line: 575, type: !4550, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4553)
!4550 = !DISubroutineType(types: !4551)
!4551 = !{!4095, !4072, !4552}
!4552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 32)
!4553 = !{!4554, !4555, !4556, !4557, !4558}
!4554 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4549, file: !346, line: 575, type: !4072)
!4555 = !DILocalVariable(name: "driving", arg: 2, scope: !4549, file: !346, line: 575, type: !4552)
!4556 = !DILocalVariable(name: "no", scope: !4549, file: !346, line: 577, type: !61)
!4557 = !DILocalVariable(name: "remainder", scope: !4549, file: !346, line: 578, type: !61)
!4558 = !DILocalVariable(name: "temp", scope: !4549, file: !346, line: 579, type: !61)
!4559 = !DILocation(line: 0, scope: !4549)
!4560 = !DILocation(line: 581, column: 19, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4549, file: !346, line: 581, column: 9)
!4562 = !DILocation(line: 581, column: 9, scope: !4549)
!4563 = !DILocation(line: 585, column: 14, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4549, file: !346, line: 585, column: 9)
!4565 = !DILocation(line: 585, column: 9, scope: !4549)
!4566 = !DILocation(line: 590, column: 19, scope: !4549)
!4567 = !DILocation(line: 595, column: 12, scope: !4549)
!4568 = !DILocation(line: 595, column: 54, scope: !4549)
!4569 = !DILocation(line: 596, column: 59, scope: !4549)
!4570 = !DILocation(line: 596, column: 45, scope: !4549)
!4571 = !DILocation(line: 596, column: 17, scope: !4549)
!4572 = !DILocation(line: 597, column: 18, scope: !4549)
!4573 = !DILocation(line: 600, column: 56, scope: !4549)
!4574 = !DILocation(line: 600, column: 14, scope: !4549)
!4575 = !DILocation(line: 602, column: 5, scope: !4549)
!4576 = !DILocation(line: 603, column: 1, scope: !4549)
!4577 = distinct !DISubprogram(name: "uart_receive_handler", scope: !629, file: !629, line: 146, type: !4578, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4580)
!4578 = !DISubroutineType(types: !4579)
!4579 = !{null, !735, !91}
!4580 = !{!4581, !4582, !4583, !4585, !4586, !4587, !4588, !4644}
!4581 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4577, file: !629, line: 146, type: !735)
!4582 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !4577, file: !629, line: 146, type: !91)
!4583 = !DILocalVariable(name: "channel", scope: !4577, file: !629, line: 148, type: !4584)
!4584 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !639, line: 203, baseType: !638)
!4585 = !DILocalVariable(name: "avail_bytes", scope: !4577, file: !629, line: 149, type: !61)
!4586 = !DILocalVariable(name: "callback", scope: !4577, file: !629, line: 150, type: !744)
!4587 = !DILocalVariable(name: "arg", scope: !4577, file: !629, line: 151, type: !88)
!4588 = !DILocalVariable(name: "uartx", scope: !4577, file: !629, line: 152, type: !4589)
!4589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4590, size: 32)
!4590 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !4591)
!4591 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !4592)
!4592 = !{!4593, !4599, !4604, !4610, !4611, !4616, !4621, !4622, !4627, !4628, !4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636, !4637, !4638, !4639, !4640, !4641, !4642, !4643}
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !4591, file: !56, line: 547, baseType: !4594, size: 32)
!4594 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4591, file: !56, line: 543, size: 32, elements: !4595)
!4595 = !{!4596, !4597, !4598}
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !4594, file: !56, line: 544, baseType: !272, size: 32)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !4594, file: !56, line: 545, baseType: !60, size: 32)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !4594, file: !56, line: 546, baseType: !60, size: 32)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !4591, file: !56, line: 551, baseType: !4600, size: 32, offset: 32)
!4600 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4591, file: !56, line: 548, size: 32, elements: !4601)
!4601 = !{!4602, !4603}
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !4600, file: !56, line: 549, baseType: !60, size: 32)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !4600, file: !56, line: 550, baseType: !60, size: 32)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !4591, file: !56, line: 556, baseType: !4605, size: 32, offset: 64)
!4605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4591, file: !56, line: 552, size: 32, elements: !4606)
!4606 = !{!4607, !4608, !4609}
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !4605, file: !56, line: 553, baseType: !272, size: 32)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !4605, file: !56, line: 554, baseType: !60, size: 32)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !4605, file: !56, line: 555, baseType: !60, size: 32)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !4591, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !4591, file: !56, line: 561, baseType: !4612, size: 32, offset: 128)
!4612 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4591, file: !56, line: 558, size: 32, elements: !4613)
!4613 = !{!4614, !4615}
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !4612, file: !56, line: 559, baseType: !60, size: 32)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !4612, file: !56, line: 560, baseType: !60, size: 32)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !4591, file: !56, line: 565, baseType: !4617, size: 32, offset: 160)
!4617 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4591, file: !56, line: 562, size: 32, elements: !4618)
!4618 = !{!4619, !4620}
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !4617, file: !56, line: 563, baseType: !272, size: 32)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !4617, file: !56, line: 564, baseType: !60, size: 32)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !4591, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !4591, file: !56, line: 570, baseType: !4623, size: 32, offset: 224)
!4623 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4591, file: !56, line: 567, size: 32, elements: !4624)
!4624 = !{!4625, !4626}
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !4623, file: !56, line: 568, baseType: !60, size: 32)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !4623, file: !56, line: 569, baseType: !60, size: 32)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !4591, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !4591, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !4591, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !4591, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !4591, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !4591, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !4591, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !4591, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !4591, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !4591, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !4591, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !4591, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !4591, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !4591, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !4591, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !4591, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !4591, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!4644 = !DILocalVariable(name: "status", scope: !4577, file: !629, line: 153, type: !4645)
!4645 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !639, line: 211, baseType: !659)
!4646 = !DILocation(line: 0, scope: !4577)
!4647 = !DILocation(line: 149, column: 5, scope: !4577)
!4648 = !DILocation(line: 155, column: 9, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4577, file: !629, line: 155, column: 9)
!4650 = !DILocation(line: 155, column: 36, scope: !4649)
!4651 = !DILocation(line: 155, column: 9, scope: !4577)
!4652 = !DILocation(line: 156, column: 9, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4649, file: !629, line: 155, column: 70)
!4654 = !DILocation(line: 160, column: 13, scope: !4577)
!4655 = !DILocation(line: 161, column: 15, scope: !4577)
!4656 = !DILocation(line: 163, column: 9, scope: !4577)
!4657 = !DILocation(line: 164, column: 9, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !629, line: 163, column: 29)
!4659 = distinct !DILexicalBlock(scope: !4577, file: !629, line: 163, column: 9)
!4660 = !DILocation(line: 165, column: 5, scope: !4658)
!4661 = !DILocation(line: 167, column: 14, scope: !4577)
!4662 = !DILocation(line: 168, column: 16, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4577, file: !629, line: 168, column: 9)
!4664 = !DILocation(line: 168, column: 9, scope: !4577)
!4665 = !DILocation(line: 169, column: 9, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4663, file: !629, line: 168, column: 28)
!4667 = !DILocation(line: 172, column: 9, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4577, file: !629, line: 172, column: 9)
!4669 = !DILocation(line: 172, column: 21, scope: !4668)
!4670 = !DILocation(line: 172, column: 9, scope: !4577)
!4671 = !DILocation(line: 176, column: 43, scope: !4577)
!4672 = !DILocation(line: 178, column: 18, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4577, file: !629, line: 178, column: 9)
!4674 = !DILocation(line: 178, column: 9, scope: !4577)
!4675 = !DILocation(line: 179, column: 9, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4673, file: !629, line: 178, column: 27)
!4677 = !DILocation(line: 177, column: 38, scope: !4577)
!4678 = !DILocation(line: 183, column: 5, scope: !4577)
!4679 = !DILocation(line: 184, column: 5, scope: !4577)
!4680 = !DILocation(line: 185, column: 5, scope: !4577)
!4681 = !DILocation(line: 187, column: 14, scope: !4577)
!4682 = !DILocation(line: 188, column: 16, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4577, file: !629, line: 188, column: 9)
!4684 = !DILocation(line: 188, column: 9, scope: !4577)
!4685 = !DILocation(line: 189, column: 9, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4683, file: !629, line: 188, column: 28)
!4687 = !DILocation(line: 192, column: 9, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4577, file: !629, line: 192, column: 9)
!4689 = !DILocation(line: 192, column: 53, scope: !4688)
!4690 = !DILocation(line: 192, column: 21, scope: !4688)
!4691 = !DILocation(line: 192, column: 9, scope: !4577)
!4692 = !DILocation(line: 193, column: 18, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4688, file: !629, line: 192, column: 83)
!4694 = !DILocation(line: 194, column: 20, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4693, file: !629, line: 194, column: 13)
!4696 = !DILocation(line: 194, column: 13, scope: !4693)
!4697 = !DILocation(line: 195, column: 13, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4695, file: !629, line: 194, column: 32)
!4699 = !DILocation(line: 199, column: 1, scope: !4577)
!4700 = distinct !DISubprogram(name: "uart_send_handler", scope: !629, file: !629, line: 210, type: !4578, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4701)
!4701 = !{!4702, !4703, !4704, !4705, !4706, !4707, !4708, !4709}
!4702 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4700, file: !629, line: 210, type: !735)
!4703 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !4700, file: !629, line: 210, type: !91)
!4704 = !DILocalVariable(name: "channel", scope: !4700, file: !629, line: 212, type: !4584)
!4705 = !DILocalVariable(name: "status", scope: !4700, file: !629, line: 213, type: !4645)
!4706 = !DILocalVariable(name: "compare_space", scope: !4700, file: !629, line: 214, type: !61)
!4707 = !DILocalVariable(name: "avail_space", scope: !4700, file: !629, line: 214, type: !61)
!4708 = !DILocalVariable(name: "callback", scope: !4700, file: !629, line: 215, type: !744)
!4709 = !DILocalVariable(name: "arg", scope: !4700, file: !629, line: 216, type: !88)
!4710 = !DILocation(line: 0, scope: !4700)
!4711 = !DILocation(line: 214, column: 5, scope: !4700)
!4712 = !DILocation(line: 221, column: 9, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4700, file: !629, line: 221, column: 9)
!4714 = !DILocation(line: 221, column: 36, scope: !4713)
!4715 = !DILocation(line: 221, column: 9, scope: !4700)
!4716 = !DILocation(line: 222, column: 9, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4713, file: !629, line: 221, column: 70)
!4718 = !DILocation(line: 226, column: 15, scope: !4700)
!4719 = !DILocation(line: 228, column: 9, scope: !4700)
!4720 = !DILocation(line: 253, column: 47, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !629, line: 252, column: 12)
!4722 = distinct !DILexicalBlock(scope: !4700, file: !629, line: 228, column: 9)
!4723 = !DILocation(line: 255, column: 22, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4721, file: !629, line: 255, column: 13)
!4725 = !DILocation(line: 255, column: 13, scope: !4721)
!4726 = !DILocation(line: 256, column: 13, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4724, file: !629, line: 255, column: 31)
!4728 = !DILocation(line: 254, column: 42, scope: !4721)
!4729 = !DILocation(line: 260, column: 9, scope: !4721)
!4730 = !DILocation(line: 261, column: 9, scope: !4721)
!4731 = !DILocation(line: 262, column: 9, scope: !4721)
!4732 = !DILocation(line: 264, column: 18, scope: !4721)
!4733 = !DILocation(line: 265, column: 20, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4721, file: !629, line: 265, column: 13)
!4735 = !DILocation(line: 265, column: 13, scope: !4721)
!4736 = !DILocation(line: 266, column: 13, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4734, file: !629, line: 265, column: 32)
!4738 = !DILocation(line: 269, column: 54, scope: !4721)
!4739 = !DILocation(line: 270, column: 56, scope: !4721)
!4740 = !DILocation(line: 270, column: 25, scope: !4721)
!4741 = !DILocation(line: 271, column: 13, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4721, file: !629, line: 271, column: 13)
!4743 = !DILocation(line: 271, column: 25, scope: !4742)
!4744 = !DILocation(line: 271, column: 13, scope: !4721)
!4745 = !DILocation(line: 272, column: 22, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4742, file: !629, line: 271, column: 43)
!4747 = !DILocation(line: 273, column: 24, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4746, file: !629, line: 273, column: 17)
!4749 = !DILocation(line: 273, column: 17, scope: !4746)
!4750 = !DILocation(line: 274, column: 17, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4748, file: !629, line: 273, column: 36)
!4752 = !DILocation(line: 279, column: 1, scope: !4700)
!4753 = distinct !DISubprogram(name: "uart_error_handler", scope: !629, file: !629, line: 282, type: !4754, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4756)
!4754 = !DISubroutineType(types: !4755)
!4755 = !{null, !735}
!4756 = !{!4757, !4758, !4759, !4760}
!4757 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4753, file: !629, line: 282, type: !735)
!4758 = !DILocalVariable(name: "uartx", scope: !4753, file: !629, line: 284, type: !4589)
!4759 = !DILocalVariable(name: "callback", scope: !4753, file: !629, line: 285, type: !744)
!4760 = !DILocalVariable(name: "arg", scope: !4753, file: !629, line: 286, type: !88)
!4761 = !DILocation(line: 0, scope: !4753)
!4762 = !DILocation(line: 288, column: 13, scope: !4753)
!4763 = !DILocation(line: 290, column: 10, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4753, file: !629, line: 290, column: 9)
!4765 = !DILocation(line: 290, column: 9, scope: !4753)
!4766 = !DILocation(line: 291, column: 9, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4764, file: !629, line: 290, column: 36)
!4768 = !DILocation(line: 292, column: 9, scope: !4767)
!4769 = !DILocation(line: 293, column: 47, scope: !4767)
!4770 = !DILocation(line: 295, column: 22, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4767, file: !629, line: 295, column: 13)
!4772 = !DILocation(line: 295, column: 13, scope: !4767)
!4773 = !DILocation(line: 296, column: 13, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4771, file: !629, line: 295, column: 31)
!4775 = !DILocation(line: 294, column: 42, scope: !4767)
!4776 = !DILocation(line: 299, column: 9, scope: !4767)
!4777 = !DILocation(line: 300, column: 5, scope: !4767)
!4778 = !DILocation(line: 301, column: 1, scope: !4753)
!4779 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !629, file: !629, line: 416, type: !4780, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4784)
!4780 = !DISubroutineType(types: !4781)
!4781 = !{!4782, !735, !4783}
!4782 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !654, line: 351, baseType: !670)
!4783 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !654, line: 317, baseType: !677)
!4784 = !{!4785, !4786, !4787, !4788, !4789}
!4785 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4779, file: !629, line: 416, type: !735)
!4786 = !DILocalVariable(name: "baudrate", arg: 2, scope: !4779, file: !629, line: 416, type: !4783)
!4787 = !DILocalVariable(name: "actual_baudrate", scope: !4779, file: !629, line: 418, type: !61)
!4788 = !DILocalVariable(name: "irq_status", scope: !4779, file: !629, line: 418, type: !61)
!4789 = !DILocalVariable(name: "uartx", scope: !4779, file: !629, line: 419, type: !4589)
!4790 = !DILocation(line: 0, scope: !4779)
!4791 = !DILocation(line: 421, column: 11, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4779, file: !629, line: 421, column: 9)
!4793 = !DILocation(line: 421, column: 42, scope: !4792)
!4794 = !DILocation(line: 422, column: 11, scope: !4792)
!4795 = !DILocation(line: 421, column: 9, scope: !4779)
!4796 = !DILocation(line: 426, column: 9, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4779, file: !629, line: 426, column: 9)
!4798 = !DILocation(line: 426, column: 36, scope: !4797)
!4799 = !DILocation(line: 426, column: 9, scope: !4779)
!4800 = !DILocation(line: 430, column: 18, scope: !4779)
!4801 = !DILocation(line: 434, column: 5, scope: !4779)
!4802 = !DILocation(line: 436, column: 13, scope: !4779)
!4803 = !DILocation(line: 437, column: 23, scope: !4779)
!4804 = !DILocation(line: 439, column: 5, scope: !4779)
!4805 = !DILocation(line: 441, column: 5, scope: !4779)
!4806 = !DILocation(line: 442, column: 1, scope: !4779)
!4807 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !629, file: !629, line: 120, type: !4808, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4810)
!4808 = !DISubroutineType(types: !4809)
!4809 = !{!91, !735}
!4810 = !{!4811}
!4811 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4807, file: !629, line: 120, type: !735)
!4812 = !DILocation(line: 0, scope: !4807)
!4813 = !DILocation(line: 122, column: 23, scope: !4807)
!4814 = !DILocation(line: 122, column: 5, scope: !4807)
!4815 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !629, file: !629, line: 125, type: !4816, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4818)
!4816 = !DISubroutineType(types: !4817)
!4817 = !{!91, !4783}
!4818 = !{!4819}
!4819 = !DILocalVariable(name: "baudrate", arg: 1, scope: !4815, file: !629, line: 125, type: !4783)
!4820 = !DILocation(line: 0, scope: !4815)
!4821 = !DILocation(line: 127, column: 22, scope: !4815)
!4822 = !DILocation(line: 127, column: 5, scope: !4815)
!4823 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !629, file: !629, line: 444, type: !4824, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4838)
!4824 = !DISubroutineType(types: !4825)
!4825 = !{!4782, !735, !4826}
!4826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4827, size: 32)
!4827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4828)
!4828 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !654, line: 378, baseType: !4829)
!4829 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 373, size: 128, elements: !4830)
!4830 = !{!4831, !4832, !4834, !4836}
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !4829, file: !654, line: 374, baseType: !4783, size: 32)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !4829, file: !654, line: 375, baseType: !4833, size: 32, offset: 32)
!4833 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !654, line: 326, baseType: !693)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !4829, file: !654, line: 376, baseType: !4835, size: 32, offset: 64)
!4835 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !654, line: 333, baseType: !699)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4829, file: !654, line: 377, baseType: !4837, size: 32, offset: 96)
!4837 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !654, line: 341, baseType: !703)
!4838 = !{!4839, !4840, !4841, !4842}
!4839 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4823, file: !629, line: 444, type: !735)
!4840 = !DILocalVariable(name: "config", arg: 2, scope: !4823, file: !629, line: 445, type: !4826)
!4841 = !DILocalVariable(name: "irq_status", scope: !4823, file: !629, line: 447, type: !61)
!4842 = !DILocalVariable(name: "uartx", scope: !4823, file: !629, line: 448, type: !4589)
!4843 = !DILocation(line: 0, scope: !4823)
!4844 = !DILocation(line: 450, column: 11, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4823, file: !629, line: 450, column: 9)
!4846 = !DILocation(line: 450, column: 42, scope: !4845)
!4847 = !DILocation(line: 451, column: 11, scope: !4845)
!4848 = !DILocation(line: 450, column: 9, scope: !4823)
!4849 = !DILocation(line: 455, column: 9, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4823, file: !629, line: 455, column: 9)
!4851 = !DILocation(line: 455, column: 36, scope: !4850)
!4852 = !DILocation(line: 455, column: 9, scope: !4823)
!4853 = !DILocation(line: 459, column: 18, scope: !4823)
!4854 = !DILocation(line: 466, column: 5, scope: !4823)
!4855 = !DILocation(line: 468, column: 13, scope: !4823)
!4856 = !DILocation(line: 470, column: 46, scope: !4823)
!4857 = !DILocation(line: 470, column: 5, scope: !4823)
!4858 = !DILocation(line: 471, column: 36, scope: !4823)
!4859 = !DILocation(line: 471, column: 57, scope: !4823)
!4860 = !DILocation(line: 471, column: 75, scope: !4823)
!4861 = !DILocation(line: 471, column: 5, scope: !4823)
!4862 = !DILocation(line: 473, column: 5, scope: !4823)
!4863 = !DILocation(line: 474, column: 1, scope: !4823)
!4864 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !629, file: !629, line: 130, type: !4865, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4867)
!4865 = !DISubroutineType(types: !4866)
!4866 = !{!91, !4826}
!4867 = !{!4868}
!4868 = !DILocalVariable(name: "config", arg: 1, scope: !4864, file: !629, line: 130, type: !4826)
!4869 = !DILocation(line: 0, scope: !4864)
!4870 = !DILocation(line: 132, column: 22, scope: !4864)
!4871 = !DILocation(line: 132, column: 31, scope: !4864)
!4872 = !DILocation(line: 132, column: 56, scope: !4864)
!4873 = !DILocation(line: 133, column: 22, scope: !4864)
!4874 = !DILocation(line: 133, column: 34, scope: !4864)
!4875 = !DILocation(line: 133, column: 61, scope: !4864)
!4876 = !DILocation(line: 134, column: 22, scope: !4864)
!4877 = !DILocation(line: 134, column: 31, scope: !4864)
!4878 = !DILocation(line: 134, column: 55, scope: !4864)
!4879 = !DILocation(line: 135, column: 22, scope: !4864)
!4880 = !DILocation(line: 135, column: 29, scope: !4864)
!4881 = !DILocation(line: 132, column: 5, scope: !4864)
!4882 = distinct !DISubprogram(name: "hal_uart_init", scope: !629, file: !629, line: 476, type: !4883, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4886)
!4883 = !DISubroutineType(types: !4884)
!4884 = !{!4782, !735, !4885}
!4885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4828, size: 32)
!4886 = !{!4887, !4888, !4889, !4890, !4891, !4892, !4893}
!4887 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4882, file: !629, line: 476, type: !735)
!4888 = !DILocalVariable(name: "uart_config", arg: 2, scope: !4882, file: !629, line: 476, type: !4885)
!4889 = !DILocalVariable(name: "uartx", scope: !4882, file: !629, line: 478, type: !4589)
!4890 = !DILocalVariable(name: "i", scope: !4882, file: !629, line: 479, type: !61)
!4891 = !DILocalVariable(name: "actual_baudrate", scope: !4882, file: !629, line: 479, type: !61)
!4892 = !DILocalVariable(name: "irq_status", scope: !4882, file: !629, line: 479, type: !61)
!4893 = !DILocalVariable(name: "status", scope: !4882, file: !629, line: 480, type: !4894)
!4894 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !709, line: 106, baseType: !708)
!4895 = !DILocation(line: 0, scope: !4882)
!4896 = !DILocation(line: 482, column: 11, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4882, file: !629, line: 482, column: 9)
!4898 = !DILocation(line: 482, column: 42, scope: !4897)
!4899 = !DILocation(line: 483, column: 11, scope: !4897)
!4900 = !DILocation(line: 482, column: 9, scope: !4882)
!4901 = !DILocation(line: 487, column: 18, scope: !4882)
!4902 = !DILocation(line: 488, column: 9, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4882, file: !629, line: 488, column: 9)
!4904 = !DILocation(line: 488, column: 36, scope: !4903)
!4905 = !DILocation(line: 488, column: 9, scope: !4882)
!4906 = !DILocation(line: 489, column: 9, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4903, file: !629, line: 488, column: 68)
!4908 = !DILocation(line: 490, column: 9, scope: !4907)
!4909 = !DILocation(line: 502, column: 9, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4882, file: !629, line: 502, column: 9)
!4911 = !DILocation(line: 502, column: 9, scope: !4882)
!4912 = !DILocation(line: 504, column: 13, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4914, file: !629, line: 503, column: 44)
!4914 = distinct !DILexicalBlock(scope: !4915, file: !629, line: 503, column: 9)
!4915 = distinct !DILexicalBlock(scope: !4916, file: !629, line: 503, column: 9)
!4916 = distinct !DILexicalBlock(scope: !4910, file: !629, line: 502, column: 50)
!4917 = !DILocation(line: 504, column: 32, scope: !4913)
!4918 = !DILocation(line: 510, column: 32, scope: !4913)
!4919 = !DILocation(line: 510, column: 36, scope: !4913)
!4920 = !DILocation(line: 511, column: 32, scope: !4913)
!4921 = !DILocation(line: 511, column: 37, scope: !4913)
!4922 = !DILocation(line: 503, column: 40, scope: !4914)
!4923 = !DILocation(line: 503, column: 23, scope: !4914)
!4924 = !DILocation(line: 503, column: 9, scope: !4915)
!4925 = distinct !{!4925, !4924, !4926}
!4926 = !DILocation(line: 512, column: 9, scope: !4915)
!4927 = !DILocation(line: 513, column: 40, scope: !4916)
!4928 = !DILocation(line: 514, column: 5, scope: !4916)
!4929 = !DILocation(line: 521, column: 32, scope: !4882)
!4930 = !DILocation(line: 522, column: 5, scope: !4882)
!4931 = !DILocation(line: 524, column: 31, scope: !4882)
!4932 = !DILocation(line: 524, column: 14, scope: !4882)
!4933 = !DILocation(line: 525, column: 16, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4882, file: !629, line: 525, column: 9)
!4935 = !DILocation(line: 525, column: 9, scope: !4882)
!4936 = !DILocation(line: 526, column: 9, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4934, file: !629, line: 525, column: 40)
!4938 = !DILocation(line: 530, column: 13, scope: !4882)
!4939 = !DILocation(line: 532, column: 5, scope: !4882)
!4940 = !DILocation(line: 533, column: 56, scope: !4882)
!4941 = !DILocation(line: 533, column: 23, scope: !4882)
!4942 = !DILocation(line: 534, column: 5, scope: !4882)
!4943 = !DILocation(line: 535, column: 41, scope: !4882)
!4944 = !DILocation(line: 535, column: 67, scope: !4882)
!4945 = !DILocation(line: 535, column: 90, scope: !4882)
!4946 = !DILocation(line: 535, column: 5, scope: !4882)
!4947 = !DILocation(line: 536, column: 5, scope: !4882)
!4948 = !DILocation(line: 541, column: 5, scope: !4882)
!4949 = !DILocation(line: 542, column: 1, scope: !4882)
!4950 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !629, file: !629, line: 544, type: !4951, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4953)
!4951 = !DISubroutineType(types: !4952)
!4952 = !{!4782, !735}
!4953 = !{!4954, !4955, !4956, !4957, !4958, !4959, !4960}
!4954 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4950, file: !629, line: 544, type: !735)
!4955 = !DILocalVariable(name: "uartx", scope: !4950, file: !629, line: 546, type: !4589)
!4956 = !DILocalVariable(name: "tx_dma_channel", scope: !4950, file: !629, line: 547, type: !4584)
!4957 = !DILocalVariable(name: "rx_dma_channel", scope: !4950, file: !629, line: 547, type: !4584)
!4958 = !DILocalVariable(name: "irq_status", scope: !4950, file: !629, line: 548, type: !61)
!4959 = !DILocalVariable(name: "status", scope: !4950, file: !629, line: 549, type: !4645)
!4960 = !DILocalVariable(name: "clock_status", scope: !4950, file: !629, line: 550, type: !4894)
!4961 = !DILocation(line: 0, scope: !4950)
!4962 = !DILocation(line: 552, column: 10, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4950, file: !629, line: 552, column: 9)
!4964 = !DILocation(line: 552, column: 9, scope: !4950)
!4965 = !DILocation(line: 556, column: 18, scope: !4950)
!4966 = !DILocation(line: 557, column: 9, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4950, file: !629, line: 557, column: 9)
!4968 = !DILocation(line: 557, column: 36, scope: !4967)
!4969 = !DILocation(line: 557, column: 9, scope: !4950)
!4970 = !DILocation(line: 562, column: 13, scope: !4950)
!4971 = !DILocation(line: 565, column: 5, scope: !4950)
!4972 = !DILocation(line: 568, column: 9, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4950, file: !629, line: 568, column: 9)
!4974 = !DILocation(line: 568, column: 36, scope: !4973)
!4975 = !DILocation(line: 568, column: 9, scope: !4950)
!4976 = !DILocation(line: 569, column: 26, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4973, file: !629, line: 568, column: 70)
!4978 = !DILocation(line: 570, column: 26, scope: !4977)
!4979 = !DILocation(line: 572, column: 18, scope: !4977)
!4980 = !DILocation(line: 573, column: 20, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4977, file: !629, line: 573, column: 13)
!4982 = !DILocation(line: 573, column: 13, scope: !4977)
!4983 = !DILocation(line: 574, column: 13, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4981, file: !629, line: 573, column: 32)
!4985 = !DILocation(line: 575, column: 13, scope: !4984)
!4986 = !DILocation(line: 578, column: 18, scope: !4977)
!4987 = !DILocation(line: 579, column: 20, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4977, file: !629, line: 579, column: 13)
!4989 = !DILocation(line: 579, column: 13, scope: !4977)
!4990 = !DILocation(line: 580, column: 13, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4988, file: !629, line: 579, column: 32)
!4992 = !DILocation(line: 581, column: 13, scope: !4991)
!4993 = !DILocation(line: 584, column: 18, scope: !4977)
!4994 = !DILocation(line: 585, column: 20, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4977, file: !629, line: 585, column: 13)
!4996 = !DILocation(line: 585, column: 13, scope: !4977)
!4997 = !DILocation(line: 586, column: 13, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4995, file: !629, line: 585, column: 32)
!4999 = !DILocation(line: 587, column: 13, scope: !4998)
!5000 = !DILocation(line: 590, column: 18, scope: !4977)
!5001 = !DILocation(line: 591, column: 20, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4977, file: !629, line: 591, column: 13)
!5003 = !DILocation(line: 591, column: 13, scope: !4977)
!5004 = !DILocation(line: 592, column: 13, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !5002, file: !629, line: 591, column: 32)
!5006 = !DILocation(line: 593, column: 13, scope: !5005)
!5007 = !DILocation(line: 596, column: 18, scope: !4977)
!5008 = !DILocation(line: 597, column: 20, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4977, file: !629, line: 597, column: 13)
!5010 = !DILocation(line: 597, column: 13, scope: !4977)
!5011 = !DILocation(line: 598, column: 13, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5009, file: !629, line: 597, column: 32)
!5013 = !DILocation(line: 599, column: 13, scope: !5012)
!5014 = !DILocation(line: 602, column: 18, scope: !4977)
!5015 = !DILocation(line: 603, column: 20, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !4977, file: !629, line: 603, column: 13)
!5017 = !DILocation(line: 603, column: 13, scope: !4977)
!5018 = !DILocation(line: 604, column: 13, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5016, file: !629, line: 603, column: 32)
!5020 = !DILocation(line: 605, column: 13, scope: !5019)
!5021 = !DILocation(line: 608, column: 30, scope: !4977)
!5022 = !DILocation(line: 608, column: 9, scope: !4977)
!5023 = !DILocation(line: 609, column: 5, scope: !4977)
!5024 = !DILocation(line: 610, column: 5, scope: !4950)
!5025 = !DILocation(line: 611, column: 38, scope: !4950)
!5026 = !DILocation(line: 611, column: 20, scope: !4950)
!5027 = !DILocation(line: 612, column: 22, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !4950, file: !629, line: 612, column: 9)
!5029 = !DILocation(line: 612, column: 9, scope: !4950)
!5030 = !DILocation(line: 613, column: 9, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5028, file: !629, line: 612, column: 46)
!5032 = !DILocation(line: 614, column: 9, scope: !5031)
!5033 = !DILocation(line: 618, column: 32, scope: !4950)
!5034 = !DILocation(line: 618, column: 37, scope: !4950)
!5035 = !DILocation(line: 619, column: 32, scope: !4950)
!5036 = !DILocation(line: 619, column: 36, scope: !4950)
!5037 = !DILocation(line: 635, column: 32, scope: !4950)
!5038 = !DILocation(line: 639, column: 5, scope: !4950)
!5039 = !DILocation(line: 640, column: 1, scope: !4950)
!5040 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !629, file: !629, line: 642, type: !5041, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5043)
!5041 = !DISubroutineType(types: !5042)
!5042 = !{null, !735, !1630}
!5043 = !{!5044, !5045, !5046}
!5044 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5040, file: !629, line: 642, type: !735)
!5045 = !DILocalVariable(name: "byte", arg: 2, scope: !5040, file: !629, line: 642, type: !1630)
!5046 = !DILocalVariable(name: "uartx", scope: !5040, file: !629, line: 644, type: !4589)
!5047 = !DILocation(line: 0, scope: !5040)
!5048 = !DILocation(line: 646, column: 10, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5040, file: !629, line: 646, column: 9)
!5050 = !DILocation(line: 646, column: 9, scope: !5040)
!5051 = !DILocation(line: 650, column: 9, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5040, file: !629, line: 650, column: 9)
!5053 = !DILocation(line: 650, column: 36, scope: !5052)
!5054 = !DILocation(line: 650, column: 9, scope: !5040)
!5055 = !DILocation(line: 654, column: 13, scope: !5040)
!5056 = !DILocation(line: 655, column: 5, scope: !5040)
!5057 = !DILocation(line: 656, column: 1, scope: !5040)
!5058 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !629, file: !629, line: 658, type: !5059, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5063)
!5059 = !DISubroutineType(types: !5060)
!5060 = !{!61, !735, !5061, !61}
!5061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5062, size: 32)
!5062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !460)
!5063 = !{!5064, !5065, !5066, !5067}
!5064 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5058, file: !629, line: 658, type: !735)
!5065 = !DILocalVariable(name: "data", arg: 2, scope: !5058, file: !629, line: 658, type: !5061)
!5066 = !DILocalVariable(name: "size", arg: 3, scope: !5058, file: !629, line: 658, type: !61)
!5067 = !DILocalVariable(name: "i", scope: !5058, file: !629, line: 660, type: !61)
!5068 = !DILocation(line: 0, scope: !5058)
!5069 = !DILocation(line: 662, column: 11, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5058, file: !629, line: 662, column: 9)
!5071 = !DILocation(line: 662, column: 42, scope: !5070)
!5072 = !DILocation(line: 666, column: 9, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5058, file: !629, line: 666, column: 9)
!5074 = !DILocation(line: 666, column: 36, scope: !5073)
!5075 = !DILocation(line: 666, column: 9, scope: !5058)
!5076 = !DILocation(line: 671, column: 38, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5078, file: !629, line: 670, column: 32)
!5078 = distinct !DILexicalBlock(scope: !5079, file: !629, line: 670, column: 5)
!5079 = distinct !DILexicalBlock(scope: !5058, file: !629, line: 670, column: 5)
!5080 = !DILocation(line: 671, column: 9, scope: !5077)
!5081 = !DILocation(line: 672, column: 13, scope: !5077)
!5082 = !DILocation(line: 670, column: 28, scope: !5078)
!5083 = !DILocation(line: 670, column: 19, scope: !5078)
!5084 = !DILocation(line: 670, column: 5, scope: !5079)
!5085 = distinct !{!5085, !5084, !5086}
!5086 = !DILocation(line: 673, column: 5, scope: !5079)
!5087 = !DILocation(line: 676, column: 1, scope: !5058)
!5088 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !629, file: !629, line: 678, type: !5059, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5089)
!5089 = !{!5090, !5091, !5092, !5093, !5094, !5095, !5096, !5097}
!5090 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5088, file: !629, line: 678, type: !735)
!5091 = !DILocalVariable(name: "data", arg: 2, scope: !5088, file: !629, line: 678, type: !5061)
!5092 = !DILocalVariable(name: "size", arg: 3, scope: !5088, file: !629, line: 678, type: !61)
!5093 = !DILocalVariable(name: "channel", scope: !5088, file: !629, line: 680, type: !4584)
!5094 = !DILocalVariable(name: "i", scope: !5088, file: !629, line: 681, type: !61)
!5095 = !DILocalVariable(name: "real_count", scope: !5088, file: !629, line: 681, type: !61)
!5096 = !DILocalVariable(name: "avail_space", scope: !5088, file: !629, line: 681, type: !61)
!5097 = !DILocalVariable(name: "status", scope: !5088, file: !629, line: 682, type: !4645)
!5098 = !DILocation(line: 0, scope: !5088)
!5099 = !DILocation(line: 681, column: 5, scope: !5088)
!5100 = !DILocation(line: 687, column: 11, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5088, file: !629, line: 687, column: 9)
!5102 = !DILocation(line: 687, column: 42, scope: !5101)
!5103 = !DILocation(line: 691, column: 9, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5088, file: !629, line: 691, column: 9)
!5105 = !DILocation(line: 691, column: 36, scope: !5104)
!5106 = !DILocation(line: 691, column: 9, scope: !5088)
!5107 = !DILocation(line: 704, column: 15, scope: !5088)
!5108 = !DILocation(line: 706, column: 14, scope: !5088)
!5109 = !DILocation(line: 707, column: 16, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5088, file: !629, line: 707, column: 9)
!5111 = !DILocation(line: 707, column: 9, scope: !5088)
!5112 = !DILocation(line: 708, column: 9, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5110, file: !629, line: 707, column: 28)
!5114 = !DILocation(line: 712, column: 9, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5088, file: !629, line: 712, column: 9)
!5116 = !DILocation(line: 712, column: 21, scope: !5115)
!5117 = !DILocation(line: 717, column: 19, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5119, file: !629, line: 717, column: 5)
!5119 = distinct !DILexicalBlock(scope: !5088, file: !629, line: 717, column: 5)
!5120 = !DILocation(line: 717, column: 5, scope: !5119)
!5121 = distinct !{!5121, !5120, !5122}
!5122 = !DILocation(line: 723, column: 5, scope: !5119)
!5123 = !DILocation(line: 718, column: 42, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5118, file: !629, line: 717, column: 38)
!5125 = !DILocation(line: 718, column: 18, scope: !5124)
!5126 = !DILocation(line: 719, column: 20, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5124, file: !629, line: 719, column: 13)
!5128 = !DILocation(line: 717, column: 34, scope: !5118)
!5129 = !DILocation(line: 719, column: 13, scope: !5124)
!5130 = !DILocation(line: 720, column: 13, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5127, file: !629, line: 719, column: 32)
!5132 = !DILocation(line: 728, column: 23, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5088, file: !629, line: 728, column: 9)
!5134 = !DILocation(line: 728, column: 20, scope: !5133)
!5135 = !DILocation(line: 728, column: 9, scope: !5088)
!5136 = !DILocation(line: 729, column: 18, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5133, file: !629, line: 728, column: 36)
!5138 = !DILocation(line: 730, column: 20, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5137, file: !629, line: 730, column: 13)
!5140 = !DILocation(line: 730, column: 13, scope: !5137)
!5141 = !DILocation(line: 731, column: 13, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5139, file: !629, line: 730, column: 32)
!5143 = !DILocation(line: 737, column: 1, scope: !5088)
!5144 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !629, file: !629, line: 739, type: !5145, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5147)
!5145 = !DISubroutineType(types: !5146)
!5146 = !{!1630, !735}
!5147 = !{!5148, !5149, !5150}
!5148 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5144, file: !629, line: 739, type: !735)
!5149 = !DILocalVariable(name: "data", scope: !5144, file: !629, line: 741, type: !1630)
!5150 = !DILocalVariable(name: "uartx", scope: !5144, file: !629, line: 742, type: !4589)
!5151 = !DILocation(line: 0, scope: !5144)
!5152 = !DILocation(line: 744, column: 10, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5144, file: !629, line: 744, column: 9)
!5154 = !DILocation(line: 744, column: 9, scope: !5144)
!5155 = !DILocation(line: 748, column: 9, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5144, file: !629, line: 748, column: 9)
!5157 = !DILocation(line: 748, column: 36, scope: !5156)
!5158 = !DILocation(line: 748, column: 9, scope: !5144)
!5159 = !DILocation(line: 752, column: 13, scope: !5144)
!5160 = !DILocation(line: 754, column: 12, scope: !5144)
!5161 = !DILocation(line: 756, column: 5, scope: !5144)
!5162 = !DILocation(line: 757, column: 1, scope: !5144)
!5163 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !629, file: !629, line: 759, type: !5164, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5166)
!5164 = !DISubroutineType(types: !5165)
!5165 = !{!61, !735}
!5166 = !{!5167, !5168, !5169}
!5167 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5163, file: !629, line: 759, type: !735)
!5168 = !DILocalVariable(name: "data", scope: !5163, file: !629, line: 761, type: !61)
!5169 = !DILocalVariable(name: "uartx", scope: !5163, file: !629, line: 762, type: !4589)
!5170 = !DILocation(line: 0, scope: !5163)
!5171 = !DILocation(line: 764, column: 10, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5163, file: !629, line: 764, column: 9)
!5173 = !DILocation(line: 764, column: 9, scope: !5163)
!5174 = !DILocation(line: 768, column: 9, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5163, file: !629, line: 768, column: 9)
!5176 = !DILocation(line: 768, column: 36, scope: !5175)
!5177 = !DILocation(line: 768, column: 9, scope: !5163)
!5178 = !DILocation(line: 772, column: 13, scope: !5163)
!5179 = !DILocation(line: 774, column: 12, scope: !5163)
!5180 = !DILocation(line: 776, column: 5, scope: !5163)
!5181 = !DILocation(line: 777, column: 1, scope: !5163)
!5182 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !629, file: !629, line: 779, type: !5183, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5185)
!5183 = !DISubroutineType(types: !5184)
!5184 = !{!61, !735, !762, !61}
!5185 = !{!5186, !5187, !5188, !5189, !5190}
!5186 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5182, file: !629, line: 779, type: !735)
!5187 = !DILocalVariable(name: "buffer", arg: 2, scope: !5182, file: !629, line: 779, type: !762)
!5188 = !DILocalVariable(name: "size", arg: 3, scope: !5182, file: !629, line: 779, type: !61)
!5189 = !DILocalVariable(name: "i", scope: !5182, file: !629, line: 781, type: !61)
!5190 = !DILocalVariable(name: "pbuf", scope: !5182, file: !629, line: 782, type: !762)
!5191 = !DILocation(line: 0, scope: !5182)
!5192 = !DILocation(line: 784, column: 11, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5182, file: !629, line: 784, column: 9)
!5194 = !DILocation(line: 784, column: 42, scope: !5193)
!5195 = !DILocation(line: 789, column: 9, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5182, file: !629, line: 789, column: 9)
!5197 = !DILocation(line: 789, column: 36, scope: !5196)
!5198 = !DILocation(line: 789, column: 9, scope: !5182)
!5199 = !DILocation(line: 794, column: 19, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5201, file: !629, line: 793, column: 32)
!5201 = distinct !DILexicalBlock(scope: !5202, file: !629, line: 793, column: 5)
!5202 = distinct !DILexicalBlock(scope: !5182, file: !629, line: 793, column: 5)
!5203 = !DILocation(line: 794, column: 9, scope: !5200)
!5204 = !DILocation(line: 794, column: 17, scope: !5200)
!5205 = !DILocation(line: 793, column: 28, scope: !5201)
!5206 = !DILocation(line: 793, column: 19, scope: !5201)
!5207 = !DILocation(line: 793, column: 5, scope: !5202)
!5208 = distinct !{!5208, !5207, !5209}
!5209 = !DILocation(line: 795, column: 5, scope: !5202)
!5210 = !DILocation(line: 798, column: 1, scope: !5182)
!5211 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !629, file: !629, line: 800, type: !5183, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5212)
!5212 = !{!5213, !5214, !5215, !5216, !5217, !5218, !5219, !5220}
!5213 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5211, file: !629, line: 800, type: !735)
!5214 = !DILocalVariable(name: "buffer", arg: 2, scope: !5211, file: !629, line: 800, type: !762)
!5215 = !DILocalVariable(name: "size", arg: 3, scope: !5211, file: !629, line: 800, type: !61)
!5216 = !DILocalVariable(name: "channel", scope: !5211, file: !629, line: 802, type: !4584)
!5217 = !DILocalVariable(name: "receive_count", scope: !5211, file: !629, line: 803, type: !61)
!5218 = !DILocalVariable(name: "avail_count", scope: !5211, file: !629, line: 803, type: !61)
!5219 = !DILocalVariable(name: "index", scope: !5211, file: !629, line: 804, type: !61)
!5220 = !DILocalVariable(name: "status", scope: !5211, file: !629, line: 805, type: !4645)
!5221 = !DILocation(line: 0, scope: !5211)
!5222 = !DILocation(line: 803, column: 5, scope: !5211)
!5223 = !DILocation(line: 807, column: 11, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5211, file: !629, line: 807, column: 9)
!5225 = !DILocation(line: 807, column: 42, scope: !5224)
!5226 = !DILocation(line: 813, column: 9, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5211, file: !629, line: 813, column: 9)
!5228 = !DILocation(line: 813, column: 36, scope: !5227)
!5229 = !DILocation(line: 813, column: 9, scope: !5211)
!5230 = !DILocation(line: 817, column: 15, scope: !5211)
!5231 = !DILocation(line: 819, column: 14, scope: !5211)
!5232 = !DILocation(line: 820, column: 16, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5211, file: !629, line: 820, column: 9)
!5234 = !DILocation(line: 820, column: 9, scope: !5211)
!5235 = !DILocation(line: 821, column: 9, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5233, file: !629, line: 820, column: 28)
!5237 = !DILocation(line: 825, column: 9, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5211, file: !629, line: 825, column: 9)
!5239 = !DILocation(line: 825, column: 21, scope: !5238)
!5240 = !DILocation(line: 830, column: 27, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5242, file: !629, line: 830, column: 5)
!5242 = distinct !DILexicalBlock(scope: !5211, file: !629, line: 830, column: 5)
!5243 = !DILocation(line: 830, column: 5, scope: !5242)
!5244 = distinct !{!5244, !5243, !5245}
!5245 = !DILocation(line: 836, column: 5, scope: !5242)
!5246 = !DILocation(line: 831, column: 42, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5241, file: !629, line: 830, column: 53)
!5248 = !DILocation(line: 831, column: 18, scope: !5247)
!5249 = !DILocation(line: 832, column: 20, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5247, file: !629, line: 832, column: 13)
!5251 = !DILocation(line: 830, column: 49, scope: !5241)
!5252 = !DILocation(line: 832, column: 13, scope: !5247)
!5253 = !DILocation(line: 833, column: 13, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5250, file: !629, line: 832, column: 32)
!5255 = !DILocation(line: 841, column: 26, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5211, file: !629, line: 841, column: 9)
!5257 = !DILocation(line: 841, column: 23, scope: !5256)
!5258 = !DILocation(line: 841, column: 9, scope: !5211)
!5259 = !DILocation(line: 842, column: 18, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5256, file: !629, line: 841, column: 39)
!5261 = !DILocation(line: 843, column: 20, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5260, file: !629, line: 843, column: 13)
!5263 = !DILocation(line: 843, column: 13, scope: !5260)
!5264 = !DILocation(line: 844, column: 13, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5262, file: !629, line: 843, column: 32)
!5266 = !DILocation(line: 850, column: 1, scope: !5211)
!5267 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !629, file: !629, line: 891, type: !5268, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5270)
!5268 = !DISubroutineType(types: !5269)
!5269 = !{!4782, !735, !744, !88}
!5270 = !{!5271, !5272, !5273, !5274, !5275, !5276, !5277, !5278}
!5271 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5267, file: !629, line: 891, type: !735)
!5272 = !DILocalVariable(name: "user_callback", arg: 2, scope: !5267, file: !629, line: 892, type: !744)
!5273 = !DILocalVariable(name: "user_data", arg: 3, scope: !5267, file: !629, line: 893, type: !88)
!5274 = !DILocalVariable(name: "tx_dma_channel", scope: !5267, file: !629, line: 895, type: !4584)
!5275 = !DILocalVariable(name: "rx_dma_channel", scope: !5267, file: !629, line: 895, type: !4584)
!5276 = !DILocalVariable(name: "irq_status", scope: !5267, file: !629, line: 896, type: !61)
!5277 = !DILocalVariable(name: "status", scope: !5267, file: !629, line: 897, type: !4645)
!5278 = !DILocalVariable(name: "nvic_status", scope: !5267, file: !629, line: 898, type: !1025)
!5279 = !DILocation(line: 0, scope: !5267)
!5280 = !DILocation(line: 900, column: 11, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5267, file: !629, line: 900, column: 9)
!5282 = !DILocation(line: 900, column: 42, scope: !5281)
!5283 = !DILocation(line: 905, column: 18, scope: !5267)
!5284 = !DILocation(line: 906, column: 9, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5267, file: !629, line: 906, column: 9)
!5286 = !DILocation(line: 906, column: 36, scope: !5285)
!5287 = !DILocation(line: 906, column: 9, scope: !5267)
!5288 = !DILocation(line: 911, column: 22, scope: !5267)
!5289 = !DILocation(line: 912, column: 22, scope: !5267)
!5290 = !DILocation(line: 914, column: 32, scope: !5267)
!5291 = !DILocation(line: 914, column: 37, scope: !5267)
!5292 = !DILocation(line: 915, column: 32, scope: !5267)
!5293 = !DILocation(line: 915, column: 36, scope: !5267)
!5294 = !DILocation(line: 917, column: 91, scope: !5267)
!5295 = !DILocation(line: 917, column: 56, scope: !5267)
!5296 = !DILocation(line: 917, column: 5, scope: !5267)
!5297 = !DILocation(line: 918, column: 80, scope: !5267)
!5298 = !DILocation(line: 918, column: 14, scope: !5267)
!5299 = !DILocation(line: 919, column: 16, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5267, file: !629, line: 919, column: 9)
!5301 = !DILocation(line: 919, column: 9, scope: !5267)
!5302 = !DILocation(line: 920, column: 9, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5300, file: !629, line: 919, column: 28)
!5304 = !DILocation(line: 921, column: 9, scope: !5303)
!5305 = !DILocation(line: 924, column: 97, scope: !5267)
!5306 = !DILocation(line: 924, column: 56, scope: !5267)
!5307 = !DILocation(line: 924, column: 5, scope: !5267)
!5308 = !DILocation(line: 925, column: 80, scope: !5267)
!5309 = !DILocation(line: 925, column: 14, scope: !5267)
!5310 = !DILocation(line: 926, column: 16, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5267, file: !629, line: 926, column: 9)
!5312 = !DILocation(line: 926, column: 9, scope: !5267)
!5313 = !DILocation(line: 927, column: 9, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5311, file: !629, line: 926, column: 28)
!5315 = !DILocation(line: 928, column: 9, scope: !5314)
!5316 = !DILocation(line: 931, column: 49, scope: !5267)
!5317 = !DILocation(line: 931, column: 19, scope: !5267)
!5318 = !DILocation(line: 932, column: 21, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5267, file: !629, line: 932, column: 9)
!5320 = !DILocation(line: 932, column: 9, scope: !5267)
!5321 = !DILocation(line: 933, column: 9, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5319, file: !629, line: 932, column: 44)
!5323 = !DILocation(line: 934, column: 9, scope: !5322)
!5324 = !DILocation(line: 938, column: 5, scope: !5267)
!5325 = !DILocation(line: 940, column: 32, scope: !5267)
!5326 = !DILocation(line: 944, column: 5, scope: !5267)
!5327 = !DILocation(line: 945, column: 1, scope: !5267)
!5328 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !629, file: !629, line: 303, type: !5329, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5332)
!5329 = !DISubroutineType(types: !5330)
!5330 = !{null, !5331, !88}
!5331 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !639, line: 225, baseType: !723)
!5332 = !{!5333, !5334, !5335}
!5333 = !DILocalVariable(name: "event", arg: 1, scope: !5328, file: !629, line: 303, type: !5331)
!5334 = !DILocalVariable(name: "user_data", arg: 2, scope: !5328, file: !629, line: 303, type: !88)
!5335 = !DILocalVariable(name: "callback_data", scope: !5328, file: !629, line: 305, type: !728)
!5336 = !DILocation(line: 0, scope: !5328)
!5337 = !DILocation(line: 307, column: 24, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5328, file: !629, line: 307, column: 9)
!5339 = !DILocation(line: 0, scope: !5338)
!5340 = !DILocation(line: 307, column: 9, scope: !5328)
!5341 = !DILocation(line: 308, column: 9, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5338, file: !629, line: 307, column: 39)
!5343 = !DILocation(line: 309, column: 5, scope: !5342)
!5344 = !DILocation(line: 310, column: 9, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5338, file: !629, line: 309, column: 12)
!5346 = !DILocation(line: 312, column: 1, scope: !5328)
!5347 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !629, file: !629, line: 852, type: !4754, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5348)
!5348 = !{!5349, !5350, !5351, !5352, !5353}
!5349 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5347, file: !629, line: 852, type: !735)
!5350 = !DILocalVariable(name: "uartx", scope: !5347, file: !629, line: 854, type: !4589)
!5351 = !DILocalVariable(name: "tx_dma_channel", scope: !5347, file: !629, line: 855, type: !4584)
!5352 = !DILocalVariable(name: "rx_dma_channel", scope: !5347, file: !629, line: 855, type: !4584)
!5353 = !DILocalVariable(name: "status", scope: !5347, file: !629, line: 856, type: !4645)
!5354 = !DILocation(line: 0, scope: !5347)
!5355 = !DILocation(line: 858, column: 13, scope: !5347)
!5356 = !DILocation(line: 859, column: 22, scope: !5347)
!5357 = !DILocation(line: 860, column: 22, scope: !5347)
!5358 = !DILocation(line: 866, column: 5, scope: !5347)
!5359 = !DILocation(line: 867, column: 25, scope: !5347)
!5360 = !DILocation(line: 867, column: 5, scope: !5347)
!5361 = !DILocation(line: 868, column: 14, scope: !5347)
!5362 = !DILocation(line: 869, column: 16, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5347, file: !629, line: 869, column: 9)
!5364 = !DILocation(line: 869, column: 9, scope: !5347)
!5365 = !DILocation(line: 870, column: 9, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5363, file: !629, line: 869, column: 28)
!5367 = !DILocation(line: 873, column: 14, scope: !5347)
!5368 = !DILocation(line: 874, column: 16, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5347, file: !629, line: 874, column: 9)
!5370 = !DILocation(line: 874, column: 9, scope: !5347)
!5371 = !DILocation(line: 875, column: 9, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5369, file: !629, line: 874, column: 28)
!5373 = !DILocation(line: 878, column: 14, scope: !5347)
!5374 = !DILocation(line: 879, column: 16, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5347, file: !629, line: 879, column: 9)
!5376 = !DILocation(line: 879, column: 9, scope: !5347)
!5377 = !DILocation(line: 880, column: 9, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5375, file: !629, line: 879, column: 28)
!5379 = !DILocation(line: 883, column: 14, scope: !5347)
!5380 = !DILocation(line: 884, column: 16, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5347, file: !629, line: 884, column: 9)
!5382 = !DILocation(line: 884, column: 9, scope: !5347)
!5383 = !DILocation(line: 885, column: 9, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5381, file: !629, line: 884, column: 28)
!5385 = !DILocation(line: 888, column: 5, scope: !5347)
!5386 = !DILocation(line: 889, column: 1, scope: !5347)
!5387 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !629, file: !629, line: 947, type: !5164, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5388)
!5388 = !{!5389, !5390, !5391, !5392}
!5389 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5387, file: !629, line: 947, type: !735)
!5390 = !DILocalVariable(name: "channel", scope: !5387, file: !629, line: 949, type: !4584)
!5391 = !DILocalVariable(name: "roomleft", scope: !5387, file: !629, line: 950, type: !61)
!5392 = !DILocalVariable(name: "status", scope: !5387, file: !629, line: 951, type: !4645)
!5393 = !DILocation(line: 0, scope: !5387)
!5394 = !DILocation(line: 950, column: 5, scope: !5387)
!5395 = !DILocation(line: 953, column: 10, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5387, file: !629, line: 953, column: 9)
!5397 = !DILocation(line: 953, column: 9, scope: !5387)
!5398 = !DILocation(line: 957, column: 9, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5387, file: !629, line: 957, column: 9)
!5400 = !DILocation(line: 957, column: 36, scope: !5399)
!5401 = !DILocation(line: 957, column: 9, scope: !5387)
!5402 = !DILocation(line: 961, column: 15, scope: !5387)
!5403 = !DILocation(line: 962, column: 14, scope: !5387)
!5404 = !DILocation(line: 963, column: 16, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5387, file: !629, line: 963, column: 9)
!5406 = !DILocation(line: 963, column: 9, scope: !5387)
!5407 = !DILocation(line: 964, column: 9, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5405, file: !629, line: 963, column: 28)
!5409 = !DILocation(line: 968, column: 12, scope: !5387)
!5410 = !DILocation(line: 968, column: 5, scope: !5387)
!5411 = !DILocation(line: 969, column: 1, scope: !5387)
!5412 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !629, file: !629, line: 971, type: !5164, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5413)
!5413 = !{!5414, !5415, !5416, !5417}
!5414 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5412, file: !629, line: 971, type: !735)
!5415 = !DILocalVariable(name: "channel", scope: !5412, file: !629, line: 973, type: !4584)
!5416 = !DILocalVariable(name: "avail", scope: !5412, file: !629, line: 974, type: !61)
!5417 = !DILocalVariable(name: "status", scope: !5412, file: !629, line: 975, type: !4645)
!5418 = !DILocation(line: 0, scope: !5412)
!5419 = !DILocation(line: 974, column: 5, scope: !5412)
!5420 = !DILocation(line: 977, column: 10, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5412, file: !629, line: 977, column: 9)
!5422 = !DILocation(line: 977, column: 9, scope: !5412)
!5423 = !DILocation(line: 981, column: 9, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5412, file: !629, line: 981, column: 9)
!5425 = !DILocation(line: 981, column: 36, scope: !5424)
!5426 = !DILocation(line: 981, column: 9, scope: !5412)
!5427 = !DILocation(line: 985, column: 15, scope: !5412)
!5428 = !DILocation(line: 986, column: 14, scope: !5412)
!5429 = !DILocation(line: 987, column: 16, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5412, file: !629, line: 987, column: 9)
!5431 = !DILocation(line: 987, column: 9, scope: !5412)
!5432 = !DILocation(line: 988, column: 9, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5430, file: !629, line: 987, column: 28)
!5434 = !DILocation(line: 992, column: 12, scope: !5412)
!5435 = !DILocation(line: 992, column: 5, scope: !5412)
!5436 = !DILocation(line: 993, column: 1, scope: !5412)
!5437 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !629, file: !629, line: 995, type: !4951, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5438)
!5438 = !{!5439, !5440}
!5439 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5437, file: !629, line: 995, type: !735)
!5440 = !DILocalVariable(name: "uartx", scope: !5437, file: !629, line: 997, type: !4589)
!5441 = !DILocation(line: 0, scope: !5437)
!5442 = !DILocation(line: 999, column: 10, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5437, file: !629, line: 999, column: 9)
!5444 = !DILocation(line: 999, column: 9, scope: !5437)
!5445 = !DILocation(line: 1003, column: 9, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5437, file: !629, line: 1003, column: 9)
!5447 = !DILocation(line: 1003, column: 36, scope: !5446)
!5448 = !DILocation(line: 1003, column: 9, scope: !5437)
!5449 = !DILocation(line: 1007, column: 13, scope: !5437)
!5450 = !DILocation(line: 1009, column: 5, scope: !5437)
!5451 = !DILocation(line: 1015, column: 5, scope: !5437)
!5452 = !DILocation(line: 1016, column: 1, scope: !5437)
!5453 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !629, file: !629, line: 1018, type: !5454, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5456)
!5454 = !DISubroutineType(types: !5455)
!5455 = !{!4782, !735, !460, !460, !460}
!5456 = !{!5457, !5458, !5459, !5460, !5461}
!5457 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5453, file: !629, line: 1018, type: !735)
!5458 = !DILocalVariable(name: "xon", arg: 2, scope: !5453, file: !629, line: 1019, type: !460)
!5459 = !DILocalVariable(name: "xoff", arg: 3, scope: !5453, file: !629, line: 1020, type: !460)
!5460 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5453, file: !629, line: 1021, type: !460)
!5461 = !DILocalVariable(name: "uartx", scope: !5453, file: !629, line: 1023, type: !4589)
!5462 = !DILocation(line: 0, scope: !5453)
!5463 = !DILocation(line: 1025, column: 10, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5453, file: !629, line: 1025, column: 9)
!5465 = !DILocation(line: 1025, column: 9, scope: !5453)
!5466 = !DILocation(line: 1029, column: 9, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5453, file: !629, line: 1029, column: 9)
!5468 = !DILocation(line: 1029, column: 36, scope: !5467)
!5469 = !DILocation(line: 1029, column: 9, scope: !5453)
!5470 = !DILocation(line: 1033, column: 13, scope: !5453)
!5471 = !DILocation(line: 1035, column: 5, scope: !5453)
!5472 = !DILocation(line: 1044, column: 5, scope: !5453)
!5473 = !DILocation(line: 1045, column: 1, scope: !5453)
!5474 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !629, file: !629, line: 1047, type: !4951, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5475)
!5475 = !{!5476, !5477}
!5476 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5474, file: !629, line: 1047, type: !735)
!5477 = !DILocalVariable(name: "uartx", scope: !5474, file: !629, line: 1049, type: !4589)
!5478 = !DILocation(line: 0, scope: !5474)
!5479 = !DILocation(line: 1051, column: 10, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5474, file: !629, line: 1051, column: 9)
!5481 = !DILocation(line: 1051, column: 9, scope: !5474)
!5482 = !DILocation(line: 1055, column: 9, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5474, file: !629, line: 1055, column: 9)
!5484 = !DILocation(line: 1055, column: 36, scope: !5483)
!5485 = !DILocation(line: 1055, column: 9, scope: !5474)
!5486 = !DILocation(line: 1059, column: 13, scope: !5474)
!5487 = !DILocation(line: 1061, column: 5, scope: !5474)
!5488 = !DILocation(line: 1067, column: 5, scope: !5474)
!5489 = !DILocation(line: 1068, column: 1, scope: !5474)
!5490 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !629, file: !629, line: 1071, type: !5491, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5495)
!5491 = !DISubroutineType(types: !5492)
!5492 = !{!4782, !735, !5493}
!5493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5494, size: 32)
!5494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !758)
!5495 = !{!5496, !5497, !5498, !5499, !5505, !5506, !5507}
!5496 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5490, file: !629, line: 1071, type: !735)
!5497 = !DILocalVariable(name: "dma_config", arg: 2, scope: !5490, file: !629, line: 1071, type: !5493)
!5498 = !DILocalVariable(name: "irq_status", scope: !5490, file: !629, line: 1073, type: !61)
!5499 = !DILocalVariable(name: "internal_dma_config", scope: !5490, file: !629, line: 1074, type: !5500)
!5500 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !639, line: 283, baseType: !5501)
!5501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !639, line: 280, size: 64, elements: !5502)
!5502 = !{!5503, !5504}
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !5501, file: !639, line: 281, baseType: !61, size: 32)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5501, file: !639, line: 282, baseType: !61, size: 32, offset: 32)
!5505 = !DILocalVariable(name: "tx_dma_channel", scope: !5490, file: !629, line: 1075, type: !4584)
!5506 = !DILocalVariable(name: "rx_dma_channel", scope: !5490, file: !629, line: 1075, type: !4584)
!5507 = !DILocalVariable(name: "status", scope: !5490, file: !629, line: 1076, type: !4645)
!5508 = !DILocation(line: 0, scope: !5490)
!5509 = !DILocation(line: 1074, column: 5, scope: !5490)
!5510 = !DILocation(line: 1074, column: 19, scope: !5490)
!5511 = !DILocation(line: 1078, column: 10, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5490, file: !629, line: 1078, column: 9)
!5513 = !DILocation(line: 1078, column: 9, scope: !5490)
!5514 = !DILocation(line: 1081, column: 22, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5490, file: !629, line: 1081, column: 9)
!5516 = !DILocation(line: 1081, column: 40, scope: !5515)
!5517 = !DILocation(line: 1081, column: 49, scope: !5515)
!5518 = !DILocation(line: 1082, column: 22, scope: !5515)
!5519 = !DILocation(line: 1082, column: 43, scope: !5515)
!5520 = !DILocation(line: 1081, column: 9, scope: !5490)
!5521 = !DILocation(line: 1085, column: 22, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5490, file: !629, line: 1085, column: 9)
!5523 = !DILocation(line: 1085, column: 45, scope: !5522)
!5524 = !DILocation(line: 1085, column: 76, scope: !5522)
!5525 = !DILocation(line: 1086, column: 22, scope: !5522)
!5526 = !DILocation(line: 1086, column: 48, scope: !5522)
!5527 = !DILocation(line: 1086, column: 79, scope: !5522)
!5528 = !DILocation(line: 1090, column: 22, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5490, file: !629, line: 1090, column: 9)
!5530 = !DILocation(line: 1090, column: 48, scope: !5529)
!5531 = !DILocation(line: 1090, column: 79, scope: !5529)
!5532 = !DILocation(line: 1091, column: 22, scope: !5529)
!5533 = !DILocation(line: 1091, column: 51, scope: !5529)
!5534 = !DILocation(line: 1091, column: 82, scope: !5529)
!5535 = !DILocation(line: 1092, column: 22, scope: !5529)
!5536 = !DILocation(line: 1092, column: 47, scope: !5529)
!5537 = !DILocation(line: 1092, column: 78, scope: !5529)
!5538 = !DILocation(line: 1098, column: 9, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5490, file: !629, line: 1098, column: 9)
!5540 = !DILocation(line: 1098, column: 36, scope: !5539)
!5541 = !DILocation(line: 1098, column: 9, scope: !5490)
!5542 = !DILocation(line: 1102, column: 22, scope: !5490)
!5543 = !DILocation(line: 1103, column: 22, scope: !5490)
!5544 = !DILocation(line: 1105, column: 14, scope: !5490)
!5545 = !DILocation(line: 1106, column: 16, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5490, file: !629, line: 1106, column: 9)
!5547 = !DILocation(line: 1106, column: 9, scope: !5490)
!5548 = !DILocation(line: 1107, column: 9, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5546, file: !629, line: 1106, column: 28)
!5550 = !DILocation(line: 1110, column: 62, scope: !5490)
!5551 = !DILocation(line: 1110, column: 40, scope: !5490)
!5552 = !DILocation(line: 1110, column: 25, scope: !5490)
!5553 = !DILocation(line: 1110, column: 38, scope: !5490)
!5554 = !DILocation(line: 1111, column: 44, scope: !5490)
!5555 = !DILocation(line: 1111, column: 25, scope: !5490)
!5556 = !DILocation(line: 1111, column: 30, scope: !5490)
!5557 = !DILocation(line: 1112, column: 14, scope: !5490)
!5558 = !DILocation(line: 1113, column: 16, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5490, file: !629, line: 1113, column: 9)
!5560 = !DILocation(line: 1113, column: 9, scope: !5490)
!5561 = !DILocation(line: 1114, column: 9, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5559, file: !629, line: 1113, column: 28)
!5563 = !DILocation(line: 1117, column: 61, scope: !5490)
!5564 = !DILocation(line: 1117, column: 14, scope: !5490)
!5565 = !DILocation(line: 1118, column: 16, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5490, file: !629, line: 1118, column: 9)
!5567 = !DILocation(line: 1118, column: 9, scope: !5490)
!5568 = !DILocation(line: 1119, column: 9, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5566, file: !629, line: 1118, column: 28)
!5570 = !DILocation(line: 1123, column: 14, scope: !5490)
!5571 = !DILocation(line: 1124, column: 16, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5490, file: !629, line: 1124, column: 9)
!5573 = !DILocation(line: 1124, column: 9, scope: !5490)
!5574 = !DILocation(line: 1125, column: 9, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5572, file: !629, line: 1124, column: 28)
!5576 = !DILocation(line: 1128, column: 62, scope: !5490)
!5577 = !DILocation(line: 1128, column: 40, scope: !5490)
!5578 = !DILocation(line: 1128, column: 38, scope: !5490)
!5579 = !DILocation(line: 1129, column: 44, scope: !5490)
!5580 = !DILocation(line: 1129, column: 30, scope: !5490)
!5581 = !DILocation(line: 1130, column: 14, scope: !5490)
!5582 = !DILocation(line: 1131, column: 16, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5490, file: !629, line: 1131, column: 9)
!5584 = !DILocation(line: 1131, column: 9, scope: !5490)
!5585 = !DILocation(line: 1132, column: 9, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5583, file: !629, line: 1131, column: 28)
!5587 = !DILocation(line: 1135, column: 61, scope: !5490)
!5588 = !DILocation(line: 1135, column: 14, scope: !5490)
!5589 = !DILocation(line: 1136, column: 16, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5490, file: !629, line: 1136, column: 9)
!5591 = !DILocation(line: 1136, column: 9, scope: !5490)
!5592 = !DILocation(line: 1137, column: 9, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5590, file: !629, line: 1136, column: 28)
!5594 = !DILocation(line: 1140, column: 64, scope: !5490)
!5595 = !DILocation(line: 1140, column: 14, scope: !5490)
!5596 = !DILocation(line: 1141, column: 16, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5490, file: !629, line: 1141, column: 9)
!5598 = !DILocation(line: 1141, column: 9, scope: !5490)
!5599 = !DILocation(line: 1142, column: 9, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5597, file: !629, line: 1141, column: 28)
!5601 = !DILocation(line: 1146, column: 18, scope: !5490)
!5602 = !DILocation(line: 1147, column: 66, scope: !5490)
!5603 = !DILocation(line: 1147, column: 34, scope: !5490)
!5604 = !DILocation(line: 1147, column: 52, scope: !5490)
!5605 = !DILocation(line: 1148, column: 71, scope: !5490)
!5606 = !DILocation(line: 1148, column: 34, scope: !5490)
!5607 = !DILocation(line: 1148, column: 57, scope: !5490)
!5608 = !DILocation(line: 1149, column: 74, scope: !5490)
!5609 = !DILocation(line: 1149, column: 34, scope: !5490)
!5610 = !DILocation(line: 1149, column: 60, scope: !5490)
!5611 = !DILocation(line: 1150, column: 73, scope: !5490)
!5612 = !DILocation(line: 1150, column: 34, scope: !5490)
!5613 = !DILocation(line: 1150, column: 59, scope: !5490)
!5614 = !DILocation(line: 1151, column: 69, scope: !5490)
!5615 = !DILocation(line: 1151, column: 34, scope: !5490)
!5616 = !DILocation(line: 1151, column: 55, scope: !5490)
!5617 = !DILocation(line: 1152, column: 74, scope: !5490)
!5618 = !DILocation(line: 1152, column: 34, scope: !5490)
!5619 = !DILocation(line: 1152, column: 60, scope: !5490)
!5620 = !DILocation(line: 1153, column: 77, scope: !5490)
!5621 = !DILocation(line: 1153, column: 34, scope: !5490)
!5622 = !DILocation(line: 1153, column: 63, scope: !5490)
!5623 = !DILocation(line: 1154, column: 5, scope: !5490)
!5624 = !DILocation(line: 1156, column: 5, scope: !5490)
!5625 = !DILocation(line: 1157, column: 1, scope: !5490)
!5626 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !2681, file: !2681, line: 52, type: !5627, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !5684)
!5627 = !DISubroutineType(types: !5628)
!5628 = !{null, !5629, !61}
!5629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5630, size: 32)
!5630 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !5631)
!5631 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !5632)
!5632 = !{!5633, !5639, !5644, !5650, !5651, !5656, !5661, !5662, !5667, !5668, !5669, !5670, !5671, !5672, !5673, !5674, !5675, !5676, !5677, !5678, !5679, !5680, !5681, !5682, !5683}
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !5631, file: !56, line: 547, baseType: !5634, size: 32)
!5634 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5631, file: !56, line: 543, size: 32, elements: !5635)
!5635 = !{!5636, !5637, !5638}
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !5634, file: !56, line: 544, baseType: !272, size: 32)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !5634, file: !56, line: 545, baseType: !60, size: 32)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !5634, file: !56, line: 546, baseType: !60, size: 32)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !5631, file: !56, line: 551, baseType: !5640, size: 32, offset: 32)
!5640 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5631, file: !56, line: 548, size: 32, elements: !5641)
!5641 = !{!5642, !5643}
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !5640, file: !56, line: 549, baseType: !60, size: 32)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !5640, file: !56, line: 550, baseType: !60, size: 32)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !5631, file: !56, line: 556, baseType: !5645, size: 32, offset: 64)
!5645 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5631, file: !56, line: 552, size: 32, elements: !5646)
!5646 = !{!5647, !5648, !5649}
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !5645, file: !56, line: 553, baseType: !272, size: 32)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !5645, file: !56, line: 554, baseType: !60, size: 32)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !5645, file: !56, line: 555, baseType: !60, size: 32)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !5631, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !5631, file: !56, line: 561, baseType: !5652, size: 32, offset: 128)
!5652 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5631, file: !56, line: 558, size: 32, elements: !5653)
!5653 = !{!5654, !5655}
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !5652, file: !56, line: 559, baseType: !60, size: 32)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !5652, file: !56, line: 560, baseType: !60, size: 32)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !5631, file: !56, line: 565, baseType: !5657, size: 32, offset: 160)
!5657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5631, file: !56, line: 562, size: 32, elements: !5658)
!5658 = !{!5659, !5660}
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !5657, file: !56, line: 563, baseType: !272, size: 32)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !5657, file: !56, line: 564, baseType: !60, size: 32)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !5631, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !5631, file: !56, line: 570, baseType: !5663, size: 32, offset: 224)
!5663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5631, file: !56, line: 567, size: 32, elements: !5664)
!5664 = !{!5665, !5666}
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !5663, file: !56, line: 568, baseType: !60, size: 32)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !5663, file: !56, line: 569, baseType: !60, size: 32)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !5631, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !5631, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !5631, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !5631, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !5631, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !5631, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !5631, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !5631, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !5631, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !5631, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !5631, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !5631, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !5631, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !5631, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !5631, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !5631, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !5631, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!5684 = !{!5685, !5686, !5687, !5688, !5689, !5690, !5691, !5692, !5693, !5694, !5695, !5699}
!5685 = !DILocalVariable(name: "uartx", arg: 1, scope: !5626, file: !2681, line: 52, type: !5629)
!5686 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !5626, file: !2681, line: 52, type: !61)
!5687 = !DILocalVariable(name: "uart_clock", scope: !5626, file: !2681, line: 54, type: !61)
!5688 = !DILocalVariable(name: "integer", scope: !5626, file: !2681, line: 54, type: !61)
!5689 = !DILocalVariable(name: "remainder", scope: !5626, file: !2681, line: 54, type: !61)
!5690 = !DILocalVariable(name: "fraction", scope: !5626, file: !2681, line: 54, type: !61)
!5691 = !DILocalVariable(name: "dll_dlm", scope: !5626, file: !2681, line: 55, type: !61)
!5692 = !DILocalVariable(name: "sample_count", scope: !5626, file: !2681, line: 55, type: !61)
!5693 = !DILocalVariable(name: "sample_point", scope: !5626, file: !2681, line: 55, type: !61)
!5694 = !DILocalVariable(name: "temp_lcr", scope: !5626, file: !2681, line: 55, type: !61)
!5695 = !DILocalVariable(name: "fraction_L_mapping", scope: !5626, file: !2681, line: 56, type: !5696)
!5696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !5697)
!5697 = !{!5698}
!5698 = !DISubrange(count: 10)
!5699 = !DILocalVariable(name: "fraction_M_mapping", scope: !5626, file: !2681, line: 57, type: !5696)
!5700 = !DILocation(line: 0, scope: !5626)
!5701 = !DILocation(line: 56, column: 14, scope: !5626)
!5702 = !DILocation(line: 57, column: 5, scope: !5626)
!5703 = !DILocation(line: 57, column: 14, scope: !5626)
!5704 = !DILocation(line: 59, column: 12, scope: !5626)
!5705 = !DILocation(line: 59, column: 23, scope: !5626)
!5706 = !DILocation(line: 60, column: 12, scope: !5626)
!5707 = !DILocation(line: 60, column: 22, scope: !5626)
!5708 = !DILocation(line: 61, column: 12, scope: !5626)
!5709 = !DILocation(line: 61, column: 22, scope: !5626)
!5710 = !DILocation(line: 63, column: 9, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5626, file: !2681, line: 63, column: 9)
!5712 = !DILocation(line: 63, column: 9, scope: !5626)
!5713 = !DILocation(line: 64, column: 22, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5711, file: !2681, line: 63, column: 37)
!5715 = !DILocation(line: 64, column: 45, scope: !5714)
!5716 = !DILocation(line: 65, column: 5, scope: !5714)
!5717 = !DILocation(line: 0, scope: !5711)
!5718 = !DILocation(line: 69, column: 45, scope: !5626)
!5719 = !DILocation(line: 69, column: 26, scope: !5626)
!5720 = !DILocation(line: 70, column: 30, scope: !5626)
!5721 = !DILocation(line: 70, column: 36, scope: !5626)
!5722 = !DILocation(line: 70, column: 63, scope: !5626)
!5723 = !DILocation(line: 71, column: 20, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5626, file: !2681, line: 71, column: 9)
!5725 = !DILocation(line: 71, column: 26, scope: !5724)
!5726 = !DILocation(line: 77, column: 5, scope: !5626)
!5727 = !DILocation(line: 77, column: 25, scope: !5626)
!5728 = !DILocation(line: 78, column: 16, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5626, file: !2681, line: 77, column: 32)
!5730 = distinct !{!5730, !5726, !5731}
!5731 = !DILocation(line: 80, column: 5, scope: !5626)
!5732 = !DILocation(line: 82, column: 35, scope: !5626)
!5733 = !DILocation(line: 82, column: 66, scope: !5626)
!5734 = !DILocation(line: 84, column: 18, scope: !5626)
!5735 = !DILocation(line: 85, column: 34, scope: !5626)
!5736 = !DILocation(line: 85, column: 39, scope: !5626)
!5737 = !DILocation(line: 87, column: 12, scope: !5626)
!5738 = !DILocation(line: 87, column: 22, scope: !5626)
!5739 = !DILocation(line: 89, column: 23, scope: !5626)
!5740 = !DILocation(line: 90, column: 27, scope: !5626)
!5741 = !DILocation(line: 90, column: 16, scope: !5626)
!5742 = !DILocation(line: 91, column: 38, scope: !5626)
!5743 = !DILocation(line: 91, column: 24, scope: !5626)
!5744 = !DILocation(line: 91, column: 28, scope: !5626)
!5745 = !DILocation(line: 92, column: 35, scope: !5626)
!5746 = !DILocation(line: 92, column: 41, scope: !5626)
!5747 = !DILocation(line: 92, column: 20, scope: !5626)
!5748 = !DILocation(line: 92, column: 24, scope: !5626)
!5749 = !DILocation(line: 93, column: 16, scope: !5626)
!5750 = !DILocation(line: 95, column: 12, scope: !5626)
!5751 = !DILocation(line: 95, column: 25, scope: !5626)
!5752 = !DILocation(line: 96, column: 12, scope: !5626)
!5753 = !DILocation(line: 96, column: 25, scope: !5626)
!5754 = !DILocation(line: 98, column: 24, scope: !5626)
!5755 = !DILocation(line: 98, column: 22, scope: !5626)
!5756 = !DILocation(line: 99, column: 24, scope: !5626)
!5757 = !DILocation(line: 99, column: 22, scope: !5626)
!5758 = !DILocation(line: 101, column: 25, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5626, file: !2681, line: 101, column: 9)
!5760 = !DILocation(line: 101, column: 9, scope: !5626)
!5761 = !DILocation(line: 102, column: 16, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5759, file: !2681, line: 101, column: 37)
!5763 = !DILocation(line: 102, column: 22, scope: !5762)
!5764 = !DILocation(line: 103, column: 5, scope: !5762)
!5765 = !DILocation(line: 104, column: 1, scope: !5626)
!5766 = distinct !DISubprogram(name: "uart_set_format", scope: !2681, file: !2681, line: 106, type: !5767, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !5769)
!5767 = !DISubroutineType(types: !5768)
!5768 = !{null, !5629, !4833, !4835, !4837}
!5769 = !{!5770, !5771, !5772, !5773, !5774}
!5770 = !DILocalVariable(name: "uartx", arg: 1, scope: !5766, file: !2681, line: 106, type: !5629)
!5771 = !DILocalVariable(name: "word_length", arg: 2, scope: !5766, file: !2681, line: 107, type: !4833)
!5772 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !5766, file: !2681, line: 108, type: !4835)
!5773 = !DILocalVariable(name: "parity", arg: 4, scope: !5766, file: !2681, line: 109, type: !4837)
!5774 = !DILocalVariable(name: "byte", scope: !5766, file: !2681, line: 111, type: !975)
!5775 = !DILocation(line: 0, scope: !5766)
!5776 = !DILocation(line: 114, column: 19, scope: !5766)
!5777 = !DILocation(line: 115, column: 16, scope: !5766)
!5778 = !DILocation(line: 118, column: 10, scope: !5766)
!5779 = !DILocation(line: 119, column: 5, scope: !5766)
!5780 = !DILocation(line: 124, column: 18, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5766, file: !2681, line: 119, column: 26)
!5782 = !DILocation(line: 125, column: 13, scope: !5781)
!5783 = !DILocation(line: 127, column: 18, scope: !5781)
!5784 = !DILocation(line: 128, column: 13, scope: !5781)
!5785 = !DILocation(line: 130, column: 18, scope: !5781)
!5786 = !DILocation(line: 131, column: 13, scope: !5781)
!5787 = !DILocation(line: 137, column: 10, scope: !5766)
!5788 = !DILocation(line: 138, column: 5, scope: !5766)
!5789 = !DILocation(line: 151, column: 5, scope: !5766)
!5790 = !DILocation(line: 166, column: 18, scope: !5766)
!5791 = !DILocation(line: 166, column: 16, scope: !5766)
!5792 = !DILocation(line: 167, column: 1, scope: !5766)
!5793 = distinct !DISubprogram(name: "uart_put_char_block", scope: !2681, file: !2681, line: 169, type: !5794, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !5796)
!5794 = !DISubroutineType(types: !5795)
!5795 = !{null, !5629, !460}
!5796 = !{!5797, !5798, !5799}
!5797 = !DILocalVariable(name: "uartx", arg: 1, scope: !5793, file: !2681, line: 169, type: !5629)
!5798 = !DILocalVariable(name: "byte", arg: 2, scope: !5793, file: !2681, line: 169, type: !460)
!5799 = !DILocalVariable(name: "LSR", scope: !5793, file: !2681, line: 171, type: !975)
!5800 = !DILocation(line: 0, scope: !5793)
!5801 = !DILocation(line: 173, column: 5, scope: !5793)
!5802 = !DILocation(line: 174, column: 31, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5793, file: !2681, line: 173, column: 15)
!5804 = !DILocation(line: 175, column: 17, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5803, file: !2681, line: 175, column: 13)
!5806 = !DILocation(line: 175, column: 13, scope: !5803)
!5807 = distinct !{!5807, !5801, !5808}
!5808 = !DILocation(line: 179, column: 5, scope: !5793)
!5809 = !DILocation(line: 176, column: 38, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5805, file: !2681, line: 175, column: 39)
!5811 = !DILocation(line: 176, column: 32, scope: !5810)
!5812 = !DILocation(line: 176, column: 36, scope: !5810)
!5813 = !DILocation(line: 180, column: 1, scope: !5793)
!5814 = distinct !DISubprogram(name: "uart_get_char_block", scope: !2681, file: !2681, line: 182, type: !5815, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !5817)
!5815 = !DISubroutineType(types: !5816)
!5816 = !{!460, !5629}
!5817 = !{!5818, !5819, !5820}
!5818 = !DILocalVariable(name: "uartx", arg: 1, scope: !5814, file: !2681, line: 182, type: !5629)
!5819 = !DILocalVariable(name: "LSR", scope: !5814, file: !2681, line: 184, type: !975)
!5820 = !DILocalVariable(name: "byte", scope: !5814, file: !2681, line: 185, type: !460)
!5821 = !DILocation(line: 0, scope: !5814)
!5822 = !DILocation(line: 187, column: 5, scope: !5814)
!5823 = !DILocation(line: 188, column: 31, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5814, file: !2681, line: 187, column: 15)
!5825 = !DILocation(line: 189, column: 17, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5824, file: !2681, line: 189, column: 13)
!5827 = !DILocation(line: 189, column: 13, scope: !5824)
!5828 = distinct !{!5828, !5822, !5829}
!5829 = !DILocation(line: 193, column: 5, scope: !5814)
!5830 = !DILocation(line: 190, column: 48, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5826, file: !2681, line: 189, column: 37)
!5832 = !DILocation(line: 190, column: 20, scope: !5831)
!5833 = !DILocation(line: 195, column: 5, scope: !5814)
!5834 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !2681, file: !2681, line: 198, type: !5835, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !5837)
!5835 = !DISubroutineType(types: !5836)
!5836 = !{!61, !5629}
!5837 = !{!5838, !5839, !5840}
!5838 = !DILocalVariable(name: "uartx", arg: 1, scope: !5834, file: !2681, line: 198, type: !5629)
!5839 = !DILocalVariable(name: "LSR", scope: !5834, file: !2681, line: 200, type: !975)
!5840 = !DILocalVariable(name: "value", scope: !5834, file: !2681, line: 201, type: !61)
!5841 = !DILocation(line: 0, scope: !5834)
!5842 = !DILocation(line: 203, column: 27, scope: !5834)
!5843 = !DILocation(line: 204, column: 13, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5834, file: !2681, line: 204, column: 9)
!5845 = !DILocation(line: 204, column: 9, scope: !5834)
!5846 = !DILocation(line: 205, column: 36, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5844, file: !2681, line: 204, column: 33)
!5848 = !DILocation(line: 206, column: 5, scope: !5847)
!5849 = !DILocation(line: 0, scope: !5844)
!5850 = !DILocation(line: 210, column: 5, scope: !5834)
!5851 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !2681, file: !2681, line: 213, type: !5852, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !5854)
!5852 = !DISubroutineType(types: !5853)
!5853 = !{null, !5629}
!5854 = !{!5855, !5856, !5857}
!5855 = !DILocalVariable(name: "uartx", arg: 1, scope: !5851, file: !2681, line: 213, type: !5629)
!5856 = !DILocalVariable(name: "EFR", scope: !5851, file: !2681, line: 215, type: !975)
!5857 = !DILocalVariable(name: "LCR", scope: !5851, file: !2681, line: 215, type: !975)
!5858 = !DILocation(line: 0, scope: !5851)
!5859 = !DILocation(line: 217, column: 18, scope: !5851)
!5860 = !DILocation(line: 219, column: 16, scope: !5851)
!5861 = !DILocation(line: 220, column: 30, scope: !5851)
!5862 = !DILocation(line: 222, column: 30, scope: !5851)
!5863 = !DILocation(line: 222, column: 28, scope: !5851)
!5864 = !DILocation(line: 223, column: 12, scope: !5851)
!5865 = !DILocation(line: 223, column: 22, scope: !5851)
!5866 = !DILocation(line: 225, column: 16, scope: !5851)
!5867 = !DILocation(line: 226, column: 21, scope: !5851)
!5868 = !DILocation(line: 226, column: 25, scope: !5851)
!5869 = !DILocation(line: 228, column: 18, scope: !5851)
!5870 = !DILocation(line: 228, column: 16, scope: !5851)
!5871 = !DILocation(line: 229, column: 1, scope: !5851)
!5872 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !2681, file: !2681, line: 231, type: !5873, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !5875)
!5873 = !DISubroutineType(types: !5874)
!5874 = !{null, !5629, !460, !460, !460}
!5875 = !{!5876, !5877, !5878, !5879, !5880, !5881}
!5876 = !DILocalVariable(name: "uartx", arg: 1, scope: !5872, file: !2681, line: 231, type: !5629)
!5877 = !DILocalVariable(name: "xon", arg: 2, scope: !5872, file: !2681, line: 232, type: !460)
!5878 = !DILocalVariable(name: "xoff", arg: 3, scope: !5872, file: !2681, line: 233, type: !460)
!5879 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5872, file: !2681, line: 234, type: !460)
!5880 = !DILocalVariable(name: "EFR", scope: !5872, file: !2681, line: 236, type: !975)
!5881 = !DILocalVariable(name: "LCR", scope: !5872, file: !2681, line: 236, type: !975)
!5882 = !DILocation(line: 0, scope: !5872)
!5883 = !DILocation(line: 238, column: 18, scope: !5872)
!5884 = !DILocation(line: 240, column: 16, scope: !5872)
!5885 = !DILocation(line: 241, column: 28, scope: !5872)
!5886 = !DILocation(line: 241, column: 21, scope: !5872)
!5887 = !DILocation(line: 241, column: 26, scope: !5872)
!5888 = !DILocation(line: 242, column: 20, scope: !5872)
!5889 = !DILocation(line: 242, column: 12, scope: !5872)
!5890 = !DILocation(line: 242, column: 18, scope: !5872)
!5891 = !DILocation(line: 243, column: 30, scope: !5872)
!5892 = !DILocation(line: 245, column: 30, scope: !5872)
!5893 = !DILocation(line: 245, column: 28, scope: !5872)
!5894 = !DILocation(line: 246, column: 25, scope: !5872)
!5895 = !DILocation(line: 246, column: 12, scope: !5872)
!5896 = !DILocation(line: 246, column: 23, scope: !5872)
!5897 = !DILocation(line: 247, column: 12, scope: !5872)
!5898 = !DILocation(line: 247, column: 22, scope: !5872)
!5899 = !DILocation(line: 249, column: 18, scope: !5872)
!5900 = !DILocation(line: 249, column: 16, scope: !5872)
!5901 = !DILocation(line: 250, column: 1, scope: !5872)
!5902 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !2681, file: !2681, line: 252, type: !5852, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !5903)
!5903 = !{!5904, !5905}
!5904 = !DILocalVariable(name: "uartx", arg: 1, scope: !5902, file: !2681, line: 252, type: !5629)
!5905 = !DILocalVariable(name: "LCR", scope: !5902, file: !2681, line: 254, type: !975)
!5906 = !DILocation(line: 0, scope: !5902)
!5907 = !DILocation(line: 256, column: 18, scope: !5902)
!5908 = !DILocation(line: 258, column: 16, scope: !5902)
!5909 = !DILocation(line: 259, column: 24, scope: !5902)
!5910 = !DILocation(line: 259, column: 28, scope: !5902)
!5911 = !DILocation(line: 261, column: 16, scope: !5902)
!5912 = !DILocation(line: 262, column: 18, scope: !5902)
!5913 = !DILocation(line: 262, column: 16, scope: !5902)
!5914 = !DILocation(line: 263, column: 1, scope: !5902)
!5915 = distinct !DISubprogram(name: "uart_set_fifo", scope: !2681, file: !2681, line: 265, type: !5852, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !5916)
!5916 = !{!5917, !5918, !5919}
!5917 = !DILocalVariable(name: "uartx", arg: 1, scope: !5915, file: !2681, line: 265, type: !5629)
!5918 = !DILocalVariable(name: "EFR", scope: !5915, file: !2681, line: 267, type: !975)
!5919 = !DILocalVariable(name: "LCR", scope: !5915, file: !2681, line: 267, type: !975)
!5920 = !DILocation(line: 0, scope: !5915)
!5921 = !DILocation(line: 269, column: 18, scope: !5915)
!5922 = !DILocation(line: 271, column: 16, scope: !5915)
!5923 = !DILocation(line: 272, column: 30, scope: !5915)
!5924 = !DILocation(line: 274, column: 30, scope: !5915)
!5925 = !DILocation(line: 274, column: 28, scope: !5915)
!5926 = !DILocation(line: 276, column: 16, scope: !5915)
!5927 = !DILocation(line: 277, column: 28, scope: !5915)
!5928 = !DILocation(line: 283, column: 18, scope: !5915)
!5929 = !DILocation(line: 283, column: 16, scope: !5915)
!5930 = !DILocation(line: 284, column: 1, scope: !5915)
!5931 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !2681, file: !2681, line: 307, type: !5852, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !5932)
!5932 = !{!5933, !5934, !5935}
!5933 = !DILocalVariable(name: "uartx", arg: 1, scope: !5931, file: !2681, line: 307, type: !5629)
!5934 = !DILocalVariable(name: "IER", scope: !5931, file: !2681, line: 309, type: !975)
!5935 = !DILocalVariable(name: "LCR", scope: !5931, file: !2681, line: 309, type: !975)
!5936 = !DILocation(line: 0, scope: !5931)
!5937 = !DILocation(line: 311, column: 18, scope: !5931)
!5938 = !DILocation(line: 313, column: 16, scope: !5931)
!5939 = !DILocation(line: 314, column: 26, scope: !5931)
!5940 = !DILocation(line: 316, column: 26, scope: !5931)
!5941 = !DILocation(line: 316, column: 24, scope: !5931)
!5942 = !DILocation(line: 318, column: 19, scope: !5931)
!5943 = !DILocation(line: 318, column: 16, scope: !5931)
!5944 = !DILocation(line: 319, column: 1, scope: !5931)
!5945 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !2681, file: !2681, line: 321, type: !5946, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !5948)
!5946 = !DISubroutineType(types: !5947)
!5947 = !{null, !5629, !1092}
!5948 = !{!5949, !5950, !5951}
!5949 = !DILocalVariable(name: "uartx", arg: 1, scope: !5945, file: !2681, line: 321, type: !5629)
!5950 = !DILocalVariable(name: "is_rx", arg: 2, scope: !5945, file: !2681, line: 321, type: !1092)
!5951 = !DILocalVariable(name: "FCR", scope: !5945, file: !2681, line: 323, type: !975)
!5952 = !DILocation(line: 0, scope: !5945)
!5953 = !DILocation(line: 327, column: 9, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5945, file: !2681, line: 327, column: 9)
!5955 = !DILocation(line: 333, column: 24, scope: !5945)
!5956 = !DILocation(line: 333, column: 28, scope: !5945)
!5957 = !DILocation(line: 334, column: 1, scope: !5945)
!5958 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !2681, file: !2681, line: 336, type: !5959, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !5962)
!5959 = !DISubroutineType(types: !5960)
!5960 = !{!5961, !5629}
!5961 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !730, line: 55, baseType: !786)
!5962 = !{!5963, !5964, !5965, !5966}
!5963 = !DILocalVariable(name: "uartx", arg: 1, scope: !5958, file: !2681, line: 336, type: !5629)
!5964 = !DILocalVariable(name: "IIR", scope: !5958, file: !2681, line: 338, type: !975)
!5965 = !DILocalVariable(name: "LSR", scope: !5958, file: !2681, line: 338, type: !975)
!5966 = !DILocalVariable(name: "type", scope: !5958, file: !2681, line: 339, type: !5961)
!5967 = !DILocation(line: 0, scope: !5958)
!5968 = !DILocation(line: 341, column: 30, scope: !5958)
!5969 = !DILocation(line: 342, column: 13, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5958, file: !2681, line: 342, column: 9)
!5971 = !DILocation(line: 342, column: 9, scope: !5958)
!5972 = !DILocation(line: 346, column: 17, scope: !5958)
!5973 = !DILocation(line: 346, column: 5, scope: !5958)
!5974 = !DILocation(line: 350, column: 13, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5958, file: !2681, line: 346, column: 37)
!5976 = !DILocation(line: 353, column: 35, scope: !5975)
!5977 = !DILocation(line: 354, column: 21, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5975, file: !2681, line: 354, column: 17)
!5979 = !DILocation(line: 363, column: 13, scope: !5975)
!5980 = !DILocation(line: 369, column: 1, scope: !5958)
!5981 = distinct !DISubprogram(name: "uart_verify_error", scope: !2681, file: !2681, line: 371, type: !5982, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !5984)
!5982 = !DISubroutineType(types: !5983)
!5983 = !{!1092, !5629}
!5984 = !{!5985, !5986, !5987}
!5985 = !DILocalVariable(name: "uartx", arg: 1, scope: !5981, file: !2681, line: 371, type: !5629)
!5986 = !DILocalVariable(name: "LSR", scope: !5981, file: !2681, line: 373, type: !975)
!5987 = !DILocalVariable(name: "ret", scope: !5981, file: !2681, line: 374, type: !1092)
!5988 = !DILocation(line: 0, scope: !5981)
!5989 = !DILocation(line: 376, column: 27, scope: !5981)
!5990 = !DILocation(line: 377, column: 15, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5981, file: !2681, line: 377, column: 9)
!5992 = !DILocation(line: 377, column: 9, scope: !5981)
!5993 = !DILocation(line: 381, column: 5, scope: !5981)
!5994 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !2681, file: !2681, line: 384, type: !5852, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !5995)
!5995 = !{!5996, !5997}
!5996 = !DILocalVariable(name: "uartx", arg: 1, scope: !5994, file: !2681, line: 384, type: !5629)
!5997 = !DILocalVariable(name: "DMA_EN", scope: !5994, file: !2681, line: 386, type: !975)
!5998 = !DILocation(line: 0, scope: !5994)
!5999 = !DILocation(line: 388, column: 21, scope: !5994)
!6000 = !DILocation(line: 390, column: 1, scope: !5994)
!6001 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !2681, file: !2681, line: 392, type: !5852, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !6002)
!6002 = !{!6003}
!6003 = !DILocalVariable(name: "uartx", arg: 1, scope: !6001, file: !2681, line: 392, type: !5629)
!6004 = !DILocation(line: 0, scope: !6001)
!6005 = !DILocation(line: 394, column: 12, scope: !6001)
!6006 = !DILocation(line: 394, column: 16, scope: !6001)
!6007 = !DILocation(line: 395, column: 24, scope: !6001)
!6008 = !DILocation(line: 395, column: 28, scope: !6001)
!6009 = !DILocation(line: 396, column: 21, scope: !6001)
!6010 = !DILocation(line: 396, column: 26, scope: !6001)
!6011 = !DILocation(line: 397, column: 12, scope: !6001)
!6012 = !DILocation(line: 397, column: 18, scope: !6001)
!6013 = !DILocation(line: 399, column: 16, scope: !6001)
!6014 = !DILocation(line: 400, column: 24, scope: !6001)
!6015 = !DILocation(line: 400, column: 28, scope: !6001)
!6016 = !DILocation(line: 401, column: 20, scope: !6001)
!6017 = !DILocation(line: 401, column: 24, scope: !6001)
!6018 = !DILocation(line: 403, column: 16, scope: !6001)
!6019 = !DILocation(line: 404, column: 24, scope: !6001)
!6020 = !DILocation(line: 405, column: 28, scope: !6001)
!6021 = !DILocation(line: 407, column: 16, scope: !6001)
!6022 = !DILocation(line: 408, column: 28, scope: !6001)
!6023 = !DILocation(line: 409, column: 16, scope: !6001)
!6024 = !DILocation(line: 411, column: 25, scope: !6001)
!6025 = !DILocation(line: 412, column: 22, scope: !6001)
!6026 = !DILocation(line: 412, column: 26, scope: !6001)
!6027 = !DILocation(line: 413, column: 12, scope: !6001)
!6028 = !DILocation(line: 413, column: 24, scope: !6001)
!6029 = !DILocation(line: 414, column: 12, scope: !6001)
!6030 = !DILocation(line: 414, column: 22, scope: !6001)
!6031 = !DILocation(line: 415, column: 12, scope: !6001)
!6032 = !DILocation(line: 415, column: 25, scope: !6001)
!6033 = !DILocation(line: 416, column: 12, scope: !6001)
!6034 = !DILocation(line: 416, column: 25, scope: !6001)
!6035 = !DILocation(line: 417, column: 12, scope: !6001)
!6036 = !DILocation(line: 417, column: 23, scope: !6001)
!6037 = !DILocation(line: 418, column: 12, scope: !6001)
!6038 = !DILocation(line: 418, column: 27, scope: !6001)
!6039 = !DILocation(line: 419, column: 12, scope: !6001)
!6040 = !DILocation(line: 419, column: 18, scope: !6001)
!6041 = !DILocation(line: 420, column: 12, scope: !6001)
!6042 = !DILocation(line: 420, column: 23, scope: !6001)
!6043 = !DILocation(line: 421, column: 12, scope: !6001)
!6044 = !DILocation(line: 421, column: 22, scope: !6001)
!6045 = !DILocation(line: 422, column: 12, scope: !6001)
!6046 = !DILocation(line: 422, column: 21, scope: !6001)
!6047 = !DILocation(line: 423, column: 12, scope: !6001)
!6048 = !DILocation(line: 423, column: 19, scope: !6001)
!6049 = !DILocation(line: 424, column: 23, scope: !6001)
!6050 = !DILocation(line: 425, column: 12, scope: !6001)
!6051 = !DILocation(line: 425, column: 22, scope: !6001)
!6052 = !DILocation(line: 426, column: 12, scope: !6001)
!6053 = !DILocation(line: 426, column: 22, scope: !6001)
!6054 = !DILocation(line: 427, column: 1, scope: !6001)
!6055 = distinct !DISubprogram(name: "uart_query_empty", scope: !2681, file: !2681, line: 429, type: !5852, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !6056)
!6056 = !{!6057}
!6057 = !DILocalVariable(name: "uartx", arg: 1, scope: !6055, file: !2681, line: 429, type: !5629)
!6058 = !DILocation(line: 0, scope: !6055)
!6059 = !DILocation(line: 431, column: 5, scope: !6055)
!6060 = !DILocation(line: 431, column: 31, scope: !6055)
!6061 = !DILocation(line: 431, column: 36, scope: !6055)
!6062 = !DILocation(line: 431, column: 12, scope: !6055)
!6063 = distinct !{!6063, !6059, !6064}
!6064 = !DILocation(line: 431, column: 44, scope: !6055)
!6065 = !DILocation(line: 432, column: 1, scope: !6055)
!6066 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !784, file: !784, line: 134, type: !6067, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !6069)
!6067 = !DISubroutineType(types: !6068)
!6068 = !{!4584, !735, !1092}
!6069 = !{!6070, !6071, !6072}
!6070 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6066, file: !784, line: 134, type: !735)
!6071 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6066, file: !784, line: 134, type: !1092)
!6072 = !DILocalVariable(name: "dma_channel", scope: !6066, file: !784, line: 136, type: !4584)
!6073 = !DILocation(line: 0, scope: !6066)
!6074 = !DILocation(line: 138, column: 5, scope: !6066)
!6075 = !DILocation(line: 140, column: 17, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6077, file: !784, line: 140, column: 17)
!6077 = distinct !DILexicalBlock(scope: !6066, file: !784, line: 138, column: 24)
!6078 = !DILocation(line: 147, column: 17, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6077, file: !784, line: 147, column: 17)
!6080 = !DILocation(line: 154, column: 17, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6077, file: !784, line: 154, column: 17)
!6082 = !DILocation(line: 161, column: 17, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6077, file: !784, line: 161, column: 17)
!6084 = !DILocation(line: 171, column: 5, scope: !6066)
!6085 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !784, file: !784, line: 174, type: !6086, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !6094)
!6086 = !DISubroutineType(types: !6087)
!6087 = !{null, !4584, !6088}
!6088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6089, size: 32)
!6089 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !730, line: 96, baseType: !6090)
!6090 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !730, line: 93, size: 64, elements: !6091)
!6091 = !{!6092, !6093}
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !6090, file: !730, line: 94, baseType: !91, size: 8)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !6090, file: !730, line: 95, baseType: !735, size: 32, offset: 32)
!6094 = !{!6095, !6096}
!6095 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !6085, file: !784, line: 174, type: !4584)
!6096 = !DILocalVariable(name: "user_data", arg: 2, scope: !6085, file: !784, line: 174, type: !6088)
!6097 = !DILocation(line: 0, scope: !6085)
!6098 = !DILocation(line: 176, column: 5, scope: !6085)
!6099 = !DILocation(line: 0, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6085, file: !784, line: 176, column: 26)
!6101 = !DILocation(line: 212, column: 1, scope: !6085)
!6102 = distinct !DISubprogram(name: "uart_enable_dma", scope: !784, file: !784, line: 214, type: !6103, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !6105)
!6103 = !DISubroutineType(types: !6104)
!6104 = !{null, !797}
!6105 = !{!6106}
!6106 = !DILocalVariable(name: "uartx", arg: 1, scope: !6102, file: !784, line: 214, type: !797)
!6107 = !DILocation(line: 0, scope: !6102)
!6108 = !DILocation(line: 216, column: 12, scope: !6102)
!6109 = !DILocation(line: 216, column: 19, scope: !6102)
!6110 = !DILocation(line: 217, column: 1, scope: !6102)
!6111 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !784, file: !784, line: 219, type: !1104, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !6112)
!6112 = !{!6113, !6114, !6115, !6116}
!6113 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6111, file: !784, line: 219, type: !862)
!6114 = !DILocalVariable(name: "uart_port", scope: !6111, file: !784, line: 221, type: !735)
!6115 = !DILocalVariable(name: "type", scope: !6111, file: !784, line: 222, type: !5961)
!6116 = !DILocalVariable(name: "uartx", scope: !6111, file: !784, line: 223, type: !797)
!6117 = !DILocation(line: 0, scope: !6111)
!6118 = !DILocation(line: 225, column: 5, scope: !6111)
!6119 = !DILocation(line: 242, column: 13, scope: !6111)
!6120 = !DILocation(line: 243, column: 12, scope: !6111)
!6121 = !DILocation(line: 245, column: 5, scope: !6111)
!6122 = !DILocation(line: 248, column: 13, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6111, file: !784, line: 245, column: 19)
!6124 = !DILocation(line: 249, column: 13, scope: !6123)
!6125 = !DILocation(line: 252, column: 13, scope: !6123)
!6126 = !DILocation(line: 253, column: 13, scope: !6123)
!6127 = !DILocation(line: 263, column: 13, scope: !6123)
!6128 = !DILocation(line: 264, column: 13, scope: !6123)
!6129 = !DILocation(line: 276, column: 13, scope: !6123)
!6130 = !DILocation(line: 278, column: 1, scope: !6111)
!6131 = distinct !DISubprogram(name: "hal_spi_master_init", scope: !869, file: !869, line: 184, type: !6132, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6148)
!6132 = !DISubroutineType(types: !6133)
!6133 = !{!6134, !952, !6135}
!6134 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_status_t", file: !872, line: 556, baseType: !871)
!6135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6136, size: 32)
!6136 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_config_t", file: !872, line: 580, baseType: !6137)
!6137 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 574, size: 160, elements: !6138)
!6138 = !{!6139, !6140, !6142, !6144, !6146}
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "clock_frequency", scope: !6137, file: !872, line: 575, baseType: !61, size: 32)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "slave_port", scope: !6137, file: !872, line: 576, baseType: !6141, size: 32, offset: 32)
!6141 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_slave_port_t", file: !98, line: 594, baseType: !886)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "bit_order", scope: !6137, file: !872, line: 577, baseType: !6143, size: 32, offset: 64)
!6143 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_bit_order_t", file: !98, line: 614, baseType: !891)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !6137, file: !872, line: 578, baseType: !6145, size: 32, offset: 96)
!6145 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_clock_polarity_t", file: !98, line: 600, baseType: !895)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !6137, file: !872, line: 579, baseType: !6147, size: 32, offset: 128)
!6147 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_clock_phase_t", file: !98, line: 607, baseType: !899)
!6148 = !{!6149, !6150, !6151, !6152}
!6149 = !DILocalVariable(name: "master_port", arg: 1, scope: !6131, file: !869, line: 184, type: !952)
!6150 = !DILocalVariable(name: "spi_config", arg: 2, scope: !6131, file: !869, line: 185, type: !6135)
!6151 = !DILocalVariable(name: "busy_status", scope: !6131, file: !869, line: 187, type: !6134)
!6152 = !DILocalVariable(name: "saved_mask", scope: !6153, file: !869, line: 197, type: !61)
!6153 = distinct !DILexicalBlock(scope: !6131, file: !869, line: 197, column: 5)
!6154 = !DILocation(line: 0, scope: !6131)
!6155 = !DILocation(line: 189, column: 10, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6131, file: !869, line: 189, column: 9)
!6157 = !DILocation(line: 189, column: 9, scope: !6131)
!6158 = !DILocation(line: 192, column: 10, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6131, file: !869, line: 192, column: 9)
!6160 = !DILocation(line: 192, column: 9, scope: !6131)
!6161 = !DILocation(line: 197, column: 5, scope: !6153)
!6162 = !DILocation(line: 0, scope: !6153)
!6163 = !DILocation(line: 197, column: 5, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6153, file: !869, line: 197, column: 5)
!6165 = !DILocation(line: 197, column: 5, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6164, file: !869, line: 197, column: 5)
!6167 = !DILocation(line: 203, column: 30, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6131, file: !869, line: 203, column: 9)
!6169 = !DILocation(line: 203, column: 9, scope: !6168)
!6170 = !DILocation(line: 203, column: 9, scope: !6131)
!6171 = !DILocation(line: 199, column: 9, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6173, file: !869, line: 198, column: 58)
!6173 = distinct !DILexicalBlock(scope: !6131, file: !869, line: 198, column: 9)
!6174 = !DILocation(line: 200, column: 9, scope: !6172)
!6175 = !DILocation(line: 204, column: 36, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6177, file: !869, line: 204, column: 13)
!6177 = distinct !DILexicalBlock(scope: !6168, file: !869, line: 203, column: 68)
!6178 = !DILocation(line: 204, column: 33, scope: !6176)
!6179 = !DILocation(line: 204, column: 13, scope: !6177)
!6180 = !DILocation(line: 205, column: 13, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6176, file: !869, line: 204, column: 83)
!6182 = !DILocation(line: 206, column: 13, scope: !6181)
!6183 = !DILocation(line: 211, column: 5, scope: !6131)
!6184 = !DILocation(line: 215, column: 5, scope: !6131)
!6185 = !DILocation(line: 216, column: 1, scope: !6131)
!6186 = distinct !DISubprogram(name: "is_master_port", scope: !869, file: !869, line: 76, type: !6187, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6189)
!6187 = !DISubroutineType(types: !6188)
!6188 = !{!91, !952}
!6189 = !{!6190}
!6190 = !DILocalVariable(name: "master_port", arg: 1, scope: !6186, file: !869, line: 76, type: !952)
!6191 = !DILocation(line: 0, scope: !6186)
!6192 = !DILocation(line: 78, column: 25, scope: !6186)
!6193 = !DILocation(line: 78, column: 5, scope: !6186)
!6194 = distinct !DISubprogram(name: "is_master_config", scope: !869, file: !869, line: 81, type: !6195, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6199)
!6195 = !DISubroutineType(types: !6196)
!6196 = !{!91, !6197}
!6197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6198, size: 32)
!6198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6136)
!6199 = !{!6200, !6201}
!6200 = !DILocalVariable(name: "spi_config", arg: 1, scope: !6194, file: !869, line: 81, type: !6197)
!6201 = !DILocalVariable(name: "ret", scope: !6194, file: !869, line: 83, type: !91)
!6202 = !DILocation(line: 0, scope: !6194)
!6203 = !DILocation(line: 85, column: 27, scope: !6194)
!6204 = !DILocation(line: 85, column: 83, scope: !6194)
!6205 = !DILocation(line: 88, column: 27, scope: !6194)
!6206 = !DILocation(line: 91, column: 27, scope: !6194)
!6207 = !DILocation(line: 94, column: 27, scope: !6194)
!6208 = !DILocation(line: 91, column: 9, scope: !6194)
!6209 = !DILocation(line: 94, column: 9, scope: !6194)
!6210 = !DILocation(line: 100, column: 26, scope: !6194)
!6211 = !DILocation(line: 100, column: 9, scope: !6194)
!6212 = !DILocation(line: 102, column: 5, scope: !6194)
!6213 = distinct !DISubprogram(name: "hal_spi_master_set_advanced_config", scope: !869, file: !869, line: 219, type: !6214, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6228)
!6214 = !DISubroutineType(types: !6215)
!6215 = !{!6134, !952, !6216}
!6216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6217, size: 32)
!6217 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_advanced_config_t", file: !872, line: 589, baseType: !6218)
!6218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 584, size: 128, elements: !6219)
!6219 = !{!6220, !6222, !6224, !6226}
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "byte_order", scope: !6218, file: !872, line: 585, baseType: !6221, size: 32)
!6221 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_byte_order_t", file: !872, line: 492, baseType: !903)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "chip_polarity", scope: !6218, file: !872, line: 586, baseType: !6223, size: 32, offset: 32)
!6223 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_chip_select_polarity_t", file: !872, line: 499, baseType: !907)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "get_tick", scope: !6218, file: !872, line: 587, baseType: !6225, size: 32, offset: 64)
!6225 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_get_tick_mode_t", file: !872, line: 512, baseType: !911)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "sample_select", scope: !6218, file: !872, line: 588, baseType: !6227, size: 32, offset: 96)
!6227 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_sample_select_t", file: !872, line: 519, baseType: !921)
!6228 = !{!6229, !6230}
!6229 = !DILocalVariable(name: "master_port", arg: 1, scope: !6213, file: !869, line: 219, type: !952)
!6230 = !DILocalVariable(name: "advanced_config", arg: 2, scope: !6213, file: !869, line: 220, type: !6216)
!6231 = !DILocation(line: 0, scope: !6213)
!6232 = !DILocation(line: 222, column: 10, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6213, file: !869, line: 222, column: 9)
!6234 = !DILocation(line: 222, column: 9, scope: !6213)
!6235 = !DILocation(line: 225, column: 10, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6213, file: !869, line: 225, column: 9)
!6237 = !DILocation(line: 225, column: 9, scope: !6213)
!6238 = !DILocation(line: 229, column: 32, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6213, file: !869, line: 229, column: 9)
!6240 = !DILocation(line: 229, column: 29, scope: !6239)
!6241 = !DILocation(line: 229, column: 9, scope: !6213)
!6242 = !DILocation(line: 233, column: 5, scope: !6213)
!6243 = !DILocation(line: 235, column: 5, scope: !6213)
!6244 = !DILocation(line: 236, column: 1, scope: !6213)
!6245 = distinct !DISubprogram(name: "is_master_advanced_config", scope: !869, file: !869, line: 106, type: !6246, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6250)
!6246 = !DISubroutineType(types: !6247)
!6247 = !{!91, !6248}
!6248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6249, size: 32)
!6249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6217)
!6250 = !{!6251, !6252}
!6251 = !DILocalVariable(name: "advanced_config", arg: 1, scope: !6245, file: !869, line: 106, type: !6248)
!6252 = !DILocalVariable(name: "ret", scope: !6245, file: !869, line: 108, type: !91)
!6253 = !DILocation(line: 0, scope: !6245)
!6254 = !DILocation(line: 110, column: 32, scope: !6245)
!6255 = !DILocation(line: 113, column: 32, scope: !6245)
!6256 = !DILocation(line: 116, column: 31, scope: !6245)
!6257 = !DILocation(line: 118, column: 32, scope: !6245)
!6258 = !DILocation(line: 113, column: 9, scope: !6245)
!6259 = !DILocation(line: 116, column: 41, scope: !6245)
!6260 = !DILocation(line: 118, column: 9, scope: !6245)
!6261 = !DILocation(line: 121, column: 5, scope: !6245)
!6262 = distinct !DISubprogram(name: "hal_spi_master_deinit", scope: !869, file: !869, line: 239, type: !6263, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6265)
!6263 = !DISubroutineType(types: !6264)
!6264 = !{!6134, !952}
!6265 = !{!6266}
!6266 = !DILocalVariable(name: "master_port", arg: 1, scope: !6262, file: !869, line: 239, type: !952)
!6267 = !DILocation(line: 0, scope: !6262)
!6268 = !DILocation(line: 241, column: 10, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6262, file: !869, line: 241, column: 9)
!6270 = !DILocation(line: 241, column: 9, scope: !6262)
!6271 = !DILocation(line: 246, column: 26, scope: !6262)
!6272 = !DILocation(line: 246, column: 5, scope: !6262)
!6273 = !DILocation(line: 249, column: 5, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6262, file: !869, line: 249, column: 5)
!6275 = !DILocation(line: 252, column: 5, scope: !6262)
!6276 = !DILocation(line: 252, column: 34, scope: !6262)
!6277 = !DILocation(line: 254, column: 23, scope: !6262)
!6278 = !DILocation(line: 254, column: 5, scope: !6262)
!6279 = !DILocation(line: 259, column: 5, scope: !6262)
!6280 = !DILocation(line: 260, column: 1, scope: !6262)
!6281 = distinct !DISubprogram(name: "hal_spi_master_register_callback", scope: !869, file: !869, line: 263, type: !6282, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6284)
!6282 = !DISubroutineType(types: !6283)
!6283 = !{!6134, !952, !963, !88}
!6284 = !{!6285, !6286, !6287}
!6285 = !DILocalVariable(name: "master_port", arg: 1, scope: !6281, file: !869, line: 263, type: !952)
!6286 = !DILocalVariable(name: "callback", arg: 2, scope: !6281, file: !869, line: 264, type: !963)
!6287 = !DILocalVariable(name: "user_data", arg: 3, scope: !6281, file: !869, line: 265, type: !88)
!6288 = !DILocation(line: 0, scope: !6281)
!6289 = !DILocation(line: 267, column: 10, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6281, file: !869, line: 267, column: 9)
!6291 = !DILocation(line: 267, column: 9, scope: !6281)
!6292 = !DILocation(line: 270, column: 14, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6281, file: !869, line: 270, column: 9)
!6294 = !DILocation(line: 270, column: 9, scope: !6281)
!6295 = !DILocation(line: 274, column: 5, scope: !6281)
!6296 = !DILocation(line: 274, column: 34, scope: !6281)
!6297 = !DILocation(line: 276, column: 5, scope: !6281)
!6298 = !DILocation(line: 276, column: 35, scope: !6281)
!6299 = !DILocation(line: 279, column: 35, scope: !6281)
!6300 = !DILocation(line: 279, column: 5, scope: !6281)
!6301 = !DILocation(line: 280, column: 57, scope: !6281)
!6302 = !DILocation(line: 280, column: 5, scope: !6281)
!6303 = !DILocation(line: 281, column: 5, scope: !6281)
!6304 = !DILocation(line: 283, column: 5, scope: !6281)
!6305 = !DILocation(line: 284, column: 1, scope: !6281)
!6306 = distinct !DISubprogram(name: "hal_spi_master_isr", scope: !869, file: !869, line: 140, type: !1104, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6307)
!6307 = !{!6308, !6309, !6310}
!6308 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6306, file: !869, line: 140, type: !862)
!6309 = !DILocalVariable(name: "spi_port", scope: !6306, file: !869, line: 142, type: !952)
!6310 = !DILocalVariable(name: "i", scope: !6306, file: !869, line: 143, type: !61)
!6311 = !DILocation(line: 0, scope: !6306)
!6312 = !DILocation(line: 144, column: 5, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6306, file: !869, line: 144, column: 5)
!6314 = !DILocation(line: 145, column: 13, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6316, file: !869, line: 145, column: 13)
!6316 = distinct !DILexicalBlock(scope: !6317, file: !869, line: 144, column: 46)
!6317 = distinct !DILexicalBlock(scope: !6313, file: !869, line: 144, column: 5)
!6318 = !DILocation(line: 145, column: 32, scope: !6315)
!6319 = !DILocation(line: 145, column: 13, scope: !6316)
!6320 = !DILocation(line: 144, column: 42, scope: !6317)
!6321 = !DILocation(line: 144, column: 19, scope: !6317)
!6322 = distinct !{!6322, !6312, !6323}
!6323 = !DILocation(line: 149, column: 5, scope: !6313)
!6324 = !DILocation(line: 151, column: 31, scope: !6306)
!6325 = !DILocation(line: 151, column: 58, scope: !6306)
!6326 = !DILocation(line: 151, column: 5, scope: !6306)
!6327 = !DILocation(line: 152, column: 1, scope: !6306)
!6328 = distinct !DISubprogram(name: "hal_spi_master_send_polling", scope: !869, file: !869, line: 287, type: !6329, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6331)
!6329 = !DISubroutineType(types: !6330)
!6330 = !{!6134, !952, !762, !61}
!6331 = !{!6332, !6333, !6334, !6335}
!6332 = !DILocalVariable(name: "master_port", arg: 1, scope: !6328, file: !869, line: 287, type: !952)
!6333 = !DILocalVariable(name: "data", arg: 2, scope: !6328, file: !869, line: 288, type: !762)
!6334 = !DILocalVariable(name: "size", arg: 3, scope: !6328, file: !869, line: 289, type: !61)
!6335 = !DILocalVariable(name: "status", scope: !6328, file: !869, line: 291, type: !6134)
!6336 = !DILocation(line: 0, scope: !6328)
!6337 = !DILocation(line: 293, column: 10, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6328, file: !869, line: 293, column: 9)
!6339 = !DILocation(line: 293, column: 9, scope: !6328)
!6340 = !DILocation(line: 297, column: 14, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6328, file: !869, line: 297, column: 9)
!6342 = !DILocation(line: 297, column: 9, scope: !6328)
!6343 = !DILocation(line: 307, column: 32, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6328, file: !869, line: 307, column: 9)
!6345 = !DILocation(line: 307, column: 29, scope: !6344)
!6346 = !DILocation(line: 307, column: 9, scope: !6328)
!6347 = !DILocation(line: 308, column: 9, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6344, file: !869, line: 307, column: 61)
!6349 = !DILocation(line: 309, column: 9, scope: !6348)
!6350 = !DILocation(line: 312, column: 5, scope: !6328)
!6351 = !DILocation(line: 313, column: 5, scope: !6328)
!6352 = !DILocation(line: 314, column: 5, scope: !6328)
!6353 = !DILocation(line: 315, column: 5, scope: !6328)
!6354 = !DILocation(line: 317, column: 14, scope: !6328)
!6355 = !DILocation(line: 318, column: 34, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6328, file: !869, line: 318, column: 9)
!6357 = !DILocation(line: 318, column: 9, scope: !6328)
!6358 = !DILocation(line: 324, column: 14, scope: !6328)
!6359 = !DILocation(line: 325, column: 34, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6328, file: !869, line: 325, column: 9)
!6361 = !DILocation(line: 325, column: 9, scope: !6328)
!6362 = !DILocation(line: 333, column: 5, scope: !6328)
!6363 = !DILocation(line: 343, column: 5, scope: !6328)
!6364 = !DILocation(line: 344, column: 1, scope: !6328)
!6365 = distinct !DISubprogram(name: "hal_spi_master_send_dma", scope: !869, file: !869, line: 347, type: !6329, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6366)
!6366 = !{!6367, !6368, !6369, !6370}
!6367 = !DILocalVariable(name: "master_port", arg: 1, scope: !6365, file: !869, line: 347, type: !952)
!6368 = !DILocalVariable(name: "data", arg: 2, scope: !6365, file: !869, line: 348, type: !762)
!6369 = !DILocalVariable(name: "size", arg: 3, scope: !6365, file: !869, line: 349, type: !61)
!6370 = !DILocalVariable(name: "status", scope: !6365, file: !869, line: 351, type: !6134)
!6371 = !DILocation(line: 0, scope: !6365)
!6372 = !DILocation(line: 353, column: 10, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6365, file: !869, line: 353, column: 9)
!6374 = !DILocation(line: 353, column: 9, scope: !6365)
!6375 = !DILocation(line: 356, column: 14, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6365, file: !869, line: 356, column: 9)
!6377 = !DILocation(line: 356, column: 9, scope: !6365)
!6378 = !DILocation(line: 360, column: 10, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6365, file: !869, line: 360, column: 9)
!6380 = !DILocation(line: 360, column: 25, scope: !6379)
!6381 = !DILocation(line: 360, column: 30, scope: !6379)
!6382 = !DILocation(line: 360, column: 9, scope: !6365)
!6383 = !DILocation(line: 367, column: 17, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6365, file: !869, line: 367, column: 9)
!6385 = !DILocation(line: 367, column: 9, scope: !6365)
!6386 = !DILocation(line: 372, column: 32, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6365, file: !869, line: 372, column: 9)
!6388 = !DILocation(line: 372, column: 29, scope: !6387)
!6389 = !DILocation(line: 372, column: 9, scope: !6365)
!6390 = !DILocation(line: 373, column: 9, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6387, file: !869, line: 372, column: 61)
!6392 = !DILocation(line: 374, column: 9, scope: !6391)
!6393 = !DILocation(line: 377, column: 5, scope: !6365)
!6394 = !DILocation(line: 378, column: 5, scope: !6365)
!6395 = !DILocation(line: 379, column: 5, scope: !6365)
!6396 = !DILocation(line: 380, column: 5, scope: !6365)
!6397 = !DILocation(line: 381, column: 14, scope: !6365)
!6398 = !DILocation(line: 382, column: 16, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6365, file: !869, line: 382, column: 9)
!6400 = !DILocation(line: 382, column: 9, scope: !6365)
!6401 = !DILocation(line: 393, column: 9, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6399, file: !869, line: 384, column: 12)
!6403 = !DILocation(line: 394, column: 9, scope: !6402)
!6404 = !DILocation(line: 394, column: 38, scope: !6402)
!6405 = !DILocation(line: 397, column: 5, scope: !6365)
!6406 = !DILocation(line: 398, column: 1, scope: !6365)
!6407 = distinct !DISubprogram(name: "hal_spi_master_send_dma_blocking", scope: !869, file: !869, line: 400, type: !6329, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6408)
!6408 = !{!6409, !6410, !6411, !6412}
!6409 = !DILocalVariable(name: "master_port", arg: 1, scope: !6407, file: !869, line: 400, type: !952)
!6410 = !DILocalVariable(name: "data", arg: 2, scope: !6407, file: !869, line: 401, type: !762)
!6411 = !DILocalVariable(name: "size", arg: 3, scope: !6407, file: !869, line: 402, type: !61)
!6412 = !DILocalVariable(name: "status", scope: !6407, file: !869, line: 404, type: !6134)
!6413 = !DILocation(line: 0, scope: !6407)
!6414 = !DILocation(line: 406, column: 10, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6407, file: !869, line: 406, column: 9)
!6416 = !DILocation(line: 406, column: 9, scope: !6407)
!6417 = !DILocation(line: 409, column: 14, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6407, file: !869, line: 409, column: 9)
!6419 = !DILocation(line: 409, column: 9, scope: !6407)
!6420 = !DILocation(line: 413, column: 10, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6407, file: !869, line: 413, column: 9)
!6422 = !DILocation(line: 413, column: 25, scope: !6421)
!6423 = !DILocation(line: 413, column: 30, scope: !6421)
!6424 = !DILocation(line: 413, column: 9, scope: !6407)
!6425 = !DILocation(line: 420, column: 17, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6407, file: !869, line: 420, column: 9)
!6427 = !DILocation(line: 420, column: 9, scope: !6407)
!6428 = !DILocation(line: 425, column: 32, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6407, file: !869, line: 425, column: 9)
!6430 = !DILocation(line: 425, column: 29, scope: !6429)
!6431 = !DILocation(line: 425, column: 9, scope: !6407)
!6432 = !DILocation(line: 426, column: 9, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6429, file: !869, line: 425, column: 61)
!6434 = !DILocation(line: 427, column: 9, scope: !6433)
!6435 = !DILocation(line: 430, column: 5, scope: !6407)
!6436 = !DILocation(line: 431, column: 5, scope: !6407)
!6437 = !DILocation(line: 432, column: 5, scope: !6407)
!6438 = !DILocation(line: 433, column: 5, scope: !6407)
!6439 = !DILocation(line: 434, column: 14, scope: !6407)
!6440 = !DILocation(line: 435, column: 16, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6407, file: !869, line: 435, column: 9)
!6442 = !DILocation(line: 435, column: 9, scope: !6407)
!6443 = !DILocation(line: 438, column: 9, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6441, file: !869, line: 437, column: 12)
!6445 = !DILocation(line: 441, column: 5, scope: !6407)
!6446 = !DILocation(line: 442, column: 1, scope: !6407)
!6447 = distinct !DISubprogram(name: "hal_spi_master_send_and_receive_polling", scope: !869, file: !869, line: 445, type: !6448, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6458)
!6448 = !DISubroutineType(types: !6449)
!6449 = !{!6134, !952, !6450}
!6450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6451, size: 32)
!6451 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_send_and_receive_config_t", file: !872, line: 616, baseType: !6452)
!6452 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 611, size: 128, elements: !6453)
!6453 = !{!6454, !6455, !6456, !6457}
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !6452, file: !872, line: 612, baseType: !762, size: 32)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "send_length", scope: !6452, file: !872, line: 613, baseType: !61, size: 32, offset: 32)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !6452, file: !872, line: 614, baseType: !762, size: 32, offset: 64)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "receive_length", scope: !6452, file: !872, line: 615, baseType: !61, size: 32, offset: 96)
!6458 = !{!6459, !6460, !6461}
!6459 = !DILocalVariable(name: "master_port", arg: 1, scope: !6447, file: !869, line: 445, type: !952)
!6460 = !DILocalVariable(name: "spi_send_and_receive_config", arg: 2, scope: !6447, file: !869, line: 446, type: !6450)
!6461 = !DILocalVariable(name: "status", scope: !6447, file: !869, line: 448, type: !6134)
!6462 = !DILocation(line: 0, scope: !6447)
!6463 = !DILocation(line: 450, column: 10, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6447, file: !869, line: 450, column: 9)
!6465 = !DILocation(line: 450, column: 9, scope: !6447)
!6466 = !DILocation(line: 453, column: 47, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6447, file: !869, line: 453, column: 9)
!6468 = !DILocation(line: 453, column: 14, scope: !6467)
!6469 = !DILocation(line: 453, column: 9, scope: !6447)
!6470 = !DILocation(line: 456, column: 47, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6447, file: !869, line: 456, column: 9)
!6472 = !DILocation(line: 456, column: 14, scope: !6471)
!6473 = !DILocation(line: 456, column: 9, scope: !6447)
!6474 = !DILocation(line: 459, column: 40, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6447, file: !869, line: 459, column: 9)
!6476 = !DILocation(line: 459, column: 62, scope: !6475)
!6477 = !DILocation(line: 463, column: 40, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6447, file: !869, line: 463, column: 9)
!6479 = !DILocation(line: 463, column: 59, scope: !6478)
!6480 = !DILocation(line: 469, column: 32, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6447, file: !869, line: 469, column: 9)
!6482 = !DILocation(line: 469, column: 29, scope: !6481)
!6483 = !DILocation(line: 469, column: 9, scope: !6447)
!6484 = !DILocation(line: 470, column: 9, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6481, file: !869, line: 469, column: 61)
!6486 = !DILocation(line: 471, column: 9, scope: !6485)
!6487 = !DILocation(line: 474, column: 5, scope: !6447)
!6488 = !DILocation(line: 475, column: 5, scope: !6447)
!6489 = !DILocation(line: 476, column: 5, scope: !6447)
!6490 = !DILocation(line: 477, column: 5, scope: !6447)
!6491 = !DILocation(line: 480, column: 82, scope: !6447)
!6492 = !DILocation(line: 480, column: 14, scope: !6447)
!6493 = !DILocation(line: 481, column: 34, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6447, file: !869, line: 481, column: 9)
!6495 = !DILocation(line: 481, column: 9, scope: !6447)
!6496 = !DILocation(line: 487, column: 70, scope: !6447)
!6497 = !DILocation(line: 487, column: 110, scope: !6447)
!6498 = !DILocation(line: 487, column: 14, scope: !6447)
!6499 = !DILocation(line: 488, column: 34, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6447, file: !869, line: 488, column: 9)
!6501 = !DILocation(line: 488, column: 9, scope: !6447)
!6502 = !DILocation(line: 496, column: 5, scope: !6447)
!6503 = !DILocation(line: 498, column: 69, scope: !6447)
!6504 = !DILocation(line: 498, column: 114, scope: !6447)
!6505 = !DILocation(line: 498, column: 14, scope: !6447)
!6506 = !DILocation(line: 507, column: 5, scope: !6447)
!6507 = !DILocation(line: 508, column: 1, scope: !6447)
!6508 = distinct !DISubprogram(name: "hal_spi_master_send_and_receive_dma", scope: !869, file: !869, line: 511, type: !6448, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6509)
!6509 = !{!6510, !6511, !6512}
!6510 = !DILocalVariable(name: "master_port", arg: 1, scope: !6508, file: !869, line: 511, type: !952)
!6511 = !DILocalVariable(name: "spi_send_and_receive_config", arg: 2, scope: !6508, file: !869, line: 512, type: !6450)
!6512 = !DILocalVariable(name: "status", scope: !6508, file: !869, line: 514, type: !6134)
!6513 = !DILocation(line: 0, scope: !6508)
!6514 = !DILocation(line: 516, column: 10, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6508, file: !869, line: 516, column: 9)
!6516 = !DILocation(line: 516, column: 9, scope: !6508)
!6517 = !DILocation(line: 519, column: 47, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6508, file: !869, line: 519, column: 9)
!6519 = !DILocation(line: 519, column: 14, scope: !6518)
!6520 = !DILocation(line: 519, column: 9, scope: !6508)
!6521 = !DILocation(line: 522, column: 47, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6508, file: !869, line: 522, column: 9)
!6523 = !DILocation(line: 522, column: 14, scope: !6522)
!6524 = !DILocation(line: 522, column: 9, scope: !6508)
!6525 = !DILocation(line: 526, column: 11, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6508, file: !869, line: 526, column: 9)
!6527 = !DILocation(line: 526, column: 67, scope: !6526)
!6528 = !DILocation(line: 526, column: 72, scope: !6526)
!6529 = !DILocation(line: 526, column: 77, scope: !6526)
!6530 = !DILocation(line: 530, column: 39, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6508, file: !869, line: 530, column: 9)
!6532 = !DILocation(line: 530, column: 55, scope: !6531)
!6533 = !DILocation(line: 530, column: 9, scope: !6508)
!6534 = !DILocation(line: 533, column: 39, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6508, file: !869, line: 533, column: 9)
!6536 = !DILocation(line: 533, column: 52, scope: !6535)
!6537 = !DILocation(line: 533, column: 9, scope: !6508)
!6538 = !DILocation(line: 537, column: 17, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6508, file: !869, line: 537, column: 9)
!6540 = !DILocation(line: 537, column: 97, scope: !6539)
!6541 = !DILocation(line: 538, column: 84, scope: !6539)
!6542 = !DILocation(line: 538, column: 44, scope: !6539)
!6543 = !DILocation(line: 538, column: 21, scope: !6539)
!6544 = !DILocation(line: 537, column: 9, scope: !6508)
!6545 = !DILocation(line: 544, column: 32, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6508, file: !869, line: 544, column: 9)
!6547 = !DILocation(line: 544, column: 29, scope: !6546)
!6548 = !DILocation(line: 544, column: 9, scope: !6508)
!6549 = !DILocation(line: 545, column: 9, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6546, file: !869, line: 544, column: 61)
!6551 = !DILocation(line: 546, column: 9, scope: !6550)
!6552 = !DILocation(line: 549, column: 70, scope: !6508)
!6553 = !DILocation(line: 549, column: 5, scope: !6508)
!6554 = !DILocation(line: 550, column: 70, scope: !6508)
!6555 = !DILocation(line: 550, column: 5, scope: !6508)
!6556 = !DILocation(line: 551, column: 5, scope: !6508)
!6557 = !DILocation(line: 552, column: 5, scope: !6508)
!6558 = !DILocation(line: 553, column: 5, scope: !6508)
!6559 = !DILocation(line: 554, column: 82, scope: !6508)
!6560 = !DILocation(line: 554, column: 14, scope: !6508)
!6561 = !DILocation(line: 555, column: 16, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6508, file: !869, line: 555, column: 9)
!6563 = !DILocation(line: 555, column: 9, scope: !6508)
!6564 = !DILocation(line: 566, column: 9, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6562, file: !869, line: 557, column: 12)
!6566 = !DILocation(line: 567, column: 9, scope: !6565)
!6567 = !DILocation(line: 567, column: 38, scope: !6565)
!6568 = !DILocation(line: 570, column: 5, scope: !6508)
!6569 = !DILocation(line: 571, column: 1, scope: !6508)
!6570 = distinct !DISubprogram(name: "hal_spi_master_send_and_receive_dma_blocking", scope: !869, file: !869, line: 573, type: !6448, scopeLine: 575, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6571)
!6571 = !{!6572, !6573, !6574}
!6572 = !DILocalVariable(name: "master_port", arg: 1, scope: !6570, file: !869, line: 573, type: !952)
!6573 = !DILocalVariable(name: "spi_send_and_receive_config", arg: 2, scope: !6570, file: !869, line: 574, type: !6450)
!6574 = !DILocalVariable(name: "status", scope: !6570, file: !869, line: 576, type: !6134)
!6575 = !DILocation(line: 0, scope: !6570)
!6576 = !DILocation(line: 578, column: 10, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6570, file: !869, line: 578, column: 9)
!6578 = !DILocation(line: 578, column: 9, scope: !6570)
!6579 = !DILocation(line: 581, column: 47, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6570, file: !869, line: 581, column: 9)
!6581 = !DILocation(line: 581, column: 14, scope: !6580)
!6582 = !DILocation(line: 581, column: 9, scope: !6570)
!6583 = !DILocation(line: 584, column: 47, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6570, file: !869, line: 584, column: 9)
!6585 = !DILocation(line: 584, column: 14, scope: !6584)
!6586 = !DILocation(line: 584, column: 9, scope: !6570)
!6587 = !DILocation(line: 588, column: 11, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6570, file: !869, line: 588, column: 9)
!6589 = !DILocation(line: 588, column: 67, scope: !6588)
!6590 = !DILocation(line: 588, column: 72, scope: !6588)
!6591 = !DILocation(line: 588, column: 77, scope: !6588)
!6592 = !DILocation(line: 592, column: 39, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6570, file: !869, line: 592, column: 9)
!6594 = !DILocation(line: 592, column: 55, scope: !6593)
!6595 = !DILocation(line: 592, column: 9, scope: !6570)
!6596 = !DILocation(line: 595, column: 39, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6570, file: !869, line: 595, column: 9)
!6598 = !DILocation(line: 595, column: 52, scope: !6597)
!6599 = !DILocation(line: 595, column: 9, scope: !6570)
!6600 = !DILocation(line: 599, column: 17, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6570, file: !869, line: 599, column: 9)
!6602 = !DILocation(line: 599, column: 97, scope: !6601)
!6603 = !DILocation(line: 600, column: 84, scope: !6601)
!6604 = !DILocation(line: 600, column: 44, scope: !6601)
!6605 = !DILocation(line: 600, column: 21, scope: !6601)
!6606 = !DILocation(line: 599, column: 9, scope: !6570)
!6607 = !DILocation(line: 606, column: 32, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6570, file: !869, line: 606, column: 9)
!6609 = !DILocation(line: 606, column: 29, scope: !6608)
!6610 = !DILocation(line: 606, column: 9, scope: !6570)
!6611 = !DILocation(line: 607, column: 9, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6608, file: !869, line: 606, column: 61)
!6613 = !DILocation(line: 608, column: 9, scope: !6612)
!6614 = !DILocation(line: 611, column: 70, scope: !6570)
!6615 = !DILocation(line: 611, column: 5, scope: !6570)
!6616 = !DILocation(line: 612, column: 70, scope: !6570)
!6617 = !DILocation(line: 612, column: 5, scope: !6570)
!6618 = !DILocation(line: 613, column: 5, scope: !6570)
!6619 = !DILocation(line: 614, column: 5, scope: !6570)
!6620 = !DILocation(line: 615, column: 5, scope: !6570)
!6621 = !DILocation(line: 616, column: 82, scope: !6570)
!6622 = !DILocation(line: 616, column: 14, scope: !6570)
!6623 = !DILocation(line: 617, column: 16, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6570, file: !869, line: 617, column: 9)
!6625 = !DILocation(line: 617, column: 9, scope: !6570)
!6626 = !DILocation(line: 620, column: 9, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6624, file: !869, line: 619, column: 12)
!6628 = !DILocation(line: 623, column: 5, scope: !6570)
!6629 = !DILocation(line: 624, column: 1, scope: !6570)
!6630 = distinct !DISubprogram(name: "hal_spi_master_get_running_status", scope: !869, file: !869, line: 627, type: !6631, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6635)
!6631 = !DISubroutineType(types: !6632)
!6632 = !{!6134, !952, !6633}
!6633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6634, size: 32)
!6634 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_running_status_t", file: !872, line: 563, baseType: !925)
!6635 = !{!6636, !6637, !6638}
!6636 = !DILocalVariable(name: "master_port", arg: 1, scope: !6630, file: !869, line: 627, type: !952)
!6637 = !DILocalVariable(name: "running_status", arg: 2, scope: !6630, file: !869, line: 628, type: !6633)
!6638 = !DILocalVariable(name: "status", scope: !6630, file: !869, line: 630, type: !61)
!6639 = !DILocation(line: 0, scope: !6630)
!6640 = !DILocation(line: 631, column: 10, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6630, file: !869, line: 631, column: 9)
!6642 = !DILocation(line: 631, column: 9, scope: !6630)
!6643 = !DILocation(line: 634, column: 14, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6630, file: !869, line: 634, column: 9)
!6645 = !DILocation(line: 634, column: 9, scope: !6630)
!6646 = !DILocation(line: 637, column: 30, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6630, file: !869, line: 637, column: 9)
!6648 = !DILocation(line: 637, column: 9, scope: !6647)
!6649 = !DILocation(line: 637, column: 9, scope: !6630)
!6650 = !DILocation(line: 642, column: 14, scope: !6630)
!6651 = !DILocation(line: 643, column: 16, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6630, file: !869, line: 643, column: 9)
!6653 = !DILocation(line: 0, scope: !6652)
!6654 = !DILocation(line: 649, column: 5, scope: !6630)
!6655 = !DILocation(line: 650, column: 1, scope: !6630)
!6656 = distinct !DISubprogram(name: "hal_spi_master_set_chip_select_timing", scope: !869, file: !869, line: 653, type: !6657, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6665)
!6657 = !DISubroutineType(types: !6658)
!6658 = !{!6134, !952, !6659}
!6659 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_chip_select_timing_t", file: !872, line: 606, baseType: !6660)
!6660 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 595, size: 96, elements: !6661)
!6661 = !{!6662, !6663, !6664}
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select_setup_count", scope: !6660, file: !872, line: 596, baseType: !61, size: 32)
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select_hold_count", scope: !6660, file: !872, line: 600, baseType: !61, size: 32, offset: 32)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select_idle_count", scope: !6660, file: !872, line: 603, baseType: !61, size: 32, offset: 64)
!6665 = !{!6666, !6667}
!6666 = !DILocalVariable(name: "master_port", arg: 1, scope: !6656, file: !869, line: 653, type: !952)
!6667 = !DILocalVariable(name: "chip_select_timing", arg: 2, scope: !6656, file: !869, line: 654, type: !6659)
!6668 = !DILocation(line: 0, scope: !6656)
!6669 = !DILocation(line: 656, column: 10, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6656, file: !869, line: 656, column: 9)
!6671 = !DILocation(line: 656, column: 9, scope: !6656)
!6672 = !DILocation(line: 659, column: 10, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6656, file: !869, line: 659, column: 9)
!6674 = !DILocation(line: 659, column: 9, scope: !6656)
!6675 = !DILocation(line: 663, column: 32, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6656, file: !869, line: 663, column: 9)
!6677 = !DILocation(line: 663, column: 29, scope: !6676)
!6678 = !DILocation(line: 663, column: 9, scope: !6656)
!6679 = !DILocation(line: 664, column: 9, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6676, file: !869, line: 663, column: 61)
!6681 = !DILocation(line: 665, column: 9, scope: !6680)
!6682 = !DILocation(line: 668, column: 5, scope: !6656)
!6683 = !DILocation(line: 670, column: 5, scope: !6656)
!6684 = !DILocation(line: 671, column: 1, scope: !6656)
!6685 = distinct !DISubprogram(name: "is_master_chip_select_timing", scope: !869, file: !869, line: 126, type: !6686, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6688)
!6686 = !DISubroutineType(types: !6687)
!6687 = !{!91, !6659}
!6688 = !{!6689, !6690}
!6689 = !DILocalVariable(name: "chip_select_timing", arg: 1, scope: !6685, file: !869, line: 126, type: !6659)
!6690 = !DILocalVariable(name: "ret", scope: !6685, file: !869, line: 128, type: !91)
!6691 = !DILocation(line: 0, scope: !6685)
!6692 = !DILocation(line: 132, column: 9, scope: !6685)
!6693 = !DILocation(line: 134, column: 57, scope: !6685)
!6694 = !DILocation(line: 134, column: 9, scope: !6685)
!6695 = !DILocation(line: 136, column: 5, scope: !6685)
!6696 = distinct !DISubprogram(name: "hal_spi_master_set_deassert", scope: !869, file: !869, line: 675, type: !6697, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6700)
!6697 = !DISubroutineType(types: !6698)
!6698 = !{!6134, !952, !6699}
!6699 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_deassert_t", file: !872, line: 528, baseType: !942)
!6700 = !{!6701, !6702}
!6701 = !DILocalVariable(name: "master_port", arg: 1, scope: !6696, file: !869, line: 675, type: !952)
!6702 = !DILocalVariable(name: "deassert", arg: 2, scope: !6696, file: !869, line: 676, type: !6699)
!6703 = !DILocation(line: 0, scope: !6696)
!6704 = !DILocation(line: 678, column: 10, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6696, file: !869, line: 678, column: 9)
!6706 = !DILocation(line: 678, column: 9, scope: !6696)
!6707 = !DILocation(line: 681, column: 59, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6696, file: !869, line: 681, column: 9)
!6709 = !DILocation(line: 686, column: 32, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6696, file: !869, line: 686, column: 9)
!6711 = !DILocation(line: 686, column: 29, scope: !6710)
!6712 = !DILocation(line: 686, column: 9, scope: !6696)
!6713 = !DILocation(line: 687, column: 9, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6710, file: !869, line: 686, column: 61)
!6715 = !DILocation(line: 688, column: 9, scope: !6714)
!6716 = !DILocation(line: 691, column: 5, scope: !6696)
!6717 = !DILocation(line: 693, column: 5, scope: !6696)
!6718 = !DILocation(line: 694, column: 1, scope: !6696)
!6719 = distinct !DISubprogram(name: "hal_spi_master_set_macro_selection", scope: !869, file: !869, line: 698, type: !6720, scopeLine: 700, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6723)
!6720 = !DISubroutineType(types: !6721)
!6721 = !{!6134, !952, !6722}
!6722 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_macro_select_t", file: !872, line: 538, baseType: !946)
!6723 = !{!6724, !6725}
!6724 = !DILocalVariable(name: "master_port", arg: 1, scope: !6719, file: !869, line: 698, type: !952)
!6725 = !DILocalVariable(name: "macro_select", arg: 2, scope: !6719, file: !869, line: 699, type: !6722)
!6726 = !DILocation(line: 0, scope: !6719)
!6727 = !DILocation(line: 701, column: 10, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6719, file: !869, line: 701, column: 9)
!6729 = !DILocation(line: 701, column: 9, scope: !6719)
!6730 = !DILocation(line: 711, column: 1, scope: !6719)
!6731 = distinct !DISubprogram(name: "spi_isr_handler", scope: !983, file: !983, line: 62, type: !6732, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !6734)
!6732 = !DISubroutineType(types: !6733)
!6733 = !{null, !952, !963, !88}
!6734 = !{!6735, !6736, !6737, !6738, !6739}
!6735 = !DILocalVariable(name: "master_port", arg: 1, scope: !6731, file: !983, line: 62, type: !952)
!6736 = !DILocalVariable(name: "user_callback", arg: 2, scope: !6731, file: !983, line: 62, type: !963)
!6737 = !DILocalVariable(name: "user_data", arg: 3, scope: !6731, file: !983, line: 62, type: !88)
!6738 = !DILocalVariable(name: "event", scope: !6731, file: !983, line: 64, type: !967)
!6739 = !DILocalVariable(name: "interrupt_status", scope: !6731, file: !983, line: 65, type: !61)
!6740 = !DILocation(line: 0, scope: !6731)
!6741 = !DILocation(line: 67, column: 24, scope: !6731)
!6742 = !DILocation(line: 67, column: 58, scope: !6731)
!6743 = !DILocation(line: 69, column: 26, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6731, file: !983, line: 69, column: 9)
!6745 = !DILocation(line: 69, column: 9, scope: !6731)
!6746 = !DILocation(line: 82, column: 18, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6748, file: !983, line: 82, column: 13)
!6748 = distinct !DILexicalBlock(scope: !6744, file: !983, line: 69, column: 53)
!6749 = !DILocation(line: 82, column: 13, scope: !6748)
!6750 = !DILocation(line: 70, column: 17, scope: !6748)
!6751 = !DILocation(line: 70, column: 9, scope: !6748)
!6752 = !DILocation(line: 83, column: 13, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6747, file: !983, line: 82, column: 36)
!6754 = !DILocation(line: 84, column: 9, scope: !6753)
!6755 = !DILocation(line: 93, column: 33, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6744, file: !983, line: 93, column: 16)
!6757 = !DILocation(line: 93, column: 16, scope: !6744)
!6758 = !DILocation(line: 94, column: 9, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6756, file: !983, line: 93, column: 59)
!6760 = !DILocation(line: 95, column: 5, scope: !6759)
!6761 = !DILocation(line: 96, column: 1, scope: !6731)
!6762 = distinct !DISubprogram(name: "spi_start_transfer", scope: !983, file: !983, line: 388, type: !6763, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !6766)
!6763 = !DISubroutineType(types: !6764)
!6764 = !{null, !952, !6765}
!6765 = !DIDerivedType(tag: DW_TAG_typedef, name: "spi_mode_t", file: !934, line: 50, baseType: !938)
!6766 = !{!6767, !6768, !6769, !6770}
!6767 = !DILocalVariable(name: "master_port", arg: 1, scope: !6762, file: !983, line: 388, type: !952)
!6768 = !DILocalVariable(name: "mode", arg: 2, scope: !6762, file: !983, line: 388, type: !6765)
!6769 = !DILocalVariable(name: "status", scope: !6762, file: !983, line: 390, type: !60)
!6770 = !DILocalVariable(name: "pause_mode_status", scope: !6762, file: !983, line: 391, type: !91)
!6771 = !DILocation(line: 0, scope: !6762)
!6772 = !DILocation(line: 390, column: 5, scope: !6762)
!6773 = !DILocation(line: 390, column: 23, scope: !6762)
!6774 = !DILocation(line: 394, column: 10, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6762, file: !983, line: 394, column: 9)
!6776 = !DILocation(line: 394, column: 44, scope: !6775)
!6777 = !DILocation(line: 394, column: 53, scope: !6775)
!6778 = !DILocation(line: 400, column: 5, scope: !6762)
!6779 = !DILocation(line: 403, column: 47, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6762, file: !983, line: 400, column: 19)
!6781 = !DILocation(line: 403, column: 56, scope: !6780)
!6782 = !DILocation(line: 406, column: 18, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6780, file: !983, line: 406, column: 17)
!6784 = !DILocation(line: 406, column: 45, scope: !6783)
!6785 = !DILocation(line: 406, column: 50, scope: !6783)
!6786 = !DILocation(line: 407, column: 43, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6783, file: !983, line: 406, column: 82)
!6788 = !DILocation(line: 408, column: 60, scope: !6787)
!6789 = !DILocation(line: 409, column: 49, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6787, file: !983, line: 409, column: 21)
!6791 = !DILocation(line: 409, column: 55, scope: !6790)
!6792 = !DILocation(line: 409, column: 59, scope: !6790)
!6793 = !DILocation(line: 409, column: 97, scope: !6790)
!6794 = !DILocation(line: 409, column: 103, scope: !6790)
!6795 = !DILocation(line: 409, column: 107, scope: !6790)
!6796 = !DILocation(line: 409, column: 136, scope: !6790)
!6797 = !DILocation(line: 409, column: 21, scope: !6787)
!6798 = !DILocation(line: 410, column: 63, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6790, file: !983, line: 409, column: 143)
!6800 = !DILocation(line: 411, column: 17, scope: !6799)
!6801 = !DILocation(line: 412, column: 59, scope: !6787)
!6802 = !DILocation(line: 413, column: 13, scope: !6787)
!6803 = !DILocation(line: 413, column: 25, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6783, file: !983, line: 413, column: 24)
!6805 = !DILocation(line: 413, column: 63, scope: !6804)
!6806 = !DILocation(line: 413, column: 68, scope: !6804)
!6807 = !DILocation(line: 414, column: 139, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6804, file: !983, line: 413, column: 100)
!6809 = !DILocation(line: 414, column: 60, scope: !6808)
!6810 = !DILocation(line: 415, column: 55, scope: !6808)
!6811 = !DILocation(line: 416, column: 21, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6808, file: !983, line: 416, column: 21)
!6813 = !DILocation(line: 416, column: 50, scope: !6812)
!6814 = !DILocation(line: 416, column: 21, scope: !6808)
!6815 = !DILocation(line: 417, column: 63, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6812, file: !983, line: 416, column: 56)
!6817 = !DILocation(line: 418, column: 17, scope: !6816)
!6818 = !DILocation(line: 419, column: 59, scope: !6808)
!6819 = !DILocation(line: 420, column: 13, scope: !6808)
!6820 = !DILocation(line: 420, column: 26, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6804, file: !983, line: 420, column: 24)
!6822 = !DILocation(line: 420, column: 55, scope: !6821)
!6823 = !DILocation(line: 420, column: 60, scope: !6821)
!6824 = !DILocation(line: 420, column: 65, scope: !6821)
!6825 = !DILocation(line: 420, column: 24, scope: !6804)
!6826 = !DILocation(line: 422, column: 43, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6821, file: !983, line: 420, column: 102)
!6828 = !DILocation(line: 423, column: 60, scope: !6827)
!6829 = !DILocation(line: 424, column: 49, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6827, file: !983, line: 424, column: 21)
!6831 = !DILocation(line: 424, column: 55, scope: !6830)
!6832 = !DILocation(line: 425, column: 63, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6830, file: !983, line: 424, column: 104)
!6834 = !DILocation(line: 426, column: 17, scope: !6833)
!6835 = !DILocation(line: 427, column: 59, scope: !6827)
!6836 = !DILocation(line: 428, column: 13, scope: !6827)
!6837 = !DILocation(line: 428, column: 24, scope: !6821)
!6838 = !DILocation(line: 430, column: 139, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !983, line: 428, column: 113)
!6840 = distinct !DILexicalBlock(scope: !6821, file: !983, line: 428, column: 24)
!6841 = !DILocation(line: 430, column: 60, scope: !6839)
!6842 = !DILocation(line: 431, column: 55, scope: !6839)
!6843 = !DILocation(line: 432, column: 59, scope: !6839)
!6844 = !DILocation(line: 433, column: 13, scope: !6839)
!6845 = !DILocation(line: 433, column: 57, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6840, file: !983, line: 433, column: 24)
!6847 = !DILocation(line: 434, column: 64, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6846, file: !983, line: 433, column: 105)
!6849 = !DILocation(line: 434, column: 92, scope: !6848)
!6850 = !DILocation(line: 434, column: 60, scope: !6848)
!6851 = !DILocation(line: 435, column: 65, scope: !6848)
!6852 = !DILocation(line: 435, column: 99, scope: !6848)
!6853 = !DILocation(line: 435, column: 60, scope: !6848)
!6854 = !DILocation(line: 436, column: 46, scope: !6848)
!6855 = !DILocation(line: 438, column: 59, scope: !6848)
!6856 = !DILocation(line: 440, column: 59, scope: !6848)
!6857 = !DILocation(line: 441, column: 13, scope: !6848)
!6858 = !DILocation(line: 442, column: 64, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6846, file: !983, line: 441, column: 20)
!6860 = !DILocation(line: 442, column: 92, scope: !6859)
!6861 = !DILocation(line: 442, column: 60, scope: !6859)
!6862 = !DILocation(line: 443, column: 65, scope: !6859)
!6863 = !DILocation(line: 443, column: 99, scope: !6859)
!6864 = !DILocation(line: 443, column: 60, scope: !6859)
!6865 = !DILocation(line: 0, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6859, file: !983, line: 444, column: 21)
!6867 = !DILocation(line: 444, column: 21, scope: !6859)
!6868 = !DILocation(line: 445, column: 63, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6866, file: !983, line: 444, column: 48)
!6870 = !DILocation(line: 446, column: 63, scope: !6869)
!6871 = !DILocation(line: 447, column: 17, scope: !6869)
!6872 = !DILocation(line: 449, column: 63, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6866, file: !983, line: 447, column: 24)
!6874 = !DILocation(line: 455, column: 55, scope: !6780)
!6875 = !DILocation(line: 456, column: 13, scope: !6780)
!6876 = !DILocation(line: 457, column: 60, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6780, file: !983, line: 456, column: 16)
!6878 = !DILocation(line: 457, column: 24, scope: !6877)
!6879 = !DILocation(line: 458, column: 23, scope: !6780)
!6880 = !DILocation(line: 458, column: 30, scope: !6780)
!6881 = !DILocation(line: 458, column: 13, scope: !6877)
!6882 = distinct !{!6882, !6875, !6883}
!6883 = !DILocation(line: 458, column: 55, scope: !6780)
!6884 = !DILocation(line: 460, column: 57, scope: !6780)
!6885 = !DILocation(line: 460, column: 20, scope: !6780)
!6886 = !DILocation(line: 461, column: 22, scope: !6780)
!6887 = !DILocation(line: 461, column: 20, scope: !6780)
!6888 = !DILocation(line: 462, column: 13, scope: !6780)
!6889 = !DILocation(line: 464, column: 1, scope: !6762)
!6890 = distinct !DISubprogram(name: "spi_master_init", scope: !983, file: !983, line: 126, type: !6891, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !6903)
!6891 = !DISubroutineType(types: !6892)
!6892 = !{null, !952, !6893}
!6893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6894, size: 32)
!6894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6895)
!6895 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_config_t", file: !872, line: 580, baseType: !6896)
!6896 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 574, size: 160, elements: !6897)
!6897 = !{!6898, !6899, !6900, !6901, !6902}
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "clock_frequency", scope: !6896, file: !872, line: 575, baseType: !61, size: 32)
!6899 = !DIDerivedType(tag: DW_TAG_member, name: "slave_port", scope: !6896, file: !872, line: 576, baseType: !6141, size: 32, offset: 32)
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "bit_order", scope: !6896, file: !872, line: 577, baseType: !6143, size: 32, offset: 64)
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !6896, file: !872, line: 578, baseType: !6145, size: 32, offset: 96)
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !6896, file: !872, line: 579, baseType: !6147, size: 32, offset: 128)
!6903 = !{!6904, !6905, !6906}
!6904 = !DILocalVariable(name: "master_port", arg: 1, scope: !6890, file: !983, line: 126, type: !952)
!6905 = !DILocalVariable(name: "spi_config", arg: 2, scope: !6890, file: !983, line: 126, type: !6893)
!6906 = !DILocalVariable(name: "sck_count", scope: !6890, file: !983, line: 128, type: !61)
!6907 = !DILocation(line: 0, scope: !6890)
!6908 = !DILocation(line: 131, column: 5, scope: !6890)
!6909 = !DILocation(line: 131, column: 39, scope: !6890)
!6910 = !DILocation(line: 131, column: 48, scope: !6890)
!6911 = !DILocation(line: 132, column: 39, scope: !6890)
!6912 = !DILocation(line: 132, column: 48, scope: !6890)
!6913 = !DILocation(line: 133, column: 39, scope: !6890)
!6914 = !DILocation(line: 133, column: 48, scope: !6890)
!6915 = !DILocation(line: 135, column: 56, scope: !6890)
!6916 = !DILocation(line: 135, column: 41, scope: !6890)
!6917 = !DILocation(line: 135, column: 74, scope: !6890)
!6918 = !DILocation(line: 136, column: 62, scope: !6890)
!6919 = !DILocation(line: 136, column: 96, scope: !6890)
!6920 = !DILocation(line: 136, column: 39, scope: !6890)
!6921 = !DILocation(line: 136, column: 48, scope: !6890)
!6922 = !DILocation(line: 138, column: 25, scope: !6890)
!6923 = !DILocation(line: 138, column: 5, scope: !6890)
!6924 = !DILocation(line: 140, column: 56, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6890, file: !983, line: 138, column: 37)
!6926 = !DILocation(line: 141, column: 13, scope: !6925)
!6927 = !DILocation(line: 143, column: 56, scope: !6925)
!6928 = !DILocation(line: 144, column: 13, scope: !6925)
!6929 = !DILocation(line: 0, scope: !6925)
!6930 = !DILocation(line: 149, column: 25, scope: !6890)
!6931 = !DILocation(line: 149, column: 5, scope: !6890)
!6932 = !DILocation(line: 151, column: 55, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6890, file: !983, line: 149, column: 36)
!6934 = !DILocation(line: 152, column: 13, scope: !6933)
!6935 = !DILocation(line: 154, column: 55, scope: !6933)
!6936 = !DILocation(line: 155, column: 13, scope: !6933)
!6937 = !DILocation(line: 0, scope: !6933)
!6938 = !DILocation(line: 158, column: 25, scope: !6890)
!6939 = !DILocation(line: 158, column: 5, scope: !6890)
!6940 = !DILocation(line: 160, column: 55, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6890, file: !983, line: 158, column: 35)
!6942 = !DILocation(line: 161, column: 13, scope: !6941)
!6943 = !DILocation(line: 163, column: 55, scope: !6941)
!6944 = !DILocation(line: 164, column: 13, scope: !6941)
!6945 = !DILocation(line: 0, scope: !6941)
!6946 = !DILocation(line: 167, column: 25, scope: !6890)
!6947 = !DILocation(line: 167, column: 5, scope: !6890)
!6948 = !DILocation(line: 169, column: 55, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6890, file: !983, line: 167, column: 32)
!6950 = !DILocation(line: 170, column: 13, scope: !6949)
!6951 = !DILocation(line: 172, column: 55, scope: !6949)
!6952 = !DILocation(line: 173, column: 13, scope: !6949)
!6953 = !DILocation(line: 0, scope: !6949)
!6954 = !DILocation(line: 177, column: 47, scope: !6890)
!6955 = !DILocation(line: 180, column: 5, scope: !6890)
!6956 = !DILocation(line: 181, column: 1, scope: !6890)
!6957 = distinct !DISubprogram(name: "spi_master_pad_macro_select", scope: !983, file: !983, line: 98, type: !6958, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !6960)
!6958 = !DISubroutineType(types: !6959)
!6959 = !{null, !952}
!6960 = !{!6961}
!6961 = !DILocalVariable(name: "master_port", arg: 1, scope: !6957, file: !983, line: 98, type: !952)
!6962 = !DILocation(line: 0, scope: !6957)
!6963 = !DILocation(line: 100, column: 5, scope: !6957)
!6964 = !DILocation(line: 102, column: 47, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6966, file: !983, line: 102, column: 17)
!6966 = distinct !DILexicalBlock(scope: !6957, file: !983, line: 100, column: 26)
!6967 = !DILocation(line: 102, column: 42, scope: !6965)
!6968 = !DILocation(line: 102, column: 17, scope: !6966)
!6969 = !DILocation(line: 103, column: 69, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6965, file: !983, line: 102, column: 174)
!6971 = !DILocation(line: 104, column: 13, scope: !6970)
!6972 = !DILocation(line: 107, column: 48, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6966, file: !983, line: 107, column: 17)
!6974 = !DILocation(line: 107, column: 43, scope: !6973)
!6975 = !DILocation(line: 107, column: 17, scope: !6966)
!6976 = !DILocation(line: 108, column: 69, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6973, file: !983, line: 107, column: 178)
!6978 = !DILocation(line: 109, column: 13, scope: !6977)
!6979 = !DILocation(line: 112, column: 48, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6966, file: !983, line: 112, column: 17)
!6981 = !DILocation(line: 112, column: 105, scope: !6980)
!6982 = !DILocation(line: 112, column: 43, scope: !6980)
!6983 = !DILocation(line: 112, column: 17, scope: !6966)
!6984 = !DILocation(line: 113, column: 69, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6980, file: !983, line: 112, column: 178)
!6986 = !DILocation(line: 114, column: 13, scope: !6985)
!6987 = !DILocation(line: 117, column: 48, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6966, file: !983, line: 117, column: 17)
!6989 = !DILocation(line: 117, column: 43, scope: !6988)
!6990 = !DILocation(line: 117, column: 17, scope: !6966)
!6991 = !DILocation(line: 118, column: 69, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6988, file: !983, line: 117, column: 178)
!6993 = !DILocation(line: 119, column: 13, scope: !6992)
!6994 = !DILocation(line: 124, column: 1, scope: !6957)
!6995 = distinct !DISubprogram(name: "spi_master_set_advanced_config", scope: !983, file: !983, line: 184, type: !6996, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7007)
!6996 = !DISubroutineType(types: !6997)
!6997 = !{null, !952, !6998}
!6998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6999, size: 32)
!6999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7000)
!7000 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_advanced_config_t", file: !872, line: 589, baseType: !7001)
!7001 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 584, size: 128, elements: !7002)
!7002 = !{!7003, !7004, !7005, !7006}
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "byte_order", scope: !7001, file: !872, line: 585, baseType: !6221, size: 32)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "chip_polarity", scope: !7001, file: !872, line: 586, baseType: !6223, size: 32, offset: 32)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "get_tick", scope: !7001, file: !872, line: 587, baseType: !6225, size: 32, offset: 64)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "sample_select", scope: !7001, file: !872, line: 588, baseType: !6227, size: 32, offset: 96)
!7007 = !{!7008, !7009}
!7008 = !DILocalVariable(name: "master_port", arg: 1, scope: !6995, file: !983, line: 184, type: !952)
!7009 = !DILocalVariable(name: "advanced_config", arg: 2, scope: !6995, file: !983, line: 184, type: !6998)
!7010 = !DILocation(line: 0, scope: !6995)
!7011 = !DILocation(line: 186, column: 30, scope: !6995)
!7012 = !DILocation(line: 186, column: 5, scope: !6995)
!7013 = !DILocation(line: 188, column: 13, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !6995, file: !983, line: 186, column: 42)
!7015 = !DILocation(line: 188, column: 47, scope: !7014)
!7016 = !DILocation(line: 188, column: 55, scope: !7014)
!7017 = !DILocation(line: 189, column: 13, scope: !7014)
!7018 = !DILocation(line: 191, column: 13, scope: !7014)
!7019 = !DILocation(line: 191, column: 47, scope: !7014)
!7020 = !DILocation(line: 191, column: 55, scope: !7014)
!7021 = !DILocation(line: 192, column: 13, scope: !7014)
!7022 = !DILocation(line: 195, column: 30, scope: !6995)
!7023 = !DILocation(line: 195, column: 5, scope: !6995)
!7024 = !DILocation(line: 205, column: 5, scope: !6995)
!7025 = !DILocation(line: 197, column: 13, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !6995, file: !983, line: 195, column: 45)
!7027 = !DILocation(line: 197, column: 47, scope: !7026)
!7028 = !DILocation(line: 197, column: 55, scope: !7026)
!7029 = !DILocation(line: 198, column: 13, scope: !7026)
!7030 = !DILocation(line: 200, column: 13, scope: !7026)
!7031 = !DILocation(line: 200, column: 47, scope: !7026)
!7032 = !DILocation(line: 200, column: 55, scope: !7026)
!7033 = !DILocation(line: 201, column: 13, scope: !7026)
!7034 = !DILocation(line: 205, column: 39, scope: !6995)
!7035 = !DILocation(line: 205, column: 48, scope: !6995)
!7036 = !DILocation(line: 206, column: 80, scope: !6995)
!7037 = !DILocation(line: 206, column: 90, scope: !6995)
!7038 = !DILocation(line: 206, column: 48, scope: !6995)
!7039 = !DILocation(line: 208, column: 30, scope: !6995)
!7040 = !DILocation(line: 208, column: 5, scope: !6995)
!7041 = !DILocation(line: 210, column: 47, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !6995, file: !983, line: 208, column: 45)
!7043 = !DILocation(line: 210, column: 55, scope: !7042)
!7044 = !DILocation(line: 211, column: 13, scope: !7042)
!7045 = !DILocation(line: 213, column: 47, scope: !7042)
!7046 = !DILocation(line: 213, column: 55, scope: !7042)
!7047 = !DILocation(line: 214, column: 13, scope: !7042)
!7048 = !DILocation(line: 217, column: 1, scope: !6995)
!7049 = distinct !DISubprogram(name: "spi_get_status", scope: !983, file: !983, line: 220, type: !7050, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7052)
!7050 = !DISubroutineType(types: !7051)
!7051 = !{!61, !952}
!7052 = !{!7053, !7054}
!7053 = !DILocalVariable(name: "master_port", arg: 1, scope: !7049, file: !983, line: 220, type: !952)
!7054 = !DILocalVariable(name: "status", scope: !7049, file: !983, line: 222, type: !60)
!7055 = !DILocation(line: 0, scope: !7049)
!7056 = !DILocation(line: 222, column: 5, scope: !7049)
!7057 = !DILocation(line: 222, column: 23, scope: !7049)
!7058 = !DILocation(line: 224, column: 15, scope: !7049)
!7059 = !DILocation(line: 224, column: 49, scope: !7049)
!7060 = !DILocation(line: 224, column: 12, scope: !7049)
!7061 = !DILocation(line: 226, column: 12, scope: !7049)
!7062 = !DILocation(line: 227, column: 1, scope: !7049)
!7063 = !DILocation(line: 226, column: 5, scope: !7049)
!7064 = distinct !DISubprogram(name: "spi_set_rwaddr", scope: !983, file: !983, line: 229, type: !7065, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7067)
!7065 = !DISubroutineType(types: !7066)
!7066 = !{null, !952, !991, !5061}
!7067 = !{!7068, !7069, !7070}
!7068 = !DILocalVariable(name: "master_port", arg: 1, scope: !7064, file: !983, line: 229, type: !952)
!7069 = !DILocalVariable(name: "type", arg: 2, scope: !7064, file: !983, line: 229, type: !991)
!7070 = !DILocalVariable(name: "addr", arg: 3, scope: !7064, file: !983, line: 229, type: !5061)
!7071 = !DILocation(line: 0, scope: !7064)
!7072 = !DILocation(line: 231, column: 5, scope: !7064)
!7073 = !DILocation(line: 233, column: 60, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7064, file: !983, line: 231, column: 19)
!7075 = !DILocation(line: 233, column: 13, scope: !7074)
!7076 = !DILocation(line: 233, column: 47, scope: !7074)
!7077 = !DILocation(line: 233, column: 58, scope: !7074)
!7078 = !DILocation(line: 234, column: 13, scope: !7074)
!7079 = !DILocation(line: 236, column: 60, scope: !7074)
!7080 = !DILocation(line: 236, column: 13, scope: !7074)
!7081 = !DILocation(line: 236, column: 47, scope: !7074)
!7082 = !DILocation(line: 236, column: 58, scope: !7074)
!7083 = !DILocation(line: 237, column: 13, scope: !7074)
!7084 = !DILocation(line: 239, column: 1, scope: !7064)
!7085 = distinct !DISubprogram(name: "spi_push_data", scope: !983, file: !983, line: 241, type: !7086, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7088)
!7086 = !DISubroutineType(types: !7087)
!7087 = !{!6134, !952, !5061, !61}
!7088 = !{!7089, !7090, !7091, !7092, !7093, !7094, !7095, !7096, !7097, !7098, !7099}
!7089 = !DILocalVariable(name: "master_port", arg: 1, scope: !7085, file: !983, line: 241, type: !952)
!7090 = !DILocalVariable(name: "data", arg: 2, scope: !7085, file: !983, line: 241, type: !5061)
!7091 = !DILocalVariable(name: "size", arg: 3, scope: !7085, file: !983, line: 241, type: !61)
!7092 = !DILocalVariable(name: "spi_data", scope: !7085, file: !983, line: 243, type: !61)
!7093 = !DILocalVariable(name: "i", scope: !7085, file: !983, line: 244, type: !61)
!7094 = !DILocalVariable(name: "j", scope: !7085, file: !983, line: 245, type: !61)
!7095 = !DILocalVariable(name: "temp_addr", scope: !7085, file: !983, line: 246, type: !5061)
!7096 = !DILocalVariable(name: "temp_data", scope: !7085, file: !983, line: 247, type: !460)
!7097 = !DILocalVariable(name: "quotient", scope: !7085, file: !983, line: 248, type: !61)
!7098 = !DILocalVariable(name: "remainder", scope: !7085, file: !983, line: 249, type: !61)
!7099 = !DILocalVariable(name: "status", scope: !7085, file: !983, line: 250, type: !6134)
!7100 = !DILocation(line: 0, scope: !7085)
!7101 = !DILocation(line: 253, column: 10, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7085, file: !983, line: 253, column: 9)
!7103 = !DILocation(line: 253, column: 44, scope: !7102)
!7104 = !DILocation(line: 253, column: 53, scope: !7102)
!7105 = !DILocation(line: 253, column: 9, scope: !7085)
!7106 = !DILocation(line: 254, column: 9, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7102, file: !983, line: 253, column: 79)
!7108 = !DILocation(line: 255, column: 9, scope: !7107)
!7109 = !DILocation(line: 260, column: 39, scope: !7085)
!7110 = !DILocation(line: 260, column: 48, scope: !7085)
!7111 = !DILocation(line: 261, column: 52, scope: !7085)
!7112 = !DILocation(line: 261, column: 80, scope: !7085)
!7113 = !DILocation(line: 261, column: 48, scope: !7085)
!7114 = !DILocation(line: 262, column: 53, scope: !7085)
!7115 = !DILocation(line: 262, column: 87, scope: !7085)
!7116 = !DILocation(line: 262, column: 48, scope: !7085)
!7117 = !DILocation(line: 265, column: 22, scope: !7085)
!7118 = !DILocation(line: 267, column: 19, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7120, file: !983, line: 267, column: 5)
!7120 = distinct !DILexicalBlock(scope: !7085, file: !983, line: 267, column: 5)
!7121 = !DILocation(line: 267, column: 5, scope: !7120)
!7122 = !DILocation(line: 264, column: 21, scope: !7085)
!7123 = !DILocation(line: 269, column: 9, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7125, file: !983, line: 269, column: 9)
!7125 = distinct !DILexicalBlock(scope: !7119, file: !983, line: 267, column: 36)
!7126 = !DILocation(line: 270, column: 26, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7128, file: !983, line: 269, column: 33)
!7128 = distinct !DILexicalBlock(scope: !7124, file: !983, line: 269, column: 9)
!7129 = !DILocation(line: 271, column: 26, scope: !7127)
!7130 = !DILocation(line: 271, column: 42, scope: !7127)
!7131 = !DILocation(line: 271, column: 36, scope: !7127)
!7132 = !DILocation(line: 271, column: 22, scope: !7127)
!7133 = !DILocation(line: 272, column: 22, scope: !7127)
!7134 = !DILocation(line: 269, column: 29, scope: !7128)
!7135 = !DILocation(line: 269, column: 23, scope: !7128)
!7136 = distinct !{!7136, !7123, !7137}
!7137 = !DILocation(line: 273, column: 9, scope: !7124)
!7138 = !DILocation(line: 274, column: 55, scope: !7125)
!7139 = !DILocation(line: 267, column: 32, scope: !7119)
!7140 = distinct !{!7140, !7121, !7141}
!7141 = !DILocation(line: 275, column: 5, scope: !7120)
!7142 = !DILocation(line: 246, column: 20, scope: !7085)
!7143 = !DILocation(line: 276, column: 19, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7085, file: !983, line: 276, column: 9)
!7145 = !DILocation(line: 276, column: 9, scope: !7085)
!7146 = !DILocation(line: 279, column: 26, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7148, file: !983, line: 278, column: 33)
!7148 = distinct !DILexicalBlock(scope: !7149, file: !983, line: 278, column: 9)
!7149 = distinct !DILexicalBlock(scope: !7150, file: !983, line: 278, column: 9)
!7150 = distinct !DILexicalBlock(scope: !7144, file: !983, line: 276, column: 24)
!7151 = !DILocation(line: 280, column: 26, scope: !7147)
!7152 = !DILocation(line: 280, column: 42, scope: !7147)
!7153 = !DILocation(line: 280, column: 36, scope: !7147)
!7154 = !DILocation(line: 280, column: 22, scope: !7147)
!7155 = !DILocation(line: 281, column: 22, scope: !7147)
!7156 = !DILocation(line: 278, column: 29, scope: !7148)
!7157 = !DILocation(line: 278, column: 23, scope: !7148)
!7158 = !DILocation(line: 278, column: 9, scope: !7149)
!7159 = distinct !{!7159, !7158, !7160}
!7160 = !DILocation(line: 282, column: 9, scope: !7149)
!7161 = !DILocation(line: 283, column: 9, scope: !7150)
!7162 = !DILocation(line: 285, column: 75, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7150, file: !983, line: 283, column: 28)
!7164 = !DILocation(line: 285, column: 51, scope: !7163)
!7165 = !DILocation(line: 285, column: 63, scope: !7163)
!7166 = !DILocation(line: 286, column: 17, scope: !7163)
!7167 = !DILocation(line: 288, column: 75, scope: !7163)
!7168 = !DILocation(line: 288, column: 51, scope: !7163)
!7169 = !DILocation(line: 288, column: 63, scope: !7163)
!7170 = !DILocation(line: 289, column: 17, scope: !7163)
!7171 = !DILocation(line: 291, column: 75, scope: !7163)
!7172 = !DILocation(line: 291, column: 51, scope: !7163)
!7173 = !DILocation(line: 291, column: 63, scope: !7163)
!7174 = !DILocation(line: 292, column: 17, scope: !7163)
!7175 = !DILocation(line: 296, column: 1, scope: !7085)
!7176 = distinct !DISubprogram(name: "spi_pop_data", scope: !983, file: !983, line: 298, type: !6329, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7177)
!7177 = !{!7178, !7179, !7180, !7181, !7182, !7183, !7184, !7185, !7186, !7187, !7188}
!7178 = !DILocalVariable(name: "master_port", arg: 1, scope: !7176, file: !983, line: 298, type: !952)
!7179 = !DILocalVariable(name: "buffer", arg: 2, scope: !7176, file: !983, line: 298, type: !762)
!7180 = !DILocalVariable(name: "size", arg: 3, scope: !7176, file: !983, line: 298, type: !61)
!7181 = !DILocalVariable(name: "spi_data", scope: !7176, file: !983, line: 300, type: !61)
!7182 = !DILocalVariable(name: "i", scope: !7176, file: !983, line: 301, type: !61)
!7183 = !DILocalVariable(name: "j", scope: !7176, file: !983, line: 302, type: !61)
!7184 = !DILocalVariable(name: "temp_addr", scope: !7176, file: !983, line: 303, type: !762)
!7185 = !DILocalVariable(name: "temp_data", scope: !7176, file: !983, line: 304, type: !460)
!7186 = !DILocalVariable(name: "quotient", scope: !7176, file: !983, line: 305, type: !61)
!7187 = !DILocalVariable(name: "remainder", scope: !7176, file: !983, line: 306, type: !61)
!7188 = !DILocalVariable(name: "status", scope: !7176, file: !983, line: 307, type: !6134)
!7189 = !DILocation(line: 0, scope: !7176)
!7190 = !DILocation(line: 310, column: 10, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7176, file: !983, line: 310, column: 9)
!7192 = !DILocation(line: 310, column: 44, scope: !7191)
!7193 = !DILocation(line: 310, column: 53, scope: !7191)
!7194 = !DILocation(line: 310, column: 9, scope: !7176)
!7195 = !DILocation(line: 311, column: 9, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7191, file: !983, line: 310, column: 79)
!7197 = !DILocation(line: 312, column: 9, scope: !7196)
!7198 = !DILocation(line: 316, column: 22, scope: !7176)
!7199 = !DILocation(line: 318, column: 19, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7201, file: !983, line: 318, column: 5)
!7201 = distinct !DILexicalBlock(scope: !7176, file: !983, line: 318, column: 5)
!7202 = !DILocation(line: 318, column: 5, scope: !7201)
!7203 = !DILocation(line: 315, column: 21, scope: !7176)
!7204 = !DILocation(line: 319, column: 54, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7200, file: !983, line: 318, column: 36)
!7206 = !DILocation(line: 320, column: 9, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7205, file: !983, line: 320, column: 9)
!7208 = !DILocation(line: 321, column: 50, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7210, file: !983, line: 320, column: 33)
!7210 = distinct !DILexicalBlock(scope: !7207, file: !983, line: 320, column: 9)
!7211 = !DILocation(line: 321, column: 44, scope: !7209)
!7212 = !DILocation(line: 321, column: 36, scope: !7209)
!7213 = !DILocation(line: 321, column: 57, scope: !7209)
!7214 = !DILocation(line: 321, column: 25, scope: !7209)
!7215 = !DILocation(line: 322, column: 24, scope: !7209)
!7216 = !DILocation(line: 323, column: 22, scope: !7209)
!7217 = !DILocation(line: 320, column: 29, scope: !7210)
!7218 = !DILocation(line: 320, column: 23, scope: !7210)
!7219 = distinct !{!7219, !7206, !7220}
!7220 = !DILocation(line: 324, column: 9, scope: !7207)
!7221 = !DILocation(line: 318, column: 32, scope: !7200)
!7222 = distinct !{!7222, !7202, !7223}
!7223 = !DILocation(line: 325, column: 5, scope: !7201)
!7224 = !DILocation(line: 303, column: 14, scope: !7176)
!7225 = !DILocation(line: 326, column: 19, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7176, file: !983, line: 326, column: 9)
!7227 = !DILocation(line: 326, column: 9, scope: !7176)
!7228 = !DILocation(line: 327, column: 54, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7226, file: !983, line: 326, column: 24)
!7230 = !DILocation(line: 328, column: 9, scope: !7229)
!7231 = !DILocation(line: 330, column: 26, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7229, file: !983, line: 328, column: 28)
!7233 = !DILocation(line: 331, column: 17, scope: !7232)
!7234 = !DILocation(line: 333, column: 26, scope: !7232)
!7235 = !DILocation(line: 334, column: 17, scope: !7232)
!7236 = !DILocation(line: 336, column: 26, scope: !7232)
!7237 = !DILocation(line: 337, column: 17, scope: !7232)
!7238 = !DILocation(line: 0, scope: !7229)
!7239 = !DILocation(line: 340, column: 9, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7229, file: !983, line: 340, column: 9)
!7241 = !DILocation(line: 341, column: 42, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7243, file: !983, line: 340, column: 41)
!7243 = distinct !DILexicalBlock(scope: !7240, file: !983, line: 340, column: 9)
!7244 = !DILocation(line: 341, column: 36, scope: !7242)
!7245 = !DILocation(line: 341, column: 26, scope: !7242)
!7246 = !DILocation(line: 341, column: 24, scope: !7242)
!7247 = !DILocation(line: 342, column: 22, scope: !7242)
!7248 = !DILocation(line: 340, column: 37, scope: !7243)
!7249 = !DILocation(line: 340, column: 23, scope: !7243)
!7250 = distinct !{!7250, !7239, !7251}
!7251 = !DILocation(line: 343, column: 9, scope: !7240)
!7252 = !DILocation(line: 346, column: 1, scope: !7176)
!7253 = distinct !DISubprogram(name: "spi_set_interrupt", scope: !983, file: !983, line: 348, type: !7254, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7256)
!7254 = !DISubroutineType(types: !7255)
!7255 = !{null, !952, !91}
!7256 = !{!7257, !7258}
!7257 = !DILocalVariable(name: "master_port", arg: 1, scope: !7253, file: !983, line: 348, type: !952)
!7258 = !DILocalVariable(name: "status", arg: 2, scope: !7253, file: !983, line: 348, type: !91)
!7259 = !DILocation(line: 0, scope: !7253)
!7260 = !DILocation(line: 0, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7253, file: !983, line: 350, column: 21)
!7262 = !DILocation(line: 350, column: 5, scope: !7253)
!7263 = !DILocation(line: 358, column: 1, scope: !7253)
!7264 = distinct !DISubprogram(name: "spi_clear_fifo", scope: !983, file: !983, line: 360, type: !6958, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7265)
!7265 = !{!7266}
!7266 = !DILocalVariable(name: "master_port", arg: 1, scope: !7264, file: !983, line: 360, type: !952)
!7267 = !DILocation(line: 0, scope: !7264)
!7268 = !DILocation(line: 362, column: 5, scope: !7264)
!7269 = !DILocation(line: 362, column: 39, scope: !7264)
!7270 = !DILocation(line: 362, column: 47, scope: !7264)
!7271 = !DILocation(line: 363, column: 47, scope: !7264)
!7272 = !DILocation(line: 364, column: 1, scope: !7264)
!7273 = distinct !DISubprogram(name: "spi_set_mode", scope: !983, file: !983, line: 366, type: !7274, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7276)
!7274 = !DISubroutineType(types: !7275)
!7275 = !{null, !952, !991, !6765}
!7276 = !{!7277, !7278, !7279}
!7277 = !DILocalVariable(name: "master_port", arg: 1, scope: !7273, file: !983, line: 366, type: !952)
!7278 = !DILocalVariable(name: "type", arg: 2, scope: !7273, file: !983, line: 366, type: !991)
!7279 = !DILocalVariable(name: "mode", arg: 3, scope: !7273, file: !983, line: 366, type: !6765)
!7280 = !DILocation(line: 0, scope: !7273)
!7281 = !DILocation(line: 368, column: 16, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7273, file: !983, line: 368, column: 9)
!7283 = !DILocation(line: 368, column: 9, scope: !7273)
!7284 = !DILocation(line: 369, column: 9, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7282, file: !983, line: 368, column: 25)
!7286 = !DILocation(line: 371, column: 17, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7285, file: !983, line: 369, column: 23)
!7288 = !DILocation(line: 371, column: 51, scope: !7287)
!7289 = !DILocation(line: 371, column: 59, scope: !7287)
!7290 = !DILocation(line: 372, column: 17, scope: !7287)
!7291 = !DILocation(line: 374, column: 17, scope: !7287)
!7292 = !DILocation(line: 374, column: 51, scope: !7287)
!7293 = !DILocation(line: 374, column: 59, scope: !7287)
!7294 = !DILocation(line: 375, column: 9, scope: !7287)
!7295 = !DILocation(line: 377, column: 9, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7282, file: !983, line: 376, column: 12)
!7297 = !DILocation(line: 379, column: 17, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7296, file: !983, line: 377, column: 23)
!7299 = !DILocation(line: 379, column: 51, scope: !7298)
!7300 = !DILocation(line: 379, column: 59, scope: !7298)
!7301 = !DILocation(line: 380, column: 17, scope: !7298)
!7302 = !DILocation(line: 382, column: 17, scope: !7298)
!7303 = !DILocation(line: 382, column: 51, scope: !7298)
!7304 = !DILocation(line: 382, column: 59, scope: !7298)
!7305 = !DILocation(line: 383, column: 9, scope: !7298)
!7306 = !DILocation(line: 385, column: 1, scope: !7273)
!7307 = distinct !DISubprogram(name: "spi_start_transfer_dma_blocking", scope: !983, file: !983, line: 466, type: !6958, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7308)
!7308 = !{!7309, !7310, !7311}
!7309 = !DILocalVariable(name: "master_port", arg: 1, scope: !7307, file: !983, line: 466, type: !952)
!7310 = !DILocalVariable(name: "pause_mode_status", scope: !7307, file: !983, line: 468, type: !91)
!7311 = !DILocalVariable(name: "irq_status", scope: !7307, file: !983, line: 469, type: !61)
!7312 = !DILocation(line: 0, scope: !7307)
!7313 = !DILocation(line: 533, column: 98, scope: !7307)
!7314 = !DILocation(line: 471, column: 5, scope: !7307)
!7315 = !DILocation(line: 473, column: 48, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7317, file: !983, line: 473, column: 13)
!7317 = distinct !DILexicalBlock(scope: !7307, file: !983, line: 471, column: 8)
!7318 = !DILocation(line: 473, column: 57, scope: !7316)
!7319 = !DILocation(line: 480, column: 52, scope: !7317)
!7320 = !DILocation(line: 483, column: 14, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7317, file: !983, line: 483, column: 13)
!7322 = !DILocation(line: 483, column: 41, scope: !7321)
!7323 = !DILocation(line: 483, column: 46, scope: !7321)
!7324 = !DILocation(line: 484, column: 39, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7321, file: !983, line: 483, column: 78)
!7326 = !DILocation(line: 485, column: 56, scope: !7325)
!7327 = !DILocation(line: 486, column: 45, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7325, file: !983, line: 486, column: 17)
!7329 = !DILocation(line: 486, column: 51, scope: !7328)
!7330 = !DILocation(line: 486, column: 55, scope: !7328)
!7331 = !DILocation(line: 486, column: 93, scope: !7328)
!7332 = !DILocation(line: 486, column: 99, scope: !7328)
!7333 = !DILocation(line: 486, column: 103, scope: !7328)
!7334 = !DILocation(line: 486, column: 132, scope: !7328)
!7335 = !DILocation(line: 486, column: 17, scope: !7325)
!7336 = !DILocation(line: 487, column: 59, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7328, file: !983, line: 486, column: 139)
!7338 = !DILocation(line: 488, column: 13, scope: !7337)
!7339 = !DILocation(line: 489, column: 55, scope: !7325)
!7340 = !DILocation(line: 490, column: 9, scope: !7325)
!7341 = !DILocation(line: 490, column: 21, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7321, file: !983, line: 490, column: 20)
!7343 = !DILocation(line: 490, column: 59, scope: !7342)
!7344 = !DILocation(line: 490, column: 64, scope: !7342)
!7345 = !DILocation(line: 491, column: 135, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7342, file: !983, line: 490, column: 96)
!7347 = !DILocation(line: 491, column: 56, scope: !7346)
!7348 = !DILocation(line: 492, column: 51, scope: !7346)
!7349 = !DILocation(line: 493, column: 17, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7346, file: !983, line: 493, column: 17)
!7351 = !DILocation(line: 493, column: 46, scope: !7350)
!7352 = !DILocation(line: 493, column: 17, scope: !7346)
!7353 = !DILocation(line: 494, column: 59, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7350, file: !983, line: 493, column: 52)
!7355 = !DILocation(line: 495, column: 13, scope: !7354)
!7356 = !DILocation(line: 496, column: 55, scope: !7346)
!7357 = !DILocation(line: 497, column: 9, scope: !7346)
!7358 = !DILocation(line: 497, column: 22, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7342, file: !983, line: 497, column: 20)
!7360 = !DILocation(line: 497, column: 51, scope: !7359)
!7361 = !DILocation(line: 497, column: 56, scope: !7359)
!7362 = !DILocation(line: 497, column: 61, scope: !7359)
!7363 = !DILocation(line: 497, column: 20, scope: !7342)
!7364 = !DILocation(line: 499, column: 39, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7359, file: !983, line: 497, column: 98)
!7366 = !DILocation(line: 500, column: 56, scope: !7365)
!7367 = !DILocation(line: 501, column: 45, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7365, file: !983, line: 501, column: 17)
!7369 = !DILocation(line: 501, column: 51, scope: !7368)
!7370 = !DILocation(line: 502, column: 59, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7368, file: !983, line: 501, column: 100)
!7372 = !DILocation(line: 503, column: 13, scope: !7371)
!7373 = !DILocation(line: 504, column: 55, scope: !7365)
!7374 = !DILocation(line: 505, column: 9, scope: !7365)
!7375 = !DILocation(line: 505, column: 20, scope: !7359)
!7376 = !DILocation(line: 507, column: 135, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7378, file: !983, line: 505, column: 109)
!7378 = distinct !DILexicalBlock(scope: !7359, file: !983, line: 505, column: 20)
!7379 = !DILocation(line: 507, column: 56, scope: !7377)
!7380 = !DILocation(line: 508, column: 51, scope: !7377)
!7381 = !DILocation(line: 509, column: 55, scope: !7377)
!7382 = !DILocation(line: 510, column: 9, scope: !7377)
!7383 = !DILocation(line: 510, column: 53, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7378, file: !983, line: 510, column: 20)
!7385 = !DILocation(line: 511, column: 60, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7384, file: !983, line: 510, column: 101)
!7387 = !DILocation(line: 511, column: 88, scope: !7386)
!7388 = !DILocation(line: 511, column: 56, scope: !7386)
!7389 = !DILocation(line: 512, column: 61, scope: !7386)
!7390 = !DILocation(line: 512, column: 95, scope: !7386)
!7391 = !DILocation(line: 512, column: 56, scope: !7386)
!7392 = !DILocation(line: 513, column: 42, scope: !7386)
!7393 = !DILocation(line: 515, column: 55, scope: !7386)
!7394 = !DILocation(line: 516, column: 55, scope: !7386)
!7395 = !DILocation(line: 517, column: 9, scope: !7386)
!7396 = !DILocation(line: 518, column: 60, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7384, file: !983, line: 517, column: 16)
!7398 = !DILocation(line: 518, column: 88, scope: !7397)
!7399 = !DILocation(line: 518, column: 56, scope: !7397)
!7400 = !DILocation(line: 519, column: 61, scope: !7397)
!7401 = !DILocation(line: 519, column: 95, scope: !7397)
!7402 = !DILocation(line: 519, column: 56, scope: !7397)
!7403 = !DILocation(line: 0, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7397, file: !983, line: 520, column: 17)
!7405 = !DILocation(line: 520, column: 17, scope: !7397)
!7406 = !DILocation(line: 521, column: 59, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7404, file: !983, line: 520, column: 44)
!7408 = !DILocation(line: 522, column: 59, scope: !7407)
!7409 = !DILocation(line: 523, column: 13, scope: !7407)
!7410 = !DILocation(line: 525, column: 59, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7404, file: !983, line: 523, column: 20)
!7412 = !DILocation(line: 527, column: 42, scope: !7397)
!7413 = !DILocation(line: 529, column: 9, scope: !7317)
!7414 = !DILocation(line: 529, column: 51, scope: !7317)
!7415 = !DILocation(line: 529, column: 64, scope: !7317)
!7416 = distinct !{!7416, !7413, !7417}
!7417 = !DILocation(line: 529, column: 89, scope: !7317)
!7418 = !DILocation(line: 531, column: 60, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7317, file: !983, line: 530, column: 12)
!7420 = !DILocation(line: 532, column: 58, scope: !7317)
!7421 = !DILocation(line: 532, column: 9, scope: !7419)
!7422 = distinct !{!7422, !7423, !7424}
!7423 = !DILocation(line: 530, column: 9, scope: !7317)
!7424 = !DILocation(line: 532, column: 99, scope: !7317)
!7425 = !DILocation(line: 533, column: 42, scope: !7307)
!7426 = !DILocation(line: 533, column: 47, scope: !7307)
!7427 = !DILocation(line: 533, column: 51, scope: !7307)
!7428 = !DILocation(line: 533, column: 89, scope: !7307)
!7429 = !DILocation(line: 533, column: 94, scope: !7307)
!7430 = !DILocation(line: 533, column: 127, scope: !7307)
!7431 = !DILocation(line: 533, column: 5, scope: !7317)
!7432 = distinct !{!7432, !7314, !7433}
!7433 = !DILocation(line: 533, column: 131, scope: !7307)
!7434 = !DILocation(line: 534, column: 1, scope: !7307)
!7435 = distinct !DISubprogram(name: "spi_analyse_transfer_size", scope: !983, file: !983, line: 536, type: !7436, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7438)
!7436 = !DISubroutineType(types: !7437)
!7437 = !{!6134, !952, !61}
!7438 = !{!7439, !7440, !7441, !7442}
!7439 = !DILocalVariable(name: "master_port", arg: 1, scope: !7435, file: !983, line: 536, type: !952)
!7440 = !DILocalVariable(name: "size", arg: 2, scope: !7435, file: !983, line: 536, type: !61)
!7441 = !DILocalVariable(name: "status", scope: !7435, file: !983, line: 538, type: !6134)
!7442 = !DILocalVariable(name: "temp_size", scope: !7435, file: !983, line: 539, type: !61)
!7443 = !DILocation(line: 0, scope: !7435)
!7444 = !DILocation(line: 541, column: 19, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7435, file: !983, line: 541, column: 9)
!7446 = !DILocation(line: 541, column: 9, scope: !7435)
!7447 = !DILocation(line: 543, column: 49, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7445, file: !983, line: 541, column: 49)
!7449 = !DILocation(line: 543, column: 9, scope: !7448)
!7450 = !DILocation(line: 543, column: 36, scope: !7448)
!7451 = !DILocation(line: 545, column: 14, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7448, file: !983, line: 545, column: 13)
!7453 = !DILocation(line: 545, column: 48, scope: !7452)
!7454 = !DILocation(line: 545, column: 56, scope: !7452)
!7455 = !DILocation(line: 545, column: 87, scope: !7452)
!7456 = !DILocation(line: 545, column: 13, scope: !7448)
!7457 = !DILocation(line: 546, column: 13, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7452, file: !983, line: 545, column: 119)
!7459 = !DILocation(line: 547, column: 13, scope: !7458)
!7460 = !DILocation(line: 549, column: 32, scope: !7448)
!7461 = !DILocation(line: 550, column: 23, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7448, file: !983, line: 550, column: 13)
!7463 = !DILocation(line: 550, column: 13, scope: !7448)
!7464 = !DILocation(line: 551, column: 40, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7462, file: !983, line: 550, column: 29)
!7466 = !DILocation(line: 558, column: 13, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !7468, file: !983, line: 556, column: 44)
!7468 = distinct !DILexicalBlock(scope: !7435, file: !983, line: 556, column: 9)
!7469 = !DILocation(line: 556, column: 19, scope: !7468)
!7470 = !DILocation(line: 556, column: 9, scope: !7435)
!7471 = !DILocation(line: 558, column: 24, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7467, file: !983, line: 558, column: 13)
!7473 = !DILocation(line: 558, column: 49, scope: !7472)
!7474 = !DILocation(line: 559, column: 64, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7472, file: !983, line: 558, column: 54)
!7476 = !DILocation(line: 559, column: 13, scope: !7475)
!7477 = !DILocation(line: 559, column: 51, scope: !7475)
!7478 = !DILocation(line: 560, column: 13, scope: !7475)
!7479 = !DILocation(line: 560, column: 41, scope: !7475)
!7480 = !DILocation(line: 561, column: 44, scope: !7475)
!7481 = !DILocation(line: 561, column: 13, scope: !7475)
!7482 = !DILocation(line: 561, column: 42, scope: !7475)
!7483 = !DILocation(line: 562, column: 9, scope: !7475)
!7484 = !DILocation(line: 563, column: 55, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7472, file: !983, line: 562, column: 16)
!7486 = !DILocation(line: 563, column: 43, scope: !7485)
!7487 = !DILocation(line: 563, column: 13, scope: !7485)
!7488 = !DILocation(line: 563, column: 41, scope: !7485)
!7489 = !DILocation(line: 564, column: 13, scope: !7485)
!7490 = !DILocation(line: 564, column: 42, scope: !7485)
!7491 = !DILocation(line: 566, column: 26, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7468, file: !983, line: 566, column: 16)
!7493 = !DILocation(line: 566, column: 16, scope: !7468)
!7494 = !DILocation(line: 567, column: 9, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7492, file: !983, line: 566, column: 31)
!7496 = !DILocation(line: 567, column: 37, scope: !7495)
!7497 = !DILocation(line: 568, column: 40, scope: !7495)
!7498 = !DILocation(line: 568, column: 9, scope: !7495)
!7499 = !DILocation(line: 568, column: 38, scope: !7495)
!7500 = !DILocation(line: 574, column: 1, scope: !7435)
!7501 = distinct !DISubprogram(name: "spi_master_set_chip_select_timing", scope: !983, file: !983, line: 577, type: !7502, scopeLine: 578, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7510)
!7502 = !DISubroutineType(types: !7503)
!7503 = !{null, !952, !7504}
!7504 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_chip_select_timing_t", file: !872, line: 606, baseType: !7505)
!7505 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 595, size: 96, elements: !7506)
!7506 = !{!7507, !7508, !7509}
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select_setup_count", scope: !7505, file: !872, line: 596, baseType: !61, size: 32)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select_hold_count", scope: !7505, file: !872, line: 600, baseType: !61, size: 32, offset: 32)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select_idle_count", scope: !7505, file: !872, line: 603, baseType: !61, size: 32, offset: 64)
!7510 = !{!7511, !7512}
!7511 = !DILocalVariable(name: "master_port", arg: 1, scope: !7501, file: !983, line: 577, type: !952)
!7512 = !DILocalVariable(name: "chip_select_timing", arg: 2, scope: !7501, file: !983, line: 577, type: !7504)
!7513 = !DILocation(line: 0, scope: !7501)
!7514 = !DILocation(line: 580, column: 5, scope: !7501)
!7515 = !DILocation(line: 580, column: 39, scope: !7501)
!7516 = !DILocation(line: 580, column: 48, scope: !7501)
!7517 = !DILocation(line: 581, column: 95, scope: !7501)
!7518 = !DILocation(line: 581, column: 48, scope: !7501)
!7519 = !DILocation(line: 582, column: 48, scope: !7501)
!7520 = !DILocation(line: 585, column: 39, scope: !7501)
!7521 = !DILocation(line: 585, column: 48, scope: !7501)
!7522 = !DILocation(line: 586, column: 48, scope: !7501)
!7523 = !DILocation(line: 587, column: 1, scope: !7501)
!7524 = distinct !DISubprogram(name: "spi_master_set_deassert", scope: !983, file: !983, line: 591, type: !7525, scopeLine: 592, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !982, retainedNodes: !7527)
!7525 = !DISubroutineType(types: !7526)
!7526 = !{null, !952, !6699}
!7527 = !{!7528, !7529}
!7528 = !DILocalVariable(name: "master_port", arg: 1, scope: !7524, file: !983, line: 591, type: !952)
!7529 = !DILocalVariable(name: "deassert", arg: 2, scope: !7524, file: !983, line: 591, type: !6699)
!7530 = !DILocation(line: 0, scope: !7524)
!7531 = !DILocation(line: 593, column: 5, scope: !7524)
!7532 = !DILocation(line: 595, column: 13, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7524, file: !983, line: 593, column: 23)
!7534 = !DILocation(line: 595, column: 47, scope: !7533)
!7535 = !DILocation(line: 595, column: 55, scope: !7533)
!7536 = !DILocation(line: 596, column: 13, scope: !7533)
!7537 = !DILocation(line: 598, column: 13, scope: !7533)
!7538 = !DILocation(line: 598, column: 47, scope: !7533)
!7539 = !DILocation(line: 598, column: 55, scope: !7533)
!7540 = !DILocation(line: 599, column: 13, scope: !7533)
!7541 = !DILocation(line: 601, column: 1, scope: !7524)
!7542 = !DILocation(line: 131, column: 9, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !1021, file: !1022, line: 131, column: 9)
!7544 = !DILocation(line: 131, column: 9, scope: !1021)
!7545 = !DILocation(line: 0, scope: !1021)
!7546 = !DILocation(line: 134, column: 49, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7548, file: !1022, line: 133, column: 46)
!7548 = distinct !DILexicalBlock(scope: !7549, file: !1022, line: 133, column: 9)
!7549 = distinct !DILexicalBlock(scope: !7550, file: !1022, line: 133, column: 9)
!7550 = distinct !DILexicalBlock(scope: !7543, file: !1022, line: 131, column: 28)
!7551 = !DILocation(line: 134, column: 13, scope: !7547)
!7552 = !DILocation(line: 133, column: 42, scope: !7548)
!7553 = !DILocation(line: 133, column: 23, scope: !7548)
!7554 = !DILocation(line: 133, column: 9, scope: !7549)
!7555 = distinct !{!7555, !7554, !7556}
!7556 = !DILocation(line: 135, column: 9, scope: !7549)
!7557 = !DILocation(line: 136, column: 22, scope: !7550)
!7558 = !DILocation(line: 137, column: 5, scope: !7550)
!7559 = !DILocation(line: 138, column: 5, scope: !1021)
!7560 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !1031, file: !1031, line: 1577, type: !7561, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7563)
!7561 = !DISubroutineType(types: !7562)
!7562 = !{null, !863, !61}
!7563 = !{!7564, !7565}
!7564 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7560, file: !1031, line: 1577, type: !863)
!7565 = !DILocalVariable(name: "priority", arg: 2, scope: !7560, file: !1031, line: 1577, type: !61)
!7566 = !DILocation(line: 0, scope: !7560)
!7567 = !DILocation(line: 1582, column: 34, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7569, file: !1031, line: 1581, column: 8)
!7569 = distinct !DILexicalBlock(scope: !7560, file: !1031, line: 1579, column: 6)
!7570 = !DILocation(line: 1582, column: 5, scope: !7568)
!7571 = !DILocation(line: 1582, column: 32, scope: !7568)
!7572 = !DILocation(line: 1583, column: 1, scope: !7560)
!7573 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !1022, file: !1022, line: 141, type: !7574, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7576)
!7574 = !DISubroutineType(types: !7575)
!7575 = !{!1025, !862}
!7576 = !{!7577, !7578}
!7577 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7573, file: !1022, line: 141, type: !862)
!7578 = !DILocalVariable(name: "status", scope: !7573, file: !1022, line: 143, type: !1025)
!7579 = !DILocation(line: 0, scope: !7573)
!7580 = !DILocation(line: 145, column: 40, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7573, file: !1022, line: 145, column: 9)
!7582 = !DILocation(line: 149, column: 9, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7581, file: !1022, line: 148, column: 12)
!7584 = !DILocation(line: 153, column: 5, scope: !7573)
!7585 = !DILocation(line: 154, column: 1, scope: !7573)
!7586 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1031, file: !1031, line: 1494, type: !7587, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7589)
!7587 = !DISubroutineType(types: !7588)
!7588 = !{null, !863}
!7589 = !{!7590}
!7590 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7586, file: !1031, line: 1494, type: !863)
!7591 = !DILocation(line: 0, scope: !7586)
!7592 = !DILocation(line: 1497, column: 91, scope: !7586)
!7593 = !DILocation(line: 1497, column: 61, scope: !7586)
!7594 = !DILocation(line: 1497, column: 40, scope: !7586)
!7595 = !DILocation(line: 1497, column: 3, scope: !7586)
!7596 = !DILocation(line: 1497, column: 46, scope: !7586)
!7597 = !DILocation(line: 1498, column: 1, scope: !7586)
!7598 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !1022, file: !1022, line: 156, type: !7574, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7599)
!7599 = !{!7600, !7601}
!7600 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7598, file: !1022, line: 156, type: !862)
!7601 = !DILocalVariable(name: "status", scope: !7598, file: !1022, line: 158, type: !1025)
!7602 = !DILocation(line: 0, scope: !7598)
!7603 = !DILocation(line: 160, column: 40, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7598, file: !1022, line: 160, column: 9)
!7605 = !DILocation(line: 164, column: 9, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7604, file: !1022, line: 163, column: 12)
!7607 = !DILocation(line: 168, column: 5, scope: !7598)
!7608 = !DILocation(line: 169, column: 1, scope: !7598)
!7609 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1031, file: !1031, line: 1507, type: !7587, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7610)
!7610 = !{!7611}
!7611 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7609, file: !1031, line: 1507, type: !863)
!7612 = !DILocation(line: 0, scope: !7609)
!7613 = !DILocation(line: 1509, column: 65, scope: !7609)
!7614 = !DILocation(line: 1509, column: 44, scope: !7609)
!7615 = !DILocation(line: 1509, column: 32, scope: !7609)
!7616 = !DILocation(line: 1509, column: 3, scope: !7609)
!7617 = !DILocation(line: 1509, column: 39, scope: !7609)
!7618 = !DILocation(line: 1510, column: 1, scope: !7609)
!7619 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !1022, file: !1022, line: 171, type: !7620, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7622)
!7620 = !DISubroutineType(types: !7621)
!7621 = !{!61, !862}
!7622 = !{!7623, !7624}
!7623 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7619, file: !1022, line: 171, type: !862)
!7624 = !DILocalVariable(name: "ret", scope: !7619, file: !1022, line: 173, type: !61)
!7625 = !DILocation(line: 0, scope: !7619)
!7626 = !DILocation(line: 175, column: 40, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7619, file: !1022, line: 175, column: 9)
!7628 = !DILocation(line: 178, column: 15, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7627, file: !1022, line: 177, column: 12)
!7630 = !DILocation(line: 181, column: 5, scope: !7619)
!7631 = !DILocation(line: 182, column: 1, scope: !7619)
!7632 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !1031, file: !1031, line: 1523, type: !7633, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7635)
!7633 = !DISubroutineType(types: !7634)
!7634 = !{!61, !863}
!7635 = !{!7636}
!7636 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7632, file: !1031, line: 1523, type: !863)
!7637 = !DILocation(line: 0, scope: !7632)
!7638 = !DILocation(line: 1525, column: 51, scope: !7632)
!7639 = !DILocation(line: 1525, column: 23, scope: !7632)
!7640 = !DILocation(line: 1525, column: 83, scope: !7632)
!7641 = !DILocation(line: 1525, column: 22, scope: !7632)
!7642 = !DILocation(line: 1525, column: 3, scope: !7632)
!7643 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !1022, file: !1022, line: 184, type: !7574, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7644)
!7644 = !{!7645, !7646}
!7645 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7643, file: !1022, line: 184, type: !862)
!7646 = !DILocalVariable(name: "status", scope: !7643, file: !1022, line: 186, type: !1025)
!7647 = !DILocation(line: 0, scope: !7643)
!7648 = !DILocation(line: 188, column: 40, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7643, file: !1022, line: 188, column: 9)
!7650 = !DILocation(line: 192, column: 9, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7649, file: !1022, line: 191, column: 12)
!7652 = !DILocation(line: 196, column: 5, scope: !7643)
!7653 = !DILocation(line: 197, column: 1, scope: !7643)
!7654 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !1031, file: !1031, line: 1535, type: !7587, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7655)
!7655 = !{!7656}
!7656 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7654, file: !1031, line: 1535, type: !863)
!7657 = !DILocation(line: 0, scope: !7654)
!7658 = !DILocation(line: 1537, column: 65, scope: !7654)
!7659 = !DILocation(line: 1537, column: 44, scope: !7654)
!7660 = !DILocation(line: 1537, column: 32, scope: !7654)
!7661 = !DILocation(line: 1537, column: 3, scope: !7654)
!7662 = !DILocation(line: 1537, column: 39, scope: !7654)
!7663 = !DILocation(line: 1538, column: 1, scope: !7654)
!7664 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !1022, file: !1022, line: 199, type: !7574, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7665)
!7665 = !{!7666, !7667}
!7666 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7664, file: !1022, line: 199, type: !862)
!7667 = !DILocalVariable(name: "status", scope: !7664, file: !1022, line: 201, type: !1025)
!7668 = !DILocation(line: 0, scope: !7664)
!7669 = !DILocation(line: 203, column: 40, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7664, file: !1022, line: 203, column: 9)
!7671 = !DILocation(line: 207, column: 9, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7670, file: !1022, line: 206, column: 12)
!7673 = !DILocation(line: 211, column: 5, scope: !7664)
!7674 = !DILocation(line: 212, column: 1, scope: !7664)
!7675 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1031, file: !1031, line: 1547, type: !7587, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7676)
!7676 = !{!7677}
!7677 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7675, file: !1031, line: 1547, type: !863)
!7678 = !DILocation(line: 0, scope: !7675)
!7679 = !DILocation(line: 1549, column: 65, scope: !7675)
!7680 = !DILocation(line: 1549, column: 44, scope: !7675)
!7681 = !DILocation(line: 1549, column: 32, scope: !7675)
!7682 = !DILocation(line: 1549, column: 3, scope: !7675)
!7683 = !DILocation(line: 1549, column: 39, scope: !7675)
!7684 = !DILocation(line: 1550, column: 1, scope: !7675)
!7685 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !1022, file: !1022, line: 214, type: !7686, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7688)
!7686 = !DISubroutineType(types: !7687)
!7687 = !{!1025, !862, !61}
!7688 = !{!7689, !7690, !7691}
!7689 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7685, file: !1022, line: 214, type: !862)
!7690 = !DILocalVariable(name: "priority", arg: 2, scope: !7685, file: !1022, line: 214, type: !61)
!7691 = !DILocalVariable(name: "status", scope: !7685, file: !1022, line: 216, type: !1025)
!7692 = !DILocation(line: 0, scope: !7685)
!7693 = !DILocation(line: 218, column: 40, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7685, file: !1022, line: 218, column: 9)
!7695 = !DILocation(line: 222, column: 9, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7694, file: !1022, line: 221, column: 12)
!7697 = !DILocation(line: 226, column: 5, scope: !7685)
!7698 = !DILocation(line: 227, column: 1, scope: !7685)
!7699 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !1022, file: !1022, line: 229, type: !7620, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7700)
!7700 = !{!7701, !7702}
!7701 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7699, file: !1022, line: 229, type: !862)
!7702 = !DILocalVariable(name: "ret", scope: !7699, file: !1022, line: 231, type: !61)
!7703 = !DILocation(line: 0, scope: !7699)
!7704 = !DILocation(line: 233, column: 40, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7699, file: !1022, line: 233, column: 9)
!7706 = !DILocation(line: 236, column: 15, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7705, file: !1022, line: 235, column: 12)
!7708 = !DILocation(line: 239, column: 5, scope: !7699)
!7709 = !DILocation(line: 240, column: 1, scope: !7699)
!7710 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !1031, file: !1031, line: 1597, type: !7633, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7711)
!7711 = !{!7712}
!7712 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7710, file: !1031, line: 1597, type: !863)
!7713 = !DILocation(line: 0, scope: !7710)
!7714 = !DILocation(line: 1603, column: 23, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7716, file: !1031, line: 1602, column: 8)
!7716 = distinct !DILexicalBlock(scope: !7710, file: !1031, line: 1600, column: 6)
!7717 = !DILocation(line: 1603, column: 60, scope: !7715)
!7718 = !DILocation(line: 1604, column: 1, scope: !7710)
!7719 = distinct !DISubprogram(name: "isrC_main", scope: !1022, file: !1022, line: 248, type: !1023, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7720)
!7720 = !{!7721, !7722}
!7721 = !DILocalVariable(name: "status", scope: !7719, file: !1022, line: 250, type: !1025)
!7722 = !DILocalVariable(name: "irq_number", scope: !7719, file: !1022, line: 251, type: !862)
!7723 = !DILocation(line: 0, scope: !7719)
!7724 = !DILocation(line: 253, column: 5, scope: !7719)
!7725 = !DILocation(line: 255, column: 35, scope: !7719)
!7726 = !DILocation(line: 256, column: 40, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7719, file: !1022, line: 256, column: 9)
!7728 = !DILocation(line: 259, column: 48, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7727, file: !1022, line: 259, column: 16)
!7730 = !DILocation(line: 259, column: 62, scope: !7729)
!7731 = !DILocation(line: 259, column: 16, scope: !7727)
!7732 = !DILocation(line: 261, column: 9, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7729, file: !1022, line: 259, column: 71)
!7734 = !DILocation(line: 262, column: 9, scope: !7733)
!7735 = !DILocation(line: 264, column: 55, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7729, file: !1022, line: 263, column: 12)
!7737 = !DILocation(line: 264, column: 41, scope: !7736)
!7738 = !DILocation(line: 264, column: 53, scope: !7736)
!7739 = !DILocation(line: 265, column: 41, scope: !7736)
!7740 = !DILocation(line: 265, column: 9, scope: !7736)
!7741 = !DILocation(line: 269, column: 5, scope: !7719)
!7742 = !DILocation(line: 270, column: 1, scope: !7719)
!7743 = distinct !DISubprogram(name: "get_current_irq", scope: !1022, file: !1022, line: 242, type: !3931, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7744)
!7744 = !{!7745}
!7745 = !DILocalVariable(name: "irq_num", scope: !7743, file: !1022, line: 244, type: !61)
!7746 = !DILocation(line: 244, column: 31, scope: !7743)
!7747 = !DILocation(line: 244, column: 36, scope: !7743)
!7748 = !DILocation(line: 0, scope: !7743)
!7749 = !DILocation(line: 245, column: 21, scope: !7743)
!7750 = !DILocation(line: 245, column: 5, scope: !7743)
!7751 = distinct !DISubprogram(name: "get_pending_irq", scope: !1022, file: !1022, line: 121, type: !3931, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !293)
!7752 = !DILocation(line: 123, column: 19, scope: !7751)
!7753 = !DILocation(line: 123, column: 51, scope: !7751)
!7754 = !DILocation(line: 123, column: 5, scope: !7751)
!7755 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !1022, file: !1022, line: 272, type: !7756, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7759)
!7756 = !DISubroutineType(types: !7757)
!7757 = !{!1025, !862, !7758}
!7758 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !716, line: 175, baseType: !1103)
!7759 = !{!7760, !7761, !7762}
!7760 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7755, file: !1022, line: 272, type: !862)
!7761 = !DILocalVariable(name: "callback", arg: 2, scope: !7755, file: !1022, line: 272, type: !7758)
!7762 = !DILocalVariable(name: "mask", scope: !7755, file: !1022, line: 274, type: !61)
!7763 = !DILocation(line: 0, scope: !7755)
!7764 = !DILocation(line: 276, column: 40, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7755, file: !1022, line: 276, column: 9)
!7766 = !DILocation(line: 280, column: 12, scope: !7755)
!7767 = !DILocation(line: 281, column: 5, scope: !7755)
!7768 = !DILocation(line: 282, column: 37, scope: !7755)
!7769 = !DILocation(line: 282, column: 51, scope: !7755)
!7770 = !DILocation(line: 283, column: 37, scope: !7755)
!7771 = !DILocation(line: 283, column: 49, scope: !7755)
!7772 = !DILocation(line: 284, column: 5, scope: !7755)
!7773 = !DILocation(line: 286, column: 5, scope: !7755)
!7774 = !DILocation(line: 287, column: 1, scope: !7755)
!7775 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !1022, file: !1022, line: 289, type: !7776, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7778)
!7776 = !DISubroutineType(types: !7777)
!7777 = !{!1025, !1154}
!7778 = !{!7779}
!7779 = !DILocalVariable(name: "mask", arg: 1, scope: !7775, file: !1022, line: 289, type: !1154)
!7780 = !DILocation(line: 0, scope: !7775)
!7781 = !DILocation(line: 291, column: 13, scope: !7775)
!7782 = !DILocation(line: 291, column: 11, scope: !7775)
!7783 = !DILocation(line: 292, column: 5, scope: !7775)
!7784 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !1022, file: !1022, line: 295, type: !7785, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !7787)
!7785 = !DISubroutineType(types: !7786)
!7786 = !{!1025, !61}
!7787 = !{!7788}
!7788 = !DILocalVariable(name: "mask", arg: 1, scope: !7784, file: !1022, line: 295, type: !61)
!7789 = !DILocation(line: 0, scope: !7784)
!7790 = !DILocation(line: 297, column: 5, scope: !7784)
!7791 = !DILocation(line: 298, column: 5, scope: !7784)
!7792 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2685, file: !2685, line: 51, type: !3931, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !7793)
!7793 = !{!7794, !7795}
!7794 = !DILocalVariable(name: "mask", scope: !7792, file: !2685, line: 53, type: !61)
!7795 = !DILocalVariable(name: "priority", scope: !7792, file: !2685, line: 55, type: !61)
!7796 = !DILocation(line: 521, column: 3, scope: !7797, inlinedAt: !7801)
!7797 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !7798, file: !7798, line: 517, type: !3931, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !7799)
!7798 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!7799 = !{!7800}
!7800 = !DILocalVariable(name: "result", scope: !7797, file: !7798, line: 519, type: !61)
!7801 = distinct !DILocation(line: 53, column: 21, scope: !7792)
!7802 = !{i64 457576}
!7803 = !DILocation(line: 0, scope: !7797, inlinedAt: !7801)
!7804 = !DILocation(line: 0, scope: !7792)
!7805 = !DILocalVariable(name: "value", arg: 1, scope: !7806, file: !7798, line: 532, type: !61)
!7806 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !7798, file: !7798, line: 532, type: !7807, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !7809)
!7807 = !DISubroutineType(types: !7808)
!7808 = !{null, !61}
!7809 = !{!7805}
!7810 = !DILocation(line: 0, scope: !7806, inlinedAt: !7811)
!7811 = distinct !DILocation(line: 56, column: 5, scope: !7792)
!7812 = !DILocation(line: 534, column: 3, scope: !7806, inlinedAt: !7811)
!7813 = !{i64 457909}
!7814 = !DILocation(line: 456, column: 3, scope: !7815, inlinedAt: !7816)
!7815 = distinct !DISubprogram(name: "__DMB", scope: !2797, file: !2797, line: 454, type: !291, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !293)
!7816 = distinct !DILocation(line: 57, column: 5, scope: !7792)
!7817 = !{i64 430665}
!7818 = !DILocation(line: 434, column: 3, scope: !7819, inlinedAt: !7820)
!7819 = distinct !DISubprogram(name: "__ISB", scope: !2797, file: !2797, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !293)
!7820 = distinct !DILocation(line: 58, column: 5, scope: !7792)
!7821 = !{i64 430080}
!7822 = !DILocation(line: 59, column: 5, scope: !7792)
!7823 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2685, file: !2685, line: 62, type: !7807, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !7824)
!7824 = !{!7825}
!7825 = !DILocalVariable(name: "mask", arg: 1, scope: !7823, file: !2685, line: 62, type: !61)
!7826 = !DILocation(line: 0, scope: !7823)
!7827 = !DILocation(line: 0, scope: !7806, inlinedAt: !7828)
!7828 = distinct !DILocation(line: 64, column: 5, scope: !7823)
!7829 = !DILocation(line: 534, column: 3, scope: !7806, inlinedAt: !7828)
!7830 = !DILocation(line: 456, column: 3, scope: !7815, inlinedAt: !7831)
!7831 = distinct !DILocation(line: 65, column: 5, scope: !7823)
!7832 = !DILocation(line: 434, column: 3, scope: !7819, inlinedAt: !7833)
!7833 = distinct !DILocation(line: 66, column: 5, scope: !7823)
!7834 = !DILocation(line: 67, column: 1, scope: !7823)
!7835 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !2685, file: !2685, line: 69, type: !291, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !7836)
!7836 = !{!7837, !7838}
!7837 = !DILocalVariable(name: "irq_number", scope: !7835, file: !2685, line: 71, type: !862)
!7838 = !DILocalVariable(name: "mask", scope: !7835, file: !2685, line: 72, type: !61)
!7839 = !DILocation(line: 72, column: 21, scope: !7835)
!7840 = !DILocation(line: 0, scope: !7835)
!7841 = !DILocation(line: 73, column: 5, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7835, file: !2685, line: 73, column: 5)
!7843 = !DILocation(line: 74, column: 9, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7845, file: !2685, line: 73, column: 85)
!7845 = distinct !DILexicalBlock(scope: !7842, file: !2685, line: 73, column: 5)
!7846 = !DILocation(line: 73, column: 81, scope: !7845)
!7847 = !DILocation(line: 73, column: 53, scope: !7845)
!7848 = distinct !{!7848, !7841, !7849}
!7849 = !DILocation(line: 75, column: 5, scope: !7842)
!7850 = !DILocation(line: 76, column: 5, scope: !7835)
!7851 = !DILocation(line: 77, column: 1, scope: !7835)
!7852 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1031, file: !1031, line: 1507, type: !7587, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !7853)
!7853 = !{!7854}
!7854 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7852, file: !1031, line: 1507, type: !863)
!7855 = !DILocation(line: 0, scope: !7852)
!7856 = !DILocation(line: 1509, column: 65, scope: !7852)
!7857 = !DILocation(line: 1509, column: 44, scope: !7852)
!7858 = !DILocation(line: 1509, column: 32, scope: !7852)
!7859 = !DILocation(line: 1509, column: 3, scope: !7852)
!7860 = !DILocation(line: 1509, column: 39, scope: !7852)
!7861 = !DILocation(line: 1510, column: 1, scope: !7852)
!7862 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !2685, file: !2685, line: 79, type: !291, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !7863)
!7863 = !{!7864, !7865}
!7864 = !DILocalVariable(name: "irq_number", scope: !7862, file: !2685, line: 81, type: !862)
!7865 = !DILocalVariable(name: "mask", scope: !7862, file: !2685, line: 82, type: !61)
!7866 = !DILocation(line: 82, column: 21, scope: !7862)
!7867 = !DILocation(line: 0, scope: !7862)
!7868 = !DILocation(line: 84, column: 5, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7862, file: !2685, line: 84, column: 5)
!7870 = !DILocation(line: 85, column: 9, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7872, file: !2685, line: 84, column: 85)
!7872 = distinct !DILexicalBlock(scope: !7869, file: !2685, line: 84, column: 5)
!7873 = !DILocation(line: 84, column: 81, scope: !7872)
!7874 = !DILocation(line: 84, column: 53, scope: !7872)
!7875 = distinct !{!7875, !7868, !7876}
!7876 = !DILocation(line: 86, column: 5, scope: !7869)
!7877 = !DILocation(line: 87, column: 5, scope: !7862)
!7878 = !DILocation(line: 88, column: 1, scope: !7862)
!7879 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1031, file: !1031, line: 1494, type: !7587, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !7880)
!7880 = !{!7881}
!7881 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7879, file: !1031, line: 1494, type: !863)
!7882 = !DILocation(line: 0, scope: !7879)
!7883 = !DILocation(line: 1497, column: 91, scope: !7879)
!7884 = !DILocation(line: 1497, column: 61, scope: !7879)
!7885 = !DILocation(line: 1497, column: 40, scope: !7879)
!7886 = !DILocation(line: 1497, column: 3, scope: !7879)
!7887 = !DILocation(line: 1497, column: 46, scope: !7879)
!7888 = !DILocation(line: 1498, column: 1, scope: !7879)
!7889 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !2685, file: !2685, line: 90, type: !291, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !7890)
!7890 = !{!7891}
!7891 = !DILocalVariable(name: "irq_number", scope: !7889, file: !2685, line: 92, type: !862)
!7892 = !DILocation(line: 0, scope: !7889)
!7893 = !DILocation(line: 93, column: 5, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7889, file: !2685, line: 93, column: 5)
!7895 = !DILocation(line: 94, column: 9, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7897, file: !2685, line: 93, column: 85)
!7897 = distinct !DILexicalBlock(scope: !7894, file: !2685, line: 93, column: 5)
!7898 = !DILocation(line: 93, column: 81, scope: !7897)
!7899 = !DILocation(line: 93, column: 53, scope: !7897)
!7900 = distinct !{!7900, !7893, !7901}
!7901 = !DILocation(line: 95, column: 5, scope: !7894)
!7902 = !DILocation(line: 96, column: 1, scope: !7889)
!7903 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1031, file: !1031, line: 1547, type: !7587, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !7904)
!7904 = !{!7905}
!7905 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7903, file: !1031, line: 1547, type: !863)
!7906 = !DILocation(line: 0, scope: !7903)
!7907 = !DILocation(line: 1549, column: 65, scope: !7903)
!7908 = !DILocation(line: 1549, column: 44, scope: !7903)
!7909 = !DILocation(line: 1549, column: 32, scope: !7903)
!7910 = !DILocation(line: 1549, column: 3, scope: !7903)
!7911 = !DILocation(line: 1549, column: 39, scope: !7903)
!7912 = !DILocation(line: 1550, column: 1, scope: !7903)
!7913 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !2685, file: !2685, line: 98, type: !7574, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !7914)
!7914 = !{!7915}
!7915 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7913, file: !2685, line: 98, type: !862)
!7916 = !DILocation(line: 0, scope: !7913)
!7917 = !DILocation(line: 100, column: 24, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7913, file: !2685, line: 100, column: 9)
!7919 = !DILocation(line: 104, column: 5, scope: !7913)
!7920 = !DILocation(line: 105, column: 5, scope: !7913)
!7921 = !DILocation(line: 106, column: 1, scope: !7913)
!7922 = distinct !DISubprogram(name: "software_trigger_irq", scope: !2685, file: !2685, line: 45, type: !1104, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !7923)
!7923 = !{!7924}
!7924 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7922, file: !2685, line: 45, type: !862)
!7925 = !DILocation(line: 0, scope: !7922)
!7926 = !DILocation(line: 47, column: 54, scope: !7922)
!7927 = !DILocation(line: 47, column: 16, scope: !7922)
!7928 = !DILocation(line: 445, column: 3, scope: !7929, inlinedAt: !7930)
!7929 = distinct !DISubprogram(name: "__DSB", scope: !2797, file: !2797, line: 443, type: !291, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !293)
!7930 = distinct !DILocation(line: 48, column: 5, scope: !7922)
!7931 = !{i64 430376}
!7932 = !DILocation(line: 49, column: 1, scope: !7922)
!7933 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !2685, file: !2685, line: 114, type: !3931, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !293)
!7934 = !DILocation(line: 116, column: 19, scope: !7933)
!7935 = !DILocation(line: 116, column: 24, scope: !7933)
!7936 = !DILocation(line: 116, column: 5, scope: !7933)
!7937 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !1117, file: !1117, line: 71, type: !7938, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !7940)
!7938 = !DISubroutineType(types: !7939)
!7939 = !{null, !88, !61}
!7940 = !{!7941, !7942, !7943, !8037, !8038, !8039}
!7941 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7937, file: !1117, line: 71, type: !88)
!7942 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !7937, file: !1117, line: 71, type: !61)
!7943 = !DILocalVariable(name: "D", scope: !7937, file: !1117, line: 73, type: !7944)
!7944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7945, size: 32)
!7945 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1306, line: 193, baseType: !7946)
!7946 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1306, line: 134, size: 1824, elements: !7947)
!7947 = !{!7948, !7949, !7950, !7956, !7962, !7963, !7970, !7971, !7978, !7979, !7980, !7981, !7988, !7989, !8019, !8020, !8021, !8022, !8023, !8024, !8025, !8026, !8027, !8028, !8029, !8030, !8031, !8032, !8033, !8034, !8035, !8036}
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !7946, file: !1306, line: 136, baseType: !61, size: 32)
!7949 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !7946, file: !1306, line: 137, baseType: !762, size: 32, offset: 32)
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !7946, file: !1306, line: 138, baseType: !7951, size: 32, offset: 64)
!7951 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1390, line: 56, baseType: !7952)
!7952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7953, size: 32)
!7953 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 54, size: 8, elements: !7954)
!7954 = !{!7955}
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !7953, file: !1390, line: 55, baseType: !460, size: 8)
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !7946, file: !1306, line: 139, baseType: !7957, size: 32, offset: 96)
!7957 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1390, line: 46, baseType: !7958)
!7958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7959, size: 32)
!7959 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 44, size: 8, elements: !7960)
!7960 = !{!7961}
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !7959, file: !1390, line: 45, baseType: !460, size: 8)
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !7946, file: !1306, line: 140, baseType: !1402, size: 8, offset: 128)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !7946, file: !1306, line: 143, baseType: !7964, size: 32, offset: 160)
!7964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7965, size: 32)
!7965 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1408, line: 146, baseType: !7966)
!7966 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 143, size: 64, elements: !7967)
!7967 = !{!7968, !7969}
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !7966, file: !1408, line: 144, baseType: !61, size: 32)
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !7966, file: !1408, line: 145, baseType: !61, size: 32, offset: 32)
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !7946, file: !1306, line: 144, baseType: !762, size: 32, offset: 192)
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !7946, file: !1306, line: 145, baseType: !7972, size: 32, offset: 224)
!7972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7973, size: 32)
!7973 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1408, line: 152, baseType: !7974)
!7974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 149, size: 64, elements: !7975)
!7975 = !{!7976, !7977}
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !7974, file: !1408, line: 150, baseType: !61, size: 32)
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !7974, file: !1408, line: 151, baseType: !61, size: 32, offset: 32)
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !7946, file: !1306, line: 146, baseType: !762, size: 32, offset: 256)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !7946, file: !1306, line: 147, baseType: !61, size: 32, offset: 288)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !7946, file: !1306, line: 148, baseType: !762, size: 32, offset: 320)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !7946, file: !1306, line: 151, baseType: !7982, size: 1024, offset: 352)
!7982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7983, size: 1024, elements: !1431)
!7983 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1408, line: 170, baseType: !7984)
!7984 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 167, size: 64, elements: !7985)
!7985 = !{!7986, !7987}
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !7984, file: !1408, line: 168, baseType: !61, size: 32)
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !7984, file: !1408, line: 169, baseType: !61, size: 32, offset: 32)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !7946, file: !1306, line: 155, baseType: !1433, size: 32, offset: 1376)
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !7946, file: !1306, line: 156, baseType: !7990, size: 32, offset: 1408)
!7990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7991, size: 32)
!7991 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1306, line: 124, baseType: !7992)
!7992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1306, line: 90, size: 200, elements: !7993)
!7993 = !{!7994, !7995, !7996, !7997, !7998, !7999, !8000, !8001, !8002, !8003, !8004, !8005, !8006, !8007, !8008, !8009, !8010, !8011, !8012, !8013, !8014, !8015, !8016, !8017, !8018}
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !7992, file: !1306, line: 91, baseType: !460, size: 8)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !7992, file: !1306, line: 92, baseType: !460, size: 8, offset: 8)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !7992, file: !1306, line: 94, baseType: !460, size: 8, offset: 16)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !7992, file: !1306, line: 95, baseType: !460, size: 8, offset: 24)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !7992, file: !1306, line: 96, baseType: !460, size: 8, offset: 32)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !7992, file: !1306, line: 98, baseType: !460, size: 8, offset: 40)
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !7992, file: !1306, line: 99, baseType: !460, size: 8, offset: 48)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !7992, file: !1306, line: 100, baseType: !460, size: 8, offset: 56)
!8002 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !7992, file: !1306, line: 101, baseType: !460, size: 8, offset: 64)
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !7992, file: !1306, line: 103, baseType: !460, size: 8, offset: 72)
!8004 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !7992, file: !1306, line: 104, baseType: !460, size: 8, offset: 80)
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !7992, file: !1306, line: 106, baseType: !460, size: 8, offset: 88)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !7992, file: !1306, line: 107, baseType: !460, size: 8, offset: 96)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !7992, file: !1306, line: 108, baseType: !460, size: 8, offset: 104)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !7992, file: !1306, line: 109, baseType: !460, size: 8, offset: 112)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !7992, file: !1306, line: 110, baseType: !460, size: 8, offset: 120)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !7992, file: !1306, line: 111, baseType: !460, size: 8, offset: 128)
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !7992, file: !1306, line: 112, baseType: !460, size: 8, offset: 136)
!8012 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !7992, file: !1306, line: 114, baseType: !460, size: 8, offset: 144)
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !7992, file: !1306, line: 115, baseType: !460, size: 8, offset: 152)
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !7992, file: !1306, line: 118, baseType: !460, size: 8, offset: 160)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !7992, file: !1306, line: 119, baseType: !460, size: 8, offset: 168)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !7992, file: !1306, line: 120, baseType: !460, size: 8, offset: 176)
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !7992, file: !1306, line: 121, baseType: !460, size: 8, offset: 184)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !7992, file: !1306, line: 122, baseType: !460, size: 8, offset: 192)
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !7946, file: !1306, line: 157, baseType: !61, size: 32, offset: 1440)
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !7946, file: !1306, line: 158, baseType: !975, size: 16, offset: 1472)
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !7946, file: !1306, line: 159, baseType: !975, size: 16, offset: 1488)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !7946, file: !1306, line: 163, baseType: !975, size: 16, offset: 1504)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !7946, file: !1306, line: 164, baseType: !975, size: 16, offset: 1520)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !7946, file: !1306, line: 167, baseType: !460, size: 8, offset: 1536)
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !7946, file: !1306, line: 168, baseType: !1472, size: 24, offset: 1544)
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !7946, file: !1306, line: 169, baseType: !460, size: 8, offset: 1568)
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !7946, file: !1306, line: 170, baseType: !460, size: 8, offset: 1576)
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !7946, file: !1306, line: 173, baseType: !975, size: 16, offset: 1584)
!8029 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !7946, file: !1306, line: 174, baseType: !61, size: 32, offset: 1600)
!8030 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !7946, file: !1306, line: 175, baseType: !61, size: 32, offset: 1632)
!8031 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !7946, file: !1306, line: 178, baseType: !91, size: 8, offset: 1664)
!8032 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !7946, file: !1306, line: 179, baseType: !91, size: 8, offset: 1672)
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !7946, file: !1306, line: 182, baseType: !1483, size: 32, offset: 1696)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !7946, file: !1306, line: 186, baseType: !1483, size: 32, offset: 1728)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !7946, file: !1306, line: 187, baseType: !1488, size: 32, offset: 1760)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !7946, file: !1306, line: 188, baseType: !1488, size: 32, offset: 1792)
!8037 = !DILocalVariable(name: "i", scope: !7937, file: !1117, line: 74, type: !61)
!8038 = !DILocalVariable(name: "data_cnt", scope: !7937, file: !1117, line: 74, type: !61)
!8039 = !DILocalVariable(name: "p_data", scope: !7937, file: !1117, line: 75, type: !1154)
!8040 = !DILocation(line: 0, scope: !7937)
!8041 = !DILocation(line: 77, column: 16, scope: !7937)
!8042 = !DILocation(line: 79, column: 53, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8044, file: !1117, line: 79, column: 5)
!8044 = distinct !DILexicalBlock(scope: !7937, file: !1117, line: 79, column: 5)
!8045 = !DILocation(line: 79, column: 5, scope: !8044)
!8046 = !DILocation(line: 79, column: 41, scope: !8044)
!8047 = !DILocation(line: 77, column: 47, scope: !7937)
!8048 = !DILocation(line: 80, column: 13, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8050, file: !1117, line: 80, column: 13)
!8050 = distinct !DILexicalBlock(scope: !8043, file: !1117, line: 79, column: 80)
!8051 = !DILocation(line: 80, column: 21, scope: !8049)
!8052 = !DILocation(line: 80, column: 13, scope: !8050)
!8053 = !DILocation(line: 81, column: 13, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8055, file: !1117, line: 81, column: 13)
!8055 = distinct !DILexicalBlock(scope: !8056, file: !1117, line: 81, column: 13)
!8056 = distinct !DILexicalBlock(scope: !8057, file: !1117, line: 81, column: 13)
!8057 = distinct !DILexicalBlock(scope: !8049, file: !1117, line: 80, column: 36)
!8058 = !DILocation(line: 79, column: 65, scope: !8043)
!8059 = !DILocation(line: 79, column: 70, scope: !8043)
!8060 = distinct !{!8060, !8045, !8061}
!8061 = !DILocation(line: 84, column: 5, scope: !8044)
!8062 = !DILocation(line: 85, column: 1, scope: !7937)
!8063 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !1117, file: !1117, line: 93, type: !3679, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8064)
!8064 = !{!8065, !8066}
!8065 = !DILocalVariable(name: "num", arg: 1, scope: !8063, file: !1117, line: 93, type: !61)
!8066 = !DILocalVariable(name: "ret", scope: !8063, file: !1117, line: 95, type: !18)
!8067 = !DILocation(line: 0, scope: !8063)
!8068 = !DILocation(line: 100, column: 9, scope: !8063)
!8069 = !DILocation(line: 102, column: 5, scope: !8063)
!8070 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !1117, file: !1117, line: 110, type: !8071, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8073)
!8071 = !DISubroutineType(types: !8072)
!8072 = !{null, !974}
!8073 = !{!8074, !8075}
!8074 = !DILocalVariable(name: "CS", arg: 1, scope: !8070, file: !1117, line: 110, type: !974)
!8075 = !DILocalVariable(name: "val", scope: !8070, file: !1117, line: 112, type: !61)
!8076 = !DILocation(line: 0, scope: !8070)
!8077 = !DILocation(line: 114, column: 5, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8079, file: !1117, line: 114, column: 5)
!8079 = distinct !DILexicalBlock(scope: !8070, file: !1117, line: 114, column: 5)
!8080 = !DILocation(line: 116, column: 16, scope: !8070)
!8081 = !DILocation(line: 117, column: 9, scope: !8070)
!8082 = !DILocation(line: 122, column: 13, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8084, file: !1117, line: 121, column: 27)
!8084 = distinct !DILexicalBlock(scope: !8085, file: !1117, line: 121, column: 16)
!8085 = distinct !DILexicalBlock(scope: !8070, file: !1117, line: 117, column: 9)
!8086 = !DILocation(line: 127, column: 9, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !1117, line: 127, column: 9)
!8088 = distinct !DILexicalBlock(scope: !8089, file: !1117, line: 127, column: 9)
!8089 = distinct !DILexicalBlock(scope: !8090, file: !1117, line: 127, column: 9)
!8090 = distinct !DILexicalBlock(scope: !8084, file: !1117, line: 125, column: 12)
!8091 = !DILocation(line: 0, scope: !8085)
!8092 = !DILocation(line: 134, column: 5, scope: !8070)
!8093 = !DILocation(line: 134, column: 19, scope: !8070)
!8094 = !DILocation(line: 134, column: 35, scope: !8070)
!8095 = !DILocation(line: 134, column: 12, scope: !8070)
!8096 = distinct !{!8096, !8092, !8097}
!8097 = !DILocation(line: 134, column: 57, scope: !8070)
!8098 = !DILocation(line: 135, column: 19, scope: !8070)
!8099 = !DILocation(line: 135, column: 34, scope: !8070)
!8100 = !DILocation(line: 135, column: 12, scope: !8070)
!8101 = !DILocation(line: 135, column: 5, scope: !8070)
!8102 = distinct !{!8102, !8101, !8103}
!8103 = !DILocation(line: 135, column: 50, scope: !8070)
!8104 = !DILocation(line: 130, column: 9, scope: !8070)
!8105 = !DILocation(line: 138, column: 24, scope: !8070)
!8106 = !DILocation(line: 139, column: 1, scope: !8070)
!8107 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !1117, file: !1117, line: 148, type: !8071, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8108)
!8108 = !{!8109, !8110}
!8109 = !DILocalVariable(name: "CS", arg: 1, scope: !8107, file: !1117, line: 148, type: !974)
!8110 = !DILocalVariable(name: "val", scope: !8107, file: !1117, line: 150, type: !61)
!8111 = !DILocation(line: 0, scope: !8107)
!8112 = !DILocation(line: 153, column: 16, scope: !8107)
!8113 = !DILocation(line: 154, column: 9, scope: !8107)
!8114 = !DILocation(line: 155, column: 24, scope: !8107)
!8115 = !DILocation(line: 158, column: 5, scope: !8107)
!8116 = !DILocation(line: 158, column: 18, scope: !8107)
!8117 = !DILocation(line: 158, column: 32, scope: !8107)
!8118 = distinct !{!8118, !8115, !8119}
!8119 = !DILocation(line: 158, column: 49, scope: !8107)
!8120 = !DILocation(line: 163, column: 16, scope: !8107)
!8121 = !DILocation(line: 164, column: 9, scope: !8107)
!8122 = !DILocation(line: 165, column: 24, scope: !8107)
!8123 = !DILocation(line: 168, column: 5, scope: !8107)
!8124 = !DILocation(line: 168, column: 18, scope: !8107)
!8125 = !DILocation(line: 168, column: 32, scope: !8107)
!8126 = distinct !{!8126, !8123, !8127}
!8127 = !DILocation(line: 168, column: 46, scope: !8107)
!8128 = !DILocation(line: 174, column: 10, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8107, file: !1117, line: 174, column: 9)
!8130 = !DILocation(line: 174, column: 25, scope: !8129)
!8131 = !DILocation(line: 174, column: 9, scope: !8107)
!8132 = !DILocation(line: 175, column: 9, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8134, file: !1117, line: 175, column: 9)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !1117, line: 175, column: 9)
!8135 = distinct !DILexicalBlock(scope: !8129, file: !1117, line: 174, column: 36)
!8136 = !DILocation(line: 176, column: 5, scope: !8135)
!8137 = !DILocation(line: 179, column: 1, scope: !8107)
!8138 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !1117, file: !1117, line: 186, type: !8139, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8141)
!8139 = !DISubroutineType(types: !8140)
!8140 = !{!61, !974}
!8141 = !{!8142, !8143, !8144}
!8142 = !DILocalVariable(name: "CS", arg: 1, scope: !8138, file: !1117, line: 186, type: !974)
!8143 = !DILocalVariable(name: "val", scope: !8138, file: !1117, line: 188, type: !61)
!8144 = !DILocalVariable(name: "misc_ctl", scope: !8138, file: !1117, line: 189, type: !61)
!8145 = !DILocation(line: 0, scope: !8138)
!8146 = !DILocation(line: 204, column: 16, scope: !8138)
!8147 = !DILocation(line: 208, column: 12, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8138, file: !1117, line: 208, column: 9)
!8149 = !DILocation(line: 208, column: 9, scope: !8138)
!8150 = !DILocation(line: 212, column: 20, scope: !8138)
!8151 = !DILocation(line: 215, column: 1, scope: !8138)
!8152 = !DILocation(line: 215, column: 15, scope: !8138)
!8153 = !DILocation(line: 215, column: 29, scope: !8138)
!8154 = !DILocation(line: 215, column: 8, scope: !8138)
!8155 = distinct !{!8155, !8151, !8156}
!8156 = !DILocation(line: 215, column: 46, scope: !8138)
!8157 = !DILocation(line: 216, column: 22, scope: !8138)
!8158 = !DILocation(line: 216, column: 36, scope: !8138)
!8159 = !DILocation(line: 216, column: 9, scope: !8138)
!8160 = distinct !{!8160, !8159, !8161}
!8161 = !DILocation(line: 216, column: 47, scope: !8138)
!8162 = !DILocation(line: 218, column: 13, scope: !8138)
!8163 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !1117, file: !1117, line: 227, type: !8071, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8164)
!8164 = !{!8165}
!8165 = !DILocalVariable(name: "CS", arg: 1, scope: !8163, file: !1117, line: 227, type: !974)
!8166 = !DILocation(line: 0, scope: !8163)
!8167 = !DILocation(line: 235, column: 5, scope: !8163)
!8168 = !DILocation(line: 236, column: 5, scope: !8163)
!8169 = !DILocation(line: 238, column: 1, scope: !8163)
!8170 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !1117, file: !1117, line: 249, type: !8171, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8173)
!8171 = !DISubroutineType(types: !8172)
!8172 = !{null, !974, !772}
!8173 = !{!8174, !8175, !8176, !8177, !8178}
!8174 = !DILocalVariable(name: "CS", arg: 1, scope: !8170, file: !1117, line: 249, type: !974)
!8175 = !DILocalVariable(name: "cmd", arg: 2, scope: !8170, file: !1117, line: 249, type: !772)
!8176 = !DILocalVariable(name: "cmdi", scope: !8170, file: !1117, line: 251, type: !61)
!8177 = !DILocalVariable(name: "cmdo", scope: !8170, file: !1117, line: 251, type: !61)
!8178 = !DILocalVariable(name: "len", scope: !8170, file: !1117, line: 252, type: !460)
!8179 = !DILocation(line: 0, scope: !8170)
!8180 = !DILocation(line: 254, column: 46, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8182, file: !1117, line: 254, column: 5)
!8182 = distinct !DILexicalBlock(scope: !8170, file: !1117, line: 254, column: 5)
!8183 = !DILocation(line: 254, column: 5, scope: !8182)
!8184 = !DILocation(line: 255, column: 22, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8181, file: !1117, line: 254, column: 103)
!8186 = !DILocation(line: 255, column: 59, scope: !8185)
!8187 = !DILocation(line: 255, column: 51, scope: !8185)
!8188 = !DILocation(line: 254, column: 65, scope: !8181)
!8189 = !DILocation(line: 254, column: 97, scope: !8181)
!8190 = distinct !{!8190, !8183, !8191}
!8191 = !DILocation(line: 256, column: 5, scope: !8182)
!8192 = !DILocation(line: 258, column: 9, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8170, file: !1117, line: 258, column: 9)
!8194 = !DILocation(line: 262, column: 5, scope: !8170)
!8195 = !DILocation(line: 263, column: 33, scope: !8170)
!8196 = !DILocation(line: 264, column: 25, scope: !8170)
!8197 = !DILocation(line: 265, column: 24, scope: !8170)
!8198 = !DILocation(line: 266, column: 5, scope: !8170)
!8199 = !DILocation(line: 268, column: 5, scope: !8170)
!8200 = !DILocation(line: 269, column: 1, scope: !8170)
!8201 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !1117, file: !1117, line: 281, type: !8202, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8204)
!8202 = !DISubroutineType(types: !8203)
!8203 = !{null, !974, !5062, !772, !772}
!8204 = !{!8205, !8206, !8207, !8208, !8209, !8210}
!8205 = !DILocalVariable(name: "CS", arg: 1, scope: !8201, file: !1117, line: 281, type: !974)
!8206 = !DILocalVariable(name: "cmd", arg: 2, scope: !8201, file: !1117, line: 281, type: !5062)
!8207 = !DILocalVariable(name: "address", arg: 3, scope: !8201, file: !1117, line: 281, type: !772)
!8208 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !8201, file: !1117, line: 281, type: !772)
!8209 = !DILocalVariable(name: "cmd1", scope: !8201, file: !1117, line: 283, type: !61)
!8210 = !DILocalVariable(name: "cmd2", scope: !8201, file: !1117, line: 283, type: !61)
!8211 = !DILocation(line: 0, scope: !8201)
!8212 = !DILocation(line: 285, column: 12, scope: !8201)
!8213 = !DILocation(line: 287, column: 23, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8201, file: !1117, line: 287, column: 9)
!8215 = !DILocation(line: 287, column: 9, scope: !8201)
!8216 = !DILocation(line: 288, column: 22, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8214, file: !1117, line: 287, column: 31)
!8218 = !DILocation(line: 288, column: 55, scope: !8217)
!8219 = !DILocation(line: 288, column: 53, scope: !8217)
!8220 = !DILocation(line: 289, column: 5, scope: !8217)
!8221 = !DILocation(line: 290, column: 22, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8214, file: !1117, line: 289, column: 12)
!8223 = !DILocation(line: 290, column: 53, scope: !8222)
!8224 = !DILocation(line: 290, column: 51, scope: !8222)
!8225 = !DILocation(line: 291, column: 21, scope: !8222)
!8226 = !DILocation(line: 0, scope: !8214)
!8227 = !DILocation(line: 294, column: 33, scope: !8201)
!8228 = !DILocation(line: 295, column: 38, scope: !8201)
!8229 = !DILocation(line: 296, column: 41, scope: !8201)
!8230 = !DILocation(line: 296, column: 25, scope: !8201)
!8231 = !DILocation(line: 297, column: 24, scope: !8201)
!8232 = !DILocation(line: 299, column: 5, scope: !8201)
!8233 = !DILocation(line: 300, column: 5, scope: !8201)
!8234 = !DILocation(line: 302, column: 1, scope: !8201)
!8235 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !1117, file: !1117, line: 312, type: !8236, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8238)
!8236 = !DISubroutineType(types: !8237)
!8237 = !{!61, !772, !772}
!8238 = !{!8239, !8240}
!8239 = !DILocalVariable(name: "cmd", arg: 1, scope: !8235, file: !1117, line: 312, type: !772)
!8240 = !DILocalVariable(name: "address", arg: 2, scope: !8235, file: !1117, line: 312, type: !772)
!8241 = !DILocation(line: 0, scope: !8235)
!8242 = !DILocation(line: 314, column: 14, scope: !8235)
!8243 = !DILocation(line: 314, column: 44, scope: !8235)
!8244 = !DILocation(line: 314, column: 82, scope: !8235)
!8245 = !DILocation(line: 314, column: 75, scope: !8235)
!8246 = !DILocation(line: 314, column: 5, scope: !8235)
!8247 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !1117, file: !1117, line: 332, type: !8248, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8251)
!8248 = !DISubroutineType(types: !8249)
!8249 = !{!61, !772, !772, !8250, !1154}
!8250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 32)
!8251 = !{!8252, !8253, !8254, !8255, !8256, !8264, !8265, !8266}
!8252 = !DILocalVariable(name: "cmd", arg: 1, scope: !8247, file: !1117, line: 332, type: !772)
!8253 = !DILocalVariable(name: "address", arg: 2, scope: !8247, file: !1117, line: 332, type: !772)
!8254 = !DILocalVariable(name: "p_data", arg: 3, scope: !8247, file: !1117, line: 332, type: !8250)
!8255 = !DILocalVariable(name: "length", arg: 4, scope: !8247, file: !1117, line: 332, type: !1154)
!8256 = !DILocalVariable(name: "tmp", scope: !8247, file: !1117, line: 334, type: !8257)
!8257 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !1306, line: 202, baseType: !8258)
!8258 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1306, line: 198, size: 32, elements: !8259)
!8259 = !{!8260, !8261, !8263}
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !8258, file: !1306, line: 199, baseType: !61, size: 32)
!8261 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !8258, file: !1306, line: 200, baseType: !8262, size: 32)
!8262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !975, size: 32, elements: !465)
!8263 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !8258, file: !1306, line: 201, baseType: !459, size: 32)
!8264 = !DILocalVariable(name: "cmd1", scope: !8247, file: !1117, line: 335, type: !61)
!8265 = !DILocalVariable(name: "cmd2", scope: !8247, file: !1117, line: 335, type: !61)
!8266 = !DILocalVariable(name: "i", scope: !8247, file: !1117, line: 336, type: !61)
!8267 = !DILocation(line: 0, scope: !8247)
!8268 = !DILocation(line: 334, column: 5, scope: !8247)
!8269 = !DILocation(line: 334, column: 16, scope: !8247)
!8270 = !DILocation(line: 338, column: 12, scope: !8247)
!8271 = !DILocation(line: 340, column: 17, scope: !8247)
!8272 = !DILocation(line: 342, column: 17, scope: !8247)
!8273 = !DILocation(line: 342, column: 9, scope: !8247)
!8274 = !DILocation(line: 342, column: 15, scope: !8247)
!8275 = !DILocation(line: 344, column: 22, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8277, file: !1117, line: 343, column: 29)
!8277 = distinct !DILexicalBlock(scope: !8278, file: !1117, line: 343, column: 5)
!8278 = distinct !DILexicalBlock(scope: !8247, file: !1117, line: 343, column: 5)
!8279 = !DILocation(line: 343, column: 5, scope: !8278)
!8280 = !DILocation(line: 344, column: 21, scope: !8276)
!8281 = !DILocation(line: 344, column: 9, scope: !8276)
!8282 = !DILocation(line: 344, column: 19, scope: !8276)
!8283 = !DILocation(line: 345, column: 18, scope: !8276)
!8284 = !DILocation(line: 343, column: 25, scope: !8277)
!8285 = !DILocation(line: 343, column: 19, scope: !8277)
!8286 = distinct !{!8286, !8279, !8287}
!8287 = !DILocation(line: 346, column: 5, scope: !8278)
!8288 = !DILocation(line: 347, column: 16, scope: !8247)
!8289 = !DILocation(line: 348, column: 16, scope: !8247)
!8290 = !DILocation(line: 348, column: 15, scope: !8247)
!8291 = !DILocation(line: 339, column: 17, scope: !8247)
!8292 = !DILocation(line: 339, column: 52, scope: !8247)
!8293 = !DILocation(line: 339, column: 45, scope: !8247)
!8294 = !DILocation(line: 348, column: 13, scope: !8247)
!8295 = !DILocation(line: 349, column: 38, scope: !8247)
!8296 = !DILocation(line: 351, column: 1, scope: !8247)
!8297 = !DILocation(line: 350, column: 5, scope: !8247)
!8298 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !1117, file: !1117, line: 367, type: !8299, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8301)
!8299 = !DISubroutineType(types: !8300)
!8300 = !{null, !61, !88, !1092}
!8301 = !{!8302, !8303, !8304, !8305, !8306, !8307}
!8302 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !8298, file: !1117, line: 367, type: !61)
!8303 = !DILocalVariable(name: "buff", arg: 2, scope: !8298, file: !1117, line: 367, type: !88)
!8304 = !DILocalVariable(name: "length", arg: 3, scope: !8298, file: !1117, line: 367, type: !1092)
!8305 = !DILocalVariable(name: "i", scope: !8298, file: !1117, line: 369, type: !61)
!8306 = !DILocalVariable(name: "p_data", scope: !8298, file: !1117, line: 370, type: !762)
!8307 = !DILocalVariable(name: "tmp", scope: !8298, file: !1117, line: 371, type: !8257)
!8308 = !DILocation(line: 0, scope: !8298)
!8309 = !DILocation(line: 371, column: 5, scope: !8298)
!8310 = !DILocation(line: 371, column: 13, scope: !8298)
!8311 = !DILocation(line: 373, column: 18, scope: !8298)
!8312 = !DILocation(line: 376, column: 15, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8298, file: !1117, line: 376, column: 9)
!8314 = !DILocation(line: 376, column: 30, scope: !8313)
!8315 = !DILocation(line: 376, column: 11, scope: !8313)
!8316 = !DILocation(line: 376, column: 9, scope: !8298)
!8317 = !DILocation(line: 377, column: 23, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8319, file: !1117, line: 377, column: 9)
!8319 = distinct !DILexicalBlock(scope: !8320, file: !1117, line: 377, column: 9)
!8320 = distinct !DILexicalBlock(scope: !8313, file: !1117, line: 376, column: 41)
!8321 = !DILocation(line: 377, column: 9, scope: !8319)
!8322 = !DILocation(line: 378, column: 13, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8318, file: !1117, line: 377, column: 80)
!8324 = !DILocation(line: 377, column: 41, scope: !8318)
!8325 = !DILocation(line: 377, column: 54, scope: !8318)
!8326 = !DILocation(line: 377, column: 67, scope: !8318)
!8327 = distinct !{!8327, !8321, !8328}
!8328 = !DILocation(line: 379, column: 9, scope: !8319)
!8329 = !DILocation(line: 382, column: 37, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8313, file: !1117, line: 382, column: 14)
!8331 = !DILocation(line: 382, column: 16, scope: !8330)
!8332 = !DILocation(line: 0, scope: !8330)
!8333 = !DILocation(line: 382, column: 14, scope: !8313)
!8334 = !DILocation(line: 391, column: 9, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8336, file: !1117, line: 391, column: 9)
!8336 = distinct !DILexicalBlock(scope: !8330, file: !1117, line: 390, column: 13)
!8337 = !DILocation(line: 383, column: 9, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8339, file: !1117, line: 383, column: 9)
!8339 = distinct !DILexicalBlock(scope: !8330, file: !1117, line: 382, column: 49)
!8340 = !DILocation(line: 384, column: 26, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8342, file: !1117, line: 383, column: 80)
!8342 = distinct !DILexicalBlock(scope: !8338, file: !1117, line: 383, column: 9)
!8343 = !DILocation(line: 384, column: 24, scope: !8341)
!8344 = !DILocation(line: 385, column: 47, scope: !8341)
!8345 = !DILocation(line: 385, column: 26, scope: !8341)
!8346 = !DILocation(line: 385, column: 24, scope: !8341)
!8347 = !DILocation(line: 386, column: 13, scope: !8341)
!8348 = !DILocation(line: 383, column: 41, scope: !8342)
!8349 = !DILocation(line: 383, column: 54, scope: !8342)
!8350 = !DILocation(line: 383, column: 67, scope: !8342)
!8351 = !DILocation(line: 383, column: 23, scope: !8342)
!8352 = distinct !{!8352, !8337, !8353}
!8353 = !DILocation(line: 387, column: 9, scope: !8338)
!8354 = !DILocation(line: 392, column: 13, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8356, file: !1117, line: 392, column: 13)
!8356 = distinct !DILexicalBlock(scope: !8357, file: !1117, line: 391, column: 61)
!8357 = distinct !DILexicalBlock(scope: !8335, file: !1117, line: 391, column: 9)
!8358 = !DILocation(line: 393, column: 36, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8360, file: !1117, line: 392, column: 51)
!8360 = distinct !DILexicalBlock(scope: !8355, file: !1117, line: 392, column: 13)
!8361 = !DILocation(line: 393, column: 29, scope: !8359)
!8362 = !DILocation(line: 393, column: 17, scope: !8359)
!8363 = !DILocation(line: 393, column: 27, scope: !8359)
!8364 = !DILocation(line: 392, column: 47, scope: !8360)
!8365 = !DILocation(line: 392, column: 27, scope: !8360)
!8366 = !DILocation(line: 392, column: 31, scope: !8360)
!8367 = distinct !{!8367, !8354, !8368}
!8368 = !DILocation(line: 394, column: 13, scope: !8355)
!8369 = !DILocation(line: 395, column: 13, scope: !8356)
!8370 = !DILocation(line: 391, column: 41, scope: !8357)
!8371 = !DILocation(line: 391, column: 54, scope: !8357)
!8372 = !DILocation(line: 391, column: 23, scope: !8357)
!8373 = distinct !{!8373, !8334, !8374}
!8374 = !DILocation(line: 396, column: 9, scope: !8335)
!8375 = !DILocation(line: 398, column: 1, scope: !8298)
!8376 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !1117, file: !1117, line: 414, type: !8377, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8379)
!8377 = !DISubroutineType(types: !8378)
!8378 = !{null, !974, !5061, !762, !974, !974}
!8379 = !{!8380, !8381, !8382, !8383, !8384, !8385, !8386, !8387, !8388, !8389}
!8380 = !DILocalVariable(name: "CS", arg: 1, scope: !8376, file: !1117, line: 414, type: !974)
!8381 = !DILocalVariable(name: "cmd", arg: 2, scope: !8376, file: !1117, line: 414, type: !5061)
!8382 = !DILocalVariable(name: "data", arg: 3, scope: !8376, file: !1117, line: 414, type: !762)
!8383 = !DILocalVariable(name: "outl", arg: 4, scope: !8376, file: !1117, line: 414, type: !974)
!8384 = !DILocalVariable(name: "inl", arg: 5, scope: !8376, file: !1117, line: 414, type: !974)
!8385 = !DILocalVariable(name: "tmp", scope: !8376, file: !1117, line: 416, type: !61)
!8386 = !DILocalVariable(name: "i", scope: !8376, file: !1117, line: 417, type: !61)
!8387 = !DILocalVariable(name: "j", scope: !8376, file: !1117, line: 417, type: !61)
!8388 = !DILocalVariable(name: "p_data", scope: !8376, file: !1117, line: 418, type: !762)
!8389 = !DILocalVariable(name: "p_tmp", scope: !8376, file: !1117, line: 418, type: !762)
!8390 = !DILocation(line: 0, scope: !8376)
!8391 = !DILocation(line: 416, column: 5, scope: !8376)
!8392 = !DILocation(line: 422, column: 60, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8394, file: !1117, line: 422, column: 5)
!8394 = distinct !DILexicalBlock(scope: !8376, file: !1117, line: 422, column: 5)
!8395 = !DILocation(line: 422, column: 5, scope: !8394)
!8396 = !DILocation(line: 423, column: 25, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8398, file: !1117, line: 423, column: 9)
!8398 = distinct !DILexicalBlock(scope: !8393, file: !1117, line: 422, column: 83)
!8399 = !DILocation(line: 423, column: 32, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8397, file: !1117, line: 423, column: 9)
!8401 = !DILocation(line: 423, column: 9, scope: !8397)
!8402 = !DILocation(line: 424, column: 24, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8400, file: !1117, line: 423, column: 59)
!8404 = !DILocation(line: 424, column: 13, scope: !8403)
!8405 = !DILocation(line: 424, column: 22, scope: !8403)
!8406 = !DILocation(line: 423, column: 50, scope: !8400)
!8407 = !DILocation(line: 423, column: 55, scope: !8400)
!8408 = !DILocation(line: 423, column: 39, scope: !8400)
!8409 = distinct !{!8409, !8401, !8410}
!8410 = !DILocation(line: 425, column: 9, scope: !8397)
!8411 = !DILocation(line: 426, column: 9, scope: !8398)
!8412 = !DILocation(line: 0, scope: !8394)
!8413 = !DILocation(line: 422, column: 75, scope: !8393)
!8414 = distinct !{!8414, !8395, !8415}
!8415 = !DILocation(line: 427, column: 5, scope: !8394)
!8416 = !DILocation(line: 428, column: 25, scope: !8376)
!8417 = !DILocation(line: 429, column: 26, scope: !8376)
!8418 = !DILocation(line: 429, column: 24, scope: !8376)
!8419 = !DILocation(line: 430, column: 5, scope: !8376)
!8420 = !DILocation(line: 431, column: 5, scope: !8376)
!8421 = !DILocation(line: 433, column: 67, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8423, file: !1117, line: 433, column: 5)
!8423 = distinct !DILexicalBlock(scope: !8376, file: !1117, line: 433, column: 5)
!8424 = !DILocation(line: 433, column: 5, scope: !8423)
!8425 = !DILocation(line: 433, column: 56, scope: !8423)
!8426 = !DILocation(line: 434, column: 17, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8422, file: !1117, line: 433, column: 100)
!8428 = !DILocation(line: 434, column: 15, scope: !8427)
!8429 = !DILocation(line: 433, column: 74, scope: !8422)
!8430 = !DILocation(line: 433, column: 79, scope: !8422)
!8431 = !DILocation(line: 433, column: 87, scope: !8422)
!8432 = distinct !{!8432, !8424, !8433}
!8433 = !DILocation(line: 435, column: 5, scope: !8423)
!8434 = !DILocation(line: 437, column: 1, scope: !8376)
!8435 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !1117, file: !1117, line: 462, type: !8436, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8438)
!8436 = !DISubroutineType(types: !8437)
!8437 = !{null, !974, !5061}
!8438 = !{!8439, !8440, !8441, !8442, !8443}
!8439 = !DILocalVariable(name: "CS", arg: 1, scope: !8435, file: !1117, line: 462, type: !974)
!8440 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !8435, file: !1117, line: 462, type: !5061)
!8441 = !DILocalVariable(name: "i", scope: !8435, file: !1117, line: 464, type: !61)
!8442 = !DILocalVariable(name: "val", scope: !8435, file: !1117, line: 465, type: !61)
!8443 = !DILocalVariable(name: "status", scope: !8444, file: !1117, line: 492, type: !460)
!8444 = distinct !DILexicalBlock(scope: !8445, file: !1117, line: 491, column: 47)
!8445 = distinct !DILexicalBlock(scope: !8446, file: !1117, line: 491, column: 13)
!8446 = distinct !DILexicalBlock(scope: !8435, file: !1117, line: 477, column: 17)
!8447 = !DILocation(line: 0, scope: !8435)
!8448 = !DILocation(line: 467, column: 17, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8435, file: !1117, line: 467, column: 9)
!8450 = !DILocation(line: 467, column: 9, scope: !8435)
!8451 = !DILocation(line: 474, column: 11, scope: !8435)
!8452 = !DILocation(line: 477, column: 5, scope: !8435)
!8453 = !DILocation(line: 478, column: 17, scope: !8446)
!8454 = !DILocation(line: 478, column: 9, scope: !8446)
!8455 = !DILocation(line: 481, column: 17, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8457, file: !1117, line: 481, column: 17)
!8457 = distinct !DILexicalBlock(scope: !8446, file: !1117, line: 478, column: 29)
!8458 = !DILocation(line: 481, column: 17, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8460, file: !1117, line: 481, column: 17)
!8460 = distinct !DILexicalBlock(scope: !8461, file: !1117, line: 481, column: 17)
!8461 = distinct !DILexicalBlock(scope: !8456, file: !1117, line: 481, column: 17)
!8462 = !DILocation(line: 481, column: 17, scope: !8460)
!8463 = !DILocation(line: 481, column: 17, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8465, file: !1117, line: 481, column: 17)
!8465 = distinct !DILexicalBlock(scope: !8461, file: !1117, line: 481, column: 17)
!8466 = !DILocation(line: 484, column: 17, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8457, file: !1117, line: 484, column: 17)
!8468 = !DILocation(line: 484, column: 17, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8470, file: !1117, line: 484, column: 17)
!8470 = distinct !DILexicalBlock(scope: !8471, file: !1117, line: 484, column: 17)
!8471 = distinct !DILexicalBlock(scope: !8467, file: !1117, line: 484, column: 17)
!8472 = !DILocation(line: 484, column: 17, scope: !8470)
!8473 = !DILocation(line: 484, column: 17, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8475, file: !1117, line: 484, column: 17)
!8475 = distinct !DILexicalBlock(scope: !8471, file: !1117, line: 484, column: 17)
!8476 = !DILocation(line: 0, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8478, file: !1117, line: 487, column: 17)
!8478 = distinct !DILexicalBlock(scope: !8457, file: !1117, line: 487, column: 17)
!8479 = !DILocation(line: 487, column: 17, scope: !8478)
!8480 = !DILocation(line: 487, column: 17, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8482, file: !1117, line: 487, column: 17)
!8482 = distinct !DILexicalBlock(scope: !8477, file: !1117, line: 487, column: 17)
!8483 = !DILocation(line: 487, column: 17, scope: !8482)
!8484 = !DILocation(line: 487, column: 17, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8486, file: !1117, line: 487, column: 17)
!8486 = distinct !DILexicalBlock(scope: !8477, file: !1117, line: 487, column: 17)
!8487 = !DILocation(line: 487, column: 17, scope: !8486)
!8488 = !DILocation(line: 491, column: 23, scope: !8445)
!8489 = !DILocation(line: 491, column: 13, scope: !8445)
!8490 = !DILocation(line: 491, column: 28, scope: !8445)
!8491 = !DILocation(line: 491, column: 13, scope: !8446)
!8492 = !DILocation(line: 492, column: 13, scope: !8444)
!8493 = !DILocation(line: 494, column: 13, scope: !8444)
!8494 = !DILocation(line: 0, scope: !8444)
!8495 = !DILocation(line: 495, column: 17, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8444, file: !1117, line: 494, column: 16)
!8497 = !DILocation(line: 496, column: 22, scope: !8444)
!8498 = !DILocation(line: 496, column: 31, scope: !8444)
!8499 = !DILocation(line: 496, column: 29, scope: !8444)
!8500 = !DILocation(line: 496, column: 13, scope: !8496)
!8501 = distinct !{!8501, !8493, !8502}
!8502 = !DILocation(line: 496, column: 45, scope: !8444)
!8503 = !DILocation(line: 497, column: 9, scope: !8445)
!8504 = !DILocation(line: 503, column: 25, scope: !8446)
!8505 = !DILocation(line: 497, column: 9, scope: !8444)
!8506 = !DILocation(line: 500, column: 70, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8445, file: !1117, line: 499, column: 14)
!8508 = !DILocation(line: 500, column: 60, scope: !8507)
!8509 = !DILocation(line: 500, column: 13, scope: !8507)
!8510 = !DILocation(line: 503, column: 15, scope: !8446)
!8511 = !DILocation(line: 503, column: 11, scope: !8446)
!8512 = distinct !{!8512, !8452, !8513}
!8513 = !DILocation(line: 504, column: 5, scope: !8435)
!8514 = !DILocation(line: 505, column: 1, scope: !8435)
!8515 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !1117, file: !1117, line: 514, type: !8516, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8518)
!8516 = !DISubroutineType(types: !8517)
!8517 = !{null, !974, !762, !460}
!8518 = !{!8519, !8520, !8521}
!8519 = !DILocalVariable(name: "CS", arg: 1, scope: !8515, file: !1117, line: 514, type: !974)
!8520 = !DILocalVariable(name: "id", arg: 2, scope: !8515, file: !1117, line: 514, type: !762)
!8521 = !DILocalVariable(name: "cmd", arg: 3, scope: !8515, file: !1117, line: 514, type: !460)
!8522 = !DILocation(line: 0, scope: !8515)
!8523 = !DILocation(line: 517, column: 5, scope: !8515)
!8524 = !DILocation(line: 518, column: 1, scope: !8515)
!8525 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !1117, file: !1117, line: 521, type: !8526, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8528)
!8526 = !DISubroutineType(types: !8527)
!8527 = !{null, !974, !762}
!8528 = !{!8529, !8530}
!8529 = !DILocalVariable(name: "CS", arg: 1, scope: !8525, file: !1117, line: 521, type: !974)
!8530 = !DILocalVariable(name: "id", arg: 2, scope: !8525, file: !1117, line: 521, type: !762)
!8531 = !DILocation(line: 0, scope: !8525)
!8532 = !DILocation(line: 523, column: 5, scope: !8525)
!8533 = !DILocation(line: 524, column: 1, scope: !8525)
!8534 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !1117, file: !1117, line: 536, type: !8535, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !293)
!8535 = !DISubroutineType(types: !8536)
!8536 = !{!8537}
!8537 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !1120, line: 57, baseType: !1119)
!8538 = !DILocation(line: 540, column: 5, scope: !8534)
!8539 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !1117, file: !1117, line: 561, type: !8540, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !293)
!8540 = !DISubroutineType(types: !8541)
!8541 = !{!8542}
!8542 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !1120, line: 66, baseType: !1127)
!8543 = !DILocation(line: 564, column: 15, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8539, file: !1117, line: 564, column: 9)
!8545 = !DILocation(line: 564, column: 31, scope: !8544)
!8546 = !DILocation(line: 564, column: 45, scope: !8544)
!8547 = !DILocation(line: 0, scope: !8544)
!8548 = !DILocation(line: 569, column: 1, scope: !8539)
!8549 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !1117, file: !1117, line: 580, type: !8550, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8552)
!8550 = !DISubroutineType(types: !8551)
!8551 = !{!91, !762}
!8552 = !{!8553, !8554}
!8553 = !DILocalVariable(name: "buffer", arg: 1, scope: !8549, file: !1117, line: 580, type: !762)
!8554 = !DILocalVariable(name: "i", scope: !8549, file: !1117, line: 582, type: !7)
!8555 = !DILocation(line: 0, scope: !8549)
!8556 = !DILocation(line: 583, column: 5, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8549, file: !1117, line: 583, column: 5)
!8558 = !DILocation(line: 584, column: 9, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8560, file: !1117, line: 583, column: 29)
!8560 = distinct !DILexicalBlock(scope: !8557, file: !1117, line: 583, column: 5)
!8561 = !DILocation(line: 584, column: 19, scope: !8559)
!8562 = !DILocation(line: 583, column: 25, scope: !8560)
!8563 = !DILocation(line: 583, column: 19, scope: !8560)
!8564 = distinct !{!8564, !8556, !8565}
!8565 = !DILocation(line: 585, column: 5, scope: !8557)
!8566 = !DILocation(line: 586, column: 5, scope: !8549)
!8567 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !1117, file: !1117, line: 613, type: !291, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !8568)
!8568 = !{!8569}
!8569 = !DILocalVariable(name: "D", scope: !8567, file: !1117, line: 615, type: !7944)
!8570 = !DILocation(line: 0, scope: !8567)
!8571 = !DILocation(line: 616, column: 32, scope: !8567)
!8572 = !DILocation(line: 616, column: 37, scope: !8567)
!8573 = !DILocation(line: 616, column: 27, scope: !8567)
!8574 = !DILocation(line: 617, column: 44, scope: !8567)
!8575 = !DILocation(line: 617, column: 31, scope: !8567)
!8576 = !DILocation(line: 617, column: 28, scope: !8567)
!8577 = !DILocation(line: 618, column: 32, scope: !8567)
!8578 = !DILocation(line: 618, column: 31, scope: !8567)
!8579 = !DILocation(line: 618, column: 29, scope: !8567)
!8580 = !DILocation(line: 621, column: 31, scope: !8567)
!8581 = !DILocation(line: 621, column: 24, scope: !8567)
!8582 = !DILocation(line: 622, column: 34, scope: !8567)
!8583 = !DILocation(line: 622, column: 27, scope: !8567)
!8584 = !DILocation(line: 623, column: 32, scope: !8567)
!8585 = !DILocation(line: 623, column: 25, scope: !8567)
!8586 = !DILocation(line: 624, column: 33, scope: !8567)
!8587 = !DILocation(line: 624, column: 26, scope: !8567)
!8588 = !DILocation(line: 625, column: 33, scope: !8567)
!8589 = !DILocation(line: 625, column: 26, scope: !8567)
!8590 = !DILocation(line: 629, column: 32, scope: !8567)
!8591 = !DILocation(line: 629, column: 47, scope: !8567)
!8592 = !DILocation(line: 629, column: 25, scope: !8567)
!8593 = !DILocation(line: 630, column: 32, scope: !8567)
!8594 = !DILocation(line: 630, column: 47, scope: !8567)
!8595 = !DILocation(line: 630, column: 25, scope: !8567)
!8596 = !DILocation(line: 633, column: 24, scope: !8567)
!8597 = !DILocation(line: 633, column: 31, scope: !8567)
!8598 = !DILocation(line: 633, column: 36, scope: !8567)
!8599 = !DILocation(line: 633, column: 28, scope: !8567)
!8600 = !DILocation(line: 633, column: 5, scope: !8567)
!8601 = !DILocation(line: 635, column: 5, scope: !8567)
!8602 = !DILocation(line: 636, column: 1, scope: !8567)
!8603 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !1117, file: !1117, line: 641, type: !291, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !293)
!8604 = !DILocation(line: 644, column: 26, scope: !8603)
!8605 = !DILocation(line: 644, column: 24, scope: !8603)
!8606 = !DILocation(line: 645, column: 29, scope: !8603)
!8607 = !DILocation(line: 645, column: 27, scope: !8603)
!8608 = !DILocation(line: 646, column: 27, scope: !8603)
!8609 = !DILocation(line: 646, column: 25, scope: !8603)
!8610 = !DILocation(line: 647, column: 28, scope: !8603)
!8611 = !DILocation(line: 647, column: 26, scope: !8603)
!8612 = !DILocation(line: 648, column: 27, scope: !8603)
!8613 = !DILocation(line: 648, column: 25, scope: !8603)
!8614 = !DILocation(line: 652, column: 32, scope: !8603)
!8615 = !DILocation(line: 652, column: 47, scope: !8603)
!8616 = !DILocation(line: 652, column: 25, scope: !8603)
!8617 = !DILocation(line: 655, column: 24, scope: !8603)
!8618 = !DILocation(line: 655, column: 5, scope: !8603)
!8619 = !DILocation(line: 657, column: 5, scope: !8603)
!8620 = !DILocation(line: 660, column: 9, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8603, file: !1117, line: 660, column: 9)
!8622 = !DILocation(line: 660, column: 59, scope: !8621)
!8623 = !DILocation(line: 660, column: 38, scope: !8621)
!8624 = !DILocation(line: 660, column: 37, scope: !8621)
!8625 = !DILocation(line: 660, column: 33, scope: !8621)
!8626 = !DILocation(line: 660, column: 9, scope: !8603)
!8627 = !DILocation(line: 661, column: 9, scope: !8621)
!8628 = distinct !{!8628, !8627, !8629}
!8629 = !DILocation(line: 661, column: 18, scope: !8621)
!8630 = !DILocation(line: 662, column: 1, scope: !8603)
!8631 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !1117, file: !1117, line: 668, type: !291, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !293)
!8632 = !DILocation(line: 671, column: 9, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8631, file: !1117, line: 671, column: 9)
!8634 = !DILocation(line: 671, column: 40, scope: !8633)
!8635 = !DILocation(line: 671, column: 9, scope: !8631)
!8636 = !DILocation(line: 672, column: 47, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8633, file: !1117, line: 671, column: 46)
!8638 = !DILocation(line: 672, column: 40, scope: !8637)
!8639 = !DILocation(line: 673, column: 5, scope: !8637)
!8640 = !DILocation(line: 674, column: 9, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8631, file: !1117, line: 674, column: 9)
!8642 = !DILocation(line: 674, column: 41, scope: !8641)
!8643 = !DILocation(line: 674, column: 9, scope: !8631)
!8644 = !DILocation(line: 675, column: 48, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8641, file: !1117, line: 674, column: 47)
!8646 = !DILocation(line: 675, column: 41, scope: !8645)
!8647 = !DILocation(line: 676, column: 5, scope: !8645)
!8648 = !DILocation(line: 679, column: 33, scope: !8631)
!8649 = !DILocation(line: 679, column: 48, scope: !8631)
!8650 = !DILocation(line: 679, column: 25, scope: !8631)
!8651 = !DILocation(line: 680, column: 25, scope: !8631)
!8652 = !DILocation(line: 686, column: 5, scope: !8631)
!8653 = !DILocation(line: 688, column: 1, scope: !8631)
!8654 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !1117, file: !1117, line: 689, type: !291, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1116, retainedNodes: !293)
!8655 = !DILocation(line: 692, column: 9, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8654, file: !1117, line: 692, column: 9)
!8657 = !DILocation(line: 692, column: 40, scope: !8656)
!8658 = !DILocation(line: 692, column: 9, scope: !8654)
!8659 = !DILocation(line: 693, column: 29, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8656, file: !1117, line: 692, column: 46)
!8661 = !DILocation(line: 694, column: 5, scope: !8660)
!8662 = !DILocation(line: 695, column: 9, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8654, file: !1117, line: 695, column: 9)
!8664 = !DILocation(line: 695, column: 41, scope: !8663)
!8665 = !DILocation(line: 695, column: 9, scope: !8654)
!8666 = !DILocation(line: 696, column: 29, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8663, file: !1117, line: 695, column: 47)
!8668 = !DILocation(line: 697, column: 5, scope: !8667)
!8669 = !DILocation(line: 698, column: 5, scope: !8654)
!8670 = !DILocation(line: 699, column: 1, scope: !8654)
!8671 = distinct !DISubprogram(name: "ust_get_current_time", scope: !1212, file: !1212, line: 91, type: !3931, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8672)
!8672 = !{!8673}
!8673 = !DILocalVariable(name: "counter", scope: !8671, file: !1212, line: 102, type: !61)
!8674 = !DILocation(line: 0, scope: !8671)
!8675 = !DILocation(line: 110, column: 5, scope: !8671)
!8676 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !1212, file: !1212, line: 114, type: !3931, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8677)
!8677 = !{!8678}
!8678 = !DILocalVariable(name: "counter", scope: !8676, file: !1212, line: 125, type: !61)
!8679 = !DILocation(line: 0, scope: !8676)
!8680 = !DILocation(line: 133, column: 5, scope: !8676)
!8681 = distinct !DISubprogram(name: "ust_busy_wait", scope: !1212, file: !1212, line: 137, type: !7807, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8682)
!8682 = !{!8683}
!8683 = !DILocalVariable(name: "delay_us", arg: 1, scope: !8681, file: !1212, line: 137, type: !61)
!8684 = !DILocation(line: 0, scope: !8681)
!8685 = !DILocation(line: 142, column: 5, scope: !8681)
!8686 = !DILocation(line: 144, column: 1, scope: !8681)
!8687 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !1212, file: !1212, line: 163, type: !3931, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8688)
!8688 = !{!8689}
!8689 = !DILocalVariable(name: "mask", scope: !8687, file: !1212, line: 165, type: !61)
!8690 = !DILocation(line: 166, column: 12, scope: !8687)
!8691 = !DILocation(line: 0, scope: !8687)
!8692 = !DILocation(line: 167, column: 5, scope: !8687)
!8693 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !1212, file: !1212, line: 171, type: !7807, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8694)
!8694 = !{!8695}
!8695 = !DILocalVariable(name: "mask", arg: 1, scope: !8693, file: !1212, line: 171, type: !61)
!8696 = !DILocation(line: 0, scope: !8693)
!8697 = !DILocation(line: 173, column: 5, scope: !8693)
!8698 = !DILocation(line: 174, column: 1, scope: !8693)
!8699 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !1212, file: !1212, line: 199, type: !1484, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8700)
!8700 = !{!8701}
!8701 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8699, file: !1212, line: 199, type: !88)
!8702 = !DILocation(line: 0, scope: !8699)
!8703 = !DILocation(line: 201, column: 5, scope: !8699)
!8704 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !1212, file: !1212, line: 388, type: !8705, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !293)
!8705 = !DISubroutineType(types: !8706)
!8706 = !{!1092}
!8707 = !DILocation(line: 390, column: 5, scope: !8704)
!8708 = distinct !DISubprogram(name: "CompareData", scope: !1212, file: !1212, line: 872, type: !8709, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8711)
!8709 = !DISubroutineType(types: !8710)
!8710 = !{!91, !88, !88, !61}
!8711 = !{!8712, !8713, !8714, !8715, !8716, !8719, !8720, !8723, !8724, !8726}
!8712 = !DILocalVariable(name: "Address", arg: 1, scope: !8708, file: !1212, line: 872, type: !88)
!8713 = !DILocalVariable(name: "Data", arg: 2, scope: !8708, file: !1212, line: 872, type: !88)
!8714 = !DILocalVariable(name: "Length", arg: 3, scope: !8708, file: !1212, line: 872, type: !61)
!8715 = !DILocalVariable(name: "i", scope: !8708, file: !1212, line: 874, type: !61)
!8716 = !DILocalVariable(name: "Source", scope: !8717, file: !1212, line: 877, type: !1154)
!8717 = distinct !DILexicalBlock(scope: !8718, file: !1212, line: 876, column: 74)
!8718 = distinct !DILexicalBlock(scope: !8708, file: !1212, line: 876, column: 9)
!8719 = !DILocalVariable(name: "Dest", scope: !8717, file: !1212, line: 878, type: !1154)
!8720 = !DILocalVariable(name: "Source", scope: !8721, file: !1212, line: 885, type: !1185)
!8721 = distinct !DILexicalBlock(scope: !8722, file: !1212, line: 884, column: 79)
!8722 = distinct !DILexicalBlock(scope: !8718, file: !1212, line: 884, column: 16)
!8723 = !DILocalVariable(name: "Dest", scope: !8721, file: !1212, line: 886, type: !1185)
!8724 = !DILocalVariable(name: "Source", scope: !8725, file: !1212, line: 893, type: !762)
!8725 = distinct !DILexicalBlock(scope: !8722, file: !1212, line: 892, column: 12)
!8726 = !DILocalVariable(name: "Dest", scope: !8725, file: !1212, line: 894, type: !762)
!8727 = !DILocation(line: 0, scope: !8708)
!8728 = !DILocation(line: 876, column: 11, scope: !8718)
!8729 = !DILocation(line: 876, column: 42, scope: !8718)
!8730 = !DILocation(line: 877, column: 28, scope: !8717)
!8731 = !DILocation(line: 0, scope: !8717)
!8732 = !DILocation(line: 878, column: 26, scope: !8717)
!8733 = !DILocation(line: 879, column: 23, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8735, file: !1212, line: 879, column: 9)
!8735 = distinct !DILexicalBlock(scope: !8717, file: !1212, line: 879, column: 9)
!8736 = !DILocation(line: 879, column: 9, scope: !8735)
!8737 = !DILocation(line: 880, column: 17, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8739, file: !1212, line: 880, column: 17)
!8739 = distinct !DILexicalBlock(scope: !8734, file: !1212, line: 879, column: 68)
!8740 = !DILocation(line: 880, column: 30, scope: !8738)
!8741 = !DILocation(line: 880, column: 27, scope: !8738)
!8742 = !DILocation(line: 879, column: 64, scope: !8734)
!8743 = !DILocation(line: 880, column: 17, scope: !8739)
!8744 = distinct !{!8744, !8736, !8745}
!8745 = !DILocation(line: 883, column: 9, scope: !8735)
!8746 = !DILocation(line: 884, column: 47, scope: !8722)
!8747 = !DILocation(line: 895, column: 23, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8749, file: !1212, line: 895, column: 9)
!8749 = distinct !DILexicalBlock(scope: !8725, file: !1212, line: 895, column: 9)
!8750 = !DILocation(line: 895, column: 9, scope: !8749)
!8751 = !DILocation(line: 885, column: 28, scope: !8721)
!8752 = !DILocation(line: 0, scope: !8721)
!8753 = !DILocation(line: 886, column: 26, scope: !8721)
!8754 = !DILocation(line: 887, column: 23, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8756, file: !1212, line: 887, column: 9)
!8756 = distinct !DILexicalBlock(scope: !8721, file: !1212, line: 887, column: 9)
!8757 = !DILocation(line: 887, column: 9, scope: !8756)
!8758 = !DILocation(line: 888, column: 17, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8760, file: !1212, line: 888, column: 17)
!8760 = distinct !DILexicalBlock(scope: !8755, file: !1212, line: 887, column: 68)
!8761 = !DILocation(line: 888, column: 30, scope: !8759)
!8762 = !DILocation(line: 888, column: 27, scope: !8759)
!8763 = !DILocation(line: 887, column: 64, scope: !8755)
!8764 = !DILocation(line: 888, column: 17, scope: !8760)
!8765 = distinct !{!8765, !8757, !8766}
!8766 = !DILocation(line: 891, column: 9, scope: !8756)
!8767 = !DILocation(line: 896, column: 17, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8769, file: !1212, line: 896, column: 17)
!8769 = distinct !DILexicalBlock(scope: !8748, file: !1212, line: 895, column: 38)
!8770 = !DILocation(line: 896, column: 30, scope: !8768)
!8771 = !DILocation(line: 896, column: 27, scope: !8768)
!8772 = !DILocation(line: 895, column: 34, scope: !8748)
!8773 = !DILocation(line: 896, column: 17, scope: !8769)
!8774 = distinct !{!8774, !8750, !8775}
!8775 = !DILocation(line: 899, column: 9, scope: !8749)
!8776 = !DILocation(line: 902, column: 1, scope: !8708)
!8777 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !1212, file: !1212, line: 919, type: !8778, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8780)
!8778 = !DISubroutineType(types: !8779)
!8779 = !{null, !88, !88, !61}
!8780 = !{!8781, !8782, !8783, !8784, !8785, !8786, !8787, !8788, !8789, !8790, !8791}
!8781 = !DILocalVariable(name: "Target", arg: 1, scope: !8777, file: !1212, line: 919, type: !88)
!8782 = !DILocalVariable(name: "Data", arg: 2, scope: !8777, file: !1212, line: 919, type: !88)
!8783 = !DILocalVariable(name: "Size", arg: 3, scope: !8777, file: !1212, line: 919, type: !61)
!8784 = !DILocalVariable(name: "D", scope: !8777, file: !1212, line: 921, type: !1382)
!8785 = !DILocalVariable(name: "address", scope: !8777, file: !1212, line: 922, type: !61)
!8786 = !DILocalVariable(name: "p_data", scope: !8777, file: !1212, line: 923, type: !762)
!8787 = !DILocalVariable(name: "cmd1", scope: !8777, file: !1212, line: 924, type: !61)
!8788 = !DILocalVariable(name: "length", scope: !8777, file: !1212, line: 924, type: !61)
!8789 = !DILocalVariable(name: "written", scope: !8777, file: !1212, line: 924, type: !61)
!8790 = !DILocalVariable(name: "status", scope: !8777, file: !1212, line: 925, type: !1434)
!8791 = !DILocalVariable(name: "savedMask", scope: !8777, file: !1212, line: 926, type: !61)
!8792 = !DILocation(line: 0, scope: !8777)
!8793 = !DILocation(line: 921, column: 60, scope: !8777)
!8794 = !DILocation(line: 923, column: 5, scope: !8777)
!8795 = !DILocation(line: 923, column: 19, scope: !8777)
!8796 = !DILocation(line: 924, column: 5, scope: !8777)
!8797 = !DILocation(line: 932, column: 9, scope: !8777)
!8798 = !DILocation(line: 933, column: 8, scope: !8777)
!8799 = !DILocation(line: 933, column: 21, scope: !8777)
!8800 = !DILocation(line: 935, column: 14, scope: !8777)
!8801 = !DILocation(line: 935, column: 5, scope: !8777)
!8802 = !DILocation(line: 922, column: 29, scope: !8777)
!8803 = !DILocation(line: 937, column: 18, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8777, file: !1212, line: 935, column: 23)
!8805 = !DILocation(line: 937, column: 35, scope: !8804)
!8806 = !DILocation(line: 937, column: 74, scope: !8804)
!8807 = !DILocation(line: 937, column: 50, scope: !8804)
!8808 = !DILocation(line: 937, column: 39, scope: !8804)
!8809 = !DILocation(line: 940, column: 35, scope: !8804)
!8810 = !DILocation(line: 940, column: 29, scope: !8804)
!8811 = !DILocation(line: 940, column: 16, scope: !8804)
!8812 = !DILocation(line: 942, column: 18, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8804, file: !1212, line: 942, column: 13)
!8814 = !DILocation(line: 942, column: 29, scope: !8813)
!8815 = !DILocation(line: 942, column: 13, scope: !8804)
!8816 = !DILocation(line: 943, column: 13, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8813, file: !1212, line: 942, column: 55)
!8818 = !DILocation(line: 944, column: 9, scope: !8817)
!8819 = !DILocation(line: 947, column: 16, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8804, file: !1212, line: 947, column: 13)
!8821 = !DILocation(line: 947, column: 29, scope: !8820)
!8822 = !DILocation(line: 0, scope: !8820)
!8823 = !DILocation(line: 947, column: 13, scope: !8804)
!8824 = !DILocation(line: 948, column: 20, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8820, file: !1212, line: 947, column: 35)
!8826 = !DILocation(line: 949, column: 32, scope: !8825)
!8827 = !DILocation(line: 949, column: 40, scope: !8825)
!8828 = !DILocation(line: 949, column: 13, scope: !8825)
!8829 = !DILocation(line: 950, column: 9, scope: !8825)
!8830 = !DILocation(line: 953, column: 20, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8820, file: !1212, line: 952, column: 9)
!8832 = !DILocation(line: 954, column: 32, scope: !8831)
!8833 = !DILocation(line: 954, column: 40, scope: !8831)
!8834 = !DILocation(line: 954, column: 13, scope: !8831)
!8835 = !DILocation(line: 957, column: 21, scope: !8804)
!8836 = !DILocation(line: 963, column: 45, scope: !8804)
!8837 = !DILocation(line: 963, column: 42, scope: !8804)
!8838 = !DILocation(line: 963, column: 40, scope: !8804)
!8839 = !DILocation(line: 963, column: 58, scope: !8804)
!8840 = !DILocation(line: 963, column: 29, scope: !8804)
!8841 = !DILocation(line: 964, column: 28, scope: !8804)
!8842 = !DILocation(line: 965, column: 37, scope: !8804)
!8843 = !DILocation(line: 966, column: 9, scope: !8804)
!8844 = !DILocation(line: 967, column: 26, scope: !8804)
!8845 = !DILocation(line: 967, column: 9, scope: !8804)
!8846 = !DILocation(line: 968, column: 29, scope: !8804)
!8847 = !DILocation(line: 968, column: 9, scope: !8804)
!8848 = !DILocation(line: 972, column: 9, scope: !8804)
!8849 = !DILocation(line: 978, column: 9, scope: !8804)
!8850 = !DILocation(line: 979, column: 50, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8804, file: !1212, line: 978, column: 22)
!8852 = !DILocation(line: 979, column: 55, scope: !8851)
!8853 = !DILocation(line: 979, column: 22, scope: !8851)
!8854 = !DILocation(line: 980, column: 35, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8851, file: !1212, line: 980, column: 17)
!8856 = !DILocation(line: 980, column: 32, scope: !8855)
!8857 = !DILocation(line: 980, column: 30, scope: !8855)
!8858 = !DILocation(line: 980, column: 19, scope: !8855)
!8859 = !DILocation(line: 980, column: 17, scope: !8851)
!8860 = distinct !{!8860, !8849, !8861}
!8861 = !DILocation(line: 983, column: 9, scope: !8804)
!8862 = !DILocation(line: 991, column: 9, scope: !8804)
!8863 = !DILocation(line: 993, column: 19, scope: !8804)
!8864 = !DILocation(line: 993, column: 16, scope: !8804)
!8865 = !DILocation(line: 994, column: 14, scope: !8804)
!8866 = !DILocation(line: 995, column: 17, scope: !8804)
!8867 = distinct !{!8867, !8801, !8868}
!8868 = !DILocation(line: 996, column: 5, scope: !8777)
!8869 = !DILocation(line: 998, column: 21, scope: !8777)
!8870 = !DILocation(line: 1005, column: 9, scope: !8777)
!8871 = !DILocation(line: 1008, column: 1, scope: !8777)
!8872 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !1212, file: !1212, line: 1427, type: !8873, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8875)
!8873 = !DISubroutineType(types: !8874)
!8874 = !{null, !1382}
!8875 = !{!8876, !8877}
!8876 = !DILocalVariable(name: "D", arg: 1, scope: !8872, file: !1212, line: 1427, type: !1382)
!8877 = !DILocalVariable(name: "Result", scope: !8872, file: !1212, line: 1429, type: !2050)
!8878 = !DILocation(line: 0, scope: !8872)
!8879 = !DILocation(line: 1430, column: 5, scope: !8872)
!8880 = !DILocation(line: 1431, column: 18, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8872, file: !1212, line: 1430, column: 8)
!8882 = !DILocation(line: 1432, column: 21, scope: !8872)
!8883 = !DILocation(line: 1432, column: 5, scope: !8881)
!8884 = distinct !{!8884, !8879, !8885}
!8885 = !DILocation(line: 1432, column: 43, scope: !8872)
!8886 = !DILocation(line: 1433, column: 1, scope: !8872)
!8887 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !1212, file: !1212, line: 3478, type: !8873, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8888)
!8888 = !{!8889}
!8889 = !DILocalVariable(name: "D", arg: 1, scope: !8887, file: !1212, line: 3478, type: !1382)
!8890 = !DILocation(line: 0, scope: !8887)
!8891 = !DILocation(line: 3480, column: 30, scope: !8887)
!8892 = !DILocation(line: 3480, column: 35, scope: !8887)
!8893 = !DILocation(line: 3480, column: 27, scope: !8887)
!8894 = !DILocation(line: 3480, column: 5, scope: !8887)
!8895 = !DILocation(line: 3481, column: 1, scope: !8887)
!8896 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !1212, file: !1212, line: 2382, type: !291, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8897)
!8897 = !{!8898}
!8898 = !DILocalVariable(name: "savedMask", scope: !8896, file: !1212, line: 2384, type: !61)
!8899 = !DILocation(line: 2385, column: 17, scope: !8896)
!8900 = !DILocation(line: 0, scope: !8896)
!8901 = !DILocation(line: 2390, column: 20, scope: !8896)
!8902 = !DILocation(line: 2391, column: 5, scope: !8896)
!8903 = !DILocation(line: 2392, column: 1, scope: !8896)
!8904 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !1212, file: !1212, line: 3536, type: !8905, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8907)
!8905 = !DISubroutineType(types: !8906)
!8906 = !{!61, !1382, !460}
!8907 = !{!8908, !8909, !8910, !8911}
!8908 = !DILocalVariable(name: "D", arg: 1, scope: !8904, file: !1212, line: 3536, type: !1382)
!8909 = !DILocalVariable(name: "cmd", arg: 2, scope: !8904, file: !1212, line: 3536, type: !460)
!8910 = !DILocalVariable(name: "savedMask", scope: !8904, file: !1212, line: 3538, type: !61)
!8911 = !DILocalVariable(name: "result", scope: !8904, file: !1212, line: 3539, type: !61)
!8912 = !DILocation(line: 0, scope: !8904)
!8913 = !DILocation(line: 3541, column: 17, scope: !8904)
!8914 = !DILocation(line: 3542, column: 22, scope: !8904)
!8915 = !DILocation(line: 3542, column: 5, scope: !8904)
!8916 = !DILocation(line: 3543, column: 35, scope: !8904)
!8917 = !DILocation(line: 3543, column: 33, scope: !8904)
!8918 = !DILocation(line: 3544, column: 25, scope: !8904)
!8919 = !DILocation(line: 3545, column: 24, scope: !8904)
!8920 = !DILocation(line: 3546, column: 25, scope: !8904)
!8921 = !DILocation(line: 3546, column: 5, scope: !8904)
!8922 = !DILocation(line: 3547, column: 42, scope: !8904)
!8923 = !DILocation(line: 3547, column: 60, scope: !8904)
!8924 = !DILocation(line: 3547, column: 14, scope: !8904)
!8925 = !DILocation(line: 3548, column: 5, scope: !8904)
!8926 = !DILocation(line: 3550, column: 5, scope: !8904)
!8927 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !1212, file: !1212, line: 2393, type: !291, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8928)
!8928 = !{!8929}
!8929 = !DILocalVariable(name: "savedMask", scope: !8927, file: !1212, line: 2395, type: !61)
!8930 = !DILocation(line: 2396, column: 17, scope: !8927)
!8931 = !DILocation(line: 0, scope: !8927)
!8932 = !DILocation(line: 2401, column: 20, scope: !8927)
!8933 = !DILocation(line: 2402, column: 5, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8935, file: !1212, line: 2402, column: 5)
!8935 = distinct !DILexicalBlock(scope: !8927, file: !1212, line: 2402, column: 5)
!8936 = !DILocation(line: 2403, column: 5, scope: !8927)
!8937 = !DILocation(line: 2404, column: 1, scope: !8927)
!8938 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !1212, file: !1212, line: 1440, type: !8873, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8939)
!8939 = !{!8940, !8941}
!8940 = !DILocalVariable(name: "D", arg: 1, scope: !8938, file: !1212, line: 1440, type: !1382)
!8941 = !DILocalVariable(name: "savedMask", scope: !8938, file: !1212, line: 1442, type: !1092)
!8942 = !DILocation(line: 0, scope: !8938)
!8943 = !DILocation(line: 1443, column: 17, scope: !8938)
!8944 = !DILocation(line: 1444, column: 9, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8938, file: !1212, line: 1444, column: 9)
!8946 = !DILocation(line: 1444, column: 9, scope: !8938)
!8947 = !DILocation(line: 1445, column: 17, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8945, file: !1212, line: 1444, column: 24)
!8949 = !DILocation(line: 1446, column: 9, scope: !8948)
!8950 = !DILocation(line: 1451, column: 1, scope: !8938)
!8951 = !DILocation(line: 1448, column: 9, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8945, file: !1212, line: 1447, column: 12)
!8953 = !DILocation(line: 1449, column: 9, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8955, file: !1212, line: 1449, column: 9)
!8955 = distinct !DILexicalBlock(scope: !8956, file: !1212, line: 1449, column: 9)
!8956 = distinct !DILexicalBlock(scope: !8952, file: !1212, line: 1449, column: 9)
!8957 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !1212, file: !1212, line: 1027, type: !291, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8958)
!8958 = !{!8959, !8960, !8961, !8962}
!8959 = !DILocalVariable(name: "D", scope: !8957, file: !1212, line: 1029, type: !1382)
!8960 = !DILocalVariable(name: "status", scope: !8957, file: !1212, line: 1030, type: !1434)
!8961 = !DILocalVariable(name: "savedMask", scope: !8957, file: !1212, line: 1031, type: !61)
!8962 = !DILocalVariable(name: "duration", scope: !8963, file: !1212, line: 1231, type: !61)
!8963 = distinct !DILexicalBlock(scope: !8957, file: !1212, line: 1230, column: 5)
!8964 = !DILocation(line: 0, scope: !8957)
!8965 = !DILocation(line: 1033, column: 17, scope: !8957)
!8966 = !DILocation(line: 1034, column: 8, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8957, file: !1212, line: 1034, column: 8)
!8968 = !DILocation(line: 1034, column: 30, scope: !8967)
!8969 = !DILocation(line: 1034, column: 8, scope: !8957)
!8970 = !DILocation(line: 1039, column: 27, scope: !8957)
!8971 = !DILocation(line: 1058, column: 48, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8957, file: !1212, line: 1055, column: 5)
!8973 = !DILocation(line: 1069, column: 5, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8975, file: !1212, line: 1069, column: 5)
!8975 = distinct !DILexicalBlock(scope: !8957, file: !1212, line: 1069, column: 5)
!8976 = !DILocation(line: 1069, column: 5, scope: !8975)
!8977 = !DILocation(line: 1069, column: 5, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8974, file: !1212, line: 1069, column: 5)
!8979 = !DILocation(line: 1075, column: 10, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8957, file: !1212, line: 1075, column: 9)
!8981 = !DILocation(line: 1075, column: 27, scope: !8980)
!8982 = !DILocation(line: 1075, column: 33, scope: !8980)
!8983 = !DILocation(line: 1075, column: 40, scope: !8980)
!8984 = !DILocation(line: 1075, column: 53, scope: !8980)
!8985 = !DILocation(line: 1075, column: 9, scope: !8957)
!8986 = !DILocation(line: 1084, column: 9, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8980, file: !1212, line: 1083, column: 11)
!8988 = !DILocation(line: 1085, column: 50, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8987, file: !1212, line: 1084, column: 21)
!8990 = !DILocation(line: 1085, column: 55, scope: !8989)
!8991 = !DILocation(line: 1085, column: 22, scope: !8989)
!8992 = !DILocation(line: 1086, column: 35, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8989, file: !1212, line: 1086, column: 17)
!8994 = !DILocation(line: 1086, column: 32, scope: !8993)
!8995 = !DILocation(line: 1086, column: 30, scope: !8993)
!8996 = !DILocation(line: 1086, column: 19, scope: !8993)
!8997 = !DILocation(line: 1086, column: 17, scope: !8989)
!8998 = distinct !{!8998, !8986, !8999}
!8999 = !DILocation(line: 1089, column: 9, scope: !8987)
!9000 = !DILocation(line: 1107, column: 11, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8957, file: !1212, line: 1107, column: 9)
!9002 = !DILocation(line: 1107, column: 30, scope: !9001)
!9003 = !DILocation(line: 1117, column: 46, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !9001, file: !1212, line: 1107, column: 53)
!9005 = !DILocation(line: 1117, column: 51, scope: !9004)
!9006 = !DILocation(line: 1117, column: 18, scope: !9004)
!9007 = !DILocation(line: 1120, column: 31, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9004, file: !1212, line: 1120, column: 13)
!9009 = !DILocation(line: 1120, column: 28, scope: !9008)
!9010 = !DILocation(line: 1120, column: 26, scope: !9008)
!9011 = !DILocation(line: 1120, column: 15, scope: !9008)
!9012 = !DILocation(line: 1120, column: 13, scope: !9004)
!9013 = !DILocation(line: 1128, column: 13, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !9008, file: !1212, line: 1120, column: 55)
!9015 = !DILocation(line: 1131, column: 13, scope: !9014)
!9016 = !DILocation(line: 1132, column: 54, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9014, file: !1212, line: 1131, column: 23)
!9018 = !DILocation(line: 1132, column: 59, scope: !9017)
!9019 = !DILocation(line: 1132, column: 26, scope: !9017)
!9020 = !DILocation(line: 1133, column: 39, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9017, file: !1212, line: 1133, column: 21)
!9022 = !DILocation(line: 1133, column: 36, scope: !9021)
!9023 = !DILocation(line: 1133, column: 34, scope: !9021)
!9024 = !DILocation(line: 1133, column: 23, scope: !9021)
!9025 = !DILocation(line: 1133, column: 21, scope: !9017)
!9026 = distinct !{!9026, !9015, !9027}
!9027 = !DILocation(line: 1158, column: 13, scope: !9014)
!9028 = !DILocation(line: 1162, column: 21, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9014, file: !1212, line: 1162, column: 17)
!9030 = !DILocation(line: 1162, column: 32, scope: !9029)
!9031 = !DILocation(line: 1162, column: 51, scope: !9029)
!9032 = !DILocation(line: 1162, column: 58, scope: !9029)
!9033 = !DILocation(line: 1162, column: 71, scope: !9029)
!9034 = !DILocation(line: 1162, column: 17, scope: !9014)
!9035 = !DILocation(line: 1164, column: 45, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9029, file: !1212, line: 1162, column: 91)
!9037 = !DILocation(line: 1165, column: 36, scope: !9036)
!9038 = !DILocation(line: 1166, column: 37, scope: !9036)
!9039 = !DILocation(line: 1167, column: 34, scope: !9036)
!9040 = !DILocation(line: 1167, column: 17, scope: !9036)
!9041 = !DILocation(line: 1168, column: 37, scope: !9036)
!9042 = !DILocation(line: 1168, column: 17, scope: !9036)
!9043 = !DILocation(line: 1171, column: 50, scope: !9036)
!9044 = !DILocation(line: 1172, column: 37, scope: !9036)
!9045 = !DILocation(line: 1173, column: 45, scope: !9036)
!9046 = !DILocation(line: 1174, column: 34, scope: !9036)
!9047 = !DILocation(line: 1174, column: 17, scope: !9036)
!9048 = !DILocation(line: 1175, column: 37, scope: !9036)
!9049 = !DILocation(line: 1175, column: 17, scope: !9036)
!9050 = !DILocation(line: 1178, column: 17, scope: !9036)
!9051 = !DILocation(line: 1179, column: 49, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9036, file: !1212, line: 1178, column: 20)
!9053 = !DILocation(line: 1180, column: 40, scope: !9052)
!9054 = !DILocation(line: 1181, column: 41, scope: !9052)
!9055 = !DILocation(line: 1182, column: 38, scope: !9052)
!9056 = !DILocation(line: 1182, column: 21, scope: !9052)
!9057 = !DILocation(line: 1183, column: 41, scope: !9052)
!9058 = !DILocation(line: 1183, column: 21, scope: !9052)
!9059 = !DILocation(line: 1184, column: 43, scope: !9052)
!9060 = !DILocation(line: 1185, column: 17, scope: !9052)
!9061 = distinct !{!9061, !9050, !9062}
!9062 = !DILocation(line: 1185, column: 32, scope: !9036)
!9063 = !DILocation(line: 1194, column: 13, scope: !9014)
!9064 = !DILocation(line: 1195, column: 9, scope: !9014)
!9065 = !DILocation(line: 1197, column: 21, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9067, file: !1212, line: 1197, column: 17)
!9067 = distinct !DILexicalBlock(scope: !9008, file: !1212, line: 1195, column: 16)
!9068 = !DILocation(line: 1197, column: 32, scope: !9066)
!9069 = !DILocation(line: 1197, column: 53, scope: !9066)
!9070 = !DILocation(line: 1197, column: 60, scope: !9066)
!9071 = !DILocation(line: 1197, column: 76, scope: !9066)
!9072 = !DILocation(line: 1197, column: 17, scope: !9067)
!9073 = !DILocation(line: 1198, column: 54, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9066, file: !1212, line: 1197, column: 98)
!9075 = !DILocation(line: 1198, column: 59, scope: !9074)
!9076 = !DILocation(line: 1198, column: 26, scope: !9074)
!9077 = !DILocation(line: 1199, column: 40, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9074, file: !1212, line: 1199, column: 21)
!9079 = !DILocation(line: 1199, column: 37, scope: !9078)
!9080 = !DILocation(line: 1199, column: 35, scope: !9078)
!9081 = !DILocation(line: 1199, column: 24, scope: !9078)
!9082 = !DILocation(line: 1199, column: 63, scope: !9078)
!9083 = !DILocation(line: 1200, column: 41, scope: !9078)
!9084 = !DILocation(line: 1200, column: 39, scope: !9078)
!9085 = !DILocation(line: 1200, column: 28, scope: !9078)
!9086 = !DILocation(line: 1199, column: 21, scope: !9074)
!9087 = !DILocation(line: 1201, column: 40, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9078, file: !1212, line: 1200, column: 68)
!9089 = !DILocation(line: 1201, column: 21, scope: !9088)
!9090 = !DILocation(line: 1202, column: 40, scope: !9088)
!9091 = !DILocation(line: 1202, column: 21, scope: !9088)
!9092 = !DILocation(line: 1203, column: 17, scope: !9088)
!9093 = !DILocation(line: 1206, column: 13, scope: !9067)
!9094 = !DILocation(line: 1228, column: 25, scope: !8957)
!9095 = !DILocation(line: 1231, column: 29, scope: !8963)
!9096 = !DILocation(line: 0, scope: !8963)
!9097 = !DILocation(line: 1232, column: 13, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !8963, file: !1212, line: 1232, column: 13)
!9099 = !DILocation(line: 1232, column: 43, scope: !9098)
!9100 = !DILocation(line: 1232, column: 13, scope: !8963)
!9101 = !DILocation(line: 1233, column: 43, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9098, file: !1212, line: 1232, column: 55)
!9103 = !DILocation(line: 1234, column: 9, scope: !9102)
!9104 = !DILocation(line: 1237, column: 5, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9106, file: !1212, line: 1237, column: 5)
!9106 = distinct !DILexicalBlock(scope: !8957, file: !1212, line: 1237, column: 5)
!9107 = !DILocation(line: 1240, column: 5, scope: !8957)
!9108 = !DILocation(line: 1241, column: 1, scope: !8957)
!9109 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !1212, file: !1212, line: 3421, type: !8873, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9110)
!9110 = !{!9111, !9112, !9113, !9114}
!9111 = !DILocalVariable(name: "D", arg: 1, scope: !9109, file: !1212, line: 3421, type: !1382)
!9112 = !DILocalVariable(name: "savedMask", scope: !9109, file: !1212, line: 3423, type: !61)
!9113 = !DILocalVariable(name: "currtime", scope: !9109, file: !1212, line: 3424, type: !61)
!9114 = !DILocalVariable(name: "difftime", scope: !9109, file: !1212, line: 3424, type: !61)
!9115 = !DILocation(line: 0, scope: !9109)
!9116 = !DILocation(line: 3427, column: 9, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9109, file: !1212, line: 3427, column: 9)
!9118 = !DILocation(line: 3427, column: 28, scope: !9117)
!9119 = !DILocation(line: 3427, column: 9, scope: !9109)
!9120 = !DILocation(line: 3429, column: 20, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9117, file: !1212, line: 3427, column: 59)
!9122 = !DILocation(line: 3430, column: 27, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9121, file: !1212, line: 3430, column: 13)
!9124 = !DILocation(line: 3430, column: 24, scope: !9123)
!9125 = !DILocation(line: 3430, column: 22, scope: !9123)
!9126 = !DILocation(line: 3430, column: 13, scope: !9121)
!9127 = !DILocation(line: 3431, column: 47, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9123, file: !1212, line: 3430, column: 46)
!9129 = !DILocation(line: 3431, column: 13, scope: !9128)
!9130 = !DILocation(line: 3432, column: 9, scope: !9128)
!9131 = !DILocation(line: 3435, column: 17, scope: !9109)
!9132 = !DILocation(line: 3436, column: 24, scope: !9109)
!9133 = !DILocation(line: 3436, column: 31, scope: !9109)
!9134 = !DILocation(line: 3436, column: 36, scope: !9109)
!9135 = !DILocation(line: 3436, column: 28, scope: !9109)
!9136 = !DILocation(line: 3436, column: 5, scope: !9109)
!9137 = !DILocation(line: 3442, column: 5, scope: !9109)
!9138 = !DILocation(line: 3443, column: 1, scope: !9109)
!9139 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !1212, file: !1212, line: 2405, type: !291, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9140)
!9140 = !{!9141}
!9141 = !DILocalVariable(name: "savedMask", scope: !9139, file: !1212, line: 2407, type: !61)
!9142 = !DILocation(line: 2408, column: 17, scope: !9139)
!9143 = !DILocation(line: 0, scope: !9139)
!9144 = !DILocation(line: 2413, column: 25, scope: !9139)
!9145 = !DILocation(line: 2414, column: 5, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9147, file: !1212, line: 2414, column: 5)
!9147 = distinct !DILexicalBlock(scope: !9139, file: !1212, line: 2414, column: 5)
!9148 = !DILocation(line: 2415, column: 5, scope: !9139)
!9149 = !DILocation(line: 2416, column: 1, scope: !9139)
!9150 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !1212, file: !1212, line: 3561, type: !9151, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9153)
!9151 = !DISubroutineType(types: !9152)
!9152 = !{null, !1382, !772, !460}
!9153 = !{!9154, !9155, !9156, !9157}
!9154 = !DILocalVariable(name: "D", arg: 1, scope: !9150, file: !1212, line: 3561, type: !1382)
!9155 = !DILocalVariable(name: "cmd", arg: 2, scope: !9150, file: !1212, line: 3561, type: !772)
!9156 = !DILocalVariable(name: "outlen", arg: 3, scope: !9150, file: !1212, line: 3561, type: !460)
!9157 = !DILocalVariable(name: "savedMask", scope: !9150, file: !1212, line: 3563, type: !61)
!9158 = !DILocation(line: 0, scope: !9150)
!9159 = !DILocation(line: 3565, column: 17, scope: !9150)
!9160 = !DILocation(line: 3566, column: 22, scope: !9150)
!9161 = !DILocation(line: 3566, column: 5, scope: !9150)
!9162 = !DILocation(line: 3567, column: 33, scope: !9150)
!9163 = !DILocation(line: 3568, column: 27, scope: !9150)
!9164 = !DILocation(line: 3568, column: 25, scope: !9150)
!9165 = !DILocation(line: 3569, column: 24, scope: !9150)
!9166 = !DILocation(line: 3570, column: 25, scope: !9150)
!9167 = !DILocation(line: 3570, column: 5, scope: !9150)
!9168 = !DILocation(line: 3571, column: 5, scope: !9150)
!9169 = !DILocation(line: 3573, column: 1, scope: !9150)
!9170 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !1212, file: !1212, line: 1410, type: !9171, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9173)
!9171 = !DISubroutineType(types: !9172)
!9172 = !{!2050}
!9173 = !{!9174}
!9174 = !DILocalVariable(name: "savedMask", scope: !9170, file: !1212, line: 1412, type: !1092)
!9175 = !DILocation(line: 1413, column: 17, scope: !9170)
!9176 = !DILocation(line: 0, scope: !9170)
!9177 = !DILocation(line: 1414, column: 9, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9170, file: !1212, line: 1414, column: 9)
!9179 = !DILocation(line: 1414, column: 9, scope: !9170)
!9180 = !DILocation(line: 1415, column: 17, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9178, file: !1212, line: 1414, column: 24)
!9182 = !DILocation(line: 1417, column: 9, scope: !9181)
!9183 = !DILocation(line: 0, scope: !9178)
!9184 = !DILocation(line: 1425, column: 1, scope: !9170)
!9185 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !1212, file: !1212, line: 1257, type: !9186, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9188)
!9186 = !DISubroutineType(types: !9187)
!9187 = !{!91}
!9188 = !{!9189, !9190, !9191}
!9189 = !DILocalVariable(name: "D", scope: !9185, file: !1212, line: 1259, type: !1382)
!9190 = !DILocalVariable(name: "status", scope: !9185, file: !1212, line: 1260, type: !1434)
!9191 = !DILocalVariable(name: "result", scope: !9185, file: !1212, line: 1261, type: !91)
!9192 = !DILocation(line: 1259, column: 57, scope: !9185)
!9193 = !DILocation(line: 0, scope: !9185)
!9194 = !DILocation(line: 1263, column: 5, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9196, file: !1212, line: 1263, column: 5)
!9196 = distinct !DILexicalBlock(scope: !9185, file: !1212, line: 1263, column: 5)
!9197 = !DILocation(line: 1263, column: 5, scope: !9196)
!9198 = !DILocation(line: 1263, column: 5, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9195, file: !1212, line: 1263, column: 5)
!9200 = !DILocation(line: 1265, column: 5, scope: !9185)
!9201 = !DILocation(line: 1267, column: 42, scope: !9185)
!9202 = !DILocation(line: 1267, column: 47, scope: !9185)
!9203 = !DILocation(line: 1267, column: 14, scope: !9185)
!9204 = !DILocation(line: 1269, column: 27, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9185, file: !1212, line: 1269, column: 9)
!9206 = !DILocation(line: 1269, column: 24, scope: !9205)
!9207 = !DILocation(line: 1269, column: 22, scope: !9205)
!9208 = !DILocation(line: 1269, column: 11, scope: !9205)
!9209 = !DILocation(line: 1269, column: 9, scope: !9185)
!9210 = !DILocation(line: 1270, column: 9, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9205, file: !1212, line: 1269, column: 51)
!9212 = !DILocation(line: 1272, column: 5, scope: !9211)
!9213 = !DILocation(line: 1274, column: 5, scope: !9185)
!9214 = !DILocation(line: 1276, column: 5, scope: !9185)
!9215 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !1212, file: !1212, line: 1289, type: !291, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9216)
!9216 = !{!9217}
!9217 = !DILocalVariable(name: "D", scope: !9215, file: !1212, line: 1291, type: !1382)
!9218 = !DILocation(line: 0, scope: !9215)
!9219 = !DILocation(line: 1293, column: 5, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9221, file: !1212, line: 1293, column: 5)
!9221 = distinct !DILexicalBlock(scope: !9215, file: !1212, line: 1293, column: 5)
!9222 = !DILocation(line: 1293, column: 5, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9220, file: !1212, line: 1293, column: 5)
!9224 = !DILocation(line: 1293, column: 5, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9226, file: !1212, line: 1293, column: 5)
!9226 = distinct !DILexicalBlock(scope: !9227, file: !1212, line: 1293, column: 5)
!9227 = distinct !DILexicalBlock(scope: !9223, file: !1212, line: 1293, column: 5)
!9228 = !DILocation(line: 1291, column: 60, scope: !9215)
!9229 = !DILocation(line: 1295, column: 5, scope: !9215)
!9230 = !DILocation(line: 1296, column: 1, scope: !9215)
!9231 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !1212, file: !1212, line: 3452, type: !8873, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9232)
!9232 = !{!9233, !9234}
!9233 = !DILocalVariable(name: "D", arg: 1, scope: !9231, file: !1212, line: 3452, type: !1382)
!9234 = !DILocalVariable(name: "savedMask", scope: !9231, file: !1212, line: 3454, type: !61)
!9235 = !DILocation(line: 0, scope: !9231)
!9236 = !DILocation(line: 3456, column: 17, scope: !9231)
!9237 = !DILocation(line: 3462, column: 24, scope: !9231)
!9238 = !DILocation(line: 3462, column: 31, scope: !9231)
!9239 = !DILocation(line: 3462, column: 36, scope: !9231)
!9240 = !DILocation(line: 3462, column: 28, scope: !9231)
!9241 = !DILocation(line: 3462, column: 5, scope: !9231)
!9242 = !DILocation(line: 3463, column: 12, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9231, file: !1212, line: 3463, column: 9)
!9244 = !DILocation(line: 3463, column: 27, scope: !9243)
!9245 = !DILocation(line: 3463, column: 9, scope: !9231)
!9246 = !DILocation(line: 3464, column: 28, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !9243, file: !1212, line: 3463, column: 33)
!9248 = !DILocation(line: 3465, column: 5, scope: !9247)
!9249 = !DILocation(line: 3467, column: 5, scope: !9231)
!9250 = !DILocation(line: 3468, column: 5, scope: !9231)
!9251 = !DILocation(line: 3469, column: 1, scope: !9231)
!9252 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !1212, file: !1212, line: 2417, type: !291, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9253)
!9253 = !{!9254}
!9254 = !DILocalVariable(name: "savedMask", scope: !9252, file: !1212, line: 2419, type: !61)
!9255 = !DILocation(line: 2420, column: 17, scope: !9252)
!9256 = !DILocation(line: 0, scope: !9252)
!9257 = !DILocation(line: 2425, column: 25, scope: !9252)
!9258 = !DILocation(line: 2426, column: 5, scope: !9252)
!9259 = !DILocation(line: 2427, column: 1, scope: !9252)
!9260 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !1212, file: !1212, line: 1308, type: !291, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9261)
!9261 = !{!9262, !9263}
!9262 = !DILocalVariable(name: "D", scope: !9260, file: !1212, line: 1310, type: !1382)
!9263 = !DILocalVariable(name: "status", scope: !9260, file: !1212, line: 1311, type: !1434)
!9264 = !DILocation(line: 1310, column: 60, scope: !9260)
!9265 = !DILocation(line: 0, scope: !9260)
!9266 = !DILocation(line: 1313, column: 5, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9268, file: !1212, line: 1313, column: 5)
!9268 = distinct !DILexicalBlock(scope: !9260, file: !1212, line: 1313, column: 5)
!9269 = !DILocation(line: 1313, column: 5, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9267, file: !1212, line: 1313, column: 5)
!9271 = !DILocation(line: 1313, column: 5, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9273, file: !1212, line: 1313, column: 5)
!9273 = distinct !DILexicalBlock(scope: !9274, file: !1212, line: 1313, column: 5)
!9274 = distinct !DILexicalBlock(scope: !9270, file: !1212, line: 1313, column: 5)
!9275 = !DILocation(line: 1315, column: 5, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9277, file: !1212, line: 1315, column: 5)
!9277 = distinct !DILexicalBlock(scope: !9260, file: !1212, line: 1315, column: 5)
!9278 = !DILocation(line: 1315, column: 5, scope: !9277)
!9279 = !DILocation(line: 1315, column: 5, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9276, file: !1212, line: 1315, column: 5)
!9281 = !DILocation(line: 1317, column: 5, scope: !9260)
!9282 = !DILocation(line: 1319, column: 5, scope: !9260)
!9283 = !DILocation(line: 1320, column: 46, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9260, file: !1212, line: 1319, column: 15)
!9285 = !DILocation(line: 1320, column: 51, scope: !9284)
!9286 = !DILocation(line: 1320, column: 18, scope: !9284)
!9287 = !DILocation(line: 1322, column: 31, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9284, file: !1212, line: 1322, column: 13)
!9289 = !DILocation(line: 1322, column: 28, scope: !9288)
!9290 = !DILocation(line: 1322, column: 26, scope: !9288)
!9291 = !DILocation(line: 1322, column: 15, scope: !9288)
!9292 = !DILocation(line: 1322, column: 13, scope: !9284)
!9293 = distinct !{!9293, !9282, !9294}
!9294 = !DILocation(line: 1325, column: 5, scope: !9260)
!9295 = !DILocation(line: 1327, column: 5, scope: !9260)
!9296 = !DILocation(line: 1328, column: 1, scope: !9260)
!9297 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !1212, file: !1212, line: 1394, type: !8873, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9298)
!9298 = !{!9299}
!9299 = !DILocalVariable(name: "D", arg: 1, scope: !9297, file: !1212, line: 1394, type: !1382)
!9300 = !DILocation(line: 0, scope: !9297)
!9301 = !DILocation(line: 1401, column: 1, scope: !9297)
!9302 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !1212, file: !1212, line: 1556, type: !9303, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9324)
!9303 = !DISubroutineType(types: !9304)
!9304 = !{!1092, !9305, !1382}
!9305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9306, size: 32)
!9306 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1408, line: 121, baseType: !9307)
!9307 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 105, size: 480, elements: !9308)
!9308 = !{!9309, !9310, !9311, !9312, !9313, !9314, !9315, !9316, !9317, !9318, !9319, !9320, !9321, !9322, !9323}
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !9307, file: !1408, line: 106, baseType: !1682, size: 32)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !9307, file: !1408, line: 107, baseType: !1483, size: 32, offset: 32)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !9307, file: !1408, line: 108, baseType: !1687, size: 32, offset: 64)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !9307, file: !1408, line: 109, baseType: !1691, size: 32, offset: 96)
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !9307, file: !1408, line: 110, baseType: !1695, size: 32, offset: 128)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !9307, file: !1408, line: 111, baseType: !1691, size: 32, offset: 160)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !9307, file: !1408, line: 112, baseType: !1700, size: 32, offset: 192)
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !9307, file: !1408, line: 113, baseType: !1691, size: 32, offset: 224)
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !9307, file: !1408, line: 114, baseType: !1691, size: 32, offset: 256)
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !9307, file: !1408, line: 115, baseType: !1691, size: 32, offset: 288)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !9307, file: !1408, line: 116, baseType: !1707, size: 32, offset: 320)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !9307, file: !1408, line: 117, baseType: !1712, size: 32, offset: 352)
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !9307, file: !1408, line: 118, baseType: !1717, size: 32, offset: 384)
!9322 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !9307, file: !1408, line: 119, baseType: !1721, size: 32, offset: 416)
!9323 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !9307, file: !1408, line: 120, baseType: !1725, size: 32, offset: 448)
!9324 = !{!9325, !9326, !9327}
!9325 = !DILocalVariable(name: "driver", arg: 1, scope: !9302, file: !1212, line: 1556, type: !9305)
!9326 = !DILocalVariable(name: "D", arg: 2, scope: !9302, file: !1212, line: 1556, type: !1382)
!9327 = !DILocalVariable(name: "smap", scope: !9302, file: !1212, line: 1558, type: !1433)
!9328 = !DILocation(line: 0, scope: !9302)
!9329 = !DILocation(line: 1561, column: 15, scope: !9302)
!9330 = !DILocation(line: 1562, column: 22, scope: !9302)
!9331 = !DILocation(line: 1563, column: 5, scope: !9302)
!9332 = !DILocation(line: 1563, column: 22, scope: !9302)
!9333 = !DILocation(line: 1565, column: 5, scope: !9302)
!9334 = !DILocation(line: 1565, column: 22, scope: !9302)
!9335 = !DILocation(line: 1566, column: 5, scope: !9302)
!9336 = !DILocation(line: 1566, column: 22, scope: !9302)
!9337 = !DILocation(line: 1568, column: 5, scope: !9302)
!9338 = !DILocation(line: 1568, column: 22, scope: !9302)
!9339 = !DILocation(line: 1569, column: 5, scope: !9302)
!9340 = !DILocation(line: 1569, column: 22, scope: !9302)
!9341 = !DILocation(line: 1570, column: 5, scope: !9302)
!9342 = !DILocation(line: 1570, column: 22, scope: !9302)
!9343 = !DILocation(line: 1573, column: 8, scope: !9302)
!9344 = !DILocation(line: 1573, column: 13, scope: !9302)
!9345 = !DILocation(line: 1573, column: 28, scope: !9302)
!9346 = !DILocation(line: 1574, column: 8, scope: !9302)
!9347 = !DILocation(line: 1574, column: 13, scope: !9302)
!9348 = !DILocation(line: 1574, column: 29, scope: !9302)
!9349 = !DILocation(line: 1575, column: 8, scope: !9302)
!9350 = !DILocation(line: 1575, column: 13, scope: !9302)
!9351 = !DILocation(line: 1575, column: 30, scope: !9302)
!9352 = !DILocation(line: 1576, column: 8, scope: !9302)
!9353 = !DILocation(line: 1576, column: 13, scope: !9302)
!9354 = !DILocation(line: 1576, column: 23, scope: !9302)
!9355 = !DILocation(line: 1577, column: 8, scope: !9302)
!9356 = !DILocation(line: 1577, column: 13, scope: !9302)
!9357 = !DILocation(line: 1577, column: 24, scope: !9302)
!9358 = !DILocation(line: 1578, column: 8, scope: !9302)
!9359 = !DILocation(line: 1578, column: 13, scope: !9302)
!9360 = !DILocation(line: 1578, column: 25, scope: !9302)
!9361 = !DILocation(line: 1579, column: 8, scope: !9302)
!9362 = !DILocation(line: 1579, column: 23, scope: !9302)
!9363 = !DILocation(line: 1583, column: 10, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9302, file: !1212, line: 1583, column: 9)
!9365 = !DILocation(line: 1583, column: 24, scope: !9364)
!9366 = !DILocation(line: 1583, column: 32, scope: !9364)
!9367 = !DILocation(line: 1583, column: 35, scope: !9364)
!9368 = !DILocation(line: 1583, column: 49, scope: !9364)
!9369 = !DILocation(line: 1583, column: 9, scope: !9302)
!9370 = !DILocation(line: 1586, column: 12, scope: !9371)
!9371 = distinct !DILexicalBlock(scope: !9364, file: !1212, line: 1583, column: 59)
!9372 = !DILocation(line: 1586, column: 17, scope: !9371)
!9373 = !DILocation(line: 1586, column: 25, scope: !9371)
!9374 = !DILocation(line: 1587, column: 12, scope: !9371)
!9375 = !DILocation(line: 1587, column: 17, scope: !9371)
!9376 = !DILocation(line: 1587, column: 24, scope: !9371)
!9377 = !DILocation(line: 1591, column: 10, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9302, file: !1212, line: 1591, column: 9)
!9379 = !DILocation(line: 1589, column: 5, scope: !9371)
!9380 = !DILocation(line: 1600, column: 32, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9302, file: !1212, line: 1600, column: 9)
!9382 = !DILocation(line: 1600, column: 35, scope: !9381)
!9383 = !DILocation(line: 1600, column: 49, scope: !9381)
!9384 = !DILocation(line: 1600, column: 9, scope: !9302)
!9385 = !DILocation(line: 1601, column: 12, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9381, file: !1212, line: 1600, column: 59)
!9387 = !DILocation(line: 1601, column: 17, scope: !9386)
!9388 = !DILocation(line: 1601, column: 25, scope: !9386)
!9389 = !DILocation(line: 1602, column: 12, scope: !9386)
!9390 = !DILocation(line: 1602, column: 17, scope: !9386)
!9391 = !DILocation(line: 1602, column: 24, scope: !9386)
!9392 = !DILocation(line: 1603, column: 5, scope: !9386)
!9393 = !DILocation(line: 1607, column: 8, scope: !9302)
!9394 = !DILocation(line: 1607, column: 20, scope: !9302)
!9395 = !DILocation(line: 1622, column: 5, scope: !9302)
!9396 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !1212, file: !1212, line: 4553, type: !1484, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9397)
!9397 = !{!9398, !9399, !9400, !9401}
!9398 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9396, file: !1212, line: 4553, type: !88)
!9399 = !DILocalVariable(name: "D", scope: !9396, file: !1212, line: 4555, type: !1382)
!9400 = !DILocalVariable(name: "unlock", scope: !9396, file: !1212, line: 4556, type: !61)
!9401 = !DILocalVariable(name: "cmd", scope: !9396, file: !1212, line: 4557, type: !460)
!9402 = !DILocation(line: 0, scope: !9396)
!9403 = !DILocation(line: 4555, column: 24, scope: !9396)
!9404 = !DILocation(line: 4557, column: 5, scope: !9396)
!9405 = !DILocation(line: 4558, column: 12, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9396, file: !1212, line: 4558, column: 9)
!9407 = !DILocation(line: 4558, column: 9, scope: !9406)
!9408 = !DILocation(line: 4558, column: 23, scope: !9406)
!9409 = !DILocation(line: 4558, column: 31, scope: !9406)
!9410 = !DILocation(line: 4558, column: 34, scope: !9406)
!9411 = !DILocation(line: 4558, column: 48, scope: !9406)
!9412 = !DILocation(line: 4558, column: 56, scope: !9406)
!9413 = !DILocation(line: 4558, column: 59, scope: !9406)
!9414 = !DILocation(line: 4558, column: 73, scope: !9406)
!9415 = !DILocation(line: 4558, column: 9, scope: !9396)
!9416 = !DILocation(line: 4563, column: 24, scope: !9396)
!9417 = !DILocation(line: 4563, column: 31, scope: !9396)
!9418 = !DILocation(line: 4563, column: 36, scope: !9396)
!9419 = !DILocation(line: 4563, column: 28, scope: !9396)
!9420 = !DILocation(line: 4563, column: 5, scope: !9396)
!9421 = !DILocation(line: 4564, column: 5, scope: !9396)
!9422 = !DILocation(line: 4567, column: 28, scope: !9396)
!9423 = !DILocation(line: 4567, column: 36, scope: !9396)
!9424 = !DILocation(line: 4567, column: 41, scope: !9396)
!9425 = !DILocation(line: 4567, column: 5, scope: !9396)
!9426 = !DILocation(line: 4568, column: 17, scope: !9396)
!9427 = !DILocation(line: 4568, column: 22, scope: !9396)
!9428 = !DILocation(line: 4568, column: 14, scope: !9396)
!9429 = !DILocation(line: 4569, column: 22, scope: !9396)
!9430 = !DILocation(line: 4569, column: 54, scope: !9396)
!9431 = !DILocation(line: 4569, column: 65, scope: !9396)
!9432 = !DILocation(line: 4569, column: 62, scope: !9396)
!9433 = !DILocation(line: 4569, column: 87, scope: !9396)
!9434 = !DILocation(line: 4569, column: 85, scope: !9396)
!9435 = !DILocation(line: 4569, column: 60, scope: !9396)
!9436 = !DILocation(line: 4569, column: 58, scope: !9396)
!9437 = !DILocation(line: 4569, column: 51, scope: !9396)
!9438 = !DILocation(line: 4572, column: 24, scope: !9396)
!9439 = !DILocation(line: 4572, column: 5, scope: !9396)
!9440 = !DILocation(line: 4573, column: 5, scope: !9396)
!9441 = !DILocation(line: 4575, column: 5, scope: !9396)
!9442 = !DILocation(line: 4576, column: 1, scope: !9396)
!9443 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !1212, file: !1212, line: 4488, type: !8873, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9444)
!9444 = !{!9445, !9446}
!9445 = !DILocalVariable(name: "D", arg: 1, scope: !9443, file: !1212, line: 4488, type: !1382)
!9446 = !DILocalVariable(name: "status", scope: !9443, file: !1212, line: 4490, type: !1434)
!9447 = !DILocation(line: 0, scope: !9443)
!9448 = !DILocation(line: 4490, column: 5, scope: !9443)
!9449 = !DILocation(line: 4491, column: 5, scope: !9443)
!9450 = !DILocation(line: 4492, column: 32, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9443, file: !1212, line: 4491, column: 10)
!9452 = !DILocation(line: 4492, column: 40, scope: !9451)
!9453 = !DILocation(line: 4492, column: 45, scope: !9451)
!9454 = !DILocation(line: 4492, column: 9, scope: !9451)
!9455 = !DILocation(line: 4493, column: 20, scope: !9443)
!9456 = !DILocation(line: 4493, column: 32, scope: !9443)
!9457 = !DILocation(line: 4493, column: 29, scope: !9443)
!9458 = !DILocation(line: 4493, column: 27, scope: !9443)
!9459 = !DILocation(line: 4493, column: 16, scope: !9443)
!9460 = !DILocation(line: 4493, column: 5, scope: !9451)
!9461 = distinct !{!9461, !9449, !9462}
!9462 = !DILocation(line: 4493, column: 54, scope: !9443)
!9463 = !DILocation(line: 4494, column: 1, scope: !9443)
!9464 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !1212, file: !1212, line: 1742, type: !9303, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9465)
!9465 = !{!9466, !9467, !9468}
!9466 = !DILocalVariable(name: "driver", arg: 1, scope: !9464, file: !1212, line: 1742, type: !9305)
!9467 = !DILocalVariable(name: "D", arg: 2, scope: !9464, file: !1212, line: 1742, type: !1382)
!9468 = !DILocalVariable(name: "smap", scope: !9464, file: !1212, line: 1744, type: !1433)
!9469 = !DILocation(line: 0, scope: !9464)
!9470 = !DILocation(line: 1747, column: 15, scope: !9464)
!9471 = !DILocation(line: 1748, column: 22, scope: !9464)
!9472 = !DILocation(line: 1749, column: 5, scope: !9464)
!9473 = !DILocation(line: 1749, column: 22, scope: !9464)
!9474 = !DILocation(line: 1750, column: 5, scope: !9464)
!9475 = !DILocation(line: 1750, column: 22, scope: !9464)
!9476 = !DILocation(line: 1751, column: 5, scope: !9464)
!9477 = !DILocation(line: 1751, column: 22, scope: !9464)
!9478 = !DILocation(line: 1752, column: 5, scope: !9464)
!9479 = !DILocation(line: 1752, column: 22, scope: !9464)
!9480 = !DILocation(line: 1753, column: 5, scope: !9464)
!9481 = !DILocation(line: 1753, column: 22, scope: !9464)
!9482 = !DILocation(line: 1756, column: 8, scope: !9464)
!9483 = !DILocation(line: 1756, column: 13, scope: !9464)
!9484 = !DILocation(line: 1756, column: 24, scope: !9464)
!9485 = !DILocation(line: 1758, column: 8, scope: !9464)
!9486 = !DILocation(line: 1758, column: 13, scope: !9464)
!9487 = !DILocation(line: 1758, column: 28, scope: !9464)
!9488 = !DILocation(line: 1759, column: 8, scope: !9464)
!9489 = !DILocation(line: 1759, column: 13, scope: !9464)
!9490 = !DILocation(line: 1759, column: 29, scope: !9464)
!9491 = !DILocation(line: 1760, column: 8, scope: !9464)
!9492 = !DILocation(line: 1760, column: 13, scope: !9464)
!9493 = !DILocation(line: 1760, column: 23, scope: !9464)
!9494 = !DILocation(line: 1761, column: 8, scope: !9464)
!9495 = !DILocation(line: 1761, column: 13, scope: !9464)
!9496 = !DILocation(line: 1761, column: 24, scope: !9464)
!9497 = !DILocation(line: 1762, column: 8, scope: !9464)
!9498 = !DILocation(line: 1762, column: 13, scope: !9464)
!9499 = !DILocation(line: 1762, column: 21, scope: !9464)
!9500 = !DILocation(line: 1763, column: 8, scope: !9464)
!9501 = !DILocation(line: 1763, column: 13, scope: !9464)
!9502 = !DILocation(line: 1763, column: 20, scope: !9464)
!9503 = !DILocation(line: 1764, column: 8, scope: !9464)
!9504 = !DILocation(line: 1764, column: 23, scope: !9464)
!9505 = !DILocation(line: 1768, column: 8, scope: !9464)
!9506 = !DILocation(line: 1768, column: 20, scope: !9464)
!9507 = !DILocation(line: 1770, column: 5, scope: !9464)
!9508 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !1212, file: !1212, line: 1775, type: !9303, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9509)
!9509 = !{!9510, !9511}
!9510 = !DILocalVariable(name: "driver", arg: 1, scope: !9508, file: !1212, line: 1775, type: !9305)
!9511 = !DILocalVariable(name: "D", arg: 2, scope: !9508, file: !1212, line: 1775, type: !1382)
!9512 = !DILocation(line: 0, scope: !9508)
!9513 = !DILocation(line: 1793, column: 5, scope: !9508)
!9514 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !1212, file: !1212, line: 1932, type: !9303, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9515)
!9515 = !{!9516, !9517}
!9516 = !DILocalVariable(name: "driver", arg: 1, scope: !9514, file: !1212, line: 1932, type: !9305)
!9517 = !DILocalVariable(name: "D", arg: 2, scope: !9514, file: !1212, line: 1932, type: !1382)
!9518 = !DILocation(line: 0, scope: !9514)
!9519 = !DILocation(line: 1935, column: 13, scope: !9514)
!9520 = !DILocation(line: 1935, column: 25, scope: !9514)
!9521 = !DILocation(line: 1936, column: 13, scope: !9514)
!9522 = !DILocation(line: 1936, column: 22, scope: !9514)
!9523 = !DILocation(line: 1937, column: 13, scope: !9514)
!9524 = !DILocation(line: 1937, column: 23, scope: !9514)
!9525 = !DILocation(line: 1939, column: 13, scope: !9514)
!9526 = !DILocation(line: 1939, column: 24, scope: !9514)
!9527 = !DILocation(line: 1940, column: 13, scope: !9514)
!9528 = !DILocation(line: 1940, column: 25, scope: !9514)
!9529 = !DILocation(line: 1945, column: 13, scope: !9514)
!9530 = !DILocation(line: 1945, column: 32, scope: !9514)
!9531 = !DILocation(line: 1946, column: 13, scope: !9514)
!9532 = !DILocation(line: 1946, column: 30, scope: !9514)
!9533 = !DILocation(line: 1947, column: 13, scope: !9514)
!9534 = !DILocation(line: 1947, column: 26, scope: !9514)
!9535 = !DILocation(line: 1948, column: 13, scope: !9514)
!9536 = !DILocation(line: 1948, column: 25, scope: !9514)
!9537 = !DILocation(line: 1949, column: 13, scope: !9514)
!9538 = !DILocation(line: 1949, column: 24, scope: !9514)
!9539 = !DILocation(line: 1956, column: 13, scope: !9514)
!9540 = !DILocation(line: 1956, column: 23, scope: !9514)
!9541 = !DILocation(line: 1957, column: 13, scope: !9514)
!9542 = !DILocation(line: 1957, column: 28, scope: !9514)
!9543 = !DILocation(line: 1960, column: 13, scope: !9514)
!9544 = !DILocation(line: 1960, column: 30, scope: !9514)
!9545 = !DILocation(line: 1961, column: 13, scope: !9514)
!9546 = !DILocation(line: 1961, column: 30, scope: !9514)
!9547 = !DILocation(line: 1962, column: 13, scope: !9514)
!9548 = !DILocation(line: 1962, column: 20, scope: !9514)
!9549 = !DILocation(line: 1968, column: 9, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9514, file: !1212, line: 1968, column: 9)
!9551 = !DILocation(line: 1968, column: 36, scope: !9550)
!9552 = !DILocation(line: 1968, column: 9, scope: !9514)
!9553 = !DILocation(line: 1971, column: 12, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9550, file: !1212, line: 1970, column: 5)
!9555 = !DILocation(line: 1971, column: 25, scope: !9554)
!9556 = !DILocation(line: 1979, column: 8, scope: !9514)
!9557 = !DILocation(line: 1979, column: 13, scope: !9514)
!9558 = !DILocation(line: 1979, column: 25, scope: !9514)
!9559 = !DILocation(line: 1980, column: 8, scope: !9514)
!9560 = !DILocation(line: 1980, column: 13, scope: !9514)
!9561 = !DILocation(line: 1980, column: 24, scope: !9514)
!9562 = !DILocation(line: 1981, column: 8, scope: !9514)
!9563 = !DILocation(line: 1981, column: 13, scope: !9514)
!9564 = !DILocation(line: 1981, column: 24, scope: !9514)
!9565 = !DILocation(line: 1982, column: 8, scope: !9514)
!9566 = !DILocation(line: 1982, column: 13, scope: !9514)
!9567 = !DILocation(line: 1982, column: 22, scope: !9514)
!9568 = !DILocation(line: 1983, column: 8, scope: !9514)
!9569 = !DILocation(line: 1983, column: 13, scope: !9514)
!9570 = !DILocation(line: 1983, column: 21, scope: !9514)
!9571 = !DILocation(line: 1984, column: 8, scope: !9514)
!9572 = !DILocation(line: 1984, column: 13, scope: !9514)
!9573 = !DILocation(line: 1984, column: 22, scope: !9514)
!9574 = !DILocation(line: 1985, column: 8, scope: !9514)
!9575 = !DILocation(line: 1985, column: 13, scope: !9514)
!9576 = !DILocation(line: 1985, column: 22, scope: !9514)
!9577 = !DILocation(line: 1986, column: 8, scope: !9514)
!9578 = !DILocation(line: 1986, column: 13, scope: !9514)
!9579 = !DILocation(line: 1986, column: 21, scope: !9514)
!9580 = !DILocation(line: 1987, column: 8, scope: !9514)
!9581 = !DILocation(line: 1987, column: 13, scope: !9514)
!9582 = !DILocation(line: 1987, column: 20, scope: !9514)
!9583 = !DILocation(line: 1988, column: 8, scope: !9514)
!9584 = !DILocation(line: 1988, column: 13, scope: !9514)
!9585 = !DILocation(line: 1988, column: 25, scope: !9514)
!9586 = !DILocation(line: 1989, column: 8, scope: !9514)
!9587 = !DILocation(line: 1989, column: 13, scope: !9514)
!9588 = !DILocation(line: 1989, column: 22, scope: !9514)
!9589 = !DILocation(line: 1990, column: 8, scope: !9514)
!9590 = !DILocation(line: 1990, column: 13, scope: !9514)
!9591 = !DILocation(line: 1990, column: 22, scope: !9514)
!9592 = !DILocation(line: 1993, column: 8, scope: !9514)
!9593 = !DILocation(line: 1993, column: 13, scope: !9514)
!9594 = !DILocation(line: 1993, column: 26, scope: !9514)
!9595 = !DILocation(line: 1996, column: 8, scope: !9514)
!9596 = !DILocation(line: 1996, column: 20, scope: !9514)
!9597 = !DILocation(line: 1999, column: 8, scope: !9514)
!9598 = !DILocation(line: 1999, column: 24, scope: !9514)
!9599 = !DILocation(line: 2000, column: 8, scope: !9514)
!9600 = !DILocation(line: 2000, column: 19, scope: !9514)
!9601 = !DILocation(line: 2001, column: 8, scope: !9514)
!9602 = !DILocation(line: 2001, column: 24, scope: !9514)
!9603 = !DILocation(line: 2002, column: 8, scope: !9514)
!9604 = !DILocation(line: 2002, column: 23, scope: !9514)
!9605 = !DILocation(line: 2004, column: 5, scope: !9514)
!9606 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !1212, file: !1212, line: 2160, type: !1683, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9607)
!9607 = !{!9608, !9609, !9610, !9623, !9624, !9625}
!9608 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9606, file: !1212, line: 2160, type: !88)
!9609 = !DILocalVariable(name: "Info", arg: 2, scope: !9606, file: !1212, line: 2160, type: !88)
!9610 = !DILocalVariable(name: "FlashInfo", scope: !9606, file: !1212, line: 2162, type: !9611)
!9611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9612, size: 32)
!9612 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1408, line: 99, baseType: !9613)
!9613 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 90, size: 928, elements: !9614)
!9614 = !{!9615, !9616, !9617, !9618, !9619, !9620, !9621, !9622}
!9615 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !9613, file: !1408, line: 91, baseType: !61, size: 32)
!9616 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !9613, file: !1408, line: 92, baseType: !1739, size: 256, offset: 32)
!9617 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !9613, file: !1408, line: 93, baseType: !1739, size: 256, offset: 288)
!9618 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !9613, file: !1408, line: 94, baseType: !1739, size: 256, offset: 544)
!9619 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !9613, file: !1408, line: 95, baseType: !61, size: 32, offset: 800)
!9620 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !9613, file: !1408, line: 96, baseType: !1731, size: 16, offset: 832)
!9621 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !9613, file: !1408, line: 97, baseType: !61, size: 32, offset: 864)
!9622 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !9613, file: !1408, line: 98, baseType: !61, size: 32, offset: 896)
!9623 = !DILocalVariable(name: "D", scope: !9606, file: !1212, line: 2163, type: !1382)
!9624 = !DILocalVariable(name: "i", scope: !9606, file: !1212, line: 2164, type: !61)
!9625 = !DILocalVariable(name: "result", scope: !9606, file: !1212, line: 2166, type: !1092)
!9626 = !DILocation(line: 0, scope: !9606)
!9627 = !DILocation(line: 2163, column: 37, scope: !9606)
!9628 = !DILocation(line: 2202, column: 16, scope: !9606)
!9629 = !DILocation(line: 2202, column: 28, scope: !9606)
!9630 = !DILocation(line: 2204, column: 15, scope: !9606)
!9631 = !DILocation(line: 2204, column: 29, scope: !9606)
!9632 = !DILocation(line: 2204, column: 39, scope: !9606)
!9633 = !DILocation(line: 2204, column: 5, scope: !9606)
!9634 = !DILocation(line: 2205, column: 9, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9606, file: !1212, line: 2204, column: 45)
!9636 = !DILocation(line: 2205, column: 33, scope: !9635)
!9637 = !DILocation(line: 2206, column: 41, scope: !9635)
!9638 = !DILocation(line: 2206, column: 55, scope: !9635)
!9639 = !DILocation(line: 2206, column: 9, scope: !9635)
!9640 = !DILocation(line: 2206, column: 36, scope: !9635)
!9641 = !DILocation(line: 2207, column: 38, scope: !9635)
!9642 = !DILocation(line: 2207, column: 52, scope: !9635)
!9643 = !DILocation(line: 2207, column: 32, scope: !9635)
!9644 = !DILocation(line: 2209, column: 10, scope: !9635)
!9645 = distinct !{!9645, !9633, !9646}
!9646 = !DILocation(line: 2210, column: 5, scope: !9606)
!9647 = !DILocation(line: 2212, column: 16, scope: !9606)
!9648 = !DILocation(line: 2212, column: 32, scope: !9606)
!9649 = !DILocation(line: 2213, column: 16, scope: !9606)
!9650 = !DILocation(line: 2213, column: 25, scope: !9606)
!9651 = !DILocation(line: 2236, column: 5, scope: !9606)
!9652 = !DILocation(line: 2238, column: 5, scope: !9606)
!9653 = !DILocation(line: 2239, column: 18, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9606, file: !1212, line: 2238, column: 10)
!9655 = !DILocation(line: 2240, column: 34, scope: !9606)
!9656 = !DILocation(line: 2240, column: 5, scope: !9654)
!9657 = distinct !{!9657, !9652, !9658}
!9658 = !DILocation(line: 2240, column: 43, scope: !9606)
!9659 = !DILocation(line: 2259, column: 5, scope: !9606)
!9660 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !1212, file: !1212, line: 2275, type: !1484, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9661)
!9661 = !{!9662, !9663, !9664, !9665}
!9662 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9660, file: !1212, line: 2275, type: !88)
!9663 = !DILocalVariable(name: "D", scope: !9660, file: !1212, line: 2278, type: !1382)
!9664 = !DILocalVariable(name: "status", scope: !9660, file: !1212, line: 2279, type: !1434)
!9665 = !DILocalVariable(name: "saved_mask", scope: !9660, file: !1212, line: 2280, type: !61)
!9666 = !DILocation(line: 0, scope: !9660)
!9667 = !DILocation(line: 2278, column: 33, scope: !9660)
!9668 = !DILocation(line: 2286, column: 5, scope: !9660)
!9669 = !DILocation(line: 2293, column: 9, scope: !9660)
!9670 = !DILocation(line: 2294, column: 26, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9660, file: !1212, line: 2293, column: 19)
!9672 = !DILocation(line: 2297, column: 17, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9671, file: !1212, line: 2297, column: 17)
!9674 = !DILocation(line: 2297, column: 17, scope: !9671)
!9675 = !DILocation(line: 2298, column: 17, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9673, file: !1212, line: 2297, column: 36)
!9677 = !DILocation(line: 2299, column: 37, scope: !9676)
!9678 = !DILocation(line: 2300, column: 13, scope: !9676)
!9679 = !DILocation(line: 2303, column: 50, scope: !9671)
!9680 = !DILocation(line: 2303, column: 55, scope: !9671)
!9681 = !DILocation(line: 2303, column: 22, scope: !9671)
!9682 = !DILocation(line: 2306, column: 35, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9671, file: !1212, line: 2306, column: 17)
!9684 = !DILocation(line: 2306, column: 32, scope: !9683)
!9685 = !DILocation(line: 2306, column: 30, scope: !9683)
!9686 = !DILocation(line: 2306, column: 19, scope: !9683)
!9687 = !DILocation(line: 2306, column: 17, scope: !9671)
!9688 = !DILocation(line: 2307, column: 17, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9683, file: !1212, line: 2306, column: 59)
!9690 = !DILocation(line: 2308, column: 17, scope: !9689)
!9691 = !DILocation(line: 2315, column: 12, scope: !9660)
!9692 = !DILocation(line: 2315, column: 21, scope: !9660)
!9693 = !DILocation(line: 2325, column: 9, scope: !9660)
!9694 = !DILocation(line: 2326, column: 5, scope: !9660)
!9695 = !DILocation(line: 2311, column: 17, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9683, file: !1212, line: 2310, column: 20)
!9697 = distinct !{!9697, !9669, !9698}
!9698 = !DILocation(line: 2313, column: 9, scope: !9660)
!9699 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !1212, file: !1212, line: 2819, type: !1692, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9700)
!9700 = !{!9701, !9702, !9703, !9704, !9705, !9706, !9707, !9708, !9709, !9710, !9713, !9714}
!9701 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9699, file: !1212, line: 2819, type: !88)
!9702 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9699, file: !1212, line: 2819, type: !61)
!9703 = !DILocalVariable(name: "result", scope: !9699, file: !1212, line: 2821, type: !1092)
!9704 = !DILocalVariable(name: "blocksize", scope: !9699, file: !1212, line: 2822, type: !61)
!9705 = !DILocalVariable(name: "eraseunit", scope: !9699, file: !1212, line: 2823, type: !61)
!9706 = !DILocalVariable(name: "eraseaddr", scope: !9699, file: !1212, line: 2824, type: !61)
!9707 = !DILocalVariable(name: "iteration", scope: !9699, file: !1212, line: 2825, type: !61)
!9708 = !DILocalVariable(name: "D", scope: !9699, file: !1212, line: 2826, type: !1382)
!9709 = !DILocalVariable(name: "erase_block", scope: !9699, file: !1212, line: 2827, type: !61)
!9710 = !DILocalVariable(name: "a", scope: !9711, file: !1212, line: 2853, type: !61)
!9711 = distinct !DILexicalBlock(scope: !9712, file: !1212, line: 2852, column: 56)
!9712 = distinct !DILexicalBlock(scope: !9699, file: !1212, line: 2852, column: 9)
!9713 = !DILocalVariable(name: "b", scope: !9711, file: !1212, line: 2853, type: !61)
!9714 = !DILocalVariable(name: "c", scope: !9711, file: !1212, line: 2853, type: !61)
!9715 = !DILocation(line: 0, scope: !9699)
!9716 = !DILocation(line: 2826, column: 30, scope: !9699)
!9717 = !DILocation(line: 2829, column: 5, scope: !9718)
!9718 = distinct !DILexicalBlock(scope: !9719, file: !1212, line: 2829, column: 5)
!9719 = distinct !DILexicalBlock(scope: !9699, file: !1212, line: 2829, column: 5)
!9720 = !DILocation(line: 2829, column: 5, scope: !9719)
!9721 = !DILocation(line: 2829, column: 5, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9718, file: !1212, line: 2829, column: 5)
!9723 = !DILocation(line: 2836, column: 9, scope: !9699)
!9724 = !DILocation(line: 2838, column: 8, scope: !9699)
!9725 = !DILocation(line: 2838, column: 21, scope: !9699)
!9726 = !DILocation(line: 2847, column: 5, scope: !9699)
!9727 = !DILocation(line: 2848, column: 18, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9699, file: !1212, line: 2847, column: 10)
!9729 = !DILocation(line: 2850, column: 34, scope: !9699)
!9730 = !DILocation(line: 2850, column: 5, scope: !9728)
!9731 = distinct !{!9731, !9726, !9732}
!9732 = !DILocation(line: 2850, column: 43, scope: !9699)
!9733 = !DILocation(line: 2839, column: 32, scope: !9699)
!9734 = !DILocation(line: 2861, column: 53, scope: !9711)
!9735 = !DILocation(line: 2861, column: 40, scope: !9711)
!9736 = !DILocation(line: 2861, column: 25, scope: !9711)
!9737 = !DILocation(line: 2874, column: 16, scope: !9711)
!9738 = !DILocation(line: 2874, column: 13, scope: !9711)
!9739 = !DILocation(line: 0, scope: !9711)
!9740 = !DILocation(line: 2875, column: 24, scope: !9711)
!9741 = !DILocation(line: 2877, column: 21, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9711, file: !1212, line: 2877, column: 13)
!9743 = !DILocation(line: 2877, column: 13, scope: !9711)
!9744 = !DILocation(line: 2879, column: 23, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9746, file: !1212, line: 2879, column: 21)
!9746 = distinct !DILexicalBlock(scope: !9747, file: !1212, line: 2878, column: 120)
!9747 = distinct !DILexicalBlock(scope: !9748, file: !1212, line: 2878, column: 13)
!9748 = distinct !DILexicalBlock(scope: !9749, file: !1212, line: 2878, column: 13)
!9749 = distinct !DILexicalBlock(scope: !9742, file: !1212, line: 2877, column: 27)
!9750 = !DILocation(line: 2879, column: 21, scope: !9746)
!9751 = !DILocation(line: 2878, column: 48, scope: !9747)
!9752 = !DILocation(line: 2878, column: 83, scope: !9747)
!9753 = !DILocation(line: 2878, column: 113, scope: !9747)
!9754 = !DILocation(line: 2878, column: 35, scope: !9747)
!9755 = !DILocation(line: 2878, column: 13, scope: !9748)
!9756 = distinct !{!9756, !9755, !9757}
!9757 = !DILocation(line: 2883, column: 13, scope: !9748)
!9758 = !DILocation(line: 2863, column: 19, scope: !9711)
!9759 = !DILocation(line: 2825, column: 24, scope: !9699)
!9760 = !DILocation(line: 2886, column: 9, scope: !9711)
!9761 = !DILocation(line: 2888, column: 36, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9711, file: !1212, line: 2886, column: 31)
!9763 = !DILocation(line: 2888, column: 41, scope: !9762)
!9764 = !DILocation(line: 2889, column: 17, scope: !9762)
!9765 = !DILocation(line: 2891, column: 36, scope: !9762)
!9766 = !DILocation(line: 2891, column: 41, scope: !9762)
!9767 = !DILocation(line: 2892, column: 17, scope: !9762)
!9768 = !DILocation(line: 2894, column: 36, scope: !9762)
!9769 = !DILocation(line: 2894, column: 41, scope: !9762)
!9770 = !DILocation(line: 2895, column: 17, scope: !9762)
!9771 = !DILocation(line: 2897, column: 17, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9773, file: !1212, line: 2897, column: 17)
!9773 = distinct !DILexicalBlock(scope: !9774, file: !1212, line: 2897, column: 17)
!9774 = distinct !DILexicalBlock(scope: !9762, file: !1212, line: 2897, column: 17)
!9775 = !DILocation(line: 0, scope: !9762)
!9776 = !DILocation(line: 2906, column: 5, scope: !9699)
!9777 = !DILocation(line: 2908, column: 32, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9699, file: !1212, line: 2906, column: 27)
!9779 = !DILocation(line: 2908, column: 37, scope: !9778)
!9780 = !DILocation(line: 2909, column: 13, scope: !9778)
!9781 = !DILocation(line: 2911, column: 32, scope: !9778)
!9782 = !DILocation(line: 2911, column: 37, scope: !9778)
!9783 = !DILocation(line: 2912, column: 13, scope: !9778)
!9784 = !DILocation(line: 2914, column: 32, scope: !9778)
!9785 = !DILocation(line: 2914, column: 37, scope: !9778)
!9786 = !DILocation(line: 2915, column: 13, scope: !9778)
!9787 = !DILocation(line: 0, scope: !9778)
!9788 = !DILocation(line: 2921, column: 56, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9790, file: !1212, line: 2921, column: 5)
!9790 = distinct !DILexicalBlock(scope: !9699, file: !1212, line: 2921, column: 5)
!9791 = !DILocation(line: 2921, column: 5, scope: !9790)
!9792 = !DILocation(line: 2921, column: 35, scope: !9790)
!9793 = !DILocation(line: 2921, column: 22, scope: !9790)
!9794 = !DILocation(line: 2922, column: 9, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9789, file: !1212, line: 2921, column: 99)
!9796 = !DILocation(line: 2929, column: 9, scope: !9795)
!9797 = !DILocation(line: 2938, column: 26, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9795, file: !1212, line: 2929, column: 26)
!9799 = !DILocation(line: 2939, column: 37, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9798, file: !1212, line: 2939, column: 17)
!9801 = !DILocation(line: 2939, column: 17, scope: !9798)
!9802 = distinct !{!9802, !9796, !9803}
!9803 = !DILocation(line: 2943, column: 9, scope: !9795)
!9804 = !DILocation(line: 2921, column: 71, scope: !9789)
!9805 = !DILocation(line: 2921, column: 85, scope: !9789)
!9806 = distinct !{!9806, !9791, !9807}
!9807 = !DILocation(line: 2983, column: 5, scope: !9790)
!9808 = !DILocation(line: 2985, column: 21, scope: !9699)
!9809 = !DILocation(line: 2992, column: 9, scope: !9699)
!9810 = !DILocation(line: 3000, column: 5, scope: !9699)
!9811 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !1212, file: !1212, line: 2533, type: !1696, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9812)
!9812 = !{!9813, !9814, !9815, !9816, !9817, !9818, !9819, !9820, !9821, !9822, !9823, !9824, !9825, !9826}
!9813 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9811, file: !1212, line: 2533, type: !88)
!9814 = !DILocalVariable(name: "Address", arg: 2, scope: !9811, file: !1212, line: 2533, type: !88)
!9815 = !DILocalVariable(name: "Data", arg: 3, scope: !9811, file: !1212, line: 2533, type: !88)
!9816 = !DILocalVariable(name: "Length", arg: 4, scope: !9811, file: !1212, line: 2533, type: !61)
!9817 = !DILocalVariable(name: "D", scope: !9811, file: !1212, line: 2535, type: !1382)
!9818 = !DILocalVariable(name: "savedMask", scope: !9811, file: !1212, line: 2536, type: !61)
!9819 = !DILocalVariable(name: "address", scope: !9811, file: !1212, line: 2537, type: !61)
!9820 = !DILocalVariable(name: "p_data", scope: !9811, file: !1212, line: 2538, type: !762)
!9821 = !DILocalVariable(name: "p_data_first", scope: !9811, file: !1212, line: 2539, type: !762)
!9822 = !DILocalVariable(name: "result", scope: !9811, file: !1212, line: 2540, type: !1092)
!9823 = !DILocalVariable(name: "written", scope: !9811, file: !1212, line: 2541, type: !61)
!9824 = !DILocalVariable(name: "length", scope: !9811, file: !1212, line: 2542, type: !61)
!9825 = !DILocalVariable(name: "cmd1", scope: !9811, file: !1212, line: 2543, type: !61)
!9826 = !DILocalVariable(name: "j", scope: !9827, file: !1212, line: 2599, type: !61)
!9827 = distinct !DILexicalBlock(scope: !9828, file: !1212, line: 2597, column: 61)
!9828 = distinct !DILexicalBlock(scope: !9829, file: !1212, line: 2597, column: 13)
!9829 = distinct !DILexicalBlock(scope: !9811, file: !1212, line: 2583, column: 25)
!9830 = !DILocation(line: 0, scope: !9811)
!9831 = !DILocation(line: 2535, column: 26, scope: !9811)
!9832 = !DILocation(line: 2537, column: 37, scope: !9811)
!9833 = !DILocation(line: 2538, column: 5, scope: !9811)
!9834 = !DILocation(line: 2538, column: 19, scope: !9811)
!9835 = !DILocation(line: 2542, column: 5, scope: !9811)
!9836 = !DILocation(line: 2545, column: 5, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9838, file: !1212, line: 2545, column: 5)
!9838 = distinct !DILexicalBlock(scope: !9811, file: !1212, line: 2545, column: 5)
!9839 = !DILocation(line: 2545, column: 5, scope: !9838)
!9840 = !DILocation(line: 2545, column: 5, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9837, file: !1212, line: 2545, column: 5)
!9842 = !DILocation(line: 2567, column: 9, scope: !9811)
!9843 = !DILocation(line: 2569, column: 8, scope: !9811)
!9844 = !DILocation(line: 2569, column: 21, scope: !9811)
!9845 = !DILocation(line: 2576, column: 5, scope: !9811)
!9846 = !DILocation(line: 2577, column: 18, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9811, file: !1212, line: 2576, column: 10)
!9848 = !DILocation(line: 2579, column: 34, scope: !9811)
!9849 = !DILocation(line: 2579, column: 5, scope: !9847)
!9850 = distinct !{!9850, !9845, !9851}
!9851 = !DILocation(line: 2579, column: 43, scope: !9811)
!9852 = !DILocation(line: 2583, column: 14, scope: !9811)
!9853 = !DILocation(line: 2583, column: 5, scope: !9811)
!9854 = !DILocation(line: 2584, column: 27, scope: !9829)
!9855 = !DILocation(line: 2592, column: 18, scope: !9829)
!9856 = !DILocation(line: 2592, column: 35, scope: !9829)
!9857 = !DILocation(line: 2592, column: 74, scope: !9829)
!9858 = !DILocation(line: 2592, column: 50, scope: !9829)
!9859 = !DILocation(line: 2592, column: 39, scope: !9829)
!9860 = !DILocation(line: 2595, column: 37, scope: !9829)
!9861 = !DILocation(line: 2595, column: 29, scope: !9829)
!9862 = !DILocation(line: 2595, column: 16, scope: !9829)
!9863 = !DILocation(line: 2597, column: 13, scope: !9828)
!9864 = !DILocation(line: 2597, column: 30, scope: !9828)
!9865 = !DILocation(line: 2597, column: 13, scope: !9829)
!9866 = !DILocation(line: 0, scope: !9827)
!9867 = !DILocation(line: 2600, column: 27, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9869, file: !1212, line: 2600, column: 13)
!9869 = distinct !DILexicalBlock(scope: !9827, file: !1212, line: 2600, column: 13)
!9870 = !DILocation(line: 2600, column: 13, scope: !9869)
!9871 = !DILocation(line: 2601, column: 38, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9868, file: !1212, line: 2600, column: 42)
!9873 = !DILocation(line: 2601, column: 17, scope: !9872)
!9874 = !DILocation(line: 2601, column: 36, scope: !9872)
!9875 = !DILocation(line: 2600, column: 38, scope: !9868)
!9876 = distinct !{!9876, !9870, !9877}
!9877 = !DILocation(line: 2602, column: 13, scope: !9869)
!9878 = !DILocation(line: 0, scope: !9829)
!9879 = !DILocation(line: 2606, column: 18, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9829, file: !1212, line: 2606, column: 13)
!9881 = !DILocation(line: 2606, column: 29, scope: !9880)
!9882 = !DILocation(line: 2606, column: 13, scope: !9829)
!9883 = !DILocation(line: 2607, column: 13, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9880, file: !1212, line: 2606, column: 55)
!9885 = !DILocation(line: 2608, column: 9, scope: !9884)
!9886 = !DILocation(line: 2613, column: 16, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9829, file: !1212, line: 2613, column: 13)
!9888 = !DILocation(line: 2613, column: 29, scope: !9887)
!9889 = !DILocation(line: 0, scope: !9887)
!9890 = !DILocation(line: 2613, column: 13, scope: !9829)
!9891 = !DILocation(line: 2614, column: 20, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9887, file: !1212, line: 2613, column: 35)
!9893 = !DILocation(line: 2615, column: 32, scope: !9892)
!9894 = !DILocation(line: 2615, column: 40, scope: !9892)
!9895 = !DILocation(line: 2615, column: 13, scope: !9892)
!9896 = !DILocation(line: 2616, column: 9, scope: !9892)
!9897 = !DILocation(line: 2619, column: 20, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9887, file: !1212, line: 2618, column: 9)
!9899 = !DILocation(line: 2620, column: 32, scope: !9898)
!9900 = !DILocation(line: 2620, column: 40, scope: !9898)
!9901 = !DILocation(line: 2620, column: 13, scope: !9898)
!9902 = !DILocation(line: 2626, column: 21, scope: !9829)
!9903 = !DILocation(line: 2633, column: 37, scope: !9829)
!9904 = !DILocation(line: 2634, column: 45, scope: !9829)
!9905 = !DILocation(line: 2634, column: 42, scope: !9829)
!9906 = !DILocation(line: 2634, column: 40, scope: !9829)
!9907 = !DILocation(line: 2634, column: 58, scope: !9829)
!9908 = !DILocation(line: 2634, column: 29, scope: !9829)
!9909 = !DILocation(line: 2635, column: 28, scope: !9829)
!9910 = !DILocation(line: 2636, column: 9, scope: !9829)
!9911 = !DILocation(line: 2638, column: 26, scope: !9829)
!9912 = !DILocation(line: 2638, column: 9, scope: !9829)
!9913 = !DILocation(line: 2639, column: 29, scope: !9829)
!9914 = !DILocation(line: 2639, column: 9, scope: !9829)
!9915 = !DILocation(line: 2662, column: 9, scope: !9829)
!9916 = !DILocation(line: 2670, column: 9, scope: !9829)
!9917 = !DILocation(line: 2676, column: 89, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9829, file: !1212, line: 2670, column: 13)
!9919 = !DILocation(line: 2676, column: 26, scope: !9918)
!9920 = !DILocation(line: 2678, column: 36, scope: !9829)
!9921 = !DILocation(line: 2678, column: 9, scope: !9918)
!9922 = distinct !{!9922, !9916, !9923}
!9923 = !DILocation(line: 2678, column: 45, scope: !9829)
!9924 = !DILocation(line: 2718, column: 19, scope: !9829)
!9925 = !DILocation(line: 2718, column: 16, scope: !9829)
!9926 = !DILocation(line: 2719, column: 16, scope: !9829)
!9927 = !DILocation(line: 2722, column: 31, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9829, file: !1212, line: 2722, column: 13)
!9929 = !DILocation(line: 2722, column: 13, scope: !9829)
!9930 = distinct !{!9930, !9853, !9931}
!9931 = !DILocation(line: 2725, column: 5, scope: !9811)
!9932 = !DILocation(line: 2748, column: 21, scope: !9811)
!9933 = !DILocation(line: 2755, column: 9, scope: !9811)
!9934 = !DILocation(line: 2757, column: 16, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9811, file: !1212, line: 2757, column: 9)
!9936 = !DILocation(line: 2761, column: 1, scope: !9811)
!9937 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !1212, file: !1212, line: 3019, type: !1692, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9938)
!9938 = !{!9939, !9940}
!9939 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9937, file: !1212, line: 3019, type: !88)
!9940 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9937, file: !1212, line: 3019, type: !61)
!9941 = !DILocation(line: 0, scope: !9937)
!9942 = !DILocation(line: 3021, column: 5, scope: !9937)
!9943 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !1212, file: !1212, line: 3124, type: !1701, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9944)
!9944 = !{!9945, !9946, !9947, !9948, !9949, !9950, !9951, !9952}
!9945 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9943, file: !1212, line: 3124, type: !88)
!9946 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9943, file: !1212, line: 3124, type: !61)
!9947 = !DILocalVariable(name: "result", scope: !9943, file: !1212, line: 3126, type: !1092)
!9948 = !DILocalVariable(name: "savedMask", scope: !9943, file: !1212, line: 3127, type: !61)
!9949 = !DILocalVariable(name: "D", scope: !9943, file: !1212, line: 3128, type: !1382)
!9950 = !DILocalVariable(name: "status_busy", scope: !9943, file: !1212, line: 3129, type: !1434)
!9951 = !DILocalVariable(name: "status_suspend", scope: !9943, file: !1212, line: 3129, type: !1434)
!9952 = !DILocalVariable(name: "check_status", scope: !9953, file: !1212, line: 3141, type: !1434)
!9953 = distinct !DILexicalBlock(scope: !9954, file: !1212, line: 3140, column: 56)
!9954 = distinct !DILexicalBlock(scope: !9943, file: !1212, line: 3140, column: 9)
!9955 = !DILocation(line: 0, scope: !9943)
!9956 = !DILocation(line: 3128, column: 47, scope: !9943)
!9957 = !DILocation(line: 3131, column: 5, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9959, file: !1212, line: 3131, column: 5)
!9959 = distinct !DILexicalBlock(scope: !9943, file: !1212, line: 3131, column: 5)
!9960 = !DILocation(line: 3131, column: 5, scope: !9959)
!9961 = !DILocation(line: 3131, column: 5, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9958, file: !1212, line: 3131, column: 5)
!9963 = !DILocation(line: 3134, column: 50, scope: !9943)
!9964 = !DILocation(line: 3134, column: 55, scope: !9943)
!9965 = !DILocation(line: 3134, column: 22, scope: !9943)
!9966 = !DILocation(line: 3135, column: 50, scope: !9943)
!9967 = !DILocation(line: 3135, column: 55, scope: !9943)
!9968 = !DILocation(line: 3135, column: 22, scope: !9943)
!9969 = !DILocation(line: 3138, column: 17, scope: !9943)
!9970 = !DILocation(line: 3140, column: 32, scope: !9954)
!9971 = !DILocation(line: 3140, column: 29, scope: !9954)
!9972 = !DILocation(line: 3140, column: 27, scope: !9954)
!9973 = !DILocation(line: 3140, column: 11, scope: !9954)
!9974 = !DILocation(line: 3140, column: 9, scope: !9943)
!9975 = !DILocation(line: 3141, column: 34, scope: !9953)
!9976 = !DILocation(line: 3141, column: 60, scope: !9953)
!9977 = !DILocation(line: 3141, column: 58, scope: !9953)
!9978 = !DILocation(line: 0, scope: !9953)
!9979 = !DILocation(line: 3144, column: 37, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9953, file: !1212, line: 3144, column: 13)
!9981 = !DILocation(line: 3144, column: 35, scope: !9980)
!9982 = !DILocation(line: 3144, column: 16, scope: !9980)
!9983 = !DILocation(line: 3144, column: 52, scope: !9980)
!9984 = !DILocation(line: 3145, column: 21, scope: !9980)
!9985 = !DILocation(line: 3145, column: 38, scope: !9980)
!9986 = !DILocation(line: 3147, column: 13, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9988, file: !1212, line: 3147, column: 13)
!9988 = distinct !DILexicalBlock(scope: !9989, file: !1212, line: 3147, column: 13)
!9989 = distinct !DILexicalBlock(scope: !9980, file: !1212, line: 3145, column: 61)
!9990 = !DILocation(line: 3147, column: 13, scope: !9988)
!9991 = !DILocation(line: 3147, column: 13, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9987, file: !1212, line: 3147, column: 13)
!9993 = !DILocation(line: 3150, column: 13, scope: !9989)
!9994 = !DILocation(line: 3151, column: 33, scope: !9989)
!9995 = !DILocation(line: 3153, column: 9, scope: !9989)
!9996 = !DILocation(line: 3155, column: 20, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9998, file: !1212, line: 3155, column: 17)
!9998 = distinct !DILexicalBlock(scope: !9980, file: !1212, line: 3153, column: 16)
!9999 = !DILocation(line: 3155, column: 31, scope: !9997)
!10000 = !DILocation(line: 3155, column: 17, scope: !9998)
!10001 = !DILocation(line: 3156, column: 36, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !9997, file: !1212, line: 3155, column: 54)
!10003 = !DILocation(line: 3156, column: 17, scope: !10002)
!10004 = !DILocation(line: 3157, column: 36, scope: !10002)
!10005 = !DILocation(line: 3157, column: 17, scope: !10002)
!10006 = !DILocation(line: 3158, column: 13, scope: !10002)
!10007 = !DILocation(line: 3191, column: 5, scope: !9943)
!10008 = !DILocation(line: 3193, column: 9, scope: !9943)
!10009 = !DILocation(line: 3160, column: 13, scope: !9998)
!10010 = !DILocation(line: 3173, column: 13, scope: !9998)
!10011 = !DILocation(line: 3194, column: 18, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10013, file: !1212, line: 3193, column: 32)
!10013 = distinct !DILexicalBlock(scope: !9943, file: !1212, line: 3193, column: 9)
!10014 = !DILocation(line: 3195, column: 5, scope: !10012)
!10015 = !DILocation(line: 3197, column: 5, scope: !9943)
!10016 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !1212, file: !1212, line: 3225, type: !1692, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10017)
!10017 = !{!10018, !10019, !10020, !10021, !10022}
!10018 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10016, file: !1212, line: 3225, type: !88)
!10019 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10016, file: !1212, line: 3225, type: !61)
!10020 = !DILocalVariable(name: "D", scope: !10016, file: !1212, line: 3227, type: !1382)
!10021 = !DILocalVariable(name: "status", scope: !10016, file: !1212, line: 3228, type: !1434)
!10022 = !DILocalVariable(name: "savedMask", scope: !10016, file: !1212, line: 3229, type: !61)
!10023 = !DILocation(line: 0, scope: !10016)
!10024 = !DILocation(line: 3227, column: 30, scope: !10016)
!10025 = !DILocation(line: 3231, column: 17, scope: !10016)
!10026 = !DILocation(line: 3234, column: 5, scope: !10016)
!10027 = !DILocation(line: 3238, column: 5, scope: !10016)
!10028 = !DILocation(line: 3239, column: 46, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10016, file: !1212, line: 3238, column: 15)
!10030 = !DILocation(line: 3239, column: 51, scope: !10029)
!10031 = !DILocation(line: 3239, column: 18, scope: !10029)
!10032 = !DILocation(line: 3241, column: 31, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10029, file: !1212, line: 3241, column: 13)
!10034 = !DILocation(line: 3241, column: 28, scope: !10033)
!10035 = !DILocation(line: 3241, column: 26, scope: !10033)
!10036 = !DILocation(line: 3241, column: 15, scope: !10033)
!10037 = !DILocation(line: 3241, column: 13, scope: !10029)
!10038 = distinct !{!10038, !10027, !10039}
!10039 = !DILocation(line: 3244, column: 5, scope: !10016)
!10040 = !DILocation(line: 3246, column: 5, scope: !10016)
!10041 = !DILocation(line: 3248, column: 5, scope: !10016)
!10042 = !DILocation(line: 3250, column: 5, scope: !10016)
!10043 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !1212, file: !1212, line: 3277, type: !1692, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10044)
!10044 = !{!10045, !10046, !10047}
!10045 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10043, file: !1212, line: 3277, type: !88)
!10046 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10043, file: !1212, line: 3277, type: !61)
!10047 = !DILocalVariable(name: "D", scope: !10043, file: !1212, line: 3279, type: !1382)
!10048 = !DILocation(line: 0, scope: !10043)
!10049 = !DILocation(line: 3279, column: 29, scope: !10043)
!10050 = !DILocation(line: 3281, column: 5, scope: !10043)
!10051 = !DILocation(line: 3282, column: 5, scope: !10043)
!10052 = !DILocation(line: 3283, column: 5, scope: !10043)
!10053 = !DILocation(line: 3285, column: 5, scope: !10043)
!10054 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !1212, file: !1212, line: 3332, type: !1718, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10055)
!10055 = !{!10056, !10057, !10058}
!10056 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10054, file: !1212, line: 3332, type: !88)
!10057 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !10054, file: !1212, line: 3332, type: !88)
!10058 = !DILocalVariable(name: "ACTION", arg: 3, scope: !10054, file: !1212, line: 3332, type: !61)
!10059 = !DILocation(line: 0, scope: !10054)
!10060 = !DILocation(line: 3334, column: 5, scope: !10054)
!10061 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !1212, file: !1212, line: 2350, type: !1726, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10062)
!10062 = !{!10063, !10064, !10065, !10066}
!10063 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10061, file: !1212, line: 2350, type: !88)
!10064 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !10061, file: !1212, line: 2350, type: !61)
!10065 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !10061, file: !1212, line: 2350, type: !88)
!10066 = !DILocalVariable(name: "D", scope: !10061, file: !1212, line: 2352, type: !1382)
!10067 = !DILocation(line: 0, scope: !10061)
!10068 = !DILocation(line: 2353, column: 9, scope: !10061)
!10069 = !DILocation(line: 2354, column: 12, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10071, file: !1212, line: 2353, column: 51)
!10071 = distinct !DILexicalBlock(scope: !10061, file: !1212, line: 2353, column: 9)
!10072 = !DILocation(line: 2354, column: 9, scope: !10070)
!10073 = !DILocation(line: 2355, column: 5, scope: !10070)
!10074 = !DILocation(line: 2356, column: 17, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10076, file: !1212, line: 2356, column: 13)
!10076 = distinct !DILexicalBlock(scope: !10077, file: !1212, line: 2355, column: 71)
!10077 = distinct !DILexicalBlock(scope: !10071, file: !1212, line: 2355, column: 16)
!10078 = !DILocation(line: 2356, column: 14, scope: !10075)
!10079 = !DILocation(line: 2356, column: 28, scope: !10075)
!10080 = !DILocation(line: 2356, column: 49, scope: !10075)
!10081 = !DILocation(line: 2356, column: 56, scope: !10075)
!10082 = !DILocation(line: 2356, column: 70, scope: !10075)
!10083 = !DILocation(line: 2356, column: 80, scope: !10075)
!10084 = !DILocation(line: 2356, column: 13, scope: !10076)
!10085 = !DILocation(line: 2361, column: 9, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10087, file: !1212, line: 2361, column: 9)
!10087 = distinct !DILexicalBlock(scope: !10088, file: !1212, line: 2361, column: 9)
!10088 = distinct !DILexicalBlock(scope: !10089, file: !1212, line: 2361, column: 9)
!10089 = distinct !DILexicalBlock(scope: !10077, file: !1212, line: 2359, column: 12)
!10090 = !DILocation(line: 2363, column: 5, scope: !10061)
!10091 = !DILocation(line: 2364, column: 1, scope: !10061)
!10092 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !1212, file: !1212, line: 3355, type: !1484, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10093)
!10093 = !{!10094, !10095, !10096}
!10094 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10092, file: !1212, line: 3355, type: !88)
!10095 = !DILocalVariable(name: "D", scope: !10092, file: !1212, line: 3357, type: !1382)
!10096 = !DILocalVariable(name: "status", scope: !10092, file: !1212, line: 3358, type: !975)
!10097 = !DILocation(line: 0, scope: !10092)
!10098 = !DILocation(line: 3366, column: 12, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10092, file: !1212, line: 3366, column: 9)
!10100 = !DILocation(line: 3366, column: 17, scope: !10099)
!10101 = !DILocation(line: 3366, column: 9, scope: !10099)
!10102 = !DILocation(line: 3366, column: 9, scope: !10092)
!10103 = !DILocation(line: 3357, column: 25, scope: !10092)
!10104 = !DILocation(line: 3367, column: 18, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10099, file: !1212, line: 3366, column: 33)
!10106 = !DILocation(line: 3368, column: 25, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10105, file: !1212, line: 3368, column: 13)
!10108 = !DILocation(line: 3368, column: 22, scope: !10107)
!10109 = !DILocation(line: 3368, column: 20, scope: !10107)
!10110 = !DILocation(line: 3368, column: 13, scope: !10105)
!10111 = !DILocation(line: 3373, column: 5, scope: !10092)
!10112 = !DILocation(line: 3374, column: 1, scope: !10092)
!10113 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !1212, file: !1212, line: 3044, type: !10114, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10116)
!10114 = !DISubroutineType(types: !10115)
!10115 = !{!1092, !88, !61, !460}
!10116 = !{!10117, !10118, !10119, !10120, !10121, !10122, !10123, !10124}
!10117 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10113, file: !1212, line: 3044, type: !88)
!10118 = !DILocalVariable(name: "addr", arg: 2, scope: !10113, file: !1212, line: 3044, type: !61)
!10119 = !DILocalVariable(name: "data", arg: 3, scope: !10113, file: !1212, line: 3044, type: !460)
!10120 = !DILocalVariable(name: "savedMask", scope: !10113, file: !1212, line: 3046, type: !61)
!10121 = !DILocalVariable(name: "D", scope: !10113, file: !1212, line: 3047, type: !1382)
!10122 = !DILocalVariable(name: "result", scope: !10113, file: !1212, line: 3048, type: !1092)
!10123 = !DILocalVariable(name: "check_data", scope: !10113, file: !1212, line: 3049, type: !460)
!10124 = !DILocalVariable(name: "status_busy", scope: !10113, file: !1212, line: 3050, type: !975)
!10125 = !DILocation(line: 0, scope: !10113)
!10126 = !DILocation(line: 3047, column: 43, scope: !10113)
!10127 = !DILocation(line: 3053, column: 47, scope: !10113)
!10128 = !DILocation(line: 3053, column: 52, scope: !10113)
!10129 = !DILocation(line: 3053, column: 19, scope: !10113)
!10130 = !DILocation(line: 3056, column: 9, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10113, file: !1212, line: 3056, column: 9)
!10132 = !DILocation(line: 3056, column: 9, scope: !10113)
!10133 = !DILocation(line: 3058, column: 9, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10135, file: !1212, line: 3058, column: 9)
!10135 = distinct !DILexicalBlock(scope: !10136, file: !1212, line: 3058, column: 9)
!10136 = distinct !DILexicalBlock(scope: !10131, file: !1212, line: 3056, column: 28)
!10137 = !DILocation(line: 3058, column: 9, scope: !10135)
!10138 = !DILocation(line: 3058, column: 9, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10134, file: !1212, line: 3058, column: 9)
!10140 = !DILocation(line: 3060, column: 9, scope: !10136)
!10141 = !DILocation(line: 3062, column: 29, scope: !10136)
!10142 = !DILocation(line: 3063, column: 5, scope: !10136)
!10143 = !DILocation(line: 3065, column: 38, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10131, file: !1212, line: 3065, column: 15)
!10145 = !DILocation(line: 3065, column: 35, scope: !10144)
!10146 = !DILocation(line: 3065, column: 33, scope: !10144)
!10147 = !DILocation(line: 3065, column: 17, scope: !10144)
!10148 = !DILocation(line: 3065, column: 15, scope: !10131)
!10149 = !DILocation(line: 3066, column: 21, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10144, file: !1212, line: 3065, column: 62)
!10151 = !DILocation(line: 3068, column: 9, scope: !10150)
!10152 = !DILocation(line: 3071, column: 23, scope: !10150)
!10153 = !DILocation(line: 3071, column: 22, scope: !10150)
!10154 = !DILocation(line: 3073, column: 24, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10150, file: !1212, line: 3073, column: 13)
!10156 = !DILocation(line: 3073, column: 13, scope: !10150)
!10157 = !DILocation(line: 3078, column: 16, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10159, file: !1212, line: 3078, column: 16)
!10159 = distinct !DILexicalBlock(scope: !10155, file: !1212, line: 3075, column: 16)
!10160 = !DILocation(line: 3078, column: 16, scope: !10159)
!10161 = !DILocation(line: 3081, column: 58, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10158, file: !1212, line: 3078, column: 46)
!10163 = !DILocation(line: 3081, column: 17, scope: !10162)
!10164 = !DILocation(line: 3082, column: 22, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10162, file: !1212, line: 3082, column: 21)
!10166 = !DILocation(line: 3082, column: 49, scope: !10165)
!10167 = !DILocation(line: 3082, column: 21, scope: !10162)
!10168 = !DILocation(line: 3088, column: 9, scope: !10150)
!10169 = !DILocation(line: 3091, column: 9, scope: !10113)
!10170 = !DILocation(line: 3092, column: 13, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10172, file: !1212, line: 3092, column: 13)
!10172 = distinct !DILexicalBlock(scope: !10113, file: !1212, line: 3091, column: 9)
!10173 = !DILocation(line: 3092, column: 33, scope: !10171)
!10174 = !DILocation(line: 3092, column: 13, scope: !10172)
!10175 = !DILocation(line: 3106, column: 5, scope: !10113)
!10176 = !DILocation(line: 3107, column: 1, scope: !10113)
!10177 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !1212, file: !1212, line: 3497, type: !10178, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10180)
!10178 = !DISubroutineType(types: !10179)
!10179 = !{null, !1382, !61}
!10180 = !{!10181, !10182, !10183}
!10181 = !DILocalVariable(name: "D", arg: 1, scope: !10177, file: !1212, line: 3497, type: !1382)
!10182 = !DILocalVariable(name: "addr", arg: 2, scope: !10177, file: !1212, line: 3497, type: !61)
!10183 = !DILocalVariable(name: "savedMask", scope: !10177, file: !1212, line: 3499, type: !61)
!10184 = !DILocation(line: 0, scope: !10177)
!10185 = !DILocation(line: 3501, column: 14, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10177, file: !1212, line: 3501, column: 9)
!10187 = !DILocation(line: 3501, column: 25, scope: !10186)
!10188 = !DILocation(line: 3501, column: 9, scope: !10177)
!10189 = !DILocation(line: 3502, column: 9, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10186, file: !1212, line: 3501, column: 51)
!10191 = !DILocation(line: 3503, column: 5, scope: !10190)
!10192 = !DILocation(line: 3507, column: 17, scope: !10177)
!10193 = !DILocation(line: 3516, column: 5, scope: !10177)
!10194 = !DILocation(line: 3517, column: 31, scope: !10177)
!10195 = !DILocation(line: 3517, column: 38, scope: !10177)
!10196 = !DILocation(line: 3517, column: 43, scope: !10177)
!10197 = !DILocation(line: 3517, column: 59, scope: !10177)
!10198 = !DILocation(line: 3517, column: 56, scope: !10177)
!10199 = !DILocation(line: 3517, column: 5, scope: !10177)
!10200 = !DILocation(line: 3523, column: 5, scope: !10177)
!10201 = !DILocation(line: 3524, column: 1, scope: !10177)
!10202 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !1212, file: !1212, line: 2018, type: !9303, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10203)
!10203 = !{!10204, !10205, !10206}
!10204 = !DILocalVariable(name: "driver", arg: 1, scope: !10202, file: !1212, line: 2018, type: !9305)
!10205 = !DILocalVariable(name: "D", arg: 2, scope: !10202, file: !1212, line: 2018, type: !1382)
!10206 = !DILocalVariable(name: "result", scope: !10202, file: !1212, line: 2020, type: !1092)
!10207 = !DILocation(line: 0, scope: !10202)
!10208 = !DILocation(line: 2022, column: 13, scope: !10202)
!10209 = !DILocation(line: 2022, column: 5, scope: !10202)
!10210 = !DILocation(line: 2031, column: 16, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10202, file: !1212, line: 2022, column: 31)
!10212 = !DILocation(line: 2031, column: 27, scope: !10211)
!10213 = !DILocation(line: 2033, column: 22, scope: !10211)
!10214 = !DILocation(line: 2034, column: 13, scope: !10211)
!10215 = !DILocation(line: 2049, column: 16, scope: !10211)
!10216 = !DILocation(line: 2049, column: 27, scope: !10211)
!10217 = !DILocation(line: 2051, column: 23, scope: !10211)
!10218 = !DILocation(line: 2053, column: 13, scope: !10211)
!10219 = !DILocation(line: 2058, column: 22, scope: !10211)
!10220 = !DILocation(line: 2059, column: 13, scope: !10211)
!10221 = !DILocation(line: 2079, column: 13, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10223, file: !1212, line: 2079, column: 13)
!10223 = distinct !DILexicalBlock(scope: !10224, file: !1212, line: 2079, column: 13)
!10224 = distinct !DILexicalBlock(scope: !10211, file: !1212, line: 2079, column: 13)
!10225 = !DILocation(line: 2083, column: 5, scope: !10202)
!10226 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !1212, file: !1212, line: 2100, type: !10227, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10229)
!10227 = !DISubroutineType(types: !10228)
!10228 = !{!1092, !9305, !1382, !61, !61}
!10229 = !{!10230, !10231, !10232, !10233, !10234}
!10230 = !DILocalVariable(name: "driver", arg: 1, scope: !10226, file: !1212, line: 2100, type: !9305)
!10231 = !DILocalVariable(name: "D", arg: 2, scope: !10226, file: !1212, line: 2100, type: !1382)
!10232 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !10226, file: !1212, line: 2100, type: !61)
!10233 = !DILocalVariable(name: "parameter", arg: 4, scope: !10226, file: !1212, line: 2100, type: !61)
!10234 = !DILocalVariable(name: "result", scope: !10226, file: !1212, line: 2102, type: !1092)
!10235 = !DILocation(line: 0, scope: !10226)
!10236 = !DILocation(line: 2105, column: 16, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10226, file: !1212, line: 2105, column: 9)
!10238 = !DILocation(line: 2105, column: 24, scope: !10237)
!10239 = !DILocation(line: 2109, column: 12, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10226, file: !1212, line: 2109, column: 9)
!10241 = !DILocation(line: 2109, column: 16, scope: !10240)
!10242 = !DILocation(line: 2109, column: 24, scope: !10240)
!10243 = !DILocation(line: 2109, column: 30, scope: !10240)
!10244 = !DILocation(line: 2109, column: 40, scope: !10240)
!10245 = !DILocation(line: 2109, column: 9, scope: !10226)
!10246 = !DILocation(line: 2118, column: 19, scope: !10226)
!10247 = !DILocation(line: 2118, column: 8, scope: !10226)
!10248 = !DILocation(line: 2118, column: 17, scope: !10226)
!10249 = !DILocation(line: 2119, column: 23, scope: !10226)
!10250 = !DILocation(line: 2119, column: 8, scope: !10226)
!10251 = !DILocation(line: 2119, column: 21, scope: !10226)
!10252 = !DILocation(line: 2122, column: 5, scope: !10226)
!10253 = !DILocation(line: 2125, column: 8, scope: !10226)
!10254 = !DILocation(line: 2125, column: 13, scope: !10226)
!10255 = !DILocation(line: 2125, column: 24, scope: !10226)
!10256 = !DILocation(line: 2126, column: 26, scope: !10226)
!10257 = !DILocation(line: 2126, column: 5, scope: !10226)
!10258 = !DILocation(line: 2128, column: 9, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10226, file: !1212, line: 2128, column: 9)
!10260 = !DILocation(line: 2128, column: 31, scope: !10259)
!10261 = !DILocation(line: 2128, column: 60, scope: !10259)
!10262 = !DILocation(line: 2128, column: 9, scope: !10226)
!10263 = !DILocation(line: 2129, column: 12, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10259, file: !1212, line: 2128, column: 110)
!10265 = !DILocation(line: 2129, column: 17, scope: !10264)
!10266 = !DILocation(line: 2129, column: 28, scope: !10264)
!10267 = !DILocation(line: 2130, column: 9, scope: !10264)
!10268 = !DILocation(line: 2131, column: 5, scope: !10264)
!10269 = !DILocation(line: 2134, column: 14, scope: !10226)
!10270 = !DILocation(line: 2136, column: 5, scope: !10226)
!10271 = !DILocation(line: 2137, column: 1, scope: !10226)
!10272 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !1212, file: !1212, line: 3387, type: !10273, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10275)
!10273 = !DISubroutineType(types: !10274)
!10274 = !{null, !1382, !762}
!10275 = !{!10276, !10277, !10278}
!10276 = !DILocalVariable(name: "D", arg: 1, scope: !10272, file: !1212, line: 3387, type: !1382)
!10277 = !DILocalVariable(name: "id", arg: 2, scope: !10272, file: !1212, line: 3387, type: !762)
!10278 = !DILocalVariable(name: "cmd", scope: !10272, file: !1212, line: 3389, type: !460)
!10279 = !DILocation(line: 0, scope: !10272)
!10280 = !DILocation(line: 3389, column: 5, scope: !10272)
!10281 = !DILocation(line: 3405, column: 9, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10272, file: !1212, line: 3405, column: 9)
!10283 = !DILocation(line: 3405, column: 21, scope: !10282)
!10284 = !DILocation(line: 0, scope: !10282)
!10285 = !DILocation(line: 3405, column: 9, scope: !10272)
!10286 = !DILocation(line: 3411, column: 31, scope: !10272)
!10287 = !DILocation(line: 3411, column: 5, scope: !10272)
!10288 = !DILocation(line: 3412, column: 1, scope: !10272)
!10289 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !1212, file: !1212, line: 3585, type: !10290, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !10292)
!10290 = !DISubroutineType(types: !10291)
!10291 = !{null, !974, !762, !762, !974, !974}
!10292 = !{!10293, !10294, !10295, !10296, !10297, !10298}
!10293 = !DILocalVariable(name: "CS", arg: 1, scope: !10289, file: !1212, line: 3585, type: !974)
!10294 = !DILocalVariable(name: "cmd", arg: 2, scope: !10289, file: !1212, line: 3585, type: !762)
!10295 = !DILocalVariable(name: "data", arg: 3, scope: !10289, file: !1212, line: 3585, type: !762)
!10296 = !DILocalVariable(name: "outl", arg: 4, scope: !10289, file: !1212, line: 3585, type: !974)
!10297 = !DILocalVariable(name: "inl", arg: 5, scope: !10289, file: !1212, line: 3585, type: !974)
!10298 = !DILocalVariable(name: "savedMask", scope: !10289, file: !1212, line: 3587, type: !61)
!10299 = !DILocation(line: 0, scope: !10289)
!10300 = !DILocation(line: 3589, column: 17, scope: !10289)
!10301 = !DILocation(line: 3590, column: 5, scope: !10289)
!10302 = !DILocation(line: 3591, column: 5, scope: !10289)
!10303 = !DILocation(line: 3593, column: 1, scope: !10289)
!10304 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !1537, file: !1537, line: 110, type: !8550, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1536, retainedNodes: !10305)
!10305 = !{!10306, !10307, !10308, !10309}
!10306 = !DILocalVariable(name: "id", arg: 1, scope: !10304, file: !1537, line: 110, type: !762)
!10307 = !DILocalVariable(name: "i", scope: !10304, file: !1537, line: 114, type: !1092)
!10308 = !DILocalVariable(name: "j", scope: !10304, file: !1537, line: 114, type: !1092)
!10309 = !DILocalVariable(name: "id_list", scope: !10304, file: !1537, line: 115, type: !10310)
!10310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10311, size: 32)
!10311 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1615)
!10312 = !DILocation(line: 0, scope: !10304)
!10313 = !DILocation(line: 119, column: 5, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10304, file: !1537, line: 119, column: 5)
!10315 = !DILocation(line: 119, column: 46, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10314, file: !1537, line: 119, column: 5)
!10317 = !DILocation(line: 119, column: 19, scope: !10316)
!10318 = distinct !{!10318, !10313, !10319}
!10319 = !DILocation(line: 131, column: 5, scope: !10314)
!10320 = !DILocation(line: 121, column: 23, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10322, file: !1537, line: 121, column: 9)
!10322 = distinct !DILexicalBlock(scope: !10323, file: !1537, line: 121, column: 9)
!10323 = distinct !DILexicalBlock(scope: !10316, file: !1537, line: 119, column: 50)
!10324 = !DILocation(line: 121, column: 9, scope: !10322)
!10325 = !DILocation(line: 122, column: 17, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10327, file: !1537, line: 122, column: 17)
!10327 = distinct !DILexicalBlock(scope: !10321, file: !1537, line: 121, column: 51)
!10328 = !DILocation(line: 122, column: 37, scope: !10326)
!10329 = !DILocation(line: 122, column: 34, scope: !10326)
!10330 = !DILocation(line: 122, column: 17, scope: !10327)
!10331 = !DILocation(line: 121, column: 47, scope: !10321)
!10332 = distinct !{!10332, !10324, !10333}
!10333 = !DILocation(line: 125, column: 9, scope: !10322)
!10334 = !DILocation(line: 0, scope: !10322)
!10335 = !DILocation(line: 127, column: 15, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10323, file: !1537, line: 127, column: 13)
!10337 = !DILocation(line: 127, column: 13, scope: !10323)
!10338 = !DILocation(line: 134, column: 1, scope: !10304)
!10339 = distinct !DISubprogram(name: "CMEM_Index", scope: !1537, file: !1537, line: 153, type: !8705, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1536, retainedNodes: !10340)
!10340 = !{!10341, !10342, !10343, !10349}
!10341 = !DILocalVariable(name: "i", scope: !10339, file: !1537, line: 156, type: !1092)
!10342 = !DILocalVariable(name: "j", scope: !10339, file: !1537, line: 156, type: !1092)
!10343 = !DILocalVariable(name: "id", scope: !10339, file: !1537, line: 157, type: !10344)
!10344 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1608, line: 89, baseType: !10345)
!10345 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1608, line: 86, size: 64, elements: !10346)
!10346 = !{!10347, !10348}
!10347 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !10345, file: !1608, line: 87, baseType: !1621, size: 64)
!10348 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !10345, file: !1608, line: 88, baseType: !994, size: 64)
!10349 = !DILocalVariable(name: "id_list", scope: !10339, file: !1537, line: 158, type: !10310)
!10350 = !DILocation(line: 157, column: 5, scope: !10339)
!10351 = !DILocation(line: 157, column: 17, scope: !10339)
!10352 = !DILocation(line: 0, scope: !10339)
!10353 = !DILocation(line: 161, column: 9, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10339, file: !1537, line: 161, column: 9)
!10355 = !DILocation(line: 161, column: 20, scope: !10354)
!10356 = !DILocation(line: 161, column: 9, scope: !10339)
!10357 = !DILocation(line: 172, column: 58, scope: !10339)
!10358 = !DILocation(line: 172, column: 5, scope: !10339)
!10359 = !DILocation(line: 178, column: 5, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10339, file: !1537, line: 178, column: 5)
!10361 = !DILocation(line: 180, column: 23, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10363, file: !1537, line: 180, column: 9)
!10363 = distinct !DILexicalBlock(scope: !10364, file: !1537, line: 180, column: 9)
!10364 = distinct !DILexicalBlock(scope: !10365, file: !1537, line: 178, column: 53)
!10365 = distinct !DILexicalBlock(scope: !10360, file: !1537, line: 178, column: 5)
!10366 = !DILocation(line: 180, column: 9, scope: !10363)
!10367 = !DILocation(line: 181, column: 17, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10369, file: !1537, line: 181, column: 17)
!10369 = distinct !DILexicalBlock(scope: !10362, file: !1537, line: 180, column: 51)
!10370 = !DILocation(line: 181, column: 37, scope: !10368)
!10371 = !DILocation(line: 181, column: 34, scope: !10368)
!10372 = !DILocation(line: 181, column: 17, scope: !10369)
!10373 = !DILocation(line: 180, column: 47, scope: !10362)
!10374 = distinct !{!10374, !10366, !10375}
!10375 = !DILocation(line: 184, column: 9, scope: !10363)
!10376 = !DILocation(line: 0, scope: !10363)
!10377 = !DILocation(line: 186, column: 15, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10364, file: !1537, line: 186, column: 13)
!10379 = !DILocation(line: 186, column: 13, scope: !10364)
!10380 = !DILocation(line: 188, column: 26, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10378, file: !1537, line: 186, column: 41)
!10382 = !DILocation(line: 188, column: 24, scope: !10381)
!10383 = !DILocation(line: 189, column: 13, scope: !10381)
!10384 = !DILocation(line: 178, column: 46, scope: !10365)
!10385 = !DILocation(line: 178, column: 19, scope: !10365)
!10386 = distinct !{!10386, !10359, !10387}
!10387 = !DILocation(line: 191, column: 5, scope: !10360)
!10388 = !DILocation(line: 222, column: 12, scope: !10339)
!10389 = !DILocation(line: 223, column: 1, scope: !10339)
!10390 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !1537, file: !1537, line: 240, type: !10391, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1536, retainedNodes: !10393)
!10391 = !DISubroutineType(types: !10392)
!10392 = !{!10310, !61}
!10393 = !{!10394}
!10394 = !DILocalVariable(name: "index", arg: 1, scope: !10390, file: !1537, line: 240, type: !61)
!10395 = !DILocation(line: 0, scope: !10390)
!10396 = !DILocation(line: 242, column: 13, scope: !10390)
!10397 = !DILocation(line: 242, column: 5, scope: !10390)
!10398 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !1537, file: !1537, line: 254, type: !10399, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1536, retainedNodes: !10401)
!10399 = !DISubroutineType(types: !10400)
!10400 = !{null, !974, !88, !1185}
!10401 = !{!10402, !10403, !10404, !10405, !10407, !10408}
!10402 = !DILocalVariable(name: "CS", arg: 1, scope: !10398, file: !1537, line: 254, type: !974)
!10403 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !10398, file: !1537, line: 254, type: !88)
!10404 = !DILocalVariable(name: "flashid", arg: 3, scope: !10398, file: !1537, line: 254, type: !1185)
!10405 = !DILocalVariable(name: "cmd", scope: !10406, file: !1537, line: 258, type: !460)
!10406 = distinct !DILexicalBlock(scope: !10398, file: !1537, line: 257, column: 5)
!10407 = !DILocalVariable(name: "id", scope: !10406, file: !1537, line: 258, type: !1472)
!10408 = !DILocalVariable(name: "i", scope: !10406, file: !1537, line: 258, type: !460)
!10409 = !DILocation(line: 0, scope: !10398)
!10410 = !DILocation(line: 258, column: 9, scope: !10406)
!10411 = !DILocation(line: 258, column: 22, scope: !10406)
!10412 = !DILocation(line: 0, scope: !10406)
!10413 = !DILocation(line: 260, column: 13, scope: !10406)
!10414 = !DILocation(line: 261, column: 9, scope: !10406)
!10415 = !DILocation(line: 263, column: 13, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10406, file: !1537, line: 263, column: 13)
!10417 = !DILocation(line: 263, column: 27, scope: !10416)
!10418 = !DILocation(line: 263, column: 48, scope: !10416)
!10419 = !DILocation(line: 263, column: 13, scope: !10406)
!10420 = !DILocation(line: 264, column: 17, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10416, file: !1537, line: 263, column: 95)
!10422 = !DILocation(line: 265, column: 13, scope: !10421)
!10423 = !DILocation(line: 266, column: 9, scope: !10421)
!10424 = !DILocation(line: 268, column: 9, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10406, file: !1537, line: 268, column: 9)
!10426 = !DILocation(line: 269, column: 26, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10428, file: !1537, line: 268, column: 50)
!10428 = distinct !DILexicalBlock(scope: !10425, file: !1537, line: 268, column: 9)
!10429 = !DILocation(line: 269, column: 13, scope: !10427)
!10430 = !DILocation(line: 269, column: 24, scope: !10427)
!10431 = !DILocation(line: 268, column: 46, scope: !10428)
!10432 = !DILocation(line: 268, column: 23, scope: !10428)
!10433 = distinct !{!10433, !10424, !10434}
!10434 = !DILocation(line: 270, column: 9, scope: !10425)
!10435 = !DILocation(line: 271, column: 5, scope: !10398)
!10436 = !DILocation(line: 272, column: 5, scope: !10398)
!10437 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !1537, file: !1537, line: 285, type: !8550, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1536, retainedNodes: !10438)
!10438 = !{!10439, !10440, !10441, !10442}
!10439 = !DILocalVariable(name: "id", arg: 1, scope: !10437, file: !1537, line: 285, type: !762)
!10440 = !DILocalVariable(name: "i", scope: !10437, file: !1537, line: 289, type: !1092)
!10441 = !DILocalVariable(name: "j", scope: !10437, file: !1537, line: 289, type: !1092)
!10442 = !DILocalVariable(name: "id_list", scope: !10437, file: !1537, line: 290, type: !10310)
!10443 = !DILocation(line: 0, scope: !10437)
!10444 = !DILocation(line: 294, column: 5, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10437, file: !1537, line: 294, column: 5)
!10446 = !DILocation(line: 294, column: 46, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10445, file: !1537, line: 294, column: 5)
!10448 = !DILocation(line: 294, column: 19, scope: !10447)
!10449 = distinct !{!10449, !10444, !10450}
!10450 = !DILocation(line: 306, column: 5, scope: !10445)
!10451 = !DILocation(line: 296, column: 23, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10453, file: !1537, line: 296, column: 9)
!10453 = distinct !DILexicalBlock(scope: !10454, file: !1537, line: 296, column: 9)
!10454 = distinct !DILexicalBlock(scope: !10447, file: !1537, line: 294, column: 53)
!10455 = !DILocation(line: 296, column: 9, scope: !10453)
!10456 = !DILocation(line: 297, column: 17, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10458, file: !1537, line: 297, column: 17)
!10458 = distinct !DILexicalBlock(scope: !10452, file: !1537, line: 296, column: 51)
!10459 = !DILocation(line: 297, column: 37, scope: !10457)
!10460 = !DILocation(line: 297, column: 34, scope: !10457)
!10461 = !DILocation(line: 297, column: 17, scope: !10458)
!10462 = !DILocation(line: 296, column: 47, scope: !10452)
!10463 = distinct !{!10463, !10455, !10464}
!10464 = !DILocation(line: 300, column: 9, scope: !10453)
!10465 = !DILocation(line: 0, scope: !10453)
!10466 = !DILocation(line: 302, column: 15, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10454, file: !1537, line: 302, column: 13)
!10468 = !DILocation(line: 302, column: 13, scope: !10454)
!10469 = !DILocation(line: 310, column: 1, scope: !10437)
!10470 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !1537, file: !1537, line: 328, type: !8705, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1536, retainedNodes: !10471)
!10471 = !{!10472, !10473, !10474, !10475}
!10472 = !DILocalVariable(name: "i", scope: !10470, file: !1537, line: 331, type: !1092)
!10473 = !DILocalVariable(name: "j", scope: !10470, file: !1537, line: 331, type: !1092)
!10474 = !DILocalVariable(name: "id", scope: !10470, file: !1537, line: 332, type: !10344)
!10475 = !DILocalVariable(name: "id_list", scope: !10470, file: !1537, line: 333, type: !10310)
!10476 = !DILocation(line: 332, column: 5, scope: !10470)
!10477 = !DILocation(line: 332, column: 17, scope: !10470)
!10478 = !DILocation(line: 0, scope: !10470)
!10479 = !DILocation(line: 336, column: 9, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10470, file: !1537, line: 336, column: 9)
!10481 = !DILocation(line: 336, column: 28, scope: !10480)
!10482 = !DILocation(line: 336, column: 9, scope: !10470)
!10483 = !DILocation(line: 344, column: 60, scope: !10470)
!10484 = !DILocation(line: 344, column: 5, scope: !10470)
!10485 = !DILocation(line: 350, column: 5, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10470, file: !1537, line: 350, column: 5)
!10487 = !DILocation(line: 352, column: 23, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10489, file: !1537, line: 352, column: 9)
!10489 = distinct !DILexicalBlock(scope: !10490, file: !1537, line: 352, column: 9)
!10490 = distinct !DILexicalBlock(scope: !10491, file: !1537, line: 350, column: 53)
!10491 = distinct !DILexicalBlock(scope: !10486, file: !1537, line: 350, column: 5)
!10492 = !DILocation(line: 352, column: 9, scope: !10489)
!10493 = !DILocation(line: 353, column: 17, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10495, file: !1537, line: 353, column: 17)
!10495 = distinct !DILexicalBlock(scope: !10488, file: !1537, line: 352, column: 51)
!10496 = !DILocation(line: 353, column: 37, scope: !10494)
!10497 = !DILocation(line: 353, column: 34, scope: !10494)
!10498 = !DILocation(line: 353, column: 17, scope: !10495)
!10499 = !DILocation(line: 352, column: 47, scope: !10488)
!10500 = distinct !{!10500, !10492, !10501}
!10501 = !DILocation(line: 356, column: 9, scope: !10489)
!10502 = !DILocation(line: 0, scope: !10489)
!10503 = !DILocation(line: 358, column: 15, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10490, file: !1537, line: 358, column: 13)
!10505 = !DILocation(line: 358, column: 13, scope: !10490)
!10506 = !DILocation(line: 360, column: 34, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10504, file: !1537, line: 358, column: 41)
!10508 = !DILocation(line: 360, column: 32, scope: !10507)
!10509 = !DILocation(line: 361, column: 13, scope: !10507)
!10510 = !DILocation(line: 350, column: 46, scope: !10491)
!10511 = !DILocation(line: 350, column: 19, scope: !10491)
!10512 = distinct !{!10512, !10485, !10513}
!10513 = !DILocation(line: 363, column: 5, scope: !10486)
!10514 = !DILocation(line: 364, column: 12, scope: !10470)
!10515 = !DILocation(line: 365, column: 1, scope: !10470)
!10516 = distinct !DISubprogram(name: "NOR_ReadID", scope: !2731, file: !2731, line: 64, type: !10517, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2730, retainedNodes: !10523)
!10517 = !DISubroutineType(types: !10518)
!10518 = !{null, !974, !10519, !1185}
!10519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10520, size: 32)
!10520 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !10521)
!10521 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !10522, line: 158, baseType: !975)
!10522 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!10523 = !{!10524, !10525, !10526, !10527, !10528, !10530, !10531}
!10524 = !DILocalVariable(name: "CS", arg: 1, scope: !10516, file: !2731, line: 64, type: !974)
!10525 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !10516, file: !2731, line: 64, type: !10519)
!10526 = !DILocalVariable(name: "flashid", arg: 3, scope: !10516, file: !2731, line: 64, type: !1185)
!10527 = !DILocalVariable(name: "savedMask", scope: !10516, file: !2731, line: 66, type: !61)
!10528 = !DILocalVariable(name: "cmd", scope: !10529, file: !2731, line: 70, type: !460)
!10529 = distinct !DILexicalBlock(scope: !10516, file: !2731, line: 69, column: 5)
!10530 = !DILocalVariable(name: "id", scope: !10529, file: !2731, line: 70, type: !1472)
!10531 = !DILocalVariable(name: "i", scope: !10529, file: !2731, line: 70, type: !460)
!10532 = !DILocation(line: 0, scope: !10516)
!10533 = !DILocation(line: 70, column: 9, scope: !10529)
!10534 = !DILocation(line: 70, column: 22, scope: !10529)
!10535 = !DILocation(line: 0, scope: !10529)
!10536 = !DILocation(line: 72, column: 13, scope: !10529)
!10537 = !DILocation(line: 73, column: 21, scope: !10529)
!10538 = !DILocation(line: 74, column: 9, scope: !10529)
!10539 = !DILocation(line: 75, column: 9, scope: !10529)
!10540 = !DILocation(line: 77, column: 13, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10529, file: !2731, line: 77, column: 13)
!10542 = !DILocation(line: 77, column: 27, scope: !10541)
!10543 = !DILocation(line: 77, column: 48, scope: !10541)
!10544 = !DILocation(line: 77, column: 13, scope: !10529)
!10545 = !DILocation(line: 78, column: 17, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10541, file: !2731, line: 77, column: 87)
!10547 = !DILocation(line: 79, column: 25, scope: !10546)
!10548 = !DILocation(line: 80, column: 13, scope: !10546)
!10549 = !DILocation(line: 81, column: 13, scope: !10546)
!10550 = !DILocation(line: 82, column: 9, scope: !10546)
!10551 = !DILocation(line: 84, column: 9, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10529, file: !2731, line: 84, column: 9)
!10553 = !DILocation(line: 85, column: 26, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10555, file: !2731, line: 84, column: 50)
!10555 = distinct !DILexicalBlock(scope: !10552, file: !2731, line: 84, column: 9)
!10556 = !DILocation(line: 85, column: 13, scope: !10554)
!10557 = !DILocation(line: 85, column: 24, scope: !10554)
!10558 = !DILocation(line: 84, column: 46, scope: !10555)
!10559 = !DILocation(line: 84, column: 23, scope: !10555)
!10560 = distinct !{!10560, !10551, !10561}
!10561 = !DILocation(line: 86, column: 9, scope: !10552)
!10562 = !DILocation(line: 87, column: 5, scope: !10516)
!10563 = !DILocation(line: 89, column: 1, scope: !10516)
!10564 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !1625, file: !1625, line: 248, type: !3931, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10565 = !DILocation(line: 250, column: 5, scope: !10564)
!10566 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !1625, file: !1625, line: 270, type: !3931, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10567 = !DILocation(line: 272, column: 5, scope: !10566)
!10568 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !1625, file: !1625, line: 294, type: !291, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10569 = !DILocation(line: 296, column: 5, scope: !10568)
!10570 = !DILocation(line: 297, column: 5, scope: !10568)
!10571 = distinct !DISubprogram(name: "nor_sweep_device", scope: !1625, file: !1625, line: 304, type: !291, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10572 = !DILocation(line: 309, column: 5, scope: !10571)
!10573 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !1625, file: !1625, line: 312, type: !291, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10574 = !DILocation(line: 317, column: 5, scope: !10573)
!10575 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !1625, file: !1625, line: 334, type: !3931, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10576 = !DILocation(line: 336, column: 5, scope: !10575)
!10577 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !1625, file: !1625, line: 353, type: !3931, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10578 = !DILocation(line: 355, column: 5, scope: !10577)
!10579 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !1625, file: !1625, line: 374, type: !291, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10580 = !DILocation(line: 376, column: 5, scope: !10579)
!10581 = !DILocation(line: 377, column: 1, scope: !10579)
!10582 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !1625, file: !1625, line: 395, type: !3931, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10583 = !DILocation(line: 397, column: 5, scope: !10582)
!10584 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !1625, file: !1625, line: 416, type: !3931, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!10585 = !DILocation(line: 418, column: 5, scope: !10584)
!10586 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !1636, file: !1636, line: 254, type: !3931, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !293)
!10587 = !DILocation(line: 256, column: 32, scope: !10586)
!10588 = !DILocation(line: 257, column: 5, scope: !10586)
!10589 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !1636, file: !1636, line: 269, type: !8705, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !293)
!10590 = !DILocation(line: 275, column: 24, scope: !10589)
!10591 = !DILocation(line: 278, column: 24, scope: !10589)
!10592 = !DILocation(line: 278, column: 33, scope: !10589)
!10593 = !DILocation(line: 278, column: 49, scope: !10589)
!10594 = !DILocation(line: 278, column: 22, scope: !10589)
!10595 = !DILocation(line: 281, column: 5, scope: !10589)
!10596 = !DILocation(line: 283, column: 34, scope: !10589)
!10597 = !DILocation(line: 283, column: 23, scope: !10589)
!10598 = !DILocation(line: 286, column: 25, scope: !10589)
!10599 = !DILocation(line: 321, column: 5, scope: !10589)
!10600 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !1636, file: !1636, line: 332, type: !8705, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10601)
!10601 = !{!10602}
!10602 = !DILocalVariable(name: "result", scope: !10600, file: !1636, line: 334, type: !1092)
!10603 = !DILocation(line: 340, column: 30, scope: !10600)
!10604 = !DILocation(line: 343, column: 24, scope: !10600)
!10605 = !DILocation(line: 344, column: 18, scope: !10600)
!10606 = !DILocation(line: 348, column: 17, scope: !10600)
!10607 = !DILocation(line: 353, column: 19, scope: !10600)
!10608 = !DILocation(line: 354, column: 18, scope: !10600)
!10609 = !DILocation(line: 354, column: 27, scope: !10600)
!10610 = !DILocation(line: 354, column: 43, scope: !10600)
!10611 = !DILocation(line: 350, column: 14, scope: !10600)
!10612 = !DILocation(line: 0, scope: !10600)
!10613 = !DILocation(line: 356, column: 16, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10600, file: !1636, line: 356, column: 9)
!10615 = !DILocation(line: 395, column: 1, scope: !10600)
!10616 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !1636, file: !1636, line: 406, type: !10617, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !293)
!10617 = !DISubroutineType(types: !2683)
!10618 = !DILocation(line: 408, column: 5, scope: !10616)
!10619 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !1636, file: !1636, line: 420, type: !10620, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10622)
!10620 = !DISubroutineType(types: !10621)
!10621 = !{!61, !460}
!10622 = !{!10623, !10624, !10625}
!10623 = !DILocalVariable(name: "CS", arg: 1, scope: !10619, file: !1636, line: 420, type: !460)
!10624 = !DILocalVariable(name: "index", scope: !10619, file: !1636, line: 422, type: !61)
!10625 = !DILocalVariable(name: "list", scope: !10619, file: !1636, line: 423, type: !1953)
!10626 = !DILocation(line: 0, scope: !10619)
!10627 = !DILocation(line: 427, column: 13, scope: !10619)
!10628 = !DILocation(line: 430, column: 34, scope: !10619)
!10629 = !DILocation(line: 430, column: 5, scope: !10619)
!10630 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !1636, file: !1636, line: 442, type: !10631, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10633)
!10631 = !DISubroutineType(types: !10632)
!10632 = !{!61, !61, !1825}
!10633 = !{!10634, !10635, !10636}
!10634 = !DILocalVariable(name: "address", arg: 1, scope: !10630, file: !1636, line: 442, type: !61)
!10635 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !10630, file: !1636, line: 442, type: !1825)
!10636 = !DILocalVariable(name: "i", scope: !10630, file: !1636, line: 444, type: !975)
!10637 = !DILocation(line: 0, scope: !10630)
!10638 = !DILocation(line: 446, column: 23, scope: !10630)
!10639 = !DILocation(line: 448, column: 36, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10641, file: !1636, line: 448, column: 5)
!10641 = distinct !DILexicalBlock(scope: !10630, file: !1636, line: 448, column: 5)
!10642 = !DILocation(line: 448, column: 41, scope: !10640)
!10643 = !DILocation(line: 448, column: 5, scope: !10641)
!10644 = !DILocation(line: 449, column: 39, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10646, file: !1636, line: 449, column: 13)
!10646 = distinct !DILexicalBlock(scope: !10640, file: !1636, line: 448, column: 54)
!10647 = !DILocation(line: 449, column: 21, scope: !10645)
!10648 = !DILocation(line: 449, column: 46, scope: !10645)
!10649 = !DILocation(line: 450, column: 46, scope: !10645)
!10650 = !DILocation(line: 450, column: 25, scope: !10645)
!10651 = !DILocation(line: 449, column: 13, scope: !10646)
!10652 = !DILocation(line: 448, column: 48, scope: !10640)
!10653 = !DILocation(line: 448, column: 29, scope: !10640)
!10654 = !DILocation(line: 448, column: 31, scope: !10640)
!10655 = distinct !{!10655, !10643, !10656}
!10656 = !DILocation(line: 453, column: 5, scope: !10641)
!10657 = !DILocation(line: 454, column: 27, scope: !10630)
!10658 = !DILocation(line: 454, column: 5, scope: !10630)
!10659 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !1636, file: !1636, line: 462, type: !3679, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10660)
!10660 = !{!10661}
!10661 = !DILocalVariable(name: "address", arg: 1, scope: !10659, file: !1636, line: 462, type: !61)
!10662 = !DILocation(line: 0, scope: !10659)
!10663 = !DILocation(line: 464, column: 45, scope: !10659)
!10664 = !DILocation(line: 464, column: 12, scope: !10659)
!10665 = !DILocation(line: 464, column: 5, scope: !10659)
!10666 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !1636, file: !1636, line: 487, type: !3679, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10667)
!10667 = !{!10668, !10669, !10670}
!10668 = !DILocalVariable(name: "address", arg: 1, scope: !10666, file: !1636, line: 487, type: !61)
!10669 = !DILocalVariable(name: "index", scope: !10666, file: !1636, line: 490, type: !61)
!10670 = !DILocalVariable(name: "list", scope: !10666, file: !1636, line: 491, type: !1953)
!10671 = !DILocation(line: 0, scope: !10666)
!10672 = !DILocation(line: 490, column: 22, scope: !10666)
!10673 = !DILocation(line: 495, column: 45, scope: !10666)
!10674 = !DILocation(line: 495, column: 12, scope: !10666)
!10675 = !DILocation(line: 495, column: 5, scope: !10666)
!10676 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !1636, file: !1636, line: 517, type: !10677, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10681)
!10677 = !DISubroutineType(types: !10678)
!10678 = !{!1092, !10679}
!10679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10680, size: 32)
!10680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1839)
!10681 = !{!10682, !10683, !10684}
!10682 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !10676, file: !1636, line: 517, type: !10679)
!10683 = !DILocalVariable(name: "result", scope: !10676, file: !1636, line: 519, type: !61)
!10684 = !DILocalVariable(name: "i", scope: !10676, file: !1636, line: 519, type: !61)
!10685 = !DILocation(line: 0, scope: !10676)
!10686 = !DILocation(line: 522, column: 29, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10688, file: !1636, line: 522, column: 5)
!10688 = distinct !DILexicalBlock(scope: !10676, file: !1636, line: 522, column: 5)
!10689 = !DILocation(line: 522, column: 38, scope: !10687)
!10690 = !DILocation(line: 522, column: 5, scope: !10688)
!10691 = !DILocation(line: 523, column: 31, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10687, file: !1636, line: 522, column: 51)
!10693 = !DILocation(line: 523, column: 37, scope: !10692)
!10694 = !DILocation(line: 523, column: 16, scope: !10692)
!10695 = !DILocation(line: 522, column: 45, scope: !10687)
!10696 = distinct !{!10696, !10690, !10697}
!10697 = !DILocation(line: 524, column: 5, scope: !10688)
!10698 = !DILocation(line: 525, column: 5, scope: !10676)
!10699 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !1636, file: !1636, line: 535, type: !10700, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10702)
!10700 = !DISubroutineType(types: !10701)
!10701 = !{!61, !61, !61, !1651, !1825}
!10702 = !{!10703, !10704, !10705, !10706, !10707, !10708, !10709, !10710, !10711}
!10703 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10699, file: !1636, line: 536, type: !61)
!10704 = !DILocalVariable(name: "length", arg: 2, scope: !10699, file: !1636, line: 537, type: !61)
!10705 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10699, file: !1636, line: 538, type: !1651)
!10706 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !10699, file: !1636, line: 539, type: !1825)
!10707 = !DILocalVariable(name: "addr", scope: !10699, file: !1636, line: 541, type: !61)
!10708 = !DILocalVariable(name: "ptr", scope: !10699, file: !1636, line: 541, type: !61)
!10709 = !DILocalVariable(name: "blksize", scope: !10699, file: !1636, line: 541, type: !61)
!10710 = !DILocalVariable(name: "total_blocks", scope: !10699, file: !1636, line: 541, type: !61)
!10711 = !DILocalVariable(name: "endaddr", scope: !10699, file: !1636, line: 542, type: !61)
!10712 = !DILocation(line: 0, scope: !10699)
!10713 = !DILocation(line: 542, column: 33, scope: !10699)
!10714 = !DILocation(line: 557, column: 59, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10716, file: !1636, line: 557, column: 5)
!10716 = distinct !DILexicalBlock(scope: !10699, file: !1636, line: 557, column: 5)
!10717 = !DILocation(line: 557, column: 5, scope: !10716)
!10718 = !DILocation(line: 560, column: 19, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10715, file: !1636, line: 559, column: 5)
!10720 = !DILocation(line: 562, column: 26, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10719, file: !1636, line: 562, column: 13)
!10722 = !DILocation(line: 0, scope: !10721)
!10723 = !DILocation(line: 562, column: 13, scope: !10719)
!10724 = !DILocation(line: 563, column: 39, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10721, file: !1636, line: 562, column: 34)
!10726 = !DILocation(line: 564, column: 29, scope: !10725)
!10727 = !DILocation(line: 564, column: 42, scope: !10725)
!10728 = !DILocation(line: 565, column: 9, scope: !10725)
!10729 = !DILocation(line: 567, column: 45, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10721, file: !1636, line: 567, column: 18)
!10731 = !DILocation(line: 567, column: 26, scope: !10730)
!10732 = !DILocation(line: 567, column: 18, scope: !10721)
!10733 = !DILocation(line: 568, column: 29, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10730, file: !1636, line: 567, column: 59)
!10735 = !DILocation(line: 568, column: 41, scope: !10734)
!10736 = !DILocation(line: 569, column: 9, scope: !10734)
!10737 = !DILocation(line: 572, column: 16, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10730, file: !1636, line: 571, column: 14)
!10739 = !DILocation(line: 573, column: 21, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10738, file: !1636, line: 573, column: 17)
!10741 = !DILocation(line: 573, column: 17, scope: !10738)
!10742 = !DILocation(line: 576, column: 29, scope: !10738)
!10743 = !DILocation(line: 576, column: 39, scope: !10738)
!10744 = !DILocation(line: 577, column: 29, scope: !10738)
!10745 = !DILocation(line: 577, column: 42, scope: !10738)
!10746 = !DILocation(line: 0, scope: !10716)
!10747 = !DILocation(line: 579, column: 14, scope: !10719)
!10748 = !DILocation(line: 580, column: 21, scope: !10719)
!10749 = distinct !{!10749, !10717, !10750}
!10750 = !DILocation(line: 581, column: 5, scope: !10716)
!10751 = !DILocation(line: 586, column: 1, scope: !10699)
!10752 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !1636, file: !1636, line: 593, type: !10753, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10755)
!10753 = !DISubroutineType(types: !10754)
!10754 = !{!1092, !61, !61, !1651}
!10755 = !{!10756, !10757, !10758}
!10756 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10752, file: !1636, line: 593, type: !61)
!10757 = !DILocalVariable(name: "length", arg: 2, scope: !10752, file: !1636, line: 593, type: !61)
!10758 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10752, file: !1636, line: 593, type: !1651)
!10759 = !DILocation(line: 0, scope: !10752)
!10760 = !DILocation(line: 595, column: 12, scope: !10752)
!10761 = !DILocation(line: 595, column: 5, scope: !10752)
!10762 = !DILocation(line: 597, column: 81, scope: !10752)
!10763 = !DILocation(line: 597, column: 12, scope: !10752)
!10764 = !DILocation(line: 597, column: 5, scope: !10752)
!10765 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !1636, file: !1636, line: 606, type: !10753, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10766)
!10766 = !{!10767, !10768, !10769}
!10767 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10765, file: !1636, line: 606, type: !61)
!10768 = !DILocalVariable(name: "length", arg: 2, scope: !10765, file: !1636, line: 606, type: !61)
!10769 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10765, file: !1636, line: 606, type: !1651)
!10770 = !DILocation(line: 0, scope: !10765)
!10771 = !DILocation(line: 624, column: 5, scope: !10765)
!10772 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !1636, file: !1636, line: 637, type: !10753, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10773)
!10773 = !{!10774, !10775, !10776, !10777, !10778}
!10774 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10772, file: !1636, line: 637, type: !61)
!10775 = !DILocalVariable(name: "length", arg: 2, scope: !10772, file: !1636, line: 637, type: !61)
!10776 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10772, file: !1636, line: 637, type: !1651)
!10777 = !DILocalVariable(name: "index", scope: !10772, file: !1636, line: 642, type: !61)
!10778 = !DILocalVariable(name: "list", scope: !10772, file: !1636, line: 644, type: !1953)
!10779 = !DILocation(line: 0, scope: !10772)
!10780 = !DILocation(line: 642, column: 22, scope: !10772)
!10781 = !DILocation(line: 648, column: 81, scope: !10772)
!10782 = !DILocation(line: 648, column: 12, scope: !10772)
!10783 = !DILocation(line: 648, column: 5, scope: !10772)
!10784 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !1636, file: !1636, line: 658, type: !10753, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10785)
!10785 = !{!10786, !10787, !10788}
!10786 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10784, file: !1636, line: 658, type: !61)
!10787 = !DILocalVariable(name: "length", arg: 2, scope: !10784, file: !1636, line: 658, type: !61)
!10788 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10784, file: !1636, line: 658, type: !1651)
!10789 = !DILocation(line: 0, scope: !10784)
!10790 = !DILocation(line: 688, column: 5, scope: !10784)
!10791 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !1636, file: !1636, line: 700, type: !8139, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10792)
!10792 = !{!10793, !10794, !10795}
!10793 = !DILocalVariable(name: "CS", arg: 1, scope: !10791, file: !1636, line: 700, type: !974)
!10794 = !DILocalVariable(name: "index", scope: !10791, file: !1636, line: 705, type: !61)
!10795 = !DILocalVariable(name: "list", scope: !10791, file: !1636, line: 707, type: !1953)
!10796 = !DILocation(line: 0, scope: !10791)
!10797 = !DILocation(line: 705, column: 22, scope: !10791)
!10798 = !DILocation(line: 711, column: 24, scope: !10791)
!10799 = !DILocation(line: 711, column: 5, scope: !10791)
!10800 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !1636, file: !1636, line: 721, type: !10801, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10803)
!10801 = !DISubroutineType(types: !10802)
!10802 = !{null, !1871, !1154, !61}
!10803 = !{!10804, !10805, !10806}
!10804 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !10800, file: !1636, line: 721, type: !1871)
!10805 = !DILocalVariable(name: "index", arg: 2, scope: !10800, file: !1636, line: 721, type: !1154)
!10806 = !DILocalVariable(name: "bankSize", arg: 3, scope: !10800, file: !1636, line: 721, type: !61)
!10807 = !DILocation(line: 0, scope: !10800)
!10808 = !DILocation(line: 723, column: 18, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10800, file: !1636, line: 723, column: 9)
!10810 = !DILocation(line: 723, column: 26, scope: !10809)
!10811 = !DILocation(line: 723, column: 35, scope: !10809)
!10812 = !DILocation(line: 723, column: 9, scope: !10800)
!10813 = !DILocation(line: 724, column: 26, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10809, file: !1636, line: 723, column: 48)
!10815 = !DILocation(line: 724, column: 32, scope: !10814)
!10816 = !DILocation(line: 725, column: 5, scope: !10814)
!10817 = !DILocation(line: 726, column: 18, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10809, file: !1636, line: 725, column: 12)
!10819 = !DILocation(line: 727, column: 26, scope: !10818)
!10820 = !DILocation(line: 727, column: 32, scope: !10818)
!10821 = !DILocation(line: 728, column: 18, scope: !10818)
!10822 = !DILocation(line: 728, column: 26, scope: !10818)
!10823 = !DILocation(line: 728, column: 35, scope: !10818)
!10824 = !DILocation(line: 731, column: 1, scope: !10800)
!10825 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !1636, file: !1636, line: 739, type: !10826, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10828)
!10826 = !DISubroutineType(types: !10827)
!10827 = !{!61, !61, !61, !1871, !10679}
!10828 = !{!10829, !10830, !10831, !10832, !10833, !10834, !10835, !10836, !10837}
!10829 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10825, file: !1636, line: 740, type: !61)
!10830 = !DILocalVariable(name: "length", arg: 2, scope: !10825, file: !1636, line: 741, type: !61)
!10831 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !10825, file: !1636, line: 742, type: !1871)
!10832 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !10825, file: !1636, line: 743, type: !10679)
!10833 = !DILocalVariable(name: "Partition", scope: !10825, file: !1636, line: 745, type: !61)
!10834 = !DILocalVariable(name: "Index", scope: !10825, file: !1636, line: 746, type: !1092)
!10835 = !DILocalVariable(name: "bankSize", scope: !10825, file: !1636, line: 747, type: !61)
!10836 = !DILocalVariable(name: "NextBankAddr", scope: !10825, file: !1636, line: 748, type: !61)
!10837 = !DILocalVariable(name: "srcBankIdx", scope: !10825, file: !1636, line: 748, type: !61)
!10838 = !DILocation(line: 0, scope: !10825)
!10839 = !DILocation(line: 750, column: 12, scope: !10825)
!10840 = !DILocation(line: 750, column: 5, scope: !10825)
!10841 = !DILocation(line: 752, column: 51, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10843, file: !1636, line: 752, column: 5)
!10843 = distinct !DILexicalBlock(scope: !10825, file: !1636, line: 752, column: 5)
!10844 = !DILocation(line: 752, column: 5, scope: !10843)
!10845 = !DILocation(line: 753, column: 51, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10847, file: !1636, line: 753, column: 13)
!10847 = distinct !DILexicalBlock(scope: !10842, file: !1636, line: 752, column: 70)
!10848 = !DILocation(line: 753, column: 24, scope: !10846)
!10849 = !DILocation(line: 753, column: 13, scope: !10847)
!10850 = !DILocation(line: 758, column: 49, scope: !10847)
!10851 = !DILocation(line: 758, column: 22, scope: !10847)
!10852 = !DILocation(line: 760, column: 22, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10847, file: !1636, line: 760, column: 13)
!10854 = !DILocation(line: 760, column: 13, scope: !10847)
!10855 = !DILocation(line: 761, column: 37, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10853, file: !1636, line: 760, column: 39)
!10857 = !DILocation(line: 762, column: 24, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10856, file: !1636, line: 762, column: 17)
!10859 = !DILocation(line: 762, column: 17, scope: !10856)
!10860 = !DILocation(line: 767, column: 33, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10856, file: !1636, line: 767, column: 17)
!10862 = !DILocation(line: 767, column: 42, scope: !10861)
!10863 = !DILocation(line: 767, column: 17, scope: !10856)
!10864 = !DILocation(line: 768, column: 33, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10861, file: !1636, line: 767, column: 55)
!10866 = !DILocation(line: 768, column: 39, scope: !10865)
!10867 = !DILocation(line: 769, column: 13, scope: !10865)
!10868 = !DILocation(line: 770, column: 46, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10870, file: !1636, line: 770, column: 21)
!10870 = distinct !DILexicalBlock(scope: !10861, file: !1636, line: 769, column: 20)
!10871 = !DILocation(line: 770, column: 21, scope: !10870)
!10872 = !DILocation(line: 773, column: 33, scope: !10870)
!10873 = !DILocation(line: 773, column: 39, scope: !10870)
!10874 = !DILocation(line: 774, column: 33, scope: !10870)
!10875 = !DILocation(line: 774, column: 42, scope: !10870)
!10876 = !DILocation(line: 777, column: 22, scope: !10856)
!10877 = !DILocation(line: 778, column: 20, scope: !10856)
!10878 = !DILocation(line: 779, column: 9, scope: !10856)
!10879 = !DILocation(line: 746, column: 13, scope: !10825)
!10880 = !DILocation(line: 752, column: 66, scope: !10842)
!10881 = distinct !{!10881, !10844, !10882}
!10882 = !DILocation(line: 781, column: 5, scope: !10843)
!10883 = !DILocation(line: 784, column: 5, scope: !10825)
!10884 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !1636, file: !1636, line: 796, type: !8705, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10885)
!10885 = !{!10886, !10887}
!10886 = !DILocalVariable(name: "result", scope: !10884, file: !1636, line: 798, type: !1092)
!10887 = !DILocalVariable(name: "i", scope: !10884, file: !1636, line: 799, type: !1092)
!10888 = !DILocation(line: 803, column: 19, scope: !10884)
!10889 = !DILocation(line: 803, column: 28, scope: !10884)
!10890 = !DILocation(line: 803, column: 17, scope: !10884)
!10891 = !DILocation(line: 822, column: 33, scope: !10884)
!10892 = !DILocation(line: 822, column: 56, scope: !10884)
!10893 = !DILocation(line: 822, column: 88, scope: !10884)
!10894 = !DILocation(line: 822, column: 97, scope: !10884)
!10895 = !DILocation(line: 822, column: 5, scope: !10884)
!10896 = !DILocation(line: 829, column: 39, scope: !10884)
!10897 = !DILocation(line: 829, column: 62, scope: !10884)
!10898 = !DILocation(line: 829, column: 14, scope: !10884)
!10899 = !DILocation(line: 0, scope: !10884)
!10900 = !DILocation(line: 834, column: 16, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10884, file: !1636, line: 834, column: 9)
!10902 = !DILocation(line: 834, column: 9, scope: !10884)
!10903 = !DILocation(line: 838, column: 30, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10884, file: !1636, line: 838, column: 5)
!10905 = !DILocation(line: 838, column: 58, scope: !10904)
!10906 = !DILocation(line: 838, column: 78, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10904, file: !1636, line: 838, column: 5)
!10908 = !DILocation(line: 838, column: 88, scope: !10907)
!10909 = !DILocation(line: 838, column: 5, scope: !10904)
!10910 = !DILocation(line: 839, column: 39, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10907, file: !1636, line: 838, column: 102)
!10912 = !DILocation(line: 839, column: 22, scope: !10911)
!10913 = !DILocation(line: 840, column: 37, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10911, file: !1636, line: 840, column: 13)
!10915 = !DILocation(line: 840, column: 13, scope: !10911)
!10916 = !DILocation(line: 841, column: 36, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10914, file: !1636, line: 840, column: 63)
!10918 = !DILocation(line: 842, column: 9, scope: !10917)
!10919 = !DILocation(line: 838, column: 95, scope: !10907)
!10920 = distinct !{!10920, !10909, !10921}
!10921 = !DILocation(line: 843, column: 5, scope: !10904)
!10922 = !DILocation(line: 871, column: 49, scope: !10884)
!10923 = !DILocation(line: 871, column: 72, scope: !10884)
!10924 = !DILocation(line: 871, column: 47, scope: !10884)
!10925 = !DILocation(line: 871, column: 97, scope: !10884)
!10926 = !DILocation(line: 871, column: 19, scope: !10884)
!10927 = !DILocation(line: 882, column: 14, scope: !10884)
!10928 = !DILocation(line: 887, column: 13, scope: !10884)
!10929 = !DILocation(line: 887, column: 22, scope: !10884)
!10930 = !DILocation(line: 887, column: 5, scope: !10884)
!10931 = !DILocation(line: 889, column: 22, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10884, file: !1636, line: 887, column: 34)
!10933 = !DILocation(line: 890, column: 13, scope: !10932)
!10934 = !DILocation(line: 902, column: 1, scope: !10884)
!10935 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !1636, file: !1636, line: 912, type: !10936, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10938)
!10936 = !DISubroutineType(types: !10937)
!10937 = !{null, !772}
!10938 = !{!10939}
!10939 = !DILocalVariable(name: "CS", arg: 1, scope: !10935, file: !1636, line: 912, type: !772)
!10940 = !DILocation(line: 0, scope: !10935)
!10941 = !DILocation(line: 914, column: 12, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10935, file: !1636, line: 914, column: 9)
!10943 = !DILocation(line: 914, column: 9, scope: !10935)
!10944 = !DILocation(line: 918, column: 26, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10942, file: !1636, line: 914, column: 18)
!10946 = !DILocation(line: 918, column: 24, scope: !10945)
!10947 = !DILocation(line: 920, column: 28, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10945, file: !1636, line: 920, column: 13)
!10949 = !DILocation(line: 920, column: 13, scope: !10945)
!10950 = !DILocation(line: 921, column: 13, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10952, file: !1636, line: 921, column: 13)
!10952 = distinct !DILexicalBlock(scope: !10953, file: !1636, line: 921, column: 13)
!10953 = distinct !DILexicalBlock(scope: !10954, file: !1636, line: 921, column: 13)
!10954 = distinct !DILexicalBlock(scope: !10948, file: !1636, line: 920, column: 33)
!10955 = !DILocation(line: 923, column: 19, scope: !10945)
!10956 = !DILocation(line: 923, column: 17, scope: !10945)
!10957 = !DILocation(line: 924, column: 5, scope: !10945)
!10958 = !DILocation(line: 935, column: 14, scope: !10935)
!10959 = !DILocation(line: 936, column: 1, scope: !10935)
!10960 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !1636, file: !1636, line: 952, type: !8705, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !293)
!10961 = !DILocation(line: 955, column: 5, scope: !10960)
!10962 = !DILocation(line: 956, column: 12, scope: !10960)
!10963 = !DILocation(line: 956, column: 5, scope: !10960)
!10964 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !1636, file: !1636, line: 974, type: !8705, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10965)
!10965 = !{!10966}
!10966 = !DILocalVariable(name: "result", scope: !10964, file: !1636, line: 976, type: !1092)
!10967 = !DILocation(line: 981, column: 5, scope: !10964)
!10968 = !DILocation(line: 986, column: 24, scope: !10964)
!10969 = !DILocation(line: 986, column: 33, scope: !10964)
!10970 = !DILocation(line: 986, column: 49, scope: !10964)
!10971 = !DILocation(line: 986, column: 22, scope: !10964)
!10972 = !DILocation(line: 1002, column: 19, scope: !10964)
!10973 = !DILocation(line: 1002, column: 17, scope: !10964)
!10974 = !DILocation(line: 1014, column: 22, scope: !10964)
!10975 = !DILocation(line: 1014, column: 5, scope: !10964)
!10976 = !DILocation(line: 1024, column: 33, scope: !10964)
!10977 = !DILocation(line: 1026, column: 27, scope: !10964)
!10978 = !DILocation(line: 1027, column: 26, scope: !10964)
!10979 = !DILocation(line: 1042, column: 33, scope: !10964)
!10980 = !DILocation(line: 1044, column: 32, scope: !10964)
!10981 = !DILocation(line: 1052, column: 18, scope: !10964)
!10982 = !DILocation(line: 1052, column: 27, scope: !10964)
!10983 = !DILocation(line: 1052, column: 43, scope: !10964)
!10984 = !DILocation(line: 1048, column: 14, scope: !10964)
!10985 = !DILocation(line: 0, scope: !10964)
!10986 = !DILocation(line: 1063, column: 5, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10988, file: !1636, line: 1063, column: 5)
!10988 = distinct !DILexicalBlock(scope: !10964, file: !1636, line: 1063, column: 5)
!10989 = !DILocation(line: 1063, column: 5, scope: !10988)
!10990 = !DILocation(line: 1063, column: 5, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10987, file: !1636, line: 1063, column: 5)
!10992 = !DILocation(line: 1096, column: 36, scope: !10964)
!10993 = !DILocation(line: 1096, column: 34, scope: !10964)
!10994 = !DILocation(line: 1101, column: 5, scope: !10964)
!10995 = !DILocation(line: 1103, column: 34, scope: !10964)
!10996 = !DILocation(line: 1109, column: 35, scope: !10964)
!10997 = !DILocation(line: 1110, column: 33, scope: !10964)
!10998 = !DILocation(line: 1111, column: 34, scope: !10964)
!10999 = !DILocation(line: 1113, column: 5, scope: !10964)
!11000 = distinct !DISubprogram(name: "CreateFDMLock", scope: !1994, file: !1994, line: 84, type: !291, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!11001 = !DILocation(line: 86, column: 1, scope: !11000)
!11002 = distinct !DISubprogram(name: "GetFDMLock", scope: !1994, file: !1994, line: 87, type: !9171, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11003)
!11003 = !{!11004}
!11004 = !DILocalVariable(name: "savedMask", scope: !11002, file: !1994, line: 89, type: !1092)
!11005 = !DILocation(line: 90, column: 17, scope: !11002)
!11006 = !DILocation(line: 0, scope: !11002)
!11007 = !DILocation(line: 91, column: 9, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !11002, file: !1994, line: 91, column: 9)
!11009 = !DILocation(line: 91, column: 9, scope: !11002)
!11010 = !DILocation(line: 92, column: 17, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !11008, file: !1994, line: 91, column: 24)
!11012 = !DILocation(line: 94, column: 9, scope: !11011)
!11013 = !DILocation(line: 0, scope: !11008)
!11014 = !DILocation(line: 102, column: 1, scope: !11002)
!11015 = distinct !DISubprogram(name: "FreeFDMLock", scope: !1994, file: !1994, line: 103, type: !291, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11016)
!11016 = !{!11017}
!11017 = !DILocalVariable(name: "savedMask", scope: !11015, file: !1994, line: 105, type: !1092)
!11018 = !DILocation(line: 106, column: 17, scope: !11015)
!11019 = !DILocation(line: 0, scope: !11015)
!11020 = !DILocation(line: 107, column: 9, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11015, file: !1994, line: 107, column: 9)
!11022 = !DILocation(line: 107, column: 9, scope: !11015)
!11023 = !DILocation(line: 108, column: 17, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !11021, file: !1994, line: 107, column: 24)
!11025 = !DILocation(line: 109, column: 9, scope: !11024)
!11026 = !DILocation(line: 114, column: 1, scope: !11015)
!11027 = !DILocation(line: 111, column: 9, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11021, file: !1994, line: 110, column: 12)
!11029 = !DILocation(line: 112, column: 9, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !11031, file: !1994, line: 112, column: 9)
!11031 = distinct !DILexicalBlock(scope: !11032, file: !1994, line: 112, column: 9)
!11032 = distinct !DILexicalBlock(scope: !11028, file: !1994, line: 112, column: 9)
!11033 = distinct !DISubprogram(name: "create_FDM_lock", scope: !1994, file: !1994, line: 119, type: !291, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!11034 = !DILocation(line: 123, column: 1, scope: !11033)
!11035 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !1994, file: !1994, line: 130, type: !291, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11036)
!11036 = !{!11037}
!11037 = !DILocalVariable(name: "Result", scope: !11035, file: !1994, line: 132, type: !2050)
!11038 = !DILocation(line: 133, column: 5, scope: !11035)
!11039 = !DILocation(line: 134, column: 18, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11035, file: !1994, line: 133, column: 8)
!11041 = !DILocation(line: 0, scope: !11035)
!11042 = !DILocation(line: 135, column: 21, scope: !11035)
!11043 = !DILocation(line: 135, column: 5, scope: !11040)
!11044 = distinct !{!11044, !11038, !11045}
!11045 = !DILocation(line: 135, column: 43, scope: !11035)
!11046 = !DILocation(line: 136, column: 1, scope: !11035)
!11047 = distinct !DISubprogram(name: "release_FDM_lock", scope: !1994, file: !1994, line: 143, type: !291, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!11048 = !DILocation(line: 147, column: 5, scope: !11047)
!11049 = !DILocation(line: 148, column: 1, scope: !11047)
!11050 = distinct !DISubprogram(name: "readRawDiskData", scope: !1994, file: !1994, line: 216, type: !11051, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11092)
!11051 = !DISubroutineType(types: !11052)
!11052 = !{!1092, !11053, !61, !762, !61}
!11053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11054, size: 32)
!11054 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1941, line: 93, baseType: !11055)
!11055 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1941, line: 83, size: 1056, elements: !11056)
!11056 = !{!11057, !11058, !11078, !11079, !11091}
!11057 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !11055, file: !1941, line: 84, baseType: !61, size: 32)
!11058 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !11055, file: !1941, line: 85, baseType: !11059, size: 32, offset: 32)
!11059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11060, size: 32)
!11060 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1408, line: 121, baseType: !11061)
!11061 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 105, size: 480, elements: !11062)
!11062 = !{!11063, !11064, !11065, !11066, !11067, !11068, !11069, !11070, !11071, !11072, !11073, !11074, !11075, !11076, !11077}
!11063 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !11061, file: !1408, line: 106, baseType: !1682, size: 32)
!11064 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !11061, file: !1408, line: 107, baseType: !1483, size: 32, offset: 32)
!11065 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !11061, file: !1408, line: 108, baseType: !1687, size: 32, offset: 64)
!11066 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !11061, file: !1408, line: 109, baseType: !1691, size: 32, offset: 96)
!11067 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !11061, file: !1408, line: 110, baseType: !1695, size: 32, offset: 128)
!11068 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !11061, file: !1408, line: 111, baseType: !1691, size: 32, offset: 160)
!11069 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !11061, file: !1408, line: 112, baseType: !1700, size: 32, offset: 192)
!11070 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !11061, file: !1408, line: 113, baseType: !1691, size: 32, offset: 224)
!11071 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !11061, file: !1408, line: 114, baseType: !1691, size: 32, offset: 256)
!11072 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !11061, file: !1408, line: 115, baseType: !1691, size: 32, offset: 288)
!11073 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !11061, file: !1408, line: 116, baseType: !1707, size: 32, offset: 320)
!11074 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !11061, file: !1408, line: 117, baseType: !1712, size: 32, offset: 352)
!11075 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !11061, file: !1408, line: 118, baseType: !1717, size: 32, offset: 384)
!11076 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !11061, file: !1408, line: 119, baseType: !1721, size: 32, offset: 416)
!11077 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !11061, file: !1408, line: 120, baseType: !1725, size: 32, offset: 448)
!11078 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !11055, file: !1941, line: 86, baseType: !88, size: 32, offset: 64)
!11079 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !11055, file: !1941, line: 87, baseType: !11080, size: 928, offset: 96)
!11080 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1408, line: 99, baseType: !11081)
!11081 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 90, size: 928, elements: !11082)
!11082 = !{!11083, !11084, !11085, !11086, !11087, !11088, !11089, !11090}
!11083 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !11081, file: !1408, line: 91, baseType: !61, size: 32)
!11084 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !11081, file: !1408, line: 92, baseType: !1739, size: 256, offset: 32)
!11085 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !11081, file: !1408, line: 93, baseType: !1739, size: 256, offset: 288)
!11086 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !11081, file: !1408, line: 94, baseType: !1739, size: 256, offset: 544)
!11087 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !11081, file: !1408, line: 95, baseType: !61, size: 32, offset: 800)
!11088 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !11081, file: !1408, line: 96, baseType: !1731, size: 16, offset: 832)
!11089 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !11081, file: !1408, line: 97, baseType: !61, size: 32, offset: 864)
!11090 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !11081, file: !1408, line: 98, baseType: !61, size: 32, offset: 896)
!11091 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !11055, file: !1941, line: 92, baseType: !91, size: 8, offset: 1024)
!11092 = !{!11093, !11094, !11095, !11096, !11097, !11098}
!11093 = !DILocalVariable(name: "D", arg: 1, scope: !11050, file: !1994, line: 216, type: !11053)
!11094 = !DILocalVariable(name: "addr", arg: 2, scope: !11050, file: !1994, line: 216, type: !61)
!11095 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11050, file: !1994, line: 216, type: !762)
!11096 = !DILocalVariable(name: "len", arg: 4, scope: !11050, file: !1994, line: 216, type: !61)
!11097 = !DILocalVariable(name: "phyAddr", scope: !11050, file: !1994, line: 219, type: !61)
!11098 = !DILocalVariable(name: "diskSize", scope: !11050, file: !1994, line: 220, type: !61)
!11099 = !DILocation(line: 0, scope: !11050)
!11100 = !DILocation(line: 220, column: 28, scope: !11050)
!11101 = !DILocation(line: 222, column: 14, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11050, file: !1994, line: 222, column: 9)
!11103 = !DILocation(line: 222, column: 26, scope: !11102)
!11104 = !DILocation(line: 225, column: 51, scope: !11050)
!11105 = !DILocation(line: 225, column: 61, scope: !11050)
!11106 = !DILocation(line: 225, column: 15, scope: !11050)
!11107 = !DILocation(line: 225, column: 70, scope: !11050)
!11108 = !DILocation(line: 227, column: 13, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11050, file: !1994, line: 227, column: 9)
!11110 = !DILocation(line: 227, column: 9, scope: !11050)
!11111 = !DILocation(line: 228, column: 9, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11109, file: !1994, line: 227, column: 23)
!11113 = !DILocation(line: 229, column: 5, scope: !11112)
!11114 = !DILocation(line: 231, column: 5, scope: !11050)
!11115 = !DILocation(line: 233, column: 22, scope: !11050)
!11116 = !DILocation(line: 233, column: 5, scope: !11050)
!11117 = !DILocation(line: 235, column: 5, scope: !11050)
!11118 = !DILocation(line: 237, column: 5, scope: !11050)
!11119 = !DILocation(line: 238, column: 1, scope: !11050)
!11120 = distinct !DISubprogram(name: "MountDevice", scope: !1994, file: !1994, line: 165, type: !11121, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11123)
!11121 = !DISubroutineType(types: !11122)
!11122 = !{null, !11053}
!11123 = !{!11124, !11125}
!11124 = !DILocalVariable(name: "D", arg: 1, scope: !11120, file: !1994, line: 165, type: !11053)
!11125 = !DILocalVariable(name: "Result", scope: !11120, file: !1994, line: 167, type: !1092)
!11126 = !DILocation(line: 0, scope: !11120)
!11127 = !DILocation(line: 171, column: 12, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11120, file: !1994, line: 171, column: 9)
!11129 = !DILocation(line: 171, column: 9, scope: !11120)
!11130 = !DILocation(line: 176, column: 5, scope: !11120)
!11131 = !DILocation(line: 186, column: 17, scope: !11120)
!11132 = !DILocation(line: 186, column: 28, scope: !11120)
!11133 = !DILocation(line: 186, column: 43, scope: !11120)
!11134 = !DILocation(line: 186, column: 64, scope: !11120)
!11135 = !DILocation(line: 186, column: 52, scope: !11120)
!11136 = !DILocation(line: 186, column: 14, scope: !11120)
!11137 = !DILocation(line: 188, column: 5, scope: !11120)
!11138 = !DILocation(line: 190, column: 16, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11120, file: !1994, line: 190, column: 9)
!11140 = !DILocation(line: 190, column: 9, scope: !11120)
!11141 = !DILocation(line: 191, column: 9, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11143, file: !1994, line: 191, column: 9)
!11143 = distinct !DILexicalBlock(scope: !11144, file: !1994, line: 191, column: 9)
!11144 = distinct !DILexicalBlock(scope: !11145, file: !1994, line: 191, column: 9)
!11145 = distinct !DILexicalBlock(scope: !11139, file: !1994, line: 190, column: 31)
!11146 = !DILocation(line: 194, column: 17, scope: !11120)
!11147 = !DILocation(line: 195, column: 1, scope: !11120)
!11148 = distinct !DISubprogram(name: "writeRawDiskData", scope: !1994, file: !1994, line: 277, type: !11051, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11149)
!11149 = !{!11150, !11151, !11152, !11153, !11154, !11155, !11156, !11157, !11158, !11159, !11163, !11164, !11165, !11170}
!11150 = !DILocalVariable(name: "D", arg: 1, scope: !11148, file: !1994, line: 277, type: !11053)
!11151 = !DILocalVariable(name: "addr", arg: 2, scope: !11148, file: !1994, line: 277, type: !61)
!11152 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11148, file: !1994, line: 277, type: !762)
!11153 = !DILocalVariable(name: "len", arg: 4, scope: !11148, file: !1994, line: 277, type: !61)
!11154 = !DILocalVariable(name: "dest", scope: !11148, file: !1994, line: 279, type: !61)
!11155 = !DILocalVariable(name: "src", scope: !11148, file: !1994, line: 279, type: !61)
!11156 = !DILocalVariable(name: "diskSize", scope: !11148, file: !1994, line: 280, type: !61)
!11157 = !DILocalVariable(name: "result", scope: !11148, file: !1994, line: 281, type: !1092)
!11158 = !DILocalVariable(name: "DoneLength", scope: !11148, file: !1994, line: 282, type: !61)
!11159 = !DILocalVariable(name: "blockSize", scope: !11160, file: !1994, line: 313, type: !61)
!11160 = distinct !DILexicalBlock(scope: !11161, file: !1994, line: 312, column: 14)
!11161 = distinct !DILexicalBlock(scope: !11162, file: !1994, line: 305, column: 13)
!11162 = distinct !DILexicalBlock(scope: !11148, file: !1994, line: 298, column: 30)
!11163 = !DILocalVariable(name: "programBytes", scope: !11160, file: !1994, line: 314, type: !61)
!11164 = !DILocalVariable(name: "nextBlkAddr", scope: !11160, file: !1994, line: 316, type: !61)
!11165 = !DILocalVariable(name: "Cell", scope: !11166, file: !1994, line: 346, type: !11168)
!11166 = distinct !DILexicalBlock(scope: !11167, file: !1994, line: 345, column: 83)
!11167 = distinct !DILexicalBlock(scope: !11160, file: !1994, line: 345, column: 17)
!11168 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !11169, line: 76, baseType: !975)
!11169 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_master_to_slave/GCC")
!11170 = !DILocalVariable(name: "b", scope: !11166, file: !1994, line: 347, type: !762)
!11171 = !DILocation(line: 0, scope: !11148)
!11172 = !DILocation(line: 280, column: 28, scope: !11148)
!11173 = !DILocation(line: 284, column: 14, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11148, file: !1994, line: 284, column: 9)
!11175 = !DILocation(line: 284, column: 9, scope: !11148)
!11176 = !DILocation(line: 288, column: 14, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11148, file: !1994, line: 288, column: 9)
!11178 = !DILocation(line: 288, column: 20, scope: !11177)
!11179 = !DILocation(line: 288, column: 9, scope: !11148)
!11180 = !DILocation(line: 292, column: 13, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11148, file: !1994, line: 292, column: 9)
!11182 = !DILocation(line: 292, column: 9, scope: !11148)
!11183 = !DILocation(line: 293, column: 9, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11181, file: !1994, line: 292, column: 23)
!11185 = !DILocation(line: 294, column: 5, scope: !11184)
!11186 = !DILocation(line: 296, column: 5, scope: !11148)
!11187 = !DILocation(line: 346, column: 17, scope: !11166)
!11188 = !DILocation(line: 298, column: 23, scope: !11148)
!11189 = !DILocation(line: 298, column: 5, scope: !11148)
!11190 = !DILocation(line: 299, column: 52, scope: !11162)
!11191 = !DILocation(line: 299, column: 62, scope: !11162)
!11192 = !DILocation(line: 299, column: 16, scope: !11162)
!11193 = !DILocation(line: 299, column: 71, scope: !11162)
!11194 = !DILocation(line: 299, column: 78, scope: !11162)
!11195 = !DILocation(line: 300, column: 34, scope: !11162)
!11196 = !DILocation(line: 302, column: 12, scope: !11162)
!11197 = !DILocation(line: 302, column: 23, scope: !11162)
!11198 = !DILocation(line: 302, column: 81, scope: !11162)
!11199 = !DILocation(line: 302, column: 45, scope: !11162)
!11200 = !DILocation(line: 302, column: 9, scope: !11162)
!11201 = !DILocation(line: 305, column: 29, scope: !11161)
!11202 = !DILocation(line: 305, column: 57, scope: !11161)
!11203 = !DILocation(line: 305, column: 66, scope: !11161)
!11204 = !DILocation(line: 305, column: 80, scope: !11161)
!11205 = !DILocation(line: 305, column: 13, scope: !11162)
!11206 = !DILocation(line: 306, column: 25, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11161, file: !1994, line: 305, column: 87)
!11208 = !DILocation(line: 306, column: 36, scope: !11207)
!11209 = !DILocation(line: 306, column: 51, scope: !11207)
!11210 = !DILocation(line: 306, column: 60, scope: !11207)
!11211 = !DILocation(line: 306, column: 74, scope: !11207)
!11212 = !DILocation(line: 306, column: 22, scope: !11207)
!11213 = !DILocation(line: 307, column: 24, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11207, file: !1994, line: 307, column: 17)
!11215 = !DILocation(line: 307, column: 17, scope: !11207)
!11216 = !DILocation(line: 310, column: 23, scope: !11207)
!11217 = !DILocation(line: 311, column: 9, scope: !11207)
!11218 = !DILocation(line: 313, column: 47, scope: !11160)
!11219 = !DILocation(line: 313, column: 56, scope: !11160)
!11220 = !DILocation(line: 313, column: 34, scope: !11160)
!11221 = !DILocation(line: 0, scope: !11160)
!11222 = !DILocation(line: 316, column: 42, scope: !11160)
!11223 = !DILocation(line: 316, column: 58, scope: !11160)
!11224 = !DILocation(line: 316, column: 55, scope: !11160)
!11225 = !DILocation(line: 326, column: 22, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11160, file: !1994, line: 326, column: 17)
!11227 = !DILocation(line: 326, column: 37, scope: !11226)
!11228 = !DILocation(line: 326, column: 17, scope: !11160)
!11229 = !DILocation(line: 332, column: 43, scope: !11160)
!11230 = !DILocation(line: 345, column: 30, scope: !11167)
!11231 = !DILocation(line: 345, column: 52, scope: !11167)
!11232 = !DILocation(line: 0, scope: !11166)
!11233 = !DILocation(line: 348, column: 26, scope: !11166)
!11234 = !DILocation(line: 348, column: 24, scope: !11166)
!11235 = !DILocation(line: 348, column: 22, scope: !11166)
!11236 = !DILocation(line: 349, column: 41, scope: !11166)
!11237 = !DILocation(line: 349, column: 24, scope: !11166)
!11238 = !DILocation(line: 349, column: 22, scope: !11166)
!11239 = !DILocation(line: 350, column: 29, scope: !11166)
!11240 = !DILocation(line: 350, column: 40, scope: !11166)
!11241 = !DILocation(line: 350, column: 55, scope: !11166)
!11242 = !DILocation(line: 350, column: 64, scope: !11166)
!11243 = !DILocation(line: 350, column: 26, scope: !11166)
!11244 = !DILocation(line: 351, column: 28, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11166, file: !1994, line: 351, column: 21)
!11246 = !DILocation(line: 354, column: 13, scope: !11167)
!11247 = !DILocation(line: 362, column: 33, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11249, file: !1994, line: 361, column: 24)
!11249 = distinct !DILexicalBlock(scope: !11250, file: !1994, line: 355, column: 21)
!11250 = distinct !DILexicalBlock(scope: !11167, file: !1994, line: 354, column: 20)
!11251 = !DILocation(line: 362, column: 44, scope: !11248)
!11252 = !DILocation(line: 362, column: 59, scope: !11248)
!11253 = !DILocation(line: 362, column: 68, scope: !11248)
!11254 = !DILocation(line: 362, column: 82, scope: !11248)
!11255 = !DILocation(line: 362, column: 30, scope: !11248)
!11256 = !DILocation(line: 364, column: 28, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11250, file: !1994, line: 364, column: 21)
!11258 = !DILocation(line: 364, column: 21, scope: !11250)
!11259 = !DILocation(line: 368, column: 24, scope: !11160)
!11260 = !DILocation(line: 0, scope: !11161)
!11261 = distinct !{!11261, !11189, !11262}
!11262 = !DILocation(line: 370, column: 5, scope: !11148)
!11263 = !DILocation(line: 372, column: 5, scope: !11148)
!11264 = !DILocation(line: 379, column: 1, scope: !11148)
!11265 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !1994, file: !1994, line: 398, type: !11266, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11268)
!11266 = !DISubroutineType(types: !11267)
!11267 = !{!1092, !11053, !61}
!11268 = !{!11269, !11270, !11271, !11272}
!11269 = !DILocalVariable(name: "D", arg: 1, scope: !11265, file: !1994, line: 398, type: !11053)
!11270 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !11265, file: !1994, line: 398, type: !61)
!11271 = !DILocalVariable(name: "result", scope: !11265, file: !1994, line: 401, type: !1092)
!11272 = !DILocalVariable(name: "block_index", scope: !11265, file: !1994, line: 402, type: !61)
!11273 = !DILocation(line: 0, scope: !11265)
!11274 = !DILocation(line: 402, column: 36, scope: !11265)
!11275 = !DILocation(line: 403, column: 13, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11265, file: !1994, line: 403, column: 9)
!11277 = !DILocation(line: 403, column: 9, scope: !11265)
!11278 = !DILocation(line: 404, column: 9, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11276, file: !1994, line: 403, column: 23)
!11280 = !DILocation(line: 405, column: 5, scope: !11279)
!11281 = !DILocation(line: 407, column: 37, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !11265, file: !1994, line: 407, column: 9)
!11283 = !DILocation(line: 407, column: 21, scope: !11282)
!11284 = !DILocation(line: 407, column: 9, scope: !11265)
!11285 = !DILocation(line: 412, column: 5, scope: !11265)
!11286 = !DILocation(line: 414, column: 8, scope: !11265)
!11287 = !DILocation(line: 414, column: 19, scope: !11265)
!11288 = !DILocation(line: 414, column: 32, scope: !11265)
!11289 = !DILocation(line: 414, column: 5, scope: !11265)
!11290 = !DILocation(line: 416, column: 17, scope: !11265)
!11291 = !DILocation(line: 416, column: 28, scope: !11265)
!11292 = !DILocation(line: 416, column: 42, scope: !11265)
!11293 = !DILocation(line: 416, column: 14, scope: !11265)
!11294 = !DILocation(line: 418, column: 5, scope: !11265)
!11295 = !DILocation(line: 420, column: 16, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11265, file: !1994, line: 420, column: 9)
!11297 = !DILocation(line: 424, column: 1, scope: !11265)
!11298 = distinct !DISubprogram(name: "NOR_init", scope: !1994, file: !1994, line: 433, type: !8705, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!11299 = !DILocation(line: 436, column: 9, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11298, file: !1994, line: 436, column: 9)
!11301 = !DILocation(line: 436, column: 9, scope: !11298)
!11302 = !DILocation(line: 437, column: 9, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11300, file: !1994, line: 436, column: 62)
!11304 = !DILocation(line: 438, column: 9, scope: !11303)
!11305 = !DILocation(line: 439, column: 27, scope: !11303)
!11306 = !DILocation(line: 440, column: 5, scope: !11303)
!11307 = !DILocation(line: 441, column: 5, scope: !11298)
!11308 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !1994, file: !1994, line: 444, type: !9171, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!11309 = !DILocation(line: 446, column: 12, scope: !11308)
!11310 = !DILocation(line: 446, column: 5, scope: !11308)
!11311 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !1994, file: !1994, line: 449, type: !11312, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11314)
!11312 = !DISubroutineType(types: !11313)
!11313 = !{!1092, !61, !61, !762}
!11314 = !{!11315, !11316, !11317, !11318, !11319, !11320, !11321}
!11315 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11311, file: !1994, line: 449, type: !61)
!11316 = !DILocalVariable(name: "page_idx", arg: 2, scope: !11311, file: !1994, line: 449, type: !61)
!11317 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11311, file: !1994, line: 449, type: !762)
!11318 = !DILocalVariable(name: "D", scope: !11311, file: !1994, line: 451, type: !11053)
!11319 = !DILocalVariable(name: "mtdData", scope: !11311, file: !1994, line: 452, type: !2002)
!11320 = !DILocalVariable(name: "result", scope: !11311, file: !1994, line: 453, type: !1092)
!11321 = !DILocalVariable(name: "addr", scope: !11311, file: !1994, line: 455, type: !61)
!11322 = !DILocation(line: 0, scope: !11311)
!11323 = !DILocation(line: 452, column: 60, scope: !11311)
!11324 = !DILocation(line: 455, column: 32, scope: !11311)
!11325 = !DILocation(line: 455, column: 22, scope: !11311)
!11326 = !DILocation(line: 455, column: 95, scope: !11311)
!11327 = !DILocation(line: 455, column: 76, scope: !11311)
!11328 = !DILocation(line: 455, column: 118, scope: !11311)
!11329 = !DILocation(line: 455, column: 74, scope: !11311)
!11330 = !DILocation(line: 455, column: 106, scope: !11311)
!11331 = !DILocation(line: 457, column: 14, scope: !11311)
!11332 = !DILocation(line: 459, column: 16, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11311, file: !1994, line: 459, column: 9)
!11334 = !DILocation(line: 463, column: 1, scope: !11311)
!11335 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !1994, file: !1994, line: 466, type: !11312, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11336)
!11336 = !{!11337, !11338, !11339, !11340, !11341, !11342, !11343}
!11337 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11335, file: !1994, line: 466, type: !61)
!11338 = !DILocalVariable(name: "page_idx", arg: 2, scope: !11335, file: !1994, line: 466, type: !61)
!11339 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11335, file: !1994, line: 466, type: !762)
!11340 = !DILocalVariable(name: "D", scope: !11335, file: !1994, line: 468, type: !11053)
!11341 = !DILocalVariable(name: "mtdData", scope: !11335, file: !1994, line: 469, type: !2002)
!11342 = !DILocalVariable(name: "result", scope: !11335, file: !1994, line: 470, type: !1092)
!11343 = !DILocalVariable(name: "addr", scope: !11335, file: !1994, line: 472, type: !61)
!11344 = !DILocation(line: 0, scope: !11335)
!11345 = !DILocation(line: 469, column: 60, scope: !11335)
!11346 = !DILocation(line: 472, column: 32, scope: !11335)
!11347 = !DILocation(line: 472, column: 22, scope: !11335)
!11348 = !DILocation(line: 472, column: 95, scope: !11335)
!11349 = !DILocation(line: 472, column: 76, scope: !11335)
!11350 = !DILocation(line: 472, column: 118, scope: !11335)
!11351 = !DILocation(line: 472, column: 74, scope: !11335)
!11352 = !DILocation(line: 472, column: 106, scope: !11335)
!11353 = !DILocation(line: 474, column: 14, scope: !11335)
!11354 = !DILocation(line: 475, column: 16, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11335, file: !1994, line: 475, column: 9)
!11356 = !DILocation(line: 479, column: 1, scope: !11335)
!11357 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !1994, file: !1994, line: 481, type: !11358, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11360)
!11358 = !DISubroutineType(types: !11359)
!11359 = !{!1092, !61}
!11360 = !{!11361, !11362}
!11361 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11357, file: !1994, line: 481, type: !61)
!11362 = !DILocalVariable(name: "result", scope: !11357, file: !1994, line: 483, type: !1092)
!11363 = !DILocation(line: 0, scope: !11357)
!11364 = !DILocation(line: 484, column: 14, scope: !11357)
!11365 = !DILocation(line: 485, column: 16, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11357, file: !1994, line: 485, column: 9)
!11367 = !DILocation(line: 489, column: 1, scope: !11357)
!11368 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !1994, file: !1994, line: 492, type: !3679, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11369)
!11369 = !{!11370, !11371, !11372}
!11370 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11368, file: !1994, line: 492, type: !61)
!11371 = !DILocalVariable(name: "D", scope: !11368, file: !1994, line: 494, type: !11053)
!11372 = !DILocalVariable(name: "mtdData", scope: !11368, file: !1994, line: 495, type: !2002)
!11373 = !DILocation(line: 0, scope: !11368)
!11374 = !DILocation(line: 495, column: 60, scope: !11368)
!11375 = !DILocation(line: 496, column: 12, scope: !11368)
!11376 = !DILocation(line: 496, column: 5, scope: !11368)
!11377 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !1994, file: !1994, line: 499, type: !3679, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11378)
!11378 = !{!11379, !11380, !11381}
!11379 = !DILocalVariable(name: "block_addr", arg: 1, scope: !11377, file: !1994, line: 499, type: !61)
!11380 = !DILocalVariable(name: "D", scope: !11377, file: !1994, line: 501, type: !11053)
!11381 = !DILocalVariable(name: "mtdData", scope: !11377, file: !1994, line: 502, type: !2002)
!11382 = !DILocation(line: 0, scope: !11377)
!11383 = !DILocation(line: 502, column: 60, scope: !11377)
!11384 = !DILocation(line: 504, column: 12, scope: !11377)
!11385 = !DILocation(line: 504, column: 5, scope: !11377)
!11386 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !1994, file: !1994, line: 510, type: !11387, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11389)
!11387 = !DISubroutineType(types: !11388)
!11388 = !{!1092, !61, !1154, !1154}
!11389 = !{!11390, !11391, !11392, !11393, !11394}
!11390 = !DILocalVariable(name: "block_addr", arg: 1, scope: !11386, file: !1994, line: 510, type: !61)
!11391 = !DILocalVariable(name: "block_index", arg: 2, scope: !11386, file: !1994, line: 510, type: !1154)
!11392 = !DILocalVariable(name: "offset", arg: 3, scope: !11386, file: !1994, line: 510, type: !1154)
!11393 = !DILocalVariable(name: "D", scope: !11386, file: !1994, line: 512, type: !11053)
!11394 = !DILocalVariable(name: "mtdData", scope: !11386, file: !1994, line: 513, type: !2002)
!11395 = !DILocation(line: 0, scope: !11386)
!11396 = !DILocation(line: 513, column: 60, scope: !11386)
!11397 = !DILocation(line: 519, column: 20, scope: !11386)
!11398 = !DILocation(line: 519, column: 18, scope: !11386)
!11399 = !DILocation(line: 520, column: 22, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11386, file: !1994, line: 520, column: 9)
!11401 = !DILocation(line: 520, column: 9, scope: !11386)
!11402 = !DILocation(line: 524, column: 28, scope: !11386)
!11403 = !DILocation(line: 524, column: 26, scope: !11386)
!11404 = !DILocation(line: 524, column: 13, scope: !11386)
!11405 = !DILocation(line: 526, column: 5, scope: !11386)
!11406 = !DILocation(line: 527, column: 1, scope: !11386)
!11407 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !1994, file: !1994, line: 532, type: !11408, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11410)
!11408 = !DISubroutineType(types: !11409)
!11409 = !{!1092, !61, !61, !1154}
!11410 = !{!11411, !11412, !11413, !11414, !11415}
!11411 = !DILocalVariable(name: "block_index", arg: 1, scope: !11407, file: !1994, line: 532, type: !61)
!11412 = !DILocalVariable(name: "offset", arg: 2, scope: !11407, file: !1994, line: 532, type: !61)
!11413 = !DILocalVariable(name: "addr", arg: 3, scope: !11407, file: !1994, line: 532, type: !1154)
!11414 = !DILocalVariable(name: "D", scope: !11407, file: !1994, line: 534, type: !11053)
!11415 = !DILocalVariable(name: "mtdData", scope: !11407, file: !1994, line: 535, type: !2002)
!11416 = !DILocation(line: 0, scope: !11407)
!11417 = !DILocation(line: 535, column: 60, scope: !11407)
!11418 = !DILocation(line: 537, column: 23, scope: !11407)
!11419 = !DILocation(line: 537, column: 13, scope: !11407)
!11420 = !DILocation(line: 537, column: 79, scope: !11407)
!11421 = !DILocation(line: 537, column: 60, scope: !11407)
!11422 = !DILocation(line: 537, column: 58, scope: !11407)
!11423 = !DILocation(line: 537, column: 88, scope: !11407)
!11424 = !DILocation(line: 537, column: 11, scope: !11407)
!11425 = !DILocation(line: 539, column: 5, scope: !11407)
!11426 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !1994, file: !1994, line: 545, type: !11427, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11429)
!11427 = !DISubroutineType(types: !11428)
!11428 = !{!2050, !1092}
!11429 = !{!11430}
!11430 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !11426, file: !1994, line: 545, type: !1092)
!11431 = !DILocation(line: 0, scope: !11426)
!11432 = !DILocation(line: 547, column: 9, scope: !11426)
!11433 = !DILocation(line: 558, column: 9, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11435, file: !1994, line: 558, column: 9)
!11435 = distinct !DILexicalBlock(scope: !11436, file: !1994, line: 558, column: 9)
!11436 = distinct !DILexicalBlock(scope: !11437, file: !1994, line: 558, column: 9)
!11437 = distinct !DILexicalBlock(scope: !11438, file: !1994, line: 557, column: 12)
!11438 = distinct !DILexicalBlock(scope: !11439, file: !1994, line: 555, column: 16)
!11439 = distinct !DILexicalBlock(scope: !11440, file: !1994, line: 553, column: 16)
!11440 = distinct !DILexicalBlock(scope: !11441, file: !1994, line: 551, column: 16)
!11441 = distinct !DILexicalBlock(scope: !11442, file: !1994, line: 549, column: 16)
!11442 = distinct !DILexicalBlock(scope: !11426, file: !1994, line: 547, column: 9)
!11443 = !DILocation(line: 560, column: 1, scope: !11426)
!11444 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !1994, file: !1994, line: 561, type: !11445, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11448)
!11445 = !DISubroutineType(types: !11446)
!11446 = !{!11447, !61}
!11447 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !1331, line: 127, baseType: !1996)
!11448 = !{!11449, !11450, !11451}
!11449 = !DILocalVariable(name: "address", arg: 1, scope: !11444, file: !1994, line: 561, type: !61)
!11450 = !DILocalVariable(name: "block_size", scope: !11444, file: !1994, line: 563, type: !61)
!11451 = !DILocalVariable(name: "block_index", scope: !11444, file: !1994, line: 564, type: !61)
!11452 = !DILocation(line: 0, scope: !11444)
!11453 = !DILocation(line: 566, column: 19, scope: !11444)
!11454 = !DILocation(line: 567, column: 21, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11444, file: !1994, line: 567, column: 9)
!11456 = !DILocation(line: 567, column: 9, scope: !11444)
!11457 = !DILocation(line: 568, column: 9, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11459, file: !1994, line: 568, column: 9)
!11459 = distinct !DILexicalBlock(scope: !11460, file: !1994, line: 568, column: 9)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !1994, line: 568, column: 9)
!11461 = distinct !DILexicalBlock(scope: !11455, file: !1994, line: 567, column: 45)
!11462 = !DILocation(line: 570, column: 18, scope: !11444)
!11463 = !DILocation(line: 571, column: 9, scope: !11444)
!11464 = !DILocation(line: 574, column: 9, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11466, file: !1994, line: 573, column: 38)
!11466 = distinct !DILexicalBlock(scope: !11467, file: !1994, line: 573, column: 16)
!11467 = distinct !DILexicalBlock(scope: !11444, file: !1994, line: 571, column: 9)
!11468 = !DILocation(line: 576, column: 9, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11470, file: !1994, line: 575, column: 39)
!11470 = distinct !DILexicalBlock(scope: !11466, file: !1994, line: 575, column: 16)
!11471 = !DILocation(line: 578, column: 9, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11473, file: !1994, line: 578, column: 9)
!11473 = distinct !DILexicalBlock(scope: !11474, file: !1994, line: 578, column: 9)
!11474 = distinct !DILexicalBlock(scope: !11475, file: !1994, line: 578, column: 9)
!11475 = distinct !DILexicalBlock(scope: !11470, file: !1994, line: 577, column: 12)
!11476 = !DILocation(line: 0, scope: !11467)
!11477 = !DILocation(line: 580, column: 1, scope: !11444)
!11478 = distinct !DISubprogram(name: "hal_flash_init", scope: !1994, file: !1994, line: 583, type: !9171, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!11479 = !DILocation(line: 585, column: 5, scope: !11478)
!11480 = !DILocation(line: 586, column: 5, scope: !11478)
!11481 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !1994, file: !1994, line: 589, type: !9171, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!11482 = !DILocation(line: 591, column: 5, scope: !11481)
!11483 = distinct !DISubprogram(name: "hal_flash_erase", scope: !1994, file: !1994, line: 595, type: !11484, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11486)
!11484 = !DISubroutineType(types: !11485)
!11485 = !{!2050, !61, !11447}
!11486 = !{!11487, !11488, !11489, !11490, !11491}
!11487 = !DILocalVariable(name: "start_address", arg: 1, scope: !11483, file: !1994, line: 595, type: !61)
!11488 = !DILocalVariable(name: "block", arg: 2, scope: !11483, file: !1994, line: 595, type: !11447)
!11489 = !DILocalVariable(name: "result", scope: !11483, file: !1994, line: 597, type: !1092)
!11490 = !DILocalVariable(name: "block_index", scope: !11483, file: !1994, line: 598, type: !61)
!11491 = !DILocalVariable(name: "erase_type", scope: !11483, file: !1994, line: 599, type: !61)
!11492 = !DILocation(line: 0, scope: !11483)
!11493 = !DILocation(line: 601, column: 9, scope: !11483)
!11494 = !DILocation(line: 602, column: 28, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11496, file: !1994, line: 602, column: 13)
!11496 = distinct !DILexicalBlock(scope: !11497, file: !1994, line: 601, column: 38)
!11497 = distinct !DILexicalBlock(scope: !11483, file: !1994, line: 601, column: 9)
!11498 = !DILocation(line: 602, column: 37, scope: !11495)
!11499 = !DILocation(line: 602, column: 13, scope: !11496)
!11500 = !DILocation(line: 607, column: 28, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11502, file: !1994, line: 607, column: 13)
!11502 = distinct !DILexicalBlock(scope: !11503, file: !1994, line: 606, column: 46)
!11503 = distinct !DILexicalBlock(scope: !11497, file: !1994, line: 606, column: 16)
!11504 = !DILocation(line: 607, column: 38, scope: !11501)
!11505 = !DILocation(line: 607, column: 13, scope: !11502)
!11506 = !DILocation(line: 612, column: 28, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11508, file: !1994, line: 612, column: 13)
!11508 = distinct !DILexicalBlock(scope: !11509, file: !1994, line: 611, column: 46)
!11509 = distinct !DILexicalBlock(scope: !11503, file: !1994, line: 611, column: 16)
!11510 = !DILocation(line: 612, column: 38, scope: !11507)
!11511 = !DILocation(line: 612, column: 13, scope: !11508)
!11512 = !DILocation(line: 0, scope: !11497)
!11513 = !DILocation(line: 621, column: 19, scope: !11483)
!11514 = !DILocation(line: 622, column: 21, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11483, file: !1994, line: 622, column: 9)
!11516 = !DILocation(line: 622, column: 9, scope: !11483)
!11517 = !DILocation(line: 626, column: 17, scope: !11483)
!11518 = !DILocation(line: 627, column: 14, scope: !11483)
!11519 = !DILocation(line: 628, column: 16, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11483, file: !1994, line: 628, column: 9)
!11521 = !DILocation(line: 628, column: 9, scope: !11483)
!11522 = !DILocation(line: 629, column: 16, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11520, file: !1994, line: 628, column: 38)
!11524 = !DILocation(line: 629, column: 9, scope: !11523)
!11525 = !DILocation(line: 632, column: 1, scope: !11483)
!11526 = distinct !DISubprogram(name: "hal_flash_read", scope: !1994, file: !1994, line: 634, type: !11527, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11529)
!11527 = !DISubroutineType(types: !11528)
!11528 = !{!2050, !61, !762, !61}
!11529 = !{!11530, !11531, !11532, !11533, !11534}
!11530 = !DILocalVariable(name: "start_address", arg: 1, scope: !11526, file: !1994, line: 634, type: !61)
!11531 = !DILocalVariable(name: "buffer", arg: 2, scope: !11526, file: !1994, line: 634, type: !762)
!11532 = !DILocalVariable(name: "length", arg: 3, scope: !11526, file: !1994, line: 634, type: !61)
!11533 = !DILocalVariable(name: "D", scope: !11526, file: !1994, line: 636, type: !11053)
!11534 = !DILocalVariable(name: "result", scope: !11526, file: !1994, line: 637, type: !1092)
!11535 = !DILocation(line: 0, scope: !11526)
!11536 = !DILocation(line: 639, column: 14, scope: !11526)
!11537 = !DILocation(line: 641, column: 16, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11526, file: !1994, line: 641, column: 9)
!11539 = !DILocation(line: 641, column: 9, scope: !11526)
!11540 = !DILocation(line: 642, column: 16, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11538, file: !1994, line: 641, column: 38)
!11542 = !DILocation(line: 642, column: 9, scope: !11541)
!11543 = !DILocation(line: 645, column: 1, scope: !11526)
!11544 = distinct !DISubprogram(name: "hal_flash_write", scope: !1994, file: !1994, line: 647, type: !11545, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !11547)
!11545 = !DISubroutineType(types: !11546)
!11546 = !{!2050, !61, !5061, !61}
!11547 = !{!11548, !11549, !11550, !11551, !11552, !11553}
!11548 = !DILocalVariable(name: "address", arg: 1, scope: !11544, file: !1994, line: 647, type: !61)
!11549 = !DILocalVariable(name: "data", arg: 2, scope: !11544, file: !1994, line: 647, type: !5061)
!11550 = !DILocalVariable(name: "length", arg: 3, scope: !11544, file: !1994, line: 647, type: !61)
!11551 = !DILocalVariable(name: "D", scope: !11544, file: !1994, line: 649, type: !11053)
!11552 = !DILocalVariable(name: "result", scope: !11544, file: !1994, line: 650, type: !1092)
!11553 = !DILocalVariable(name: "addr", scope: !11554, file: !1994, line: 660, type: !61)
!11554 = distinct !DILexicalBlock(scope: !11555, file: !1994, line: 659, column: 40)
!11555 = distinct !DILexicalBlock(scope: !11544, file: !1994, line: 659, column: 8)
!11556 = !DILocation(line: 0, scope: !11544)
!11557 = !DILocation(line: 652, column: 14, scope: !11544)
!11558 = !DILocation(line: 653, column: 16, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11544, file: !1994, line: 653, column: 9)
!11560 = !DILocation(line: 653, column: 9, scope: !11544)
!11561 = !DILocation(line: 654, column: 16, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11559, file: !1994, line: 653, column: 38)
!11563 = !DILocation(line: 654, column: 9, scope: !11562)
!11564 = !DILocation(line: 659, column: 8, scope: !11555)
!11565 = !DILocation(line: 659, column: 8, scope: !11544)
!11566 = !DILocation(line: 661, column: 25, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11554, file: !1994, line: 661, column: 8)
!11568 = !DILocation(line: 0, scope: !11554)
!11569 = !DILocation(line: 661, column: 58, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11567, file: !1994, line: 661, column: 8)
!11571 = !DILocation(line: 661, column: 8, scope: !11567)
!11572 = !DILocation(line: 662, column: 13, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11570, file: !1994, line: 661, column: 147)
!11574 = !DILocation(line: 661, column: 128, scope: !11570)
!11575 = distinct !{!11575, !11571, !11576}
!11576 = !DILocation(line: 663, column: 8, scope: !11567)
!11577 = !DILocation(line: 668, column: 1, scope: !11544)
!11578 = distinct !DISubprogram(name: "BlockAddress", scope: !2055, file: !2055, line: 111, type: !11579, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !11581)
!11579 = !DISubroutineType(types: !11580)
!11580 = !{!88, !88, !61}
!11581 = !{!11582, !11583, !11584, !11585, !11586, !11587}
!11582 = !DILocalVariable(name: "DriverData", arg: 1, scope: !11578, file: !2055, line: 111, type: !88)
!11583 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11578, file: !2055, line: 111, type: !61)
!11584 = !DILocalVariable(name: "D", scope: !11578, file: !2055, line: 113, type: !2083)
!11585 = !DILocalVariable(name: "addr", scope: !11578, file: !2055, line: 114, type: !61)
!11586 = !DILocalVariable(name: "region", scope: !11578, file: !2055, line: 115, type: !61)
!11587 = !DILocalVariable(name: "BlockUpperBound", scope: !11578, file: !2055, line: 115, type: !61)
!11588 = !DILocation(line: 0, scope: !11578)
!11589 = !DILocation(line: 117, column: 26, scope: !11578)
!11590 = !DILocation(line: 117, column: 40, scope: !11578)
!11591 = !DILocation(line: 118, column: 28, scope: !11578)
!11592 = !DILocation(line: 118, column: 5, scope: !11578)
!11593 = !DILocation(line: 119, column: 39, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11578, file: !2055, line: 118, column: 43)
!11595 = !DILocation(line: 119, column: 76, scope: !11594)
!11596 = !DILocation(line: 119, column: 52, scope: !11594)
!11597 = !DILocation(line: 119, column: 14, scope: !11594)
!11598 = !DILocation(line: 120, column: 15, scope: !11594)
!11599 = !DILocation(line: 121, column: 50, scope: !11594)
!11600 = !DILocation(line: 121, column: 25, scope: !11594)
!11601 = distinct !{!11601, !11592, !11602}
!11602 = !DILocation(line: 122, column: 5, scope: !11578)
!11603 = !DILocation(line: 123, column: 68, scope: !11578)
!11604 = !DILocation(line: 123, column: 44, scope: !11578)
!11605 = !DILocation(line: 123, column: 25, scope: !11578)
!11606 = !DILocation(line: 123, column: 107, scope: !11578)
!11607 = !DILocation(line: 123, column: 83, scope: !11578)
!11608 = !DILocation(line: 123, column: 10, scope: !11578)
!11609 = !DILocation(line: 125, column: 16, scope: !11578)
!11610 = !DILocation(line: 125, column: 25, scope: !11578)
!11611 = !DILocation(line: 125, column: 5, scope: !11578)
!11612 = distinct !DISubprogram(name: "MapWindow", scope: !2055, file: !2055, line: 180, type: !1688, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !11613)
!11613 = !{!11614, !11615, !11616, !11617}
!11614 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11612, file: !2055, line: 180, type: !88)
!11615 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11612, file: !2055, line: 180, type: !61)
!11616 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !11612, file: !2055, line: 180, type: !61)
!11617 = !DILocalVariable(name: "D", scope: !11612, file: !2055, line: 182, type: !2083)
!11618 = !DILocation(line: 0, scope: !11612)
!11619 = !DILocation(line: 185, column: 5, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11621, file: !2055, line: 185, column: 5)
!11621 = distinct !DILexicalBlock(scope: !11612, file: !2055, line: 185, column: 5)
!11622 = !DILocation(line: 185, column: 5, scope: !11621)
!11623 = !DILocation(line: 185, column: 5, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11620, file: !2055, line: 185, column: 5)
!11625 = !DILocation(line: 186, column: 27, scope: !11612)
!11626 = !DILocation(line: 186, column: 19, scope: !11612)
!11627 = !DILocation(line: 186, column: 8, scope: !11612)
!11628 = !DILocation(line: 186, column: 17, scope: !11612)
!11629 = !DILocation(line: 188, column: 5, scope: !11612)
!11630 = !DILocation(line: 0, scope: !2076)
!11631 = !DILocation(line: 142, column: 12, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !2076, file: !2055, line: 142, column: 9)
!11633 = !DILocation(line: 142, column: 34, scope: !11632)
!11634 = !DILocation(line: 142, column: 64, scope: !11632)
!11635 = !DILocation(line: 142, column: 75, scope: !11632)
!11636 = !DILocation(line: 142, column: 9, scope: !2076)
!11637 = !DILocation(line: 143, column: 79, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11639, file: !2055, line: 143, column: 13)
!11639 = distinct !DILexicalBlock(scope: !11632, file: !2055, line: 142, column: 99)
!11640 = !DILocation(line: 143, column: 13, scope: !11639)
!11641 = !DILocation(line: 144, column: 72, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11643, file: !2055, line: 144, column: 17)
!11643 = distinct !DILexicalBlock(scope: !11638, file: !2055, line: 143, column: 94)
!11644 = !DILocation(line: 144, column: 83, scope: !11642)
!11645 = !DILocation(line: 144, column: 17, scope: !11643)
!11646 = !DILocation(line: 145, column: 87, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11648, file: !2055, line: 145, column: 21)
!11648 = distinct !DILexicalBlock(scope: !11642, file: !2055, line: 144, column: 107)
!11649 = !DILocation(line: 145, column: 21, scope: !11648)
!11650 = !DILocation(line: 146, column: 33, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11647, file: !2055, line: 145, column: 102)
!11652 = !DILocation(line: 147, column: 25, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11651, file: !2055, line: 147, column: 25)
!11654 = !DILocation(line: 147, column: 62, scope: !11653)
!11655 = !DILocation(line: 147, column: 34, scope: !11653)
!11656 = !DILocation(line: 147, column: 25, scope: !11651)
!11657 = !DILocation(line: 148, column: 91, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11653, file: !2055, line: 147, column: 106)
!11659 = !DILocation(line: 149, column: 111, scope: !11658)
!11660 = !DILocation(line: 149, column: 101, scope: !11658)
!11661 = !DILocation(line: 149, column: 87, scope: !11658)
!11662 = !DILocation(line: 149, column: 99, scope: !11658)
!11663 = !DILocation(line: 150, column: 37, scope: !11658)
!11664 = !DILocation(line: 150, column: 34, scope: !11658)
!11665 = !DILocation(line: 151, column: 21, scope: !11658)
!11666 = !DILocation(line: 152, column: 91, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11653, file: !2055, line: 151, column: 28)
!11668 = !DILocation(line: 153, column: 111, scope: !11667)
!11669 = !DILocation(line: 153, column: 101, scope: !11667)
!11670 = !DILocation(line: 153, column: 87, scope: !11667)
!11671 = !DILocation(line: 153, column: 99, scope: !11667)
!11672 = !DILocation(line: 154, column: 34, scope: !11667)
!11673 = !DILocation(line: 157, column: 32, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11647, file: !2055, line: 156, column: 24)
!11675 = !DILocation(line: 158, column: 83, scope: !11674)
!11676 = !DILocation(line: 159, column: 60, scope: !11674)
!11677 = !DILocation(line: 159, column: 33, scope: !11674)
!11678 = !DILocation(line: 159, column: 30, scope: !11674)
!11679 = !DILocation(line: 162, column: 29, scope: !11680)
!11680 = distinct !DILexicalBlock(scope: !11642, file: !2055, line: 161, column: 20)
!11681 = !DILocation(line: 163, column: 83, scope: !11680)
!11682 = !DILocation(line: 164, column: 103, scope: !11680)
!11683 = !DILocation(line: 164, column: 93, scope: !11680)
!11684 = !DILocation(line: 164, column: 79, scope: !11680)
!11685 = !DILocation(line: 164, column: 91, scope: !11680)
!11686 = !DILocation(line: 165, column: 56, scope: !11680)
!11687 = !DILocation(line: 165, column: 29, scope: !11680)
!11688 = !DILocation(line: 165, column: 26, scope: !11680)
!11689 = !DILocation(line: 168, column: 24, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11638, file: !2055, line: 167, column: 16)
!11691 = !DILocation(line: 169, column: 75, scope: !11690)
!11692 = !DILocation(line: 170, column: 50, scope: !11690)
!11693 = !DILocation(line: 170, column: 22, scope: !11690)
!11694 = !DILocation(line: 173, column: 21, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11632, file: !2055, line: 172, column: 12)
!11696 = !DILocation(line: 174, column: 75, scope: !11695)
!11697 = !DILocation(line: 175, column: 95, scope: !11695)
!11698 = !DILocation(line: 175, column: 85, scope: !11695)
!11699 = !DILocation(line: 175, column: 71, scope: !11695)
!11700 = !DILocation(line: 175, column: 83, scope: !11695)
!11701 = !DILocation(line: 176, column: 46, scope: !11695)
!11702 = !DILocation(line: 176, column: 18, scope: !11695)
!11703 = !DILocation(line: 0, scope: !11632)
!11704 = !DILocation(line: 178, column: 5, scope: !2076)
!11705 = distinct !DISubprogram(name: "BlockSize", scope: !2055, file: !2055, line: 191, type: !2077, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !11706)
!11706 = !{!11707, !11708, !11709, !11710, !11711}
!11707 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11705, file: !2055, line: 191, type: !88)
!11708 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11705, file: !2055, line: 191, type: !61)
!11709 = !DILocalVariable(name: "D", scope: !11705, file: !2055, line: 193, type: !2083)
!11710 = !DILocalVariable(name: "region", scope: !11705, file: !2055, line: 194, type: !61)
!11711 = !DILocalVariable(name: "BlockUpperBound", scope: !11705, file: !2055, line: 194, type: !61)
!11712 = !DILocation(line: 0, scope: !11705)
!11713 = !DILocation(line: 196, column: 26, scope: !11705)
!11714 = !DILocation(line: 196, column: 45, scope: !11705)
!11715 = !DILocation(line: 197, column: 28, scope: !11705)
!11716 = !DILocation(line: 197, column: 5, scope: !11705)
!11717 = !DILocation(line: 198, column: 15, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11705, file: !2055, line: 197, column: 43)
!11719 = !DILocation(line: 199, column: 50, scope: !11718)
!11720 = !DILocation(line: 199, column: 25, scope: !11718)
!11721 = distinct !{!11721, !11716, !11722}
!11722 = !DILocation(line: 200, column: 5, scope: !11705)
!11723 = !DILocation(line: 202, column: 35, scope: !11705)
!11724 = !DILocation(line: 202, column: 5, scope: !11705)
!11725 = distinct !DISubprogram(name: "BlockIndex", scope: !2055, file: !2055, line: 205, type: !2077, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !11726)
!11726 = !{!11727, !11728, !11729, !11730, !11731, !11732}
!11727 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11725, file: !2055, line: 205, type: !88)
!11728 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !11725, file: !2055, line: 205, type: !61)
!11729 = !DILocalVariable(name: "D", scope: !11725, file: !2055, line: 207, type: !2083)
!11730 = !DILocalVariable(name: "region", scope: !11725, file: !2055, line: 208, type: !61)
!11731 = !DILocalVariable(name: "BlockUpperAddr", scope: !11725, file: !2055, line: 208, type: !61)
!11732 = !DILocalVariable(name: "blk_idx", scope: !11725, file: !2055, line: 209, type: !61)
!11733 = !DILocation(line: 0, scope: !11725)
!11734 = !DILocation(line: 211, column: 25, scope: !11725)
!11735 = !DILocation(line: 211, column: 44, scope: !11725)
!11736 = !DILocation(line: 211, column: 81, scope: !11725)
!11737 = !DILocation(line: 211, column: 57, scope: !11725)
!11738 = !DILocation(line: 213, column: 28, scope: !11725)
!11739 = !DILocation(line: 213, column: 40, scope: !11725)
!11740 = !DILocation(line: 213, column: 66, scope: !11725)
!11741 = !DILocation(line: 213, column: 5, scope: !11725)
!11742 = !DILocation(line: 214, column: 17, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !11725, file: !2055, line: 213, column: 78)
!11744 = !DILocation(line: 215, column: 18, scope: !11743)
!11745 = !DILocation(line: 216, column: 15, scope: !11743)
!11746 = !DILocation(line: 217, column: 48, scope: !11743)
!11747 = !DILocation(line: 217, column: 85, scope: !11743)
!11748 = !DILocation(line: 217, column: 61, scope: !11743)
!11749 = distinct !{!11749, !11741, !11750}
!11750 = !DILocation(line: 218, column: 5, scope: !11725)
!11751 = !DILocation(line: 221, column: 53, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11753, file: !2055, line: 220, column: 37)
!11753 = distinct !DILexicalBlock(scope: !11725, file: !2055, line: 220, column: 9)
!11754 = !DILocation(line: 221, column: 29, scope: !11752)
!11755 = !DILocation(line: 221, column: 17, scope: !11752)
!11756 = !DILocation(line: 222, column: 5, scope: !11752)
!11757 = !DILocation(line: 0, scope: !11753)
!11758 = !DILocation(line: 225, column: 5, scope: !11725)
!11759 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !2055, file: !2055, line: 232, type: !3931, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !293)
!11760 = !DILocation(line: 238, column: 5, scope: !11759)
!11761 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !2055, file: !2055, line: 243, type: !3931, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !293)
!11762 = !DILocation(line: 245, column: 5, scope: !11761)
!11763 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !2055, file: !2055, line: 249, type: !3931, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !293)
!11764 = !DILocation(line: 254, column: 5, scope: !11763)
!11765 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !2055, file: !2055, line: 259, type: !3931, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !293)
!11766 = !DILocation(line: 261, column: 5, scope: !11765)
!11767 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !2055, file: !2055, line: 271, type: !7807, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !11768)
!11768 = !{!11769, !11770}
!11769 = !DILocalVariable(name: "delay", arg: 1, scope: !11767, file: !2055, line: 271, type: !61)
!11770 = !DILocalVariable(name: "ret", scope: !11767, file: !2055, line: 276, type: !3098)
!11771 = !DILocation(line: 0, scope: !11767)
!11772 = !DILocation(line: 277, column: 11, scope: !11767)
!11773 = !DILocation(line: 278, column: 13, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11767, file: !2055, line: 278, column: 9)
!11775 = !DILocation(line: 278, column: 9, scope: !11767)
!11776 = !DILocation(line: 279, column: 9, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11778, file: !2055, line: 279, column: 9)
!11778 = distinct !DILexicalBlock(scope: !11779, file: !2055, line: 279, column: 9)
!11779 = distinct !DILexicalBlock(scope: !11780, file: !2055, line: 279, column: 9)
!11780 = distinct !DILexicalBlock(scope: !11774, file: !2055, line: 278, column: 35)
!11781 = !DILocation(line: 282, column: 1, scope: !11767)
!11782 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !2733, file: !2733, line: 58, type: !11783, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !11785)
!11783 = !DISubroutineType(types: !11784)
!11784 = !{null, !2367, !7, !2367, null}
!11785 = !{!11786, !11787, !11788, !11789, !11798}
!11786 = !DILocalVariable(name: "func", arg: 1, scope: !11782, file: !2733, line: 58, type: !2367)
!11787 = !DILocalVariable(name: "line", arg: 2, scope: !11782, file: !2733, line: 58, type: !7)
!11788 = !DILocalVariable(name: "message", arg: 3, scope: !11782, file: !2733, line: 58, type: !2367)
!11789 = !DILocalVariable(name: "ap", scope: !11782, file: !2733, line: 60, type: !11790)
!11790 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !11791, line: 46, baseType: !11792)
!11791 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!11792 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !11793, line: 32, baseType: !11794)
!11793 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!11794 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2733, baseType: !11795)
!11795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !11796)
!11796 = !{!11797}
!11797 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !11795, file: !2733, line: 60, baseType: !88, size: 32)
!11798 = !DILocalVariable(name: "mask", scope: !11782, file: !2733, line: 62, type: !61)
!11799 = !DILocation(line: 0, scope: !11782)
!11800 = !DILocation(line: 60, column: 5, scope: !11782)
!11801 = !DILocation(line: 60, column: 13, scope: !11782)
!11802 = !DILocation(line: 62, column: 5, scope: !11782)
!11803 = !DILocation(line: 63, column: 5, scope: !11782)
!11804 = !DILocation(line: 65, column: 5, scope: !11782)
!11805 = !DILocation(line: 66, column: 5, scope: !11782)
!11806 = !DILocation(line: 67, column: 5, scope: !11782)
!11807 = !DILocation(line: 69, column: 37, scope: !11782)
!11808 = !DILocation(line: 69, column: 5, scope: !11782)
!11809 = !DILocation(line: 71, column: 1, scope: !11782)
!11810 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !2733, file: !2733, line: 72, type: !11783, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !11811)
!11811 = !{!11812, !11813, !11814, !11815, !11816}
!11812 = !DILocalVariable(name: "func", arg: 1, scope: !11810, file: !2733, line: 72, type: !2367)
!11813 = !DILocalVariable(name: "line", arg: 2, scope: !11810, file: !2733, line: 72, type: !7)
!11814 = !DILocalVariable(name: "message", arg: 3, scope: !11810, file: !2733, line: 72, type: !2367)
!11815 = !DILocalVariable(name: "ap", scope: !11810, file: !2733, line: 74, type: !11790)
!11816 = !DILocalVariable(name: "mask", scope: !11810, file: !2733, line: 76, type: !61)
!11817 = !DILocation(line: 0, scope: !11810)
!11818 = !DILocation(line: 74, column: 5, scope: !11810)
!11819 = !DILocation(line: 74, column: 13, scope: !11810)
!11820 = !DILocation(line: 76, column: 5, scope: !11810)
!11821 = !DILocation(line: 77, column: 5, scope: !11810)
!11822 = !DILocation(line: 79, column: 5, scope: !11810)
!11823 = !DILocation(line: 80, column: 5, scope: !11810)
!11824 = !DILocation(line: 81, column: 5, scope: !11810)
!11825 = !DILocation(line: 83, column: 37, scope: !11810)
!11826 = !DILocation(line: 83, column: 5, scope: !11810)
!11827 = !DILocation(line: 85, column: 1, scope: !11810)
!11828 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !2733, file: !2733, line: 86, type: !11783, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !11829)
!11829 = !{!11830, !11831, !11832, !11833, !11834}
!11830 = !DILocalVariable(name: "func", arg: 1, scope: !11828, file: !2733, line: 86, type: !2367)
!11831 = !DILocalVariable(name: "line", arg: 2, scope: !11828, file: !2733, line: 86, type: !7)
!11832 = !DILocalVariable(name: "message", arg: 3, scope: !11828, file: !2733, line: 86, type: !2367)
!11833 = !DILocalVariable(name: "ap", scope: !11828, file: !2733, line: 88, type: !11790)
!11834 = !DILocalVariable(name: "mask", scope: !11828, file: !2733, line: 90, type: !61)
!11835 = !DILocation(line: 0, scope: !11828)
!11836 = !DILocation(line: 88, column: 5, scope: !11828)
!11837 = !DILocation(line: 88, column: 13, scope: !11828)
!11838 = !DILocation(line: 90, column: 5, scope: !11828)
!11839 = !DILocation(line: 91, column: 5, scope: !11828)
!11840 = !DILocation(line: 93, column: 5, scope: !11828)
!11841 = !DILocation(line: 94, column: 5, scope: !11828)
!11842 = !DILocation(line: 95, column: 5, scope: !11828)
!11843 = !DILocation(line: 97, column: 37, scope: !11828)
!11844 = !DILocation(line: 97, column: 5, scope: !11828)
!11845 = !DILocation(line: 99, column: 1, scope: !11828)
!11846 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !2733, file: !2733, line: 101, type: !11847, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !11851)
!11847 = !DISubroutineType(types: !11848)
!11848 = !{null, !2367, !7, !2367, !11849, !7, null}
!11849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11850, size: 32)
!11850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!11851 = !{!11852, !11853, !11854, !11855, !11856}
!11852 = !DILocalVariable(name: "func", arg: 1, scope: !11846, file: !2733, line: 101, type: !2367)
!11853 = !DILocalVariable(name: "line", arg: 2, scope: !11846, file: !2733, line: 101, type: !7)
!11854 = !DILocalVariable(name: "message", arg: 3, scope: !11846, file: !2733, line: 101, type: !2367)
!11855 = !DILocalVariable(name: "data", arg: 4, scope: !11846, file: !2733, line: 101, type: !11849)
!11856 = !DILocalVariable(name: "length", arg: 5, scope: !11846, file: !2733, line: 101, type: !7)
!11857 = !DILocation(line: 0, scope: !11846)
!11858 = !DILocation(line: 103, column: 1, scope: !11846)
!11859 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !2135, file: !2135, line: 87, type: !3679, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !11860)
!11860 = !{!11861, !11862}
!11861 = !DILocalVariable(name: "bank_no", arg: 1, scope: !11859, file: !2135, line: 87, type: !61)
!11862 = !DILocalVariable(name: "value", scope: !11859, file: !2135, line: 89, type: !61)
!11863 = !DILocation(line: 0, scope: !11859)
!11864 = !DILocation(line: 91, column: 41, scope: !11859)
!11865 = !DILocation(line: 91, column: 5, scope: !11859)
!11866 = !DILocation(line: 91, column: 19, scope: !11859)
!11867 = !DILocation(line: 91, column: 31, scope: !11859)
!11868 = !DILocation(line: 92, column: 77, scope: !11859)
!11869 = !DILocation(line: 92, column: 60, scope: !11859)
!11870 = !DILocation(line: 92, column: 31, scope: !11859)
!11871 = !DILocation(line: 94, column: 5, scope: !11859)
!11872 = !DILocation(line: 94, column: 27, scope: !11859)
!11873 = !DILocation(line: 94, column: 39, scope: !11859)
!11874 = !DILocation(line: 94, column: 65, scope: !11859)
!11875 = distinct !{!11875, !11871, !11876}
!11876 = !DILocation(line: 94, column: 70, scope: !11859)
!11877 = !DILocation(line: 96, column: 29, scope: !11859)
!11878 = !DILocation(line: 96, column: 64, scope: !11859)
!11879 = !DILocation(line: 98, column: 5, scope: !11859)
!11880 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !2135, file: !2135, line: 102, type: !11881, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !11883)
!11881 = !DISubroutineType(types: !11882)
!11882 = !{null, !61, !61}
!11883 = !{!11884, !11885}
!11884 = !DILocalVariable(name: "bank_no", arg: 1, scope: !11880, file: !2135, line: 102, type: !61)
!11885 = !DILocalVariable(name: "value", arg: 2, scope: !11880, file: !2135, line: 102, type: !61)
!11886 = !DILocation(line: 0, scope: !11880)
!11887 = !DILocation(line: 106, column: 40, scope: !11880)
!11888 = !DILocation(line: 106, column: 77, scope: !11880)
!11889 = !DILocation(line: 106, column: 102, scope: !11880)
!11890 = !DILocation(line: 106, column: 5, scope: !11880)
!11891 = !DILocation(line: 106, column: 19, scope: !11880)
!11892 = !DILocation(line: 106, column: 31, scope: !11880)
!11893 = !DILocation(line: 107, column: 77, scope: !11880)
!11894 = !DILocation(line: 107, column: 60, scope: !11880)
!11895 = !DILocation(line: 107, column: 31, scope: !11880)
!11896 = !DILocation(line: 109, column: 5, scope: !11880)
!11897 = !DILocation(line: 109, column: 27, scope: !11880)
!11898 = !DILocation(line: 109, column: 39, scope: !11880)
!11899 = !DILocation(line: 109, column: 65, scope: !11880)
!11900 = distinct !{!11900, !11896, !11901}
!11901 = !DILocation(line: 109, column: 70, scope: !11880)
!11902 = !DILocation(line: 111, column: 5, scope: !11880)
!11903 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !2135, file: !2135, line: 114, type: !291, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11904 = !DILocation(line: 117, column: 36, scope: !11903)
!11905 = !DILocation(line: 117, column: 18, scope: !11903)
!11906 = !DILocation(line: 118, column: 37, scope: !11903)
!11907 = !DILocation(line: 118, column: 18, scope: !11903)
!11908 = !DILocation(line: 119, column: 37, scope: !11903)
!11909 = !DILocation(line: 119, column: 19, scope: !11903)
!11910 = !DILocation(line: 120, column: 37, scope: !11903)
!11911 = !DILocation(line: 120, column: 19, scope: !11903)
!11912 = !DILocation(line: 121, column: 37, scope: !11903)
!11913 = !DILocation(line: 121, column: 19, scope: !11903)
!11914 = !DILocation(line: 122, column: 37, scope: !11903)
!11915 = !DILocation(line: 122, column: 19, scope: !11903)
!11916 = !DILocation(line: 123, column: 37, scope: !11903)
!11917 = !DILocation(line: 123, column: 19, scope: !11903)
!11918 = !DILocation(line: 125, column: 37, scope: !11903)
!11919 = !DILocation(line: 125, column: 19, scope: !11903)
!11920 = !DILocation(line: 126, column: 37, scope: !11903)
!11921 = !DILocation(line: 126, column: 19, scope: !11903)
!11922 = !DILocation(line: 127, column: 37, scope: !11903)
!11923 = !DILocation(line: 127, column: 19, scope: !11903)
!11924 = !DILocation(line: 128, column: 37, scope: !11903)
!11925 = !DILocation(line: 128, column: 19, scope: !11903)
!11926 = !DILocation(line: 130, column: 36, scope: !11903)
!11927 = !DILocation(line: 130, column: 18, scope: !11903)
!11928 = !DILocation(line: 131, column: 36, scope: !11903)
!11929 = !DILocation(line: 131, column: 18, scope: !11903)
!11930 = !DILocation(line: 133, column: 5, scope: !11903)
!11931 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !2135, file: !2135, line: 140, type: !11932, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11932 = !DISubroutineType(types: !11933)
!11933 = !{!7}
!11934 = !DILocation(line: 144, column: 5, scope: !11931)
!11935 = !DILocation(line: 144, column: 19, scope: !11931)
!11936 = !DILocation(line: 144, column: 28, scope: !11931)
!11937 = !DILocation(line: 147, column: 19, scope: !11931)
!11938 = !DILocation(line: 147, column: 28, scope: !11931)
!11939 = !DILocation(line: 150, column: 19, scope: !11931)
!11940 = !DILocation(line: 150, column: 28, scope: !11931)
!11941 = !DILocation(line: 152, column: 5, scope: !11931)
!11942 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !2135, file: !2135, line: 157, type: !8705, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !11943)
!11943 = !{!11944, !11945, !11946, !11947, !11948, !11949}
!11944 = !DILocalVariable(name: "mbist_src", scope: !11942, file: !2135, line: 159, type: !61)
!11945 = !DILocalVariable(name: "mbist_len", scope: !11942, file: !2135, line: 159, type: !61)
!11946 = !DILocalVariable(name: "mbist_data", scope: !11942, file: !2135, line: 159, type: !3652)
!11947 = !DILocalVariable(name: "i", scope: !11942, file: !2135, line: 160, type: !61)
!11948 = !DILocalVariable(name: "bist_data_inv", scope: !11942, file: !2135, line: 160, type: !61)
!11949 = !DILocalVariable(name: "bist_data_random", scope: !11942, file: !2135, line: 160, type: !61)
!11950 = !DILocation(line: 159, column: 36, scope: !11942)
!11951 = !DILocation(line: 0, scope: !11942)
!11952 = !DILocation(line: 165, column: 5, scope: !11942)
!11953 = !DILocation(line: 165, column: 19, scope: !11942)
!11954 = !DILocation(line: 165, column: 30, scope: !11942)
!11955 = !DILocation(line: 166, column: 5, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11942, file: !2135, line: 166, column: 5)
!11957 = !DILocation(line: 167, column: 9, scope: !11958)
!11958 = distinct !DILexicalBlock(scope: !11959, file: !2135, line: 167, column: 9)
!11959 = distinct !DILexicalBlock(scope: !11960, file: !2135, line: 166, column: 66)
!11960 = distinct !DILexicalBlock(scope: !11956, file: !2135, line: 166, column: 5)
!11961 = !DILocation(line: 168, column: 13, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11963, file: !2135, line: 168, column: 13)
!11963 = distinct !DILexicalBlock(scope: !11964, file: !2135, line: 167, column: 34)
!11964 = distinct !DILexicalBlock(scope: !11958, file: !2135, line: 167, column: 9)
!11965 = !DILocation(line: 168, column: 57, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11962, file: !2135, line: 168, column: 13)
!11967 = distinct !{!11967, !11961, !11968}
!11968 = !DILocation(line: 183, column: 13, scope: !11962)
!11969 = !DILocation(line: 170, column: 42, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11966, file: !2135, line: 168, column: 83)
!11971 = !DILocation(line: 172, column: 42, scope: !11970)
!11972 = !DILocation(line: 174, column: 45, scope: !11970)
!11973 = !DILocation(line: 174, column: 59, scope: !11970)
!11974 = !DILocation(line: 174, column: 154, scope: !11970)
!11975 = !DILocation(line: 174, column: 87, scope: !11970)
!11976 = !DILocation(line: 174, column: 134, scope: !11970)
!11977 = !DILocation(line: 174, column: 42, scope: !11970)
!11978 = !DILocation(line: 175, column: 42, scope: !11970)
!11979 = !DILocation(line: 177, column: 17, scope: !11970)
!11980 = !DILocation(line: 177, column: 39, scope: !11970)
!11981 = !DILocation(line: 177, column: 50, scope: !11970)
!11982 = !DILocation(line: 177, column: 71, scope: !11970)
!11983 = distinct !{!11983, !11979, !11984}
!11984 = !DILocation(line: 177, column: 78, scope: !11970)
!11985 = !DILocation(line: 179, column: 36, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11970, file: !2135, line: 179, column: 21)
!11987 = !DILocation(line: 179, column: 47, scope: !11986)
!11988 = !DILocation(line: 179, column: 69, scope: !11986)
!11989 = !DILocation(line: 168, column: 79, scope: !11966)
!11990 = !DILocation(line: 179, column: 21, scope: !11970)
!11991 = !DILocation(line: 167, column: 30, scope: !11964)
!11992 = !DILocation(line: 167, column: 23, scope: !11964)
!11993 = distinct !{!11993, !11957, !11994}
!11994 = !DILocation(line: 184, column: 9, scope: !11958)
!11995 = !DILocation(line: 166, column: 62, scope: !11960)
!11996 = !DILocation(line: 166, column: 43, scope: !11960)
!11997 = distinct !{!11997, !11955, !11998}
!11998 = !DILocation(line: 185, column: 5, scope: !11956)
!11999 = !DILocation(line: 189, column: 1, scope: !11942)
!12000 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !2135, file: !2135, line: 190, type: !8705, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12001 = !DILocation(line: 192, column: 9, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !12000, file: !2135, line: 192, column: 9)
!12003 = !DILocation(line: 192, column: 26, scope: !12002)
!12004 = !DILocation(line: 0, scope: !12000)
!12005 = !DILocation(line: 197, column: 1, scope: !12000)
!12006 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !2135, file: !2135, line: 201, type: !291, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !12007)
!12007 = !{!12008, !12009}
!12008 = !DILocalVariable(name: "dqy_in_del", scope: !12006, file: !2135, line: 203, type: !1092)
!12009 = !DILocalVariable(name: "dqs_in_del", scope: !12006, file: !2135, line: 204, type: !1092)
!12010 = !DILocation(line: 0, scope: !12006)
!12011 = !DILocation(line: 206, column: 5, scope: !12006)
!12012 = !DILocation(line: 206, column: 19, scope: !12006)
!12013 = !DILocation(line: 206, column: 28, scope: !12006)
!12014 = !DILocation(line: 207, column: 19, scope: !12006)
!12015 = !DILocation(line: 207, column: 28, scope: !12006)
!12016 = !DILocation(line: 208, column: 19, scope: !12006)
!12017 = !DILocation(line: 208, column: 28, scope: !12006)
!12018 = !DILocation(line: 209, column: 19, scope: !12006)
!12019 = !DILocation(line: 209, column: 28, scope: !12006)
!12020 = !DILocation(line: 212, column: 23, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12022, file: !2135, line: 211, column: 78)
!12022 = distinct !DILexicalBlock(scope: !12023, file: !2135, line: 211, column: 5)
!12023 = distinct !DILexicalBlock(scope: !12006, file: !2135, line: 211, column: 5)
!12024 = !DILocation(line: 212, column: 32, scope: !12021)
!12025 = !DILocation(line: 213, column: 23, scope: !12021)
!12026 = !DILocation(line: 213, column: 32, scope: !12021)
!12027 = !DILocation(line: 215, column: 19, scope: !12028)
!12028 = distinct !DILexicalBlock(scope: !12021, file: !2135, line: 215, column: 13)
!12029 = !DILocation(line: 215, column: 15, scope: !12028)
!12030 = !DILocation(line: 215, column: 13, scope: !12021)
!12031 = !DILocation(line: 211, column: 40, scope: !12022)
!12032 = !DILocation(line: 211, column: 5, scope: !12023)
!12033 = distinct !{!12033, !12032, !12034}
!12034 = !DILocation(line: 218, column: 5, scope: !12023)
!12035 = !DILocation(line: 211, column: 57, scope: !12022)
!12036 = !DILocation(line: 212, column: 9, scope: !12021)
!12037 = !DILocation(line: 212, column: 45, scope: !12021)
!12038 = !DILocation(line: 212, column: 83, scope: !12021)
!12039 = !DILocation(line: 212, column: 121, scope: !12021)
!12040 = !DILocation(line: 212, column: 70, scope: !12021)
!12041 = !DILocation(line: 212, column: 108, scope: !12021)
!12042 = !DILocation(line: 212, column: 146, scope: !12021)
!12043 = !DILocation(line: 222, column: 49, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12045, file: !2135, line: 221, column: 84)
!12045 = distinct !DILexicalBlock(scope: !12046, file: !2135, line: 221, column: 9)
!12046 = distinct !DILexicalBlock(scope: !12047, file: !2135, line: 221, column: 9)
!12047 = distinct !DILexicalBlock(scope: !12048, file: !2135, line: 220, column: 25)
!12048 = distinct !DILexicalBlock(scope: !12006, file: !2135, line: 220, column: 9)
!12049 = !DILocation(line: 222, column: 13, scope: !12044)
!12050 = !DILocation(line: 222, column: 27, scope: !12044)
!12051 = !DILocation(line: 222, column: 36, scope: !12044)
!12052 = !DILocation(line: 224, column: 23, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12044, file: !2135, line: 224, column: 17)
!12054 = !DILocation(line: 224, column: 19, scope: !12053)
!12055 = !DILocation(line: 224, column: 17, scope: !12044)
!12056 = distinct !{!12056, !12057, !12058}
!12057 = !DILocation(line: 221, column: 9, scope: !12046)
!12058 = !DILocation(line: 227, column: 9, scope: !12046)
!12059 = !DILocation(line: 230, column: 1, scope: !12006)
!12060 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !2135, file: !2135, line: 253, type: !291, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12061 = !DILocation(line: 257, column: 26, scope: !12060)
!12062 = !DILocation(line: 259, column: 5, scope: !12060)
!12063 = !DILocation(line: 259, column: 19, scope: !12060)
!12064 = !DILocation(line: 259, column: 29, scope: !12060)
!12065 = !DILocation(line: 260, column: 5, scope: !12060)
!12066 = !DILocation(line: 260, column: 27, scope: !12060)
!12067 = !DILocation(line: 260, column: 93, scope: !12060)
!12068 = distinct !{!12068, !12065, !12069}
!12069 = !DILocation(line: 260, column: 98, scope: !12060)
!12070 = !DILocation(line: 261, column: 29, scope: !12060)
!12071 = !DILocation(line: 262, column: 5, scope: !12060)
!12072 = !DILocation(line: 262, column: 27, scope: !12060)
!12073 = !DILocation(line: 262, column: 93, scope: !12060)
!12074 = distinct !{!12074, !12071, !12075}
!12075 = !DILocation(line: 262, column: 98, scope: !12060)
!12076 = !DILocation(line: 264, column: 42, scope: !12060)
!12077 = !DILocation(line: 265, column: 48, scope: !12060)
!12078 = !DILocation(line: 267, column: 5, scope: !12060)
!12079 = !DILocation(line: 267, column: 27, scope: !12060)
!12080 = !DILocation(line: 267, column: 39, scope: !12060)
!12081 = !DILocation(line: 267, column: 65, scope: !12060)
!12082 = distinct !{!12082, !12078, !12083}
!12083 = !DILocation(line: 267, column: 70, scope: !12060)
!12084 = !DILocation(line: 269, column: 5, scope: !12060)
!12085 = !DILocation(line: 273, column: 8, scope: !12060)
!12086 = !DILocation(line: 275, column: 5, scope: !12060)
!12087 = !DILocation(line: 275, column: 27, scope: !12060)
!12088 = !DILocation(line: 275, column: 39, scope: !12060)
!12089 = !DILocation(line: 275, column: 65, scope: !12060)
!12090 = distinct !{!12090, !12086, !12091}
!12091 = !DILocation(line: 275, column: 70, scope: !12060)
!12092 = !DILocation(line: 278, column: 9, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12060, file: !2135, line: 278, column: 9)
!12094 = !DILocation(line: 278, column: 44, scope: !12093)
!12095 = !DILocation(line: 278, column: 9, scope: !12060)
!12096 = !DILocation(line: 279, column: 13, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12098, file: !2135, line: 279, column: 12)
!12098 = distinct !DILexicalBlock(scope: !12093, file: !2135, line: 278, column: 55)
!12099 = !DILocation(line: 279, column: 48, scope: !12097)
!12100 = !DILocation(line: 279, column: 56, scope: !12097)
!12101 = !DILocation(line: 0, scope: !12097)
!12102 = !DILocation(line: 288, column: 1, scope: !12060)
!12103 = distinct !DISubprogram(name: "custom_setEMI", scope: !2135, file: !2135, line: 294, type: !12104, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12104 = !DISubroutineType(types: !12105)
!12105 = !{!1402}
!12106 = !DILocation(line: 298, column: 5, scope: !12103)
!12107 = !DILocation(line: 300, column: 5, scope: !12103)
!12108 = !DILocation(line: 302, column: 20, scope: !12103)
!12109 = !DILocation(line: 302, column: 18, scope: !12103)
!12110 = !DILocation(line: 303, column: 20, scope: !12103)
!12111 = !DILocation(line: 303, column: 18, scope: !12103)
!12112 = !DILocation(line: 304, column: 20, scope: !12103)
!12113 = !DILocation(line: 304, column: 18, scope: !12103)
!12114 = !DILocation(line: 307, column: 5, scope: !12103)
!12115 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !2135, file: !2135, line: 312, type: !12104, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12116 = !DILocation(line: 319, column: 29, scope: !12115)
!12117 = !DILocation(line: 319, column: 5, scope: !12115)
!12118 = !DILocation(line: 319, column: 19, scope: !12115)
!12119 = !DILocation(line: 319, column: 27, scope: !12115)
!12120 = !DILocation(line: 320, column: 29, scope: !12115)
!12121 = !DILocation(line: 320, column: 19, scope: !12115)
!12122 = !DILocation(line: 320, column: 27, scope: !12115)
!12123 = !DILocation(line: 322, column: 30, scope: !12115)
!12124 = !DILocation(line: 322, column: 19, scope: !12115)
!12125 = !DILocation(line: 322, column: 28, scope: !12115)
!12126 = !DILocation(line: 324, column: 30, scope: !12115)
!12127 = !DILocation(line: 324, column: 19, scope: !12115)
!12128 = !DILocation(line: 324, column: 28, scope: !12115)
!12129 = !DILocation(line: 326, column: 31, scope: !12115)
!12130 = !DILocation(line: 326, column: 19, scope: !12115)
!12131 = !DILocation(line: 326, column: 29, scope: !12115)
!12132 = !DILocation(line: 327, column: 31, scope: !12115)
!12133 = !DILocation(line: 327, column: 19, scope: !12115)
!12134 = !DILocation(line: 327, column: 29, scope: !12115)
!12135 = !DILocation(line: 332, column: 30, scope: !12115)
!12136 = !DILocation(line: 332, column: 19, scope: !12115)
!12137 = !DILocation(line: 332, column: 28, scope: !12115)
!12138 = !DILocation(line: 333, column: 30, scope: !12115)
!12139 = !DILocation(line: 333, column: 19, scope: !12115)
!12140 = !DILocation(line: 333, column: 28, scope: !12115)
!12141 = !DILocation(line: 334, column: 30, scope: !12115)
!12142 = !DILocation(line: 334, column: 19, scope: !12115)
!12143 = !DILocation(line: 334, column: 28, scope: !12115)
!12144 = !DILocation(line: 336, column: 30, scope: !12115)
!12145 = !DILocation(line: 336, column: 19, scope: !12115)
!12146 = !DILocation(line: 336, column: 28, scope: !12115)
!12147 = !DILocation(line: 337, column: 30, scope: !12115)
!12148 = !DILocation(line: 337, column: 19, scope: !12115)
!12149 = !DILocation(line: 337, column: 28, scope: !12115)
!12150 = !DILocation(line: 338, column: 30, scope: !12115)
!12151 = !DILocation(line: 338, column: 19, scope: !12115)
!12152 = !DILocation(line: 338, column: 28, scope: !12115)
!12153 = !DILocation(line: 339, column: 30, scope: !12115)
!12154 = !DILocation(line: 339, column: 19, scope: !12115)
!12155 = !DILocation(line: 339, column: 28, scope: !12115)
!12156 = !DILocation(line: 341, column: 5, scope: !12115)
!12157 = !DILocation(line: 345, column: 5, scope: !12115)
!12158 = !DILocation(line: 345, column: 19, scope: !12115)
!12159 = !DILocation(line: 345, column: 28, scope: !12115)
!12160 = !DILocation(line: 346, column: 5, scope: !12115)
!12161 = !DILocation(line: 346, column: 28, scope: !12115)
!12162 = !DILocation(line: 346, column: 82, scope: !12115)
!12163 = distinct !{!12163, !12160, !12164}
!12164 = !DILocation(line: 346, column: 87, scope: !12115)
!12165 = !DILocation(line: 347, column: 28, scope: !12115)
!12166 = !DILocation(line: 348, column: 5, scope: !12115)
!12167 = !DILocation(line: 348, column: 28, scope: !12115)
!12168 = !DILocation(line: 348, column: 82, scope: !12115)
!12169 = distinct !{!12169, !12166, !12170}
!12170 = !DILocation(line: 348, column: 87, scope: !12115)
!12171 = !DILocation(line: 349, column: 28, scope: !12115)
!12172 = !DILocation(line: 351, column: 5, scope: !12115)
!12173 = !DILocation(line: 353, column: 5, scope: !12115)
!12174 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !2135, file: !2135, line: 358, type: !291, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12175 = !DILocation(line: 361, column: 36, scope: !12174)
!12176 = !DILocation(line: 361, column: 50, scope: !12174)
!12177 = !DILocation(line: 361, column: 34, scope: !12174)
!12178 = !DILocation(line: 362, column: 50, scope: !12174)
!12179 = !DILocation(line: 362, column: 34, scope: !12174)
!12180 = !DILocation(line: 363, column: 50, scope: !12174)
!12181 = !DILocation(line: 363, column: 34, scope: !12174)
!12182 = !DILocation(line: 364, column: 50, scope: !12174)
!12183 = !DILocation(line: 364, column: 34, scope: !12174)
!12184 = !DILocation(line: 365, column: 50, scope: !12174)
!12185 = !DILocation(line: 365, column: 34, scope: !12174)
!12186 = !DILocation(line: 366, column: 50, scope: !12174)
!12187 = !DILocation(line: 366, column: 34, scope: !12174)
!12188 = !DILocation(line: 367, column: 50, scope: !12174)
!12189 = !DILocation(line: 367, column: 34, scope: !12174)
!12190 = !DILocation(line: 368, column: 50, scope: !12174)
!12191 = !DILocation(line: 368, column: 34, scope: !12174)
!12192 = !DILocation(line: 369, column: 50, scope: !12174)
!12193 = !DILocation(line: 369, column: 34, scope: !12174)
!12194 = !DILocation(line: 370, column: 50, scope: !12174)
!12195 = !DILocation(line: 370, column: 34, scope: !12174)
!12196 = !DILocation(line: 371, column: 50, scope: !12174)
!12197 = !DILocation(line: 371, column: 34, scope: !12174)
!12198 = !DILocation(line: 372, column: 50, scope: !12174)
!12199 = !DILocation(line: 372, column: 34, scope: !12174)
!12200 = !DILocation(line: 373, column: 51, scope: !12174)
!12201 = !DILocation(line: 373, column: 35, scope: !12174)
!12202 = !DILocation(line: 374, column: 51, scope: !12174)
!12203 = !DILocation(line: 374, column: 35, scope: !12174)
!12204 = !DILocation(line: 375, column: 50, scope: !12174)
!12205 = !DILocation(line: 375, column: 34, scope: !12174)
!12206 = !DILocation(line: 376, column: 50, scope: !12174)
!12207 = !DILocation(line: 376, column: 34, scope: !12174)
!12208 = !DILocation(line: 377, column: 50, scope: !12174)
!12209 = !DILocation(line: 377, column: 34, scope: !12174)
!12210 = !DILocation(line: 378, column: 50, scope: !12174)
!12211 = !DILocation(line: 378, column: 34, scope: !12174)
!12212 = !DILocation(line: 379, column: 50, scope: !12174)
!12213 = !DILocation(line: 379, column: 34, scope: !12174)
!12214 = !DILocation(line: 380, column: 50, scope: !12174)
!12215 = !DILocation(line: 380, column: 34, scope: !12174)
!12216 = !DILocation(line: 382, column: 1, scope: !12174)
!12217 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !2135, file: !2135, line: 384, type: !291, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12218 = !DILocation(line: 387, column: 5, scope: !12217)
!12219 = !DILocation(line: 387, column: 27, scope: !12217)
!12220 = !DILocation(line: 387, column: 36, scope: !12217)
!12221 = !DILocation(line: 387, column: 76, scope: !12217)
!12222 = distinct !{!12222, !12218, !12223}
!12223 = !DILocation(line: 387, column: 84, scope: !12217)
!12224 = !DILocation(line: 388, column: 50, scope: !12217)
!12225 = !DILocation(line: 388, column: 19, scope: !12217)
!12226 = !DILocation(line: 388, column: 28, scope: !12217)
!12227 = !DILocation(line: 389, column: 50, scope: !12217)
!12228 = !DILocation(line: 389, column: 19, scope: !12217)
!12229 = !DILocation(line: 389, column: 28, scope: !12217)
!12230 = !DILocation(line: 390, column: 50, scope: !12217)
!12231 = !DILocation(line: 390, column: 19, scope: !12217)
!12232 = !DILocation(line: 390, column: 28, scope: !12217)
!12233 = !DILocation(line: 391, column: 50, scope: !12217)
!12234 = !DILocation(line: 391, column: 19, scope: !12217)
!12235 = !DILocation(line: 391, column: 28, scope: !12217)
!12236 = !DILocation(line: 392, column: 50, scope: !12217)
!12237 = !DILocation(line: 392, column: 19, scope: !12217)
!12238 = !DILocation(line: 392, column: 28, scope: !12217)
!12239 = !DILocation(line: 393, column: 50, scope: !12217)
!12240 = !DILocation(line: 393, column: 19, scope: !12217)
!12241 = !DILocation(line: 393, column: 28, scope: !12217)
!12242 = !DILocation(line: 394, column: 51, scope: !12217)
!12243 = !DILocation(line: 394, column: 19, scope: !12217)
!12244 = !DILocation(line: 394, column: 29, scope: !12217)
!12245 = !DILocation(line: 395, column: 51, scope: !12217)
!12246 = !DILocation(line: 395, column: 19, scope: !12217)
!12247 = !DILocation(line: 395, column: 29, scope: !12217)
!12248 = !DILocation(line: 396, column: 50, scope: !12217)
!12249 = !DILocation(line: 396, column: 19, scope: !12217)
!12250 = !DILocation(line: 396, column: 28, scope: !12217)
!12251 = !DILocation(line: 397, column: 50, scope: !12217)
!12252 = !DILocation(line: 397, column: 19, scope: !12217)
!12253 = !DILocation(line: 397, column: 28, scope: !12217)
!12254 = !DILocation(line: 398, column: 50, scope: !12217)
!12255 = !DILocation(line: 398, column: 19, scope: !12217)
!12256 = !DILocation(line: 398, column: 28, scope: !12217)
!12257 = !DILocation(line: 399, column: 50, scope: !12217)
!12258 = !DILocation(line: 399, column: 19, scope: !12217)
!12259 = !DILocation(line: 399, column: 28, scope: !12217)
!12260 = !DILocation(line: 400, column: 50, scope: !12217)
!12261 = !DILocation(line: 400, column: 19, scope: !12217)
!12262 = !DILocation(line: 400, column: 28, scope: !12217)
!12263 = !DILocation(line: 401, column: 50, scope: !12217)
!12264 = !DILocation(line: 401, column: 19, scope: !12217)
!12265 = !DILocation(line: 401, column: 28, scope: !12217)
!12266 = !DILocation(line: 402, column: 50, scope: !12217)
!12267 = !DILocation(line: 402, column: 19, scope: !12217)
!12268 = !DILocation(line: 402, column: 28, scope: !12217)
!12269 = !DILocation(line: 403, column: 50, scope: !12217)
!12270 = !DILocation(line: 403, column: 19, scope: !12217)
!12271 = !DILocation(line: 403, column: 28, scope: !12217)
!12272 = !DILocation(line: 404, column: 50, scope: !12217)
!12273 = !DILocation(line: 404, column: 19, scope: !12217)
!12274 = !DILocation(line: 404, column: 28, scope: !12217)
!12275 = !DILocation(line: 405, column: 50, scope: !12217)
!12276 = !DILocation(line: 405, column: 19, scope: !12217)
!12277 = !DILocation(line: 405, column: 28, scope: !12217)
!12278 = !DILocation(line: 406, column: 50, scope: !12217)
!12279 = !DILocation(line: 406, column: 19, scope: !12217)
!12280 = !DILocation(line: 406, column: 28, scope: !12217)
!12281 = !DILocation(line: 408, column: 1, scope: !12217)
!12282 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !2135, file: !2135, line: 410, type: !291, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12283 = !DILocation(line: 413, column: 29, scope: !12282)
!12284 = !DILocation(line: 413, column: 43, scope: !12282)
!12285 = !DILocation(line: 413, column: 51, scope: !12282)
!12286 = !DILocation(line: 413, column: 27, scope: !12282)
!12287 = !DILocation(line: 416, column: 19, scope: !12282)
!12288 = !DILocation(line: 416, column: 29, scope: !12282)
!12289 = !DILocation(line: 417, column: 5, scope: !12282)
!12290 = !DILocation(line: 417, column: 27, scope: !12282)
!12291 = !DILocation(line: 417, column: 93, scope: !12282)
!12292 = distinct !{!12292, !12289, !12293}
!12293 = !DILocation(line: 417, column: 98, scope: !12282)
!12294 = !DILocation(line: 418, column: 29, scope: !12282)
!12295 = !DILocation(line: 419, column: 5, scope: !12282)
!12296 = !DILocation(line: 419, column: 27, scope: !12282)
!12297 = !DILocation(line: 419, column: 93, scope: !12282)
!12298 = distinct !{!12298, !12295, !12299}
!12299 = !DILocation(line: 419, column: 98, scope: !12282)
!12300 = !DILocation(line: 421, column: 5, scope: !12282)
!12301 = !DILocation(line: 422, column: 5, scope: !12282)
!12302 = !DILocation(line: 422, column: 19, scope: !12282)
!12303 = !DILocation(line: 422, column: 28, scope: !12282)
!12304 = !DILocation(line: 423, column: 5, scope: !12282)
!12305 = !DILocation(line: 423, column: 28, scope: !12282)
!12306 = !DILocation(line: 423, column: 82, scope: !12282)
!12307 = distinct !{!12307, !12304, !12308}
!12308 = !DILocation(line: 423, column: 87, scope: !12282)
!12309 = !DILocation(line: 424, column: 28, scope: !12282)
!12310 = !DILocation(line: 425, column: 5, scope: !12282)
!12311 = !DILocation(line: 425, column: 28, scope: !12282)
!12312 = !DILocation(line: 425, column: 82, scope: !12282)
!12313 = distinct !{!12313, !12310, !12314}
!12314 = !DILocation(line: 425, column: 87, scope: !12282)
!12315 = !DILocation(line: 426, column: 28, scope: !12282)
!12316 = !DILocation(line: 428, column: 50, scope: !12282)
!12317 = !DILocation(line: 428, column: 19, scope: !12282)
!12318 = !DILocation(line: 428, column: 28, scope: !12282)
!12319 = !DILocation(line: 432, column: 1, scope: !12282)
!12320 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !2135, file: !2135, line: 434, type: !291, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12321 = !DILocation(line: 437, column: 5, scope: !12320)
!12322 = !DILocation(line: 440, column: 5, scope: !12320)
!12323 = !DILocation(line: 440, column: 27, scope: !12320)
!12324 = !DILocation(line: 440, column: 36, scope: !12320)
!12325 = !DILocation(line: 440, column: 76, scope: !12320)
!12326 = distinct !{!12326, !12322, !12327}
!12327 = !DILocation(line: 440, column: 84, scope: !12320)
!12328 = !DILocation(line: 441, column: 45, scope: !12320)
!12329 = !DILocation(line: 441, column: 54, scope: !12320)
!12330 = !DILocation(line: 441, column: 28, scope: !12320)
!12331 = !DILocation(line: 442, column: 19, scope: !12320)
!12332 = !DILocation(line: 442, column: 31, scope: !12320)
!12333 = !DILocation(line: 443, column: 5, scope: !12320)
!12334 = !DILocation(line: 443, column: 27, scope: !12320)
!12335 = !DILocation(line: 443, column: 39, scope: !12320)
!12336 = !DILocation(line: 443, column: 65, scope: !12320)
!12337 = distinct !{!12337, !12333, !12338}
!12338 = !DILocation(line: 443, column: 70, scope: !12320)
!12339 = !DILocation(line: 444, column: 19, scope: !12320)
!12340 = !DILocation(line: 444, column: 28, scope: !12320)
!12341 = !DILocation(line: 445, column: 5, scope: !12320)
!12342 = !DILocation(line: 445, column: 27, scope: !12320)
!12343 = !DILocation(line: 445, column: 91, scope: !12320)
!12344 = distinct !{!12344, !12341, !12345}
!12345 = !DILocation(line: 445, column: 96, scope: !12320)
!12346 = !DILocation(line: 447, column: 43, scope: !12320)
!12347 = !DILocation(line: 447, column: 51, scope: !12320)
!12348 = !DILocation(line: 447, column: 27, scope: !12320)
!12349 = !DILocation(line: 450, column: 1, scope: !12320)
!12350 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !2135, file: !2135, line: 452, type: !12351, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !12354)
!12351 = !DISubroutineType(types: !12352)
!12352 = !{!1092, !12353}
!12353 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !2138, line: 43, baseType: !2137)
!12354 = !{!12355, !12356}
!12355 = !DILocalVariable(name: "clock", arg: 1, scope: !12350, file: !2135, line: 452, type: !12353)
!12356 = !DILocalVariable(name: "delay", scope: !12350, file: !2135, line: 457, type: !60)
!12357 = !DILocation(line: 0, scope: !12350)
!12358 = !DILocation(line: 457, column: 5, scope: !12350)
!12359 = !DILocation(line: 457, column: 23, scope: !12350)
!12360 = !DILocation(line: 458, column: 9, scope: !12350)
!12361 = !DILocation(line: 465, column: 9, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12363, file: !2135, line: 458, column: 39)
!12363 = distinct !DILexicalBlock(scope: !12350, file: !2135, line: 458, column: 9)
!12364 = !DILocation(line: 465, column: 23, scope: !12362)
!12365 = !DILocation(line: 465, column: 32, scope: !12362)
!12366 = !DILocation(line: 466, column: 32, scope: !12362)
!12367 = !DILocation(line: 467, column: 9, scope: !12362)
!12368 = !DILocation(line: 467, column: 32, scope: !12362)
!12369 = !DILocation(line: 467, column: 86, scope: !12362)
!12370 = distinct !{!12370, !12367, !12371}
!12371 = !DILocation(line: 467, column: 91, scope: !12362)
!12372 = !DILocation(line: 468, column: 32, scope: !12362)
!12373 = !DILocation(line: 469, column: 9, scope: !12362)
!12374 = !DILocation(line: 469, column: 32, scope: !12362)
!12375 = !DILocation(line: 469, column: 86, scope: !12362)
!12376 = distinct !{!12376, !12373, !12377}
!12377 = !DILocation(line: 469, column: 91, scope: !12362)
!12378 = !DILocation(line: 470, column: 32, scope: !12362)
!12379 = !DILocation(line: 472, column: 20, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12362, file: !2135, line: 472, column: 9)
!12381 = !DILocation(line: 472, column: 25, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12380, file: !2135, line: 472, column: 9)
!12383 = !DILocation(line: 472, column: 31, scope: !12382)
!12384 = !DILocation(line: 472, column: 9, scope: !12380)
!12385 = !DILocation(line: 472, column: 44, scope: !12382)
!12386 = distinct !{!12386, !12384, !12387}
!12387 = !DILocation(line: 472, column: 47, scope: !12380)
!12388 = !DILocation(line: 478, column: 9, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12390, file: !2135, line: 477, column: 12)
!12390 = distinct !DILexicalBlock(scope: !12363, file: !2135, line: 475, column: 16)
!12391 = !DILocation(line: 483, column: 1, scope: !12350)
!12392 = distinct !DISubprogram(name: "emi_mask_master", scope: !2135, file: !2135, line: 487, type: !291, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12393 = !DILocation(line: 490, column: 30, scope: !12392)
!12394 = !DILocation(line: 490, column: 44, scope: !12392)
!12395 = !DILocation(line: 490, column: 53, scope: !12392)
!12396 = !DILocation(line: 490, column: 28, scope: !12392)
!12397 = !DILocation(line: 492, column: 1, scope: !12392)
!12398 = distinct !DISubprogram(name: "emi_unmask_master", scope: !2135, file: !2135, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!12399 = !DILocation(line: 497, column: 30, scope: !12398)
!12400 = !DILocation(line: 497, column: 44, scope: !12398)
!12401 = !DILocation(line: 497, column: 53, scope: !12398)
!12402 = !DILocation(line: 497, column: 28, scope: !12398)
!12403 = !DILocation(line: 500, column: 1, scope: !12398)
!12404 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !2300, file: !2300, line: 56, type: !9186, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !293)
!12405 = !DILocation(line: 61, column: 5, scope: !12404)
!12406 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !2300, file: !2300, line: 65, type: !9186, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !293)
!12407 = !DILocation(line: 70, column: 5, scope: !12406)
!12408 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !2300, file: !2300, line: 74, type: !291, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !293)
!12409 = !DILocation(line: 79, column: 9, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12411, file: !2300, line: 78, column: 12)
!12411 = distinct !DILexicalBlock(scope: !12408, file: !2300, line: 76, column: 9)
!12412 = !DILocation(line: 81, column: 1, scope: !12408)
!12413 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !2300, file: !2300, line: 83, type: !291, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !293)
!12414 = !DILocation(line: 88, column: 9, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12416, file: !2300, line: 87, column: 12)
!12416 = distinct !DILexicalBlock(scope: !12413, file: !2300, line: 85, column: 9)
!12417 = !DILocation(line: 90, column: 1, scope: !12413)
!12418 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !2300, file: !2300, line: 92, type: !291, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !293)
!12419 = !DILocation(line: 97, column: 9, scope: !12420)
!12420 = distinct !DILexicalBlock(scope: !12421, file: !2300, line: 96, column: 12)
!12421 = distinct !DILexicalBlock(scope: !12418, file: !2300, line: 94, column: 9)
!12422 = !DILocation(line: 99, column: 1, scope: !12418)
!12423 = distinct !DISubprogram(name: "peri_clk_26m", scope: !2300, file: !2300, line: 101, type: !291, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2299, retainedNodes: !293)
!12424 = !DILocation(line: 106, column: 9, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12426, file: !2300, line: 105, column: 12)
!12426 = distinct !DILexicalBlock(scope: !12423, file: !2300, line: 103, column: 9)
!12427 = !DILocation(line: 108, column: 1, scope: !12423)
!12428 = distinct !DISubprogram(name: "__io_putchar", scope: !2312, file: !2312, line: 80, type: !12429, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !12431)
!12429 = !DISubroutineType(types: !12430)
!12430 = !{!7, !7}
!12431 = !{!12432}
!12432 = !DILocalVariable(name: "ch", arg: 1, scope: !12428, file: !2312, line: 80, type: !7)
!12433 = !DILocation(line: 0, scope: !12428)
!12434 = !DILocation(line: 87, column: 35, scope: !12428)
!12435 = !DILocation(line: 87, column: 5, scope: !12428)
!12436 = !DILocation(line: 88, column: 5, scope: !12428)
!12437 = distinct !DISubprogram(name: "main", scope: !2312, file: !2312, line: 367, type: !11932, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !293)
!12438 = !DILocation(line: 370, column: 5, scope: !12437)
!12439 = !DILocation(line: 372, column: 5, scope: !12437)
!12440 = !DILocation(line: 375, column: 5, scope: !12437)
!12441 = !DILocation(line: 319, column: 3, scope: !12442, inlinedAt: !12443)
!12442 = distinct !DISubprogram(name: "__enable_irq", scope: !7798, file: !7798, line: 317, type: !291, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !293)
!12443 = distinct !DILocation(line: 378, column: 5, scope: !12437)
!12444 = !{i64 669350}
!12445 = !DILocation(line: 496, column: 3, scope: !12446, inlinedAt: !12447)
!12446 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !7798, file: !7798, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !293)
!12447 = distinct !DILocation(line: 379, column: 5, scope: !12437)
!12448 = !{i64 673625}
!12449 = !DILocation(line: 382, column: 5, scope: !12437)
!12450 = !DILocation(line: 384, column: 5, scope: !12437)
!12451 = !DILocation(line: 385, column: 5, scope: !12437)
!12452 = !DILocation(line: 388, column: 5, scope: !12437)
!12453 = !DILocation(line: 390, column: 5, scope: !12437)
!12454 = distinct !{!12454, !12453, !12455}
!12455 = !DILocation(line: 390, column: 14, scope: !12437)
!12456 = distinct !DISubprogram(name: "SystemClock_Config", scope: !2312, file: !2312, line: 119, type: !291, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !293)
!12457 = !DILocation(line: 121, column: 5, scope: !12456)
!12458 = !DILocation(line: 122, column: 1, scope: !12456)
!12459 = distinct !DISubprogram(name: "prvSetupHardware", scope: !2312, file: !2312, line: 129, type: !291, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !293)
!12460 = !DILocation(line: 132, column: 5, scope: !12459)
!12461 = !DILocation(line: 133, column: 5, scope: !12459)
!12462 = !DILocation(line: 134, column: 5, scope: !12459)
!12463 = !DILocation(line: 135, column: 1, scope: !12459)
!12464 = distinct !DISubprogram(name: "spi_master_transfer_data_two_boards_example", scope: !2312, file: !2312, line: 185, type: !291, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !12465)
!12465 = !{!12466, !12467, !12468, !12469, !12470, !12474, !12475, !12484, !12492}
!12466 = !DILocalVariable(name: "i", scope: !12464, file: !2312, line: 187, type: !61)
!12467 = !DILocalVariable(name: "status_receive", scope: !12464, file: !2312, line: 188, type: !460)
!12468 = !DILocalVariable(name: "poweron_cmd", scope: !12464, file: !2312, line: 189, type: !460)
!12469 = !DILocalVariable(name: "poweroff_cmd", scope: !12464, file: !2312, line: 190, type: !460)
!12470 = !DILocalVariable(name: "cfg_wr_cmd", scope: !12464, file: !2312, line: 191, type: !12471)
!12471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 72, elements: !12472)
!12472 = !{!12473}
!12473 = !DISubrange(count: 9)
!12474 = !DILocalVariable(name: "cfg_rd_cmd", scope: !12464, file: !2312, line: 192, type: !12471)
!12475 = !DILocalVariable(name: "spi_config", scope: !12464, file: !2312, line: 193, type: !12476)
!12476 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_config_t", file: !872, line: 580, baseType: !12477)
!12477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 574, size: 160, elements: !12478)
!12478 = !{!12479, !12480, !12481, !12482, !12483}
!12479 = !DIDerivedType(tag: DW_TAG_member, name: "clock_frequency", scope: !12477, file: !872, line: 575, baseType: !61, size: 32)
!12480 = !DIDerivedType(tag: DW_TAG_member, name: "slave_port", scope: !12477, file: !872, line: 576, baseType: !6141, size: 32, offset: 32)
!12481 = !DIDerivedType(tag: DW_TAG_member, name: "bit_order", scope: !12477, file: !872, line: 577, baseType: !6143, size: 32, offset: 64)
!12482 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !12477, file: !872, line: 578, baseType: !6145, size: 32, offset: 96)
!12483 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !12477, file: !872, line: 579, baseType: !6147, size: 32, offset: 128)
!12484 = !DILocalVariable(name: "advanced_config", scope: !12464, file: !2312, line: 194, type: !12485)
!12485 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_advanced_config_t", file: !872, line: 589, baseType: !12486)
!12486 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 584, size: 128, elements: !12487)
!12487 = !{!12488, !12489, !12490, !12491}
!12488 = !DIDerivedType(tag: DW_TAG_member, name: "byte_order", scope: !12486, file: !872, line: 585, baseType: !6221, size: 32)
!12489 = !DIDerivedType(tag: DW_TAG_member, name: "chip_polarity", scope: !12486, file: !872, line: 586, baseType: !6223, size: 32, offset: 32)
!12490 = !DIDerivedType(tag: DW_TAG_member, name: "get_tick", scope: !12486, file: !872, line: 587, baseType: !6225, size: 32, offset: 64)
!12491 = !DIDerivedType(tag: DW_TAG_member, name: "sample_select", scope: !12486, file: !872, line: 588, baseType: !6227, size: 32, offset: 96)
!12492 = !DILocalVariable(name: "send_and_receive_config", scope: !12464, file: !2312, line: 195, type: !12493)
!12493 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_master_send_and_receive_config_t", file: !872, line: 616, baseType: !12494)
!12494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 611, size: 128, elements: !12495)
!12495 = !{!12496, !12497, !12498, !12499}
!12496 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !12494, file: !872, line: 612, baseType: !762, size: 32)
!12497 = !DIDerivedType(tag: DW_TAG_member, name: "send_length", scope: !12494, file: !872, line: 613, baseType: !61, size: 32, offset: 32)
!12498 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !12494, file: !872, line: 614, baseType: !762, size: 32, offset: 64)
!12499 = !DIDerivedType(tag: DW_TAG_member, name: "receive_length", scope: !12494, file: !872, line: 615, baseType: !61, size: 32, offset: 96)
!12500 = !DILocation(line: 0, scope: !12464)
!12501 = !DILocation(line: 188, column: 5, scope: !12464)
!12502 = !DILocation(line: 189, column: 5, scope: !12464)
!12503 = !DILocation(line: 190, column: 5, scope: !12464)
!12504 = !DILocation(line: 191, column: 5, scope: !12464)
!12505 = !DILocation(line: 191, column: 13, scope: !12464)
!12506 = !DILocation(line: 192, column: 5, scope: !12464)
!12507 = !DILocation(line: 192, column: 13, scope: !12464)
!12508 = !DILocation(line: 193, column: 5, scope: !12464)
!12509 = !DILocation(line: 193, column: 29, scope: !12464)
!12510 = !DILocation(line: 194, column: 5, scope: !12464)
!12511 = !DILocation(line: 194, column: 38, scope: !12464)
!12512 = !DILocation(line: 195, column: 5, scope: !12464)
!12513 = !DILocation(line: 195, column: 46, scope: !12464)
!12514 = !DILocation(line: 197, column: 5, scope: !12464)
!12515 = !DILocation(line: 199, column: 5, scope: !12464)
!12516 = !DILocation(line: 200, column: 5, scope: !12464)
!12517 = !DILocation(line: 203, column: 5, scope: !12464)
!12518 = !DILocation(line: 204, column: 5, scope: !12464)
!12519 = !DILocation(line: 205, column: 5, scope: !12464)
!12520 = !DILocation(line: 206, column: 5, scope: !12464)
!12521 = !DILocation(line: 207, column: 5, scope: !12464)
!12522 = !DILocation(line: 208, column: 5, scope: !12464)
!12523 = !DILocation(line: 209, column: 5, scope: !12464)
!12524 = !DILocation(line: 210, column: 5, scope: !12464)
!12525 = !DILocation(line: 211, column: 5, scope: !12464)
!12526 = !DILocation(line: 214, column: 5, scope: !12464)
!12527 = !DILocation(line: 215, column: 16, scope: !12464)
!12528 = !DILocation(line: 215, column: 26, scope: !12464)
!12529 = !DILocation(line: 216, column: 16, scope: !12464)
!12530 = !DILocation(line: 216, column: 27, scope: !12464)
!12531 = !DILocation(line: 217, column: 16, scope: !12464)
!12532 = !DILocation(line: 217, column: 32, scope: !12464)
!12533 = !DILocation(line: 218, column: 16, scope: !12464)
!12534 = !DILocation(line: 218, column: 22, scope: !12464)
!12535 = !DILocation(line: 219, column: 16, scope: !12464)
!12536 = !DILocation(line: 219, column: 25, scope: !12464)
!12537 = !DILocation(line: 220, column: 37, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 220, column: 9)
!12539 = !DILocation(line: 220, column: 34, scope: !12538)
!12540 = !DILocation(line: 220, column: 9, scope: !12464)
!12541 = !DILocation(line: 224, column: 21, scope: !12464)
!12542 = !DILocation(line: 224, column: 32, scope: !12464)
!12543 = !DILocation(line: 225, column: 21, scope: !12464)
!12544 = !DILocation(line: 225, column: 35, scope: !12464)
!12545 = !DILocation(line: 226, column: 21, scope: !12464)
!12546 = !DILocation(line: 226, column: 30, scope: !12464)
!12547 = !DILocation(line: 227, column: 21, scope: !12464)
!12548 = !DILocation(line: 227, column: 35, scope: !12464)
!12549 = !DILocation(line: 228, column: 37, scope: !12550)
!12550 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 228, column: 9)
!12551 = !DILocation(line: 228, column: 34, scope: !12550)
!12552 = !DILocation(line: 228, column: 9, scope: !12464)
!12553 = !DILocation(line: 232, column: 37, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 232, column: 9)
!12555 = !DILocation(line: 232, column: 34, scope: !12554)
!12556 = !DILocation(line: 232, column: 9, scope: !12464)
!12557 = !DILocation(line: 239, column: 5, scope: !12464)
!12558 = !DILocation(line: 240, column: 17, scope: !12464)
!12559 = !DILocation(line: 241, column: 37, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 241, column: 9)
!12561 = !DILocation(line: 241, column: 34, scope: !12560)
!12562 = !DILocation(line: 241, column: 9, scope: !12464)
!12563 = !DILocation(line: 246, column: 9, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 245, column: 8)
!12565 = !DILocation(line: 247, column: 15, scope: !12464)
!12566 = !DILocation(line: 247, column: 30, scope: !12464)
!12567 = !DILocation(line: 247, column: 68, scope: !12464)
!12568 = !DILocation(line: 247, column: 5, scope: !12564)
!12569 = distinct !{!12569, !12570, !12571}
!12570 = !DILocation(line: 245, column: 5, scope: !12464)
!12571 = !DILocation(line: 247, column: 105, scope: !12464)
!12572 = !DILocation(line: 250, column: 5, scope: !12464)
!12573 = !DILocation(line: 251, column: 19, scope: !12464)
!12574 = !DILocation(line: 252, column: 5, scope: !12464)
!12575 = !DILocation(line: 252, column: 19, scope: !12464)
!12576 = !DILocation(line: 253, column: 5, scope: !12464)
!12577 = !DILocation(line: 253, column: 19, scope: !12464)
!12578 = !DILocation(line: 254, column: 5, scope: !12464)
!12579 = !DILocation(line: 254, column: 19, scope: !12464)
!12580 = !DILocation(line: 255, column: 5, scope: !12464)
!12581 = !DILocation(line: 255, column: 19, scope: !12464)
!12582 = !DILocation(line: 256, column: 5, scope: !12464)
!12583 = !DILocation(line: 256, column: 19, scope: !12464)
!12584 = !DILocation(line: 257, column: 5, scope: !12464)
!12585 = !DILocation(line: 257, column: 19, scope: !12464)
!12586 = !DILocation(line: 258, column: 5, scope: !12464)
!12587 = !DILocation(line: 258, column: 19, scope: !12464)
!12588 = !DILocation(line: 259, column: 5, scope: !12464)
!12589 = !DILocation(line: 259, column: 19, scope: !12464)
!12590 = !DILocation(line: 260, column: 37, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 260, column: 9)
!12592 = !DILocation(line: 260, column: 34, scope: !12591)
!12593 = !DILocation(line: 260, column: 9, scope: !12464)
!12594 = !DILocation(line: 265, column: 9, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 264, column: 8)
!12596 = !DILocation(line: 266, column: 15, scope: !12464)
!12597 = !DILocation(line: 266, column: 30, scope: !12464)
!12598 = !DILocation(line: 266, column: 75, scope: !12464)
!12599 = !DILocation(line: 266, column: 5, scope: !12595)
!12600 = distinct !{!12600, !12601, !12602}
!12601 = !DILocation(line: 264, column: 5, scope: !12464)
!12602 = !DILocation(line: 266, column: 119, scope: !12464)
!12603 = !DILocation(line: 269, column: 5, scope: !12464)
!12604 = !DILocation(line: 270, column: 30, scope: !12464)
!12605 = !DILocation(line: 271, column: 33, scope: !12464)
!12606 = !DILocation(line: 272, column: 5, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 272, column: 5)
!12608 = !DILocation(line: 273, column: 42, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12610, file: !2312, line: 272, column: 52)
!12610 = distinct !DILexicalBlock(scope: !12607, file: !2312, line: 272, column: 5)
!12611 = !DILocation(line: 273, column: 39, scope: !12609)
!12612 = !DILocation(line: 273, column: 9, scope: !12609)
!12613 = !DILocation(line: 273, column: 37, scope: !12609)
!12614 = !DILocation(line: 272, column: 48, scope: !12610)
!12615 = !DILocation(line: 272, column: 19, scope: !12610)
!12616 = distinct !{!12616, !12606, !12617}
!12617 = !DILocation(line: 274, column: 5, scope: !12607)
!12618 = !DILocation(line: 275, column: 37, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 275, column: 9)
!12620 = !DILocation(line: 275, column: 34, scope: !12619)
!12621 = !DILocation(line: 275, column: 9, scope: !12464)
!12622 = !DILocation(line: 276, column: 9, scope: !12623)
!12623 = distinct !DILexicalBlock(scope: !12619, file: !2312, line: 275, column: 130)
!12624 = !DILocation(line: 277, column: 5, scope: !12623)
!12625 = !DILocation(line: 278, column: 5, scope: !12464)
!12626 = !DILocation(line: 278, column: 12, scope: !12464)
!12627 = !DILocation(line: 278, column: 37, scope: !12464)
!12628 = distinct !{!12628, !12625, !12629}
!12629 = !DILocation(line: 278, column: 46, scope: !12464)
!12630 = !DILocation(line: 280, column: 9, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 279, column: 8)
!12632 = !DILocation(line: 281, column: 15, scope: !12464)
!12633 = !DILocation(line: 281, column: 30, scope: !12464)
!12634 = !DILocation(line: 281, column: 73, scope: !12464)
!12635 = !DILocation(line: 281, column: 5, scope: !12631)
!12636 = distinct !{!12636, !12637, !12638}
!12637 = !DILocation(line: 279, column: 5, scope: !12464)
!12638 = !DILocation(line: 281, column: 115, scope: !12464)
!12639 = !DILocation(line: 284, column: 5, scope: !12464)
!12640 = !DILocation(line: 285, column: 5, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 285, column: 5)
!12642 = !DILocation(line: 286, column: 9, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12644, file: !2312, line: 285, column: 52)
!12644 = distinct !DILexicalBlock(scope: !12641, file: !2312, line: 285, column: 5)
!12645 = !DILocation(line: 286, column: 37, scope: !12643)
!12646 = !DILocation(line: 285, column: 48, scope: !12644)
!12647 = !DILocation(line: 285, column: 19, scope: !12644)
!12648 = distinct !{!12648, !12640, !12649}
!12649 = !DILocation(line: 287, column: 5, scope: !12641)
!12650 = !DILocation(line: 290, column: 5, scope: !12464)
!12651 = !DILocation(line: 293, column: 5, scope: !12464)
!12652 = !DILocation(line: 294, column: 19, scope: !12464)
!12653 = !DILocation(line: 295, column: 5, scope: !12464)
!12654 = !DILocation(line: 295, column: 19, scope: !12464)
!12655 = !DILocation(line: 296, column: 5, scope: !12464)
!12656 = !DILocation(line: 296, column: 19, scope: !12464)
!12657 = !DILocation(line: 297, column: 5, scope: !12464)
!12658 = !DILocation(line: 297, column: 19, scope: !12464)
!12659 = !DILocation(line: 298, column: 5, scope: !12464)
!12660 = !DILocation(line: 298, column: 19, scope: !12464)
!12661 = !DILocation(line: 299, column: 5, scope: !12464)
!12662 = !DILocation(line: 299, column: 19, scope: !12464)
!12663 = !DILocation(line: 300, column: 5, scope: !12464)
!12664 = !DILocation(line: 300, column: 19, scope: !12464)
!12665 = !DILocation(line: 301, column: 5, scope: !12464)
!12666 = !DILocation(line: 301, column: 19, scope: !12464)
!12667 = !DILocation(line: 302, column: 5, scope: !12464)
!12668 = !DILocation(line: 302, column: 19, scope: !12464)
!12669 = !DILocation(line: 303, column: 37, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 303, column: 9)
!12671 = !DILocation(line: 303, column: 34, scope: !12670)
!12672 = !DILocation(line: 303, column: 9, scope: !12464)
!12673 = !DILocation(line: 308, column: 9, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 307, column: 8)
!12675 = !DILocation(line: 309, column: 15, scope: !12464)
!12676 = !DILocation(line: 309, column: 30, scope: !12464)
!12677 = !DILocation(line: 309, column: 75, scope: !12464)
!12678 = !DILocation(line: 309, column: 5, scope: !12674)
!12679 = distinct !{!12679, !12680, !12681}
!12680 = !DILocation(line: 307, column: 5, scope: !12464)
!12681 = !DILocation(line: 309, column: 119, scope: !12464)
!12682 = !DILocation(line: 311, column: 5, scope: !12464)
!12683 = !DILocation(line: 314, column: 5, scope: !12464)
!12684 = !DILocation(line: 315, column: 30, scope: !12464)
!12685 = !DILocation(line: 316, column: 32, scope: !12464)
!12686 = !DILocation(line: 317, column: 29, scope: !12464)
!12687 = !DILocation(line: 317, column: 39, scope: !12464)
!12688 = !DILocation(line: 318, column: 29, scope: !12464)
!12689 = !DILocation(line: 318, column: 41, scope: !12464)
!12690 = !DILocation(line: 319, column: 29, scope: !12464)
!12691 = !DILocation(line: 319, column: 44, scope: !12464)
!12692 = !DILocation(line: 320, column: 29, scope: !12464)
!12693 = !DILocation(line: 320, column: 44, scope: !12464)
!12694 = !DILocation(line: 321, column: 37, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 321, column: 9)
!12696 = !DILocation(line: 321, column: 34, scope: !12695)
!12697 = !DILocation(line: 321, column: 9, scope: !12464)
!12698 = !DILocation(line: 322, column: 9, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12695, file: !2312, line: 321, column: 116)
!12700 = !DILocation(line: 323, column: 5, scope: !12699)
!12701 = !DILocation(line: 324, column: 5, scope: !12464)
!12702 = !DILocation(line: 324, column: 12, scope: !12464)
!12703 = !DILocation(line: 324, column: 37, scope: !12464)
!12704 = distinct !{!12704, !12701, !12705}
!12705 = !DILocation(line: 324, column: 46, scope: !12464)
!12706 = !DILocation(line: 325, column: 5, scope: !12464)
!12707 = !DILocation(line: 326, column: 5, scope: !12464)
!12708 = !DILocation(line: 327, column: 9, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 326, column: 8)
!12710 = !DILocation(line: 328, column: 15, scope: !12464)
!12711 = !DILocation(line: 328, column: 30, scope: !12464)
!12712 = !DILocation(line: 328, column: 73, scope: !12464)
!12713 = !DILocation(line: 328, column: 5, scope: !12709)
!12714 = distinct !{!12714, !12707, !12715}
!12715 = !DILocation(line: 328, column: 115, scope: !12464)
!12716 = !DILocation(line: 331, column: 5, scope: !12464)
!12717 = !DILocation(line: 332, column: 5, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 332, column: 5)
!12719 = !DILocation(line: 332, column: 48, scope: !12720)
!12720 = distinct !DILexicalBlock(scope: !12718, file: !2312, line: 332, column: 5)
!12721 = !DILocation(line: 332, column: 19, scope: !12720)
!12722 = distinct !{!12722, !12717, !12723}
!12723 = !DILocation(line: 337, column: 5, scope: !12718)
!12724 = !DILocation(line: 333, column: 13, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12726, file: !2312, line: 333, column: 13)
!12726 = distinct !DILexicalBlock(scope: !12720, file: !2312, line: 332, column: 52)
!12727 = !DILocation(line: 333, column: 47, scope: !12725)
!12728 = !DILocation(line: 333, column: 41, scope: !12725)
!12729 = !DILocation(line: 333, column: 13, scope: !12726)
!12730 = !DILocation(line: 338, column: 5, scope: !12464)
!12731 = !DILocation(line: 340, column: 5, scope: !12464)
!12732 = !DILocation(line: 343, column: 5, scope: !12464)
!12733 = !DILocation(line: 344, column: 18, scope: !12464)
!12734 = !DILocation(line: 345, column: 37, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 345, column: 9)
!12736 = !DILocation(line: 345, column: 34, scope: !12735)
!12737 = !DILocation(line: 345, column: 9, scope: !12464)
!12738 = !DILocation(line: 350, column: 9, scope: !12739)
!12739 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 349, column: 8)
!12740 = !DILocation(line: 351, column: 15, scope: !12464)
!12741 = !DILocation(line: 351, column: 30, scope: !12464)
!12742 = !DILocation(line: 351, column: 68, scope: !12464)
!12743 = !DILocation(line: 351, column: 5, scope: !12739)
!12744 = distinct !{!12744, !12745, !12746}
!12745 = !DILocation(line: 349, column: 5, scope: !12464)
!12746 = !DILocation(line: 351, column: 105, scope: !12464)
!12747 = !DILocation(line: 354, column: 5, scope: !12464)
!12748 = !DILocation(line: 355, column: 37, scope: !12749)
!12749 = distinct !DILexicalBlock(scope: !12464, file: !2312, line: 355, column: 9)
!12750 = !DILocation(line: 355, column: 34, scope: !12749)
!12751 = !DILocation(line: 355, column: 9, scope: !12464)
!12752 = !DILocation(line: 359, column: 5, scope: !12464)
!12753 = !DILocation(line: 360, column: 5, scope: !12464)
!12754 = !DILocation(line: 361, column: 5, scope: !12464)
!12755 = !DILocation(line: 362, column: 5, scope: !12464)
!12756 = !DILocation(line: 365, column: 1, scope: !12464)
!12757 = distinct !DISubprogram(name: "spi_master_dma_callback", scope: !2312, file: !2312, line: 143, type: !965, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !12758)
!12758 = !{!12759, !12760}
!12759 = !DILocalVariable(name: "event", arg: 1, scope: !12757, file: !2312, line: 143, type: !967)
!12760 = !DILocalVariable(name: "user_data", arg: 2, scope: !12757, file: !2312, line: 143, type: !88)
!12761 = !DILocation(line: 0, scope: !12757)
!12762 = !DILocation(line: 145, column: 5, scope: !12757)
!12763 = !DILocation(line: 146, column: 30, scope: !12757)
!12764 = !DILocation(line: 147, column: 1, scope: !12757)
!12765 = distinct !DISubprogram(name: "spi_query_slave_status", scope: !2312, file: !2312, line: 155, type: !12766, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !12768)
!12766 = !DISubroutineType(types: !12767)
!12767 = !{null, !762}
!12768 = !{!12769, !12770, !12771, !12773}
!12769 = !DILocalVariable(name: "status", arg: 1, scope: !12765, file: !2312, line: 155, type: !762)
!12770 = !DILocalVariable(name: "status_cmd", scope: !12765, file: !2312, line: 157, type: !460)
!12771 = !DILocalVariable(name: "status_receive", scope: !12765, file: !2312, line: 158, type: !12772)
!12772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 16, elements: !465)
!12773 = !DILocalVariable(name: "spi_send_and_receive_config", scope: !12765, file: !2312, line: 159, type: !12493)
!12774 = !DILocation(line: 0, scope: !12765)
!12775 = !DILocation(line: 157, column: 5, scope: !12765)
!12776 = !DILocation(line: 157, column: 13, scope: !12765)
!12777 = !DILocation(line: 158, column: 5, scope: !12765)
!12778 = !DILocation(line: 158, column: 13, scope: !12765)
!12779 = !DILocation(line: 159, column: 5, scope: !12765)
!12780 = !DILocation(line: 159, column: 46, scope: !12765)
!12781 = !DILocation(line: 166, column: 5, scope: !12765)
!12782 = !DILocation(line: 166, column: 23, scope: !12765)
!12783 = !DILocation(line: 167, column: 33, scope: !12765)
!12784 = !DILocation(line: 167, column: 48, scope: !12765)
!12785 = !DILocation(line: 168, column: 33, scope: !12765)
!12786 = !DILocation(line: 168, column: 45, scope: !12765)
!12787 = !DILocation(line: 169, column: 33, scope: !12765)
!12788 = !DILocation(line: 169, column: 43, scope: !12765)
!12789 = !DILocation(line: 170, column: 33, scope: !12765)
!12790 = !DILocation(line: 170, column: 48, scope: !12765)
!12791 = !DILocation(line: 171, column: 37, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12765, file: !2312, line: 171, column: 9)
!12793 = !DILocation(line: 171, column: 34, scope: !12792)
!12794 = !DILocation(line: 171, column: 9, scope: !12765)
!12795 = !DILocation(line: 172, column: 9, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12792, file: !2312, line: 171, column: 124)
!12797 = !DILocation(line: 173, column: 9, scope: !12796)
!12798 = !DILocation(line: 176, column: 42, scope: !12765)
!12799 = !DILocation(line: 176, column: 5, scope: !12765)
!12800 = !DILocation(line: 177, column: 15, scope: !12765)
!12801 = !DILocation(line: 177, column: 13, scope: !12765)
!12802 = !DILocation(line: 178, column: 1, scope: !12765)
!12803 = distinct !DISubprogram(name: "plain_log_uart_init", scope: !2312, file: !2312, line: 96, type: !291, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !12804)
!12804 = !{!12805}
!12805 = !DILocalVariable(name: "uart_config", scope: !12803, file: !2312, line: 98, type: !12806)
!12806 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !654, line: 378, baseType: !12807)
!12807 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 373, size: 128, elements: !12808)
!12808 = !{!12809, !12810, !12811, !12812}
!12809 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !12807, file: !654, line: 374, baseType: !4783, size: 32)
!12810 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !12807, file: !654, line: 375, baseType: !4833, size: 32, offset: 32)
!12811 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !12807, file: !654, line: 376, baseType: !4835, size: 32, offset: 64)
!12812 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !12807, file: !654, line: 377, baseType: !4837, size: 32, offset: 96)
!12813 = !DILocation(line: 98, column: 5, scope: !12803)
!12814 = !DILocation(line: 98, column: 23, scope: !12803)
!12815 = !DILocation(line: 101, column: 5, scope: !12803)
!12816 = !DILocation(line: 102, column: 5, scope: !12803)
!12817 = !DILocation(line: 103, column: 5, scope: !12803)
!12818 = !DILocation(line: 104, column: 5, scope: !12803)
!12819 = !DILocation(line: 107, column: 17, scope: !12803)
!12820 = !DILocation(line: 107, column: 26, scope: !12803)
!12821 = !DILocation(line: 108, column: 17, scope: !12803)
!12822 = !DILocation(line: 108, column: 29, scope: !12803)
!12823 = !DILocation(line: 109, column: 17, scope: !12803)
!12824 = !DILocation(line: 109, column: 26, scope: !12803)
!12825 = !DILocation(line: 110, column: 17, scope: !12803)
!12826 = !DILocation(line: 110, column: 24, scope: !12803)
!12827 = !DILocation(line: 111, column: 5, scope: !12803)
!12828 = !DILocation(line: 112, column: 1, scope: !12803)
!12829 = distinct !DISubprogram(name: "_close", scope: !2329, file: !2329, line: 5, type: !12429, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !12830)
!12830 = !{!12831}
!12831 = !DILocalVariable(name: "file", arg: 1, scope: !12829, file: !2329, line: 5, type: !7)
!12832 = !DILocation(line: 0, scope: !12829)
!12833 = !DILocation(line: 7, column: 5, scope: !12829)
!12834 = distinct !DISubprogram(name: "_fstat", scope: !2329, file: !2329, line: 10, type: !12835, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !12883)
!12835 = !DISubroutineType(types: !12836)
!12836 = !{!7, !7, !12837}
!12837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12838, size: 32)
!12838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !12839, line: 27, size: 704, elements: !12840)
!12839 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!12840 = !{!12841, !12844, !12847, !12850, !12853, !12856, !12859, !12860, !12863, !12873, !12874, !12875, !12878, !12881}
!12841 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !12838, file: !12839, line: 29, baseType: !12842, size: 16)
!12842 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !2333, line: 161, baseType: !12843)
!12843 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2373, line: 56, baseType: !1588)
!12844 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !12838, file: !12839, line: 30, baseType: !12845, size: 16, offset: 16)
!12845 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !2333, line: 139, baseType: !12846)
!12846 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2373, line: 75, baseType: !977)
!12847 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !12838, file: !12839, line: 31, baseType: !12848, size: 32, offset: 32)
!12848 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !2333, line: 189, baseType: !12849)
!12849 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2373, line: 90, baseType: !63)
!12850 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !12838, file: !12839, line: 32, baseType: !12851, size: 16, offset: 64)
!12851 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !2333, line: 194, baseType: !12852)
!12852 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2373, line: 209, baseType: !977)
!12853 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !12838, file: !12839, line: 33, baseType: !12854, size: 16, offset: 80)
!12854 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !2333, line: 165, baseType: !12855)
!12855 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2373, line: 60, baseType: !977)
!12856 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !12838, file: !12839, line: 34, baseType: !12857, size: 16, offset: 96)
!12857 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !2333, line: 169, baseType: !12858)
!12858 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2373, line: 63, baseType: !977)
!12859 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !12838, file: !12839, line: 35, baseType: !12842, size: 16, offset: 112)
!12860 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !12838, file: !12839, line: 36, baseType: !12861, size: 32, offset: 128)
!12861 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2333, line: 157, baseType: !12862)
!12862 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2373, line: 102, baseType: !2389)
!12863 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !12838, file: !12839, line: 42, baseType: !12864, size: 128, offset: 192)
!12864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !12865, line: 47, size: 128, elements: !12866)
!12865 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!12866 = !{!12867, !12872}
!12867 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !12864, file: !12865, line: 48, baseType: !12868, size: 64)
!12868 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !12869, line: 42, baseType: !12870)
!12869 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!12870 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !64, line: 200, baseType: !12871)
!12871 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!12872 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !12864, file: !12865, line: 49, baseType: !2374, size: 32, offset: 64)
!12873 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !12838, file: !12839, line: 43, baseType: !12864, size: 128, offset: 320)
!12874 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !12838, file: !12839, line: 44, baseType: !12864, size: 128, offset: 448)
!12875 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !12838, file: !12839, line: 45, baseType: !12876, size: 32, offset: 576)
!12876 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !2333, line: 102, baseType: !12877)
!12877 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2373, line: 34, baseType: !2374)
!12878 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !12838, file: !12839, line: 46, baseType: !12879, size: 32, offset: 608)
!12879 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !2333, line: 97, baseType: !12880)
!12880 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2373, line: 30, baseType: !2374)
!12881 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !12838, file: !12839, line: 48, baseType: !12882, size: 64, offset: 640)
!12882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2374, size: 64, elements: !465)
!12883 = !{!12884, !12885}
!12884 = !DILocalVariable(name: "file", arg: 1, scope: !12834, file: !2329, line: 10, type: !7)
!12885 = !DILocalVariable(name: "st", arg: 2, scope: !12834, file: !2329, line: 10, type: !12837)
!12886 = !DILocation(line: 0, scope: !12834)
!12887 = !DILocation(line: 12, column: 5, scope: !12834)
!12888 = distinct !DISubprogram(name: "_isatty", scope: !2329, file: !2329, line: 15, type: !12429, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !12889)
!12889 = !{!12890}
!12890 = !DILocalVariable(name: "file", arg: 1, scope: !12888, file: !2329, line: 15, type: !7)
!12891 = !DILocation(line: 0, scope: !12888)
!12892 = !DILocation(line: 17, column: 5, scope: !12888)
!12893 = distinct !DISubprogram(name: "_lseek", scope: !2329, file: !2329, line: 20, type: !12894, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !12896)
!12894 = !DISubroutineType(types: !12895)
!12895 = !{!7, !7, !7, !7}
!12896 = !{!12897, !12898, !12899}
!12897 = !DILocalVariable(name: "file", arg: 1, scope: !12893, file: !2329, line: 20, type: !7)
!12898 = !DILocalVariable(name: "ptr", arg: 2, scope: !12893, file: !2329, line: 20, type: !7)
!12899 = !DILocalVariable(name: "dir", arg: 3, scope: !12893, file: !2329, line: 20, type: !7)
!12900 = !DILocation(line: 0, scope: !12893)
!12901 = !DILocation(line: 22, column: 5, scope: !12893)
!12902 = distinct !DISubprogram(name: "_open", scope: !2329, file: !2329, line: 25, type: !12903, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !12905)
!12903 = !DISubroutineType(types: !12904)
!12904 = !{!7, !2367, !7, !7}
!12905 = !{!12906, !12907, !12908}
!12906 = !DILocalVariable(name: "name", arg: 1, scope: !12902, file: !2329, line: 25, type: !2367)
!12907 = !DILocalVariable(name: "flags", arg: 2, scope: !12902, file: !2329, line: 25, type: !7)
!12908 = !DILocalVariable(name: "mode", arg: 3, scope: !12902, file: !2329, line: 25, type: !7)
!12909 = !DILocation(line: 0, scope: !12902)
!12910 = !DILocation(line: 27, column: 5, scope: !12902)
!12911 = distinct !DISubprogram(name: "_read", scope: !2329, file: !2329, line: 30, type: !12912, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !12914)
!12912 = !DISubroutineType(types: !12913)
!12913 = !{!7, !7, !2334, !7}
!12914 = !{!12915, !12916, !12917}
!12915 = !DILocalVariable(name: "file", arg: 1, scope: !12911, file: !2329, line: 30, type: !7)
!12916 = !DILocalVariable(name: "ptr", arg: 2, scope: !12911, file: !2329, line: 30, type: !2334)
!12917 = !DILocalVariable(name: "len", arg: 3, scope: !12911, file: !2329, line: 30, type: !7)
!12918 = !DILocation(line: 0, scope: !12911)
!12919 = !DILocation(line: 32, column: 5, scope: !12911)
!12920 = distinct !DISubprogram(name: "_getpid", scope: !2329, file: !2329, line: 48, type: !11932, scopeLine: 49, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !293)
!12921 = !DILocation(line: 50, column: 5, scope: !12920)
!12922 = distinct !DISubprogram(name: "_kill", scope: !2329, file: !2329, line: 56, type: !12923, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !12925)
!12923 = !DISubroutineType(types: !12924)
!12924 = !{!7, !7, !7}
!12925 = !{!12926, !12927}
!12926 = !DILocalVariable(name: "pid", arg: 1, scope: !12922, file: !2329, line: 56, type: !7)
!12927 = !DILocalVariable(name: "sig", arg: 2, scope: !12922, file: !2329, line: 56, type: !7)
!12928 = !DILocation(line: 0, scope: !12922)
!12929 = !DILocation(line: 58, column: 5, scope: !12922)
!12930 = distinct !DISubprogram(name: "_exit", scope: !2329, file: !2329, line: 61, type: !12429, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !12931)
!12931 = !{!12932}
!12932 = !DILocalVariable(name: "val", arg: 1, scope: !12930, file: !2329, line: 61, type: !7)
!12933 = !DILocation(line: 0, scope: !12930)
!12934 = !DILocation(line: 63, column: 5, scope: !12930)
!12935 = !DILocation(line: 0, scope: !2328)
!12936 = !DILocation(line: 73, column: 5, scope: !2328)
!12937 = !{i64 1127}
!12938 = !DILocation(line: 75, column: 14, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !2328, file: !2329, line: 75, column: 9)
!12940 = !DILocation(line: 75, column: 11, scope: !12939)
!12941 = !DILocation(line: 75, column: 9, scope: !2328)
!12942 = !DILocation(line: 81, column: 32, scope: !12943)
!12943 = distinct !DILexicalBlock(scope: !2328, file: !2329, line: 81, column: 9)
!12944 = !DILocation(line: 81, column: 15, scope: !12943)
!12945 = !DILocation(line: 92, column: 1, scope: !2328)
!12946 = !DILocation(line: 81, column: 9, scope: !2328)
!12947 = distinct !DISubprogram(name: "_write", scope: !2329, file: !2329, line: 94, type: !12912, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !12948)
!12948 = !{!12949, !12950, !12951, !12952}
!12949 = !DILocalVariable(name: "file", arg: 1, scope: !12947, file: !2329, line: 94, type: !7)
!12950 = !DILocalVariable(name: "ptr", arg: 2, scope: !12947, file: !2329, line: 94, type: !2334)
!12951 = !DILocalVariable(name: "len", arg: 3, scope: !12947, file: !2329, line: 94, type: !7)
!12952 = !DILocalVariable(name: "DataIdx", scope: !12947, file: !2329, line: 96, type: !7)
!12953 = !DILocation(line: 0, scope: !12947)
!12954 = !DILocation(line: 98, column: 31, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12956, file: !2329, line: 98, column: 5)
!12956 = distinct !DILexicalBlock(scope: !12947, file: !2329, line: 98, column: 5)
!12957 = !DILocation(line: 98, column: 5, scope: !12956)
!12958 = !DILocation(line: 99, column: 26, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12955, file: !2329, line: 98, column: 49)
!12960 = !DILocation(line: 99, column: 22, scope: !12959)
!12961 = !DILocation(line: 99, column: 9, scope: !12959)
!12962 = !DILocation(line: 98, column: 45, scope: !12955)
!12963 = distinct !{!12963, !12957, !12964}
!12964 = !DILocation(line: 100, column: 5, scope: !12956)
!12965 = !DILocation(line: 101, column: 5, scope: !12947)
!12966 = distinct !DISubprogram(name: "SysTick_Set", scope: !2533, file: !2533, line: 62, type: !3679, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !12967)
!12967 = !{!12968, !12969}
!12968 = !DILocalVariable(name: "ticks", arg: 1, scope: !12966, file: !2533, line: 62, type: !61)
!12969 = !DILocalVariable(name: "val", scope: !12966, file: !2533, line: 64, type: !61)
!12970 = !DILocation(line: 0, scope: !12966)
!12971 = !DILocation(line: 67, column: 16, scope: !12972)
!12972 = distinct !DILexicalBlock(scope: !12966, file: !2533, line: 67, column: 9)
!12973 = !DILocation(line: 67, column: 21, scope: !12972)
!12974 = !DILocation(line: 67, column: 9, scope: !12966)
!12975 = !DILocation(line: 72, column: 20, scope: !12966)
!12976 = !DILocation(line: 75, column: 19, scope: !12966)
!12977 = !DILocation(line: 79, column: 20, scope: !12966)
!12978 = !DILocation(line: 80, column: 20, scope: !12966)
!12979 = !DILocation(line: 83, column: 19, scope: !12966)
!12980 = !DILocation(line: 85, column: 5, scope: !12966)
!12981 = !DILocation(line: 86, column: 1, scope: !12966)
!12982 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !2533, file: !2533, line: 95, type: !291, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !293)
!12983 = !DILocation(line: 97, column: 28, scope: !12982)
!12984 = !DILocation(line: 98, column: 1, scope: !12982)
!12985 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !2533, file: !2533, line: 107, type: !3931, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !293)
!12986 = !DILocation(line: 109, column: 12, scope: !12985)
!12987 = !DILocation(line: 109, column: 5, scope: !12985)
!12988 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2533, file: !2533, line: 119, type: !291, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !12989)
!12989 = !{!12990}
!12990 = !DILocalVariable(name: "cm_mux_sel", scope: !12988, file: !2533, line: 121, type: !460)
!12991 = !DILocation(line: 121, column: 38, scope: !12988)
!12992 = !DILocation(line: 121, column: 26, scope: !12988)
!12993 = !DILocation(line: 0, scope: !12988)
!12994 = !DILocation(line: 123, column: 5, scope: !12988)
!12995 = !DILocation(line: 132, column: 13, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12988, file: !2533, line: 123, column: 25)
!12997 = !DILocation(line: 140, column: 13, scope: !12996)
!12998 = !DILocation(line: 0, scope: !12996)
!12999 = !DILocation(line: 146, column: 26, scope: !13000)
!13000 = distinct !DILexicalBlock(scope: !12988, file: !2533, line: 146, column: 9)
!13001 = !DILocation(line: 146, column: 50, scope: !13000)
!13002 = !DILocation(line: 146, column: 41, scope: !13000)
!13003 = !DILocation(line: 148, column: 25, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !13000, file: !2533, line: 147, column: 52)
!13005 = !DILocation(line: 149, column: 5, scope: !13004)
!13006 = !DILocation(line: 150, column: 1, scope: !12988)
!13007 = distinct !DISubprogram(name: "SystemInit", scope: !2533, file: !2533, line: 158, type: !291, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !293)
!13008 = !DILocation(line: 162, column: 16, scope: !13007)
!13009 = !DILocation(line: 166, column: 16, scope: !13007)
!13010 = !DILocation(line: 169, column: 16, scope: !13007)
!13011 = !DILocation(line: 172, column: 1, scope: !13007)
!13012 = distinct !DISubprogram(name: "CachePreInit", scope: !2533, file: !2533, line: 180, type: !291, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2532, retainedNodes: !293)
!13013 = !DILocation(line: 183, column: 22, scope: !13012)
!13014 = !DILocation(line: 186, column: 21, scope: !13012)
!13015 = !DILocation(line: 189, column: 21, scope: !13012)
!13016 = !DILocation(line: 192, column: 29, scope: !13012)
!13017 = !DILocation(line: 193, column: 33, scope: !13012)
!13018 = !DILocation(line: 195, column: 28, scope: !13012)
!13019 = !DILocation(line: 200, column: 30, scope: !13012)
!13020 = !DILocation(line: 214, column: 1, scope: !13012)
